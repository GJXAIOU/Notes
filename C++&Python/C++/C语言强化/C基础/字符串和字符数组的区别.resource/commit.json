{"compress":true,"commitItems":[["18bc57c1-9e00-44d9-badd-05582df21b9b",1545223018271,"我们先来直观地感受下字符串数组与字符串指针变量：\n\n```java\n    char s1[] = \"helloworld\";\n    char *s2 = \"helloworld\";\n```\n\n（第一行是字符串数组，第二行是字符串指针变量）\n\n 区别1：\n\n> 字符串指针变量本身是一个变量，用于存放字符串的首地址。而字符串本身是存放在以该首地址为首的一块连续的内存空间中并以‘\\0’作为串的结束。\n> \n> 字符数组是由于若干个数组元素组成的，它可用来存放整个字符串。\n\n区别2：\n\n> 对字符串指针方式 char *ps=\"C Language\"; 定义时可以写为：\n> \n> ```java\n> char *ps;\n> ps=\"C Language\";\n> ```\n> \n> 而对数组方式： static char st[]={\"C Language\"}; 只能对字符数组的各元素逐个赋值,不能写为：\n> \n> ```java\n> char st[20];\n> st={\"C Language\"};\n> ```\n> \n> 这是因为，字符串指针变量只是一个指向字符串首地址的指针变量，我们可以对指针变量进行赋值，确定其指向的地址空间；\n> \n> 而字符串数组在定义时便在内存中为其分配了空间，也就是说，我们不能随意的改变这个数组的地址。\n\n区别3：\n\n> 我们通过一个小程序来认识这个区别。\n> \n> ```cpp\n> #include <stdio.h>\n> #include <string.h>\n> \n> int main()\n> {\n>     char c1[] =\"helloworld\";\n>     char *c2 = \"helloworld\";\n> \n>     printf(\"sizeof(s1) :  %d %d\\n\", sizeof(c1), sizeof(c2));\n>     printf(\"strlen(s2) :  %d %d\\n\", strlen(c1), strlen(c2));\n> \n>     return 0;\n> }\n> ```\n> \n> 这段程序运行的结果是：\n> \n> ![](https://img-blog.csdn.net/20170513232809126?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvWk05NzAzMDc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)\n> \n> \"helloword\"一共10个字符，所以strlen的值都为10；\n> \n> 差别体现在sizeof的值。用字符串数组定义的\"helloword\"占11个字节，是因为\"helloword\"加上结尾的\"\\0\"一共十一个char型字符，每个char型字符占1个字节；\n> \n>     而用字符串指针变量定义时，sizeof的值仅为4个字节，这是因为s2是一个指针，在32位系统中，地址占4个字节。",[[1545222996987,["gjx16@GJXAIOU",[[1,0,"\n"]],[0,0],[1,1]]],[1545222997121,["gjx16@GJXAIOU",[[1,0,"\n"]],[1,1],[2,2]]],[1545222997250,["gjx16@GJXAIOU",[[1,2,"\n"]],[2,2],[3,3]]],[1545222997369,["gjx16@GJXAIOU",[[1,3,"\n"]],[3,3],[4,4]]],[1545223000278,["gjx16@GJXAIOU",[[-1,1,""],[1,1,"#"],[-1,127," "],[1,128," "],[-1,386," "],[1,387," "],[-1,680,"   "],[1,683,"   "],[-1,711,"   "],[1,714,"   "],[-1,745,"   "],[1,748,"   "],[-1,770," "],[1,771," "],[-1,808,"   "],[1,811,"   "],[-1,833," "],[1,834," "],[-1,874,"   "],[1,877,"   "],[-1,1242,"   "],[1,1245,"   "]],[1,1],[2,2]]],[1545223013887,["gjx16@GJXAIOU",[[1,2,"# 字符串和字符数组的区别"]],[2,2],[15,15]]],[1545223027054,["gjx16@GJXAIOU",[[-1,47,"java"]],[51,51],[47,47]]],[1545223029310,["gjx16@GJXAIOU",[[1,47,"cpp"]],[47,47],[50,50]]],[1545223041136,["gjx16@GJXAIOU",[[1,80,"//字符串数组"]],[80,80],[87,87]]],[1545223053282,["gjx16@GJXAIOU",[[1,116,"//字符串指针变量"]],[116,116],[125,125]]],[1545223059211,["gjx16@GJXAIOU",[[-1,131,"（第一行是字符串数组，第二行是字符串指针变量）"]],[154,154],[131,131]]],[1545223059329,["gjx16@GJXAIOU",[[-1,132,"\n"]],[131,131],[130,130]]],[1545223059963,["gjx16@GJXAIOU",[[-1,131,"\n"]],[130,130],[129,129]]],[1545223067009,["gjx16@GJXAIOU",[[1,131,"**"],[1,136,"**"]],[131,136],[131,140]]],[1545223069117,["gjx16@GJXAIOU",[[-1,143," "]],[144,144],[143,143]]],[1545223071234,["gjx16@GJXAIOU",[[-1,212,">"]],[213,213],[212,212]]],[1545223071353,["gjx16@GJXAIOU",[[-1,211,"\n"]],[212,212],[211,211]]],[1545223079915,["gjx16@GJXAIOU",[[-1,213,">"]],[214,214],[213,213]]],[1545223081746,["gjx16@GJXAIOU",[[-1,212,"\n"]],[213,213],[212,212]]],[1545223083702,["gjx16@GJXAIOU",[[1,212,"、】"]],[212,212],[214,214]]],[1545223085169,["gjx16@GJXAIOU",[[-1,212,"、】"]],[214,214],[212,212]]],[1545223086117,["gjx16@GJXAIOU",[[1,212,"\n"]],[212,212],[213,213]]],[1545223088359,["gjx16@GJXAIOU",[[-1,142,">"]],[143,143],[142,142]]],[1545223093871,["gjx16@GJXAIOU",[[1,142,"  - "]],[142,142],[146,146]]],[1545223097091,["gjx16@GJXAIOU",[[1,216,"-"]],[216,216],[217,217]]],[1545223097205,["gjx16@GJXAIOU",[[1,218," "]],[217,217],[218,218]]],[1545223100305,["gjx16@GJXAIOU",[[-1,218," "]],[219,219],[218,218]]],[1545223104164,["gjx16@GJXAIOU",[[-1,142,"  "]],[144,144],[142,142]]],[1545223106993,["gjx16@GJXAIOU",[[-1,133," "]],[134,134],[133,133]]],[1545223113886,["gjx16@GJXAIOU",[[1,247,"**"],[1,251,"**"]],[247,251],[247,255]]],[1545223118416,["gjx16@GJXAIOU",[[-1,257,">"]],[258,258],[257,257]]],[1545223118743,["gjx16@GJXAIOU",[[-1,256,"\n"]],[257,257],[256,256]]],[1545223119837,["gjx16@GJXAIOU",[[-1,298,"> "]],[300,300],[298,298]]],[1545223120584,["gjx16@GJXAIOU",[[-1,299,">"]],[300,300],[299,299]]],[1545223121451,["gjx16@GJXAIOU",[[-1,308,">"]],[309,309],[308,308]]],[1545223122305,["gjx16@GJXAIOU",[[-1,319,">"]],[320,320],[319,319]]],[1545223123360,["gjx16@GJXAIOU",[[-1,337,">"]],[338,338],[337,337]]],[1545223124227,["gjx16@GJXAIOU",[[-1,342,">"]],[343,343],[342,342]]],[1545223129460,["gjx16@GJXAIOU",[[-1,299," "]],[300,300],[299,299]]],[1545223130840,["gjx16@GJXAIOU",[[-1,336," "]],[337,337],[336,336]]],[1545223134164,["gjx16@GJXAIOU",[[-1,302,"java"]],[306,306],[302,302]]],[1545223136152,["gjx16@GJXAIOU",[[1,302,"cpp"]],[302,302],[305,305]]],[1545223139410,["gjx16@GJXAIOU",[[-1,342," "]],[343,343],[342,342]]],[1545223142202,["gjx16@GJXAIOU",[[-1,405,"> "]],[407,407],[405,405]]],[1545223143216,["gjx16@GJXAIOU",[[-1,341,">"]],[342,342],[341,341]]],[1545223146121,["gjx16@GJXAIOU",[[-1,405,"> `"]],[408,408],[405,405]]],[1545223148561,["gjx16@GJXAIOU",[[1,407,"`"]],[405,405],[406,406]]],[1545223151916,["gjx16@GJXAIOU",[[-1,449,"> "]],[451,451],[449,449]]],[1545223155184,["gjx16@GJXAIOU",[[-1,453,">"]],[454,454],[453,453]]],[1545223155336,["gjx16@GJXAIOU",[[-1,452,"\n"]],[453,453],[452,452]]],[1545223158904,["gjx16@GJXAIOU",[[-1,428,"> "]],[430,430],[428,428]]],[1545223160721,["gjx16@GJXAIOU",[[-1,413,">"]],[414,414],[413,413]]],[1545223161872,["gjx16@GJXAIOU",[[-1,412,"\n"]],[413,413],[412,412]]],[1545223163418,["gjx16@GJXAIOU",[[1,412,"\n"]],[412,412],[413,413]]],[1545223165851,["gjx16@GJXAIOU",[[-1,445,"\n"]],[446,446],[445,445]]],[1545223167117,["gjx16@GJXAIOU",[[1,445,"\n"]],[445,445],[446,446]]],[1545223175448,["gjx16@GJXAIOU",[[-1,404,"\n"]],[405,405],[404,404]]],[1545223176560,["gjx16@GJXAIOU",[[1,404,"\n"]],[404,404],[405,405]]],[1545223180202,["gjx16@GJXAIOU",[[-1,405,"```java"],[1,412,"1"]],[405,412],[406,406]]],[1545223180429,["gjx16@GJXAIOU",[[1,406,"``"]],[406,406],[408,408]]],[1545223181424,["gjx16@GJXAIOU",[[-1,405,"1``"]],[408,408],[405,405]]],[1545223182373,["gjx16@GJXAIOU",[[1,405,"```"]],[405,405],[408,408]]],[1545223182399,["gjx16@GJXAIOU",[[1,408,"language\n```\n"]],[408,408],[408,416]]],[1545223183970,["gjx16@GJXAIOU",[[-1,408,"language"],[1,416,"c"]],[408,416],[409,409]]],[1545223184259,["gjx16@GJXAIOU",[[1,409,"pp"]],[409,409],[411,411]]],[1545223185001,["gjx16@GJXAIOU",[[1,412,"\n"]],[411,411],[412,412]]],[1545223191321,["gjx16@GJXAIOU",[[-1,418," char st[20];\nst={\"C Language\"};"]],[418,450],[418,418]]],[1545223193002,["gjx16@GJXAIOU",[[1,412," char st[20];\nst={\"C Language\"};"]],[412,412],[444,444]]],[1545223195072,["gjx16@GJXAIOU",[[-1,451,"``` "]],[455,455],[451,451]]],[1545223195200,["gjx16@GJXAIOU",[[-1,451,"\n"]],[451,451],[450,450]]],[1545223195340,["gjx16@GJXAIOU",[[-1,450,"\n"]],[450,450],[449,449]]],[1545223199256,["gjx16@GJXAIOU",[[-1,450,"> "]],[452,452],[450,450]]],[1545223202028,["gjx16@GJXAIOU",[[-1,506,">"]],[507,507],[506,506]]],[1545223202148,["gjx16@GJXAIOU",[[-1,505,"\n"]],[506,506],[505,505]]],[1545223203603,["gjx16@GJXAIOU",[[1,505,"\n"]],[505,505],[506,506]]],[1545223206000,["gjx16@GJXAIOU",[[-1,508,">"]],[509,509],[508,508]]],[1545223206818,["gjx16@GJXAIOU",[[-1,507,"\n"]],[508,508],[507,507]]],[1545223208392,["gjx16@GJXAIOU",[[1,507,"\n  "]],[507,507],[510,510]]],[1545223213459,["gjx16@GJXAIOU",[[-1,564,">"]],[565,565],[564,564]]],[1545223215608,["gjx16@GJXAIOU",[[-1,583,"> "]],[585,585],[583,583]]],[1545223225445,["gjx16@GJXAIOU",[[-1,586,"```cpp\n> #include <stdio.h>\n> #include <string.h>\n> \n> int main()\n> {\n>     char c1[] =\"helloworld\";\n>     char *c2 = \"helloworld\";\n> \n>     printf(\"sizeof(s1) :  %d %d\\n\", sizeof(c1), sizeof(c2));\n>     printf(\"strlen(s2) :  %d %d\\n\", strlen(c1), strlen(c2));\n> \n>     return 0;\n> }\n> ```\n> \n> "]],[583,878],[583,583]]],[1545223246852,["gjx16@GJXAIOU",[[1,583," ```cpp\n #include <stdio.h>\n #include <string.h>\n\n int main()\n {\n char c1[] = \"helloworld\";\n char *c2 = \"helloworld\";\n\n printf(\"sizeof(s1) :  %d %d\\n\", sizeof(c1), sizeof(c2));\n printf(\"strlen(s2) :  %d %d\\n\", strlen(c1), strlen(c2));\n\n return 0;\n }\n ```"]],[583,583],[837,837]]],[1545223249930,["gjx16@GJXAIOU",[[-1,583," "]],[584,584],[583,583]]],[1545223252248,["gjx16@GJXAIOU",[[-1,832," "]],[832,833],[832,832]]],[1545223263920,["gjx16@GJXAIOU",[[-1,850,"> \n> ![](https://img-blog.csdn.net/20170513232809126?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvWk05NzAzMDc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)\n> "]],[850,1036],[850,850]]],[1545223980010,["gjx16@GJXAIOU",[[1,850,"sizeof(s1) :  11 4\nstrlen(s2) :  10 10"]],[850,850],[888,888]]],[1545223982616,["gjx16@GJXAIOU",[[1,850,"`"]],[850,850],[851,851]]],[1545223986076,["gjx16@GJXAIOU",[[1,869,"`"]],[869,869],[870,870]]],[1545223987057,["gjx16@GJXAIOU",[[1,890,"`"]],[890,890],[891,891]]],[1545223990370,["gjx16@GJXAIOU",[[1,871,"`"]],[871,871],[872,872]]],[1545223991883,["gjx16@GJXAIOU",[[-1,893,">"]],[894,894],[893,893]]],[1545223993291,["gjx16@GJXAIOU",[[1,893,"\n "]],[893,893],[895,895]]],[1545223996336,["gjx16@GJXAIOU",[[-1,931,">"]],[932,932],[931,931]]],[1545223998280,["gjx16@GJXAIOU",[[-1,933,">"]],[934,934],[933,933]]],[1545224000184,["gjx16@GJXAIOU",[[-1,1027,">"]],[1028,1028],[1027,1027]]],[1545224002855,["gjx16@GJXAIOU",[[-1,1029,"> "]],[1031,1031],[1029,1029]]]],null,"gjx16@GJXAIOU"]]}