{"compress":true,"commitItems":[["8e9801e7-13d6-418a-acf3-d01cf14dcb7c",1537618208092,"",[[1537618158329,["gjx16@GJXAIOU",[[1,0,"# day10 内存管理\n\n\n\n"]],[0,0],[15,15]]]],null,"gjx16@GJXAIOU"],["9b0705f1-5cd2-4129-8883-05e8d09351b9",1537670188351,"# day10 内存管理\n\n\n\n",[[1537670176252,["gjx16@GJXAIOU",[[1,14,"## bian"]],[14,14],[21,21]]],[1537670177511,["gjx16@GJXAIOU",[[-1,17,"bian"]],[21,21],[17,17]]],[1537670182757,["gjx16@GJXAIOU",[[1,17,"变量作用域"]],[17,17],[22,22]]],[1537670183464,["gjx16@GJXAIOU",[[1,24,"\n"]],[22,22],[23,23]]],[1537670183857,["gjx16@GJXAIOU",[[1,25,"\n"]],[23,23],[24,24]]],[1537670186923,["gjx16@GJXAIOU",[[1,24,"一个"]],[24,24],[26,26]]],[1537670217989,["gjx16@GJXAIOU",[[1,26,"C语言变量的作用域可以是代码块，作用域就是函数作用域或者文件作用域"]],[26,26],[59,59]]],[1537670218798,["gjx16@GJXAIOU",[[1,61,"\n"]],[59,59],[60,60]]],[1537670242068,["gjx16@GJXAIOU",[[1,60,"代码块：{}之间的一段代码；"]],[60,60],[74,74]]],[1537670242867,["gjx16@GJXAIOU",[[1,76,"\n"]],[74,74],[75,75]]],[1537670243023,["gjx16@GJXAIOU",[[1,77,"\n"]],[75,75],[76,76]]],[1537670824732,["gjx16@GJXAIOU",[[1,76,"其他长须"]],[76,76],[80,80]]],[1537670836852,["gjx16@GJXAIOU",[[-1,76,"其他长须"]],[80,80],[76,76]]],[1537670843344,["gjx16@GJXAIOU",[[1,76,"文件作用域；"]],[76,76],[82,82]]],[1537670845125,["gjx16@GJXAIOU",[[-1,81,"；"]],[82,82],[81,81]]],[1537670846063,["gjx16@GJXAIOU",[[1,81,"："]],[81,81],[82,82]]],[1537670846591,["gjx16@GJXAIOU",[[1,84,"\n"]],[82,82],[83,83]]],[1537670852220,["gjx16@GJXAIOU",[[1,76,"**"],[1,82,"**"]],[76,82],[76,86]]],[1537670861294,["gjx16@GJXAIOU",[[-1,88,"\n"],[1,89,"如果"]],[88,88],[90,90]]],[1537670870431,["gjx16@GJXAIOU",[[1,90,"一个变量在文件"]],[90,90],[97,97]]],[1537670871674,["gjx16@GJXAIOU",[[-1,95,"文件"]],[97,97],[95,95]]],[1537670877136,["gjx16@GJXAIOU",[[1,95,"其他的代码文件袋"]],[95,95],[103,103]]],[1537670878018,["gjx16@GJXAIOU",[[-1,102,"袋"]],[103,103],[102,102]]],[1537670879267,["gjx16@GJXAIOU",[[1,102,"中国"]],[102,102],[104,104]]],[1537670880332,["gjx16@GJXAIOU",[[-1,103,"国"]],[104,104],[103,103]]],[1537670907237,["gjx16@GJXAIOU",[[1,103,"已经定义了，可以在本程序中使用，但是使用前要使用"]],[103,103],[127,127]]],[1537670925095,["gjx16@GJXAIOU",[[1,127,"关键字：extern"]],[127,127],[137,137]]],[1537670928342,["gjx16@GJXAIOU",[[1,137,"\n\n"]],[137,137],[138,138]]],[1537670943623,["gjx16@GJXAIOU",[[-1,138,"\n"],[1,139,"l"]],[138,138],[139,139]]],[1537670944186,["gjx16@GJXAIOU",[[1,139,"ir"]],[139,139],[141,141]]],[1537670944773,["gjx16@GJXAIOU",[[-1,139,"ir"]],[141,141],[139,139]]],[1537670946119,["gjx16@GJXAIOU",[[-1,138,"l"],[1,139,"\n"]],[139,139],[138,138]]],[1537670948554,["gjx16@GJXAIOU",[[-1,138,"\n"],[1,139,"例如"]],[138,138],[140,140]]],[1537670951454,["gjx16@GJXAIOU",[[1,140,"：·"]],[140,140],[142,142]]],[1537670952252,["gjx16@GJXAIOU",[[-1,141,"·"]],[142,142],[141,141]]],[1537670953920,["gjx16@GJXAIOU",[[1,141,"``"]],[141,141],[143,143]]],[1537670965653,["gjx16@GJXAIOU",[[1,142,"extern int age"]],[142,142],[156,156]]],[1537670968020,["gjx16@GJXAIOU",[[1,157," "]],[157,157],[158,158]]],[1537670971098,["gjx16@GJXAIOU",[[1,158,"//you"]],[158,158],[163,163]]],[1537670972250,["gjx16@GJXAIOU",[[-1,160,"you"]],[163,163],[160,160]]],[1537671011092,["gjx16@GJXAIOU",[[1,160,"有一个int型变量age已经在其他文件中定义了，这里就直接使用管理"]],[160,160],[193,193]]],[1537671012056,["gjx16@GJXAIOU",[[-1,191,"管理"]],[193,193],[191,191]]],[1537671013766,["gjx16@GJXAIOU",[[1,191,"了；"]],[191,191],[193,193]]],[1537671051707,["gjx16@GJXAIOU",[[1,193,"\n\n"]],[193,193],[194,194]]],[1537671071947,["gjx16@GJXAIOU",[[1,23,"全局变量和局部变量"]],[23,23],[32,32]]],[1537671073220,["gjx16@GJXAIOU",[[1,33,"\n"]],[32,32],[33,33]]],[1537671088563,["gjx16@GJXAIOU",[[1,85,"分"]],[85,85],[86,86]]],[1537671094665,["gjx16@GJXAIOU",[[-1,85,"分"]],[86,86],[85,85]]],[1537671098329,["gjx16@GJXAIOU",[[-1,204,"\n"],[1,205,"`"]],[204,204],[205,205]]],[1537671098901,["gjx16@GJXAIOU",[[1,205,"``"]],[205,205],[207,207]]],[1537671098925,["gjx16@GJXAIOU",[[1,207,"language\n```\n"]],[207,207],[207,215]]],[1537671100587,["gjx16@GJXAIOU",[[-1,207,"language"],[1,215,"c"]],[207,215],[208,208]]],[1537671101432,["gjx16@GJXAIOU",[[1,209,"\n"]],[208,208],[209,209]]],[1537671103397,["gjx16@GJXAIOU",[[1,209,"f"]],[209,209],[210,210]]],[1537671104251,["gjx16@GJXAIOU",[[-1,209,"f"]],[210,210],[209,209]]],[1537671116874,["gjx16@GJXAIOU",[[1,209,"int main()"]],[209,209],[219,219]]],[1537671117336,["gjx16@GJXAIOU",[[1,220,"\n"]],[219,219],[220,220]]],[1537671118848,["gjx16@GJXAIOU",[[1,220,"{}"]],[220,220],[222,222]]],[1537671120086,["gjx16@GJXAIOU",[[1,221,"\n"]],[221,221],[222,222]]],[1537671120282,["gjx16@GJXAIOU",[[1,222,"\n"]],[222,222],[223,223]]],[1537672301345,["gjx16@GJXAIOU",[[-1,225,"```"]],[228,228],[225,225]]],[1537672301481,["gjx16@GJXAIOU",[[-1,225,"\n"]],[225,225],[224,224]]],[1537672301606,["gjx16@GJXAIOU",[[-1,223,"}"]],[224,224],[223,223]]],[1537672301718,["gjx16@GJXAIOU",[[-1,223,"\n"]],[223,223],[222,222]]],[1537672301850,["gjx16@GJXAIOU",[[-1,222,"\n"]],[222,222],[221,221]]],[1537672301971,["gjx16@GJXAIOU",[[-1,220,"{"]],[221,221],[220,220]]],[1537672302117,["gjx16@GJXAIOU",[[-1,220,"\n"]],[220,220],[219,219]]],[1537672303530,["gjx16@GJXAIOU",[[-1,209,"int main()"]],[219,219],[209,209]]],[1537672303712,["gjx16@GJXAIOU",[[-1,209,"\n"]],[209,209],[208,208]]],[1537672304734,["gjx16@GJXAIOU",[[-1,204,"```c"]],[208,208],[204,204]]],[1537683595309,["gjx16@GJXAIOU",[[1,205,"\n"]],[204,204],[205,205]]],[1537683595480,["gjx16@GJXAIOU",[[1,206,"\n"]],[205,205],[206,206]]],[1537683630488,["gjx16@GJXAIOU",[[-1,206,"\n"],[1,207,"*"]],[206,206],[207,207]]],[1537683630648,["gjx16@GJXAIOU",[[1,207,"***"]],[207,207],[208,208]]],[1537683636372,["gjx16@GJXAIOU",[[1,208,"auto"]],[208,208],[212,212]]],[1537683638470,["gjx16@GJXAIOU",[[1,214,"\n\n"]],[214,214],[215,215]]],[1537683853221,["gjx16@GJXAIOU",[[1,212,"自动变量"]],[212,212],[216,216]]],[1537683855625,["gjx16@GJXAIOU",[[1,220,"\n"]],[218,218],[219,219]]],[1537683856212,["gjx16@GJXAIOU",[[1,221,"\n"]],[219,219],[220,220]]],[1537683858421,["gjx16@GJXAIOU",[[1,220,"C语言"]],[220,220],[223,223]]],[1537683860812,["gjx16@GJXAIOU",[[1,223,"中默认"]],[223,223],[226,226]]],[1537684338513,["gjx16@GJXAIOU",[[1,226,"中都是auto，不需要关注它在内存中"]],[226,226],[244,244]]],[1537684357232,["gjx16@GJXAIOU",[[1,244,"什么时候消失和出现"]],[244,244],[253,253]]],[1537684358089,["gjx16@GJXAIOU",[[1,255,"\n"]],[253,253],[254,254]]],[1537684358265,["gjx16@GJXAIOU",[[1,256,"\n"]],[254,254],[255,255]]],[1537684376063,["gjx16@GJXAIOU",[[1,255,"****"]],[255,255],[257,257]]],[1537684383610,["gjx16@GJXAIOU",[[1,257,"register变量"]],[257,257],[267,267]]],[1537684386405,["gjx16@GJXAIOU",[[1,271,"\n"]],[269,269],[270,270]]],[1537684400461,["gjx16@GJXAIOU",[[1,254,"·"]],[254,254],[255,255]]],[1537684401260,["gjx16@GJXAIOU",[[-1,254,"·"]],[255,255],[254,254]]],[1537684418654,["gjx16@GJXAIOU",[[1,254,"`auto int i = 0;`等效于~"]],[254,254],[275,275]]],[1537684419473,["gjx16@GJXAIOU",[[-1,274,"~"]],[275,275],[274,274]]],[1537684427201,["gjx16@GJXAIOU",[[1,274,"`int i = 0;`"]],[274,274],[286,286]]],[1537684430356,["gjx16@GJXAIOU",[[1,304,"\n"]],[301,301],[302,302]]],[1537684455562,["gjx16@GJXAIOU",[[1,302,"`register int i = 0;`  、、"]],[302,302],[327,327]]],[1537684456405,["gjx16@GJXAIOU",[[-1,325,"、、"]],[327,327],[325,325]]],[1537684457612,["gjx16@GJXAIOU",[[1,325,"//"]],[325,325],[327,327]]],[1537684462600,["gjx16@GJXAIOU",[[1,327,"将以"]],[327,327],[329,329]]],[1537684463382,["gjx16@GJXAIOU",[[-1,327,"将以"]],[329,329],[327,327]]],[1537684503852,["gjx16@GJXAIOU",[[1,327,"建议，如果有寄存器空闲的话，就将这个变量放进寄存器中使用，这一"]],[327,327],[358,358]]],[1537684504517,["gjx16@GJXAIOU",[[-1,356,"这一"]],[358,358],[356,356]]],[1537684509826,["gjx16@GJXAIOU",[[1,356,"可以加快读取"]],[356,356],[362,362]]],[1537684510660,["gjx16@GJXAIOU",[[1,365,"\n"]],[362,362],[363,363]]],[1537684511306,["gjx16@GJXAIOU",[[1,366,"\n"]],[363,363],[364,364]]],[1537684518262,["gjx16@GJXAIOU",[[1,364,"但是`int "]],[364,364],[371,371]]],[1537684526736,["gjx16@GJXAIOU",[[1,371,"*p = &i`、、"]],[371,371],[381,381]]],[1537684527530,["gjx16@GJXAIOU",[[-1,379,"、、"]],[381,381],[379,379]]],[1537684529290,["gjx16@GJXAIOU",[[1,379,"、"]],[379,379],[380,380]]],[1537684530602,["gjx16@GJXAIOU",[[-1,379,"、"]],[380,380],[379,379]]],[1537684561565,["gjx16@GJXAIOU",[[1,379,"//这个语句就会报错，因为放在寄存器中就没有地址了"]],[379,379],[404,404]]],[1537684784874,["gjx16@GJXAIOU",[[1,407,"\n"]],[406,406],[407,407]]],[1537684789124,["gjx16@GJXAIOU",[[-1,407,"\n"],[1,408,"*"]],[407,407],[408,408]]],[1537684789288,["gjx16@GJXAIOU",[[1,408,"***"]],[408,408],[409,409]]],[1537684798112,["gjx16@GJXAIOU",[[1,409,"动态变量和静态变量"]],[409,409],[418,418]]],[1537684809696,["gjx16@GJXAIOU",[[1,420,"\n\n"]],[420,420],[421,421]]],[1537684810114,["gjx16@GJXAIOU",[[1,422,"\n"]],[421,421],[422,422]]],[1537684814197,["gjx16@GJXAIOU",[[-1,422,"\n"],[1,423,"动态"]],[422,422],[424,424]]],[1537684815604,["gjx16@GJXAIOU",[[1,424,"变量"]],[424,424],[426,426]]],[1537684819807,["gjx16@GJXAIOU",[[1,422,"- "]],[422,422],[424,424]]],[1537684822129,["gjx16@GJXAIOU",[[1,428," \n- "]],[428,428],[432,432]]],[1537684822946,["gjx16@GJXAIOU",[[-1,430,"- "],[1,432,"\n\n"]],[432,432],[431,431]]],[1537684825296,["gjx16@GJXAIOU",[[-1,431,"\n"],[1,432,"·"]],[431,431],[432,432]]],[1537684825688,["gjx16@GJXAIOU",[[1,432,"·"]],[432,432],[433,433]]],[1537684826236,["gjx16@GJXAIOU",[[-1,432,"·"]],[433,433],[432,432]]],[1537684826393,["gjx16@GJXAIOU",[[-1,431,"·"],[1,432,"\n"]],[432,432],[431,431]]],[1537684826777,["gjx16@GJXAIOU",[[-1,431,"\n"]],[431,431],[430,430]]],[1537684827812,["gjx16@GJXAIOU",[[1,431,"\n"]],[430,430],[431,431]]],[1537684828589,["gjx16@GJXAIOU",[[-1,431,"\n"],[1,432,"`"]],[431,431],[432,432]]],[1537684829443,["gjx16@GJXAIOU",[[1,432,"``"]],[432,432],[434,434]]],[1537684829467,["gjx16@GJXAIOU",[[1,434,"language\n```\n"]],[434,434],[434,442]]],[1537684830470,["gjx16@GJXAIOU",[[-1,434,"language"],[1,442,"c"]],[434,442],[435,435]]],[1537684830729,["gjx16@GJXAIOU",[[1,436,"\n"]],[435,435],[436,436]]],[1537684834129,["gjx16@GJXAIOU",[[1,436,"Einclude"]],[436,436],[444,444]]],[1537684846383,["gjx16@GJXAIOU",[[-1,436,"E"]],[437,437],[436,436]]],[1537684848534,["gjx16@GJXAIOU",[[1,436,"@"]],[436,436],[437,437]]],[1537684850045,["gjx16@GJXAIOU",[[-1,436,"@"]],[437,437],[436,436]]],[1537684851278,["gjx16@GJXAIOU",[[1,436,"#"]],[436,436],[437,437]]],[1537684856042,["gjx16@GJXAIOU",[[1,444,"<>"]],[444,444],[446,446]]],[1537684862112,["gjx16@GJXAIOU",[[1,445,"stdio.h"]],[445,445],[452,452]]],[1537684865236,["gjx16@GJXAIOU",[[1,454,"\n"]],[453,453],[454,454]]],[1537684865604,["gjx16@GJXAIOU",[[1,455,"\n"]],[454,454],[455,455]]],[1537684921970,["gjx16@GJXAIOU",[[1,455,"int mao"]],[455,455],[462,462]]],[1537684923294,["gjx16@GJXAIOU",[[-1,461,"o"]],[462,462],[461,461]]],[1537684926816,["gjx16@GJXAIOU",[[1,461,"in)"]],[461,461],[464,464]]],[1537684927868,["gjx16@GJXAIOU",[[-1,463,")"]],[464,464],[463,463]]],[1537684929103,["gjx16@GJXAIOU",[[1,463,"()"]],[463,463],[465,465]]],[1537684930016,["gjx16@GJXAIOU",[[1,466,"\n"]],[465,465],[466,466]]],[1537684932152,["gjx16@GJXAIOU",[[1,466,"{}"]],[466,466],[468,468]]],[1537684933359,["gjx16@GJXAIOU",[[1,467,"\n"]],[467,467],[468,468]]],[1537684933621,["gjx16@GJXAIOU",[[1,468,"\n"]],[468,468],[469,469]]],[1537684933923,["gjx16@GJXAIOU",[[1,469,"\n"]],[469,469],[470,470]]],[1537684934180,["gjx16@GJXAIOU",[[1,470,"\n"]],[470,470],[471,471]]],[1537684934413,["gjx16@GJXAIOU",[[1,471,"\n"]],[471,471],[472,472]]],[1537684938936,["gjx16@GJXAIOU",[[1,468,"  in"]],[468,468],[472,472]]],[1537684940967,["gjx16@GJXAIOU",[[1,472,"t i;"]],[472,472],[476,476]]],[1537684941369,["gjx16@GJXAIOU",[[1,477,"  \n"]],[476,476],[479,479]]],[1537684998731,["gjx16@GJXAIOU",[[1,479,"for"]],[479,479],[482,482]]],[1537685000373,["gjx16@GJXAIOU",[[1,482,"()"]],[482,482],[484,484]]],[1537685020955,["gjx16@GJXAIOU",[[1,483,"i = 0; i < 10; i++"]],[483,483],[501,501]]],[1537685022839,["gjx16@GJXAIOU",[[1,503,"  \n"]],[502,502],[505,505]]],[1537685024500,["gjx16@GJXAIOU",[[1,505,"{{"]],[505,505],[507,507]]],[1537685025700,["gjx16@GJXAIOU",[[-1,506,"{"]],[507,507],[506,506]]],[1537685026822,["gjx16@GJXAIOU",[[1,506,"}"]],[506,506],[507,507]]],[1537685028946,["gjx16@GJXAIOU",[[1,506,"\n  \n  \n  \n  \n  "]],[506,506],[521,521]]],[1537685054010,["gjx16@GJXAIOU",[[1,509,"  my atuo_"]],[509,509],[519,519]]],[1537685058335,["gjx16@GJXAIOU",[[-1,518,"_"]],[519,519],[518,518]]],[1537685061534,["gjx16@GJXAIOU",[[-1,512,"y "]],[514,514],[512,512]]],[1537685063388,["gjx16@GJXAIOU",[[1,512,"y"]],[512,512],[513,513]]],[1537685070174,["gjx16@GJXAIOU",[[1,517,"();"]],[517,517],[520,520]]],[1537685073212,["gjx16@GJXAIOU",[[-1,527,"  "]],[529,529],[527,527]]],[1537685073510,["gjx16@GJXAIOU",[[-1,527,"\n"]],[527,527],[526,526]]],[1537685074200,["gjx16@GJXAIOU",[[-1,524,"  "]],[526,526],[524,524]]],[1537685074407,["gjx16@GJXAIOU",[[-1,524,"\n"]],[524,524],[523,523]]],[1537685074920,["gjx16@GJXAIOU",[[-1,522," "]],[523,523],[522,522]]],[1537685079827,["gjx16@GJXAIOU",[[1,455,"\n"]],[454,454],[455,455]]],[1537685088416,["gjx16@GJXAIOU",[[1,455,"void myauy"]],[455,455],[465,465]]],[1537685089149,["gjx16@GJXAIOU",[[-1,464,"y"]],[465,465],[464,464]]],[1537685090987,["gjx16@GJXAIOU",[[1,464,"to "]],[464,464],[467,467]]],[1537685094453,["gjx16@GJXAIOU",[[-1,466," "]],[467,467],[466,466]]],[1537685095698,["gjx16@GJXAIOU",[[1,466,"()"]],[466,466],[468,468]]],[1537685096914,["gjx16@GJXAIOU",[[1,469,"\n"]],[468,468],[469,469]]],[1537685099331,["gjx16@GJXAIOU",[[1,469,"{}"]],[469,469],[471,471]]],[1537685101070,["gjx16@GJXAIOU",[[1,470,"\n"]],[470,470],[471,471]]],[1537685101347,["gjx16@GJXAIOU",[[1,471,"\n"]],[471,471],[472,472]]],[1537685104538,["gjx16@GJXAIOU",[[1,474,"\n"]],[474,474],[475,475]]],[1537685104867,["gjx16@GJXAIOU",[[1,475,"\n"]],[475,475],[476,476]]],[1537685107748,["gjx16@GJXAIOU",[[1,471,"  "]],[471,471],[473,473]]],[1537685130416,["gjx16@GJXAIOU",[[1,473,"int i"]],[473,473],[478,478]]],[1537685131063,["gjx16@GJXAIOU",[[-1,477,"i"]],[478,478],[477,477]]],[1537685134342,["gjx16@GJXAIOU",[[1,477,"a = 0;"]],[477,477],[483,483]]],[1537685134871,["gjx16@GJXAIOU",[[1,484,"  \n"]],[483,483],[486,486]]],[1537685139930,["gjx16@GJXAIOU",[[1,486,"printf();"]],[486,486],[495,495]]],[1537685152893,["gjx16@GJXAIOU",[[1,493,"\"\""]],[493,493],[495,495]]],[1537685156451,["gjx16@GJXAIOU",[[1,494,"i = "]],[494,494],[498,498]]],[1537685163862,["gjx16@GJXAIOU",[[-1,494,"i = "]],[498,498],[494,494]]],[1537685165168,["gjx16@GJXAIOU",[[1,494,"a= "]],[494,494],[497,497]]],[1537685165751,["gjx16@GJXAIOU",[[-1,495,"= "]],[497,497],[495,495]]],[1537685170681,["gjx16@GJXAIOU",[[1,495," = %d\\n"]],[495,495],[502,502]]],[1537685173778,["gjx16@GJXAIOU",[[1,503,",a"]],[503,503],[505,505]]],[1537685176101,["gjx16@GJXAIOU",[[1,508,"  \n"]],[507,507],[510,510]]],[1537685179000,["gjx16@GJXAIOU",[[1,510,"a++;"]],[510,510],[514,514]]],[1537685186749,["gjx16@GJXAIOU",[[-1,593,"\n"]],[593,593],[592,592]]],[1537685186935,["gjx16@GJXAIOU",[[-1,592,"\n"]],[592,592],[591,591]]],[1537685255560,["gjx16@GJXAIOU",[[1,598,"\n"]],[597,597],[598,598]]],[1537685256190,["gjx16@GJXAIOU",[[1,599,"\n"]],[598,598],[599,599]]],[1537685257260,["gjx16@GJXAIOU",[[-1,599,"\n"],[1,600,"c"]],[599,599],[600,600]]],[1537685257504,["gjx16@GJXAIOU",[[1,600,"he"]],[600,600],[602,602]]],[1537685258088,["gjx16@GJXAIOU",[[-1,600,"he"]],[602,602],[600,600]]],[1537685258219,["gjx16@GJXAIOU",[[-1,599,"c"],[1,600,"\n"]],[600,600],[599,599]]],[1537685261968,["gjx16@GJXAIOU",[[-1,599,"\n"],[1,600,"程序"]],[599,599],[601,601]]],[1537685272570,["gjx16@GJXAIOU",[[1,601,"的输出结果为：a = 0\na = 0\na = 0\na = 0\na = 0\na = 0\na = 0\na = 0\na = 0\na = 0\n\n"]],[601,601],[668,668]]],[1537685279916,["gjx16@GJXAIOU",[[1,614,"·"]],[614,614],[615,615]]],[1537685281564,["gjx16@GJXAIOU",[[-1,614,"·"]],[615,615],[614,614]]],[1537685282683,["gjx16@GJXAIOU",[[1,614,"      "]],[614,614],[620,620]]],[1537685285772,["gjx16@GJXAIOU",[[-1,614,"      "]],[620,620],[614,614]]],[1537685288683,["gjx16@GJXAIOU",[[1,614,"  "],[1,620,"  "],[1,626,"  "],[1,632,"  "],[1,638,"  "],[1,644,"  "],[1,650,"  "],[1,656,"  "],[1,662,"  "]],[614,668],[614,686]]],[1537685289128,["gjx16@GJXAIOU",[[1,616,"  "],[1,622," "],[1,624," "],[1,630," "],[1,632," "],[1,638," "],[1,640," "],[1,646," "],[1,648," "],[1,654,"  "],[1,662,"  "],[1,672,"  "],[1,678,"  "]],[614,686],[614,704]]],[1537685289422,["gjx16@GJXAIOU",[[1,618,"  "],[1,624," "],[1,628," "],[1,634," "],[1,638," "],[1,644,"  "],[1,654," "],[1,658," "],[1,664,"  "],[1,674,"  "],[1,688,"  "],[1,694,"  "]],[614,704],[614,722]]],[1537685289689,["gjx16@GJXAIOU",[[1,620,"  "],[1,626,"  "],[1,638," "],[1,644," "],[1,650,"  "],[1,662," "],[1,668," "],[1,674,"  "],[1,686,"  "],[1,704,"  "],[1,710,"  "]],[614,722],[614,740]]],[1537685289941,["gjx16@GJXAIOU",[[1,622,"  "],[1,628,"  "],[1,642," "],[1,650," "],[1,656,"  "],[1,670," "],[1,678," "],[1,684,"  "],[1,698,"  "],[1,720,"  "],[1,726,"  "]],[614,740],[614,758]]],[1537685290211,["gjx16@GJXAIOU",[[1,624,"  "],[1,630,"  "],[1,646," "],[1,656," "],[1,662,"  "],[1,678," "],[1,688," "],[1,694,"  "],[1,710,"  "],[1,736,"  "],[1,742,"  "]],[614,758],[614,776]]],[1537685290485,["gjx16@GJXAIOU",[[1,626,"  "],[1,632,"  "],[1,650," "],[1,662," "],[1,668,"  "],[1,686," "],[1,698," "],[1,704,"  "],[1,722,"  "],[1,752,"  "],[1,758,"  "]],[614,776],[614,794]]],[1537685290812,["gjx16@GJXAIOU",[[1,628,"  "],[1,634,"  "],[1,654," "],[1,668," "],[1,674,"  "],[1,694," "],[1,708," "],[1,714,"  "],[1,734,"  "],[1,768,"  "],[1,774,"  "]],[614,794],[614,812]]],[1537685291118,["gjx16@GJXAIOU",[[1,630,"  "],[1,636,"  "],[1,658," "],[1,674," "],[1,680,"  "],[1,702," "],[1,718," "],[1,724,"  "],[1,746,"  "],[1,784,"  "],[1,790,"  "]],[614,812],[614,830]]],[1537685291414,["gjx16@GJXAIOU",[[1,632,"  "],[1,638,"  "],[1,662," "],[1,680," "],[1,686,"  "],[1,710," "],[1,728," "],[1,734,"  "],[1,758,"  "],[1,800,"  "],[1,806,"  "]],[614,830],[614,848]]],[1537685291749,["gjx16@GJXAIOU",[[1,634,"  "],[1,640,"  "],[1,666," "],[1,686," "],[1,692,"  "],[1,718," "],[1,738," "],[1,744,"  "],[1,770,"  "],[1,816,"  "],[1,822,"  "]],[614,848],[614,866]]],[1537685292167,["gjx16@GJXAIOU",[[1,636,"  "],[1,642,"                        a = 0\n  "],[-1,692,"a = 0\n                    "],[1,726," "],[1,748," "],[1,754,"                        a = 0\n  "],[-1,804,"a = 0\n                    "],[1,838,"  "]],[614,866],[614,884]]],[1537685292582,["gjx16@GJXAIOU",[[1,638,"  "],[1,644,"                          a = 0\n  "],[-1,698,"a = 0\n                      "],[1,734," "],[1,758," "],[1,764,"                          a = 0\n  "],[-1,818,"a = 0\n                      "],[1,854,"  "]],[614,884],[614,902]]],[1537685293156,["gjx16@GJXAIOU",[[1,640,"  "],[1,646,"                            a = 0\n  "],[-1,704,"a = 0\n                        "],[1,742," "],[1,768," "],[1,774,"                            a = 0\n  "],[-1,832,"a = 0\n                        "],[1,870,"  "]],[614,902],[614,920]]],[1537685298273,["gjx16@GJXAIOU",[[1,642,"  "],[1,648,"                              a = 0\n  "],[-1,710,"a = 0\n                          "],[1,750," "],[1,778," "],[1,784,"                              a = 0\n  "],[-1,846,"a = 0\n                          "],[1,886,"  "]],[641,920],[643,938]]],[1537685305758,["gjx16@GJXAIOU",[[-1,642,"  "],[-1,650,"                              a = 0\n  "],[1,750,"a = 0\n                          "],[-1,758," "],[-1,787," "],[-1,794,"                              a = 0\n  "],[1,894,"a = 0\n                          "],[-1,902,"  "]],[643,938],[641,920]]],[1537685310892,["gjx16@GJXAIOU",[[-1,607,"："]],[608,608],[607,607]]],[1537685312438,["gjx16@GJXAIOU",[[1,607,"  "]],[607,607],[609,609]]],[1537685318463,["gjx16@GJXAIOU",[[1,921,"                            \n"]],[920,920],[949,949]]],[1537685318898,["gjx16@GJXAIOU",[[-1,921,"                            "],[1,949,"\n"]],[949,949],[922,922]]],[1537685328228,["gjx16@GJXAIOU",[[1,922,"- 静态变量"]],[922,922],[928,928]]],[1537685328732,["gjx16@GJXAIOU",[[1,929,"- \n"]],[928,928],[931,931]]],[1537685330051,["gjx16@GJXAIOU",[[-1,929,"- "]],[931,931],[929,929]]],[1537685330540,["gjx16@GJXAIOU",[[1,931,"\n"]],[929,929],[930,930]]],[1537685333451,["gjx16@GJXAIOU",[[1,930,"```"]],[930,930],[933,933]]],[1537685333477,["gjx16@GJXAIOU",[[1,933,"language\n```\n"]],[933,933],[933,941]]],[1537685334724,["gjx16@GJXAIOU",[[-1,933,"language"],[1,941,"c"]],[933,941],[934,934]]],[1537685335039,["gjx16@GJXAIOU",[[1,935,"\n"]],[934,934],[935,935]]],[1537685341298,["gjx16@GJXAIOU",[[1,935,"#include<>"]],[935,935],[945,945]]],[1537685345388,["gjx16@GJXAIOU",[[1,944,"stdio."]],[944,944],[950,950]]],[1537685346449,["gjx16@GJXAIOU",[[-1,949,"."]],[950,950],[949,949]]],[1537685347563,["gjx16@GJXAIOU",[[1,949,".j"]],[949,949],[951,951]]],[1537685348496,["gjx16@GJXAIOU",[[-1,950,"j"]],[951,951],[950,950]]],[1537685349321,["gjx16@GJXAIOU",[[1,950,"h"]],[950,950],[951,951]]],[1537685351184,["gjx16@GJXAIOU",[[1,953,"\n"]],[952,952],[953,953]]],[1537685352202,["gjx16@GJXAIOU",[[1,954,"\n"]],[953,953],[954,954]]],[1537685354575,["gjx16@GJXAIOU",[[1,954,"vod"]],[954,954],[957,957]]],[1537685355085,["gjx16@GJXAIOU",[[-1,956,"d"]],[957,957],[956,956]]],[1537685359040,["gjx16@GJXAIOU",[[1,956,"id my "]],[956,956],[962,962]]],[1537685359462,["gjx16@GJXAIOU",[[1,962,"s"]],[962,962],[963,963]]],[1537685360086,["gjx16@GJXAIOU",[[-1,961," s"]],[963,963],[961,961]]],[1537685364512,["gjx16@GJXAIOU",[[1,961,"static()"]],[961,961],[969,969]]],[1537685366655,["gjx16@GJXAIOU",[[1,970,"\n"]],[969,969],[970,970]]],[1537685367946,["gjx16@GJXAIOU",[[1,970,"{}"]],[970,970],[972,972]]],[1537685369465,["gjx16@GJXAIOU",[[1,971,"\n"]],[971,971],[972,972]]],[1537685369651,["gjx16@GJXAIOU",[[1,972,"\n"]],[972,972],[973,973]]],[1537685370040,["gjx16@GJXAIOU",[[1,973,"\n"]],[973,973],[974,974]]],[1537685377511,["gjx16@GJXAIOU",[[1,972,"  int a = o;"]],[972,972],[984,984]]],[1537685377950,["gjx16@GJXAIOU",[[1,985,"  \n"]],[984,984],[987,987]]],[1537685379009,["gjx16@GJXAIOU",[[-1,985,"  "]],[987,987],[985,985]]],[1537685379421,["gjx16@GJXAIOU",[[-1,986,"\n"]],[985,985],[984,984]]],[1537685380152,["gjx16@GJXAIOU",[[-1,982,"o;"]],[984,984],[982,982]]],[1537685381418,["gjx16@GJXAIOU",[[1,982,"0;"]],[982,982],[984,984]]],[1537685381952,["gjx16@GJXAIOU",[[1,985,"  \n"]],[984,984],[987,987]]],[1537685410137,["gjx16@GJXAIOU",[[1,987,"printf();"]],[987,987],[996,996]]],[1537685413659,["gjx16@GJXAIOU",[[1,994,"\"\""]],[994,994],[996,996]]],[1537685417214,["gjx16@GJXAIOU",[[1,995,"a= "]],[995,995],[998,998]]],[1537685418204,["gjx16@GJXAIOU",[[-1,997," "]],[998,998],[997,997]]],[1537685418574,["gjx16@GJXAIOU",[[1,997," "]],[997,997],[998,998]]],[1537685419211,["gjx16@GJXAIOU",[[-1,996,"= "]],[998,998],[996,996]]],[1537685424509,["gjx16@GJXAIOU",[[1,996," = %d\\n"]],[996,996],[1003,1003]]],[1537685427591,["gjx16@GJXAIOU",[[1,1004,",a"]],[1004,1004],[1006,1006]]],[1537685480246,["gjx16@GJXAIOU",[[1,1009,"  \n"]],[1008,1008],[1011,1011]]],[1537685486988,["gjx16@GJXAIOU",[[1,1011,"a++;"]],[1011,1011],[1015,1015]]],[1537685490248,["gjx16@GJXAIOU",[[1,974," "]],[974,974],[975,975]]],[1537685492199,["gjx16@GJXAIOU",[[-1,974," "]],[975,975],[974,974]]],[1537685493606,["gjx16@GJXAIOU",[[1,974,"ata"]],[974,974],[977,977]]],[1537685495566,["gjx16@GJXAIOU",[[-1,974,"ata"]],[977,977],[974,974]]],[1537685497013,["gjx16@GJXAIOU",[[1,974,"stat"]],[974,974],[978,978]]],[1537685497404,["gjx16@GJXAIOU",[[1,979,"i"]],[978,978],[979,979]]],[1537685497627,["gjx16@GJXAIOU",[[1,979,"n"]],[979,979],[980,980]]],[1537685498548,["gjx16@GJXAIOU",[[-1,979,"n"]],[980,980],[979,979]]],[1537685499908,["gjx16@GJXAIOU",[[1,979,"c "]],[979,979],[981,981]]],[1537685505744,["gjx16@GJXAIOU",[[1,1026,"\n"]],[1025,1025],[1026,1026]]],[1537685506576,["gjx16@GJXAIOU",[[1,1027,"\n"]],[1026,1026],[1027,1027]]],[1537685543541,["gjx16@GJXAIOU",[[1,1027,"int main()"]],[1027,1027],[1037,1037]]],[1537685544164,["gjx16@GJXAIOU",[[1,1038,"\n"]],[1037,1037],[1038,1038]]],[1537685545455,["gjx16@GJXAIOU",[[1,1038,"{}"]],[1038,1038],[1040,1040]]],[1537685546563,["gjx16@GJXAIOU",[[1,1039,"\n"]],[1039,1039],[1040,1040]]],[1537685546774,["gjx16@GJXAIOU",[[1,1040,"\n"]],[1040,1040],[1041,1041]]],[1537685546970,["gjx16@GJXAIOU",[[1,1041,"\n"]],[1041,1041],[1042,1042]]],[1537685547173,["gjx16@GJXAIOU",[[1,1042,"\n"]],[1042,1042],[1043,1043]]],[1537685556076,["gjx16@GJXAIOU",[[1,1040,"  int a"]],[1040,1040],[1047,1047]]],[1537685558136,["gjx16@GJXAIOU",[[-1,1046,"a"]],[1047,1047],[1046,1046]]],[1537685562087,["gjx16@GJXAIOU",[[1,1046,"i = 0;"]],[1046,1046],[1052,1052]]],[1537685562835,["gjx16@GJXAIOU",[[1,1053,"  \n"]],[1052,1052],[1055,1055]]],[1537685564307,["gjx16@GJXAIOU",[[1,1055,"fpr"]],[1055,1055],[1058,1058]]],[1537685566498,["gjx16@GJXAIOU",[[-1,1055,"fpr"]],[1058,1058],[1055,1055]]],[1537685568846,["gjx16@GJXAIOU",[[1,1055,"for()"]],[1055,1055],[1060,1060]]],[1537685585659,["gjx16@GJXAIOU",[[1,1059,"i = 0; i < 10; i++"]],[1059,1059],[1077,1077]]],[1537685588019,["gjx16@GJXAIOU",[[1,1079,"  \n"]],[1078,1078],[1081,1081]]],[1537685589255,["gjx16@GJXAIOU",[[1,1081,"{}"]],[1081,1081],[1083,1083]]],[1537685590916,["gjx16@GJXAIOU",[[1,1082,"\n  \n  \n  \n  "]],[1082,1082],[1094,1094]]],[1537685595465,["gjx16@GJXAIOU",[[1,1085,"  in"]],[1085,1085],[1089,1089]]],[1537685596400,["gjx16@GJXAIOU",[[-1,1087,"in"]],[1089,1089],[1087,1087]]],[1537685599733,["gjx16@GJXAIOU",[[-1,1091,"  "]],[1093,1093],[1091,1091]]],[1537685599909,["gjx16@GJXAIOU",[[-1,1091,"\n"]],[1091,1091],[1090,1090]]],[1537685600510,["gjx16@GJXAIOU",[[-1,1088,"  "]],[1090,1090],[1088,1088]]],[1537685600952,["gjx16@GJXAIOU",[[-1,1088,"\n"]],[1088,1088],[1087,1087]]],[1537685614531,["gjx16@GJXAIOU",[[1,1087,"mystatic();"]],[1087,1087],[1098,1098]]],[1537685620081,["gjx16@GJXAIOU",[[-1,1104,"\n"]],[1104,1104],[1103,1103]]],[1537685620304,["gjx16@GJXAIOU",[[-1,1103,"\n"]],[1103,1103],[1102,1102]]],[1537685651231,["gjx16@GJXAIOU",[[1,1109,"chen"]],[1109,1109],[1113,1113]]],[1537685651940,["gjx16@GJXAIOU",[[-1,1109,"chen"]],[1113,1113],[1109,1109]]],[1537685657337,["gjx16@GJXAIOU",[[1,1109,"程序运行"]],[1109,1109],[1113,1113]]],[1537685662357,["gjx16@GJXAIOU",[[1,1113,"结果为：a = 0\na = 1\na = 2\na = 3\na = 4\na = 5\na = 6\na = 7\na = 8\na = 9\n"]],[1113,1113],[1177,1177]]],[1537685667878,["gjx16@GJXAIOU",[[1,1123,"  "],[1,1129,"  "],[1,1135,"  "],[1,1141,"  "],[1,1147,"  "],[1,1153,"  "],[1,1159,"  "],[1,1165,"  "],[1,1171,"  "]],[1123,1176],[1123,1194]]],[1537685668385,["gjx16@GJXAIOU",[[1,1125,"  "],[1,1131," "],[1,1133," "],[1,1139," "],[1,1141," "],[1,1147," "],[1,1149," "],[1,1155," "],[1,1157," "],[1,1163,"  "],[1,1171,"  "],[1,1181,"  "],[1,1187,"  "]],[1123,1194],[1123,1212]]],[1537685668635,["gjx16@GJXAIOU",[[1,1127,"  "],[1,1133," "],[1,1137," "],[1,1143," "],[1,1147," "],[1,1153,"  "],[1,1163," "],[1,1167," "],[1,1173,"  "],[1,1183,"  "],[1,1197,"  "],[1,1203,"  "]],[1123,1212],[1123,1230]]],[1537685668876,["gjx16@GJXAIOU",[[1,1129,"  "],[1,1135,"  "],[1,1147," "],[1,1153," "],[1,1159,"  "],[1,1171," "],[1,1177," "],[1,1183,"  "],[1,1195,"  "],[1,1213,"  "],[1,1219,"  "]],[1123,1230],[1123,1248]]],[1537685669134,["gjx16@GJXAIOU",[[1,1131,"  "],[1,1137,"  "],[1,1151," "],[1,1159," "],[1,1165,"  "],[1,1179," "],[1,1187," "],[1,1193,"  "],[1,1207,"  "],[1,1229,"  "],[1,1235,"  "]],[1123,1248],[1123,1266]]],[1537685669439,["gjx16@GJXAIOU",[[1,1133,"  "],[1,1139,"  "],[1,1155," "],[1,1165," "],[1,1171,"  "],[1,1187," "],[1,1197," "],[1,1203,"  "],[1,1219,"  "],[1,1245,"  "],[1,1251,"  "]],[1123,1266],[1123,1284]]],[1537685669744,["gjx16@GJXAIOU",[[1,1135,"  "],[1,1141,"  "],[1,1159," "],[1,1171," "],[1,1177,"  "],[1,1195," "],[1,1207," "],[1,1213,"  "],[1,1231,"  "],[1,1261,"  "],[1,1267,"  "]],[1123,1284],[1123,1302]]],[1537685670013,["gjx16@GJXAIOU",[[1,1137,"  "],[1,1143,"  "],[1,1163," "],[1,1177," "],[1,1183,"  "],[1,1203," "],[1,1217," "],[1,1223,"  "],[1,1243,"  "],[1,1277,"  "],[1,1283,"  "]],[1123,1302],[1123,1320]]],[1537685670282,["gjx16@GJXAIOU",[[1,1139,"  "],[1,1145,"  "],[1,1167," "],[1,1183," "],[1,1189,"  "],[1,1211," "],[1,1227," "],[1,1233,"  "],[1,1255,"  "],[1,1293,"  "],[1,1299,"  "]],[1123,1320],[1123,1338]]],[1537685670557,["gjx16@GJXAIOU",[[1,1141,"  "],[1,1147,"  "],[1,1171," "],[1,1189," "],[1,1195,"  "],[1,1219," "],[1,1237," "],[1,1243,"  "],[1,1267,"  "],[1,1309,"  "],[1,1315,"  "]],[1123,1338],[1123,1356]]],[1537685670835,["gjx16@GJXAIOU",[[1,1143,"  "],[1,1149,"  "],[1,1175," "],[1,1195," "],[1,1201,"  "],[1,1227," "],[1,1247," "],[1,1253,"  "],[1,1279,"  "],[1,1325,"  "],[1,1331,"  "]],[1123,1356],[1123,1374]]],[1537685671236,["gjx16@GJXAIOU",[[1,1145,"  "],[1,1151,"  "],[1,1179,"  "],[1,1229,"  "],[1,1235," "],[1,1257," "],[1,1263,"  "],[1,1291,"  "],[1,1341,"  "],[1,1347,"  "]],[1123,1374],[1123,1392]]],[1537685671933,["gjx16@GJXAIOU",[[1,1147,"  "],[1,1153,"  "],[1,1183,"  "],[1,1237,"  "],[1,1243," "],[1,1267," "],[1,1273,"  "],[1,1303,"  "],[1,1357,"  "],[1,1363,"  "]],[1123,1392],[1123,1410]]],[1537687062044,["gjx16@GJXAIOU",[[1,929,"首先只要整个程序开始执行之后，"]],[929,929],[944,944]]],[1537687926489,["gjx16@GJXAIOU",[[1,944,"静态变量是一直存在的，不消失的；"]],[944,944],[960,960]]],[1537687928249,["gjx16@GJXAIOU",[[1,961,"\n"]],[960,960],[961,961]]],[1537687928272,["gjx16@GJXAIOU",[[1,962,"\n"]],[961,961],[962,962]]],[1537687929473,["gjx16@GJXAIOU",[[-1,962,"\n"]],[962,962],[961,961]]],[1537687939229,["gjx16@GJXAIOU",[[1,961,"其次，静态变量值"]],[961,961],[969,969]]],[1537687956886,["gjx16@GJXAIOU",[[1,969,"初始化一次，即`static int a;"]],[969,969],[990,990]]],[1537687957606,["gjx16@GJXAIOU",[[-1,989,";"]],[990,990],[989,989]]],[1537687963487,["gjx16@GJXAIOU",[[1,989," = 0;`yu"]],[989,989],[997,997]]],[1537687964060,["gjx16@GJXAIOU",[[-1,995,"yu"]],[997,997],[995,995]]],[1537687966715,["gjx16@GJXAIOU",[[1,995,"语句值"]],[995,995],[998,998]]],[1537687968350,["gjx16@GJXAIOU",[[-1,997,"值"]],[998,998],[997,997]]],[1537687979959,["gjx16@GJXAIOU",[[1,997,"只执行一次"]],[997,997],[1002,1002]]],[1537689006205,["gjx16@GJXAIOU",[[1,1486,"\n"]],[1485,1485],[1486,1486]]],[1537689007156,["gjx16@GJXAIOU",[[1,1487,"\n"]],[1486,1486],[1487,1487]]],[1537689007404,["gjx16@GJXAIOU",[[-1,1487,"\n"],[1,1488,"3"]],[1487,1487],[1488,1488]]],[1537689007587,["gjx16@GJXAIOU",[[1,1488,"3"]],[1488,1488],[1489,1489]]],[1537689008294,["gjx16@GJXAIOU",[[-1,1488,"3"]],[1489,1489],[1488,1488]]],[1537689008433,["gjx16@GJXAIOU",[[-1,1487,"3"],[1,1488,"\n"]],[1488,1488],[1487,1487]]],[1537689009695,["gjx16@GJXAIOU",[[-1,1487,"\n"],[1,1488,"#"]],[1487,1487],[1488,1488]]],[1537689018671,["gjx16@GJXAIOU",[[1,1488,"# 内存四区"]],[1488,1488],[1494,1494]]],[1537689021253,["gjx16@GJXAIOU",[[1,1494,"简介"]],[1494,1494],[1496,1496]]],[1537689043610,["gjx16@GJXAIOU",[[1,1487,"\n"]],[1484,1484],[1485,1485]]],[1537690079173,["gjx16@GJXAIOU",[[1,1497,"\n\n"]],[1497,1497],[1498,1498]]],[1537690079329,["gjx16@GJXAIOU",[[1,1499,"\n"]],[1498,1498],[1499,1499]]],[1537690182795,["gjx16@GJXAIOU",[[-1,1499,"\n"],[1,1500," "]],[1499,1499],[1500,1500]]],[1537690281322,["gjx16@GJXAIOU",[[1,1500,"****"]],[1500,1500],[1502,1502]]],[1537690282373,["gjx16@GJXAIOU",[[-1,1502,"**"]],[1502,1502],[1500,1500]]],[1537690284293,["gjx16@GJXAIOU",[[-1,1500,"**"]],[1502,1502],[1500,1500]]],[1537690289327,["gjx16@GJXAIOU",[[1,1500,"### 代码区"]],[1500,1500],[1507,1507]]],[1537690291914,["gjx16@GJXAIOU",[[-1,1500,"### 代码区"]],[1507,1507],[1500,1500]]],[1537690292153,["gjx16@GJXAIOU",[[-1,1499," "],[1,1500,"\n"]],[1500,1500],[1499,1499]]],[1537690292589,["gjx16@GJXAIOU",[[-1,1499,"\n"]],[1499,1499],[1498,1498]]],[1537690293619,["gjx16@GJXAIOU",[[1,1499,"\n"]],[1498,1498],[1499,1499]]],[1537690295095,["gjx16@GJXAIOU",[[-1,1499,"\n"],[1,1500,"#"]],[1499,1499],[1500,1500]]],[1537690299438,["gjx16@GJXAIOU",[[1,1500,"## 代码区"]],[1500,1500],[1506,1506]]],[1537690300259,["gjx16@GJXAIOU",[[1,1506,"\n\n"]],[1506,1506],[1507,1507]]],[1537690301637,["gjx16@GJXAIOU",[[1,1508,"\n"]],[1507,1507],[1508,1508]]],[1537690308273,["gjx16@GJXAIOU",[[-1,1508,"\n"],[1,1509,"存放"]],[1508,1508],[1510,1510]]],[1537690332437,["gjx16@GJXAIOU",[[1,1510,"可执行的代码；程序被操作系统加载到内存中是"]],[1510,1510],[1531,1531]]],[1537690333543,["gjx16@GJXAIOU",[[-1,1530,"是"]],[1531,1531],[1530,1530]]],[1537690338084,["gjx16@GJXAIOU",[[1,1530,"时候，所有"]],[1530,1530],[1535,1535]]],[1537690351697,["gjx16@GJXAIOU",[[1,1535,"可执行的代码都加载到代码区，"]],[1535,1535],[1549,1549]]],[1537690355424,["gjx16@GJXAIOU",[[-1,1548,"，"]],[1549,1549],[1548,1548]]],[1537690378494,["gjx16@GJXAIOU",[[1,1548,"，这块内存是不可以在运行期间修改的；"]],[1548,1548],[1566,1566]]],[1537690388657,["gjx16@GJXAIOU",[[1,1566,"\n\n"]],[1566,1566],[1567,1567]]],[1537690388809,["gjx16@GJXAIOU",[[1,1568,"\n"]],[1567,1567],[1568,1568]]],[1537690389292,["gjx16@GJXAIOU",[[1,1569,"\n"]],[1568,1568],[1569,1569]]],[1537690390610,["gjx16@GJXAIOU",[[1,1570,"\n"]],[1569,1569],[1570,1570]]],[1537690390892,["gjx16@GJXAIOU",[[-1,1570,"\n"],[1,1571,"3"]],[1570,1570],[1571,1571]]],[1537690391249,["gjx16@GJXAIOU",[[1,1571,"33"]],[1571,1571],[1573,1573]]],[1537690391979,["gjx16@GJXAIOU",[[-1,1571,"33"]],[1573,1573],[1571,1571]]],[1537690392155,["gjx16@GJXAIOU",[[-1,1570,"3"],[1,1571,"\n"]],[1571,1571],[1570,1570]]],[1537690393357,["gjx16@GJXAIOU",[[-1,1570,"\n"],[1,1571,"#"]],[1570,1570],[1571,1571]]],[1537690397582,["gjx16@GJXAIOU",[[1,1571,"## 金台区"]],[1571,1571],[1577,1577]]],[1537690398871,["gjx16@GJXAIOU",[[-1,1574,"金台区"]],[1577,1577],[1574,1574]]],[1537690403011,["gjx16@GJXAIOU",[[1,1574,"静态去"]],[1574,1574],[1577,1577]]],[1537690403956,["gjx16@GJXAIOU",[[-1,1576,"去"]],[1577,1577],[1576,1576]]],[1537690406346,["gjx16@GJXAIOU",[[1,1576,"区"]],[1576,1576],[1577,1577]]],[1537690407295,["gjx16@GJXAIOU",[[1,1577,"\n\n"]],[1577,1577],[1578,1578]]],[1537690412414,["gjx16@GJXAIOU",[[-1,1578,"\n"],[1,1579,"存放"]],[1578,1578],[1580,1580]]],[1537690413753,["gjx16@GJXAIOU",[[1,1580,"所欲"]],[1580,1580],[1582,1582]]],[1537690414919,["gjx16@GJXAIOU",[[-1,1580,"所欲"]],[1582,1582],[1580,1580]]],[1537690429008,["gjx16@GJXAIOU",[[1,1580,"所有的静态变量和全局变量"]],[1580,1580],[1592,1592]]],[1537690429727,["gjx16@GJXAIOU",[[1,1592,"\n\n"]],[1592,1592],[1593,1593]]],[1537690430224,["gjx16@GJXAIOU",[[1,1594,"\n"]],[1593,1593],[1594,1594]]],[1537690656488,["gjx16@GJXAIOU",[[1,1595,"\n"]],[1592,1592],[1593,1593]]],[1537690656634,["gjx16@GJXAIOU",[[1,1596,"\n"]],[1593,1593],[1594,1594]]],[1537690659309,["gjx16@GJXAIOU",[[1,1594,"## "]],[1594,1594],[1597,1597]]],[1537690659952,["gjx16@GJXAIOU",[[-1,1596," "]],[1597,1597],[1596,1596]]],[1537690668398,["gjx16@GJXAIOU",[[1,1596,"# 栈区"]],[1596,1596],[1600,1600]]],[1537690669820,["gjx16@GJXAIOU",[[1,1603,"\n"]],[1600,1600],[1601,1601]]],[1537690903951,["gjx16@GJXAIOU",[[1,1600,"  "]],[1600,1600],[1602,1602]]],[1537690904154,["gjx16@GJXAIOU",[[1,1606,"\n"]],[1602,1602],[1603,1603]]],[1537690917729,["gjx16@GJXAIOU",[[1,1603,"栈区是一种先进后去"]],[1603,1603],[1612,1612]]],[1537690919010,["gjx16@GJXAIOU",[[-1,1611,"去"]],[1612,1612],[1611,1611]]],[1537690939051,["gjx16@GJXAIOU",[[1,1611,"出的内存结构，所有的自动变量"]],[1611,1611],[1625,1625]]],[1537690940936,["gjx16@GJXAIOU",[[1,1625,"，、"]],[1625,1625],[1627,1627]]],[1537690942281,["gjx16@GJXAIOU",[[-1,1625,"，、"]],[1627,1627],[1625,1625]]],[1537690945513,["gjx16@GJXAIOU",[[1,1625,"、键鼠"]],[1625,1625],[1628,1628]]],[1537690946816,["gjx16@GJXAIOU",[[-1,1626,"键鼠"]],[1628,1628],[1626,1626]]],[1537690955914,["gjx16@GJXAIOU",[[1,1626,"函数的形参都是有"]],[1626,1626],[1634,1634]]],[1537690956746,["gjx16@GJXAIOU",[[-1,1633,"有"]],[1634,1634],[1633,1633]]],[1537690998871,["gjx16@GJXAIOU",[[1,1633,"由编译器自动放出栈"]],[1633,1633],[1642,1642]]],[1537691007723,["gjx16@GJXAIOU",[[1,1642,"中，单一"]],[1642,1642],[1646,1646]]],[1537691008963,["gjx16@GJXAIOU",[[-1,1644,"单一"]],[1646,1646],[1644,1644]]],[1537691042603,["gjx16@GJXAIOU",[[1,1644,"当一个自动变量超出其作用域的时候，自动从栈中弹出；"]],[1644,1644],[1669,1669]]],[1537691078195,["gjx16@GJXAIOU",[[1,1486,"****"]],[1486,1486],[1488,1488]]],[1537691098176,["gjx16@GJXAIOU",[[1,1488,"变量和函数是否使用extern的区别"]],[1488,1488],[1506,1506]]],[1537691100155,["gjx16@GJXAIOU",[[1,1510,"\n"]],[1508,1508],[1509,1509]]],[1537691100882,["gjx16@GJXAIOU",[[1,1511,"\n"]],[1509,1509],[1510,1510]]],[1537691107813,["gjx16@GJXAIOU",[[1,1510,"- 变量 "]],[1510,1510],[1515,1515]]],[1537691109242,["gjx16@GJXAIOU",[[1,1516,"- \n"]],[1515,1515],[1518,1518]]],[1537691112868,["gjx16@GJXAIOU",[[-1,1516,"- "]],[1518,1518],[1516,1516]]],[1537691116870,["gjx16@GJXAIOU",[[1,1516,"  - "]],[1516,1516],[1520,1520]]],[1537691131359,["gjx16@GJXAIOU",[[1,1520,"extern int age;"]],[1520,1520],[1535,1535]]],[1537691135183,["gjx16@GJXAIOU",[[1,1536,"  - \n"]],[1535,1535],[1540,1540]]],[1537691139434,["gjx16@GJXAIOU",[[1,1540,"int aged"]],[1540,1540],[1548,1548]]],[1537691140217,["gjx16@GJXAIOU",[[-1,1547,"d"]],[1548,1548],[1547,1547]]],[1537691167782,["gjx16@GJXAIOU",[[1,1547,";    //这包含两个含义：声明一个变量或者定义一个变量"]],[1547,1547],[1576,1576]]],[1537691169014,["gjx16@GJXAIOU",[[1,1577,"  - \n"]],[1576,1576],[1581,1581]]],[1537691171389,["gjx16@GJXAIOU",[[-1,1578," - "]],[1581,1581],[1578,1578]]],[1537691172984,["gjx16@GJXAIOU",[[1,1578,"- "]],[1578,1578],[1580,1580]]],[1537691176091,["gjx16@GJXAIOU",[[-1,1577," "]],[1578,1578],[1577,1577]]],[1537691180350,["gjx16@GJXAIOU",[[1,1579,"函数"]],[1579,1579],[1581,1581]]],[1537691181488,["gjx16@GJXAIOU",[[1,1582,"- \n"]],[1581,1581],[1584,1584]]],[1537691184155,["gjx16@GJXAIOU",[[1,1582,"  "]],[1582,1582],[1584,1584]]],[1537691194587,["gjx16@GJXAIOU",[[1,1586,"extern i"]],[1586,1586],[1594,1594]]],[1537691196244,["gjx16@GJXAIOU",[[-1,1593,"i"]],[1594,1594],[1593,1593]]],[1537691202505,["gjx16@GJXAIOU",[[1,1593,"void age()"]],[1593,1593],[1603,1603]]],[1537691203343,["gjx16@GJXAIOU",[[1,1604,"  - \n"]],[1603,1603],[1608,1608]]],[1537691212245,["gjx16@GJXAIOU",[[1,1608,"void age()     //"]],[1608,1608],[1625,1625]]],[1537691216502,["gjx16@GJXAIOU",[[-1,1623,"//"]],[1625,1625],[1623,1623]]],[1537691219719,["gjx16@GJXAIOU",[[1,1581,"（）"]],[1581,1581],[1583,1583]]],[1537691231806,["gjx16@GJXAIOU",[[1,1582,"下面两个没有什么区别"]],[1582,1582],[1592,1592]]],[1537691235779,["gjx16@GJXAIOU",[[1,1637,"\n"]],[1636,1636],[1637,1637]]],[1537691403382,["gjx16@GJXAIOU",[[1,1821,"对于自动变量，什么时候入栈和出栈都是系统自动控制的"]],[1821,1821],[1846,1846]]],[1537691579363,["gjx16@GJXAIOU",[[1,1848,"\n"]],[1846,1846],[1847,1847]]],[1537691579519,["gjx16@GJXAIOU",[[1,1849,"\n"]],[1847,1847],[1848,1848]]],[1537691579976,["gjx16@GJXAIOU",[[1,1850,"\n"]],[1848,1848],[1849,1849]]],[1537692138120,["gjx16@GJXAIOU",[[1,1848,"栈区可以、、"]],[1848,1848],[1854,1854]]],[1537692139264,["gjx16@GJXAIOU",[[-1,1851,"以、、"]],[1854,1854],[1851,1851]]],[1537692139560,["gjx16@GJXAIOU",[[-1,1850,"可"]],[1851,1851],[1850,1850]]],[1537692173885,["gjx16@GJXAIOU",[[1,1850,"的大小是可以动态设置的，不过不会特别大，一般大小为XXk"]],[1850,1850],[1878,1878]]],[1537692175619,["gjx16@GJXAIOU",[[1,1877," "]],[1877,1877],[1878,1878]]],[1537692179577,["gjx16@GJXAIOU",[[1,1879,",f"]],[1879,1879],[1881,1881]]],[1537692180946,["gjx16@GJXAIOU",[[-1,1879,",f"]],[1881,1881],[1879,1879]]],[1537692182222,["gjx16@GJXAIOU",[[1,1879,"，"]],[1879,1879],[1880,1880]]],[1537692199176,["gjx16@GJXAIOU",[[1,1776,"指针，数组"]],[1776,1776],[1781,1781]]],[1537692200305,["gjx16@GJXAIOU",[[1,1781,"、"]],[1781,1781],[1782,1782]]],[1537692209764,["gjx16@GJXAIOU",[[1,1737,"、"]],[1737,1737],[1738,1738]]],[1537692210806,["gjx16@GJXAIOU",[[-1,1737,"、"]],[1738,1738],[1737,1737]]],[1537692214262,["gjx16@GJXAIOU",[[1,1737,"/常量"]],[1737,1737],[1740,1740]]],[1537692220870,["gjx16@GJXAIOU",[[1,1745,"/常量"]],[1745,1745],[1748,1748]]],[1537692592526,["gjx16@GJXAIOU",[[1,1895,"\n"]],[1892,1892],[1893,1893]]],[1537692593384,["gjx16@GJXAIOU",[[1,1896,"\n"]],[1893,1893],[1894,1894]]],[1537692594814,["gjx16@GJXAIOU",[[1,1894,"****"]],[1894,1894],[1896,1896]]],[1537692597848,["gjx16@GJXAIOU",[[1,1896,"栈溢出"]],[1896,1896],[1899,1899]]],[1537692600250,["gjx16@GJXAIOU",[[1,1904,"\n"]],[1901,1901],[1902,1902]]],[1537692612436,["gjx16@GJXAIOU",[[1,1902,"当栈空间已满，但是"]],[1902,1902],[1911,1911]]],[1537692639131,["gjx16@GJXAIOU",[[1,1911,"还往栈内存中压变量，这就是栈溢出；"]],[1911,1911],[1928,1928]]],[1537692639721,["gjx16@GJXAIOU",[[1,1931,"\n"]],[1928,1928],[1929,1929]]],[1537692640219,["gjx16@GJXAIOU",[[1,1932,"\n"]],[1929,1929],[1930,1930]]],[1537692730469,["gjx16@GJXAIOU",[[1,1933,"\n"]],[1930,1930],[1931,1931]]],[1537692732345,["gjx16@GJXAIOU",[[1,1931,"#33"]],[1931,1931],[1934,1934]]],[1537692733478,["gjx16@GJXAIOU",[[-1,1931,"#33"]],[1934,1934],[1931,1931]]],[1537692733798,["gjx16@GJXAIOU",[[-1,1933,"\n"]],[1931,1931],[1930,1930]]],[1537692734736,["gjx16@GJXAIOU",[[1,1933,"\n"]],[1930,1930],[1931,1931]]],[1537692737050,["gjx16@GJXAIOU",[[1,1931,"### "]],[1931,1931],[1935,1935]]],[1537692746777,["gjx16@GJXAIOU",[[1,1935,"堆区"]],[1935,1935],[1937,1937]]],[1537692748095,["gjx16@GJXAIOU",[[1,1940,"\n"]],[1937,1937],[1938,1938]]],[1537692749328,["gjx16@GJXAIOU",[[1,1941,"\n"]],[1938,1938],[1939,1939]]],[1537692978767,["gjx16@GJXAIOU",[[1,1939,"堆和栈一样，是一种在程序运行过程中可以随时修改的内存区域，但是"]],[1939,1939],[1970,1970]]],[1537692989370,["gjx16@GJXAIOU",[[1,1970,"没有栈那样的先进后厨"]],[1970,1970],[1980,1980]]],[1537692990157,["gjx16@GJXAIOU",[[-1,1979,"厨"]],[1980,1980],[1979,1979]]],[1537693017426,["gjx16@GJXAIOU",[[1,1979,"出的顺序，是一个大容器，容量远远大于栈，对"]],[1979,1979],[2000,2000]]],[1537693018048,["gjx16@GJXAIOU",[[-1,1999,"对"]],[2000,2000],[1999,1999]]],[1537693035279,["gjx16@GJXAIOU",[[1,1999,"堆内存空间的申请和释放需要手工通过带啊"]],[1999,1999],[2018,2018]]],[1537693036471,["gjx16@GJXAIOU",[[-1,2016,"带啊"]],[2018,2018],[2016,2016]]],[1537693038216,["gjx16@GJXAIOU",[[1,2016,"代码"]],[2016,2016],[2018,2018]]],[1537693046246,["gjx16@GJXAIOU",[[1,2018,"来完成；"]],[2018,2018],[2022,2022]]],[1537693048172,["gjx16@GJXAIOU",[[1,2025,"\n"]],[2022,2022],[2023,2023]]],[1537693048572,["gjx16@GJXAIOU",[[1,2026,"\n"]],[2023,2023],[2024,2024]]],[1537693233217,["gjx16@GJXAIOU",[[-1,2026,"\n"]],[2025,2025],[2024,2024]]],[1537693235388,["gjx16@GJXAIOU",[[1,2024,"~"]],[2024,2024],[2025,2025]]],[1537693236297,["gjx16@GJXAIOU",[[-1,2024,"~"]],[2025,2025],[2024,2024]]],[1537693237326,["gjx16@GJXAIOU",[[1,2024,"·"]],[2024,2024],[2025,2025]]],[1537693238173,["gjx16@GJXAIOU",[[-1,2024,"·"]],[2025,2025],[2024,2024]]],[1537693239587,["gjx16@GJXAIOU",[[1,2024,"```"]],[2024,2024],[2027,2027]]],[1537693239614,["gjx16@GJXAIOU",[[1,2027,"language\n```\n"]],[2027,2027],[2027,2035]]],[1537693240949,["gjx16@GJXAIOU",[[-1,2027,"language"],[1,2035,"c"]],[2027,2035],[2028,2028]]],[1537693241274,["gjx16@GJXAIOU",[[1,2029,"\n"]],[2028,2028],[2029,2029]]],[1537693246073,["gjx16@GJXAIOU",[[1,2029,"#include<>"]],[2029,2029],[2039,2039]]],[1537693251733,["gjx16@GJXAIOU",[[1,2038,"stdio.h"]],[2038,2038],[2045,2045]]],[1537693253492,["gjx16@GJXAIOU",[[1,2047,"\n"]],[2046,2046],[2047,2047]]],[1537693254098,["gjx16@GJXAIOU",[[1,2048,"\n"]],[2047,2047],[2048,2048]]],[1537693256948,["gjx16@GJXAIOU",[[1,2048,"int main()"]],[2048,2048],[2058,2058]]],[1537693257591,["gjx16@GJXAIOU",[[1,2059,"\n"]],[2058,2058],[2059,2059]]],[1537693258677,["gjx16@GJXAIOU",[[1,2059,"{}"]],[2059,2059],[2061,2061]]],[1537693260008,["gjx16@GJXAIOU",[[1,2060,"\n"]],[2060,2060],[2061,2061]]],[1537693260181,["gjx16@GJXAIOU",[[1,2061,"\n"]],[2061,2061],[2062,2062]]],[1537693260361,["gjx16@GJXAIOU",[[1,2062,"\n"]],[2062,2062],[2063,2063]]],[1537693260929,["gjx16@GJXAIOU",[[1,2063,"\n"]],[2063,2063],[2064,2064]]],[1537693263118,["gjx16@GJXAIOU",[[1,2061,"  "]],[2061,2061],[2063,2063]]],[1537693268563,["gjx16@GJXAIOU",[[1,2047,"@"]],[2047,2047],[2048,2048]]],[1537693269484,["gjx16@GJXAIOU",[[-1,2047,"@"]],[2048,2048],[2047,2047]]],[1537693274165,["gjx16@GJXAIOU",[[1,2047,"#include<>"]],[2047,2047],[2057,2057]]],[1537693278681,["gjx16@GJXAIOU",[[1,2056,"stdli"]],[2056,2056],[2061,2061]]],[1537693280985,["gjx16@GJXAIOU",[[1,2061,"b.h"]],[2061,2061],[2064,2064]]],[1537693290175,["gjx16@GJXAIOU",[[1,2065,"   //加一个头文件"]],[2065,2065],[2076,2076]]],[1537693294931,["gjx16@GJXAIOU",[[1,2077,"\n"]],[2077,2077],[2078,2078]]],[1537693299868,["gjx16@GJXAIOU",[[1,2093,"  "]],[2091,2091],[2093,2093]]],[1537693501782,["gjx16@GJXAIOU",[[1,2095,"int"]],[2095,2095],[2098,2098]]],[1537693502931,["gjx16@GJXAIOU",[[-1,2095,"int"]],[2098,2098],[2095,2095]]],[1537693518297,["gjx16@GJXAIOU",[[1,2095,"int *p = malloc();"]],[2095,2095],[2113,2113]]],[1537693522947,["gjx16@GJXAIOU",[[1,2111,"sizeof("]],[2111,2111],[2118,2118]]],[1537693523047,["gjx16@GJXAIOU",[[1,2119,")"]],[2118,2118],[2119,2119]]],[1537693525711,["gjx16@GJXAIOU",[[1,2118,"int "]],[2118,2118],[2122,2122]]],[1537693526653,["gjx16@GJXAIOU",[[-1,2121," "]],[2122,2122],[2121,2121]]],[1537693530258,["gjx16@GJXAIOU",[[1,2122,"*10"]],[2122,2122],[2125,2125]]],[1537693535437,["gjx16@GJXAIOU",[[1,2127,"  //s"]],[2127,2127],[2132,2132]]],[1537693535773,["gjx16@GJXAIOU",[[-1,2131,"s"]],[2132,2132],[2131,2131]]],[1537693539931,["gjx16@GJXAIOU",[[1,2131,"申请一个"]],[2131,2131],[2135,2135]]],[1537693579320,["gjx16@GJXAIOU",[[-1,2132,"请一个"]],[2135,2135],[2132,2132]]],[1537693579645,["gjx16@GJXAIOU",[[-1,2131,"申"]],[2132,2132],[2131,2131]]],[1537693593824,["gjx16@GJXAIOU",[[1,2131,"在堆中间申请内存，"]],[2131,2131],[2140,2140]]],[1537693598054,["gjx16@GJXAIOU",[[-1,2139,"，"]],[2140,2140],[2139,2139]]],[1537693614292,["gjx16@GJXAIOU",[[1,2139,"，函数的返回值为无类型的指针，番薯"]],[2139,2139],[2156,2156]]],[1537693615541,["gjx16@GJXAIOU",[[-1,2154,"番薯"]],[2156,2156],[2154,2154]]],[1537693621098,["gjx16@GJXAIOU",[[1,2154,"参数为size_o"]],[2154,2154],[2163,2163]]],[1537693621843,["gjx16@GJXAIOU",[[-1,2162,"o"]],[2163,2163],[2162,2162]]],[1537693638496,["gjx16@GJXAIOU",[[1,2162,"t无符号的整数   ，现在这个语句的"]],[2162,2162],[2180,2180]]],[1537693662252,["gjx16@GJXAIOU",[[1,2180,"含义是：申请一个内存大小为10的"]],[2180,2180],[2196,2196]]],[1537693663058,["gjx16@GJXAIOU",[[-1,2195,"的"]],[2196,2196],[2195,2195]]],[1537693670587,["gjx16@GJXAIOU",[[1,2195,"个int大小的内存"]],[2195,2195],[2204,2204]]],[1537693672698,["gjx16@GJXAIOU",[[-1,2202,"内存"]],[2204,2204],[2202,2202]]],[1537693697292,["gjx16@GJXAIOU",[[1,2202,"空间顶顶顶顶顶顶顶顶"]],[2202,2202],[2212,2212]]],[1537693713206,["gjx16@GJXAIOU",[[-1,2204,"顶顶顶顶顶顶顶顶"]],[2212,2212],[2204,2204]]],[1537693714663,["gjx16@GJXAIOU",[[1,2204,"。"]],[2204,2204],[2205,2205]]],[1537693773563,["gjx16@GJXAIOU",[[1,2206,"      "]],[2206,2206],[2212,2212]]],[1537693774198,["gjx16@GJXAIOU",[[-1,2206,"      "],[1,2212,"\n"]],[2212,2212],[2207,2207]]],[1537693774867,["gjx16@GJXAIOU",[[1,2207,"      "]],[2207,2207],[2213,2213]]],[1537693775653,["gjx16@GJXAIOU",[[-1,2212," "]],[2213,2213],[2212,2212]]],[1537693782872,["gjx16@GJXAIOU",[[1,2212,"free();"]],[2212,2212],[2219,2219]]],[1537693784672,["gjx16@GJXAIOU",[[1,2218,"p"]],[2218,2218],[2219,2219]]],[1537693785532,["gjx16@GJXAIOU",[[-1,2218,"p"]],[2219,2219],[2218,2218]]],[1537693787219,["gjx16@GJXAIOU",[[1,2217,"p"]],[2217,2217],[2218,2218]]],[1537693804293,["gjx16@GJXAIOU",[[1,2220,"//释放通过malloc分配的堆内存"]],[2220,2220],[2238,2238]]],[1537693883777,["gjx16@GJXAIOU",[[1,2206,"    "]],[2206,2206],[2210,2210]]],[1537693884557,["gjx16@GJXAIOU",[[-1,2206,"    "],[1,2210,"\n"]],[2210,2210],[2207,2207]]],[1537693902941,["gjx16@GJXAIOU",[[1,2207,"    memset();"]],[2207,2207],[2220,2220]]],[1537693912702,["gjx16@GJXAIOU",[[1,2218,"p ,0,sizeof("]],[2218,2218],[2230,2230]]],[1537693912868,["gjx16@GJXAIOU",[[1,2231,")"]],[2230,2230],[2231,2231]]],[1537693916087,["gjx16@GJXAIOU",[[1,2230,"int "]],[2230,2230],[2234,2234]]],[1537693916763,["gjx16@GJXAIOU",[[-1,2233," "]],[2234,2234],[2233,2233]]],[1537693921528,["gjx16@GJXAIOU",[[1,2234," * 10"]],[2234,2234],[2239,2239]]],[1537693926727,["gjx16@GJXAIOU",[[1,2241,"  //jiang"]],[2241,2241],[2250,2250]]],[1537693927694,["gjx16@GJXAIOU",[[-1,2245,"jiang"]],[2250,2250],[2245,2245]]],[1537693937354,["gjx16@GJXAIOU",[[1,2245,"将分配的这个"]],[2245,2245],[2251,2251]]],[1537693954388,["gjx16@GJXAIOU",[[1,2251,"空间置零初始化"]],[2251,2251],[2258,2258]]],[1537694311410,["gjx16@GJXAIOU",[[1,2300,"\n"]],[2297,2297],[2298,2298]]],[1537694311588,["gjx16@GJXAIOU",[[1,2301,"\n"]],[2298,2298],[2299,2299]]],[1537694311718,["gjx16@GJXAIOU",[[1,2302,"\n"]],[2299,2299],[2300,2300]]],[1537694313209,["gjx16@GJXAIOU",[[1,2300,"****"]],[2300,2300],[2302,2302]]],[1537694322403,["gjx16@GJXAIOU",[[1,2302,"堆和栈的区别"]],[2302,2302],[2308,2308]]],[1537694324326,["gjx16@GJXAIOU",[[1,2313,"\n"]],[2310,2310],[2311,2311]]],[1537694326680,["gjx16@GJXAIOU",[[1,2314,"\n"]],[2311,2311],[2312,2312]]],[1537694327158,["gjx16@GJXAIOU",[[1,2312,"  "]],[2312,2312],[2314,2314]]],[1537694328902,["gjx16@GJXAIOU",[[-1,2312,"  "]],[2314,2314],[2312,2312]]],[1537694331313,["gjx16@GJXAIOU",[[1,2312,"```"]],[2312,2312],[2315,2315]]],[1537694331341,["gjx16@GJXAIOU",[[1,2315,"language\n```\n"]],[2315,2315],[2315,2323]]],[1537694332182,["gjx16@GJXAIOU",[[-1,2315,"language"],[1,2323,"c"]],[2315,2323],[2316,2316]]],[1537694332408,["gjx16@GJXAIOU",[[1,2317,"\n"]],[2316,2316],[2317,2317]]],[1537694332591,["gjx16@GJXAIOU",[[1,2318,"\n"]],[2317,2317],[2318,2318]]],[1537694332804,["gjx16@GJXAIOU",[[1,2319,"\n"]],[2318,2318],[2319,2319]]],[1537694339526,["gjx16@GJXAIOU",[[1,2317,"#include<."]],[2317,2317],[2327,2327]]],[1537694340368,["gjx16@GJXAIOU",[[-1,2326,"."]],[2327,2327],[2326,2326]]],[1537694340924,["gjx16@GJXAIOU",[[1,2326,">"]],[2326,2326],[2327,2327]]],[1537694346088,["gjx16@GJXAIOU",[[1,2326,"stdio.h"]],[2326,2326],[2333,2333]]],[1537694347836,["gjx16@GJXAIOU",[[1,2337,"\n"]],[2334,2334],[2335,2335]]],[1537694348416,["gjx16@GJXAIOU",[[1,2338,"\n"]],[2335,2335],[2336,2336]]],[1537694351859,["gjx16@GJXAIOU",[[1,2336,"int main()"]],[2336,2336],[2346,2346]]],[1537694352512,["gjx16@GJXAIOU",[[1,2349,"\n"]],[2346,2346],[2347,2347]]],[1537694353636,["gjx16@GJXAIOU",[[1,2347,"{}"]],[2347,2347],[2349,2349]]],[1537694354648,["gjx16@GJXAIOU",[[1,2348,"\n"]],[2348,2348],[2349,2349]]],[1537694354801,["gjx16@GJXAIOU",[[1,2349,"\n"]],[2349,2349],[2350,2350]]],[1537694354976,["gjx16@GJXAIOU",[[1,2350,"\n"]],[2350,2350],[2351,2351]]],[1537694355109,["gjx16@GJXAIOU",[[1,2351,"\n"]],[2351,2351],[2352,2352]]],[1537694355321,["gjx16@GJXAIOU",[[1,2352,"\n"]],[2352,2352],[2353,2353]]],[1537694359119,["gjx16@GJXAIOU",[[1,2350,"int "]],[2350,2350],[2354,2354]]],[1537694364537,["gjx16@GJXAIOU",[[1,2335,"voe"]],[2335,2335],[2338,2338]]],[1537694366112,["gjx16@GJXAIOU",[[-1,2335,"voe"]],[2338,2338],[2335,2335]]],[1537694373191,["gjx16@GJXAIOU",[[1,2335,"#include<>"]],[2335,2335],[2345,2345]]],[1537694379594,["gjx16@GJXAIOU",[[1,2344,"stdlib.h"]],[2344,2344],[2352,2352]]],[1537694382789,["gjx16@GJXAIOU",[[1,2354,"\n"]],[2353,2353],[2354,2354]]],[1537694383405,["gjx16@GJXAIOU",[[1,2355,"\n"]],[2354,2354],[2355,2355]]],[1537694398692,["gjx16@GJXAIOU",[[1,2355,"void *geta()"]],[2355,2355],[2367,2367]]],[1537694399475,["gjx16@GJXAIOU",[[1,2368,"\n"]],[2367,2367],[2368,2368]]],[1537694400571,["gjx16@GJXAIOU",[[1,2368,"{}"]],[2368,2368],[2370,2370]]],[1537694401932,["gjx16@GJXAIOU",[[1,2369,"\n"]],[2369,2369],[2370,2370]]],[1537694402102,["gjx16@GJXAIOU",[[1,2370,"\n"]],[2370,2370],[2371,2371]]],[1537694406455,["gjx16@GJXAIOU",[[1,2370,"  int a;"]],[2370,2370],[2378,2378]]],[1537694407088,["gjx16@GJXAIOU",[[-1,2377,";"]],[2378,2378],[2377,2377]]],[1537694408227,["gjx16@GJXAIOU",[[1,2377,"= "]],[2377,2377],[2379,2379]]],[1537694409423,["gjx16@GJXAIOU",[[-1,2377,"= "]],[2379,2379],[2377,2377]]],[1537694411854,["gjx16@GJXAIOU",[[1,2377," = 0;"]],[2377,2377],[2382,2382]]],[1537694412319,["gjx16@GJXAIOU",[[1,2383,"  \n"]],[2382,2382],[2385,2385]]],[1537694416426,["gjx16@GJXAIOU",[[1,2385,"ree"]],[2385,2385],[2388,2388]]],[1537694417056,["gjx16@GJXAIOU",[[-1,2387,"e"]],[2388,2388],[2387,2387]]],[1537694417955,["gjx16@GJXAIOU",[[1,2387,"t"]],[2387,2387],[2388,2388]]],[1537694418716,["gjx16@GJXAIOU",[[-1,2387,"t"]],[2388,2388],[2387,2387]]],[1537694424158,["gjx16@GJXAIOU",[[1,2387,"turn &a;"]],[2387,2387],[2395,2395]]],[1537694432740,["gjx16@GJXAIOU",[[1,2367,"   //zhe"]],[2367,2367],[2375,2375]]],[1537694433562,["gjx16@GJXAIOU",[[-1,2372,"zhe"]],[2375,2375],[2372,2372]]],[1537694436843,["gjx16@GJXAIOU",[[1,2372,"这是错位"]],[2372,2372],[2376,2376]]],[1537694438047,["gjx16@GJXAIOU",[[-1,2374,"错位"]],[2376,2376],[2374,2374]]],[1537694466064,["gjx16@GJXAIOU",[[1,2374,"错误的，不能教案一个栈变量的地址通过函数的返回值返回"]],[2374,2374],[2400,2400]]],[1537694469518,["gjx16@GJXAIOU",[[1,2431,"\n"]],[2430,2430],[2431,2431]]],[1537694469907,["gjx16@GJXAIOU",[[1,2432,"\n"]],[2431,2431],[2432,2432]]],[1537694478454,["gjx16@GJXAIOU",[[1,2432,"void *geta"]],[2432,2432],[2442,2442]]],[1537694480860,["gjx16@GJXAIOU",[[1,2442,"1()"]],[2442,2442],[2445,2445]]],[1537694481492,["gjx16@GJXAIOU",[[1,2446,"\n"]],[2445,2445],[2446,2446]]],[1537694482940,["gjx16@GJXAIOU",[[1,2446,"{}"]],[2446,2446],[2448,2448]]],[1537694484028,["gjx16@GJXAIOU",[[1,2447,"\n"]],[2447,2447],[2448,2448]]],[1537694484212,["gjx16@GJXAIOU",[[1,2448,"\n"]],[2448,2448],[2449,2449]]],[1537694484393,["gjx16@GJXAIOU",[[1,2449,"\n"]],[2449,2449],[2450,2450]]],[1537694485922,["gjx16@GJXAIOU",[[1,2452,"\n"]],[2451,2451],[2452,2452]]],[1537694487304,["gjx16@GJXAIOU",[[1,2453,"\n"]],[2452,2452],[2453,2453]]],[1537694489994,["gjx16@GJXAIOU",[[1,2448,"  "]],[2448,2448],[2450,2450]]],[1537702611567,["gjx16@GJXAIOU",[[1,2450,"int  *p = "]],[2450,2450],[2460,2460]]],[1537702619760,["gjx16@GJXAIOU",[[1,2460,"maccl"]],[2460,2460],[2465,2465]]],[1537702621450,["gjx16@GJXAIOU",[[-1,2462,"ccl"]],[2465,2465],[2462,2462]]],[1537702626342,["gjx16@GJXAIOU",[[1,2462,"lloc();"]],[2462,2462],[2469,2469]]],[1537702630502,["gjx16@GJXAIOU",[[1,2467,"sizeod"]],[2467,2467],[2473,2473]]],[1537702631017,["gjx16@GJXAIOU",[[-1,2472,"d"]],[2473,2473],[2472,2472]]],[1537702632831,["gjx16@GJXAIOU",[[1,2472,"f("]],[2472,2472],[2474,2474]]],[1537702632903,["gjx16@GJXAIOU",[[1,2475,")"]],[2474,2474],[2475,2475]]],[1537702635604,["gjx16@GJXAIOU",[[1,2474,"int "]],[2474,2474],[2478,2478]]],[1537702636460,["gjx16@GJXAIOU",[[-1,2476,"t "]],[2478,2478],[2476,2476]]],[1537702638237,["gjx16@GJXAIOU",[[1,2476,"t"]],[2476,2476],[2477,2477]]],[1537702644574,["gjx16@GJXAIOU",[[1,2480," //shen"]],[2480,2480],[2487,2487]]],[1537702645561,["gjx16@GJXAIOU",[[-1,2483,"shen"]],[2487,2487],[2483,2483]]],[1537702663715,["gjx16@GJXAIOU",[[1,2483,"申请了一个堆空间"]],[2483,2483],[2491,2491]]],[1537702664722,["gjx16@GJXAIOU",[[1,2492,"  \n"]],[2491,2491],[2494,2494]]],[1537702670987,["gjx16@GJXAIOU",[[1,2494,"return p;"]],[2494,2494],[2503,2503]]],[1537703765708,["gjx16@GJXAIOU",[[1,2445,"  "]],[2445,2445],[2447,2447]]],[1537703770454,["gjx16@GJXAIOU",[[-1,2446," "]],[2447,2447],[2446,2446]]],[1537703774682,["gjx16@GJXAIOU",[[1,2446,"//keyi"]],[2446,2446],[2452,2452]]],[1537703776111,["gjx16@GJXAIOU",[[-1,2448,"keyi"]],[2452,2452],[2448,2448]]],[1537703799404,["gjx16@GJXAIOU",[[1,2448,"可以通过函数的返回值返回一个堆地址，但是一定要free"]],[2448,2448],[2475,2475]]],[1537703849643,["gjx16@GJXAIOU",[[1,2557,"*getp = geta1();"]],[2557,2557],[2573,2573]]],[1537703850174,["gjx16@GJXAIOU",[[1,2576,"\n"]],[2573,2573],[2574,2574]]],[1537703856869,["gjx16@GJXAIOU",[[1,2574,"*getp = 100;"]],[2574,2574],[2586,2586]]],[1537703857534,["gjx16@GJXAIOU",[[1,2589,"\n"]],[2586,2586],[2587,2587]]],[1537703863025,["gjx16@GJXAIOU",[[1,2587,"free();"]],[2587,2587],[2594,2594]]],[1537703866635,["gjx16@GJXAIOU",[[1,2592,"getp"]],[2592,2592],[2596,2596]]],[1537703989943,["gjx16@GJXAIOU",[[1,2538,"voide"]],[2538,2538],[2543,2543]]],[1537703990734,["gjx16@GJXAIOU",[[-1,2542,"e"]],[2543,2543],[2542,2542]]],[1537703997033,["gjx16@GJXAIOU",[[1,2542," *gat2"]],[2542,2542],[2548,2548]]],[1537703997941,["gjx16@GJXAIOU",[[-1,2547,"2"]],[2548,2548],[2547,2547]]],[1537703998104,["gjx16@GJXAIOU",[[1,2547,"q"]],[2547,2547],[2548,2548]]],[1537703999092,["gjx16@GJXAIOU",[[-1,2547,"q"]],[2548,2548],[2547,2547]]],[1537704002764,["gjx16@GJXAIOU",[[1,2547,"a2()"]],[2547,2547],[2551,2551]]],[1537704004000,["gjx16@GJXAIOU",[[1,2552,"\n"]],[2551,2551],[2552,2552]]],[1537704005808,["gjx16@GJXAIOU",[[1,2552,"{}"]],[2552,2552],[2554,2554]]],[1537704007486,["gjx16@GJXAIOU",[[1,2553,"\n"]],[2553,2553],[2554,2554]]],[1537704007749,["gjx16@GJXAIOU",[[1,2554,"\n"]],[2554,2554],[2555,2555]]],[1537704008056,["gjx16@GJXAIOU",[[1,2555,"\n"]],[2555,2555],[2556,2556]]],[1537704009821,["gjx16@GJXAIOU",[[1,2558,"\n"]],[2557,2557],[2558,2558]]],[1537704014137,["gjx16@GJXAIOU",[[1,2554,"  "]],[2554,2554],[2556,2556]]],[1537704064485,["gjx16@GJXAIOU",[[1,2556,"static ubt ==="]],[2556,2556],[2570,2570]]],[1537704066787,["gjx16@GJXAIOU",[[-1,2563,"ubt ==="]],[2570,2570],[2563,2563]]],[1537704070759,["gjx16@GJXAIOU",[[1,2563,"int a = "]],[2563,2563],[2571,2571]]],[1537704364358,["gjx16@GJXAIOU",[[1,2571,";"]],[2571,2571],[2572,2572]]],[1537704365336,["gjx16@GJXAIOU",[[-1,2571,";"]],[2572,2572],[2571,2571]]],[1537704367215,["gjx16@GJXAIOU",[[1,2571,"0;"]],[2571,2571],[2573,2573]]],[1537704367854,["gjx16@GJXAIOU",[[1,2574,"  \n"]],[2573,2573],[2576,2576]]],[1537704373573,["gjx16@GJXAIOU",[[1,2576,"return ////7a"]],[2576,2576],[2589,2589]]],[1537704376382,["gjx16@GJXAIOU",[[-1,2583,"////7a"]],[2589,2589],[2583,2583]]],[1537704380087,["gjx16@GJXAIOU",[[1,2583,"&a;"]],[2583,2583],[2586,2586]]],[1537704384279,["gjx16@GJXAIOU",[[-1,2587,"\n"]],[2587,2587],[2586,2586]]],[1537704386978,["gjx16@GJXAIOU",[[1,2590,"\n"]],[2589,2589],[2590,2590]]],[1537704395680,["gjx16@GJXAIOU",[[-1,2652,"\n"]],[2652,2652],[2651,2651]]],[1537704395904,["gjx16@GJXAIOU",[[-1,2651,"\n"]],[2651,2651],[2650,2650]]],[1537704399697,["gjx16@GJXAIOU",[[1,2605,"  "]],[2605,2605],[2607,2607]]],[1537704401780,["gjx16@GJXAIOU",[[1,2628,"  "]],[2628,2628],[2630,2630]]],[1537704402555,["gjx16@GJXAIOU",[[1,2643,"  "]],[2643,2643],[2645,2645]]],[1537704404517,["gjx16@GJXAIOU",[[-1,2604,"\n"]],[2604,2604],[2603,2603]]],[1537704407934,["gjx16@GJXAIOU",[[1,2602,"\n"]],[2602,2602],[2603,2603]]],[1537704424224,["gjx16@GJXAIOU",[[1,2551,"   //zhey"]],[2551,2551],[2560,2560]]],[1537704425298,["gjx16@GJXAIOU",[[-1,2556,"zhey"]],[2560,2560],[2556,2556]]],[1537704455277,["gjx16@GJXAIOU",[[1,2556,"这也是合法的，只要将main函数中的geta1改为geta2"]],[2556,2556],[2586,2586]]],[1537704494182,["gjx16@GJXAIOU",[[1,2586,",ranhou"]],[2586,2586],[2593,2593]]],[1537704496435,["gjx16@GJXAIOU",[[-1,2587,"ranhou"]],[2593,2593],[2587,2587]]],[1537704499872,["gjx16@GJXAIOU",[[1,2587,"然后将"]],[2587,2587],[2590,2590]]],[1537704571642,["gjx16@GJXAIOU",[[1,2590,"free()"]],[2590,2590],[2596,2596]]],[1537704583468,["gjx16@GJXAIOU",[[1,2595,"getp"]],[2595,2595],[2599,2599]]],[1537704612600,["gjx16@GJXAIOU",[[1,2600,"qudiao"]],[2600,2600],[2606,2606]]],[1537704615138,["gjx16@GJXAIOU",[[-1,2600,"qudiao"]],[2606,2606],[2600,2600]]],[1537704618938,["gjx16@GJXAIOU",[[1,2600,"去掉即可"]],[2600,2600],[2604,2604]]],[1537705252230,["gjx16@GJXAIOU",[[1,2721,"\n"]],[2717,2717],[2718,2718]]],[1537705252699,["gjx16@GJXAIOU",[[1,2722,"\n"]],[2718,2718],[2719,2719]]],[1537705261606,["gjx16@GJXAIOU",[[1,2719,"****"]],[2719,2719],[2721,2721]]],[1537705268715,["gjx16@GJXAIOU",[[1,2721,"理解下面程序"]],[2721,2721],[2727,2727]]],[1537705270935,["gjx16@GJXAIOU",[[1,2733,"\n"]],[2729,2729],[2730,2730]]],[1537705271546,["gjx16@GJXAIOU",[[1,2734,"\n"]],[2730,2730],[2731,2731]]],[1537705348471,["gjx16@GJXAIOU",[[1,2731,"··"]],[2731,2731],[2733,2733]]],[1537705350098,["gjx16@GJXAIOU",[[-1,2731,"··"]],[2733,2733],[2731,2731]]],[1537705350438,["gjx16@GJXAIOU",[[-1,2734,"\n"]],[2731,2731],[2730,2730]]],[1537705351357,["gjx16@GJXAIOU",[[1,2734,"\n"]],[2730,2730],[2731,2731]]],[1537705352666,["gjx16@GJXAIOU",[[1,2731,"```"]],[2731,2731],[2734,2734]]],[1537705352694,["gjx16@GJXAIOU",[[1,2734,"language\n```\n"]],[2734,2734],[2734,2742]]],[1537705353865,["gjx16@GJXAIOU",[[-1,2734,"language"],[1,2742,"c"]],[2734,2742],[2735,2735]]],[1537705354342,["gjx16@GJXAIOU",[[1,2736,"\n"]],[2735,2735],[2736,2736]]],[1537705361228,["gjx16@GJXAIOU",[[1,2736,"#include<>"]],[2736,2736],[2746,2746]]],[1537705365139,["gjx16@GJXAIOU",[[1,2745,"stdio.h"]],[2745,2745],[2752,2752]]],[1537705367059,["gjx16@GJXAIOU",[[1,2754,"\n"]],[2753,2753],[2754,2754]]],[1537705367757,["gjx16@GJXAIOU",[[1,2755,"\n"]],[2754,2754],[2755,2755]]],[1537705371701,["gjx16@GJXAIOU",[[1,2755,"void"]],[2755,2755],[2759,2759]]],[1537705383187,["gjx16@GJXAIOU",[[1,2759," getheap()"]],[2759,2759],[2769,2769]]],[1537705389798,["gjx16@GJXAIOU",[[1,2768,"int  *a"]],[2768,2768],[2775,2775]]],[1537705392684,["gjx16@GJXAIOU",[[1,2777,"\n"]],[2776,2776],[2777,2777]]],[1537705395350,["gjx16@GJXAIOU",[[1,2777,"{}"]],[2777,2777],[2779,2779]]],[1537705396456,["gjx16@GJXAIOU",[[1,2778,"\n"]],[2778,2778],[2779,2779]]],[1537705396673,["gjx16@GJXAIOU",[[1,2779,"\n"]],[2779,2779],[2780,2780]]],[1537705396898,["gjx16@GJXAIOU",[[1,2780,"\n"]],[2780,2780],[2781,2781]]],[1537705401464,["gjx16@GJXAIOU",[[1,2779,"  p"]],[2779,2779],[2782,2782]]],[1537705403601,["gjx16@GJXAIOU",[[-1,2781,"p"]],[2782,2782],[2781,2781]]],[1537705413432,["gjx16@GJXAIOU",[[1,2781,"p = malloc()"]],[2781,2781],[2793,2793]]],[1537705419535,["gjx16@GJXAIOU",[[1,2792,"sizeof("]],[2792,2792],[2799,2799]]],[1537705419701,["gjx16@GJXAIOU",[[1,2800,")"]],[2799,2799],[2800,2800]]],[1537705422433,["gjx16@GJXAIOU",[[1,2799,"int "]],[2799,2799],[2803,2803]]],[1537705423497,["gjx16@GJXAIOU",[[-1,2802," "]],[2803,2803],[2802,2802]]],[1537705429389,["gjx16@GJXAIOU",[[1,2803," * 10"]],[2803,2803],[2808,2808]]],[1537705432371,["gjx16@GJXAIOU",[[1,2809,";"]],[2809,2809],[2810,2810]]],[1537705460101,["gjx16@GJXAIOU",[[-1,2781,"p"]],[2782,2782],[2781,2781]]],[1537705460259,["gjx16@GJXAIOU",[[1,2781,"a"]],[2781,2781],[2782,2782]]],[1537705462384,["gjx16@GJXAIOU",[[1,2814,"\n"]],[2813,2813],[2814,2814]]],[1537705462702,["gjx16@GJXAIOU",[[1,2815,"\n"]],[2814,2814],[2815,2815]]],[1537705466973,["gjx16@GJXAIOU",[[1,2815,"int main()"]],[2815,2815],[2825,2825]]],[1537705467637,["gjx16@GJXAIOU",[[1,2826,"\n"]],[2825,2825],[2826,2826]]],[1537705468689,["gjx16@GJXAIOU",[[1,2826,"{}"]],[2826,2826],[2828,2828]]],[1537705469758,["gjx16@GJXAIOU",[[1,2827,"\n"]],[2827,2827],[2828,2828]]],[1537705469933,["gjx16@GJXAIOU",[[1,2828,"\n"]],[2828,2828],[2829,2829]]],[1537705470141,["gjx16@GJXAIOU",[[1,2829,"\n"]],[2829,2829],[2830,2830]]],[1537705484691,["gjx16@GJXAIOU",[[1,2828,"  int *p Nu"]],[2828,2828],[2839,2839]]],[1537705485509,["gjx16@GJXAIOU",[[-1,2837,"Nu"]],[2839,2839],[2837,2837]]],[1537705488613,["gjx16@GJXAIOU",[[1,2837,"=NULL;"]],[2837,2837],[2843,2843]]],[1537705489384,["gjx16@GJXAIOU",[[1,2844,"  \n"]],[2843,2843],[2846,2846]]],[1537705491535,["gjx16@GJXAIOU",[[1,2846,"printf"]],[2846,2846],[2852,2852]]],[1537705492579,["gjx16@GJXAIOU",[[1,2852,"()"]],[2852,2852],[2854,2854]]],[1537705497456,["gjx16@GJXAIOU",[[1,2853,"\"\""]],[2853,2853],[2855,2855]]],[1537705506917,["gjx16@GJXAIOU",[[1,2854,"p"]],[2854,2854],[2855,2855]]],[1537705515779,["gjx16@GJXAIOU",[[-1,2846,"printf(\"p\")"]],[2857,2857],[2846,2846]]],[1537705525487,["gjx16@GJXAIOU",[[1,2846,"gatheap();"]],[2846,2846],[2856,2856]]],[1537705528689,["gjx16@GJXAIOU",[[1,2854,"["]],[2854,2854],[2855,2855]]],[1537705529700,["gjx16@GJXAIOU",[[-1,2854,"["]],[2855,2855],[2854,2854]]],[1537705530933,["gjx16@GJXAIOU",[[1,2854,"["]],[2854,2854],[2855,2855]]],[1537705531747,["gjx16@GJXAIOU",[[-1,2854,"["]],[2855,2855],[2854,2854]]],[1537705532812,["gjx16@GJXAIOU",[[1,2854,"p"]],[2854,2854],[2855,2855]]],[1537705546061,["gjx16@GJXAIOU",[[1,2857,"  //实参没有任何改变"]],[2857,2857],[2869,2869]]],[1537705557246,["gjx16@GJXAIOU",[[1,2871,"\n"]],[2870,2870],[2871,2871]]],[1537705566917,["gjx16@GJXAIOU",[[1,2871,"  p[0] = 1;"]],[2871,2871],[2882,2882]]],[1537705567408,["gjx16@GJXAIOU",[[1,2883,"  \n"]],[2882,2882],[2885,2885]]],[1537705574404,["gjx16@GJXAIOU",[[1,2885,"p[1] = 2;"]],[2885,2885],[2894,2894]]],[1537705575637,["gjx16@GJXAIOU",[[1,2895,"  \n"]],[2894,2894],[2897,2897]]],[1537705580530,["gjx16@GJXAIOU",[[1,2897,"printf();"]],[2897,2897],[2906,2906]]],[1537705583185,["gjx16@GJXAIOU",[[1,2904,"\"\""]],[2904,2904],[2906,2906]]],[1537705599604,["gjx16@GJXAIOU",[[1,2905,"p[0] = %d ,p[1] -"]],[2905,2905],[2922,2922]]],[1537705600429,["gjx16@GJXAIOU",[[-1,2921,"-"]],[2922,2922],[2921,2921]]],[1537705606748,["gjx16@GJXAIOU",[[1,2921,"= %d\\n"]],[2921,2921],[2927,2927]]],[1537705611217,["gjx16@GJXAIOU",[[1,2928,",p["]],[2928,2928],[2931,2931]]],[1537705616967,["gjx16@GJXAIOU",[[1,2932,"],p[1]"]],[2932,2932],[2938,2938]]],[1537705620114,["gjx16@GJXAIOU",[[1,2941,"  \n"]],[2940,2940],[2943,2943]]],[1537705626912,["gjx16@GJXAIOU",[[1,2943,"free();"]],[2943,2943],[2950,2950]]],[1537705635261,["gjx16@GJXAIOU",[[1,2948,"a"]],[2948,2948],[2949,2949]]],[1537706092427,[null,[[-1,2931,")"],[1,2932,"0"],[1,2938,")"],[-1,2940,"}"],[1,2952,"}"]],[2931,2931],[2953,2953]]],[1537706092427,[null,[[1,2931,")"],[-1,2931,"0"],[-1,2938,")"],[1,2941,"}"],[-1,2952,"}"]],[2953,2953],[2931,2931]]],[1537706051951,["gjx16@GJXAIOU",[[1,2958,"![函数图形化解析]($resource/%E5%87%BD%E6%95%B0%E5%9B%BE%E5%BD%A2%E5%8C%96%E8%A7%A3%E6%9E%90.png)"]],[2958,2958],[3048,3048]]],[1537706075123,["gjx16@GJXAIOU",[[1,3049,"y"]],[3049,3049],[3050,3050]]],[1537706075795,["gjx16@GJXAIOU",[[-1,3049,"y"]],[3050,3050],[3049,3049]]],[1537706077999,["gjx16@GJXAIOU",[[1,3049,"愿望就是"]],[3049,3049],[3053,3053]]],[1537706079174,["gjx16@GJXAIOU",[[-1,3049,"愿望就是"]],[3053,3053],[3049,3049]]],[1537706090878,["gjx16@GJXAIOU",[[1,3049,"也就是说a的值在"]],[3049,3049],[3057,3057]]],[1537706152425,[null,[[-1,2931,")"],[1,2932,"0"],[1,2938,")"],[-1,2940,"}"],[1,2952,"}"],[-1,2956,"\n"],[1,3058,"\n"]],[2931,2931],[3059,3059]]],[1537706152425,[null,[[1,2931,")"],[-1,2931,"0"],[-1,2938,")"],[1,2941,"}"],[-1,2952,"}"],[1,2957,"\n"],[-1,3058,"\n"]],[3059,3059],[2931,2931]]],[1537706105573,["gjx16@GJXAIOU",[[1,3057,"改变，然后实参p的值一直没有变化"]],[3057,3057],[3073,3073]]],[1537706135546,["gjx16@GJXAIOU",[[1,2958,"\n"]],[2958,2958],[2959,2959]]],[1537706212425,[null,[[-1,2931,")"],[1,2932,"0"],[1,2938,")"],[-1,2940,"}"],[1,2952,"}"],[-1,2956,"\n"],[1,3075,"\n"]],[2931,2931],[3076,3076]]],[1537706212425,[null,[[1,2931,")"],[-1,2931,"0"],[-1,2938,")"],[1,2941,"}"],[-1,2952,"}"],[1,2957,"\n"],[-1,3075,"\n"]],[3076,3076],[2931,2931]]],[1537706177880,["gjx16@GJXAIOU",[[1,3061,"a实在"]],[3061,3061],[3064,3064]]],[1537706178917,["gjx16@GJXAIOU",[[-1,3062,"实在"]],[3064,3064],[3062,3062]]],[1537706200454,["gjx16@GJXAIOU",[[1,3062,"是在栈里面的，它致使"]],[3062,3062],[3072,3072]]],[1537706201906,["gjx16@GJXAIOU",[[-1,3070,"致使"]],[3072,3072],[3070,3070]]],[1537706207482,["gjx16@GJXAIOU",[[1,3070,"只是指向"]],[3070,3070],[3074,3074]]],[1537706272424,[null,[[-1,2931,")"],[1,2932,"0"],[1,2938,")"],[-1,2940,"}"],[1,2952,"}"],[-1,2956,"\n"],[1,3088,"\n"]],[2931,2931],[3089,3089]]],[1537706272424,[null,[[1,2931,")"],[-1,2931,"0"],[-1,2938,")"],[1,2941,"}"],[-1,2952,"}"],[1,2957,"\n"],[-1,3088,"\n"]],[3089,3089],[2931,2931]]],[1537706215081,["gjx16@GJXAIOU",[[1,3074,"堆里面"]],[3074,3074],[3077,3077]]],[1537706215978,["gjx16@GJXAIOU",[[-1,3076,"面"]],[3077,3077],[3076,3076]]],[1537706222431,["gjx16@GJXAIOU",[[1,3076,"面的一个空间；"]],[3076,3076],[3083,3083]]],[1537706239982,["gjx16@GJXAIOU",[[-1,3097,"\n"],[1,3098,"g"]],[3097,3097],[3098,3098]]],[1537706246584,["gjx16@GJXAIOU",[[1,3098,"etheap早"]],[3098,3098],[3105,3105]]],[1537706247328,["gjx16@GJXAIOU",[[-1,3104,"早"]],[3105,3105],[3104,3104]]],[1537706260907,["gjx16@GJXAIOU",[[1,3104,"在执行完之后，a就小事"]],[3104,3104],[3115,3115]]],[1537706261484,["gjx16@GJXAIOU",[[-1,3113,"小事"]],[3115,3115],[3113,3113]]],[1537706266776,["gjx16@GJXAIOU",[[1,3113,"消失了，"]],[3113,3113],[3117,3117]]],[1537706332424,[null,[[-1,2931,")"],[1,2932,"0"],[1,2938,")"],[-1,2940,"}"],[1,2952,"}"],[-1,2956,"\n"]],[2931,2931],[2956,2956]]],[1537706332424,[null,[[1,2931,")"],[-1,2931,"0"],[-1,2938,")"],[1,2941,"}"],[-1,2952,"}"],[1,2957,"\n"]],[2956,2956],[2931,2931]]],[1537706305622,["gjx16@GJXAIOU",[[1,3117,"导致他指向的具体堆空间的地址编号也随之消失了；"]],[3117,3117],[3140,3140]]],[1537706392425,[null,[[-1,2931,")"],[1,2932,"0"],[1,2938,")"],[-1,2940,"}"],[1,2952,"}"],[-1,2956,"\n"]],[2931,2931],[2956,2956]]],[1537706392425,[null,[[1,2931,")"],[-1,2931,"0"],[-1,2938,")"],[1,2941,"}"],[-1,2952,"}"],[1,2957,"\n"]],[2956,2956],[2931,2931]]],[1537706367284,["gjx16@GJXAIOU",[[1,3140,"\n\n"]],[3140,3140],[3141,3141]]],[1537706367449,["gjx16@GJXAIOU",[[1,3142,"\n"]],[3141,3141],[3142,3142]]],[1537706369387,["gjx16@GJXAIOU",[[-1,3142,"\n"],[1,3143,"*"]],[3142,3142],[3143,3143]]],[1537706369550,["gjx16@GJXAIOU",[[1,3143,"***"]],[3143,3143],[3144,3144]]],[1537706371669,["gjx16@GJXAIOU",[[1,3144,"修改"]],[3144,3144],[3146,3146]]],[1537706373524,["gjx16@GJXAIOU",[[1,3148,"\n\n"]],[3148,3148],[3149,3149]]],[1537706374292,["gjx16@GJXAIOU",[[1,3150,"\n"]],[3149,3149],[3150,3150]]],[1537706375204,["gjx16@GJXAIOU",[[-1,3150,"\n"],[1,3151,"`"]],[3150,3150],[3151,3151]]],[1537706375618,["gjx16@GJXAIOU",[[1,3151,"``"]],[3151,3151],[3153,3153]]],[1537706375648,["gjx16@GJXAIOU",[[1,3153,"language\n```\n"]],[3153,3153],[3153,3161]]],[1537706376562,["gjx16@GJXAIOU",[[-1,3153,"language"],[1,3161,"c"]],[3153,3161],[3154,3154]]],[1537706376791,["gjx16@GJXAIOU",[[1,3155,"\n"]],[3154,3154],[3155,3155]]],[1537706378072,["gjx16@GJXAIOU",[[1,3155,"#include<stdio.h>\n\nvoid getheap(int  *a)\n{\n  a = malloc(sizeof(int) * 10);\n\n}\n\nint main()\n{\n  int *p =NULL;\n  gatheap(p);  //实参没有任何改变\n\n  p[0] = 1;\n  p[1] = 2;\n  printf(\"p[0] = %d ,p[1] = %d\\n\",p[0],p[1]);\n  free(a);\n}"]],[3155,3155],[3372,3372]]],[1537706385421,["gjx16@GJXAIOU",[[1,3193,"*"]],[3192,3192],[3193,3193]]],[1537706452426,[null,[[-1,2931,")"],[1,2932,"0"],[1,2938,")"],[-1,2940,"}"],[1,2952,"}"],[-1,2956,"\n"]],[2931,2931],[2956,2956]]],[1537706452426,[null,[[1,2931,")"],[-1,2931,"0"],[-1,2938,")"],[1,2941,"}"],[-1,2952,"}"],[1,2957,"\n"]],[2956,2956],[2931,2931]]],[1537706396917,["gjx16@GJXAIOU",[[1,3201,"*"]],[3201,3201],[3202,3202]]],[1537706402745,["gjx16@GJXAIOU",[[1,3275,"&"]],[3275,3275],[3276,3276]]],[1537707112444,[null,[[-1,2931,")"],[1,2932,"0"],[1,2938,")"],[-1,2940,"}"],[1,2952,"}"],[-1,2956,"\n"]],[2931,2931],[2956,2956]]],[1537707112444,[null,[[1,2931,")"],[-1,2931,"0"],[-1,2938,")"],[1,2941,"}"],[-1,2952,"}"],[1,2957,"\n"]],[2956,2956],[2931,2931]]],[1537707067445,["gjx16@GJXAIOU",[[1,3174,"#include<stdlib.h>\n\n"],[1,3178," "],[1,3197,"\n"],[1,3198,"\n"],[1,3203," "],[1,3206," "],[1,3225," "],[1,3226," "],[1,3239," "],[1,3247,"\n"],[1,3248,"\n"],[1,3255," "],[1,3257," "],[1,3265,"\n"],[-1,3268,"a"],[1,3269,"e"],[1,3300," "],[1,3301," "],[1,3304,"\n"],[1,3312," "],[1,3313," "],[1,3317,"\n"],[1,3332," "],[1,3333," "],[1,3336," "],[1,3343," "],[1,3344," "],[1,3363,"\n"],[-1,3370,"a"],[1,3371,"p"],[1,3373,"\n\n  return  0;\n"]],[3155,3375],[3435,3435]]],[1537707069565,["gjx16@GJXAIOU",[[-1,3173,"\n"]],[3173,3173],[3172,3172]]],[1537707072832,["gjx16@GJXAIOU",[[-1,3217,"\n"]],[3217,3217],[3216,3216]]],[1537707073860,["gjx16@GJXAIOU",[[-1,3257,"\n"]],[3257,3257],[3256,3256]]],[1537707074870,["gjx16@GJXAIOU",[[-1,3219,"\n "]],[3219,3221],[3219,3219]]],[1537707078735,["gjx16@GJXAIOU",[[-1,3270,"\n"]],[3270,3270],[3269,3269]]],[1537707080276,["gjx16@GJXAIOU",[[1,3258,"\n"]],[3257,3257],[3258,3258]]],[1537707081449,["gjx16@GJXAIOU",[[-1,3292,"\n"]],[3292,3292],[3291,3291]]],[1537707082213,["gjx16@GJXAIOU",[[-1,3319,"\n"]],[3319,3319],[3318,3318]]],[1537707082910,["gjx16@GJXAIOU",[[-1,3333,"\n"]],[3333,3333],[3332,3332]]],[1537707083620,["gjx16@GJXAIOU",[[-1,3347,"\n"]],[3347,3347],[3346,3346]]],[1537707084605,["gjx16@GJXAIOU",[[-1,3398,"\n"]],[3398,3398],[3397,3397]]],[1537707085431,["gjx16@GJXAIOU",[[-1,3409,"\n"]],[3409,3409],[3408,3408]]],[1537707089312,["gjx16@GJXAIOU",[[1,3217,"  "]],[3217,3217],[3219,3219]]],[1537707090687,["gjx16@GJXAIOU",[[1,3257,"  "]],[3257,3257],[3259,3259]]],[1537707096669,["gjx16@GJXAIOU",[[1,3433,"\n"]],[3432,3432],[3433,3433]]],[1537707096827,["gjx16@GJXAIOU",[[1,3434,"\n"]],[3433,3433],[3434,3434]]],[1537708132465,[null,[[-1,2931,")"],[1,2932,"0"],[1,2938,")"],[-1,2940,"}"],[1,2952,"}"],[-1,2956,"\n"]],[2931,2931],[2956,2956]]],[1537708132465,[null,[[1,2931,")"],[-1,2931,"0"],[-1,2938,")"],[1,2941,"}"],[-1,2952,"}"],[1,2957,"\n"]],[2956,2956],[2931,2931]]],[1537708111930,["gjx16@GJXAIOU",[[1,3435,"\n"]],[3432,3432],[3433,3433]]],[1537708112388,["gjx16@GJXAIOU",[[1,3436,"\n"]],[3433,3433],[3434,3434]]],[1537708114172,["gjx16@GJXAIOU",[[1,3434,"fenx"]],[3434,3434],[3438,3438]]],[1537708114998,["gjx16@GJXAIOU",[[-1,3434,"fenx"]],[3438,3438],[3434,3434]]],[1537708124109,["gjx16@GJXAIOU",[[1,3434,"程序的分析图片："]],[3434,3434],[3442,3442]]],[1537708124634,["gjx16@GJXAIOU",[[1,3445,"\n"]],[3442,3442],[3443,3443]]]],null,"gjx16@GJXAIOU"],["0a6da08b-5d9e-4635-a91f-fc1f6d495409",1537708216410,"# day10 内存管理\n\n## 变量作用域\n全局变量和局部变量\n\n一个C语言变量的作用域可以是代码块，作用域就是函数作用域或者文件作用域\n代码块：{}之间的一段代码；\n\n**文件作用域：**\n\n如果一个变量在其他的代码文件中已经定义了，可以在本程序中使用，但是使用前要使用关键字：extern\n例如：`extern int age` //有一个int型变量age已经在其他文件中定义了，这里就直接使用了；\n\n\n**auto自动变量**\n\nC语言中默认中都是auto，不需要关注它在内存中什么时候消失和出现\n`auto int i = 0;`等效于`int i = 0;`\n**register变量**\n`register int i = 0;`  //建议，如果有寄存器空闲的话，就将这个变量放进寄存器中使用，可以加快读取\n\n但是`int *p = &i`//这个语句就会报错，因为放在寄存器中就没有地址了\n\n\n**动态变量和静态变量**\n\n- 动态变量 \n\n```c\n#include<stdio.h>\n\nvoid myauto()\n{\n  int a = 0;\n  printf(\"a = %d\\n\",a);\n  a++;\n}\n\n\nint main()\n{\n  int i;\n  for(i = 0; i < 10; i++)\n  {\n    myatuo();\n \n  }\n\n}\n```\n\n程序的输出结果为  a = 0\n                            a = 0\n                            a = 0\n                            a = 0\n                            a = 0\n                            a = 0\n                            a = 0\n                            a = 0\n                            a = 0\n                            a = 0\n\n- 静态变量\n首先只要整个程序开始执行之后，静态变量是一直存在的，不消失的；\n其次，静态变量值初始化一次，即`static int a = 0;`语句只执行一次\n```c\n#include<stdio.h>\n\nvoid mystatic()\n{\n  static int a = 0;\n  printf(\"a = %d\\n\",a);\n  a++;\n\n}\n\nint main()\n{\n  int i = 0;\n  for(i = 0; i < 10; i++)\n  {\n    mystatic();\n  }\n}\n```\n程序运行结果为：a = 0\n                          a = 1\n                          a = 2\n                          a = 3\n                          a = 4\n                          a = 5\n                          a = 6\n                          a = 7\n                          a = 8\n                          a = 9\n\n\n**变量和函数是否使用extern的区别**\n\n- 变量 \n  - extern int age;\n  - int age;    //这包含两个含义：声明一个变量或者定义一个变量\n- 函数（下面两个没有什么区别）\n  - extern void age()\n  - void age()     \n\n\n## 内存四区简介\n\n### 代码区\n\n存放可执行的代码；程序被操作系统加载到内存中时候，所有可执行的代码都加载到代码区，这块内存是不可以在运行期间修改的；\n\n\n\n### 静态区\n存放所有的静态变量/常量和全局变量/常量\n\n### 栈区  \n栈区是一种先进后出的内存结构，所有的自动变量、指针，数组、函数的形参都是由编译器自动放出栈中，当一个自动变量超出其作用域的时候，自动从栈中弹出；\n\n对于自动变量，什么时候入栈和出栈都是系统自动控制的\n\n栈区的大小是可以动态设置的，不过不会特别大，一般大小为XX k，\n\n**栈溢出**\n当栈空间已满，但是还往栈内存中压变量，这就是栈溢出；\n\n\n### 堆区\n\n堆和栈一样，是一种在程序运行过程中可以随时修改的内存区域，但是没有栈那样的先进后出的顺序，是一个大容器，容量远远大于栈，堆内存空间的申请和释放需要手工通过代码来完成；\n\n```c\n#include<stdio.h>\n#include<stdlib.h>   //加一个头文件\n\nint main()\n{\n    int *p = malloc(sizeof(int)*10);  //在堆中间申请内存，函数的返回值为无类型的指针，参数为size_t无符号的整数   ，现在这个语句的含义是：申请一个内存大小为10个int大小的空间。\n\n    memset(p ,0,sizeof(int) * 10);  //将分配的这个空间置零初始化\n     free(p);//释放通过malloc分配的堆内存\n\n}\n```\n\n\n**堆和栈的区别**\n\n```c\n#include<stdio.h>\n#include<stdlib.h>\n\nvoid *geta()   //这是错误的，不能教案一个栈变量的地址通过函数的返回值返回\n{\n  int a = 0;\n  return &a;\n}\n\nvoid *geta1() //可以通过函数的返回值返回一个堆地址，但是一定要free\n{\n  int  *p = malloc(sizeof(int)); //申请了一个堆空间\n  return p;\n\n}\n\nvoid *gata2()   //这也是合法的，只要将main函数中的geta1改为geta2,然后将free(getp)去掉即可\n{\n  static int a = 0;\n  return &a;\n}\n\n\nint main()\n\n{\n  int *getp = geta1();\n  *getp = 100;\n  free(getp);\n}\n\n\n```\n\n**理解下面程序**\n\n```c\n#include<stdio.h>\n\nvoid getheap(int  *a)\n{\n  a = malloc(sizeof(int) * 10);\n\n}\n\nint main()\n{\n  int *p =NULL;\n  gatheap(p);  //实参没有任何改变\n\n  p[0] = 1;\n  p[1] = 2;\n  printf(\"p[0] = %d ,p[1] = %d\\n\",p[0],p[1]);\n  free(a);\n}\n```\n\n![函数图形化解析]($resource/%E5%87%BD%E6%95%B0%E5%9B%BE%E5%BD%A2%E5%8C%96%E8%A7%A3%E6%9E%90.png)\n\n也就是说a的值在改变，a是在栈里面的，它只是指向堆里面的一个空间；然后实参p的值一直没有变化\ngetheap在执行完之后，a就消失了，导致他指向的具体堆空间的地址编号也随之消失了；\n\n**修改**\n\n```c\n#include<stdio.h>\n#include<stdlib.h>\n\nvoid  getheap(int  **a)\n  {\n *a  =  malloc(sizeof(int)  *  10);\n  }\n\n\nint  main()\n{\n\n  int  *p  =NULL;\n  getheap(&p);  //实参没有任何改变\n  p[0]  =  1;\n  p[1]  =  2;\n  printf(\"p[0]  =  %d  ,p[1]  =  %d\\n\",p[0],p[1]);\n  free(p);\n  return  0;\n\n}\n```\n\n程序的分析图片：\n\n\n\n",[[1537708167886,["gjx16@GJXAIOU",[[1,3444,"![堆和栈地址]($resource/%E5%A0%86%E5%92%8C%E6%A0%88%E5%9C%B0%E5%9D%80.png)"]],[3444,3444],[3514,3514]]],[1537708703956,["gjx16@GJXAIOU",[[1,1699,"===="]],[1699,1699],[1701,1701]]],[1537708705282,["gjx16@GJXAIOU",[[-1,1701,"=="]],[1701,1701],[1699,1699]]],[1537708710173,["gjx16@GJXAIOU",[[1,1717,"===="]],[1717,1717],[1719,1719]]],[1537709018416,["gjx16@GJXAIOU",[[1,1739,"===="]],[1739,1739],[1741,1741]]],[1537709019644,["gjx16@GJXAIOU",[[-1,1741,"=="]],[1741,1741],[1739,1739]]],[1537709025136,["gjx16@GJXAIOU",[[1,1756,"=="]],[1756,1756],[1758,1758]]],[1537709032044,["gjx16@GJXAIOU",[[1,1769,"\n"]],[1768,1768],[1769,1769]]],[1537709034813,["gjx16@GJXAIOU",[[1,1734,"\n"]],[1734,1734],[1735,1735]]],[1537709049736,["gjx16@GJXAIOU",[[1,1789,"===="]],[1789,1789],[1791,1791]]],[1537709051211,["gjx16@GJXAIOU",[[-1,1791,"=="]],[1791,1791],[1789,1789]]],[1537709055862,["gjx16@GJXAIOU",[[1,1807,"===="]],[1807,1807],[1809,1809]]],[1537709057687,["gjx16@GJXAIOU",[[-1,1809,"=="]],[1809,1809],[1807,1807]]],[1537709118533,["gjx16@GJXAIOU",[[1,1653,"1."]],[1653,1653],[1655,1655]]],[1537709121322,["gjx16@GJXAIOU",[[1,1732,"2"]],[1732,1732],[1733,1733]]],[1537709124294,["gjx16@GJXAIOU",[[1,1769,"3."]],[1769,1769],[1771,1771]]],[1537709129012,["gjx16@GJXAIOU",[[1,1957,"4."]],[1957,1957],[1959,1959]]],[1537709421454,[null,[[1,1733,"."],[-1,1768,"栈"],[1,1771,"栈"],[-1,1956,"堆"],[1,1959,"堆"]],[1733,1733],[1960,1960]]],[1537709421454,[null,[[-1,1733,"."],[1,1769,"栈"],[-1,1771,"栈"],[1,1957,"堆"],[-1,1959,"堆"]],[1960,1960],[1733,1733]]],[1537709363727,["gjx16@GJXAIOU",[[1,1916,"\n"]],[1915,1915],[1916,1916]]],[1537709374288,["gjx16@GJXAIOU",[[1,1916,"![栈的图示]($resource/%E6%A0%88%E7%9A%84%E5%9B%BE%E7%A4%BA.png)"]],[1916,1916],[1976,1976]]],[1537709380455,["gjx16@GJXAIOU",[[1,1976,"\n"]],[1975,1975],[1976,1976]]],[1537709386377,["gjx16@GJXAIOU",[[1,1649,"\n"]],[1648,1648],[1649,1649]]],[1537709387253,["gjx16@GJXAIOU",[[1,1650,"\n"]],[1649,1649],[1650,1650]]],[1537709601448,[null,[[1,1735,"."],[-1,1770,"栈"],[1,1773,"栈"],[-1,1917,"*"],[1,1980,"*"],[-1,2019,"堆"],[1,2022,"堆"]],[1735,1735],[2023,2023]]],[1537709601448,[null,[[-1,1735,"."],[1,1771,"栈"],[-1,1773,"栈"],[1,1918,"*"],[-1,1980,"*"],[1,2020,"堆"],[-1,2022,"堆"]],[2023,2023],[1735,1735]]],[1537709591532,["gjx16@GJXAIOU",[[1,1649,"![内存四区图示]($resource/%E5%86%85%E5%AD%98%E5%9B%9B%E5%8C%BA%E5%9B%BE%E7%A4%BA.png)"]],[1649,1649],[1729,1729]]],[1537709661453,[null,[[1,1814,"."],[-1,1849,"栈"],[1,1852,"栈"],[-1,1996,"*"],[1,2059,"*"],[-1,2098,"堆"],[1,2101,"堆"]],[1814,1814],[2102,2102]]],[1537709661453,[null,[[-1,1814,"."],[1,1850,"栈"],[-1,1852,"栈"],[1,1997,"*"],[-1,2059,"*"],[1,2099,"堆"],[-1,2101,"堆"]],[2102,2102],[1814,1814]]],[1537709621199,["gjx16@GJXAIOU",[[1,2105,"* "]],[2136,2149],[2138,2151]]],[1537709625832,["gjx16@GJXAIOU",[[-1,2105,"* "]],[2107,2107],[2105,2105]]],[1537709631138,["gjx16@GJXAIOU",[[1,2136,"= "]],[2136,2136],[2138,2138]]],[1537709632791,["gjx16@GJXAIOU",[[-1,2137," "]],[2138,2138],[2137,2137]]],[1537709633902,["gjx16@GJXAIOU",[[1,2137,"==="]],[2137,2137],[2138,2138]]],[1537709635402,["gjx16@GJXAIOU",[[-1,2138,"=="]],[2138,2138],[2136,2136]]],[1537709638574,["gjx16@GJXAIOU",[[1,2151,"===="]],[2151,2151],[2153,2153]]],[1537709639168,["gjx16@GJXAIOU",[[-1,2153,"=="]],[2153,2153],[2151,2151]]],[1537709650215,["gjx16@GJXAIOU",[[1,2169,"===="]],[2169,2169],[2171,2171]]],[1537709651358,["gjx16@GJXAIOU",[[-1,2171,"=="]],[2171,2171],[2169,2169]]],[1537709655176,["gjx16@GJXAIOU",[[1,2193,"===="]],[2193,2193],[2195,2195]]],[1537709656042,["gjx16@GJXAIOU",[[-1,2195,"=="]],[2195,2195],[2193,2193]]],[1537709721451,[null,[[-1,1814,""],[1,1814,"."],[-1,1849,"栈"],[1,1852,"栈"],[-1,1996,"*"],[1,2059,"*"],[-1,2098,"堆"],[1,2101,"堆"],[-1,2135,"没"],[1,2138,"没"],[-1,2150,"，"],[1,2153,"，"],[-1,2168,"堆"],[1,2171,"堆"],[-1,2192,"；"],[1,2195,"；"]],[1814,1814],[2196,2196]]],[1537709721451,[null,[[1,1814,""],[-1,1814,"."],[1,1850,"栈"],[-1,1852,"栈"],[1,1997,"*"],[-1,2059,"*"],[1,2099,"堆"],[-1,2101,"堆"],[1,2136,"没"],[-1,2138,"没"],[1,2151,"，"],[-1,2153,"，"],[1,2169,"堆"],[-1,2171,"堆"],[1,2193,"；"],[-1,2195,"；"]],[2196,2196],[1814,1814]]],[1537709668979,["gjx16@GJXAIOU",[[1,2244,"需要"]],[2244,2244],[2246,2246]]],[1537709684061,["gjx16@GJXAIOU",[[1,2307,"语句含义Wie"]],[2307,2307],[2314,2314]]],[1537709685420,["gjx16@GJXAIOU",[[-1,2311,"Wie"]],[2314,2314],[2311,2311]]],[1537709687027,["gjx16@GJXAIOU",[[1,2311,"为："]],[2311,2311],[2313,2313]]],[1537709714676,["gjx16@GJXAIOU",[[1,2472,"free(p);//释放通过malloc分配的堆内存"]],[2446,2473],[2472,2472]]],[1537709716618,["gjx16@GJXAIOU",[[-1,2445," "]],[2446,2446],[2445,2445]]],[1537709781454,[null,[[-1,1814,""],[1,1814,"."],[-1,1849,"栈"],[1,1852,"栈"],[-1,1996,"*"],[1,2059,"*"],[-1,2098,"堆"],[1,2101,"堆"],[-1,2135,"没"],[1,2138,"没"],[-1,2150,"，"],[1,2153,"，"],[-1,2168,"堆"],[1,2171,"堆"],[-1,2192,"；"],[1,2195,"；"],[-1,2243,"加"],[1,2246,"加"],[-1,2306,"在"],[1,2313,"在"],[-1,2444," "],[1,2445,"f"],[-1,2470,"\n"],[1,2497,"\n"]],[1814,1814],[2498,2498]]],[1537709781454,[null,[[1,1814,""],[-1,1814,"."],[1,1850,"栈"],[-1,1852,"栈"],[1,1997,"*"],[-1,2059,"*"],[1,2099,"堆"],[-1,2101,"堆"],[1,2136,"没"],[-1,2138,"没"],[1,2151,"，"],[-1,2153,"，"],[1,2169,"堆"],[-1,2171,"堆"],[1,2193,"；"],[-1,2195,"；"],[1,2244,"加"],[-1,2246,"加"],[1,2307,"在"],[-1,2313,"在"],[1,2445," "],[-1,2445,"f"],[1,2471,"\n"],[-1,2497,"\n"]],[2498,2498],[1814,1814]]],[1537709740278,["gjx16@GJXAIOU",[[1,2387,"指针p指向分配出来的堆的地址；"]],[2387,2387],[2402,2402]]],[1537709748618,["gjx16@GJXAIOU",[[1,2198,"\n"]],[2197,2197],[2198,2198]]],[1537709755682,["gjx16@GJXAIOU",[[1,2198,"分配堆的方噶"]],[2198,2198],[2204,2204]]],[1537709756465,["gjx16@GJXAIOU",[[-1,2202,"方噶"]],[2204,2204],[2202,2202]]],[1537709759360,["gjx16@GJXAIOU",[[1,2202,"方法："]],[2202,2202],[2205,2205]]],[1537709901460,[null,[[-1,1814,""],[1,1814,"."],[-1,1849,"栈"],[1,1852,"栈"],[-1,1996,"*"],[1,2059,"*"],[-1,2098,"堆"],[1,2101,"堆"],[-1,2135,"没"],[1,2138,"没"],[-1,2150,"，"],[1,2153,"，"],[-1,2168,"堆"],[1,2171,"堆"],[-1,2192,"；"],[1,2195,"；"],[-1,2197,"`"],[1,2206,"`"],[-1,2251,"加"],[1,2254,"加"],[-1,2314,"在"],[1,2321,"在"],[-1,2394,"\n"],[1,2410,"\n"],[-1,2463," "],[1,2468,"f"],[-1,2493,"\n"],[1,2520,"\n"]],[1814,1814],[2521,2521]]],[1537709901460,[null,[[1,1814,""],[-1,1814,"."],[1,1850,"栈"],[-1,1852,"栈"],[1,1997,"*"],[-1,2059,"*"],[1,2099,"堆"],[-1,2101,"堆"],[1,2136,"没"],[-1,2138,"没"],[1,2151,"，"],[-1,2153,"，"],[1,2169,"堆"],[-1,2171,"堆"],[1,2193,"；"],[-1,2195,"；"],[1,2198,"`"],[-1,2206,"`"],[1,2252,"加"],[-1,2254,"加"],[1,2315,"在"],[-1,2321,"在"],[1,2395,"\n"],[-1,2410,"\n"],[1,2464," "],[-1,2468,"f"],[1,2494,"\n"],[-1,2520,"\n"]],[2521,2521],[1814,1814]]],[1537709898202,["gjx16@GJXAIOU",[[-1,2610,"教案"]],[2612,2612],[2610,2610]]],[1537709900808,["gjx16@GJXAIOU",[[1,2610,"将"]],[2610,2610],[2611,2611]]],[1537710021459,[null,[[-1,1814,""],[1,1814,"."],[-1,1849,"栈"],[1,1852,"栈"],[-1,1996,"*"],[1,2059,"*"],[-1,2098,"堆"],[1,2101,"堆"],[-1,2135,"没"],[1,2138,"没"],[-1,2150,"，"],[1,2153,"，"],[-1,2168,"堆"],[1,2171,"堆"],[-1,2192,"；"],[1,2195,"；"],[-1,2197,"`"],[1,2206,"`"],[-1,2251,"加"],[1,2254,"加"],[-1,2314,"在"],[1,2321,"在"],[-1,2394,"\n"],[1,2410,"\n"],[-1,2463," "],[1,2468,"f"],[-1,2493,"\n"],[1,2520,"\n"],[-1,2609,"教"],[1,2611,"一"]],[1814,1814],[2612,2612]]],[1537710021459,[null,[[1,1814,""],[-1,1814,"."],[1,1850,"栈"],[-1,1852,"栈"],[1,1997,"*"],[-1,2059,"*"],[1,2099,"堆"],[-1,2101,"堆"],[1,2136,"没"],[-1,2138,"没"],[1,2151,"，"],[-1,2153,"，"],[1,2169,"堆"],[-1,2171,"堆"],[1,2193,"；"],[-1,2195,"；"],[1,2198,"`"],[-1,2206,"`"],[1,2252,"加"],[-1,2254,"加"],[1,2315,"在"],[-1,2321,"在"],[1,2395,"\n"],[-1,2410,"\n"],[1,2464," "],[-1,2468,"f"],[1,2494,"\n"],[-1,2520,"\n"],[1,2610,"教"],[-1,2611,"一"]],[2612,2612],[1814,1814]]],[1537710012171,["gjx16@GJXAIOU",[[1,2762,"  、、"]],[2762,2762],[2766,2766]]],[1537710013150,["gjx16@GJXAIOU",[[-1,2764,"、、"]],[2766,2766],[2764,2764]]],[1537710020341,["gjx16@GJXAIOU",[[1,2764,"//返回值Wie"]],[2764,2764],[2772,2772]]],[1537710021182,["gjx16@GJXAIOU",[[-1,2770,"ie"]],[2772,2772],[2770,2770]]],[1537710081460,[null,[[-1,1814,""],[1,1814,"."],[-1,1849,"栈"],[1,1852,"栈"],[-1,1996,"*"],[1,2059,"*"],[-1,2098,"堆"],[1,2101,"堆"],[-1,2135,"没"],[1,2138,"没"],[-1,2150,"，"],[1,2153,"，"],[-1,2168,"堆"],[1,2171,"堆"],[-1,2192,"；"],[1,2195,"；"],[-1,2197,"`"],[1,2206,"`"],[-1,2251,"加"],[1,2254,"加"],[-1,2314,"在"],[1,2321,"在"],[-1,2394,"\n"],[1,2410,"\n"],[-1,2463," "],[1,2468,"f"],[-1,2493,"\n"],[1,2520,"\n"],[-1,2609,"教"],[1,2611,"一"],[-1,2761,"\n"],[1,2770,"\n"]],[1814,1814],[2771,2771]]],[1537710081460,[null,[[1,1814,""],[-1,1814,"."],[1,1850,"栈"],[-1,1852,"栈"],[1,1997,"*"],[-1,2059,"*"],[1,2099,"堆"],[-1,2101,"堆"],[1,2136,"没"],[-1,2138,"没"],[1,2151,"，"],[-1,2153,"，"],[1,2169,"堆"],[-1,2171,"堆"],[1,2193,"；"],[-1,2195,"；"],[1,2198,"`"],[-1,2206,"`"],[1,2252,"加"],[-1,2254,"加"],[1,2315,"在"],[-1,2321,"在"],[1,2395,"\n"],[-1,2410,"\n"],[1,2464," "],[-1,2468,"f"],[1,2494,"\n"],[-1,2520,"\n"],[1,2610,"教"],[-1,2611,"一"],[1,2762,"\n"],[-1,2770,"\n"]],[2771,2771],[1814,1814]]],[1537710021629,["gjx16@GJXAIOU",[[-1,2769,"W"]],[2770,2770],[2769,2769]]],[1537710038120,["gjx16@GJXAIOU",[[1,2769,"为p 即是分配的堆空间的地址"]],[2769,2769],[2783,2783]]],[1537710501467,[null,[[-1,1814,""],[1,1814,"."],[-1,1849,"栈"],[1,1852,"栈"],[-1,1996,"*"],[1,2059,"*"],[-1,2098,"堆"],[1,2101,"堆"],[-1,2135,"没"],[1,2138,"没"],[-1,2150,"，"],[1,2153,"，"],[-1,2168,"堆"],[1,2171,"堆"],[-1,2192,"；"],[1,2195,"；"],[-1,2197,"`"],[1,2206,"`"],[-1,2251,"加"],[1,2254,"加"],[-1,2314,"在"],[1,2321,"在"],[-1,2394,"\n"],[1,2410,"\n"],[-1,2463," "],[1,2468,"f"],[-1,2493,"\n"],[1,2520,"\n"],[-1,2609,"教"],[1,2611,"一"],[-1,2761,"\n"],[1,2783,"\n"]],[1814,1814],[2784,2784]]],[1537710501467,[null,[[1,1814,""],[-1,1814,"."],[1,1850,"栈"],[-1,1852,"栈"],[1,1997,"*"],[-1,2059,"*"],[1,2099,"堆"],[-1,2101,"堆"],[1,2136,"没"],[-1,2138,"没"],[1,2151,"，"],[-1,2153,"，"],[1,2169,"堆"],[-1,2171,"堆"],[1,2193,"；"],[-1,2195,"；"],[1,2198,"`"],[-1,2206,"`"],[1,2252,"加"],[-1,2254,"加"],[1,2315,"在"],[-1,2321,"在"],[1,2395,"\n"],[-1,2410,"\n"],[1,2464," "],[-1,2468,"f"],[1,2494,"\n"],[-1,2520,"\n"],[1,2610,"教"],[-1,2611,"一"],[1,2762,"\n"],[-1,2783,"\n"]],[2784,2784],[1814,1814]]],[1537710499826,["gjx16@GJXAIOU",[[1,2661,"\n"]],[2660,2660],[2661,2661]]],[1537710561464,[null,[[-1,1814,""],[1,1814,"."],[-1,1849,"栈"],[1,1852,"栈"],[-1,1996,"*"],[1,2059,"*"],[-1,2098,"堆"],[1,2101,"堆"],[-1,2135,"没"],[1,2138,"没"],[-1,2150,"，"],[1,2153,"，"],[-1,2168,"堆"],[1,2171,"堆"],[-1,2192,"；"],[1,2195,"；"],[-1,2197,"`"],[1,2206,"`"],[-1,2251,"加"],[1,2254,"加"],[-1,2314,"在"],[1,2321,"在"],[-1,2394,"\n"],[1,2410,"\n"],[-1,2463," "],[1,2468,"f"],[-1,2493,"\n"],[1,2520,"\n"],[-1,2609,"教"],[1,2611,"一"],[-1,2660,"v"],[1,2662,"v"],[-1,2762,"\n"],[1,2784,"\n"]],[1814,1814],[2785,2785]]],[1537710561464,[null,[[1,1814,""],[-1,1814,"."],[1,1850,"栈"],[-1,1852,"栈"],[1,1997,"*"],[-1,2059,"*"],[1,2099,"堆"],[-1,2101,"堆"],[1,2136,"没"],[-1,2138,"没"],[1,2151,"，"],[-1,2153,"，"],[1,2169,"堆"],[-1,2171,"堆"],[1,2193,"；"],[-1,2195,"；"],[1,2198,"`"],[-1,2206,"`"],[1,2252,"加"],[-1,2254,"加"],[1,2315,"在"],[-1,2321,"在"],[1,2395,"\n"],[-1,2410,"\n"],[1,2464," "],[-1,2468,"f"],[1,2494,"\n"],[-1,2520,"\n"],[1,2610,"教"],[-1,2611,"一"],[1,2661,"v"],[-1,2662,"v"],[1,2763,"\n"],[-1,2784,"\n"]],[2785,2785],[1814,1814]]],[1537710503438,["gjx16@GJXAIOU",[[1,2789,"\n"]],[2788,2788],[2789,2789]]],[1537710503619,["gjx16@GJXAIOU",[[1,2790,"\n"]],[2789,2789],[2790,2790]]],[1537710507433,["gjx16@GJXAIOU",[[-1,2785,"\n"]],[2785,2785],[2784,2784]]],[1537710510951,["gjx16@GJXAIOU",[[1,2896,"\n"]],[2895,2895],[2896,2896]]],[1537710511634,["gjx16@GJXAIOU",[[1,2897,"\n"]],[2896,2896],[2897,2897]]],[1537710558140,["gjx16@GJXAIOU",[[1,2878,"  、、"]],[2878,2878],[2882,2882]]],[1537710559188,["gjx16@GJXAIOU",[[-1,2880,"、、"]],[2882,2882],[2880,2880]]],[1537710560949,["gjx16@GJXAIOU",[[1,2880,"//a"]],[2880,2880],[2883,2883]]],[1537710621467,[null,[[-1,1814,""],[1,1814,"."],[-1,1849,"栈"],[1,1852,"栈"],[-1,1996,"*"],[1,2059,"*"],[-1,2098,"堆"],[1,2101,"堆"],[-1,2135,"没"],[1,2138,"没"],[-1,2150,"，"],[1,2153,"，"],[-1,2168,"堆"],[1,2171,"堆"],[-1,2192,"；"],[1,2195,"；"],[-1,2197,"`"],[1,2208,"`"],[-1,2251,"加"],[1,2254,"加"],[-1,2314,"在"],[1,2321,"在"],[-1,2394,"\n"],[1,2410,"\n"],[-1,2467," "],[1,2468,"f"],[-1,2493,"\n"],[1,2520,"\n"],[-1,2609,"教"],[1,2611,"一"],[-1,2660,"v"],[1,2662,"v"],[-1,2762,"\n"],[1,2785,"}"],[-1,2787,"v"],[1,2790,"v"],[-1,2877,"\n"],[1,2883,"\n"],[-1,2900,"i"],[1,2903,"i"]],[1814,1814],[2904,2904]]],[1537710621467,[null,[[1,1814,""],[-1,1814,"."],[1,1850,"栈"],[-1,1852,"栈"],[1,1997,"*"],[-1,2059,"*"],[1,2099,"堆"],[-1,2101,"堆"],[1,2136,"没"],[-1,2138,"没"],[1,2151,"，"],[-1,2153,"，"],[1,2169,"堆"],[-1,2171,"堆"],[1,2193,"；"],[-1,2195,"；"],[1,2198,"`"],[-1,2208,"`"],[1,2252,"加"],[-1,2254,"加"],[1,2315,"在"],[-1,2321,"在"],[1,2395,"\n"],[-1,2410,"\n"],[1,2468," "],[-1,2468,"f"],[1,2494,"\n"],[-1,2520,"\n"],[1,2610,"教"],[-1,2611,"一"],[1,2661,"v"],[-1,2662,"v"],[1,2763,"\n"],[-1,2785,"}"],[1,2788,"v"],[-1,2790,"v"],[1,2878,"\n"],[-1,2883,"\n"],[1,2901,"i"],[-1,2903,"i"]],[2904,2904],[1814,1814]]],[1537710561744,["gjx16@GJXAIOU",[[-1,2882,"a"]],[2883,2883],[2882,2882]]],[1537710594268,["gjx16@GJXAIOU",[[1,2882,"使用static即使a为静态变量，，存在"]],[2882,2882],[2902,2902]]],[1537710596953,["gjx16@GJXAIOU",[[-1,2899,"，存在"]],[2902,2902],[2899,2899]]],[1537710601927,["gjx16@GJXAIOU",[[1,2899,"存在于金台区"]],[2899,2899],[2905,2905]]],[1537710603218,["gjx16@GJXAIOU",[[-1,2902,"金台区"]],[2905,2905],[2902,2902]]],[1537710619514,["gjx16@GJXAIOU",[[1,2902,"静态区，会一直存在"]],[2902,2902],[2911,2911]]],[1537710681474,[null,[[-1,1814,""],[1,1814,"."],[-1,1849,"栈"],[1,1852,"栈"],[-1,1996,"*"],[1,2059,"*"],[-1,2098,"堆"],[1,2101,"堆"],[-1,2135,"没"],[1,2138,"没"],[-1,2150,"，"],[1,2153,"，"],[-1,2168,"堆"],[1,2171,"堆"],[-1,2192,"；"],[1,2195,"；"],[-1,2197,"`"],[1,2208,"`"],[-1,2251,"加"],[1,2254,"加"],[-1,2314,"在"],[1,2321,"在"],[-1,2394,"\n"],[1,2410,"\n"],[-1,2467," "],[1,2468,"f"],[-1,2493,"\n"],[1,2520,"\n"],[-1,2609,"教"],[1,2611,"一"],[-1,2660,"v"],[1,2662,"v"],[-1,2762,"\n"],[1,2785,"}"],[-1,2787,"v"],[1,2790,"v"],[-1,2877,"\n"],[1,2911,"\n"],[-1,2928,"i"],[1,2931,"i"]],[1814,1814],[2932,2932]]],[1537710681474,[null,[[1,1814,""],[-1,1814,"."],[1,1850,"栈"],[-1,1852,"栈"],[1,1997,"*"],[-1,2059,"*"],[1,2099,"堆"],[-1,2101,"堆"],[1,2136,"没"],[-1,2138,"没"],[1,2151,"，"],[-1,2153,"，"],[1,2169,"堆"],[-1,2171,"堆"],[1,2193,"；"],[-1,2195,"；"],[1,2198,"`"],[-1,2208,"`"],[1,2252,"加"],[-1,2254,"加"],[1,2315,"在"],[-1,2321,"在"],[1,2395,"\n"],[-1,2410,"\n"],[1,2468," "],[-1,2468,"f"],[1,2494,"\n"],[-1,2520,"\n"],[1,2610,"教"],[-1,2611,"一"],[1,2661,"v"],[-1,2662,"v"],[1,2763,"\n"],[-1,2785,"}"],[1,2788,"v"],[-1,2790,"v"],[1,2878,"\n"],[-1,2911,"\n"],[1,2929,"i"],[-1,2931,"i"]],[2932,2932],[1814,1814]]],[1537710624312,["gjx16@GJXAIOU",[[1,2911,"不会被释放"]],[2911,2911],[2916,2916]]],[1537710981478,[null,[[-1,1814,""],[1,1814,"."],[-1,1849,"栈"],[1,1852,"栈"],[-1,1996,"*"],[1,2059,"*"],[-1,2098,"堆"],[1,2101,"堆"],[-1,2135,"没"],[1,2138,"没"],[-1,2150,"，"],[1,2153,"，"],[-1,2168,"堆"],[1,2171,"堆"],[-1,2192,"；"],[1,2195,"；"],[-1,2197,"`"],[1,2208,"`"],[-1,2251,"加"],[1,2254,"加"],[-1,2314,"在"],[1,2321,"在"],[-1,2394,"\n"],[1,2410,"\n"],[-1,2467," "],[1,2468,"f"],[-1,2493,"\n"],[1,2520,"\n"],[-1,2609,"教"],[1,2611,"一"],[-1,2660,"v"],[1,2662,"v"],[-1,2762,"\n"],[1,2785,"}"],[-1,2787,"v"],[1,2790,"v"],[-1,2877,"\n"],[1,2916,"\n"],[-1,2933,"i"],[1,2936,"i"]],[1814,1814],[2937,2937]]],[1537710981479,[null,[[1,1814,""],[-1,1814,"."],[1,1850,"栈"],[-1,1852,"栈"],[1,1997,"*"],[-1,2059,"*"],[1,2099,"堆"],[-1,2101,"堆"],[1,2136,"没"],[-1,2138,"没"],[1,2151,"，"],[-1,2153,"，"],[1,2169,"堆"],[-1,2171,"堆"],[1,2193,"；"],[-1,2195,"；"],[1,2198,"`"],[-1,2208,"`"],[1,2252,"加"],[-1,2254,"加"],[1,2315,"在"],[-1,2321,"在"],[1,2395,"\n"],[-1,2410,"\n"],[1,2468," "],[-1,2468,"f"],[1,2494,"\n"],[-1,2520,"\n"],[1,2610,"教"],[-1,2611,"一"],[1,2661,"v"],[-1,2662,"v"],[1,2763,"\n"],[-1,2785,"}"],[1,2788,"v"],[-1,2790,"v"],[1,2878,"\n"],[-1,2916,"\n"],[1,2934,"i"],[-1,2936,"i"]],[2937,2937],[1814,1814]]],[1537710964745,["gjx16@GJXAIOU",[[-1,3240,"a"]],[3241,3241],[3240,3240]]],[1537710965969,["gjx16@GJXAIOU",[[1,3240,"p"]],[3240,3240],[3241,3241]]],[1537710974720,["gjx16@GJXAIOU",[[1,3046,"#include<>"]],[3046,3046],[3056,3056]]],[1537710977893,["gjx16@GJXAIOU",[[1,3055,"stdio"]],[3055,3055],[3060,3060]]],[1537710979144,["gjx16@GJXAIOU",[[-1,3058,"io"]],[3060,3060],[3058,3058]]],[1537710980872,["gjx16@GJXAIOU",[[1,3058,"lib"]],[3058,3058],[3061,3061]]],[1537711041475,[null,[[-1,1814,""],[1,1814,"."],[-1,1849,"栈"],[1,1852,"栈"],[-1,1996,"*"],[1,2059,"*"],[-1,2098,"堆"],[1,2101,"堆"],[-1,2135,"没"],[1,2138,"没"],[-1,2150,"，"],[1,2153,"，"],[-1,2168,"堆"],[1,2171,"堆"],[-1,2192,"；"],[1,2195,"；"],[-1,2197,"`"],[1,2208,"`"],[-1,2251,"加"],[1,2254,"加"],[-1,2314,"在"],[1,2321,"在"],[-1,2394,"\n"],[1,2410,"\n"],[-1,2467," "],[1,2468,"f"],[-1,2493,"\n"],[1,2520,"\n"],[-1,2609,"教"],[1,2611,"一"],[-1,2660,"v"],[1,2662,"v"],[-1,2762,"\n"],[1,2785,"}"],[-1,2787,"v"],[1,2790,"v"],[-1,2877,"\n"],[1,2916,"\n"],[-1,2933,"i"],[1,2936,"i"],[-1,3045,"\n"],[1,3062,"\n"],[-1,3255,"a"],[1,3257,")"]],[1814,1814],[3258,3258]]],[1537711041475,[null,[[1,1814,""],[-1,1814,"."],[1,1850,"栈"],[-1,1852,"栈"],[1,1997,"*"],[-1,2059,"*"],[1,2099,"堆"],[-1,2101,"堆"],[1,2136,"没"],[-1,2138,"没"],[1,2151,"，"],[-1,2153,"，"],[1,2169,"堆"],[-1,2171,"堆"],[1,2193,"；"],[-1,2195,"；"],[1,2198,"`"],[-1,2208,"`"],[1,2252,"加"],[-1,2254,"加"],[1,2315,"在"],[-1,2321,"在"],[1,2395,"\n"],[-1,2410,"\n"],[1,2468," "],[-1,2468,"f"],[1,2494,"\n"],[-1,2520,"\n"],[1,2610,"教"],[-1,2611,"一"],[1,2661,"v"],[-1,2662,"v"],[1,2763,"\n"],[-1,2785,"}"],[1,2788,"v"],[-1,2790,"v"],[1,2878,"\n"],[-1,2916,"\n"],[1,2934,"i"],[-1,2936,"i"],[1,3046,"\n"],[-1,3062,"\n"],[1,3256,"a"],[-1,3257,")"]],[3258,3258],[1814,1814]]],[1537710982372,["gjx16@GJXAIOU",[[1,3061,".h"]],[3061,3061],[3063,3063]]],[1537711028612,["gjx16@GJXAIOU",[[1,3001,"   //getp指向了互粉"]],[3001,3001],[3015,3015]]],[1537711029251,["gjx16@GJXAIOU",[[-1,3013,"互粉"]],[3015,3015],[3013,3013]]],[1537711039303,["gjx16@GJXAIOU",[[1,3013,"划分的堆区域，"]],[3013,3013],[3020,3020]]],[1537711101478,[null,[[-1,1814,""],[1,1814,"."],[-1,1849,"栈"],[1,1852,"栈"],[-1,1996,"*"],[1,2059,"*"],[-1,2098,"堆"],[1,2101,"堆"],[-1,2135,"没"],[1,2138,"没"],[-1,2150,"，"],[1,2153,"，"],[-1,2168,"堆"],[1,2171,"堆"],[-1,2192,"；"],[1,2195,"；"],[-1,2197,"`"],[1,2206,"`"],[-1,2251,"加"],[1,2254,"加"],[-1,2314,"在"],[1,2321,"在"],[-1,2394,"\n"],[1,2410,"\n"],[-1,2467," "],[1,2468,"f"],[-1,2493,"\n"],[1,2521,"\n"],[-1,2609,"教"],[1,2611,"一"],[-1,2660,"v"],[1,2662,"v"],[-1,2762,"\n"],[1,2785,"}\n\n"],[-1,2788,"\n\n"],[-1,2877,"\n"],[1,2916,"\n"],[-1,2933,"i"],[1,2936,"i"],[-1,3000,"\n"],[1,3020,"\n"],[-1,3064,"\n"],[1,3083,"\n"],[-1,3276,"a"],[1,3278,")"]],[1814,1814],[3279,3279]]],[1537711101478,[null,[[1,1814,""],[-1,1814,"."],[1,1850,"栈"],[-1,1852,"栈"],[1,1997,"*"],[-1,2059,"*"],[1,2099,"堆"],[-1,2101,"堆"],[1,2136,"没"],[-1,2138,"没"],[1,2151,"，"],[-1,2153,"，"],[1,2169,"堆"],[-1,2171,"堆"],[1,2193,"；"],[-1,2195,"；"],[1,2198,"`"],[-1,2206,"`"],[1,2252,"加"],[-1,2254,"加"],[1,2315,"在"],[-1,2321,"在"],[1,2395,"\n"],[-1,2410,"\n"],[1,2468," "],[-1,2468,"f"],[1,2494,"\n"],[-1,2521,"\n"],[1,2610,"教"],[-1,2611,"一"],[1,2661,"v"],[-1,2662,"v"],[1,2763,"\n"],[-1,2785,"}\n\n"],[1,2791,"\n\n"],[1,2878,"\n"],[-1,2916,"\n"],[1,2934,"i"],[-1,2936,"i"],[1,3001,"\n"],[-1,3020,"\n"],[1,3065,"\n"],[-1,3083,"\n"],[1,3277,"a"],[-1,3278,")"]],[3279,3279],[1814,1814]]],[1537711047980,["gjx16@GJXAIOU",[[1,3020,"因此释放即可"]],[3020,3020],[3026,3026]]],[1537711073816,["gjx16@GJXAIOU",[[1,3385,"从这程序中可以看出："]],[3385,3385],[3395,3395]]],[1537711161482,[null,[[-1,1814,""],[1,1814,"."],[-1,1849,"栈"],[1,1852,"栈"],[-1,1996,"*"],[1,2059,"*"],[-1,2098,"堆"],[1,2101,"堆"],[-1,2135,"没"],[1,2138,"没"],[-1,2150,"，"],[1,2153,"，"],[-1,2168,"堆"],[1,2171,"堆"],[-1,2192,"；"],[1,2195,"；"],[-1,2197,"`"],[1,2206,"`"],[-1,2251,"加"],[1,2254,"加"],[-1,2314,"在"],[1,2321,"在"],[-1,2394,"\n"],[1,2411,"\n"],[-1,2467," "],[1,2468,"f"],[-1,2493,"\n"],[1,2520,"\n"],[-1,2609,"教"],[1,2611,"一"],[-1,2660,"v"],[1,2662,"v"],[-1,2762,"\n"],[1,2785,"}\n\n"],[-1,2788,"\n\n"],[-1,2877,"\n"],[1,2916,"\n"],[-1,2933,"i"],[1,2936,"i"],[-1,3000,"\n"],[1,3026,"\n"],[-1,3070,"\n"],[1,3089,"\n"],[-1,3282,"a"],[1,3284,")"],[-1,3384,"也"],[1,3395,"也"]],[1814,1814],[3396,3396]]],[1537711161482,[null,[[1,1814,""],[-1,1814,"."],[1,1850,"栈"],[-1,1852,"栈"],[1,1997,"*"],[-1,2059,"*"],[1,2099,"堆"],[-1,2101,"堆"],[1,2136,"没"],[-1,2138,"没"],[1,2151,"，"],[-1,2153,"，"],[1,2169,"堆"],[-1,2171,"堆"],[1,2193,"；"],[-1,2195,"；"],[1,2198,"`"],[-1,2206,"`"],[1,2252,"加"],[-1,2254,"加"],[1,2315,"在"],[-1,2321,"在"],[1,2395,"\n"],[-1,2411,"\n"],[1,2468," "],[-1,2468,"f"],[1,2494,"\n"],[-1,2520,"\n"],[1,2610,"教"],[-1,2611,"一"],[1,2661,"v"],[-1,2662,"v"],[1,2763,"\n"],[-1,2785,"}\n\n"],[1,2791,"\n\n"],[1,2878,"\n"],[-1,2916,"\n"],[1,2934,"i"],[-1,2936,"i"],[1,3001,"\n"],[-1,3026,"\n"],[1,3071,"\n"],[-1,3089,"\n"],[1,3283,"a"],[-1,3284,")"],[1,3385,"也"],[-1,3395,"也"]],[3396,3396],[1814,1814]]],[1537711129105,["gjx16@GJXAIOU",[[1,3047,"··"]],[3047,3047],[3049,3049]]],[1537711129891,["gjx16@GJXAIOU",[[-1,3047,"··"]],[3049,3049],[3047,3047]]],[1537711131573,["gjx16@GJXAIOU",[[1,3047,"``"]],[3047,3047],[3049,3049]]],[1537711132477,["gjx16@GJXAIOU",[[-1,3047,"``"]],[3049,3049],[3047,3047]]],[1537711133374,["gjx16@GJXAIOU",[[1,3047,"~~~~"]],[3047,3047],[3049,3049]]],[1537711135611,["gjx16@GJXAIOU",[[1,3049,"zhege"]],[3049,3049],[3054,3054]]],[1537711137284,["gjx16@GJXAIOU",[[-1,3049,"zhege"]],[3054,3054],[3049,3049]]],[1537711152755,["gjx16@GJXAIOU",[[1,3049,"这个程序有错误，具体的修改将"]],[3049,3049],[3063,3063]]],[1537711153702,["gjx16@GJXAIOU",[[-1,3062,"将"]],[3063,3063],[3062,3062]]],[1537711161294,["gjx16@GJXAIOU",[[1,3062,"见下面的一个程序"]],[3062,3062],[3070,3070]]],[1537711281490,[null,[[-1,1814,""],[1,1814,"."],[-1,1849,"栈"],[1,1852,"栈"],[-1,1996,"*"],[1,2059,"*"],[-1,2098,"堆"],[1,2101,"堆"],[-1,2135,"没"],[1,2138,"没"],[-1,2150,"，"],[1,2153,"，"],[-1,2168,"堆"],[1,2171,"堆"],[-1,2192,"；"],[1,2195,"；"],[-1,2197,"`"],[1,2206,"`"],[-1,2251,"加"],[1,2254,"加"],[-1,2314,"在"],[1,2321,"在"],[-1,2394,"\n"],[1,2411,"\n"],[-1,2463," "],[1,2468,"f"],[-1,2493,"\n"],[1,2520,"\n"],[-1,2609,"教"],[1,2611,"一"],[1,2658,"\n"],[-1,2661,"\n"],[-1,2762,"\n"],[1,2785,"}\n\n"],[-1,2788,"\n\n"],[-1,2877,"\n"],[1,2916,"\n"],[-1,2933,"i"],[1,2936,"i"],[-1,3000,"\n"],[1,3026,"\n"],[-1,3045,"\n"],[1,3072,"\n"],[-1,3095,"\n"],[1,3114,"\n"],[-1,3307,"a"],[1,3309,")"],[-1,3409,"也"],[1,3420,"也"]],[1814,1814],[3421,3421]]],[1537711281490,[null,[[1,1814,""],[-1,1814,"."],[1,1850,"栈"],[-1,1852,"栈"],[1,1997,"*"],[-1,2059,"*"],[1,2099,"堆"],[-1,2101,"堆"],[1,2136,"没"],[-1,2138,"没"],[1,2151,"，"],[-1,2153,"，"],[1,2169,"堆"],[-1,2171,"堆"],[1,2193,"；"],[-1,2195,"；"],[1,2198,"`"],[-1,2206,"`"],[1,2252,"加"],[-1,2254,"加"],[1,2315,"在"],[-1,2321,"在"],[1,2395,"\n"],[-1,2411,"\n"],[1,2464," "],[-1,2468,"f"],[1,2494,"\n"],[-1,2520,"\n"],[1,2610,"教"],[-1,2611,"一"],[-1,2659,"\n"],[1,2663,"\n"],[1,2763,"\n"],[-1,2785,"}\n\n"],[1,2791,"\n\n"],[1,2878,"\n"],[-1,2916,"\n"],[1,2934,"i"],[-1,2936,"i"],[1,3001,"\n"],[-1,3026,"\n"],[1,3046,"\n"],[-1,3072,"\n"],[1,3096,"\n"],[-1,3114,"\n"],[1,3308,"a"],[-1,3309,")"],[1,3410,"也"],[-1,3420,"也"]],[3421,3421],[1814,1814]]],[1537711230436,["gjx16@GJXAIOU",[[1,3115,"\n"]],[3114,3114],[3115,3115]]],[1537711233426,["gjx16@GJXAIOU",[[-1,3172,"\n"]],[3172,3172],[3171,3171]]],[1537711254296,["gjx16@GJXAIOU",[[1,3229,"，相当于这里的p "]],[3229,3229],[3238,3238]]],[1537711255027,["gjx16@GJXAIOU",[[-1,3237," "]],[3238,3238],[3237,3237]]],[1537711270541,["gjx16@GJXAIOU",[[1,3237,"一直没有任何改变"]],[3237,3237],[3245,3245]]],[1537711341482,[null,[[-1,1814,""],[1,1814,"."],[-1,1849,"栈"],[1,1852,"栈"],[-1,1996,"*"],[1,2059,"*"],[-1,2098,"堆"],[1,2101,"堆"],[-1,2135,"没"],[1,2138,"没"],[-1,2150,"，"],[1,2153,"，"],[-1,2168,"堆"],[1,2171,"堆"],[-1,2192,"；"],[1,2195,"；"],[-1,2197,"`"],[1,2206,"`"],[-1,2251,"加"],[1,2254,"加"],[-1,2314,"在"],[1,2321,"在"],[-1,2394,"\n"],[1,2410,"\n"],[-1,2467," "],[1,2468,"f"],[-1,2493,"\n"],[1,2520,"\n"],[-1,2609,"教"],[1,2611,"一"],[-1,2660,"v"],[1,2662,"v"],[-1,2762,"\n"],[1,2785,"}\n\n"],[-1,2788,"\n\n"],[-1,2877,"\n"],[1,2916,"\n"],[-1,2933,"i"],[1,2936,"i"],[-1,3000,"\n"],[1,3026,"\n"],[-1,3045,"\n"],[1,3072,"\n"],[-1,3095,"\n"],[1,3114,"\n\n"],[-1,3115,"\n"],[-1,3171,"\n"],[1,3172,"}"],[-1,3228,"\n"],[1,3245,"\n"],[-1,3323,"a"],[1,3325,")"],[-1,3425,"也"],[1,3436,"也"]],[1814,1814],[3437,3437]]],[1537711341482,[null,[[1,1814,""],[-1,1814,"."],[1,1850,"栈"],[-1,1852,"栈"],[1,1997,"*"],[-1,2059,"*"],[1,2099,"堆"],[-1,2101,"堆"],[1,2136,"没"],[-1,2138,"没"],[1,2151,"，"],[-1,2153,"，"],[1,2169,"堆"],[-1,2171,"堆"],[1,2193,"；"],[-1,2195,"；"],[1,2198,"`"],[-1,2206,"`"],[1,2252,"加"],[-1,2254,"加"],[1,2315,"在"],[-1,2321,"在"],[1,2395,"\n"],[-1,2410,"\n"],[1,2468," "],[-1,2468,"f"],[1,2494,"\n"],[-1,2520,"\n"],[1,2610,"教"],[-1,2611,"一"],[1,2661,"v"],[-1,2662,"v"],[1,2763,"\n"],[-1,2785,"}\n\n"],[1,2791,"\n\n"],[1,2878,"\n"],[-1,2916,"\n"],[1,2934,"i"],[-1,2936,"i"],[1,3001,"\n"],[-1,3026,"\n"],[1,3046,"\n"],[-1,3072,"\n"],[1,3096,"\n"],[-1,3114,"\n\n"],[1,3117,"\n"],[1,3172,"\n"],[-1,3172,"}"],[1,3229,"\n"],[-1,3245,"\n"],[1,3324,"a"],[-1,3325,")"],[1,3426,"也"],[-1,3436,"也"]],[3437,3437],[1814,1814]]],[1537711310174,["gjx16@GJXAIOU",[[1,3423,"$resource/%E5%87%BD%E6%95%B0%E5%9B%BE%E5%BD%A2%E5%8C%96%E8%A7%A3%E6%9E%90.png"]],[3346,3423],[3423,3423]]],[1537711312060,["gjx16@GJXAIOU",[[-1,3423,"$resource/%E5%87%BD%E6%95%B0%E5%9B%BE%E5%BD%A2%E5%8C%96%E8%A7%A3%E6%9E%90.png"]],[3423,3423],[3346,3423]]],[1537711521511,[null,[[-1,1814,""],[1,1814,"."],[-1,1849,"栈"],[1,1852,"栈"],[-1,1996,"*"],[1,2059,"*"],[-1,2098,"堆"],[1,2101,"堆"],[-1,2135,"没"],[1,2138,"没"],[-1,2150,"，"],[1,2153,"，"],[-1,2168,"堆"],[1,2171,"堆"],[-1,2192,"；"],[1,2195,"；"],[-1,2197,"`"],[1,2206,"`"],[-1,2251,"加"],[1,2254,"加"],[-1,2314,"在"],[1,2321,"在"],[-1,2394,"\n"],[1,2410,"\n"],[-1,2467," "],[1,2468,"f"],[-1,2493,"\n"],[1,2520,"\n"],[-1,2609,"教"],[1,2611,"一"],[-1,2660,"v"],[1,2662,"v"],[-1,2762,"\n"],[1,2785,"}\n\n"],[-1,2788,"\n\n"],[-1,2877,"\n"],[1,2916,"\n"],[-1,2933,"i"],[1,2936,"i"],[-1,3000,"\n"],[1,3026,"\n"],[-1,3045,"\n"],[1,3072,"\n"],[-1,3095,"\n"],[1,3114,"\n\n"],[-1,3115,"\n"],[-1,3171,"\n"],[1,3172,"}"],[-1,3228,"\n"],[1,3245,"\n"],[-1,3323,"a"],[1,3325,")"],[-1,3425,"也"],[1,3436,"也"]],[1814,1814],[3437,3437]]],[1537711521511,[null,[[1,1814,""],[-1,1814,"."],[1,1850,"栈"],[-1,1852,"栈"],[1,1997,"*"],[-1,2059,"*"],[1,2099,"堆"],[-1,2101,"堆"],[1,2136,"没"],[-1,2138,"没"],[1,2151,"，"],[-1,2153,"，"],[1,2169,"堆"],[-1,2171,"堆"],[1,2193,"；"],[-1,2195,"；"],[1,2198,"`"],[-1,2206,"`"],[1,2252,"加"],[-1,2254,"加"],[1,2315,"在"],[-1,2321,"在"],[1,2395,"\n"],[-1,2410,"\n"],[1,2468," "],[-1,2468,"f"],[1,2494,"\n"],[-1,2520,"\n"],[1,2610,"教"],[-1,2611,"一"],[1,2661,"v"],[-1,2662,"v"],[1,2763,"\n"],[-1,2785,"}\n\n"],[1,2791,"\n\n"],[1,2878,"\n"],[-1,2916,"\n"],[1,2934,"i"],[-1,2936,"i"],[1,3001,"\n"],[-1,3026,"\n"],[1,3046,"\n"],[-1,3072,"\n"],[1,3096,"\n"],[-1,3114,"\n\n"],[1,3117,"\n"],[1,3172,"\n"],[-1,3172,"}"],[1,3229,"\n"],[-1,3245,"\n"],[1,3324,"a"],[-1,3325,")"],[1,3426,"也"],[-1,3436,"也"]],[3437,3437],[1814,1814]]],[1537711496651,["gjx16@GJXAIOU",[[1,3053,"本质上"]],[3053,3053],[3056,3056]]]],null,"gjx16@GJXAIOU"],["6ea15ea1-311f-4815-a128-e8ffa941513c",1537711821028,"# day10 内存管理\n\n## 变量作用域\n全局变量和局部变量\n\n一个C语言变量的作用域可以是代码块，作用域就是函数作用域或者文件作用域\n代码块：{}之间的一段代码；\n\n**文件作用域：**\n\n如果一个变量在其他的代码文件中已经定义了，可以在本程序中使用，但是使用前要使用关键字：extern\n例如：`extern int age` //有一个int型变量age已经在其他文件中定义了，这里就直接使用了；\n\n\n**auto自动变量**\n\nC语言中默认中都是auto，不需要关注它在内存中什么时候消失和出现\n`auto int i = 0;`等效于`int i = 0;`\n**register变量**\n`register int i = 0;`  //建议，如果有寄存器空闲的话，就将这个变量放进寄存器中使用，可以加快读取\n\n但是`int *p = &i`//这个语句就会报错，因为放在寄存器中就没有地址了\n\n\n**动态变量和静态变量**\n\n- 动态变量 \n\n```c\n#include<stdio.h>\n\nvoid myauto()\n{\n  int a = 0;\n  printf(\"a = %d\\n\",a);\n  a++;\n}\n\n\nint main()\n{\n  int i;\n  for(i = 0; i < 10; i++)\n  {\n    myatuo();\n \n  }\n\n}\n```\n\n程序的输出结果为  a = 0\n                            a = 0\n                            a = 0\n                            a = 0\n                            a = 0\n                            a = 0\n                            a = 0\n                            a = 0\n                            a = 0\n                            a = 0\n\n- 静态变量\n首先只要整个程序开始执行之后，静态变量是一直存在的，不消失的；\n其次，静态变量值初始化一次，即`static int a = 0;`语句只执行一次\n```c\n#include<stdio.h>\n\nvoid mystatic()\n{\n  static int a = 0;\n  printf(\"a = %d\\n\",a);\n  a++;\n\n}\n\nint main()\n{\n  int i = 0;\n  for(i = 0; i < 10; i++)\n  {\n    mystatic();\n  }\n}\n```\n程序运行结果为：a = 0\n                          a = 1\n                          a = 2\n                          a = 3\n                          a = 4\n                          a = 5\n                          a = 6\n                          a = 7\n                          a = 8\n                          a = 9\n\n\n**变量和函数是否使用extern的区别**\n\n- 变量 \n  - extern int age;\n  - int age;    //这包含两个含义：声明一个变量或者定义一个变量\n- 函数（下面两个没有什么区别）\n  - extern void age()\n  - void age()     \n\n\n## 内存四区简介\n\n![内存四区图示]($resource/%E5%86%85%E5%AD%98%E5%9B%9B%E5%8C%BA%E5%9B%BE%E7%A4%BA.png)\n\n### 1.代码区\n\n存放可执行的代码；程序被操作系统加载到内存中时候，所有可执行的代码都加载到代码区，==这块内存是不可以在运行期间修改的====；\n\n\n\n### 2.静态区\n\n存放所有的==静态变量/常量和全局变量/常量==\n\n### 3.栈区  \n\n栈区是一种先进后出的内存结构，所有的==自动变量、指针，数组、函数的形参==都是由编译器自动放出栈中，当一个自动变量超出其作用域的时候，自动从栈中弹出；\n\n对于自动变量，什么时候入栈和出栈都是系统自动控制的\n\n栈区的大小是可以动态设置的，不过不会特别大，一般大小为XX k，\n\n![栈的图示]($resource/%E6%A0%88%E7%9A%84%E5%9B%BE%E7%A4%BA.png)\n\n**栈溢出**\n当栈空间已满，但是还往栈内存中压变量，这就是栈溢出；\n\n\n### 4.堆区\n\n堆和栈一样，是一种在程序运行过程中可以随时修改的内存区域，但是==没有栈那样的先进后出的顺序==，是一个大容器，容量远远大于栈，==堆内存空间的申请和释放需要手工通过代码来完成==；\n\n分配堆的方法：\n```c\n#include<stdio.h>\n#include<stdlib.h>   //需要加一个头文件\n\nint main()\n{\n    int *p = malloc(sizeof(int)*10);  //语句含义为：在堆中间申请内存，函数的返回值为无类型的指针，参数为size_t无符号的整数   ，现在这个语句的含义是：申请一个内存大小为10个int大小的空间。指针p指向分配出来的堆的地址；\n\n    memset(p ,0,sizeof(int) * 10);  //将分配的这个空间置零初始化\n    free(p);//释放通过malloc分配的堆内存free(p);//释放通过malloc分配的堆内存\n\n}\n```\n\n\n**堆和栈的区别**\n\n```c\n#include<stdio.h>\n#include<stdlib.h>\n\nvoid *geta()   //这是错误的，不能将一个栈变量的地址通过函数的返回值返回\n{\n  int a = 0;\n  return &a;\n}\n\n\nvoid *geta1() //可以通过函数的返回值返回一个堆地址，但是一定要free\n{\n  int  *p = malloc(sizeof(int)); //申请了一个堆空间\n  return p;  //返回值为p 即是分配的堆空间的地址\n}\n\n\n\nvoid *gata2()   //这也是合法的，只要将main函数中的geta1改为geta2,然后将free(getp)去掉即可\n{\n  static int a = 0;  //使用static即使a为静态变量，存在于静态区，会一直存在不会被释放\n  return &a;\n}\n\n\n\n\nint main()\n\n{\n  int *getp = geta1();\n  *getp = 100;\n  free(getp);   //getp指向了划分的堆区域，因此释放即可\n}\n\n\n```\n\n**理解下面程序**\n~~这个程序本质上有错误，具体的修改见下面的一个程序~~\n```c\n#include<stdio.h>\n#include<stdlib.h>\n\nvoid getheap(int  *a)\n{\n  a = malloc(sizeof(int) * 10);\n}\n\nint main()\n{\n  int *p =NULL;\n  gatheap(p);  //实参没有任何改变，相当于这里的p一直没有任何改变\n\n  p[0] = 1;\n  p[1] = 2;\n  printf(\"p[0] = %d ,p[1] = %d\\n\",p[0],p[1]);\n  free(p);\n}\n```\n\n![函数图形化解析]($resource/%E5%87%BD%E6%95%B0%E5%9B%BE%E5%BD%A2%E5%8C%96%E8%A7%A3%E6%9E%90.png)\n\n从这程序中可以看出：也就是说a的值在改变，a是在栈里面的，它只是指向堆里面的一个空间；然后实参p的值一直没有变化\ngetheap在执行完之后，a就消失了，导致他指向的具体堆空间的地址编号也随之消失了；\n\n**修改**\n\n```c\n#include<stdio.h>\n#include<stdlib.h>\n\nvoid  getheap(int  **a)\n  {\n *a  =  malloc(sizeof(int)  *  10);\n  }\n\n\nint  main()\n{\n\n  int  *p  =NULL;\n  getheap(&p);  //实参没有任何改变\n  p[0]  =  1;\n  p[1]  =  2;\n  printf(\"p[0]  =  %d  ,p[1]  =  %d\\n\",p[0],p[1]);\n  free(p);\n  return  0;\n\n}\n```\n\n程序的分析图片：\n\n![堆和栈地址]($resource/%E5%A0%86%E5%92%8C%E6%A0%88%E5%9C%B0%E5%9D%80.png)\n\n",[[1537711781300,["gjx16@GJXAIOU",[[1,3611,"    "]],[3610,3610],[3614,3614]]],[1537711785463,["gjx16@GJXAIOU",[[-1,3644," "]],[3644,3644],[3643,3643]]],[1537711788135,["gjx16@GJXAIOU",[[-1,3641," "]],[3642,3642],[3641,3641]]],[1537711791996,["gjx16@GJXAIOU",[[-1,3668,"\n"]],[3668,3668],[3667,3667]]],[1537711804123,["gjx16@GJXAIOU",[[-1,3702,"//实参没有任何改变"]],[3712,3712],[3702,3702]]],[1537711810042,["gjx16@GJXAIOU",[[1,3702,"、、"]],[3702,3702],[3704,3704]]],[1537711811394,["gjx16@GJXAIOU",[[-1,3702,"、、"]],[3704,3704],[3702,3702]]],[1537711818298,["gjx16@GJXAIOU",[[1,3702,"//传递的是P"]],[3702,3702],[3709,3709]]],[1537711823450,["gjx16@GJXAIOU",[[1,3709,"的地址"]],[3709,3709],[3712,3712]]],[1537712078149,["gjx16@GJXAIOU",[[1,3654,"\n"]],[3652,3652],[3653,3653]]],[1537712078291,["gjx16@GJXAIOU",[[1,3655,"\n"]],[3653,3653],[3654,3654]]],[1537712078712,["gjx16@GJXAIOU",[[1,3656,"\n"]],[3654,3654],[3655,3655]]],[1537712082730,["gjx16@GJXAIOU",[[1,3653,"/*"]],[3653,3653],[3655,3655]]],[1537712083985,["gjx16@GJXAIOU",[[1,3659,"\n"]],[3655,3655],[3656,3656]]],[1537712087015,["gjx16@GJXAIOU",[[1,3660,"\n"]],[3656,3656],[3657,3657]]],[1537712087195,["gjx16@GJXAIOU",[[1,3661,"\n"]],[3657,3657],[3658,3658]]],[1537712089118,["gjx16@GJXAIOU",[[1,3658,"*/"]],[3658,3658],[3660,3660]]],[1537712092628,["gjx16@GJXAIOU",[[1,3656,"zh"]],[3656,3656],[3658,3658]]],[1537712093283,["gjx16@GJXAIOU",[[-1,3656,"zh"]],[3658,3658],[3656,3656]]],[1537712095409,["gjx16@GJXAIOU",[[1,3656,"int"]],[3656,3656],[3659,3659]]],[1537712096973,["gjx16@GJXAIOU",[[-1,3656,"int"]],[3659,3659],[3656,3656]]],[1537712099533,["gjx16@GJXAIOU",[[1,3656,"  int a"]],[3656,3656],[3663,3663]]],[1537712100663,["gjx16@GJXAIOU",[[-1,3662,"a"]],[3663,3663],[3662,3662]]],[1537712113965,["gjx16@GJXAIOU",[[1,3662,"**a = &b;deng"]],[3662,3662],[3675,3675]]],[1537712115246,["gjx16@GJXAIOU",[[-1,3671,"deng"]],[3675,3675],[3671,3671]]],[1537712119186,["gjx16@GJXAIOU",[[1,3671,"等价于"]],[3671,3671],[3674,3674]]],[1537712119705,["gjx16@GJXAIOU",[[1,3675,"  \n"]],[3674,3674],[3677,3677]]],[1537712126996,["gjx16@GJXAIOU",[[1,3677,"int **a"]],[3677,3677],[3684,3684]]],[1537712127555,["gjx16@GJXAIOU",[[1,3685,"  \n"]],[3684,3684],[3687,3687]]],[1537712128921,["gjx16@GJXAIOU",[[-1,3685,"  "]],[3687,3687],[3685,3685]]],[1537712129320,["gjx16@GJXAIOU",[[-1,3686,"\n"]],[3685,3685],[3684,3684]]],[1537712130512,["gjx16@GJXAIOU",[[1,3684,";"]],[3684,3684],[3685,3685]]],[1537712130898,["gjx16@GJXAIOU",[[1,3686,"  \n"]],[3685,3685],[3688,3688]]],[1537712136507,["gjx16@GJXAIOU",[[1,3688,"a = &b"]],[3688,3688],[3694,3694]]],[1537712145906,["gjx16@GJXAIOU",[[-1,3669,"b"]],[3670,3670],[3669,3669]]],[1537712146190,["gjx16@GJXAIOU",[[1,3669,"p"]],[3669,3669],[3670,3670]]],[1537712149586,["gjx16@GJXAIOU",[[-1,3693,"b"]],[3694,3694],[3693,3693]]],[1537712150267,["gjx16@GJXAIOU",[[1,3693,"p"]],[3693,3693],[3694,3694]]],[1537712155889,["gjx16@GJXAIOU",[[1,3647,"  //zhe"]],[3647,3647],[3654,3654]]],[1537712156993,["gjx16@GJXAIOU",[[-1,3651,"zhe"]],[3654,3654],[3651,3651]]],[1537712164297,["gjx16@GJXAIOU",[[1,3651,"这里的*ajiushi"]],[3651,3651],[3662,3662]]],[1537712165358,["gjx16@GJXAIOU",[[-1,3655,"ajiushi"]],[3662,3662],[3655,3655]]],[1537712174869,["gjx16@GJXAIOU",[[1,3655,"a就是指针pzhong "]],[3655,3655],[3667,3667]]],[1537712176050,["gjx16@GJXAIOU",[[-1,3661,"zhong "]],[3667,3667],[3661,3661]]],[1537712179562,["gjx16@GJXAIOU",[[1,3661,"中的值"]],[3661,3661],[3664,3664]]],[1537712181228,["gjx16@GJXAIOU",[[1,3664,"了，"]],[3664,3664],[3666,3666]]]],null,"gjx16@GJXAIOU"],["a2b0dffb-3bce-47da-943a-9feaa61cb08b",1537855011560,"# day10 内存管理\n\n## 变量作用域\n全局变量和局部变量\n\n一个C语言变量的作用域可以是代码块，作用域就是函数作用域或者文件作用域\n代码块：{}之间的一段代码；\n\n**文件作用域：**\n\n如果一个变量在其他的代码文件中已经定义了，可以在本程序中使用，但是使用前要使用关键字：extern\n例如：`extern int age` //有一个int型变量age已经在其他文件中定义了，这里就直接使用了；\n\n\n**auto自动变量**\n\nC语言中默认中都是auto，不需要关注它在内存中什么时候消失和出现\n`auto int i = 0;`等效于`int i = 0;`\n**register变量**\n`register int i = 0;`  //建议，如果有寄存器空闲的话，就将这个变量放进寄存器中使用，可以加快读取\n\n但是`int *p = &i`//这个语句就会报错，因为放在寄存器中就没有地址了\n\n\n**动态变量和静态变量**\n\n- 动态变量 \n\n```c\n#include<stdio.h>\n\nvoid myauto()\n{\n  int a = 0;\n  printf(\"a = %d\\n\",a);\n  a++;\n}\n\n\nint main()\n{\n  int i;\n  for(i = 0; i < 10; i++)\n  {\n    myatuo();\n \n  }\n\n}\n```\n\n程序的输出结果为  a = 0\n                            a = 0\n                            a = 0\n                            a = 0\n                            a = 0\n                            a = 0\n                            a = 0\n                            a = 0\n                            a = 0\n                            a = 0\n\n- 静态变量\n首先只要整个程序开始执行之后，静态变量是一直存在的，不消失的；\n其次，静态变量值初始化一次，即`static int a = 0;`语句只执行一次\n```c\n#include<stdio.h>\n\nvoid mystatic()\n{\n  static int a = 0;\n  printf(\"a = %d\\n\",a);\n  a++;\n\n}\n\nint main()\n{\n  int i = 0;\n  for(i = 0; i < 10; i++)\n  {\n    mystatic();\n  }\n}\n```\n程序运行结果为：a = 0\n                          a = 1\n                          a = 2\n                          a = 3\n                          a = 4\n                          a = 5\n                          a = 6\n                          a = 7\n                          a = 8\n                          a = 9\n\n\n**变量和函数是否使用extern的区别**\n\n- 变量 \n  - extern int age;\n  - int age;    //这包含两个含义：声明一个变量或者定义一个变量\n- 函数（下面两个没有什么区别）\n  - extern void age()\n  - void age()     \n\n\n## 内存四区简介\n\n![内存四区图示]($resource/%E5%86%85%E5%AD%98%E5%9B%9B%E5%8C%BA%E5%9B%BE%E7%A4%BA.png)\n\n### 1.代码区\n\n存放可执行的代码；程序被操作系统加载到内存中时候，所有可执行的代码都加载到代码区，==这块内存是不可以在运行期间修改的====；\n\n\n\n### 2.静态区\n\n存放所有的==静态变量/常量和全局变量/常量==\n\n### 3.栈区  \n\n栈区是一种先进后出的内存结构，所有的==自动变量、指针，数组、函数的形参==都是由编译器自动放出栈中，当一个自动变量超出其作用域的时候，自动从栈中弹出；\n\n对于自动变量，什么时候入栈和出栈都是系统自动控制的\n\n栈区的大小是可以动态设置的，不过不会特别大，一般大小为XX k，\n\n![栈的图示]($resource/%E6%A0%88%E7%9A%84%E5%9B%BE%E7%A4%BA.png)\n\n**栈溢出**\n当栈空间已满，但是还往栈内存中压变量，这就是栈溢出；\n\n\n### 4.堆区\n\n堆和栈一样，是一种在程序运行过程中可以随时修改的内存区域，但是==没有栈那样的先进后出的顺序==，是一个大容器，容量远远大于栈，==堆内存空间的申请和释放需要手工通过代码来完成==；\n\n分配堆的方法：\n```c\n#include<stdio.h>\n#include<stdlib.h>   //需要加一个头文件\n\nint main()\n{\n    int *p = malloc(sizeof(int)*10);  //语句含义为：在堆中间申请内存，函数的返回值为无类型的指针，参数为size_t无符号的整数   ，现在这个语句的含义是：申请一个内存大小为10个int大小的空间。指针p指向分配出来的堆的地址；\n\n    memset(p ,0,sizeof(int) * 10);  //将分配的这个空间置零初始化\n    free(p);//释放通过malloc分配的堆内存free(p);//释放通过malloc分配的堆内存\n\n}\n```\n\n\n**堆和栈的区别**\n\n```c\n#include<stdio.h>\n#include<stdlib.h>\n\nvoid *geta()   //这是错误的，不能将一个栈变量的地址通过函数的返回值返回\n{\n  int a = 0;\n  return &a;\n}\n\n\nvoid *geta1() //可以通过函数的返回值返回一个堆地址，但是一定要free\n{\n  int  *p = malloc(sizeof(int)); //申请了一个堆空间\n  return p;  //返回值为p 即是分配的堆空间的地址\n}\n\n\n\nvoid *gata2()   //这也是合法的，只要将main函数中的geta1改为geta2,然后将free(getp)去掉即可\n{\n  static int a = 0;  //使用static即使a为静态变量，存在于静态区，会一直存在不会被释放\n  return &a;\n}\n\n\n\n\nint main()\n\n{\n  int *getp = geta1();\n  *getp = 100;\n  free(getp);   //getp指向了划分的堆区域，因此释放即可\n}\n\n\n```\n\n**理解下面程序**\n~~这个程序本质上有错误，具体的修改见下面的一个程序~~\n```c\n#include<stdio.h>\n#include<stdlib.h>\n\nvoid getheap(int  *a)\n{\n  a = malloc(sizeof(int) * 10);\n}\n\nint main()\n{\n  int *p =NULL;\n  gatheap(p);  //实参没有任何改变，相当于这里的p一直没有任何改变\n\n  p[0] = 1;\n  p[1] = 2;\n  printf(\"p[0] = %d ,p[1] = %d\\n\",p[0],p[1]);\n  free(p);\n}\n```\n\n![函数图形化解析]($resource/%E5%87%BD%E6%95%B0%E5%9B%BE%E5%BD%A2%E5%8C%96%E8%A7%A3%E6%9E%90.png)\n\n从这程序中可以看出：也就是说a的值在改变，a是在栈里面的，它只是指向堆里面的一个空间；然后实参p的值一直没有变化\ngetheap在执行完之后，a就消失了，导致他指向的具体堆空间的地址编号也随之消失了；\n\n**修改**\n\n```c\n#include<stdio.h>\n#include<stdlib.h>\n\nvoid  getheap(int  **a)\n  {\n     *a  =  malloc(sizeof(int) * 10);  //这里的*a就是指针p中的值了，\n  }\n\n/*\n  int **a = &p;等价于\n  int **a;\n  a = &p\n\n*/\n\n\n\nint  main()\n{\n  int  *p  =NULL;\n  getheap(&p);  //传递的是P的地址\n  p[0]  =  1;\n  p[1]  =  2;\n  printf(\"p[0]  =  %d  ,p[1]  =  %d\\n\",p[0],p[1]);\n  free(p);\n  return  0;\n\n}\n```\n\n程序的分析图片：\n\n![堆和栈地址]($resource/%E5%A0%86%E5%92%8C%E6%A0%88%E5%9C%B0%E5%9D%80.png)\n\n",[[1537855008287,["gjx16@GJXAIOU",[[1,3972,"\n"]],[3971,3971],[3972,3972]]],[1537855008434,["gjx16@GJXAIOU",[[1,3973,"\n"]],[3972,3972],[3973,3973]]],[1537855008568,["gjx16@GJXAIOU",[[1,3974,"\n"]],[3973,3973],[3974,3974]]],[1537855013505,["gjx16@GJXAIOU",[[-1,3974,"\n"],[1,3975,"内存"]],[3974,3974],[3976,3976]]],[1537855015256,["gjx16@GJXAIOU",[[1,3976,"魔仙"]],[3976,3976],[3978,3978]]],[1537855016121,["gjx16@GJXAIOU",[[-1,3976,"魔仙"]],[3978,3978],[3976,3976]]],[1537855026706,["gjx16@GJXAIOU",[[1,3976,"模型现阶段"]],[3976,3976],[3981,3981]]],[1537855029063,["gjx16@GJXAIOU",[[-1,3978,"现阶段"]],[3981,3981],[3978,3978]]],[1537855058277,["gjx16@GJXAIOU",[[1,3978,"详解以及Linux系统堆内存大小的分析"]],[3978,3978],[3997,3997]]],[1537855066614,["gjx16@GJXAIOU",[[1,3974,"### "]],[3974,3974],[3978,3978]]],[1537855072966,["gjx16@GJXAIOU",[[1,4001,"\n\n"]],[4001,4001],[4002,4002]]],[1537855073104,["gjx16@GJXAIOU",[[1,4003,"\n"]],[4002,4002],[4003,4003]]],[1537855073294,["gjx16@GJXAIOU",[[1,4004,"\n"]],[4003,4003],[4004,4004]]],[1537855722599,["gjx16@GJXAIOU",[[1,4003,"****"]],[4003,4003],[4005,4005]]],[1537855727592,["gjx16@GJXAIOU",[[1,4005,"栈和堆的比较"]],[4005,4005],[4011,4011]]],[1537855729627,["gjx16@GJXAIOU",[[1,4015,"\n"]],[4013,4013],[4014,4014]]],[1537855732458,["gjx16@GJXAIOU",[[1,4014,"-"]],[4014,4014],[4015,4015]]],[1537855733932,["gjx16@GJXAIOU",[[-1,4014,"-"]],[4015,4015],[4014,4014]]],[1537855734898,["gjx16@GJXAIOU",[[1,4016,"\n"]],[4014,4014],[4015,4015]]],[1537855741377,["gjx16@GJXAIOU",[[1,4015,"- 栈"]],[4015,4015],[4018,4018]]],[1537855742426,["gjx16@GJXAIOU",[[1,4019,"- \n"]],[4018,4018],[4021,4021]]],[1537855749871,["gjx16@GJXAIOU",[[1,4021,"堆"]],[4021,4021],[4022,4022]]],[1537855752280,["gjx16@GJXAIOU",[[1,4019," "]],[4019,4019],[4020,4020]]],[1537855753566,["gjx16@GJXAIOU",[[-1,4019," "]],[4020,4020],[4019,4019]]],[1537855756606,["gjx16@GJXAIOU",[[1,4021,"\n- "]],[4018,4018],[4021,4021]]],[1537855758207,["gjx16@GJXAIOU",[[1,4019," "]],[4019,4019],[4020,4020]]],[1537855761059,["gjx16@GJXAIOU",[[1,4022," "]],[4021,4021],[4022,4022]]],[1537855761486,["gjx16@GJXAIOU",[[1,4022,"\n "]],[4022,4022],[4024,4024]]],[1537855765197,["gjx16@GJXAIOU",[[1,4022," "]],[4021,4021],[4022,4022]]],[1537855849387,["gjx16@GJXAIOU",[[1,4022,"明确知道数据占用多好内存\n -"]],[4022,4022],[4037,4037]]],[1537855849646,["gjx16@GJXAIOU",[[1,4038," "]],[4037,4037],[4038,4038]]],[1537855854938,["gjx16@GJXAIOU",[[1,4038,"数据很少"]],[4038,4038],[4042,4042]]],[1537855859368,["gjx16@GJXAIOU",[[1,4051,"- \n"]],[4050,4050],[4053,4053]]],[1537855861996,["gjx16@GJXAIOU",[[1,4051,"  "]],[4051,4051],[4053,4053]]],[1537855863436,["gjx16@GJXAIOU",[[1,4055," "]],[4054,4054],[4055,4055]]],[1537855878761,["gjx16@GJXAIOU",[[1,4055,"需要大量内存的时候\n  -"]],[4055,4055],[4068,4068]]],[1537855878914,["gjx16@GJXAIOU",[[1,4069," "]],[4068,4068],[4069,4069]]],[1537855884270,["gjx16@GJXAIOU",[[1,4069,"不需要"]],[4069,4069],[4072,4072]]],[1537855887377,["gjx16@GJXAIOU",[[-1,4070,"需要"]],[4072,4072],[4070,4070]]],[1537855899501,["gjx16@GJXAIOU",[[1,4070,"知道需要多少内存"]],[4070,4070],[4078,4078]]],[1537855935839,["gjx16@GJXAIOU",[[1,4045,"- \n "]],[4043,4043],[4047,4047]]],[1537855952589,["gjx16@GJXAIOU",[[1,4047,"变量离开作用范围后，账上的"]],[4047,4047],[4060,4060]]],[1537855953727,["gjx16@GJXAIOU",[[-1,4057,"账上的"]],[4060,4060],[4057,4057]]],[1537855963717,["gjx16@GJXAIOU",[[1,4057,"栈上的数据会自动释放"]],[4057,4057],[4067,4067]]],[1537855967357,["gjx16@GJXAIOU",[[1,4069,"- \n "]],[4067,4067],[4071,4071]]],[1537855969672,["gjx16@GJXAIOU",[[1,4071,"栈的"]],[4071,4071],[4073,4073]]],[1537855993293,["gjx16@GJXAIOU",[[1,4073,"最大尺寸固定，超过则引起栈溢出"]],[4073,4073],[4088,4088]]],[1537856016663,["gjx16@GJXAIOU",[[1,4126,"\n"]],[4125,4125],[4126,4126]]],[1537856016826,["gjx16@GJXAIOU",[[1,4127,"\n"]],[4126,4126],[4127,4127]]],[1537856301471,["gjx16@GJXAIOU",[[1,4126,"··"]],[4126,4126],[4128,4128]]],[1537856302649,["gjx16@GJXAIOU",[[-1,4126,"··"]],[4128,4128],[4126,4126]]],[1537856303058,["gjx16@GJXAIOU",[[-1,4127,"\n"]],[4126,4126],[4125,4125]]],[1537856304749,["gjx16@GJXAIOU",[[1,4127,"\n"]],[4125,4125],[4126,4126]]],[1537856306032,["gjx16@GJXAIOU",[[1,4126,"```"]],[4126,4126],[4129,4129]]],[1537856306066,["gjx16@GJXAIOU",[[1,4129,"language\n```\n"]],[4129,4129],[4129,4137]]],[1537856307058,["gjx16@GJXAIOU",[[-1,4129,"language"],[1,4137,"c"]],[4129,4137],[4130,4130]]],[1537856307294,["gjx16@GJXAIOU",[[1,4131,"\n"]],[4130,4130],[4131,4131]]],[1537856310920,["gjx16@GJXAIOU",[[1,4131,"//z"]],[4131,4131],[4134,4134]]],[1537856311406,["gjx16@GJXAIOU",[[-1,4133,"z"]],[4134,4134],[4133,4133]]],[1537856325323,["gjx16@GJXAIOU",[[1,4133,"在堆中可以动态的建立以"]],[4133,4133],[4144,4144]]],[1537856326852,["gjx16@GJXAIOU",[[-1,4138,"动态的建立以"]],[4144,4144],[4138,4138]]],[1537856328420,["gjx16@GJXAIOU",[[1,4138,"建立"]],[4138,4138],[4140,4140]]],[1537856333513,["gjx16@GJXAIOU",[[1,4140,"一个冬天的"]],[4140,4140],[4145,4145]]],[1537856334086,["gjx16@GJXAIOU",[[-1,4142,"冬天的"]],[4145,4145],[4142,4142]]],[1537856337824,["gjx16@GJXAIOU",[[1,4142,"动态的数组"]],[4142,4142],[4147,4147]]],[1537856339550,["gjx16@GJXAIOU",[[1,4148,"\n"]],[4147,4147],[4148,4148]]],[1537856339783,["gjx16@GJXAIOU",[[1,4149,"\n"]],[4148,4148],[4149,4149]]],[1537856347138,["gjx16@GJXAIOU",[[1,4149,"#include《》"]],[4149,4149],[4159,4159]]],[1537856348124,["gjx16@GJXAIOU",[[-1,4157,"《》"]],[4159,4159],[4157,4157]]],[1537856348892,["gjx16@GJXAIOU",[[1,4157,"<>"]],[4157,4157],[4159,4159]]],[1537856361078,["gjx16@GJXAIOU",[[1,4158,"stdio.j"]],[4158,4158],[4165,4165]]],[1537856361539,["gjx16@GJXAIOU",[[-1,4164,"j"]],[4165,4165],[4164,4164]]],[1537856362190,["gjx16@GJXAIOU",[[1,4164,"h"]],[4164,4164],[4165,4165]]],[1537856363765,["gjx16@GJXAIOU",[[1,4167,"\n"]],[4166,4166],[4167,4167]]],[1537856364570,["gjx16@GJXAIOU",[[1,4168,"\n"]],[4167,4167],[4168,4168]]],[1537856367481,["gjx16@GJXAIOU",[[1,4168,"int main()"]],[4168,4168],[4178,4178]]],[1537856368103,["gjx16@GJXAIOU",[[1,4179,"\n"]],[4178,4178],[4179,4179]]],[1537856369220,["gjx16@GJXAIOU",[[1,4179,"{}"]],[4179,4179],[4181,4181]]],[1537856370274,["gjx16@GJXAIOU",[[1,4180,"\n"]],[4180,4180],[4181,4181]]],[1537856370429,["gjx16@GJXAIOU",[[1,4181,"\n"]],[4181,4181],[4182,4182]]],[1537856370632,["gjx16@GJXAIOU",[[1,4182,"\n"]],[4182,4182],[4183,4183]]],[1537856370807,["gjx16@GJXAIOU",[[1,4183,"\n"]],[4183,4183],[4184,4184]]],[1537856371327,["gjx16@GJXAIOU",[[1,4184,"\n"]],[4184,4184],[4185,4185]]],[1537856375840,["gjx16@GJXAIOU",[[1,4182,"  int ji"]],[4182,4182],[4190,4190]]],[1537856377665,["gjx16@GJXAIOU",[[-1,4188,"ji"]],[4190,4190],[4188,4188]]],[1537856379045,["gjx16@GJXAIOU",[[1,4188,"i "]],[4188,4188],[4190,4190]]],[1537856379665,["gjx16@GJXAIOU",[[1,4191,"  \n"]],[4190,4190],[4193,4193]]],[1537856381112,["gjx16@GJXAIOU",[[-1,4191,"  "]],[4193,4193],[4191,4191]]],[1537856381486,["gjx16@GJXAIOU",[[-1,4193,"\n"]],[4191,4191],[4190,4190]]],[1537856382443,["gjx16@GJXAIOU",[[1,4190,";"]],[4190,4190],[4191,4191]]],[1537856382727,["gjx16@GJXAIOU",[[1,4192,"  \n"]],[4191,4191],[4194,4194]]],[1537856390470,["gjx16@GJXAIOU",[[1,4194,"int *array "]],[4194,4194],[4205,4205]]],[1537856391328,["gjx16@GJXAIOU",[[1,4205,"= "]],[4205,4205],[4207,4207]]],[1537856395091,["gjx16@GJXAIOU",[[-1,4194,"int *array = "]],[4207,4207],[4194,4194]]],[1537856396073,["gjx16@GJXAIOU",[[1,4194,"c"]],[4194,4194],[4195,4195]]],[1537856396600,["gjx16@GJXAIOU",[[-1,4194,"c"]],[4195,4195],[4194,4194]]],[1537856402479,["gjx16@GJXAIOU",[[1,4194,"scanf();"]],[4194,4194],[4202,4202]]],[1537856408441,["gjx16@GJXAIOU",[[1,4200,"\"\""]],[4200,4200],[4202,4202]]],[1537856412856,["gjx16@GJXAIOU",[[1,4201,"%d"]],[4201,4201],[4203,4203]]],[1537856421285,["gjx16@GJXAIOU",[[1,4204,",&i"]],[4204,4204],[4207,4207]]],[1537856423542,["gjx16@GJXAIOU",[[1,4210,"  \n"]],[4209,4209],[4212,4212]]],[1537856428166,["gjx16@GJXAIOU",[[1,4212,"int array"]],[4212,4212],[4221,4221]]],[1537856430200,["gjx16@GJXAIOU",[[-1,4216,"array"]],[4221,4221],[4216,4216]]],[1537856430927,["gjx16@GJXAIOU",[[1,4216,"a8"]],[4216,4216],[4218,4218]]],[1537856431850,["gjx16@GJXAIOU",[[-1,4216,"a8"]],[4218,4218],[4216,4216]]],[1537856441824,["gjx16@GJXAIOU",[[1,4216,"*array = malloc()(;"]],[4216,4216],[4235,4235]]],[1537856442548,["gjx16@GJXAIOU",[[-1,4233,"(;"]],[4235,4235],[4233,4233]]],[1537856443207,["gjx16@GJXAIOU",[[1,4233,";"]],[4233,4233],[4234,4234]]],[1537856449058,["gjx16@GJXAIOU",[[1,4232,"sizeof"]],[4232,4232],[4238,4238]]],[1537856450761,["gjx16@GJXAIOU",[[1,4238,"("]],[4238,4238],[4239,4239]]],[1537856451130,["gjx16@GJXAIOU",[[1,4240,")"]],[4239,4239],[4240,4240]]],[1537856453608,["gjx16@GJXAIOU",[[1,4239,"int "]],[4239,4239],[4243,4243]]],[1537856454563,["gjx16@GJXAIOU",[[-1,4242," "]],[4243,4243],[4242,4242]]],[1537856457479,["gjx16@GJXAIOU",[[1,4243," * i"]],[4243,4243],[4247,4247]]],[1537856483784,["gjx16@GJXAIOU",[[1,4250,"  \n"]],[4249,4249],[4252,4252]]],[1537856489588,["gjx16@GJXAIOU",[[1,4252,"free();"]],[4252,4252],[4259,4259]]],[1537856492327,["gjx16@GJXAIOU",[[1,4257,"array"]],[4257,4257],[4262,4262]]],[1537856767611,["gjx16@GJXAIOU",[[1,4095,"()"]],[4095,4095],[4097,4097]]],[1537856771006,["gjx16@GJXAIOU",[[1,4096,"heap"]],[4096,4096],[4100,4100]]],[1537856775045,["gjx16@GJXAIOU",[[1,4018,"()"]],[4018,4018],[4020,4020]]],[1537856780557,["gjx16@GJXAIOU",[[1,4019,"stack"]],[4019,4019],[4024,4024]]],[1537857125292,["gjx16@GJXAIOU",[[-1,3446,"在"]],[3447,3447],[3446,3446]]],[1537857127746,["gjx16@GJXAIOU",[[1,3448,"le"]],[3448,3448],[3450,3450]]],[1537857129145,["gjx16@GJXAIOU",[[-1,3447,"变le"]],[3450,3450],[3447,3447]]],[1537857129743,["gjx16@GJXAIOU",[[1,3447,"l"]],[3447,3447],[3448,3448]]],[1537857131273,["gjx16@GJXAIOU",[[-1,3447,"l"]],[3448,3448],[3447,3447]]],[1537857133496,["gjx16@GJXAIOU",[[1,3447,"了"]],[3447,3447],[3448,3448]]],[1537857136878,["gjx16@GJXAIOU",[[1,3450,"本身"]],[3450,3450],[3452,3452]]],[1537857148405,["gjx16@GJXAIOU",[[1,3472,"地址"]],[3472,3472],[3474,3474]]],[1537857191672,["gjx16@GJXAIOU",[[1,1997,"\n"]],[1996,1996],[1997,1997]]],[1537857218001,["gjx16@GJXAIOU",[[1,1997,"C语言中函数的变量是从右往左入栈的，也就是说最后"]],[1997,1997],[2021,2021]]],[1537857220851,["gjx16@GJXAIOU",[[-1,2018,"说最后"]],[2021,2021],[2018,2018]]],[1537857225345,["gjx16@GJXAIOU",[[1,2004,"参数"]],[2004,2004],[2006,2006]]],[1537857239771,["gjx16@GJXAIOU",[[1,2020,"最右边的参数的"]],[2020,2020],[2027,2027]]],[1537857240618,["gjx16@GJXAIOU",[[-1,2026,"的"]],[2027,2027],[2026,2026]]],[1537857246634,["gjx16@GJXAIOU",[[1,2026,"是最先入栈的"]],[2026,2026],[2032,2032]]],[1537857254415,["gjx16@GJXAIOU",[[1,4327,"\n"]],[4325,4325],[4326,4326]]],[1537858237842,["gjx16@GJXAIOU",[[1,4326,"****"]],[4326,4326],[4328,4328]]],[1537858246239,["gjx16@GJXAIOU",[[1,4328,"堆的分配和释放"]],[4328,4328],[4335,4335]]],[1537858248059,["gjx16@GJXAIOU",[[1,4339,"\n"]],[4337,4337],[4338,4338]]],[1537858257843,["gjx16@GJXAIOU",[[-1,4339,"\n"],[1,4340,"内存"]],[4339,4339],[4341,4341]]],[1537858263438,["gjx16@GJXAIOU",[[1,4341,"的最小大卫"]],[4341,4341],[4346,4346]]],[1537858264644,["gjx16@GJXAIOU",[[-1,4344,"大卫"]],[4346,4346],[4344,4344]]],[1537858301918,["gjx16@GJXAIOU",[[1,4344,"单位是字节，但是操作系统在管理内存的时候，最小的单位不是在"]],[4344,4344],[4373,4373]]],[1537858304713,["gjx16@GJXAIOU",[[-1,4370,"不是在"]],[4373,4373],[4370,4370]]],[1537858307998,["gjx16@GJXAIOU",[[1,4370,"是"]],[4370,4370],[4371,4371]]],[1537858315047,["gjx16@GJXAIOU",[[1,4371,"内存页"]],[4371,4371],[4374,4374]]],[1537858333953,["gjx16@GJXAIOU",[[1,4374,"\n\n"]],[4374,4374],[4375,4375]]],[1537858538578,["gjx16@GJXAIOU",[[1,4374,"（）"]],[4374,4374],[4376,4376]]],[1537858548840,["gjx16@GJXAIOU",[[1,4375,"32位操作系统中"]],[4375,4375],[4383,4383]]],[1537858556119,["gjx16@GJXAIOU",[[1,4383,"每一页为4k"]],[4383,4383],[4389,4389]]],[1537858844132,["gjx16@GJXAIOU",[[1,4389," "]],[4389,4389],[4390,4390]]],[1537859726821,["gjx16@GJXAIOU",[[1,4393,"\n"]],[4391,4391],[4392,4392]]],[1537859726978,["gjx16@GJXAIOU",[[1,4394,"\n"]],[4392,4392],[4393,4393]]],[1537859728497,["gjx16@GJXAIOU",[[1,4393,"·"]],[4393,4393],[4394,4394]]],[1537859729307,["gjx16@GJXAIOU",[[-1,4393,"·"]],[4394,4394],[4393,4393]]],[1537859731236,["gjx16@GJXAIOU",[[1,4393,"```"]],[4393,4393],[4396,4396]]],[1537859731272,["gjx16@GJXAIOU",[[1,4396,"language\n```\n"]],[4396,4396],[4396,4404]]],[1537859732248,["gjx16@GJXAIOU",[[-1,4396,"language"],[1,4404,"c"]],[4396,4404],[4397,4397]]],[1537859732557,["gjx16@GJXAIOU",[[1,4398,"\n"]],[4397,4397],[4398,4398]]],[1537859755606,["gjx16@GJXAIOU",[[1,4398," "]],[4398,4398],[4399,4399]]],[1537859776873,["gjx16@GJXAIOU",[[1,4393,"\n"]],[4392,4392],[4393,4393]]],[1537859778713,["gjx16@GJXAIOU",[[1,4393,"****"]],[4393,4393],[4395,4395]]],[1537859784158,["gjx16@GJXAIOU",[[1,4395,"malloch"]],[4395,4395],[4402,4402]]],[1537859784606,["gjx16@GJXAIOU",[[-1,4401,"h"]],[4402,4402],[4401,4401]]],[1537859798665,["gjx16@GJXAIOU",[[1,4401,"和calloche"]],[4401,4401],[4410,4410]]],[1537859799250,["gjx16@GJXAIOU",[[-1,4408,"he"]],[4410,4410],[4408,4408]]],[1537859800988,["gjx16@GJXAIOU",[[1,4408,"和"]],[4408,4408],[4409,4409]]],[1537859830621,["gjx16@GJXAIOU",[[1,4418,"#incul"]],[4418,4418],[4424,4424]]],[1537859832309,["gjx16@GJXAIOU",[[-1,4422,"ul"]],[4424,4424],[4422,4422]]],[1537859835057,["gjx16@GJXAIOU",[[1,4422,"lude<>"]],[4422,4422],[4428,4428]]],[1537859839072,["gjx16@GJXAIOU",[[1,4427,"stdio.h"]],[4427,4427],[4434,4434]]],[1537859840854,["gjx16@GJXAIOU",[[1,4436," \n"]],[4435,4435],[4437,4437]]],[1537859841417,["gjx16@GJXAIOU",[[-1,4436," "],[1,4437,"\n"]],[4437,4437],[4437,4437]]],[1537859844777,["gjx16@GJXAIOU",[[1,4437,"int main()"]],[4437,4437],[4447,4447]]],[1537859845220,["gjx16@GJXAIOU",[[1,4448,"\n"]],[4447,4447],[4448,4448]]],[1537859846310,["gjx16@GJXAIOU",[[1,4448,"{}"]],[4448,4448],[4450,4450]]],[1537859847763,["gjx16@GJXAIOU",[[1,4449,"\n"]],[4449,4449],[4450,4450]]],[1537859847919,["gjx16@GJXAIOU",[[1,4450,"\n"]],[4450,4450],[4451,4451]]],[1537859848107,["gjx16@GJXAIOU",[[1,4451,"\n"]],[4451,4451],[4452,4452]]],[1537859848343,["gjx16@GJXAIOU",[[1,4452,"\n"]],[4452,4452],[4453,4453]]],[1537859855329,["gjx16@GJXAIOU",[[1,4450,"char "]],[4450,4450],[4455,4455]]],[1537859857174,["gjx16@GJXAIOU",[[-1,4450,"char "]],[4455,4455],[4450,4450]]],[1537859865058,["gjx16@GJXAIOU",[[1,4450,"  char *p = malloc "]],[4450,4450],[4469,4469]]],[1537859865746,["gjx16@GJXAIOU",[[-1,4468," "]],[4469,4469],[4468,4468]]],[1537859866807,["gjx16@GJXAIOU",[[1,4468,"();"]],[4468,4468],[4471,4471]]],[1537859871097,["gjx16@GJXAIOU",[[1,4469,"10"]],[4469,4469],[4471,4471]]],[1537859876186,["gjx16@GJXAIOU",[[1,4473,"//fenpei"]],[4473,4473],[4481,4481]]],[1537859877367,["gjx16@GJXAIOU",[[-1,4475,"fenpei"]],[4481,4481],[4475,4475]]],[1537859890062,["gjx16@GJXAIOU",[[1,4475,"分配一个10个字节的空间"]],[4475,4475],[4487,4487]]],[1537859891337,["gjx16@GJXAIOU",[[1,4488,"  \n"]],[4487,4487],[4490,4490]]],[1537859899826,["gjx16@GJXAIOU",[[1,4490,"int"]],[4490,4490],[4493,4493]]],[1537859900649,["gjx16@GJXAIOU",[[-1,4490,"int"]],[4493,4493],[4490,4490]]],[1537859906628,["gjx16@GJXAIOU",[[1,4490,"int i = 0;"]],[4490,4490],[4500,4500]]],[1537859907093,["gjx16@GJXAIOU",[[1,4501,"  \n"]],[4500,4500],[4503,4503]]],[1537859909641,["gjx16@GJXAIOU",[[1,4503,"for()"]],[4503,4503],[4508,4508]]],[1537859918074,["gjx16@GJXAIOU",[[1,4507,"i = 0; i 《"]],[4507,4507],[4517,4517]]],[1537859918774,["gjx16@GJXAIOU",[[-1,4516,"《"]],[4517,4517],[4516,4516]]],[1537859924548,["gjx16@GJXAIOU",[[1,4516,"< 10; i++"]],[4516,4516],[4525,4525]]],[1537859926439,["gjx16@GJXAIOU",[[1,4527,"  \n"]],[4526,4526],[4529,4529]]],[1537859927540,["gjx16@GJXAIOU",[[1,4529,"{}"]],[4529,4529],[4531,4531]]],[1537859928900,["gjx16@GJXAIOU",[[1,4530,"\n  \n  \n  "]],[4530,4530],[4539,4539]]],[1537859933588,["gjx16@GJXAIOU",[[1,4533,"  printf()"]],[4533,4533],[4543,4543]]],[1537859935634,["gjx16@GJXAIOU",[[1,4542,"\"\""]],[4542,4542],[4544,4544]]],[1537859939338,["gjx16@GJXAIOU",[[1,4543,"%d\\n"]],[4543,4543],[4547,4547]]],[1537859942590,["gjx16@GJXAIOU",[[1,4548,",i"]],[4548,4548],[4550,4550]]],[1537859946854,["gjx16@GJXAIOU",[[1,4551,";"]],[4551,4551],[4552,4552]]],[1537859948945,["gjx16@GJXAIOU",[[-1,4553,"  "]],[4555,4555],[4553,4553]]],[1537859949151,["gjx16@GJXAIOU",[[-1,4553,"\n"]],[4553,4553],[4552,4552]]],[1537859949477,["gjx16@GJXAIOU",[[-1,4551,";"]],[4552,4552],[4551,4551]]],[1537859950653,["gjx16@GJXAIOU",[[1,4551,"'"]],[4551,4551],[4552,4552]]],[1537859951310,["gjx16@GJXAIOU",[[-1,4551,"'"]],[4552,4552],[4551,4551]]],[1537859951909,["gjx16@GJXAIOU",[[1,4551,";"]],[4551,4551],[4552,4552]]],[1537859957618,["gjx16@GJXAIOU",[[-1,4558,"\n"]],[4558,4558],[4557,4557]]],[1537859958579,["gjx16@GJXAIOU",[[-1,4557,"\n"]],[4557,4557],[4556,4556]]],[1537876410928,["gjx16@GJXAIOU",[[1,4487,","]],[4487,4487],[4488,4488]]],[1537876448814,["gjx16@GJXAIOU",[[1,4488,"dansh"]],[4488,4488],[4493,4493]]],[1537876450057,["gjx16@GJXAIOU",[[-1,4488,"dansh"]],[4493,4493],[4488,4488]]],[1537876480924,["gjx16@GJXAIOU",[[1,4488,"但是这10个空间没有清理过，所以每次使用可能都是10个随机数"]],[4488,4488],[4518,4518]]],[1537876659935,["gjx16@GJXAIOU",[[1,4412,"\n"]],[4411,4411],[4412,4412]]],[1537876660996,["gjx16@GJXAIOU",[[1,4413,"\n"]],[4412,4412],[4413,4413]]],[1537876665732,["gjx16@GJXAIOU",[[1,4413,"- malloc"]],[4413,4413],[4421,4421]]],[1537876670140,["gjx16@GJXAIOU",[[1,4606,"\n"]],[4604,4604],[4605,4605]]],[1537876670708,["gjx16@GJXAIOU",[[1,4605,"- "]],[4605,4605],[4607,4607]]],[1537876674354,["gjx16@GJXAIOU",[[1,4607,"calloc"]],[4607,4607],[4613,4613]]],[1537876675681,["gjx16@GJXAIOU",[[1,4614,"- \n"]],[4613,4613],[4616,4616]]],[1537876678742,["gjx16@GJXAIOU",[[-1,4614,"- "]],[4616,4616],[4614,4614]]],[1537876679777,["gjx16@GJXAIOU",[[1,4614,"  "]],[4614,4614],[4616,4616]]],[1537876680336,["gjx16@GJXAIOU",[[-1,4615," "]],[4616,4616],[4615,4615]]],[1537876681408,["gjx16@GJXAIOU",[[1,4615,"```"]],[4615,4615],[4618,4618]]],[1537876682842,["gjx16@GJXAIOU",[[-1,4614," ```"]],[4618,4618],[4614,4614]]],[1537876683598,["gjx16@GJXAIOU",[[1,4616,"\n"]],[4614,4614],[4615,4615]]],[1537876684475,["gjx16@GJXAIOU",[[1,4615,"```"]],[4615,4615],[4618,4618]]],[1537876684511,["gjx16@GJXAIOU",[[1,4618,"language\n```\n"]],[4618,4618],[4618,4626]]],[1537876685800,["gjx16@GJXAIOU",[[-1,4618,"language"],[1,4626,"c"]],[4618,4626],[4619,4619]]],[1537876686042,["gjx16@GJXAIOU",[[1,4620,"\n"]],[4619,4619],[4620,4620]]],[1537876687186,["gjx16@GJXAIOU",[[1,4620," #include<stdio.h>\n\nint main()\n{\n  char *p = malloc(10);//分配一个10个字节的空间,但是这10个空间没有清理过，所以每次使用可能都是10个随机数\n  int i = 0;\n  for(i = 0; i < 10; i++)\n  {\n    printf(\"%d\\n\",i);\n  }\n}"]],[4620,4620],[4792,4792]]],[1537876711372,["gjx16@GJXAIOU",[[-1,4665,"malloc(10);//分配一个10个字节的空间,但是这10个空间没有清理过，所以每次使用可能都是10个随机数"]],[4665,4721],[4665,4665]]],[1537876715078,["gjx16@GJXAIOU",[[1,4665,"callox"]],[4665,4665],[4671,4671]]],[1537876715855,["gjx16@GJXAIOU",[[-1,4670,"x"]],[4671,4671],[4670,4670]]],[1537876717410,["gjx16@GJXAIOU",[[1,4670,"cIO"]],[4670,4670],[4673,4673]]],[1537876718170,["gjx16@GJXAIOU",[[-1,4671,"IO"]],[4673,4673],[4671,4671]]],[1537876719937,["gjx16@GJXAIOU",[[1,4671,"();"]],[4671,4671],[4674,4674]]],[1537876730151,["gjx16@GJXAIOU",[[1,4672,"10,size"]],[4672,4672],[4679,4679]]],[1537876732828,["gjx16@GJXAIOU",[[1,4679,"of("]],[4679,4679],[4682,4682]]],[1537876732947,["gjx16@GJXAIOU",[[1,4683,")"]],[4682,4682],[4683,4683]]],[1537876737106,["gjx16@GJXAIOU",[[1,4682,"char"]],[4682,4682],[4686,4686]]],[1537876747691,["gjx16@GJXAIOU",[[1,4531,"\n  "]],[4528,4528],[4531,4531]]],[1537876747883,["gjx16@GJXAIOU",[[-1,4529,"  "],[1,4531,"\n"]],[4531,4531],[4530,4530]]],[1537876754414,["gjx16@GJXAIOU",[[1,4530,"  memsetr"]],[4530,4530],[4539,4539]]],[1537876755165,["gjx16@GJXAIOU",[[-1,4538,"r"]],[4539,4539],[4538,4538]]],[1537876756535,["gjx16@GJXAIOU",[[1,4538,"()"]],[4538,4538],[4540,4540]]],[1537876765457,["gjx16@GJXAIOU",[[1,4539,"p,0,10"]],[4539,4539],[4545,4545]]],[1537876768177,["gjx16@GJXAIOU",[[1,4546,";"]],[4546,4546],[4547,4547]]],[1537876779594,["gjx16@GJXAIOU",[[-1,4609,"i"]],[4610,4610],[4609,4609]]],[1537876782346,["gjx16@GJXAIOU",[[1,4609,"p[i["]],[4609,4609],[4613,4613]]],[1537876783070,["gjx16@GJXAIOU",[[-1,4612,"["]],[4613,4613],[4612,4612]]],[1537876784011,["gjx16@GJXAIOU",[[1,4612,"]"]],[4612,4612],[4613,4613]]],[1537876954762,["gjx16@GJXAIOU",[[-1,4427," "]],[4428,4428],[4427,4427]]],[1537876954919,["gjx16@GJXAIOU",[[-1,4426,"\n"]],[4427,4427],[4426,4426]]],[1537876956387,["gjx16@GJXAIOU",[[1,4426,"\n"]],[4426,4426],[4427,4427]]],[1537876959232,["gjx16@GJXAIOU",[[1,4446,"\n"]],[4445,4445],[4446,4446]]],[1537876959597,["gjx16@GJXAIOU",[[1,4446,"w"]],[4446,4446],[4447,4447]]],[1537876960421,["gjx16@GJXAIOU",[[-1,4446,"w"]],[4447,4447],[4446,4446]]],[1537876961062,["gjx16@GJXAIOU",[[1,4446,"'3"]],[4446,4446],[4448,4448]]],[1537876961737,["gjx16@GJXAIOU",[[-1,4446,"'3"]],[4448,4448],[4446,4446]]],[1537876962047,["gjx16@GJXAIOU",[[-1,4446,"\n"]],[4446,4446],[4445,4445]]],[1537876967275,["gjx16@GJXAIOU",[[1,4445,"#include<>"]],[4445,4445],[4455,4455]]],[1537876969750,["gjx16@GJXAIOU",[[1,4454,"stdio"]],[4454,4454],[4459,4459]]],[1537876971307,["gjx16@GJXAIOU",[[1,4459,".h"]],[4459,4459],[4461,4461]]],[1537877195312,["gjx16@GJXAIOU",[[1,4563," //z"]],[4563,4563],[4567,4567]]],[1537877195760,["gjx16@GJXAIOU",[[-1,4566,"z"]],[4567,4567],[4566,4566]]],[1537877199906,["gjx16@GJXAIOU",[[1,4566,"这里是将"]],[4566,4566],[4570,4570]]],[1537877201726,["gjx16@GJXAIOU",[[-1,4568,"是将"]],[4570,4570],[4568,4568]]],[1537877209689,["gjx16@GJXAIOU",[[1,4568,"含义是将p zhon"]],[4568,4568],[4578,4578]]],[1537877210529,["gjx16@GJXAIOU",[[-1,4574,"zhon"]],[4578,4578],[4574,4574]]],[1537877220173,["gjx16@GJXAIOU",[[1,4574,"中的10歌"]],[4574,4574],[4579,4579]]],[1537877221153,["gjx16@GJXAIOU",[[-1,4578,"歌"]],[4579,4579],[4578,4578]]],[1537877233131,["gjx16@GJXAIOU",[[1,4578,"个元素全部置零"]],[4578,4578],[4585,4585]]],[1537877268539,["gjx16@GJXAIOU",[[-1,4680," "]],[4681,4681],[4680,4680]]],[1537877279494,["gjx16@GJXAIOU",[[1,4698,"#include<>"]],[4698,4698],[4708,4708]]],[1537877284584,["gjx16@GJXAIOU",[[1,4707,"stdlib.h"]],[4707,4707],[4715,4715]]],[1537877312689,["gjx16@GJXAIOU",[[1,4766,"//fen"]],[4766,4766],[4771,4771]]],[1537877313679,["gjx16@GJXAIOU",[[-1,4768,"fen"]],[4771,4771],[4768,4768]]],[1537877323977,["gjx16@GJXAIOU",[[1,4768,"分配10个大小为sizeof（）"]],[4768,4768],[4784,4784]]],[1537877327115,["gjx16@GJXAIOU",[[1,4783,"char"]],[4783,4783],[4787,4787]]],[1537877330261,["gjx16@GJXAIOU",[[1,4788,"d"]],[4788,4788],[4789,4789]]],[1537877331491,["gjx16@GJXAIOU",[[-1,4788,"d"]],[4789,4789],[4788,4788]]],[1537877345919,["gjx16@GJXAIOU",[[1,4788,"的空间，并且自动全部置零"]],[4788,4788],[4800,4800]]],[1537877352024,["gjx16@GJXAIOU",[[-1,4862,"i"]],[4863,4863],[4862,4862]]],[1537877356874,["gjx16@GJXAIOU",[[1,4862,"p[i]"]],[4862,4862],[4866,4866]]],[1537877364960,["gjx16@GJXAIOU",[[1,4658,"  \n"]],[4657,4657],[4660,4660]]],[1537877366457,["gjx16@GJXAIOU",[[1,4660,"reru"]],[4660,4660],[4664,4664]]],[1537877367593,["gjx16@GJXAIOU",[[-1,4662,"ru"]],[4664,4664],[4662,4662]]],[1537877368083,["gjx16@GJXAIOU",[[1,4662,"r"]],[4662,4662],[4663,4663]]],[1537877368621,["gjx16@GJXAIOU",[[-1,4662,"r"]],[4663,4663],[4662,4662]]],[1537877371811,["gjx16@GJXAIOU",[[1,4662,"turn 0;"]],[4662,4662],[4669,4669]]],[1537877375477,["gjx16@GJXAIOU",[[1,4885,"  \n"]],[4884,4884],[4887,4887]]],[1537877380436,["gjx16@GJXAIOU",[[1,4887,"return 0;"]],[4887,4887],[4896,4896]]],[1537877453743,["gjx16@GJXAIOU",[[1,4660,"\n  "]],[4657,4657],[4660,4660]]],[1537877460956,["gjx16@GJXAIOU",[[1,4660,"free();"]],[4660,4660],[4667,4667]]],[1537877463881,["gjx16@GJXAIOU",[[1,4665,"p"]],[4665,4665],[4666,4666]]],[1537877471305,["gjx16@GJXAIOU",[[1,4908,"  \n"]],[4907,4907],[4910,4910]]],[1537877475570,["gjx16@GJXAIOU",[[1,4910,"free()"]],[4910,4910],[4916,4916]]],[1537877478600,["gjx16@GJXAIOU",[[1,4915,"p"]],[4915,4915],[4916,4916]]],[1537877481511,["gjx16@GJXAIOU",[[1,4917,";"]],[4917,4917],[4918,4918]]],[1537877485810,["gjx16@GJXAIOU",[[1,4740,"\n"]],[4739,4739],[4740,4740]]],[1537877490391,["gjx16@GJXAIOU",[[1,4740,"#include<>"]],[4740,4740],[4750,4750]]],[1537877494819,["gjx16@GJXAIOU",[[1,4749,"string.h"]],[4749,4749],[4757,4757]]],[1537877496314,["gjx16@GJXAIOU",[[1,4759,"\n"]],[4758,4758],[4759,4759]]],[1537877533727,["gjx16@GJXAIOU",[[1,4947,"\n"]],[4944,4944],[4945,4945]]],[1537877534183,["gjx16@GJXAIOU",[[1,4948,"\n"]],[4945,4945],[4946,4946]]],[1537877720728,["gjx16@GJXAIOU",[[1,4949,"\n"]],[4944,4944],[4945,4945]]],[1537877722378,["gjx16@GJXAIOU",[[1,4950,"\n"]],[4945,4945],[4946,4946]]],[1537877750749,["gjx16@GJXAIOU",[[1,4946,"- reall"]],[4946,4946],[4953,4953]]],[1537877751503,["gjx16@GJXAIOU",[[1,4953,"oc"]],[4953,4953],[4955,4955]]],[1537877753149,["gjx16@GJXAIOU",[[1,4956,"- \n"]],[4955,4955],[4958,4958]]],[1537877754509,["gjx16@GJXAIOU",[[-1,4956,"- "]],[4958,4958],[4956,4956]]],[1537877819691,["gjx16@GJXAIOU",[[1,4956,"ru"]],[4956,4956],[4958,4958]]],[1537877820419,["gjx16@GJXAIOU",[[-1,4956,"ru"]],[4958,4958],[4956,4956]]],[1537877826496,["gjx16@GJXAIOU",[[1,4956,"如果已分派的"]],[4956,4956],[4962,4962]]],[1537877827058,["gjx16@GJXAIOU",[[-1,4960,"派的"]],[4962,4962],[4960,4960]]],[1537877832693,["gjx16@GJXAIOU",[[1,4960,"陪"]],[4960,4960],[4961,4961]]],[1537877833418,["gjx16@GJXAIOU",[[-1,4960,"陪"]],[4961,4961],[4960,4960]]],[1537877840733,["gjx16@GJXAIOU",[[1,4960,"配的空间不够用"]],[4960,4960],[4967,4967]]],[1537877905781,["gjx16@GJXAIOU",[[1,4967,"，需需要"]],[4967,4967],[4971,4971]]],[1537877906499,["gjx16@GJXAIOU",[[-1,4969,"需要"]],[4971,4971],[4969,4969]]],[1537877920862,["gjx16@GJXAIOU",[[1,4969,"要划分出一块新的额内存空"]],[4969,4969],[4981,4981]]],[1537877922150,["gjx16@GJXAIOU",[[-1,4977,"额内存空"]],[4981,4981],[4977,4977]]],[1537877925796,["gjx16@GJXAIOU",[[1,4977,"内存空间，"]],[4977,4977],[4982,4982]]],[1537877958146,["gjx16@GJXAIOU",[[1,4982,"要求是这块内存空间和原来已划分的空间是联系"]],[4982,4982],[5003,5003]]],[1537877958736,["gjx16@GJXAIOU",[[-1,5001,"联系"]],[5003,5003],[5001,5001]]],[1537877962993,["gjx16@GJXAIOU",[[1,5001,"连续的；"]],[5001,5001],[5005,5005]]],[1537877963402,["gjx16@GJXAIOU",[[1,5010,"\n"]],[5005,5005],[5006,5006]]],[1537877965405,["gjx16@GJXAIOU",[[1,5006,"```"]],[5006,5006],[5009,5009]]],[1537877965443,["gjx16@GJXAIOU",[[1,5009,"language\n```\n"]],[5009,5009],[5009,5017]]],[1537877966282,["gjx16@GJXAIOU",[[-1,5009,"language"],[1,5017,"c"]],[5009,5017],[5010,5010]]],[1537877966496,["gjx16@GJXAIOU",[[1,5011,"\n"]],[5010,5010],[5011,5011]]],[1537877967775,["gjx16@GJXAIOU",[[1,5011,"#"]],[5011,5011],[5012,5012]]],[1537877975072,["gjx16@GJXAIOU",[[1,5012,"include<stdio.h>"],[1,5013,"#include<stdlib.h>\n#include<string.h>\n\nint main()\n{\n  char *p = calloc(10,sizeof(char));//分配10个大小为sizeof（char）的空间，并且自动全部置零\n  int i = 0;\n  for(i = 0; i < 10; i++)\n  {\n    printf(\"%d\\n\",p[i]);\n  }\n  return 0;\n  free(p);\n}"]],[5011,5013],[5248,5248]]],[1537877979894,["gjx16@GJXAIOU",[[1,5248,"\n"]],[5248,5248],[5249,5249]]],[1537877989585,["gjx16@GJXAIOU",[[-1,5117,"//分配10个大小为sizeof（char）的空间，并且自动全部置零"]],[5117,5151],[5117,5117]]],[1537877990729,["gjx16@GJXAIOU",[[1,5117,"/"]],[5117,5117],[5118,5118]]],[1537877992219,["gjx16@GJXAIOU",[[1,5119,"zhe"]],[5119,5119],[5122,5122]]],[1537877992798,["gjx16@GJXAIOU",[[-1,5119,"zhe"]],[5122,5122],[5119,5119]]],[1537877996404,["gjx16@GJXAIOU",[[1,5119,"这10 "]],[5119,5119],[5123,5123]]],[1537877997090,["gjx16@GJXAIOU",[[-1,5122," "]],[5123,5123],[5122,5122]]],[1537878007394,["gjx16@GJXAIOU",[[1,5122,"个空间是置零了的"]],[5122,5122],[5130,5130]]],[1537878019793,["gjx16@GJXAIOU",[[1,5133,"\n  "]],[5130,5130],[5133,5133]]],[1537878029302,["gjx16@GJXAIOU",[[1,5133,"char *[1"]],[5133,5133],[5141,5141]]],[1537878029986,["gjx16@GJXAIOU",[[-1,5139,"[1"]],[5141,5141],[5139,5139]]],[1537878035832,["gjx16@GJXAIOU",[[1,5139,"p1 = recallox"]],[5139,5139],[5152,5152]]],[1537878036595,["gjx16@GJXAIOU",[[-1,5151,"x"]],[5152,5152],[5151,5151]]],[1537878036855,["gjx16@GJXAIOU",[[1,5151,"c"]],[5151,5151],[5152,5152]]],[1537878043281,["gjx16@GJXAIOU",[[-1,5146,"calloc"]],[5152,5152],[5146,5146]]],[1537878048356,["gjx16@GJXAIOU",[[1,5146,"alloc()"]],[5146,5146],[5153,5153]]],[1537878110889,[null,[[-1,5118,"\n"],[1,5119,"/"],[1,5130,"\n"],[-1,5132,"i"],[1,5156,"i"]],[5118,5118],[5157,5157]]],[1537878110889,[null,[[1,5118,"\n"],[-1,5118,"/"],[-1,5130,"\n"],[1,5133,"i"],[-1,5156,"i"]],[5157,5157],[5118,5118]]],[1537878054641,["gjx16@GJXAIOU",[[1,5152,"p,20"]],[5152,5152],[5156,5156]]],[1537878093435,["gjx16@GJXAIOU",[[1,5157,";//参数含义：需要扩展的空间名，需要扩展口"]],[5157,5157],[5179,5179]]],[1537878094105,["gjx16@GJXAIOU",[[-1,5178,"口"]],[5179,5179],[5178,5178]]],[1537878102953,["gjx16@GJXAIOU",[[1,5178,"后的空间为10个"]],[5178,5178],[5186,5186]]],[1537878104641,["gjx16@GJXAIOU",[[-1,5183,"10个"]],[5186,5186],[5183,5183]]],[1537878108192,["gjx16@GJXAIOU",[[1,5183,"20个字节"]],[5183,5183],[5188,5188]]],[1537878109242,["gjx16@GJXAIOU",[[1,5191,"\n  "]],[5188,5188],[5191,5191]]],[1537878109993,["gjx16@GJXAIOU",[[-1,5189,"  "],[1,5191,"\n"]],[5191,5191],[5190,5190]]],[1537878170953,[null,[[-1,5118,"\n"],[1,5119,"/"],[1,5130,"\n"],[-1,5132,"i"],[1,5193,"i"]],[5118,5118],[5194,5194]]],[1537878170953,[null,[[1,5118,"\n"],[-1,5118,"/"],[-1,5130,"\n"],[1,5133,"i"],[-1,5193,"i"]],[5194,5194],[5118,5118]]],[1537878121684,["gjx16@GJXAIOU",[[1,5158,"\n  "]],[5158,5158],[5161,5161]]],[1537878124690,["gjx16@GJXAIOU",[[1,5192,"  \n"]],[5191,5191],[5194,5194]]],[1537878125935,["gjx16@GJXAIOU",[[1,5194,"、、"]],[5194,5194],[5196,5196]]],[1537878126916,["gjx16@GJXAIOU",[[-1,5194,"、、"]],[5196,5196],[5194,5194]]],[1537878128528,["gjx16@GJXAIOU",[[1,5194,"//y"]],[5194,5194],[5197,5197]]],[1537878129089,["gjx16@GJXAIOU",[[-1,5196,"y"]],[5197,5197],[5196,5196]]],[1537878132045,["gjx16@GJXAIOU",[[1,5196,"语句含义；"]],[5196,5196],[5201,5201]]],[1537878133075,["gjx16@GJXAIOU",[[-1,5200,"；"]],[5201,5201],[5200,5200]]],[1537878140867,["gjx16@GJXAIOU",[[1,5200,"：如果原油"]],[5200,5200],[5205,5205]]],[1537878141433,["gjx16@GJXAIOU",[[-1,5203,"原油"]],[5205,5205],[5203,5203]]],[1537878146972,["gjx16@GJXAIOU",[[1,5203,"原有的空间"]],[5203,5203],[5208,5208]]],[1537878149816,["gjx16@GJXAIOU",[[-1,5206,"空间"]],[5208,5208],[5206,5206]]],[1537878170808,["gjx16@GJXAIOU",[[1,5206,"内存没有连续的空间可拓展，那么会分配一个"]],[5206,5206],[5226,5226]]],[1537878230949,[null,[[-1,5118,"\n"],[1,5119,"/"],[1,5130,"\n"],[-1,5132,"i"],[1,5231,"i"]],[5118,5118],[5232,5232]]],[1537878230949,[null,[[1,5118,"\n"],[-1,5118,"/"],[-1,5130,"\n"],[1,5133,"i"],[-1,5231,"i"]],[5232,5232],[5118,5118]]],[1537878201264,["gjx16@GJXAIOU",[[1,5226,"空间，将原有的内存copy到新空间就，"]],[5226,5226],[5245,5245]]],[1537878201862,["gjx16@GJXAIOU",[[-1,5243,"就，"]],[5245,5245],[5243,5243]]],[1537878208395,["gjx16@GJXAIOU",[[1,5243,"，然后释放"]],[5243,5243],[5248,5248]]],[1537878229894,["gjx16@GJXAIOU",[[1,5201,"在原有内存基础之上，在"]],[5201,5201],[5212,5212]]],[1537878290954,[null,[[-1,5118,"\n"],[1,5119,"/"],[1,5130,"\n"],[-1,5132,"i"],[1,5264,"i"]],[5118,5118],[5265,5265]]],[1537878290954,[null,[[1,5118,"\n"],[-1,5118,"/"],[-1,5130,"\n"],[1,5133,"i"],[-1,5264,"i"]],[5265,5265],[5118,5118]]],[1537878239701,["gjx16@GJXAIOU",[[1,5212,"堆中间增加连续的内存；"]],[5212,5212],[5223,5223]]],[1537878244970,["gjx16@GJXAIOU",[[1,5271,"  \n"]],[5270,5270],[5273,5273]]],[1537878245702,["gjx16@GJXAIOU",[[1,5273,"、、"]],[5273,5273],[5275,5275]]],[1537878247157,["gjx16@GJXAIOU",[[-1,5273,"、、"]],[5275,5275],[5273,5273]]],[1537878268748,["gjx16@GJXAIOU",[[1,5273,"//新开辟的这10个字节孔家"]],[5273,5273],[5287,5287]]],[1537878269499,["gjx16@GJXAIOU",[[-1,5285,"孔家"]],[5287,5287],[5285,5285]]],[1537878276860,["gjx16@GJXAIOU",[[1,5285,"空间是没有置零的"]],[5285,5285],[5293,5293]]],[1537878283197,["gjx16@GJXAIOU",[[-1,5295,"\n"]],[5295,5295],[5294,5294]]],[1537878287508,["gjx16@GJXAIOU",[[-1,5325,"10"]],[5327,5327],[5325,5325]]],[1537878288406,["gjx16@GJXAIOU",[[1,5325,"20"]],[5325,5325],[5327,5327]]],[1537878350947,[null,[[-1,5118,"\n"],[1,5119,"/"],[1,5130,"\n"],[-1,5132,"i"],[1,5297,"i"],[-1,5324,"1"],[1,5327,";"]],[5118,5118],[5328,5328]]],[1537878350947,[null,[[1,5118,"\n"],[-1,5118,"/"],[-1,5130,"\n"],[1,5133,"i"],[-1,5297,"i"],[1,5325,"1"],[-1,5327,";"]],[5328,5328],[5118,5118]]],[1537878299278,["gjx16@GJXAIOU",[[1,5387,"1"]],[5387,5387],[5388,5388]]],[1537878301045,["gjx16@GJXAIOU",[[1,5390,"  、、"]],[5390,5390],[5394,5394]]],[1537878301937,["gjx16@GJXAIOU",[[-1,5392,"、、"]],[5394,5394],[5392,5392]]],[1537878309126,["gjx16@GJXAIOU",[[1,5392,"//这里释放的是p1"]],[5392,5392],[5402,5402]]],[1537878410959,[null,[[-1,5118,"\n"],[1,5119,"/"],[1,5130,"\n"],[-1,5132,"i"],[1,5297,"i"],[-1,5324,"1"],[1,5327,";"],[-1,5386,")"],[1,5388,")"],[-1,5389,"\n"],[1,5402,"\n"]],[5118,5118],[5403,5403]]],[1537878410959,[null,[[1,5118,"\n"],[-1,5118,"/"],[-1,5130,"\n"],[1,5133,"i"],[-1,5297,"i"],[1,5325,"1"],[-1,5327,";"],[1,5387,")"],[-1,5388,")"],[1,5390,"\n"],[-1,5402,"\n"]],[5403,5403],[5118,5118]]],[1537878354466,["gjx16@GJXAIOU",[[1,5357,"1"]],[5357,5357],[5358,5358]]],[1537878360112,["gjx16@GJXAIOU",[[1,5363," //zhe"]],[5363,5363],[5369,5369]]],[1537878360878,["gjx16@GJXAIOU",[[-1,5366,"zhe"]],[5369,5369],[5366,5366]]],[1537878369669,["gjx16@GJXAIOU",[[1,5366,"这里的p也需要改为p1"]],[5366,5366],[5377,5377]]],[1537878374159,["gjx16@GJXAIOU",[[1,5333,"、、"]],[5333,5333],[5335,5335]]],[1537878375964,["gjx16@GJXAIOU",[[-1,5333,"、、"]],[5335,5335],[5333,5333]]],[1537878376894,["gjx16@GJXAIOU",[[1,5333,"//"]],[5333,5333],[5335,5335]]],[1537878380844,["gjx16@GJXAIOU",[[-1,5333,"//"]],[5335,5335],[5333,5333]]],[1537878389951,["gjx16@GJXAIOU",[[1,5425,"```"]],[5425,5425],[5428,5428]]],[1537878389991,["gjx16@GJXAIOU",[[1,5428,"language\n```\n"]],[5428,5428],[5428,5436]]],[1537878390989,["gjx16@GJXAIOU",[[-1,5428,"language"],[1,5436,"c"]],[5428,5436],[5429,5429]]],[1537878391454,["gjx16@GJXAIOU",[[1,5430,"\n"]],[5429,5429],[5430,5430]]],[1537878392387,["gjx16@GJXAIOU",[[1,5430,"#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n\nint main()\n{\n  char *p = calloc(10,sizeof(char));//这10个空间是置零了的\n  char *p1 = realloc(p,20);\n  //参数含义：需要扩展的空间名，需要扩展后的空间为20个字节\n  //语句含义：在原有内存基础之上，在堆中间增加连续的内存；如果原有的内存没有连续的空间可拓展，那么会分配一个空间，将原有的内存copy到新空间，然后释放\n  //新开辟的这10个字节空间是没有置零的\n\n  int i = 0;\n  for(i = 0; i < 20; i++)\n  {\n    printf(\"%d\\n\",p1[i]); //这里的p也需要改为p1\n  }\n  return 0;\n  free(p1);  //这里释放的是p1\n}"]],[5430,5430],[5838,5838]]],[1537878394446,["gjx16@GJXAIOU",[[1,5425,"\n"]],[5424,5424],[5425,5425]]],[1537878396968,["gjx16@GJXAIOU",[[1,5425,"dagn"]],[5425,5425],[5429,5429]]],[1537878397827,["gjx16@GJXAIOU",[[-1,5425,"dagn"]],[5429,5429],[5425,5425]]],[1537878404414,["gjx16@GJXAIOU",[[1,5425,"当要较少"]],[5425,5425],[5429,5429]]],[1537878405782,["gjx16@GJXAIOU",[[-1,5427,"较少"]],[5429,5429],[5427,5427]]],[1537878409534,["gjx16@GJXAIOU",[[1,5427,"减少原来"]],[5427,5427],[5431,5431]]],[1537878470954,[null,[[-1,5118,"\n"],[1,5119,"/"],[1,5130,"\n"],[-1,5132,"i"],[1,5297,"i"],[-1,5324,"1"],[1,5327,";"],[-1,5356,"["],[1,5358,"["],[-1,5362,"\n"],[1,5377,"\n"],[-1,5401,")"],[1,5403,")"],[-1,5404,"\n"],[1,5417,"\n"],[-1,5422,"\n"],[1,5849,"\n"]],[5118,5118],[5850,5850]]],[1537878470954,[null,[[1,5118,"\n"],[-1,5118,"/"],[-1,5130,"\n"],[1,5133,"i"],[-1,5297,"i"],[1,5325,"1"],[-1,5327,";"],[1,5357,"["],[-1,5358,"["],[1,5363,"\n"],[-1,5377,"\n"],[1,5402,")"],[-1,5403,")"],[1,5405,"\n"],[-1,5417,"\n"],[1,5423,"\n"],[-1,5849,"\n"]],[5850,5850],[5118,5118]]],[1537878415647,["gjx16@GJXAIOU",[[1,5431,"已划分的孔家"]],[5431,5431],[5437,5437]]],[1537878416871,["gjx16@GJXAIOU",[[-1,5435,"孔家"]],[5437,5437],[5435,5435]]],[1537878421706,["gjx16@GJXAIOU",[[1,5435,"空间的时候"]],[5435,5435],[5440,5440]]],[1537878429007,["gjx16@GJXAIOU",[[-1,5589,"20"]],[5591,5591],[5589,5589]]],[1537878429364,["gjx16@GJXAIOU",[[1,5589,"5"]],[5589,5589],[5590,5590]]],[1537878433711,["gjx16@GJXAIOU",[[-1,5595,"//参数含义：需要扩展的空间名，需要扩展后的空间为20个字节\n  //语句含义：在原有内存基础之上，在堆中间增加连续的内存；如果原有的内存没有连续的空间可拓展，那么会分配一个空间，将原有的内存copy到新空间，然后释放\n  //新开辟的这10个字节空间是没有置零的"]],[5595,5727],[5595,5595]]],[1537878436604,["gjx16@GJXAIOU",[[-1,5596,"\n"]],[5596,5596],[5595,5595]]],[1537878442470,["gjx16@GJXAIOU",[[-1,5626,"20"]],[5628,5628],[5626,5626]]],[1537878443109,["gjx16@GJXAIOU",[[1,5626,"5"]],[5626,5626],[5627,5627]]],[1537878530955,[null,[[-1,5118,"\n"],[1,5119,"/"],[1,5130,"\n"],[-1,5132,"i"],[1,5297,"i"],[-1,5324,"1"],[1,5327,";"],[-1,5356,"["],[1,5358,"["],[-1,5362,"\n"],[1,5377,"\n"],[-1,5401,")"],[1,5403,")"],[-1,5404,"\n"],[1,5417,"\n"],[-1,5424,"\n"],[-1,5723,""],[1,5723,"\n"]],[5118,5118],[5724,5724]]],[1537878530955,[null,[[1,5118,"\n"],[-1,5118,"/"],[-1,5130,"\n"],[1,5133,"i"],[-1,5297,"i"],[1,5325,"1"],[-1,5327,";"],[1,5357,"["],[-1,5358,"["],[1,5363,"\n"],[-1,5377,"\n"],[1,5402,")"],[-1,5403,")"],[1,5405,"\n"],[-1,5417,"\n"],[1,5425,"\n"],[1,5723,""],[-1,5723,"\n"]],[5724,5724],[5118,5118]]],[1537878513087,["gjx16@GJXAIOU",[[1,5728,"\n"]],[5724,5724],[5725,5725]]],[1537878518224,["gjx16@GJXAIOU",[[1,5725,"当"]],[5725,5725],[5726,5726]]],[1537878590957,[null,[[-1,5118,"\n"],[1,5119,"/"],[1,5130,"\n"],[-1,5132,"i"],[1,5297,"i"],[-1,5324,"1"],[1,5327,";"],[-1,5356,"["],[1,5358,"["],[-1,5362,"\n"],[1,5377,"\n"],[-1,5401,")"],[1,5403,")"],[-1,5404,"\n"],[1,5417,"\n"],[-1,5424,"\n"],[-1,5726,""],[1,5726,"\n"]],[5118,5118],[5727,5727]]],[1537878590957,[null,[[1,5118,"\n"],[-1,5118,"/"],[-1,5130,"\n"],[1,5133,"i"],[-1,5297,"i"],[1,5325,"1"],[-1,5327,";"],[1,5357,"["],[-1,5358,"["],[1,5363,"\n"],[-1,5377,"\n"],[1,5402,")"],[-1,5403,")"],[1,5405,"\n"],[-1,5417,"\n"],[1,5425,"\n"],[1,5726,""],[-1,5726,"\n"]],[5727,5727],[5118,5118]]],[1537878530991,["gjx16@GJXAIOU",[[1,5726,"real"]],[5726,5726],[5730,5730]]],[1537878587040,["gjx16@GJXAIOU",[[-1,5725,"当real"]],[5730,5730],[5725,5725]]],[1537878588127,["gjx16@GJXAIOU",[[1,5725,"`"]],[5725,5725],[5726,5726]]],[1537878589007,["gjx16@GJXAIOU",[[-1,5725,"`"]],[5726,5726],[5725,5725]]],[1537878590093,["gjx16@GJXAIOU",[[1,5725,"d"]],[5725,5725],[5726,5726]]],[1537878650960,[null,[[-1,5118,"\n"],[1,5119,"/"],[1,5130,"\n"],[-1,5132,"i"],[1,5297,"i"],[-1,5324,"1"],[1,5327,";"],[-1,5356,"["],[1,5358,"["],[-1,5362,"\n"],[1,5377,"\n"],[-1,5401,")"],[1,5403,")"],[-1,5404,"\n"],[1,5417,"\n"],[-1,5424,"\n"],[-1,5726,""],[1,5726,"\n"]],[5118,5118],[5727,5727]]],[1537878650960,[null,[[1,5118,"\n"],[-1,5118,"/"],[-1,5130,"\n"],[1,5133,"i"],[-1,5297,"i"],[1,5325,"1"],[-1,5327,";"],[1,5357,"["],[-1,5358,"["],[1,5363,"\n"],[-1,5377,"\n"],[1,5402,")"],[-1,5403,")"],[1,5405,"\n"],[-1,5417,"\n"],[1,5425,"\n"],[1,5726,""],[-1,5726,"\n"]],[5727,5727],[5118,5118]]],[1537878591080,["gjx16@GJXAIOU",[[-1,5725,"d"]],[5726,5726],[5725,5725]]],[1537878602881,["gjx16@GJXAIOU",[[1,5725,"当`realloc`d"]],[5725,5725],[5736,5736]]],[1537878603731,["gjx16@GJXAIOU",[[-1,5734,"`d"]],[5736,5736],[5734,5734]]],[1537878629796,["gjx16@GJXAIOU",[[1,5734,"`的第一个参数为空的时候，即：`realloc`"]],[5734,5734],[5758,5758]]],[1537878630622,["gjx16@GJXAIOU",[[-1,5757,"`"]],[5758,5758],[5757,5757]]],[1537878632943,["gjx16@GJXAIOU",[[1,5757," ()"]],[5757,5757],[5760,5760]]],[1537878639577,["gjx16@GJXAIOU",[[1,5759,"NULL,5"]],[5759,5759],[5765,5765]]],[1537878647478,["gjx16@GJXAIOU",[[1,5766,"`deng"]],[5766,5766],[5771,5771]]],[1537878648616,["gjx16@GJXAIOU",[[-1,5767,"deng"]],[5771,5771],[5767,5767]]],[1537878710961,[null,[[-1,5118,"\n"],[1,5119,"/"],[1,5130,"\n"],[-1,5132,"i"],[1,5297,"i"],[-1,5324,"1"],[1,5327,";"],[-1,5356,"["],[1,5358,"["],[-1,5362,"\n"],[1,5377,"\n"],[-1,5401,")"],[1,5403,")"],[-1,5404,"\n"],[1,5417,"\n"],[-1,5422,"\n"],[1,5767,"\n"]],[5118,5118],[5768,5768]]],[1537878710961,[null,[[1,5118,"\n"],[-1,5118,"/"],[-1,5130,"\n"],[1,5133,"i"],[-1,5297,"i"],[1,5325,"1"],[-1,5327,";"],[1,5357,"["],[-1,5358,"["],[1,5363,"\n"],[-1,5377,"\n"],[1,5402,")"],[-1,5403,")"],[1,5405,"\n"],[-1,5417,"\n"],[1,5423,"\n"],[-1,5767,"\n"]],[5768,5768],[5118,5118]]],[1537878656127,["gjx16@GJXAIOU",[[1,5767,"等效于·"]],[5767,5767],[5771,5771]]],[1537878656963,["gjx16@GJXAIOU",[[-1,5770,"·"]],[5771,5771],[5770,5770]]],[1537878660733,["gjx16@GJXAIOU",[[1,5770,"`maoo"]],[5770,5770],[5775,5775]]],[1537878661528,["gjx16@GJXAIOU",[[-1,5773,"oo"]],[5775,5775],[5773,5773]]],[1537878664452,["gjx16@GJXAIOU",[[1,5773,"lloc()"]],[5773,5773],[5779,5779]]],[1537878666792,["gjx16@GJXAIOU",[[1,5778,"5"]],[5778,5778],[5779,5779]]],[1537878668830,["gjx16@GJXAIOU",[[1,5780,"`"]],[5780,5780],[5781,5781]]],[1537880330987,[null,[[-1,5118,"\n"],[1,5119,"/"],[1,5130,"\n"],[-1,5132,"i"],[1,5297,"i"],[-1,5324,"1"],[1,5327,";"],[-1,5356,"["],[1,5358,"["],[-1,5362,"\n"],[1,5377,"\n"],[-1,5401,")"],[1,5403,")"],[-1,5404,"\n"],[1,5417,"\n"],[-1,5422,"\n"],[1,5781,"\n"]],[5118,5118],[5782,5782]]],[1537880330987,[null,[[1,5118,"\n"],[-1,5118,"/"],[-1,5130,"\n"],[1,5133,"i"],[-1,5297,"i"],[1,5325,"1"],[-1,5327,";"],[1,5357,"["],[-1,5358,"["],[1,5363,"\n"],[-1,5377,"\n"],[1,5402,")"],[-1,5403,")"],[1,5405,"\n"],[-1,5417,"\n"],[1,5423,"\n"],[-1,5781,"\n"]],[5782,5782],[5118,5118]]],[1537880327934,["gjx16@GJXAIOU",[[1,4956,"- \n"]],[4955,4955],[4958,4958]]],[1537880329634,["gjx16@GJXAIOU",[[-1,4956,"- "]],[4958,4958],[4956,4956]]],[1537880390976,[null,[[-1,5119,"\n"],[1,5120,"/"],[1,5131,"\n"],[-1,5133,"i"],[1,5298,"i"],[-1,5325,"1"],[1,5328,";"],[-1,5357,"["],[1,5359,"["],[-1,5363,"\n"],[1,5378,"\n"],[-1,5402,")"],[1,5404,")"],[-1,5405,"\n"],[1,5418,"\n"],[-1,5423,"\n"],[1,5782,"\n"]],[5119,5119],[5783,5783]]],[1537880390976,[null,[[1,5119,"\n"],[-1,5119,"/"],[-1,5131,"\n"],[1,5134,"i"],[-1,5298,"i"],[1,5326,"1"],[-1,5328,";"],[1,5358,"["],[-1,5359,"["],[1,5364,"\n"],[-1,5378,"\n"],[1,5403,")"],[-1,5404,")"],[1,5406,"\n"],[-1,5418,"\n"],[1,5424,"\n"],[-1,5782,"\n"]],[5783,5783],[5119,5119]]],[1537880336055,["gjx16@GJXAIOU",[[1,4948,"**"],[1,4955,"**"]],[4948,4955],[4948,4959]]],[1537880343611,["gjx16@GJXAIOU",[[1,4690,"**"],[1,4696,"**"]],[4690,4696],[4690,4700]]],[1537880348681,["gjx16@GJXAIOU",[[1,4415,"**"],[1,4421,"**"]],[4415,4421],[4415,4425]]]],null,"gjx16@GJXAIOU"],["22ee195c-f328-4607-b67d-c48473439f23",1537960317311,"# day10 内存管理\n\n## 变量作用域\n全局变量和局部变量\n\n一个C语言变量的作用域可以是代码块，作用域就是函数作用域或者文件作用域\n代码块：{}之间的一段代码；\n\n**文件作用域：**\n\n如果一个变量在其他的代码文件中已经定义了，可以在本程序中使用，但是使用前要使用关键字：extern\n例如：`extern int age` //有一个int型变量age已经在其他文件中定义了，这里就直接使用了；\n\n\n**auto自动变量**\n\nC语言中默认中都是auto，不需要关注它在内存中什么时候消失和出现\n`auto int i = 0;`等效于`int i = 0;`\n**register变量**\n`register int i = 0;`  //建议，如果有寄存器空闲的话，就将这个变量放进寄存器中使用，可以加快读取\n\n但是`int *p = &i`//这个语句就会报错，因为放在寄存器中就没有地址了\n\n\n**动态变量和静态变量**\n\n- 动态变量 \n\n```c\n#include<stdio.h>\n\nvoid myauto()\n{\n  int a = 0;\n  printf(\"a = %d\\n\",a);\n  a++;\n}\n\n\nint main()\n{\n  int i;\n  for(i = 0; i < 10; i++)\n  {\n    myatuo();\n \n  }\n\n}\n```\n\n程序的输出结果为  a = 0\n                            a = 0\n                            a = 0\n                            a = 0\n                            a = 0\n                            a = 0\n                            a = 0\n                            a = 0\n                            a = 0\n                            a = 0\n\n- 静态变量\n首先只要整个程序开始执行之后，静态变量是一直存在的，不消失的；\n其次，静态变量值初始化一次，即`static int a = 0;`语句只执行一次\n```c\n#include<stdio.h>\n\nvoid mystatic()\n{\n  static int a = 0;\n  printf(\"a = %d\\n\",a);\n  a++;\n\n}\n\nint main()\n{\n  int i = 0;\n  for(i = 0; i < 10; i++)\n  {\n    mystatic();\n  }\n}\n```\n程序运行结果为：a = 0\n                          a = 1\n                          a = 2\n                          a = 3\n                          a = 4\n                          a = 5\n                          a = 6\n                          a = 7\n                          a = 8\n                          a = 9\n\n\n**变量和函数是否使用extern的区别**\n\n- 变量 \n  - extern int age;\n  - int age;    //这包含两个含义：声明一个变量或者定义一个变量\n- 函数（下面两个没有什么区别）\n  - extern void age()\n  - void age()     \n\n\n## 内存四区简介\n\n![内存四区图示]($resource/%E5%86%85%E5%AD%98%E5%9B%9B%E5%8C%BA%E5%9B%BE%E7%A4%BA.png)\n\n### 1.代码区\n\n存放可执行的代码；程序被操作系统加载到内存中时候，所有可执行的代码都加载到代码区，==这块内存是不可以在运行期间修改的====；\n\n\n\n### 2.静态区\n\n存放所有的==静态变量/常量和全局变量/常量==\n\n### 3.栈区  \n\n栈区是一种先进后出的内存结构，所有的==自动变量、指针，数组、函数的形参==都是由编译器自动放出栈中，当一个自动变量超出其作用域的时候，自动从栈中弹出；\n\n对于自动变量，什么时候入栈和出栈都是系统自动控制的\n\n栈区的大小是可以动态设置的，不过不会特别大，一般大小为XX k，\n\nC语言中函数的参数变量是从右往左入栈的，也就是最右边的参数是最先入栈的\n![栈的图示]($resource/%E6%A0%88%E7%9A%84%E5%9B%BE%E7%A4%BA.png)\n\n**栈溢出**\n当栈空间已满，但是还往栈内存中压变量，这就是栈溢出；\n\n\n### 4.堆区\n\n堆和栈一样，是一种在程序运行过程中可以随时修改的内存区域，但是==没有栈那样的先进后出的顺序==，是一个大容器，容量远远大于栈，==堆内存空间的申请和释放需要手工通过代码来完成==；\n\n分配堆的方法：\n```c\n#include<stdio.h>\n#include<stdlib.h>   //需要加一个头文件\n\nint main()\n{\n    int *p = malloc(sizeof(int)*10);  //语句含义为：在堆中间申请内存，函数的返回值为无类型的指针，参数为size_t无符号的整数   ，现在这个语句的含义是：申请一个内存大小为10个int大小的空间。指针p指向分配出来的堆的地址；\n\n    memset(p ,0,sizeof(int) * 10);  //将分配的这个空间置零初始化\n    free(p);//释放通过malloc分配的堆内存free(p);//释放通过malloc分配的堆内存\n\n}\n```\n\n\n**堆和栈的区别**\n\n```c\n#include<stdio.h>\n#include<stdlib.h>\n\nvoid *geta()   //这是错误的，不能将一个栈变量的地址通过函数的返回值返回\n{\n  int a = 0;\n  return &a;\n}\n\n\nvoid *geta1() //可以通过函数的返回值返回一个堆地址，但是一定要free\n{\n  int  *p = malloc(sizeof(int)); //申请了一个堆空间\n  return p;  //返回值为p 即是分配的堆空间的地址\n}\n\n\n\nvoid *gata2()   //这也是合法的，只要将main函数中的geta1改为geta2,然后将free(getp)去掉即可\n{\n  static int a = 0;  //使用static即使a为静态变量，存在于静态区，会一直存在不会被释放\n  return &a;\n}\n\n\n\n\nint main()\n\n{\n  int *getp = geta1();\n  *getp = 100;\n  free(getp);   //getp指向了划分的堆区域，因此释放即可\n}\n\n\n```\n\n**理解下面程序**\n~~这个程序本质上有错误，具体的修改见下面的一个程序~~\n```c\n#include<stdio.h>\n#include<stdlib.h>\n\nvoid getheap(int  *a)\n{\n  a = malloc(sizeof(int) * 10);\n}\n\nint main()\n{\n  int *p =NULL;\n  gatheap(p);  //实参没有任何改变，相当于这里的p一直没有任何改变\n\n  p[0] = 1;\n  p[1] = 2;\n  printf(\"p[0] = %d ,p[1] = %d\\n\",p[0],p[1]);\n  free(p);\n}\n```\n\n![函数图形化解析]($resource/%E5%87%BD%E6%95%B0%E5%9B%BE%E5%BD%A2%E5%8C%96%E8%A7%A3%E6%9E%90.png)\n\n从这程序中可以看出：也就是说a的值改了，a本身是在栈里面的，它只是指向堆里面的一个空间地址；然后实参p的值一直没有变化\ngetheap在执行完之后，a就消失了，导致他指向的具体堆空间的地址编号也随之消失了；\n\n**修改**\n\n```c\n#include<stdio.h>\n#include<stdlib.h>\n\nvoid  getheap(int  **a)\n  {\n     *a  =  malloc(sizeof(int) * 10);  //这里的*a就是指针p中的值了，\n  }\n\n/*\n  int **a = &p;等价于\n  int **a;\n  a = &p\n\n*/\n\n\n\nint  main()\n{\n  int  *p  =NULL;\n  getheap(&p);  //传递的是P的地址\n  p[0]  =  1;\n  p[1]  =  2;\n  printf(\"p[0]  =  %d  ,p[1]  =  %d\\n\",p[0],p[1]);\n  free(p);\n  return  0;\n\n}\n```\n\n程序的分析图片：\n\n![堆和栈地址]($resource/%E5%A0%86%E5%92%8C%E6%A0%88%E5%9C%B0%E5%9D%80.png)\n\n\n\n### 内存模型详解以及Linux系统堆内存大小的分析\n\n**栈和堆的比较**\n\n- 栈(stack)\n - 明确知道数据占用多好内存\n - 数据很少 \n - 变量离开作用范围后，栈上的数据会自动释放\n - 栈的最大尺寸固定，超过则引起栈溢出\n  \n- 堆(heap)\n  - 需要大量内存的时候\n  - 不知道需要多少内存 \n\n```c\n//在堆中可以建立一个动态的数组\n\n#include<stdio.h>\n\nint main()\n{\n\n  int i ;\n  scanf(\"%d\",&i);\n  int *array = malloc(sizeof(int) * i);\n  free(array);\n\n\n}\n```\n\n**堆的分配和释放**\n\n内存的最小单位是字节，但是操作系统在管理内存的时候，最小的单位是内存页（32位操作系统中每一页为4k ）\n\n**malloc和calloc和**\n\n- **malloc**\n```c\n#include<stdio.h>\n#include<stdio.h>\nint main()\n{\n  char *p = malloc(10);//分配一个10个字节的空间,但是这10个空间没有清理过，所以每次使用可能都是10个随机数\n\n  memset(p,0,10); //这里含义是将p 中的10个元素全部置零\n  int i = 0;\n  for(i = 0; i < 10; i++)\n  {\n    printf(\"%d\\n\",p[i]);\n  }\n  free(p);\n  return 0;\n}\n```\n\n- **calloc**\n\n```c\n#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n\nint main()\n{\n  char *p = calloc(10,sizeof(char));//分配10个大小为sizeof（char）的空间，并且自动全部置零\n  int i = 0;\n  for(i = 0; i < 10; i++)\n  {\n    printf(\"%d\\n\",p[i]);\n  }\n  return 0;\n  free(p);\n}\n```\n\n- **realloc**\n\n如果已分配的空间不够用，需要划分出一块新的内存空间，要求是这块内存空间和原来已划分的空间是连续的；\n```c\n#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n\nint main()\n{\n  char *p = calloc(10,sizeof(char));//这10个空间是置零了的\n  char *p1 = realloc(p,20);\n  //参数含义：需要扩展的空间名，需要扩展后的空间为20个字节\n  //语句含义：在原有内存基础之上，在堆中间增加连续的内存；如果原有的内存没有连续的空间可拓展，那么会分配一个空间，将原有的内存copy到新空间，然后释放\n  //新开辟的这10个字节空间是没有置零的\n\n  int i = 0;\n  for(i = 0; i < 20; i++)\n  {\n    printf(\"%d\\n\",p1[i]); //这里的p也需要改为p1\n  }\n  return 0;\n  free(p1);  //这里释放的是p1\n}\n```\n\n当要减少原来已划分的空间的时候\n```c\n#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n\nint main()\n{\n  char *p = calloc(10,sizeof(char));//这10个空间是置零了的\n  char *p1 = realloc(p,5);\n  \n  int i = 0;\n  for(i = 0; i < 5; i++)\n  {\n    printf(\"%d\\n\",p1[i]); //这里的p也需要改为p1\n  }\n  return 0;\n  free(p1);  //这里释放的是p1\n}\n```\n\n当`realloc`的第一个参数为空的时候，即：`realloc (NULL,5)`等效于`malloc(5)`\n\n\n\n",[[1537960314101,["gjx16@GJXAIOU",[[1,13,"@"]],[13,13],[14,14]]],[1537960318184,["gjx16@GJXAIOU",[[1,18,"\n"]],[17,17],[18,18]]],[1537960323789,["gjx16@GJXAIOU",[[1,19,"\n"]],[18,18],[19,19]]],[1537960326813,["gjx16@GJXAIOU",[[1,23,"yi"]],[23,23],[25,25]]],[1537960328126,["gjx16@GJXAIOU",[[-1,23,"yi"]],[25,25],[23,23]]],[1537960337503,["gjx16@GJXAIOU",[[1,23,"一、"]],[23,23],[25,25]]],[1537960341447,["gjx16@GJXAIOU",[[1,31,"\n"]],[30,30],[31,31]]],[1537960352198,["gjx16@GJXAIOU",[[1,97,"1."]],[97,97],[99,99]]],[1537960367670,["gjx16@GJXAIOU",[[1,219,"2."]],[219,219],[221,221]]],[1537960617192,[null,[[1,14,"toc\n\n"],[-1,18,"\n\n"],[1,20,"一、"],[-1,23,"一、"],[1,27,"\n"],[-1,31,"\n"],[1,94,"1."],[-1,97,"1."],[1,216,"2."],[-1,219,"2."]],[14,14],[219,219]]],[1537960617192,[null,[[-1,14,"toc\n\n"],[1,23,"\n\n"],[-1,23,"一、"],[1,28,"一、"],[-1,30,"\n"],[1,35,"\n"],[-1,97,"1."],[1,102,"1."],[-1,219,"2."],[1,224,"2."]],[219,219],[14,14]]],[1537960602274,["gjx16@GJXAIOU",[[1,300,"\n"]],[299,299],[300,300]]],[1537960606090,["gjx16@GJXAIOU",[[1,303,"3."]],[303,303],[305,305]]],[1537960610662,["gjx16@GJXAIOU",[[1,216,"---"]],[216,216],[219,219]]],[1537960611048,["gjx16@GJXAIOU",[[1,220,"\n"]],[219,219],[220,220]]],[1537960616416,["gjx16@GJXAIOU",[[1,305,"\n"]],[304,304],[305,305]]],[1537960617049,["gjx16@GJXAIOU",[[1,305,"----"]],[305,305],[309,309]]],[1537960677194,[null,[[1,14,"toc\n\n"],[-1,18,"\n\n"],[1,20,"一、"],[-1,23,"一、"],[1,27,"\n"],[-1,31,"\n"],[1,94,"1."],[-1,97,"1."],[-1,213,"\n**"],[-1,219,"a\nut"],[1,223,"\n\n**"],[1,225,"aut"],[-1,301,"**r"],[1,304,""],[1,310,"**3.r"],[-1,312,"3."]],[14,14],[312,312]]],[1537960677194,[null,[[-1,14,"toc\n\n"],[1,23,"\n\n"],[-1,23,"一、"],[1,28,"一、"],[-1,30,"\n"],[1,35,"\n"],[-1,97,"1."],[1,102,"1."],[1,216,"\n**"],[1,219,"a\nut"],[-1,219,"\n\n**"],[-1,225,"aut"],[1,304,"**r"],[-1,304,""],[-1,310,"**3.r"],[1,317,"3."]],[312,312],[14,14]]],[1537960618054,["gjx16@GJXAIOU",[[1,310,"\n"]],[309,309],[310,310]]],[1537960623560,["gjx16@GJXAIOU",[[1,433,"\n"]],[431,431],[432,432]]],[1537960624267,["gjx16@GJXAIOU",[[1,432,"---"]],[432,432],[435,435]]],[1537960797196,[null,[[1,14,"toc\n\n"],[-1,18,"\n\n"],[1,20,"一、"],[-1,23,"一、"],[1,27,"\n"],[-1,31,"\n"],[1,94,"1."],[-1,97,"1."],[-1,213,"\n**"],[-1,219,"a\nut"],[1,223,"\n\n**"],[1,225,"aut"],[-1,301,"**r"],[1,304,""],[1,311,"**3.r"],[-1,313,"3."],[-1,429,"\n**"],[-1,435,"动"],[1,437,"\n**动"]],[14,14],[441,441]]],[1537960797196,[null,[[-1,14,"toc\n\n"],[1,23,"\n\n"],[-1,23,"一、"],[1,28,"一、"],[-1,30,"\n"],[1,35,"\n"],[-1,97,"1."],[1,102,"1."],[1,216,"\n**"],[1,219,"a\nut"],[-1,219,"\n\n**"],[-1,225,"aut"],[1,304,"**r"],[-1,304,""],[-1,311,"**3.r"],[1,318,"3."],[1,432,"\n**"],[1,435,"动"],[-1,436,"\n**动"]],[441,441],[14,14]]],[1537960773933,["gjx16@GJXAIOU",[[1,439,"4."]],[439,439],[441,441]]],[1537960781534,["gjx16@GJXAIOU",[[1,641,"\n"]],[641,641],[642,642]]],[1537960794595,["gjx16@GJXAIOU",[[-1,590,"10"]],[592,592],[590,590]]],[1537960795584,["gjx16@GJXAIOU",[[1,590,"5"]],[590,590],[591,591]]],[1537960857196,[null,[[1,14,"toc\n\n"],[-1,18,"\n\n"],[1,20,"一、"],[-1,23,"一、"],[1,27,"\n"],[-1,31,"\n"],[1,94,"1."],[-1,97,"1."],[-1,213,"\n**"],[-1,219,"a\nut"],[1,223,"\n\n**"],[1,225,"aut"],[-1,301,"**r"],[1,304,""],[1,311,"**3.r"],[-1,313,"3."],[-1,429,"\n**"],[-1,435,"动\n态变"],[1,439,"\n\n**"],[1,441,"动态变"],[-1,587,"10;"],[1,591,"; i"],[1,637,"\n"],[-1,640,"\n"]],[14,14],[640,640]]],[1537960857196,[null,[[-1,14,"toc\n\n"],[1,23,"\n\n"],[-1,23,"一、"],[1,28,"一、"],[-1,30,"\n"],[1,35,"\n"],[-1,97,"1."],[1,102,"1."],[1,216,"\n**"],[1,219,"a\nut"],[-1,219,"\n\n**"],[-1,225,"aut"],[1,304,"**r"],[-1,304,""],[-1,311,"**3.r"],[1,318,"3."],[1,432,"\n**"],[1,435,"动\n态变"],[-1,435,"\n\n**"],[-1,441,"动态变"],[1,590,"10;"],[-1,591,"; i"],[-1,640,"\n"],[1,644,"\n"]],[640,640],[14,14]]],[1537960801157,["gjx16@GJXAIOU",[[-1,809,"  a = 0\n                            a = 0\n                            a = 0\n                            a = 0\n                            a = 0"]],[809,952],[809,809]]],[1537960803103,["gjx16@GJXAIOU",[[-1,672,"   "]],[674,674],[671,671]]],[1537960807132,["gjx16@GJXAIOU",[[-1,647,"                         "]],[647,672],[647,647]]],[1537960812602,["gjx16@GJXAIOU",[[-1,653,"                            "]],[653,681],[653,653]]],[1537960814781,["gjx16@GJXAIOU",[[-1,686," "]],[687,687],[686,686]]],[1537960817133,["gjx16@GJXAIOU",[[-1,660,"                          "]],[659,685],[659,659]]],[1537960819944,["gjx16@GJXAIOU",[[-1,666,"                            "]],[666,694],[666,666]]],[1537960821306,["gjx16@GJXAIOU",[[-1,659," "]],[660,660],[659,659]]],[1537960823208,["gjx16@GJXAIOU",[[1,641,"·"]],[641,641],[642,642]]],[1537960824383,["gjx16@GJXAIOU",[[-1,641,"·"]],[642,642],[641,641]]],[1537960824957,["gjx16@GJXAIOU",[[1,641,"`"]],[641,641],[642,642]]],[1537960826911,["gjx16@GJXAIOU",[[1,648,"`"]],[648,648],[649,649]]],[1537960828041,["gjx16@GJXAIOU",[[1,655,"`"]],[655,655],[656,656]]],[1537960829077,["gjx16@GJXAIOU",[[1,662,"`"]],[662,662],[663,663]]],[1537960829965,["gjx16@GJXAIOU",[[1,669,"`"]],[669,669],[670,670]]],[1537960832143,["gjx16@GJXAIOU",[[1,675,"`"]],[675,675],[676,676]]],[1537960835262,["gjx16@GJXAIOU",[[1,668,"`"]],[668,668],[669,669]]],[1537960836541,["gjx16@GJXAIOU",[[1,661,"`"]],[661,661],[662,662]]],[1537960837310,["gjx16@GJXAIOU",[[1,654,"`"]],[654,654],[655,655]]],[1537960838094,["gjx16@GJXAIOU",[[1,647,"`"]],[647,647],[648,648]]],[1537960844486,["gjx16@GJXAIOU",[[1,639,":"]],[639,639],[640,640]]],[1537960854346,["gjx16@GJXAIOU",[[-1,931,"10"],[1,933,"5"]],[931,933],[932,932]]],[1537960917203,[null,[[1,14,"toc\n\n"],[-1,18,"\n\n"],[1,20,"一、"],[-1,23,"一、"],[1,27,"\n"],[-1,31,"\n"],[1,94,"1."],[-1,97,"1."],[-1,213,"\n**"],[-1,219,"a\nut"],[1,223,"\n\n**"],[1,225,"aut"],[-1,301,"**r"],[1,304,""],[1,311,"**3.r"],[-1,313,"3."],[-1,429,"\n**"],[-1,435,"动\n态变"],[1,439,"\n\n**"],[1,441,"动态变"],[-1,587,"10;"],[1,591,"; i"],[1,636,":"],[1,637,"\n`"],[-1,639,":"],[-1,641,"\n`"],[-1,645,"\n  ` ` 0\n  ` ` 0\n  ` ` 0\n  ` `"],[1,675,"`\n`a = 0`\n`a = 0`\n`a = 0`\n`a ="],[1,677,"`"],[-1,678,"  `"],[-1,707,"a"],[1,708,"\n\n-"],[-1,928,"10;"],[1,932,"; i"]],[14,14],[935,935]]],[1537960917203,[null,[[-1,14,"toc\n\n"],[1,23,"\n\n"],[-1,23,"一、"],[1,28,"一、"],[-1,30,"\n"],[1,35,"\n"],[-1,97,"1."],[1,102,"1."],[1,216,"\n**"],[1,219,"a\nut"],[-1,219,"\n\n**"],[-1,225,"aut"],[1,304,"**r"],[-1,304,""],[-1,311,"**3.r"],[1,318,"3."],[1,432,"\n**"],[1,435,"动\n态变"],[-1,435,"\n\n**"],[-1,441,"动态变"],[1,590,"10;"],[-1,591,"; i"],[-1,639,":"],[-1,641,"\n`"],[1,645,":"],[1,646,"\n`"],[1,648,"\n  ` ` 0\n  ` ` 0\n  ` ` 0\n  ` `"],[-1,648,"`\n`a = 0`\n`a = 0`\n`a = 0`\n`a ="],[-1,680,"`"],[1,682,"  `"],[1,708,"a"],[-1,708,"\n\n-"],[1,931,"10;"],[-1,932,"; i"]],[935,935],[14,14]]],[1537960859471,["gjx16@GJXAIOU",[[-1,1136," a = 5\n                          a = 6\n                          a = 7\n                          a = 8\n                          a = 9\n"]],[1136,1271],[1136,1136]]],[1537960860909,["gjx16@GJXAIOU",[[-1,976,"："]],[977,977],[976,976]]],[1537960863796,["gjx16@GJXAIOU",[[1,976,":"]],[976,976],[977,977]]],[1537960864410,["gjx16@GJXAIOU",[[1,977,"\n"]],[977,977],[978,978]]],[1537960870602,["gjx16@GJXAIOU",[[-1,985,"                         "]],[1009,1009],[984,984]]],[1537960871185,["gjx16@GJXAIOU",[[-1,983,"\n"]],[984,984],[983,983]]],[1537960872877,["gjx16@GJXAIOU",[[-1,983," "]],[984,984],[983,983]]],[1537960873916,["gjx16@GJXAIOU",[[1,983,"\n"]],[983,983],[984,984]]],[1537960879189,["gjx16@GJXAIOU",[[-1,990,"                          "]],[990,1016],[990,990]]],[1537960881351,["gjx16@GJXAIOU",[[-1,1021," "]],[1022,1022],[1021,1021]]],[1537960883018,["gjx16@GJXAIOU",[[-1,1052," "]],[1052,1052],[1051,1051]]],[1537960885392,["gjx16@GJXAIOU",[[-1,996,"                         "]],[996,1021],[996,996]]],[1537960887867,["gjx16@GJXAIOU",[[-1,1002,"                         "]],[1002,1027],[1002,1002]]],[1537960889886,["gjx16@GJXAIOU",[[1,978,"`"]],[978,978],[979,979]]],[1537960891392,["gjx16@GJXAIOU",[[1,985,"`"]],[985,985],[986,986]]],[1537960892215,["gjx16@GJXAIOU",[[1,992,"`"]],[992,992],[993,993]]],[1537960893042,["gjx16@GJXAIOU",[[1,999,"`"]],[999,999],[1000,1000]]],[1537960893793,["gjx16@GJXAIOU",[[1,1006,"`"]],[1006,1006],[1007,1007]]],[1537960895465,["gjx16@GJXAIOU",[[1,1012,"`"]],[1012,1012],[1013,1013]]],[1537960896987,["gjx16@GJXAIOU",[[1,1005,"``"]],[1005,1005],[1006,1006]]],[1537960900683,["gjx16@GJXAIOU",[[-1,1006,"`"]],[1006,1006],[1005,1005]]],[1537960902458,["gjx16@GJXAIOU",[[1,998,"`"]],[998,998],[999,999]]],[1537960903253,["gjx16@GJXAIOU",[[1,991,"`"]],[991,991],[992,992]]],[1537960903760,["gjx16@GJXAIOU",[[1,984,"`"]],[984,984],[985,985]]],[1537960916992,["gjx16@GJXAIOU",[[1,1047,"5."]],[1047,1047],[1049,1049]]],[1537960977200,[null,[[1,14,"toc\n\n"],[-1,18,"\n\n"],[1,20,"一、"],[-1,23,"一、"],[1,27,"\n"],[-1,31,"\n"],[1,94,"1."],[-1,97,"1."],[-1,213,"\n**"],[-1,219,"a\nut"],[1,223,"\n\n**"],[1,225,"aut"],[-1,301,"**r"],[1,304,""],[1,311,"**3.r"],[-1,313,"3."],[-1,429,"\n**"],[-1,435,"动\n态变"],[1,439,"\n\n**"],[1,441,"动态变"],[-1,587,"10;"],[1,591,"; i"],[1,636,":"],[1,637,"\n`"],[-1,639,":"],[-1,641,"\n`"],[-1,645,"\n  ` ` 0\n  ` ` 0\n  ` ` 0\n  ` `"],[1,675,"`\n`a = 0`\n`a = 0`\n`a = 0`\n`a ="],[1,677,"`"],[-1,678,"  `"],[-1,707,"a"],[1,708,"\n\n-"],[-1,928,"10;"],[1,932,"; i"],[-1,973,"：a "],[1,979,"a ="],[-1,981,"\n  "],[1,987,"a ="],[-1,989,"\n  ` ` 2\n  ` ` 3\n  ` `"],[1,1011,"`\n`a = 2`\n`a = 3`\n`a ="],[1,1013,"`"],[-1,1016,"`"],[-1,1040," a *"],[1,1044,"\n\n**5."],[-1,1047,"5."]],[14,14],[1047,1047]]],[1537960977200,[null,[[-1,14,"toc\n\n"],[1,23,"\n\n"],[-1,23,"一、"],[1,28,"一、"],[-1,30,"\n"],[1,35,"\n"],[-1,97,"1."],[1,102,"1."],[1,216,"\n**"],[1,219,"a\nut"],[-1,219,"\n\n**"],[-1,225,"aut"],[1,304,"**r"],[-1,304,""],[-1,311,"**3.r"],[1,318,"3."],[1,432,"\n**"],[1,435,"动\n态变"],[-1,435,"\n\n**"],[-1,441,"动态变"],[1,590,"10;"],[-1,591,"; i"],[-1,639,":"],[-1,641,"\n`"],[1,645,":"],[1,646,"\n`"],[1,648,"\n  ` ` 0\n  ` ` 0\n  ` ` 0\n  ` `"],[-1,648,"`\n`a = 0`\n`a = 0`\n`a = 0`\n`a ="],[-1,680,"`"],[1,682,"  `"],[1,708,"a"],[-1,708,"\n\n-"],[1,931,"10;"],[-1,932,"; i"],[1,976,"：a "],[-1,979,"a ="],[1,984,"\n  "],[-1,987,"a ="],[1,992,"\n  ` ` 2\n  ` ` 3\n  ` `"],[-1,992,"`\n`a = 2`\n`a = 3`\n`a ="],[-1,1016,"`"],[1,1020,"`"],[1,1043," a *"],[-1,1043,"\n\n**5."],[1,1052,"5."]],[1047,1047],[14,14]]],[1537960930557,["gjx16@GJXAIOU",[[-1,1018,"                         "],[1,1043,"\n"]],[1028,1028],[1019,1019]]],[1537960932095,["gjx16@GJXAIOU",[[1,1019,"---"]],[1019,1019],[1022,1022]]],[1537960937307,["gjx16@GJXAIOU",[[1,1177,"---"]],[1177,1177],[1180,1180]]],[1537960938259,["gjx16@GJXAIOU",[[1,1181,"\n"]],[1180,1180],[1181,1181]]],[1537960938881,["gjx16@GJXAIOU",[[1,1182,"\n"]],[1181,1181],[1182,1182]]],[1537960941326,["gjx16@GJXAIOU",[[1,1177,"\n"]],[1177,1177],[1178,1178]]],[1537960944841,["gjx16@GJXAIOU",[[1,1187,"er"]],[1187,1187],[1189,1189]]],[1537960945822,["gjx16@GJXAIOU",[[-1,1187,"er"]],[1189,1189],[1187,1187]]],[1537960947494,["gjx16@GJXAIOU",[[1,1187,"二、"]],[1187,1187],[1189,1189]]],[1537960958539,["gjx16@GJXAIOU",[[1,1394,"\n"]],[1392,1392],[1393,1393]]],[1537961037198,[null,[[1,14,"toc\n\n"],[-1,18,"\n\n"],[1,20,"一、"],[-1,23,"一、"],[1,27,"\n"],[-1,31,"\n"],[1,94,"1."],[-1,97,"1."],[-1,213,"\n**"],[-1,219,"a\nut"],[1,223,"\n\n**"],[1,225,"aut"],[-1,301,"**r"],[1,304,""],[1,311,"**3.r"],[-1,313,"3."],[-1,429,"\n**"],[-1,435,"动\n态变"],[1,439,"\n\n**"],[1,441,"动态变"],[-1,587,"10;"],[1,591,"; i"],[1,636,":"],[1,637,"\n`"],[-1,639,":"],[-1,641,"\n`"],[-1,645,"\n  ` ` 0\n  ` ` 0\n  ` ` 0\n  ` `"],[1,675,"`\n`a = 0`\n`a = 0`\n`a = 0`\n`a ="],[1,677,"`"],[-1,678,"  `"],[-1,707,"a"],[1,708,"\n\n-"],[-1,928,"10;"],[1,932,"; i"],[-1,973,"：a "],[1,979,"a ="],[-1,981,"\n  "],[1,987,"a ="],[-1,989,"\n  ` ` 2\n  ` ` 3\n  ` `"],[1,1011,"`\n`a = 2`\n`a = 3`\n`a ="],[1,1013,"`"],[-1,1014,"  ` "],[1,1022,"\n\n"],[1,1023,"*5."],[-1,1026,"5."],[-1,1175,"##\n"],[-1,1181," "],[1,1182,"\n"],[1,1184,"## 二、"],[-1,1187,"二、"],[1,1391,"\n"],[-1,1394,"\n"]],[14,14],[1394,1394]]],[1537961037198,[null,[[-1,14,"toc\n\n"],[1,23,"\n\n"],[-1,23,"一、"],[1,28,"一、"],[-1,30,"\n"],[1,35,"\n"],[-1,97,"1."],[1,102,"1."],[1,216,"\n**"],[1,219,"a\nut"],[-1,219,"\n\n**"],[-1,225,"aut"],[1,304,"**r"],[-1,304,""],[-1,311,"**3.r"],[1,318,"3."],[1,432,"\n**"],[1,435,"动\n态变"],[-1,435,"\n\n**"],[-1,441,"动态变"],[1,590,"10;"],[-1,591,"; i"],[-1,639,":"],[-1,641,"\n`"],[1,645,":"],[1,646,"\n`"],[1,648,"\n  ` ` 0\n  ` ` 0\n  ` ` 0\n  ` `"],[-1,648,"`\n`a = 0`\n`a = 0`\n`a = 0`\n`a ="],[-1,680,"`"],[1,682,"  `"],[1,708,"a"],[-1,708,"\n\n-"],[1,931,"10;"],[-1,932,"; i"],[1,976,"：a "],[-1,979,"a ="],[1,984,"\n  "],[-1,987,"a ="],[1,992,"\n  ` ` 2\n  ` ` 3\n  ` `"],[-1,992,"`\n`a = 2`\n`a = 3`\n`a ="],[-1,1016,"`"],[1,1018,"  ` "],[-1,1022,"\n\n"],[-1,1025,"*5."],[1,1031,"5."],[1,1178,"##\n"],[1,1181," "],[-1,1181,"\n"],[-1,1184,"## 二、"],[1,1192,"二、"],[-1,1394,"\n"],[1,1398,"\n"]],[1394,1394],[14,14]]],[1537960986431,["gjx16@GJXAIOU",[[-1,2079,"free(p);//释放通过malloc分配的堆内存"]],[2079,2105],[2079,2079]]],[1537960997887,["gjx16@GJXAIOU",[[1,2080,"    retu"]],[2080,2080],[2088,2088]]],[1537960999541,["gjx16@GJXAIOU",[[-1,2085,"etu"]],[2088,2088],[2085,2085]]],[1537961003893,["gjx16@GJXAIOU",[[1,2085,"eturn 0;"]],[2085,2085],[2093,2093]]],[1537961036043,["gjx16@GJXAIOU",[[1,2102,"\n"]],[2101,2101],[2102,2102]]],[1537961036778,["gjx16@GJXAIOU",[[1,2102,"---"]],[2102,2102],[2105,2105]]],[1537961097203,[null,[[1,14,"toc\n\n"],[-1,18,"\n\n"],[1,20,"一、"],[-1,23,"一、"],[1,27,"\n"],[-1,31,"\n"],[1,94,"1."],[-1,97,"1."],[-1,213,"\n**"],[-1,219,"a\nut"],[1,223,"\n\n**"],[1,225,"aut"],[-1,301,"**r"],[1,304,""],[1,311,"**3.r"],[-1,313,"3."],[-1,429,"\n**"],[-1,435,"动\n态变"],[1,439,"\n\n**"],[1,441,"动态变"],[-1,587,"10;"],[1,591,"; i"],[1,636,":"],[1,637,"\n`"],[-1,639,":"],[-1,641,"\n`"],[-1,645,"\n  ` ` 0\n  ` ` 0\n  ` ` 0\n  ` `"],[1,675,"`\n`a = 0`\n`a = 0`\n`a = 0`\n`a ="],[1,677,"`"],[-1,678,"  `"],[-1,707,"a"],[1,708,"\n\n-"],[-1,928,"10;"],[1,932,"; i"],[-1,973,"：a "],[1,979,"a ="],[-1,981,"\n  "],[1,987,"a ="],[-1,989,"\n  ` ` 2\n  ` ` 3\n  ` `"],[1,1011,"`\n`a = 2`\n`a = 3`\n`a ="],[1,1013,"`"],[-1,1014,"  ` "],[1,1022,"\n\n"],[1,1023,"*5."],[-1,1026,"5."],[-1,1175,"##\n"],[-1,1181," "],[1,1182,"\n"],[1,1184,"## 二、"],[-1,1187,"二、"],[1,1391,"\n"],[-1,1394,"\n"],[-1,2076,"fre"],[1,2093,"\n}\n"],[-1,2099,"**堆"],[1,2106,"**堆"]],[14,14],[2109,2109]]],[1537961097203,[null,[[-1,14,"toc\n\n"],[1,23,"\n\n"],[-1,23,"一、"],[1,28,"一、"],[-1,30,"\n"],[1,35,"\n"],[-1,97,"1."],[1,102,"1."],[1,216,"\n**"],[1,219,"a\nut"],[-1,219,"\n\n**"],[-1,225,"aut"],[1,304,"**r"],[-1,304,""],[-1,311,"**3.r"],[1,318,"3."],[1,432,"\n**"],[1,435,"动\n态变"],[-1,435,"\n\n**"],[-1,441,"动态变"],[1,590,"10;"],[-1,591,"; i"],[-1,639,":"],[-1,641,"\n`"],[1,645,":"],[1,646,"\n`"],[1,648,"\n  ` ` 0\n  ` ` 0\n  ` ` 0\n  ` `"],[-1,648,"`\n`a = 0`\n`a = 0`\n`a = 0`\n`a ="],[-1,680,"`"],[1,682,"  `"],[1,708,"a"],[-1,708,"\n\n-"],[1,931,"10;"],[-1,932,"; i"],[1,976,"：a "],[-1,979,"a ="],[1,984,"\n  "],[-1,987,"a ="],[1,992,"\n  ` ` 2\n  ` ` 3\n  ` `"],[-1,992,"`\n`a = 2`\n`a = 3`\n`a ="],[-1,1016,"`"],[1,1018,"  ` "],[-1,1022,"\n\n"],[-1,1025,"*5."],[1,1031,"5."],[1,1178,"##\n"],[1,1181," "],[-1,1181,"\n"],[-1,1184,"## 二、"],[1,1192,"二、"],[-1,1394,"\n"],[1,1398,"\n"],[1,2079,"fre"],[-1,2093,"\n}\n"],[1,2102,"**堆"],[-1,2106,"**堆"]],[2109,2109],[14,14]]],[1537961037632,["gjx16@GJXAIOU",[[1,2106,"\n"]],[2105,2105],[2106,2106]]],[1537961037807,["gjx16@GJXAIOU",[[1,2107,"\n"]],[2106,2106],[2107,2107]]],[1537961061392,["gjx16@GJXAIOU",[[-1,1278,"### 1."]],[1278,1284],[1278,1278]]],[1537961062361,["gjx16@GJXAIOU",[[1,1278,"- "]],[1278,1278],[1280,1280]]],[1537961066295,["gjx16@GJXAIOU",[[-1,1353,"### 2."],[1,1359,"-"]],[1353,1359],[1354,1354]]],[1537961066501,["gjx16@GJXAIOU",[[1,1354," "]],[1354,1354],[1355,1355]]],[1537961069389,["gjx16@GJXAIOU",[[-1,1387,"###"],[-1,1391,"3."]],[1387,1393],[1388,1388]]],[1537961070296,["gjx16@GJXAIOU",[[1,1388,"- "]],[1388,1388],[1390,1390]]],[1537961076843,["gjx16@GJXAIOU",[[-1,1669,"### 4."],[1,1675,"-"]],[1669,1675],[1670,1670]]],[1537961077028,["gjx16@GJXAIOU",[[1,1670," "]],[1670,1670],[1671,1671]]],[1537961084390,["gjx16@GJXAIOU",[[1,1671,"**"],[1,1673,"**"]],[1671,1673],[1671,1677]]],[1537961090081,["gjx16@GJXAIOU",[[1,1390,"**"],[1,1394,"**"]],[1390,1394],[1390,1398]]],[1537961096841,["gjx16@GJXAIOU",[[-1,1394,"  "]],[1396,1396],[1394,1394]]],[1537961157209,[null,[[1,14,"toc\n\n"],[-1,18,"\n\n"],[1,20,"一、"],[-1,23,"一、"],[1,27,"\n"],[-1,31,"\n"],[1,94,"1."],[-1,97,"1."],[-1,213,"\n**"],[-1,219,"a\nut"],[1,223,"\n\n**"],[1,225,"aut"],[-1,301,"**r"],[1,304,""],[1,311,"**3.r"],[-1,313,"3."],[-1,429,"\n**"],[-1,435,"动\n态变"],[1,439,"\n\n**"],[1,441,"动态变"],[-1,587,"10;"],[1,591,"; i"],[1,636,":"],[1,637,"\n`"],[-1,639,":"],[-1,641,"\n`"],[-1,645,"\n  ` ` 0\n  ` ` 0\n  ` ` 0\n  ` `"],[1,675,"`\n`a = 0`\n`a = 0`\n`a = 0`\n`a ="],[1,677,"`"],[-1,678,"  `"],[-1,707,"a"],[1,708,"\n\n-"],[-1,928,"10;"],[1,932,"; i"],[-1,973,"：a "],[1,979,"a ="],[-1,981,"\n  "],[1,987,"a ="],[-1,989,"\n  ` ` 2\n  ` ` 3\n  ` `"],[1,1011,"`\n`a = 2`\n`a = 3`\n`a ="],[1,1013,"`"],[-1,1014,"  ` "],[1,1022,"\n\n"],[1,1023,"*5."],[-1,1026,"5."],[-1,1175,"##\n"],[-1,1181," "],[1,1182,"\n"],[1,1184,"## 二、"],[-1,1187,"二、"],[-1,1275,"###"],[1,1280,"代码区"],[-1,1350,"###"],[1,1355,"静态区"],[-1,1383,"###\n栈"],[1,1388,"\n "],[-1,1392," \n"],[1,1394,"栈区"],[1,1396,"\n\n栈"],[-1,1668,"###"],[-1,1675,"\n"],[1,1677,"区"],[1,1679,"\n\n堆"],[-1,2067,"fre"],[1,2084,"\n}\n"],[-1,2090,"**堆"],[1,2099,"**堆"]],[14,14],[2102,2102]]],[1537961157209,[null,[[-1,14,"toc\n\n"],[1,23,"\n\n"],[-1,23,"一、"],[1,28,"一、"],[-1,30,"\n"],[1,35,"\n"],[-1,97,"1."],[1,102,"1."],[1,216,"\n**"],[1,219,"a\nut"],[-1,219,"\n\n**"],[-1,225,"aut"],[1,304,"**r"],[-1,304,""],[-1,311,"**3.r"],[1,318,"3."],[1,432,"\n**"],[1,435,"动\n态变"],[-1,435,"\n\n**"],[-1,441,"动态变"],[1,590,"10;"],[-1,591,"; i"],[-1,639,":"],[-1,641,"\n`"],[1,645,":"],[1,646,"\n`"],[1,648,"\n  ` ` 0\n  ` ` 0\n  ` ` 0\n  ` `"],[-1,648,"`\n`a = 0`\n`a = 0`\n`a = 0`\n`a ="],[-1,680,"`"],[1,682,"  `"],[1,708,"a"],[-1,708,"\n\n-"],[1,931,"10;"],[-1,932,"; i"],[1,976,"：a "],[-1,979,"a ="],[1,984,"\n  "],[-1,987,"a ="],[1,992,"\n  ` ` 2\n  ` ` 3\n  ` `"],[-1,992,"`\n`a = 2`\n`a = 3`\n`a ="],[-1,1016,"`"],[1,1018,"  ` "],[-1,1022,"\n\n"],[-1,1025,"*5."],[1,1031,"5."],[1,1178,"##\n"],[1,1181," "],[-1,1181,"\n"],[-1,1184,"## 二、"],[1,1192,"二、"],[1,1278,"###"],[-1,1280,"代码区"],[1,1353,"###"],[-1,1355,"静态区"],[1,1386,"###\n栈"],[-1,1386,"\n "],[1,1392," \n"],[-1,1392,"栈区"],[-1,1396,"\n\n栈"],[1,1671,"###"],[1,1675,"\n"],[-1,1676,"区"],[-1,1679,"\n\n堆"],[1,2070,"fre"],[-1,2084,"\n}\n"],[1,2093,"**堆"],[-1,2099,"**堆"]],[2102,2102],[14,14]]],[1537961105347,["gjx16@GJXAIOU",[[1,1355,"**"],[1,1358,"**"]],[1355,1358],[1355,1362]]],[1537961109090,["gjx16@GJXAIOU",[[1,1280,"**"],[1,1283,"**"]],[1280,1283],[1280,1287]]],[1537961121140,["gjx16@GJXAIOU",[[1,1782,"**"],[1,1789,"**"]],[1782,1789],[1782,1793]]],[1537961217208,[null,[[1,14,"toc\n\n"],[-1,18,"\n\n"],[1,20,"一、"],[-1,23,"一、"],[1,27,"\n"],[-1,31,"\n"],[1,94,"1."],[-1,97,"1."],[-1,213,"\n**"],[-1,219,"a\nut"],[1,223,"\n\n**"],[1,225,"aut"],[-1,301,"**r"],[1,304,""],[1,311,"**3.r"],[-1,313,"3."],[-1,429,"\n**"],[-1,435,"动\n态变"],[1,439,"\n\n**"],[1,441,"动态变"],[-1,587,"10;"],[1,591,"; i"],[1,636,":"],[1,637,"\n`"],[-1,639,":"],[-1,641,"\n`"],[-1,645,"\n  ` ` 0\n  ` ` 0\n  ` ` 0\n  ` `"],[1,675,"`\n`a = 0`\n`a = 0`\n`a = 0`\n`a ="],[1,677,"`"],[-1,678,"  `"],[-1,707,"a"],[1,708,"\n\n-"],[-1,928,"10;"],[1,932,"; i"],[-1,973,"：a "],[1,979,"a ="],[-1,981,"\n  "],[1,987,"a ="],[-1,989,"\n  ` ` 2\n  ` ` 3\n  ` `"],[1,1011,"`\n`a = 2`\n`a = 3`\n`a ="],[1,1013,"`"],[-1,1014,"  ` "],[1,1022,"\n\n"],[1,1023,"*5."],[-1,1026,"5."],[-1,1175,"##\n"],[-1,1181," "],[1,1182,"\n"],[1,1184,"## 二、"],[-1,1187,"二、"],[-1,1275,"###"],[1,1282,"代码区**"],[-1,1285,"**"],[-1,1354,"###"],[1,1361,"静态区**"],[-1,1364,"**"],[-1,1391,"###\n栈"],[1,1396,"\n "],[-1,1400," \n"],[1,1402,"栈区"],[1,1404,"\n\n栈"],[-1,1676,"###"],[-1,1683,"\n"],[1,1685,"区"],[1,1687,"\n\n堆"],[1,1779,"**"],[-1,1782,"**"],[1,1788,"**"],[-1,1791,"**"],[-1,2079,"fre"],[1,2096,"\n}\n"],[-1,2102,"**堆"],[1,2111,"**堆"]],[14,14],[2114,2114]]],[1537961217208,[null,[[-1,14,"toc\n\n"],[1,23,"\n\n"],[-1,23,"一、"],[1,28,"一、"],[-1,30,"\n"],[1,35,"\n"],[-1,97,"1."],[1,102,"1."],[1,216,"\n**"],[1,219,"a\nut"],[-1,219,"\n\n**"],[-1,225,"aut"],[1,304,"**r"],[-1,304,""],[-1,311,"**3.r"],[1,318,"3."],[1,432,"\n**"],[1,435,"动\n态变"],[-1,435,"\n\n**"],[-1,441,"动态变"],[1,590,"10;"],[-1,591,"; i"],[-1,639,":"],[-1,641,"\n`"],[1,645,":"],[1,646,"\n`"],[1,648,"\n  ` ` 0\n  ` ` 0\n  ` ` 0\n  ` `"],[-1,648,"`\n`a = 0`\n`a = 0`\n`a = 0`\n`a ="],[-1,680,"`"],[1,682,"  `"],[1,708,"a"],[-1,708,"\n\n-"],[1,931,"10;"],[-1,932,"; i"],[1,976,"：a "],[-1,979,"a ="],[1,984,"\n  "],[-1,987,"a ="],[1,992,"\n  ` ` 2\n  ` ` 3\n  ` `"],[-1,992,"`\n`a = 2`\n`a = 3`\n`a ="],[-1,1016,"`"],[1,1018,"  ` "],[-1,1022,"\n\n"],[-1,1025,"*5."],[1,1031,"5."],[1,1178,"##\n"],[1,1181," "],[-1,1181,"\n"],[-1,1184,"## 二、"],[1,1192,"二、"],[1,1278,"###"],[-1,1282,"代码区**"],[1,1290,"**"],[1,1357,"###"],[-1,1361,"静态区**"],[1,1369,"**"],[1,1394,"###\n栈"],[-1,1394,"\n "],[1,1400," \n"],[-1,1400,"栈区"],[-1,1404,"\n\n栈"],[1,1679,"###"],[1,1683,"\n"],[-1,1684,"区"],[-1,1687,"\n\n堆"],[-1,1782,"**"],[1,1787,"**"],[-1,1791,"**"],[1,1796,"**"],[1,2082,"fre"],[-1,2096,"\n}\n"],[1,2105,"**堆"],[-1,2111,"**堆"]],[2114,2114],[14,14]]],[1537961194107,["gjx16@GJXAIOU",[[1,3556,"@toc"]],[3556,3556],[3560,3560]]],[1537961203793,["gjx16@GJXAIOU",[[-1,3556,"@toc"]],[3556,3560],[3556,3556]]],[1537961207917,["gjx16@GJXAIOU",[[1,3562,"s"]],[3562,3562],[3563,3563]]],[1537961208742,["gjx16@GJXAIOU",[[-1,3562,"s"]],[3563,3563],[3562,3562]]],[1537961211579,["gjx16@GJXAIOU",[[1,3562,"三、"]],[3562,3562],[3564,3564]]],[1537961277210,[null,[[1,14,"toc\n\n"],[-1,18,"\n\n"],[1,20,"一、"],[-1,23,"一、"],[1,27,"\n"],[-1,31,"\n"],[1,94,"1."],[-1,97,"1."],[-1,213,"\n**"],[-1,219,"a\nut"],[1,223,"\n\n**"],[1,225,"aut"],[-1,301,"**r"],[1,304,""],[1,311,"**3.r"],[-1,313,"3."],[-1,429,"\n**"],[-1,435,"动\n态变"],[1,439,"\n\n**"],[1,441,"动态变"],[-1,587,"10;"],[1,591,"; i"],[1,636,":"],[1,637,"\n`"],[-1,639,":"],[-1,641,"\n`"],[-1,645,"\n  ` ` 0\n  ` ` 0\n  ` ` 0\n  ` `"],[1,675,"`\n`a = 0`\n`a = 0`\n`a = 0`\n`a ="],[1,677,"`"],[-1,678,"  `"],[-1,707,"a"],[1,708,"\n\n-"],[-1,928,"10;"],[1,932,"; i"],[-1,973,"：a "],[1,979,"a ="],[-1,981,"\n  "],[1,987,"a ="],[-1,989,"\n  ` ` 2\n  ` ` 3\n  ` `"],[1,1011,"`\n`a = 2`\n`a = 3`\n`a ="],[1,1013,"`"],[-1,1014,"  ` "],[1,1022,"\n\n"],[1,1023,"*5."],[-1,1026,"5."],[-1,1175,"##\n"],[-1,1181," "],[1,1182,"\n"],[1,1184,"## 二、"],[-1,1187,"二、"],[-1,1275,"###"],[1,1282,"代码区**"],[-1,1285,"**"],[-1,1354,"###"],[1,1361,"静态区**"],[-1,1364,"**"],[-1,1391,"###\n栈"],[1,1396,"\n "],[-1,1400," \n"],[1,1402,"栈区"],[1,1404,"\n\n栈"],[-1,1676,"###"],[-1,1683,"\n"],[1,1685,"区"],[1,1687,"\n\n堆"],[1,1779,"**"],[-1,1782,"**"],[1,1788,"**"],[-1,1791,"**"],[-1,2079,"fre"],[1,2096,"\n}\n"],[-1,2102,"**堆"],[1,2111,"**堆"],[1,3559,"三、"],[-1,3562,"三、"]],[14,14],[3562,3562]]],[1537961277210,[null,[[-1,14,"toc\n\n"],[1,23,"\n\n"],[-1,23,"一、"],[1,28,"一、"],[-1,30,"\n"],[1,35,"\n"],[-1,97,"1."],[1,102,"1."],[1,216,"\n**"],[1,219,"a\nut"],[-1,219,"\n\n**"],[-1,225,"aut"],[1,304,"**r"],[-1,304,""],[-1,311,"**3.r"],[1,318,"3."],[1,432,"\n**"],[1,435,"动\n态变"],[-1,435,"\n\n**"],[-1,441,"动态变"],[1,590,"10;"],[-1,591,"; i"],[-1,639,":"],[-1,641,"\n`"],[1,645,":"],[1,646,"\n`"],[1,648,"\n  ` ` 0\n  ` ` 0\n  ` ` 0\n  ` `"],[-1,648,"`\n`a = 0`\n`a = 0`\n`a = 0`\n`a ="],[-1,680,"`"],[1,682,"  `"],[1,708,"a"],[-1,708,"\n\n-"],[1,931,"10;"],[-1,932,"; i"],[1,976,"：a "],[-1,979,"a ="],[1,984,"\n  "],[-1,987,"a ="],[1,992,"\n  ` ` 2\n  ` ` 3\n  ` `"],[-1,992,"`\n`a = 2`\n`a = 3`\n`a ="],[-1,1016,"`"],[1,1018,"  ` "],[-1,1022,"\n\n"],[-1,1025,"*5."],[1,1031,"5."],[1,1178,"##\n"],[1,1181," "],[-1,1181,"\n"],[-1,1184,"## 二、"],[1,1192,"二、"],[1,1278,"###"],[-1,1282,"代码区**"],[1,1290,"**"],[1,1357,"###"],[-1,1361,"静态区**"],[1,1369,"**"],[1,1394,"###\n栈"],[-1,1394,"\n "],[1,1400," \n"],[-1,1400,"栈区"],[-1,1404,"\n\n栈"],[1,1679,"###"],[1,1683,"\n"],[-1,1684,"区"],[-1,1687,"\n\n堆"],[-1,1782,"**"],[1,1787,"**"],[-1,1791,"**"],[1,1796,"**"],[1,2082,"fre"],[-1,2096,"\n}\n"],[1,2105,"**堆"],[-1,2111,"**堆"],[-1,3562,"三、"],[1,3567,"三、"]],[3562,3562],[14,14]]],[1537961217754,["gjx16@GJXAIOU",[[1,3591,"1."]],[3591,3591],[3593,3593]]],[1537961225533,["gjx16@GJXAIOU",[[1,3875,"\n"]],[3874,3874],[3875,3875]]],[1537961226284,["gjx16@GJXAIOU",[[1,3875,"---"]],[3875,3875],[3878,3878]]],[1537961227135,["gjx16@GJXAIOU",[[1,3879,"\n"]],[3878,3878],[3879,3879]]],[1537961231356,["gjx16@GJXAIOU",[[1,3882,"2."]],[3882,3882],[3884,3884]]],[1537961233439,["gjx16@GJXAIOU",[[1,3949,"\n"]],[3948,3948],[3949,3949]]],[1537961234099,["gjx16@GJXAIOU",[[1,3949,"---"]],[3949,3949],[3952,3952]]],[1537961234887,["gjx16@GJXAIOU",[[1,3953,"\n"]],[3952,3952],[3953,3953]]],[1537961237989,["gjx16@GJXAIOU",[[1,3956,"3."]],[3956,3956],[3958,3958]]],[1537961252551,["gjx16@GJXAIOU",[[1,3972,"realloc"]],[3972,3972],[3979,3979]]]],null,"gjx16@GJXAIOU"],["251cd5f8-cc0b-44fe-9db2-13a99921ea91",1538008718086,"# day10 内存管理\n@toc\n\n\n## 一、变量作用域\n\n全局变量和局部变量\n\n一个C语言变量的作用域可以是代码块，作用域就是函数作用域或者文件作用域\n代码块：{}之间的一段代码；\n\n**1.文件作用域：**\n\n如果一个变量在其他的代码文件中已经定义了，可以在本程序中使用，但是使用前要使用关键字：extern\n例如：`extern int age` //有一个int型变量age已经在其他文件中定义了，这里就直接使用了；\n\n---\n\n**2.auto自动变量**\n\nC语言中默认中都是auto，不需要关注它在内存中什么时候消失和出现\n`auto int i = 0;`等效于`int i = 0;`\n\n----\n\n**3.register变量**\n`register int i = 0;`  //建议，如果有寄存器空闲的话，就将这个变量放进寄存器中使用，可以加快读取\n\n但是`int *p = &i`//这个语句就会报错，因为放在寄存器中就没有地址了\n\n---\n\n**4.动态变量和静态变量**\n\n- 动态变量 \n\n```c\n#include<stdio.h>\n\nvoid myauto()\n{\n  int a = 0;\n  printf(\"a = %d\\n\",a);\n  a++;\n}\n\n\nint main()\n{\n  int i;\n  for(i = 0; i < 5; i++)\n  {\n    myatuo();\n \n  }\n\n}\n```\n\n程序的输出结果为 : \n`a = 0`\n`a = 0`\n`a = 0`\n`a = 0`\n`a = 0`\n                          \n\n- 静态变量\n首先只要整个程序开始执行之后，静态变量是一直存在的，不消失的；\n其次，静态变量值初始化一次，即`static int a = 0;`语句只执行一次\n```c\n#include<stdio.h>\n\nvoid mystatic()\n{\n  static int a = 0;\n  printf(\"a = %d\\n\",a);\n  a++;\n\n}\n\nint main()\n{\n  int i = 0;\n  for(i = 0; i < 5; i++)\n  {\n    mystatic();\n  }\n}\n```\n程序运行结果为:\n`a = 0`\n`a = 1`\n`a = 2`\n`a = 3`\n`a = 4`\n\n---\n\n**5.变量和函数是否使用extern的区别**\n\n- 变量 \n  - extern int age;\n  - int age;    //这包含两个含义：声明一个变量或者定义一个变量\n- 函数（下面两个没有什么区别）\n  - extern void age()\n  - void age()     \n\n\n---\n\n\n## 二、内存四区简介\n\n![内存四区图示]($resource/%E5%86%85%E5%AD%98%E5%9B%9B%E5%8C%BA%E5%9B%BE%E7%A4%BA.png)\n\n- **代码区**\n\n存放可执行的代码；程序被操作系统加载到内存中时候，所有可执行的代码都加载到代码区，==这块内存是不可以在运行期间修改的====；\n\n\n\n- **静态区**\n\n存放所有的==静态变量/常量和全局变量/常量==\n\n\n - **栈区**\n\n栈区是一种先进后出的内存结构，所有的==自动变量、指针，数组、函数的形参==都是由编译器自动放出栈中，当一个自动变量超出其作用域的时候，自动从栈中弹出；\n\n对于自动变量，什么时候入栈和出栈都是系统自动控制的\n\n栈区的大小是可以动态设置的，不过不会特别大，一般大小为XX k，\n\nC语言中函数的参数变量是从右往左入栈的，也就是最右边的参数是最先入栈的\n![栈的图示]($resource/%E6%A0%88%E7%9A%84%E5%9B%BE%E7%A4%BA.png)\n\n**栈溢出**\n当栈空间已满，但是还往栈内存中压变量，这就是栈溢出；\n\n\n- **堆区**\n\n堆和栈一样，是一种在程序运行过程中可以随时修改的内存区域，但是==没有栈那样的先进后出的顺序==，是一个大容器，容量远远大于栈，==堆内存空间的申请和释放需要手工通过代码来完成==；\n\n**分配堆的方法：**\n```c\n#include<stdio.h>\n#include<stdlib.h>   //需要加一个头文件\n\nint main()\n{\n    int *p = malloc(sizeof(int)*10);  //语句含义为：在堆中间申请内存，函数的返回值为无类型的指针，参数为size_t无符号的整数   ，现在这个语句的含义是：申请一个内存大小为10个int大小的空间。指针p指向分配出来的堆的地址；\n\n    memset(p ,0,sizeof(int) * 10);  //将分配的这个空间置零初始化\n    free(p);//释放通过malloc分配的堆内存\n    return 0;\n}\n```\n\n\n---\n\n\n**堆和栈的区别**\n\n```c\n#include<stdio.h>\n#include<stdlib.h>\n\nvoid *geta()   //这是错误的，不能将一个栈变量的地址通过函数的返回值返回\n{\n  int a = 0;\n  return &a;\n}\n\n\nvoid *geta1() //可以通过函数的返回值返回一个堆地址，但是一定要free\n{\n  int  *p = malloc(sizeof(int)); //申请了一个堆空间\n  return p;  //返回值为p 即是分配的堆空间的地址\n}\n\n\n\nvoid *gata2()   //这也是合法的，只要将main函数中的geta1改为geta2,然后将free(getp)去掉即可\n{\n  static int a = 0;  //使用static即使a为静态变量，存在于静态区，会一直存在不会被释放\n  return &a;\n}\n\n\n\n\nint main()\n\n{\n  int *getp = geta1();\n  *getp = 100;\n  free(getp);   //getp指向了划分的堆区域，因此释放即可\n}\n\n\n```\n\n**理解下面程序**\n~~这个程序本质上有错误，具体的修改见下面的一个程序~~\n```c\n#include<stdio.h>\n#include<stdlib.h>\n\nvoid getheap(int  *a)\n{\n  a = malloc(sizeof(int) * 10);\n}\n\nint main()\n{\n  int *p =NULL;\n  gatheap(p);  //实参没有任何改变，相当于这里的p一直没有任何改变\n\n  p[0] = 1;\n  p[1] = 2;\n  printf(\"p[0] = %d ,p[1] = %d\\n\",p[0],p[1]);\n  free(p);\n}\n```\n\n![函数图形化解析]($resource/%E5%87%BD%E6%95%B0%E5%9B%BE%E5%BD%A2%E5%8C%96%E8%A7%A3%E6%9E%90.png)\n\n从这程序中可以看出：也就是说a的值改了，a本身是在栈里面的，它只是指向堆里面的一个空间地址；然后实参p的值一直没有变化\ngetheap在执行完之后，a就消失了，导致他指向的具体堆空间的地址编号也随之消失了；\n\n**修改**\n\n```c\n#include<stdio.h>\n#include<stdlib.h>\n\nvoid  getheap(int  **a)\n  {\n     *a  =  malloc(sizeof(int) * 10);  //这里的*a就是指针p中的值了，\n  }\n\n/*\n  int **a = &p;等价于\n  int **a;\n  a = &p\n\n*/\n\n\n\nint  main()\n{\n  int  *p  =NULL;\n  getheap(&p);  //传递的是P的地址\n  p[0]  =  1;\n  p[1]  =  2;\n  printf(\"p[0]  =  %d  ,p[1]  =  %d\\n\",p[0],p[1]);\n  free(p);\n  return  0;\n\n}\n```\n\n程序的分析图片：\n\n![堆和栈地址]($resource/%E5%A0%86%E5%92%8C%E6%A0%88%E5%9C%B0%E5%9D%80.png)\n\n\n\n### 三、内存模型详解以及Linux系统堆内存大小的分析\n\n**1.栈和堆的比较**\n\n- 栈(stack)\n - 明确知道数据占用多好内存\n - 数据很少 \n - 变量离开作用范围后，栈上的数据会自动释放\n - 栈的最大尺寸固定，超过则引起栈溢出\n  \n- 堆(heap)\n  - 需要大量内存的时候\n  - 不知道需要多少内存 \n\n```c\n//在堆中可以建立一个动态的数组\n\n#include<stdio.h>\n\nint main()\n{\n\n  int i ;\n  scanf(\"%d\",&i);\n  int *array = malloc(sizeof(int) * i);\n  free(array);\n\n\n}\n```\n\n---\n\n**2.堆的分配和释放**\n\n内存的最小单位是字节，但是操作系统在管理内存的时候，最小的单位是内存页（32位操作系统中每一页为4k ）\n\n---\n\n**3.malloc和calloc和realloc**\n\n- **malloc**\n```c\n#include<stdio.h>\n#include<stdio.h>\nint main()\n{\n  char *p = malloc(10);//分配一个10个字节的空间,但是这10个空间没有清理过，所以每次使用可能都是10个随机数\n\n  memset(p,0,10); //这里含义是将p 中的10个元素全部置零\n  int i = 0;\n  for(i = 0; i < 10; i++)\n  {\n    printf(\"%d\\n\",p[i]);\n  }\n  free(p);\n  return 0;\n}\n```\n\n- **calloc**\n\n```c\n#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n\nint main()\n{\n  char *p = calloc(10,sizeof(char));//分配10个大小为sizeof（char）的空间，并且自动全部置零\n  int i = 0;\n  for(i = 0; i < 10; i++)\n  {\n    printf(\"%d\\n\",p[i]);\n  }\n  return 0;\n  free(p);\n}\n```\n\n- **realloc**\n\n如果已分配的空间不够用，需要划分出一块新的内存空间，要求是这块内存空间和原来已划分的空间是连续的；\n```c\n#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n\nint main()\n{\n  char *p = calloc(10,sizeof(char));//这10个空间是置零了的\n  char *p1 = realloc(p,20);\n  //参数含义：需要扩展的空间名，需要扩展后的空间为20个字节\n  //语句含义：在原有内存基础之上，在堆中间增加连续的内存；如果原有的内存没有连续的空间可拓展，那么会分配一个空间，将原有的内存copy到新空间，然后释放\n  //新开辟的这10个字节空间是没有置零的\n\n  int i = 0;\n  for(i = 0; i < 20; i++)\n  {\n    printf(\"%d\\n\",p1[i]); //这里的p也需要改为p1\n  }\n  return 0;\n  free(p1);  //这里释放的是p1\n}\n```\n\n当要减少原来已划分的空间的时候\n```c\n#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n\nint main()\n{\n  char *p = calloc(10,sizeof(char));//这10个空间是置零了的\n  char *p1 = realloc(p,5);\n  \n  int i = 0;\n  for(i = 0; i < 5; i++)\n  {\n    printf(\"%d\\n\",p1[i]); //这里的p也需要改为p1\n  }\n  return 0;\n  free(p1);  //这里释放的是p1\n}\n```\n\n当`realloc`的第一个参数为空的时候，即：`realloc (NULL,5)`等效于`malloc(5)`\n\n\n\n",[[1538008682471,["gjx16@GJXAIOU",[[1,216,"\n"]],[214,214],[215,215]]],[1538008683144,["gjx16@GJXAIOU",[[1,217,"\n"]],[215,215],[216,216]]],[1538008688606,["gjx16@GJXAIOU",[[1,216,"`satatic"]],[216,216],[224,224]]],[1538008692749,["gjx16@GJXAIOU",[[-1,218,"atatic"]],[224,224],[218,218]]],[1538008717400,["gjx16@GJXAIOU",[[1,218,"tatic int a  = 0;`//在定义"]],[218,218],[241,241]]],[1538008745544,["gjx16@GJXAIOU",[[1,241,"这个变量的文件内部是全局的，但在文件外部不可用"]],[241,241],[264,264]]],[1538008771128,["gjx16@GJXAIOU",[[1,291,"所有的局部变量"]],[291,291],[298,298]]],[1538008777851,["gjx16@GJXAIOU",[[1,308,"，"]],[308,308],[309,309]]],[1538008789988,["gjx16@GJXAIOU",[[1,309,"所以`auto`keyi"]],[309,309],[321,321]]],[1538008791034,["gjx16@GJXAIOU",[[-1,317,"keyi"]],[321,321],[317,317]]],[1538008804952,["gjx16@GJXAIOU",[[1,317,"可以省略。"]],[317,317],[322,322]]],[1538008844655,["gjx16@GJXAIOU",[[1,498,"内存"]],[498,498],[500,500]]],[1538008920529,["gjx16@GJXAIOU",[[1,925,"、、"]],[925,925],[927,927]]],[1538008921700,["gjx16@GJXAIOU",[[-1,925,"、、"]],[927,927],[925,925]]],[1538008946844,["gjx16@GJXAIOU",[[1,925,"//整个进程运行过程中一直有效，实在"]],[925,925],[943,943]]],[1538008947732,["gjx16@GJXAIOU",[[-1,941,"实在"]],[943,943],[941,941]]],[1538008955993,["gjx16@GJXAIOU",[[1,941,"是在静态区，但是"]],[941,941],[949,949]]],[1538008975671,["gjx16@GJXAIOU",[[1,949,"只能mystatic函数内部访问使用"]],[949,949],[967,967]]],[1538009375580,["gjx16@GJXAIOU",[[1,879," "]],[879,879],[880,880]]],[1538009591798,["gjx16@GJXAIOU",[[1,1233,"  - \n"]],[1232,1232],[1237,1237]]],[1538009593203,["gjx16@GJXAIOU",[[-1,1235,"- "]],[1237,1237],[1235,1235]]],[1538009597280,["gjx16@GJXAIOU",[[1,1191,"、、"]],[1191,1191],[1193,1193]]],[1538009598275,["gjx16@GJXAIOU",[[-1,1191,"、、"]],[1193,1193],[1191,1191]]],[1538009615641,["gjx16@GJXAIOU",[[1,1191,"//当age这个变量是在"]],[1191,1191],[1203,1203]]],[1538009625537,["gjx16@GJXAIOU",[[1,1203,"另一个.c文件中是"]],[1203,1203],[1212,1212]]],[1538009626181,["gjx16@GJXAIOU",[[-1,1211,"是"]],[1212,1212],[1211,1211]]],[1538009647681,["gjx16@GJXAIOU",[[1,1211,"时，需要在别的文件中盗用"]],[1211,1211],[1223,1223]]],[1538009648277,["gjx16@GJXAIOU",[[-1,1221,"盗用"]],[1223,1223],[1221,1221]]],[1538009657683,["gjx16@GJXAIOU",[[1,1221,"调用这个变量时候使用"]],[1221,1221],[1231,1231]]]],null,"gjx16@GJXAIOU"],["d945d1dd-f9b1-4a07-9f1c-09a1ad7ae7fb",1538055893222,"# day10 内存管理\n@toc\n\n\n## 一、变量作用域\n\n全局变量和局部变量\n\n一个C语言变量的作用域可以是代码块，作用域就是函数作用域或者文件作用域\n代码块：{}之间的一段代码；\n\n**1.文件作用域：**\n\n如果一个变量在其他的代码文件中已经定义了，可以在本程序中使用，但是使用前要使用关键字：extern\n例如：`extern int age` //有一个int型变量age已经在其他文件中定义了，这里就直接使用了；\n\n`static int a  = 0;`//在定义这个变量的文件内部是全局的，但在文件外部不可用\n\n---\n\n**2.auto自动变量**\n\nC语言中所有的局部变量默认中都是auto，，所以`auto`可以省略。不需要关注它在内存中什么时候消失和出现\n`auto int i = 0;`等效于`int i = 0;`\n\n----\n\n**3.register变量**\n`register int i = 0;`  //建议，如果有寄存器空闲的话，就将这个变量放进寄存器中使用，可以加快读取\n\n但是`int *p = &i`//这个语句就会报错，因为放在寄存器中就没有内存地址了\n\n---\n\n**4.动态变量和静态变量**\n\n- 动态变量 \n\n```c\n#include<stdio.h>\n\nvoid myauto()\n{\n  int a = 0;\n  printf(\"a = %d\\n\",a);\n  a++;\n}\n\n\nint main()\n{\n  int i;\n  for(i = 0; i < 5; i++)\n  {\n    myatuo();\n \n  }\n\n}\n```\n\n程序的输出结果为 : \n`a = 0`\n`a = 0`\n`a = 0`\n`a = 0`\n`a = 0`\n                          \n\n- 静态变量\n首先只要整个程序开始执行之后，静态变量是一直存在的，不消失的；\n其次，静态变量值初始化一次，即`static int a = 0;`语句只执行一次\n```c\n#include<s tdio.h>\n\nvoid mystatic()\n{\n  static int a = 0;//整个进程运行过程中一直有效，是在静态区，但是只能mystatic函数内部访问使用\n  printf(\"a = %d\\n\",a);\n  a++;\n\n}\n\nint main()\n{\n  int i = 0;\n  for(i = 0; i < 5; i++)\n  {\n    mystatic();\n  }\n}\n```\n程序运行结果为:\n`a = 0`\n`a = 1`\n`a = 2`\n`a = 3`\n`a = 4`\n\n---\n\n**5.变量和函数是否使用extern的区别**\n\n- 变量 \n  - extern int age;//当age这个变量是在另一个.c文件中时，需要在别的文件中调用这个变量时候使用\n  - int age;    //这包含两个含义：声明一个变量或者定义一个变量\n  \n- 函数（下面两个没有什么区别）\n  - extern void age()\n  - void age()     \n\n\n---\n\n\n## 二、内存四区简介\n\n![内存四区图示]($resource/%E5%86%85%E5%AD%98%E5%9B%9B%E5%8C%BA%E5%9B%BE%E7%A4%BA.png)\n\n- **代码区**\n\n存放可执行的代码；程序被操作系统加载到内存中时候，所有可执行的代码都加载到代码区，==这块内存是不可以在运行期间修改的====；\n\n\n\n- **静态区**\n\n存放所有的==静态变量/常量和全局变量/常量==\n\n\n - **栈区**\n\n栈区是一种先进后出的内存结构，所有的==自动变量、指针，数组、函数的形参==都是由编译器自动放出栈中，当一个自动变量超出其作用域的时候，自动从栈中弹出；\n\n对于自动变量，什么时候入栈和出栈都是系统自动控制的\n\n栈区的大小是可以动态设置的，不过不会特别大，一般大小为XX k，\n\nC语言中函数的参数变量是从右往左入栈的，也就是最右边的参数是最先入栈的\n![栈的图示]($resource/%E6%A0%88%E7%9A%84%E5%9B%BE%E7%A4%BA.png)\n\n**栈溢出**\n当栈空间已满，但是还往栈内存中压变量，这就是栈溢出；\n\n\n- **堆区**\n\n堆和栈一样，是一种在程序运行过程中可以随时修改的内存区域，但是==没有栈那样的先进后出的顺序==，是一个大容器，容量远远大于栈，==堆内存空间的申请和释放需要手工通过代码来完成==；\n\n**分配堆的方法：**\n```c\n#include<stdio.h>\n#include<stdlib.h>   //需要加一个头文件\n\nint main()\n{\n    int *p = malloc(sizeof(int)*10);  //语句含义为：在堆中间申请内存，函数的返回值为无类型的指针，参数为size_t无符号的整数   ，现在这个语句的含义是：申请一个内存大小为10个int大小的空间。指针p指向分配出来的堆的地址；\n\n    memset(p ,0,sizeof(int) * 10);  //将分配的这个空间置零初始化\n    free(p);//释放通过malloc分配的堆内存\n    return 0;\n}\n```\n\n\n---\n\n\n**堆和栈的区别**\n\n```c\n#include<stdio.h>\n#include<stdlib.h>\n\nvoid *geta()   //这是错误的，不能将一个栈变量的地址通过函数的返回值返回\n{\n  int a = 0;\n  return &a;\n}\n\n\nvoid *geta1() //可以通过函数的返回值返回一个堆地址，但是一定要free\n{\n  int  *p = malloc(sizeof(int)); //申请了一个堆空间\n  return p;  //返回值为p 即是分配的堆空间的地址\n}\n\n\n\nvoid *gata2()   //这也是合法的，只要将main函数中的geta1改为geta2,然后将free(getp)去掉即可\n{\n  static int a = 0;  //使用static即使a为静态变量，存在于静态区，会一直存在不会被释放\n  return &a;\n}\n\n\n\n\nint main()\n\n{\n  int *getp = geta1();\n  *getp = 100;\n  free(getp);   //getp指向了划分的堆区域，因此释放即可\n}\n\n\n```\n\n**理解下面程序**\n~~这个程序本质上有错误，具体的修改见下面的一个程序~~\n```c\n#include<stdio.h>\n#include<stdlib.h>\n\nvoid getheap(int  *a)\n{\n  a = malloc(sizeof(int) * 10);\n}\n\nint main()\n{\n  int *p =NULL;\n  gatheap(p);  //实参没有任何改变，相当于这里的p一直没有任何改变\n\n  p[0] = 1;\n  p[1] = 2;\n  printf(\"p[0] = %d ,p[1] = %d\\n\",p[0],p[1]);\n  free(p);\n}\n```\n\n![函数图形化解析]($resource/%E5%87%BD%E6%95%B0%E5%9B%BE%E5%BD%A2%E5%8C%96%E8%A7%A3%E6%9E%90.png)\n\n从这程序中可以看出：也就是说a的值改了，a本身是在栈里面的，它只是指向堆里面的一个空间地址；然后实参p的值一直没有变化\ngetheap在执行完之后，a就消失了，导致他指向的具体堆空间的地址编号也随之消失了；\n\n**修改**\n\n```c\n#include<stdio.h>\n#include<stdlib.h>\n\nvoid  getheap(int  **a)\n  {\n     *a  =  malloc(sizeof(int) * 10);  //这里的*a就是指针p中的值了，\n  }\n\n/*\n  int **a = &p;等价于\n  int **a;\n  a = &p\n\n*/\n\n\n\nint  main()\n{\n  int  *p  =NULL;\n  getheap(&p);  //传递的是P的地址\n  p[0]  =  1;\n  p[1]  =  2;\n  printf(\"p[0]  =  %d  ,p[1]  =  %d\\n\",p[0],p[1]);\n  free(p);\n  return  0;\n\n}\n```\n\n程序的分析图片：\n\n![堆和栈地址]($resource/%E5%A0%86%E5%92%8C%E6%A0%88%E5%9C%B0%E5%9D%80.png)\n\n\n\n### 三、内存模型详解以及Linux系统堆内存大小的分析\n\n**1.栈和堆的比较**\n\n- 栈(stack)\n - 明确知道数据占用多好内存\n - 数据很少 \n - 变量离开作用范围后，栈上的数据会自动释放\n - 栈的最大尺寸固定，超过则引起栈溢出\n  \n- 堆(heap)\n  - 需要大量内存的时候\n  - 不知道需要多少内存 \n\n```c\n//在堆中可以建立一个动态的数组\n\n#include<stdio.h>\n\nint main()\n{\n\n  int i ;\n  scanf(\"%d\",&i);\n  int *array = malloc(sizeof(int) * i);\n  free(array);\n\n\n}\n```\n\n---\n\n**2.堆的分配和释放**\n\n内存的最小单位是字节，但是操作系统在管理内存的时候，最小的单位是内存页（32位操作系统中每一页为4k ）\n\n---\n\n**3.malloc和calloc和realloc**\n\n- **malloc**\n```c\n#include<stdio.h>\n#include<stdio.h>\nint main()\n{\n  char *p = malloc(10);//分配一个10个字节的空间,但是这10个空间没有清理过，所以每次使用可能都是10个随机数\n\n  memset(p,0,10); //这里含义是将p 中的10个元素全部置零\n  int i = 0;\n  for(i = 0; i < 10; i++)\n  {\n    printf(\"%d\\n\",p[i]);\n  }\n  free(p);\n  return 0;\n}\n```\n\n- **calloc**\n\n```c\n#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n\nint main()\n{\n  char *p = calloc(10,sizeof(char));//分配10个大小为sizeof（char）的空间，并且自动全部置零\n  int i = 0;\n  for(i = 0; i < 10; i++)\n  {\n    printf(\"%d\\n\",p[i]);\n  }\n  return 0;\n  free(p);\n}\n```\n\n- **realloc**\n\n如果已分配的空间不够用，需要划分出一块新的内存空间，要求是这块内存空间和原来已划分的空间是连续的；\n```c\n#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n\nint main()\n{\n  char *p = calloc(10,sizeof(char));//这10个空间是置零了的\n  char *p1 = realloc(p,20);\n  //参数含义：需要扩展的空间名，需要扩展后的空间为20个字节\n  //语句含义：在原有内存基础之上，在堆中间增加连续的内存；如果原有的内存没有连续的空间可拓展，那么会分配一个空间，将原有的内存copy到新空间，然后释放\n  //新开辟的这10个字节空间是没有置零的\n\n  int i = 0;\n  for(i = 0; i < 20; i++)\n  {\n    printf(\"%d\\n\",p1[i]); //这里的p也需要改为p1\n  }\n  return 0;\n  free(p1);  //这里释放的是p1\n}\n```\n\n当要减少原来已划分的空间的时候\n```c\n#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n\nint main()\n{\n  char *p = calloc(10,sizeof(char));//这10个空间是置零了的\n  char *p1 = realloc(p,5);\n  \n  int i = 0;\n  for(i = 0; i < 5; i++)\n  {\n    printf(\"%d\\n\",p1[i]); //这里的p也需要改为p1\n  }\n  return 0;\n  free(p1);  //这里释放的是p1\n}\n```\n\n当`realloc`的第一个参数为空的时候，即：`realloc (NULL,5)`等效于`malloc(5)`\n\n\n\n",[[1538055868542,["gjx16@GJXAIOU",[[1,4494," "]],[4494,4494],[4495,4495]]],[1538056097375,["gjx16@GJXAIOU",[[1,5528,"\n"]],[5525,5525],[5526,5526]]],[1538056097539,["gjx16@GJXAIOU",[[1,5529,"\n"]],[5526,5526],[5527,5527]]],[1538056111037,["gjx16@GJXAIOU",[[1,5527,"****"]],[5527,5527],[5529,5529]]],[1538056122143,["gjx16@GJXAIOU",[[1,5529,"二级指针分派堆空间"]],[5529,5529],[5538,5538]]],[1538056127875,["gjx16@GJXAIOU",[[1,5529,"4."]],[5529,5529],[5531,5531]]],[1538056131876,["gjx16@GJXAIOU",[[1,5545,"\n"]],[5542,5542],[5543,5543]]],[1538056133173,["gjx16@GJXAIOU",[[1,5546,"\n"]],[5543,5543],[5544,5544]]],[1538056140719,["gjx16@GJXAIOU",[[1,5544,"如果是通过医德"]],[5544,5544],[5551,5551]]],[1538056142001,["gjx16@GJXAIOU",[[-1,5549,"医德"]],[5551,5551],[5549,5549]]],[1538056163169,["gjx16@GJXAIOU",[[1,5549,"一个函数的参数给实参分配堆空间的"]],[5549,5549],[5565,5565]]],[1538056165794,["gjx16@GJXAIOU",[[-1,5564,"的"]],[5565,5565],[5564,5564]]],[1538056182315,["gjx16@GJXAIOU",[[1,5564,"内存，那么一定是二级指针的形式"]],[5564,5564],[5579,5579]]],[1538056183074,["gjx16@GJXAIOU",[[1,5582,"\n"]],[5579,5579],[5580,5580]]],[1538056183814,["gjx16@GJXAIOU",[[1,5583,"\n"]],[5580,5580],[5581,5581]]],[1538056185470,["gjx16@GJXAIOU",[[1,5581,"```"]],[5581,5581],[5584,5584]]],[1538056185507,["gjx16@GJXAIOU",[[1,5584,"language\n```\n"]],[5584,5584],[5584,5592]]],[1538056186462,["gjx16@GJXAIOU",[[-1,5584,"language"],[1,5592,"c"]],[5584,5592],[5585,5585]]],[1538056186725,["gjx16@GJXAIOU",[[1,5586,"\n"]],[5585,5585],[5586,5586]]],[1538056191947,["gjx16@GJXAIOU",[[1,5586,"#include<>"]],[5586,5586],[5596,5596]]],[1538056196396,["gjx16@GJXAIOU",[[1,5595,"stdio.h"]],[5595,5595],[5602,5602]]],[1538056198237,["gjx16@GJXAIOU",[[1,5604,"\n"]],[5603,5603],[5604,5604]]]],null,"gjx16@GJXAIOU"],["8830bdd4-d576-4f4f-93d5-a0b44a71e62c",1538114542170,"# day10 内存管理\n@toc\n\n\n## 一、变量作用域\n\n全局变量和局部变量\n\n一个C语言变量的作用域可以是代码块，作用域就是函数作用域或者文件作用域\n代码块：{}之间的一段代码；\n\n**1.文件作用域：**\n\n如果一个变量在其他的代码文件中已经定义了，可以在本程序中使用，但是使用前要使用关键字：extern\n例如：`extern int age` //有一个int型变量age已经在其他文件中定义了，这里就直接使用了；\n\n`static int a  = 0;`//在定义这个变量的文件内部是全局的，但在文件外部不可用\n\n---\n\n**2.auto自动变量**\n\nC语言中所有的局部变量默认中都是auto，，所以`auto`可以省略。不需要关注它在内存中什么时候消失和出现\n`auto int i = 0;`等效于`int i = 0;`\n\n----\n\n**3.register变量**\n`register int i = 0;`  //建议，如果有寄存器空闲的话，就将这个变量放进寄存器中使用，可以加快读取\n\n但是`int *p = &i`//这个语句就会报错，因为放在寄存器中就没有内存地址了\n\n---\n\n**4.动态变量和静态变量**\n\n- 动态变量 \n\n```c\n#include<stdio.h>\n\nvoid myauto()\n{\n  int a = 0;\n  printf(\"a = %d\\n\",a);\n  a++;\n}\n\n\nint main()\n{\n  int i;\n  for(i = 0; i < 5; i++)\n  {\n    myatuo();\n \n  }\n\n}\n```\n\n程序的输出结果为 : \n`a = 0`\n`a = 0`\n`a = 0`\n`a = 0`\n`a = 0`\n                          \n\n- 静态变量\n首先只要整个程序开始执行之后，静态变量是一直存在的，不消失的；\n其次，静态变量值初始化一次，即`static int a = 0;`语句只执行一次\n```c\n#include<s tdio.h>\n\nvoid mystatic()\n{\n  static int a = 0;//整个进程运行过程中一直有效，是在静态区，但是只能mystatic函数内部访问使用\n  printf(\"a = %d\\n\",a);\n  a++;\n\n}\n\nint main()\n{\n  int i = 0;\n  for(i = 0; i < 5; i++)\n  {\n    mystatic();\n  }\n}\n```\n程序运行结果为:\n`a = 0`\n`a = 1`\n`a = 2`\n`a = 3`\n`a = 4`\n\n---\n\n**5.变量和函数是否使用extern的区别**\n\n- 变量 \n  - extern int age;//当age这个变量是在另一个.c文件中时，需要在别的文件中调用这个变量时候使用\n  - int age;    //这包含两个含义：声明一个变量或者定义一个变量\n  \n- 函数（下面两个没有什么区别）\n  - extern void age()\n  - void age()     \n\n\n---\n\n\n## 二、内存四区简介\n\n![内存四区图示]($resource/%E5%86%85%E5%AD%98%E5%9B%9B%E5%8C%BA%E5%9B%BE%E7%A4%BA.png)\n\n- **代码区**\n\n存放可执行的代码；程序被操作系统加载到内存中时候，所有可执行的代码都加载到代码区，==这块内存是不可以在运行期间修改的====；\n\n\n\n- **静态区**\n\n存放所有的==静态变量/常量和全局变量/常量==\n\n\n - **栈区**\n\n栈区是一种先进后出的内存结构，所有的==自动变量、指针，数组、函数的形参==都是由编译器自动放出栈中，当一个自动变量超出其作用域的时候，自动从栈中弹出；\n\n对于自动变量，什么时候入栈和出栈都是系统自动控制的\n\n栈区的大小是可以动态设置的，不过不会特别大，一般大小为XX k，\n\nC语言中函数的参数变量是从右往左入栈的，也就是最右边的参数是最先入栈的\n![栈的图示]($resource/%E6%A0%88%E7%9A%84%E5%9B%BE%E7%A4%BA.png)\n\n**栈溢出**\n当栈空间已满，但是还往栈内存中压变量，这就是栈溢出；\n\n\n- **堆区**\n\n堆和栈一样，是一种在程序运行过程中可以随时修改的内存区域，但是==没有栈那样的先进后出的顺序==，是一个大容器，容量远远大于栈，==堆内存空间的申请和释放需要手工通过代码来完成==；\n\n**分配堆的方法：**\n```c\n#include<stdio.h>\n#include<stdlib.h>   //需要加一个头文件\n\nint main()\n{\n    int *p = malloc(sizeof(int)*10);  //语句含义为：在堆中间申请内存，函数的返回值为无类型的指针，参数为size_t无符号的整数   ，现在这个语句的含义是：申请一个内存大小为10个int大小的空间。指针p指向分配出来的堆的地址；\n\n    memset(p ,0,sizeof(int) * 10);  //将分配的这个空间置零初始化\n    free(p);//释放通过malloc分配的堆内存\n    return 0;\n}\n```\n\n\n---\n\n\n**堆和栈的区别**\n\n```c\n#include<stdio.h>\n#include<stdlib.h>\n\nvoid *geta()   //这是错误的，不能将一个栈变量的地址通过函数的返回值返回\n{\n  int a = 0;\n  return &a;\n}\n\n\nvoid *geta1() //可以通过函数的返回值返回一个堆地址，但是一定要free\n{\n  int  *p = malloc(sizeof(int)); //申请了一个堆空间\n  return p;  //返回值为p 即是分配的堆空间的地址\n}\n\n\n\nvoid *gata2()   //这也是合法的，只要将main函数中的geta1改为geta2,然后将free(getp)去掉即可\n{\n  static int a = 0;  //使用static即使a为静态变量，存在于静态区，会一直存在不会被释放\n  return &a;\n}\n\n\n\n\nint main()\n\n{\n  int *getp = geta1();\n  *getp = 100;\n  free(getp);   //getp指向了划分的堆区域，因此释放即可\n}\n\n\n```\n\n**理解下面程序**\n~~这个程序本质上有错误，具体的修改见下面的一个程序~~\n```c\n#include<stdio.h>\n#include<stdlib.h>\n\nvoid getheap(int  *a)\n{\n  a = malloc(sizeof(int) * 10);\n}\n\nint main()\n{\n  int *p =NULL;\n  gatheap(p);  //实参没有任何改变，相当于这里的p一直没有任何改变\n\n  p[0] = 1;\n  p[1] = 2;\n  printf(\"p[0] = %d ,p[1] = %d\\n\",p[0],p[1]);\n  free(p);\n}\n```\n\n![函数图形化解析]($resource/%E5%87%BD%E6%95%B0%E5%9B%BE%E5%BD%A2%E5%8C%96%E8%A7%A3%E6%9E%90.png)\n\n从这程序中可以看出：也就是说a的值改了，a本身是在栈里面的，它只是指向堆里面的一个空间地址；然后实参p的值一直没有变化\ngetheap在执行完之后，a就消失了，导致他指向的具体堆空间的地址编号也随之消失了；\n\n**修改**\n\n```c\n#include<stdio.h>\n#include<stdlib.h>\n\nvoid  getheap(int  **a)\n  {\n     *a  =  malloc(sizeof(int) * 10);  //这里的*a就是指针p中的值了，\n  }\n\n/*\n  int **a = &p;等价于\n  int **a;\n  a = &p\n\n*/\n\n\n\nint  main()\n{\n  int  *p  =NULL;\n  getheap(&p);  //传递的是P的地址\n  p[0]  =  1;\n  p[1]  =  2;\n  printf(\"p[0]  =  %d  ,p[1]  =  %d\\n\",p[0],p[1]);\n  free(p);\n  return  0;\n\n}\n```\n\n程序的分析图片：\n\n![堆和栈地址]($resource/%E5%A0%86%E5%92%8C%E6%A0%88%E5%9C%B0%E5%9D%80.png)\n\n\n\n### 三、内存模型详解以及Linux系统堆内存大小的分析\n\n**1.栈和堆的比较**\n\n- 栈(stack)\n - 明确知道数据占用多好内存\n - 数据很少 \n - 变量离开作用范围后，栈上的数据会自动释放\n - 栈的最大尺寸固定，超过则引起栈溢出\n  \n- 堆(heap)\n  - 需要大量内存的时候\n  - 不知道需要多少内存 \n\n```c\n//在堆中可以建立一个动态的数组\n\n#include<stdio.h>\n\nint main()\n{\n\n  int i ;\n  scanf(\"%d\",&i);\n  int *array = malloc(sizeof(int) * i);\n  free(array);\n\n\n}\n```\n\n---\n\n**2.堆的分配和释放**\n\n内存的最小单位是字节，但是操作系统在管理内存的时候，最小的单位是内存页（32位操作系统中每一页为4k ）\n\n---\n\n**3.malloc和calloc和realloc**\n\n- **malloc**\n```c\n#include<stdio.h>\n#include<stdio.h>\nint main()\n{\n  char *p = malloc(10);//分配一个10个字节的空间,但是这10个空间没有清理过，所以每次使用可能都是10个随机数\n\n  memset(p,0,10); //这里含义是将p 中的10个元素全部置零\n  int i = 0;\n  for(i = 0; i < 10; i++)\n  {\n    printf(\"%d\\n\",p[i]);\n  }\n  free(p);\n  return 0;\n}\n```\n\n- **calloc**\n\n```c\n#include<stdio.h>\n#include<stdlib.h>\n#include<string.h >\n\nint main()\n{\n  char *p = calloc(10,sizeof(char));//分配10个大小为sizeof（char）的空间，并且自动全部置零\n  int i = 0;\n  for(i = 0; i < 10; i++)\n  {\n    printf(\"%d\\n\",p[i]);\n  }\n  return 0;\n  free(p);\n}\n```\n\n- **realloc**\n\n如果已分配的空间不够用，需要划分出一块新的内存空间，要求是这块内存空间和原来已划分的空间是连续的；\n```c\n#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n\nint main()\n{\n  char *p = calloc(10,sizeof(char));//这10个空间是置零了的\n  char *p1 = realloc(p,20);\n  //参数含义：需要扩展的空间名，需要扩展后的空间为20个字节\n  //语句含义：在原有内存基础之上，在堆中间增加连续的内存；如果原有的内存没有连续的空间可拓展，那么会分配一个空间，将原有的内存copy到新空间，然后释放\n  //新开辟的这10个字节空间是没有置零的\n\n  int i = 0;\n  for(i = 0; i < 20; i++)\n  {\n    printf(\"%d\\n\",p1[i]); //这里的p也需要改为p1\n  }\n  return 0;\n  free(p1);  //这里释放的是p1\n}\n```\n\n当要减少原来已划分的空间的时候\n```c\n#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n\nint main()\n{\n  char *p = calloc(10,sizeof(char));//这10个空间是置零了的\n  char *p1 = realloc(p,5);\n  \n  int i = 0;\n  for(i = 0; i < 5; i++)\n  {\n    printf(\"%d\\n\",p1[i]); //这里的p也需要改为p1\n  }\n  return 0;\n  free(p1);  //这里释放的是p1\n}\n```\n\n当`realloc`的第一个参数为空的时候，即：`realloc (NULL,5)`等效于`malloc(5)`\n\n\n**4.二级指针分派堆空间**\n\n如果是通过一个函数的参数给实参分配堆空间内存，那么一定是二级指针的形式\n\n```c\n#include<stdio.h>\n\n```\n\n\n\n",[[1538114503866,["gjx16@GJXAIOU",[[1,5605,"\n"]],[5603,5603],[5604,5604]]],[1538114510188,["gjx16@GJXAIOU",[[1,5606,"\n"]],[5604,5604],[5605,5605]]],[1538114539387,["gjx16@GJXAIOU",[[1,5605,"void geth"]],[5605,5605],[5614,5614]]],[1538114545561,["gjx16@GJXAIOU",[[1,5617,"1()"]],[5617,5617],[5620,5620]]],[1538114550276,["gjx16@GJXAIOU",[[1,5619,"int  **p"]],[5619,5619],[5627,5627]]],[1538114551982,["gjx16@GJXAIOU",[[1,5630,"\n"]],[5628,5628],[5629,5629]]],[1538114567606,["gjx16@GJXAIOU",[[1,5631,"\n"]],[5628,5628],[5629,5629]]],[1538114571656,["gjx16@GJXAIOU",[[1,5629,"{}"]],[5629,5629],[5631,5631]]],[1538114572799,["gjx16@GJXAIOU",[[1,5630,"\n"]],[5630,5630],[5631,5631]]],[1538114572963,["gjx16@GJXAIOU",[[1,5631,"\n"]],[5631,5631],[5632,5632]]],[1538114573143,["gjx16@GJXAIOU",[[1,5632,"\n"]],[5632,5632],[5633,5633]]],[1538114584478,["gjx16@GJXAIOU",[[1,5631,"  *p = malloc();"]],[5631,5631],[5647,5647]]],[1538114588181,["gjx16@GJXAIOU",[[1,5645,"100"]],[5645,5645],[5648,5648]]],[1538114592433,["gjx16@GJXAIOU",[[1,5656,"\n"]],[5653,5653],[5654,5654]]],[1538114595278,["gjx16@GJXAIOU",[[1,5654,"int main()"]],[5654,5654],[5664,5664]]],[1538114595891,["gjx16@GJXAIOU",[[1,5667,"\n"]],[5664,5664],[5665,5665]]],[1538114597500,["gjx16@GJXAIOU",[[1,5665,"{}"]],[5665,5665],[5667,5667]]],[1538114598616,["gjx16@GJXAIOU",[[1,5666,"\n"]],[5666,5666],[5667,5667]]],[1538114598765,["gjx16@GJXAIOU",[[1,5667,"\n"]],[5667,5667],[5668,5668]]],[1538114598956,["gjx16@GJXAIOU",[[1,5668,"\n"]],[5668,5668],[5669,5669]]],[1538114599349,["gjx16@GJXAIOU",[[1,5669,"\n"]],[5669,5669],[5670,5670]]],[1538114661105,[null,[[-1,5614,"\n\n`"],[1,5617,"eap"],[-1,5628,"`"],[1,5629,"\n"],[-1,5653,"`"],[1,5654,"\n"],[1,5674,"```"]],[5614,5614],[5677,5677]]],[1538114661105,[null,[[1,5614,"\n\n`"],[-1,5614,"eap"],[1,5628,"`"],[-1,5628,"\n"],[1,5653,"`"],[-1,5653,"\n"],[-1,5674,"```"]],[5677,5677],[5614,5614]]],[1538114613172,["gjx16@GJXAIOU",[[1,5667,"  int *p = NULL;"]],[5667,5667],[5683,5683]]],[1538114613537,["gjx16@GJXAIOU",[[1,5684,"  \n"]],[5683,5683],[5686,5686]]],[1538114617814,["gjx16@GJXAIOU",[[1,5686,"geath"]],[5686,5686],[5691,5691]]],[1538114621843,["gjx16@GJXAIOU",[[-1,5688,"ath"]],[5691,5691],[5688,5688]]],[1538114628165,["gjx16@GJXAIOU",[[1,5688,"theap()"]],[5688,5688],[5695,5695]]],[1538114631748,["gjx16@GJXAIOU",[[1,5694,"&p"]],[5694,5694],[5696,5696]]],[1538114637892,["gjx16@GJXAIOU",[[1,5697,";"]],[5697,5697],[5698,5698]]],[1538114640366,["gjx16@GJXAIOU",[[1,5699,"  \n"]],[5698,5698],[5701,5701]]],[1538114641009,["gjx16@GJXAIOU",[[-1,5699,"  "],[1,5701,"\n"]],[5701,5701],[5700,5700]]],[1538114643799,["gjx16@GJXAIOU",[[1,5700,"  fe"]],[5700,5700],[5704,5704]]],[1538114644544,["gjx16@GJXAIOU",[[-1,5702,"fe"]],[5704,5704],[5702,5702]]],[1538114646703,["gjx16@GJXAIOU",[[1,5702,"free "]],[5702,5702],[5707,5707]]],[1538114647460,["gjx16@GJXAIOU",[[-1,5706," "]],[5707,5707],[5706,5706]]],[1538114649944,["gjx16@GJXAIOU",[[1,5706,"();"]],[5706,5706],[5709,5709]]],[1538114652144,["gjx16@GJXAIOU",[[1,5707,"["]],[5707,5707],[5708,5708]]],[1538114653528,["gjx16@GJXAIOU",[[-1,5707,"["]],[5708,5708],[5707,5707]]],[1538114654291,["gjx16@GJXAIOU",[[1,5707,"p"]],[5707,5707],[5708,5708]]],[1538114721102,[null,[[-1,5614,"\n\n`"],[1,5617,"eap"],[-1,5628,"`"],[1,5629,"\n"],[-1,5653,"`"],[1,5654,"\n"],[1,5717,"```"]],[5614,5614],[5720,5720]]],[1538114721102,[null,[[1,5614,"\n\n`"],[-1,5614,"eap"],[1,5628,"`"],[-1,5628,"\n"],[1,5653,"`"],[-1,5653,"\n"],[-1,5717,"```"]],[5720,5720],[5614,5614]]],[1538114673496,["gjx16@GJXAIOU",[[1,5698,"//ruguo"]],[5698,5698],[5705,5705]]],[1538114674570,["gjx16@GJXAIOU",[[-1,5700,"ruguo"]],[5705,5705],[5700,5700]]],[1538114708126,["gjx16@GJXAIOU",[[1,5700,"如果是通过一个函数的参数给实参分配堆空间内存，肯定使用二级指针"]],[5700,5700],[5731,5731]]],[1538114841105,[null,[[-1,5614,"\n\n`"],[1,5617,"eap"],[-1,5628,"`"],[1,5629,"\n"],[-1,5653,"`"],[1,5654,"\n"],[1,5750,"```"]],[5614,5614],[5753,5753]]],[1538114841105,[null,[[1,5614,"\n\n`"],[-1,5614,"eap"],[1,5628,"`"],[-1,5628,"\n"],[1,5653,"`"],[-1,5653,"\n"],[-1,5750,"```"]],[5753,5753],[5614,5614]]],[1538114794928,["gjx16@GJXAIOU",[[1,5580,"****"]],[5580,5580],[5582,5582]]],[1538114803919,["gjx16@GJXAIOU",[[1,5582,"正确模型1"]],[5582,5582],[5587,5587]]],[1538114808122,["gjx16@GJXAIOU",[[-1,5754,"\n"]],[5754,5754],[5753,5753]]],[1538114811025,["gjx16@GJXAIOU",[[-1,5757,"\n"]],[5757,5757],[5756,5756]]],[1538115141114,[null,[[-1,5623,"\n\n`"],[1,5626,"eap"],[-1,5637,"`"],[1,5638,"\n"],[-1,5662,"`"],[1,5663,"\n"],[1,5757,"```"]],[5623,5623],[5760,5760]]],[1538115141114,[null,[[1,5623,"\n\n`"],[-1,5623,"eap"],[1,5637,"`"],[-1,5637,"\n"],[1,5662,"`"],[-1,5662,"\n"],[-1,5757,"```"]],[5760,5760],[5623,5623]]],[1538115120479,["gjx16@GJXAIOU",[[1,5764,"\n"]],[5760,5760],[5761,5761]]],[1538115120870,["gjx16@GJXAIOU",[[1,5765,"\n"]],[5761,5761],[5762,5762]]],[1538115123502,["gjx16@GJXAIOU",[[1,5762,"****"]],[5762,5762],[5764,5764]]],[1538115128684,["gjx16@GJXAIOU",[[1,5764,"正确模型2"]],[5764,5764],[5769,5769]]],[1538115130802,["gjx16@GJXAIOU",[[1,5775,"\n"]],[5771,5771],[5772,5772]]],[1538115201115,[null,[[-1,5623,"\n\n`"],[1,5626,"eap"],[-1,5637,"`"],[1,5638,"\n"],[-1,5662,"`"],[1,5663,"\n"],[-1,5757,"\n\n\n"],[1,5760,"```"],[1,5773,"\n\n\n"]],[5623,5623],[5776,5776]]],[1538115201115,[null,[[1,5623,"\n\n`"],[-1,5623,"eap"],[1,5637,"`"],[-1,5637,"\n"],[1,5662,"`"],[-1,5662,"\n"],[1,5757,"\n\n\n"],[-1,5757,"```"],[-1,5773,"\n\n\n"]],[5776,5776],[5623,5623]]],[1538115148742,["gjx16@GJXAIOU",[[1,5773,"·"]],[5773,5773],[5774,5774]]],[1538115149525,["gjx16@GJXAIOU",[[-1,5773,"·"]],[5774,5774],[5773,5773]]],[1538115150504,["gjx16@GJXAIOU",[[1,5773,"```"]],[5773,5773],[5776,5776]]],[1538115150542,["gjx16@GJXAIOU",[[1,5776,"language\n```\n"]],[5776,5776],[5776,5784]]],[1538115151624,["gjx16@GJXAIOU",[[-1,5776,"language"],[1,5784,"c"]],[5776,5784],[5777,5777]]],[1538115151939,["gjx16@GJXAIOU",[[1,5778,"\n"]],[5777,5777],[5778,5778]]],[1538115152875,["gjx16@GJXAIOU",[[1,5778,"#include<stdio.h>\n\nvoid getheap1(int  **p)\n{\n  *p = malloc(100);\n\n}\nint main()\n{\n  int *p = NULL;\n  getheap(&p);//如果是通过一个函数的参数给实参分配堆空间内存，肯定使用二级指针\n\n  free(p);\n\n}"]],[5778,5778],[5938,5938]]],[1538115261114,[null,[[-1,5623,"\n\n`"],[1,5626,"eap"],[-1,5637,"`"],[1,5638,"\n"],[-1,5662,"`"],[1,5663,"\n"],[-1,5757,"\n\n\n"],[1,5760,"```"],[1,5943,"\n\n\n"]],[5623,5623],[5946,5946]]],[1538115261114,[null,[[1,5623,"\n\n`"],[-1,5623,"eap"],[1,5637,"`"],[-1,5637,"\n"],[1,5662,"`"],[-1,5662,"\n"],[1,5757,"\n\n\n"],[-1,5757,"```"],[-1,5943,"\n\n\n"]],[5946,5946],[5623,5623]]],[1538115213663,["gjx16@GJXAIOU",[[-1,5797,"void"]],[5801,5801],[5797,5797]]],[1538115214772,["gjx16@GJXAIOU",[[1,5797,"int"]],[5797,5797],[5800,5800]]],[1538115218530,["gjx16@GJXAIOU",[[1,5801,"*"]],[5801,5801],[5802,5802]]],[1538115224116,["gjx16@GJXAIOU",[[-1,5811,"int  **p"]],[5819,5819],[5811,5811]]],[1538115231789,["gjx16@GJXAIOU",[[-1,5817,"*p = "]],[5822,5822],[5817,5817]]],[1538115235853,["gjx16@GJXAIOU",[[1,5817,"return = "]],[5817,5817],[5826,5826]]],[1538115381113,[null,[[-1,5623,"\n\n`"],[1,5626,"eap"],[-1,5637,"`"],[1,5638,"\n"],[-1,5662,"`"],[1,5663,"\n"],[-1,5757,"\n\n\n"],[1,5760,"```"],[1,5939,"\n\n\n"]],[5623,5623],[5942,5942]]],[1538115381113,[null,[[1,5623,"\n\n`"],[-1,5623,"eap"],[1,5637,"`"],[-1,5637,"\n"],[1,5662,"`"],[-1,5662,"\n"],[1,5757,"\n\n\n"],[-1,5757,"```"],[-1,5939,"\n\n\n"]],[5942,5942],[5623,5623]]],[1538115331235,["gjx16@GJXAIOU",[[-1,5873," getheap(&p);//如果是通过一个函数的参数给实参分配堆空间内存，肯定使用二级指针"]],[5873,5919],[5873,5873]]],[1538115332717,["gjx16@GJXAIOU",[[-1,5872," "],[1,5873,"\n"]],[5873,5873],[5873,5873]]],[1538115347872,["gjx16@GJXAIOU",[[1,5873,"  p = getheap2();"]],[5873,5873],[5890,5890]]],[1538115441116,[null,[[-1,5623,"\n\n`"],[1,5626,"eap"],[-1,5637,"`"],[1,5638,"\n"],[-1,5662,"`"],[1,5663,"\n"],[-1,5757,"\n\n\n"],[1,5760,"```"],[1,5910,"\n\n\n"]],[5623,5623],[5913,5913]]],[1538115441116,[null,[[1,5623,"\n\n`"],[-1,5623,"eap"],[1,5637,"`"],[-1,5637,"\n"],[1,5662,"`"],[-1,5662,"\n"],[1,5757,"\n\n\n"],[-1,5757,"```"],[-1,5910,"\n\n\n"]],[5913,5913],[5623,5623]]],[1538115404432,["gjx16@GJXAIOU",[[-1,5809,"1"]],[5810,5810],[5809,5809]]],[1538115404890,["gjx16@GJXAIOU",[[1,5809,"2"]],[5809,5809],[5810,5810]]],[1538115561179,[null,[[-1,5623,"\n\n`"],[1,5626,"eap"],[-1,5637,"`"],[1,5638,"\n"],[-1,5662,"`"],[1,5663,"\n"],[-1,5757,"\n\n\n"],[1,5760,"```"],[1,5910,"\n\n\n"]],[5623,5623],[5913,5913]]],[1538115561179,[null,[[1,5623,"\n\n`"],[-1,5623,"eap"],[1,5637,"`"],[-1,5637,"\n"],[1,5662,"`"],[-1,5662,"\n"],[1,5757,"\n\n\n"],[-1,5757,"```"],[-1,5910,"\n\n\n"]],[5913,5913],[5623,5623]]],[1538115546437,["gjx16@GJXAIOU",[[1,5913,"\n"]],[5910,5910],[5911,5911]]],[1538115547804,["gjx16@GJXAIOU",[[1,5911,"****"]],[5911,5911],[5913,5913]]],[1538115549292,["gjx16@GJXAIOU",[[1,5913,"cuowu"]],[5913,5913],[5918,5918]]],[1538115550341,["gjx16@GJXAIOU",[[-1,5913,"cuowu"]],[5918,5918],[5913,5913]]],[1538115558217,["gjx16@GJXAIOU",[[1,5913,"错误的模型1"]],[5913,5913],[5919,5919]]],[1538115559527,["gjx16@GJXAIOU",[[1,5924,"\n"]],[5921,5921],[5922,5922]]],[1538115561059,["gjx16@GJXAIOU",[[1,5925,"\n"]],[5922,5922],[5923,5923]]],[1538115621166,[null,[[-1,5623,"\n\n`"],[1,5626,"eap"],[-1,5637,"`"],[1,5638,"\n"],[-1,5662,"`"],[1,5663,"\n"],[-1,5757,"\n\n\n"],[1,5760,"```"],[1,5923,"\n\n\n"]],[5623,5623],[5926,5926]]],[1538115621166,[null,[[1,5623,"\n\n`"],[-1,5623,"eap"],[1,5637,"`"],[-1,5637,"\n"],[1,5662,"`"],[-1,5662,"\n"],[1,5757,"\n\n\n"],[-1,5757,"```"],[-1,5923,"\n\n\n"]],[5926,5926],[5623,5623]]],[1538115561251,["gjx16@GJXAIOU",[[1,5923,"·"]],[5923,5923],[5924,5924]]],[1538115561909,["gjx16@GJXAIOU",[[-1,5923,"·"]],[5924,5924],[5923,5923]]],[1538115562645,["gjx16@GJXAIOU",[[1,5923,"··"]],[5923,5923],[5925,5925]]],[1538115563341,["gjx16@GJXAIOU",[[-1,5923,"··"]],[5925,5925],[5923,5923]]],[1538115564435,["gjx16@GJXAIOU",[[1,5923,"```"]],[5923,5923],[5926,5926]]],[1538115564471,["gjx16@GJXAIOU",[[1,5926,"language\n```\n"]],[5926,5926],[5926,5934]]],[1538115565236,["gjx16@GJXAIOU",[[-1,5926,"language"],[1,5934,"c"]],[5926,5934],[5927,5927]]],[1538115565482,["gjx16@GJXAIOU",[[1,5928,"\n"]],[5927,5927],[5928,5928]]],[1538115574002,["gjx16@GJXAIOU",[[1,5928,"#include<stdio.h>\n\nint *getheap2()\n{\n  return = malloc(100);\n\n}\nint main()\n{\n  int *p = NULL;\n\n  p = getheap2();\n\n  free(p);\n\n}"]],[5928,5928],[6055,6055]]],[1538115603384,["gjx16@GJXAIOU",[[-1,5955,"heap2"]],[5960,5960],[5955,5955]]],[1538115606936,["gjx16@GJXAIOU",[[1,5955,"ste"]],[5955,5955],[5958,5958]]],[1538115607950,["gjx16@GJXAIOU",[[-1,5957,"e"]],[5958,5958],[5957,5957]]],[1538115609380,["gjx16@GJXAIOU",[[1,5957,"ring"]],[5957,5957],[5961,5961]]],[1538115615160,["gjx16@GJXAIOU",[[-1,5968,"return = mallo"],[-1,5983,"(100);"]],[5968,5989],[5969,5969]]],[1538115617853,["gjx16@GJXAIOU",[[1,5969,"har *"]],[5969,5969],[5974,5974]]],[1538115619710,["gjx16@GJXAIOU",[[-1,5972," *"]],[5974,5974],[5972,5972]]],[1538115681167,[null,[[-1,5623,"\n\n`"],[1,5626,"eap"],[-1,5637,"`"],[1,5638,"\n"],[-1,5662,"`"],[1,5663,"\n"],[-1,5757,"\n\n\n"],[1,5760,"```"],[1,6044,"\n\n\n"]],[5623,5623],[6047,6047]]],[1538115681167,[null,[[1,5623,"\n\n`"],[-1,5623,"eap"],[1,5637,"`"],[-1,5637,"\n"],[1,5662,"`"],[-1,5662,"\n"],[1,5757,"\n\n\n"],[-1,5757,"```"],[-1,6044,"\n\n\n"]],[6047,6047],[5623,5623]]],[1538115623111,["gjx16@GJXAIOU",[[1,5972," att"]],[5972,5972],[5976,5976]]],[1538115627248,["gjx16@GJXAIOU",[[-1,5974,"tt"]],[5976,5976],[5974,5974]]],[1538115628917,["gjx16@GJXAIOU",[[1,5974,"rrau"]],[5974,5974],[5978,5978]]],[1538115629846,["gjx16@GJXAIOU",[[-1,5977,"u"]],[5978,5978],[5977,5977]]],[1538115631028,["gjx16@GJXAIOU",[[1,5977,"yp"]],[5977,5977],[5979,5979]]],[1538115631915,["gjx16@GJXAIOU",[[-1,5978,"p"]],[5979,5979],[5978,5978]]],[1538115638980,["gjx16@GJXAIOU",[[1,5978,"[10] = \"\""]],[5978,5978],[5987,5987]]],[1538115644874,["gjx16@GJXAIOU",[[1,5986,"hell["]],[5986,5986],[5991,5991]]],[1538115645900,["gjx16@GJXAIOU",[[-1,5990,"["]],[5991,5991],[5990,5990]]],[1538115647338,["gjx16@GJXAIOU",[[1,5990,"p"]],[5990,5990],[5991,5991]]],[1538115648354,["gjx16@GJXAIOU",[[-1,5990,"p"]],[5991,5991],[5990,5990]]],[1538115649121,["gjx16@GJXAIOU",[[1,5990,"o"]],[5990,5990],[5991,5991]]],[1538115651964,["gjx16@GJXAIOU",[[1,5992,";"]],[5992,5992],[5993,5993]]],[1538115652368,["gjx16@GJXAIOU",[[1,5994,"  \n"]],[5993,5993],[5996,5996]]],[1538115678941,["gjx16@GJXAIOU",[[1,5996,"return array;"]],[5996,5996],[6009,6009]]],[1538115741276,[null,[[-1,5623,"\n\n`"],[1,5626,"eap"],[-1,5637,"`"],[1,5638,"\n"],[-1,5662,"`"],[1,5663,"\n"],[-1,5757,"\n\n\n"],[1,5760,"```"],[1,6081,"\n\n\n"]],[5623,5623],[6084,6084]]],[1538115741276,[null,[[1,5623,"\n\n`"],[-1,5623,"eap"],[1,5637,"`"],[-1,5637,"\n"],[1,5662,"`"],[-1,5662,"\n"],[1,5757,"\n\n\n"],[-1,5757,"```"],[-1,6081,"\n\n\n"]],[6084,6084],[5623,5623]]],[1538115689992,["gjx16@GJXAIOU",[[-1,6028,"int *p = NULL;\n\n  p = getheap2();"],[1,6061,"c"]],[6028,6061],[6029,6029]]],[1538115703566,["gjx16@GJXAIOU",[[1,6029,"har *s = getstring();"]],[6029,6029],[6050,6050]]],[1538115703902,["gjx16@GJXAIOU",[[1,6051,"  \n"]],[6050,6050],[6053,6053]]],[1538115710152,["gjx16@GJXAIOU",[[1,6053,"printf();"]],[6053,6053],[6062,6062]]],[1538115714407,["gjx16@GJXAIOU",[[1,6060,"\"\""]],[6060,6060],[6062,6062]]],[1538115721936,["gjx16@GJXAIOU",[[1,6061,"%s\\n"]],[6061,6061],[6065,6065]]],[1538115725871,["gjx16@GJXAIOU",[[1,6066,",a"]],[6066,6066],[6068,6068]]],[1538115726525,["gjx16@GJXAIOU",[[-1,6067,"a"]],[6068,6068],[6067,6067]]],[1538115726666,["gjx16@GJXAIOU",[[1,6067,"s"]],[6067,6067],[6068,6068]]],[1538115733840,["gjx16@GJXAIOU",[[1,6061,"s = "]],[6061,6061],[6065,6065]]],[1538115737529,["gjx16@GJXAIOU",[[1,6075,"  \n"]],[6074,6074],[6077,6077]]],[1538115740814,["gjx16@GJXAIOU",[[-1,6090,"\n"]],[6090,6090],[6089,6089]]],[1538115741133,["gjx16@GJXAIOU",[[-1,6087,");"]],[6089,6089],[6087,6087]]],[1538115801260,[null,[[-1,5623,"\n\n`"],[1,5626,"eap"],[-1,5637,"`"],[1,5638,"\n"],[-1,5662,"`"],[1,5663,"\n"],[-1,5757,"\n\n\n"],[1,5760,"```"],[1,6094,"\n\n\n"]],[5623,5623],[6097,6097]]],[1538115801260,[null,[[1,5623,"\n\n`"],[-1,5623,"eap"],[1,5637,"`"],[-1,5637,"\n"],[1,5662,"`"],[-1,5662,"\n"],[1,5757,"\n\n\n"],[-1,5757,"```"],[-1,6094,"\n\n\n"]],[6097,6097],[5623,5623]]],[1538115742658,["gjx16@GJXAIOU",[[-1,6079,"  free(p"]],[6087,6087],[6079,6079]]],[1538115742851,["gjx16@GJXAIOU",[[-1,6079,"\n"]],[6079,6079],[6078,6078]]],[1538115743041,["gjx16@GJXAIOU",[[-1,6078,"\n"]],[6078,6078],[6077,6077]]],[1538115745701,["gjx16@GJXAIOU",[[1,6077,"reru"]],[6077,6077],[6081,6081]]],[1538115747124,["gjx16@GJXAIOU",[[-1,6079,"ru"]],[6081,6081],[6079,6079]]],[1538115749925,["gjx16@GJXAIOU",[[1,6079,"turn 0;"]],[6079,6079],[6086,6086]]],[1538115760544,["gjx16@GJXAIOU",[[1,6050,"//dang"]],[6050,6050],[6056,6056]]],[1538115761808,["gjx16@GJXAIOU",[[-1,6052,"dang"]],[6056,6056],[6052,6052]]],[1538115773294,["gjx16@GJXAIOU",[[1,6052,"当getarray（）"]],[6052,6052],[6063,6063]]],[1538115774182,["gjx16@GJXAIOU",[[-1,6061,"（）"]],[6063,6063],[6061,6061]]],[1538115800558,["gjx16@GJXAIOU",[[1,6061,"()这个语句执行完之后，因为数组a"]],[6061,6061],[6078,6078]]],[1538115861266,[null,[[-1,5623,"\n\n`"],[1,5626,"eap"],[-1,5637,"`"],[1,5638,"\n"],[-1,5662,"`"],[1,5663,"\n"],[-1,5757,"\n\n\n"],[1,5760,"```"],[1,6121,"\n\n\n"]],[5623,5623],[6124,6124]]],[1538115861266,[null,[[1,5623,"\n\n`"],[-1,5623,"eap"],[1,5637,"`"],[-1,5637,"\n"],[1,5662,"`"],[-1,5662,"\n"],[1,5757,"\n\n\n"],[-1,5757,"```"],[-1,6121,"\n\n\n"]],[6124,6124],[5623,5623]]],[1538115819328,["gjx16@GJXAIOU",[[1,6078,"rray是存放在栈中，地址就释放了"]],[6078,6078],[6095,6095]]],[1538116041268,[null,[[-1,5623,"\n\n`"],[1,5626,"eap"],[-1,5637,"`"],[1,5638,"\n"],[-1,5662,"`"],[1,5663,"\n"],[-1,5757,"\n\n\n"],[1,5760,"```"],[1,6138,"\n\n\n"]],[5623,5623],[6141,6141]]],[1538116041268,[null,[[1,5623,"\n\n`"],[-1,5623,"eap"],[1,5637,"`"],[-1,5637,"\n"],[1,5662,"`"],[-1,5662,"\n"],[1,5757,"\n\n\n"],[-1,5757,"```"],[-1,6138,"\n\n\n"]],[6141,6141],[5623,5623]]],[1538115981445,["gjx16@GJXAIOU",[[1,6141,"\n"]],[6137,6137],[6138,6138]]],[1538115991016,["gjx16@GJXAIOU",[[1,6138,"程序运行结果为乱码"]],[6138,6138],[6147,6147]]],[1538133060391,[null,[[-1,5623,"\n\n`"],[1,5626,"eap"],[-1,5637,"`"],[1,5638,"\n"],[-1,5662,"`"],[1,5663,"\n"],[-1,5757,"\n\n\n"],[1,5760,"```"],[1,6148,"\n\n\n"]],[5623,5623],[6151,6151]]],[1538133060391,[null,[[1,5623,"\n\n`"],[-1,5623,"eap"],[1,5637,"`"],[-1,5637,"\n"],[1,5662,"`"],[-1,5662,"\n"],[1,5757,"\n\n\n"],[-1,5757,"```"],[-1,6148,"\n\n\n"]],[6151,6151],[5623,5623]]],[1538133041713,["gjx16@GJXAIOU",[[1,5911,"\n"]],[5910,5910],[5911,5911]]],[1538133044249,["gjx16@GJXAIOU",[[1,5911,"~"]],[5911,5911],[5912,5912]]],[1538133045228,["gjx16@GJXAIOU",[[-1,5911,"~"]],[5912,5912],[5911,5911]]],[1538133048244,["gjx16@GJXAIOU",[[1,5911,"`z"]],[5911,5911],[5913,5913]]],[1538133049594,["gjx16@GJXAIOU",[[-1,5911,"`z"]],[5913,5913],[5911,5911]]],[1538133054115,["gjx16@GJXAIOU",[[1,5911,"****"]],[5911,5911],[5913,5913]]],[1538133054798,["gjx16@GJXAIOU",[[1,5913,"z"]],[5913,5913],[5914,5914]]],[1538133055682,["gjx16@GJXAIOU",[[-1,5913,"z"]],[5914,5914],[5913,5913]]],[1538133120388,[null,[[-1,5623,"\n\n`"],[1,5626,"eap"],[-1,5637,"`"],[1,5638,"\n"],[-1,5662,"`"],[1,5663,"\n"],[-1,5757,"\n\n\n"],[1,5760,"```"],[1,6153,"\n\n\n"]],[5623,5623],[6156,6156]]],[1538133120388,[null,[[1,5623,"\n\n`"],[-1,5623,"eap"],[1,5637,"`"],[-1,5637,"\n"],[1,5662,"`"],[-1,5662,"\n"],[1,5757,"\n\n\n"],[-1,5757,"```"],[-1,6153,"\n\n\n"]],[6156,6156],[5623,5623]]],[1538133066989,["gjx16@GJXAIOU",[[1,5913,"正确模型3："]],[5913,5913],[5919,5919]]],[1538133069635,["gjx16@GJXAIOU",[[1,5922,"\n"]],[5921,5921],[5922,5922]]],[1538133072197,["gjx16@GJXAIOU",[[1,5923,"\n"]],[5922,5922],[5923,5923]]],[1538133075495,["gjx16@GJXAIOU",[[1,5923,"```c"]],[5923,5923],[5927,5927]]],[1538133075823,["gjx16@GJXAIOU",[[1,5928,"\n"]],[5927,5927],[5928,5928]]],[1538133076007,["gjx16@GJXAIOU",[[1,5929,"\n"]],[5928,5928],[5929,5929]]],[1538133076361,["gjx16@GJXAIOU",[[1,5930,"\n"]],[5929,5929],[5930,5930]]],[1538133076612,["gjx16@GJXAIOU",[[1,5931,"\n"]],[5930,5930],[5931,5931]]],[1538133076804,["gjx16@GJXAIOU",[[1,5932,"\n"]],[5931,5931],[5932,5932]]],[1538133076962,["gjx16@GJXAIOU",[[1,5933,"\n"]],[5932,5932],[5933,5933]]],[1538133077685,["gjx16@GJXAIOU",[[1,5933,"1"]],[5933,5933],[5934,5934]]],[1538133078698,["gjx16@GJXAIOU",[[-1,5933,"1"]],[5934,5934],[5933,5933]]],[1538133079457,["gjx16@GJXAIOU",[[1,5933,"```"]],[5933,5933],[5936,5936]]],[1538133081227,["gjx16@GJXAIOU",[[1,5937,"\n"]],[5936,5936],[5937,5937]]],[1538133081374,["gjx16@GJXAIOU",[[1,5938,"\n"]],[5937,5937],[5938,5938]]],[1538133092070,["gjx16@GJXAIOU",[[1,5928,"#include<stdio.h>\n\nint *getheap2()\n{\n  return = malloc(100);\n\n}\nint main()\n{\n  int *p = NULL;\n\n  p = getheap2();\n\n  free(p);\n\n}"]],[5928,5928],[6055,6055]]],[1538133105436,["gjx16@GJXAIOU",[[-1,5976,"malloc(100)"],[1,5987,"\""]],[5976,5987],[5977,5977]]],[1538133105620,["gjx16@GJXAIOU",[[1,5977,"\""]],[5977,5977],[5978,5978]]],[1538133108730,["gjx16@GJXAIOU",[[1,5977,"heoo"]],[5977,5977],[5981,5981]]],[1538133109694,["gjx16@GJXAIOU",[[-1,5979,"oo"]],[5981,5981],[5979,5979]]],[1538133110935,["gjx16@GJXAIOU",[[1,5979,"llo"]],[5979,5979],[5982,5982]]],[1538133180393,[null,[[-1,5623,"\n\n`"],[1,5626,"eap"],[-1,5637,"`"],[1,5638,"\n"],[-1,5662,"`"],[1,5663,"\n"],[-1,5757,"\n\n\n"],[1,5760,"```"],[1,6299,"\n\n\n"]],[5623,5623],[6302,6302]]],[1538133180393,[null,[[1,5623,"\n\n`"],[-1,5623,"eap"],[1,5637,"`"],[-1,5637,"\n"],[1,5662,"`"],[-1,5662,"\n"],[1,5757,"\n\n\n"],[-1,5757,"```"],[-1,6299,"\n\n\n"]],[6302,6302],[5623,5623]]],[1538133129137,["gjx16@GJXAIOU",[[-1,6002," int *p = NULL;"],[1,6017,"c"]],[6002,6017],[6003,6003]]],[1538133133901,["gjx16@GJXAIOU",[[1,6003,"onst cahr"]],[6003,6003],[6012,6012]]],[1538133137167,["gjx16@GJXAIOU",[[-1,6009,"ahr"]],[6012,6012],[6009,6009]]],[1538133147630,["gjx16@GJXAIOU",[[1,6009,"har *ss = gerstring"]],[6009,6009],[6028,6028]]],[1538133149178,["gjx16@GJXAIOU",[[-1,6021,"rstring"]],[6028,6028],[6021,6021]]],[1538133161259,["gjx16@GJXAIOU",[[1,6021,"tstring2();"]],[6021,6021],[6032,6032]]],[1538133161702,["gjx16@GJXAIOU",[[1,6033," \n"]],[6032,6032],[6034,6034]]],[1538133163881,["gjx16@GJXAIOU",[[1,6034,"printd"]],[6034,6034],[6040,6040]]],[1538133164935,["gjx16@GJXAIOU",[[-1,6039,"d"]],[6040,6040],[6039,6039]]],[1538133167235,["gjx16@GJXAIOU",[[1,6039,"f();"]],[6039,6039],[6043,6043]]],[1538133173327,["gjx16@GJXAIOU",[[1,6041,"\"\""]],[6041,6041],[6043,6043]]],[1538133175834,["gjx16@GJXAIOU",[[1,6042,"a"]],[6042,6042],[6043,6043]]],[1538133176868,["gjx16@GJXAIOU",[[-1,6042,"a"]],[6043,6043],[6042,6042]]],[1538133179231,["gjx16@GJXAIOU",[[1,6042,"ss = "]],[6042,6042],[6047,6047]]],[1538133240392,[null,[[-1,5623,"\n\n`"],[1,5626,"eap"],[-1,5637,"`"],[1,5638,"\n"],[-1,5662,"`"],[1,5663,"\n"],[-1,5757,"\n\n\n"],[1,5760,"```"],[1,6332,"\n\n\n"]],[5623,5623],[6335,6335]]],[1538133240392,[null,[[1,5623,"\n\n`"],[-1,5623,"eap"],[1,5637,"`"],[-1,5637,"\n"],[1,5662,"`"],[-1,5662,"\n"],[1,5757,"\n\n\n"],[-1,5757,"```"],[-1,6332,"\n\n\n"]],[6335,6335],[5623,5623]]],[1538133187152,["gjx16@GJXAIOU",[[1,6047,"%c\\n"]],[6047,6047],[6051,6051]]],[1538133190359,["gjx16@GJXAIOU",[[1,6052,",c"]],[6052,6052],[6054,6054]]],[1538133194761,["gjx16@GJXAIOU",[[1,6057," \n"]],[6056,6056],[6058,6058]]],[1538133198805,["gjx16@GJXAIOU",[[1,6058,"return o;"]],[6058,6058],[6067,6067]]],[1538133199462,["gjx16@GJXAIOU",[[-1,6065,"o;"]],[6067,6067],[6065,6065]]],[1538133200652,["gjx16@GJXAIOU",[[1,6065,"0;"]],[6065,6065],[6067,6067]]],[1538133206978,["gjx16@GJXAIOU",[[-1,6070," p = getheap2();\n\n  free(p);"]],[6070,6098],[6070,6070]]],[1538133228097,["gjx16@GJXAIOU",[[1,5922,"changlaing"]],[5922,5922],[5932,5932]]],[1538133230680,["gjx16@GJXAIOU",[[-1,5922,"changlaing"]],[5932,5932],[5922,5922]]],[1538133236278,["gjx16@GJXAIOU",[[1,5922,"常量/ji"]],[5922,5922],[5927,5927]]],[1538133236946,["gjx16@GJXAIOU",[[-1,5924,"/ji"]],[5927,5927],[5924,5924]]],[1538133238654,["gjx16@GJXAIOU",[[1,5924,"、"]],[5924,5924],[5925,5925]]],[1538133300403,[null,[[-1,5623,"\n\n`"],[1,5626,"eap"],[-1,5637,"`"],[1,5638,"\n"],[-1,5662,"`"],[1,5663,"\n"],[-1,5757,"\n\n\n"],[1,5760,"```"],[1,6324,"\n\n\n"]],[5623,5623],[6327,6327]]],[1538133300403,[null,[[1,5623,"\n\n`"],[-1,5623,"eap"],[1,5637,"`"],[-1,5637,"\n"],[1,5662,"`"],[-1,5662,"\n"],[1,5757,"\n\n\n"],[-1,5757,"```"],[-1,6324,"\n\n\n"]],[6327,6327],[5623,5623]]],[1538133295900,["gjx16@GJXAIOU",[[1,5925,"静态变量、全局变量都在都在静态区域，一直是有效的"]],[5925,5925],[5949,5949]]],[1538133360400,[null,[[-1,5623,"\n\n`"],[1,5626,"eap"],[-1,5637,"`"],[1,5638,"\n"],[-1,5662,"`"],[1,5663,"\n"],[-1,5757,"\n\n\n"],[1,5760,"```"],[1,6348,"\n\n\n"]],[5623,5623],[6351,6351]]],[1538133360400,[null,[[1,5623,"\n\n`"],[-1,5623,"eap"],[1,5637,"`"],[-1,5637,"\n"],[1,5662,"`"],[-1,5662,"\n"],[1,5757,"\n\n\n"],[-1,5757,"```"],[-1,6348,"\n\n\n"]],[6351,6351],[5623,5623]]],[1538133304589,["gjx16@GJXAIOU",[[1,6011,"、、"]],[6011,6011],[6013,6013]]],[1538133305904,["gjx16@GJXAIOU",[[-1,6011,"、、"]],[6013,6013],[6011,6011]]],[1538133329130,["gjx16@GJXAIOU",[[1,6011,"//可以将一个常量的地址作为函数返回值返回"]],[6011,6011],[6032,6032]]],[1538133420405,[null,[[-1,5623,"\n\n`"],[1,5626,"eap"],[-1,5637,"`"],[1,5638,"\n"],[-1,5662,"`"],[1,5663,"\n"],[-1,5757,"\n\n\n"],[1,5760,"```"],[1,6369,"\n\n\n"]],[5623,5623],[6372,6372]]],[1538133420405,[null,[[1,5623,"\n\n`"],[-1,5623,"eap"],[1,5637,"`"],[-1,5637,"\n"],[1,5662,"`"],[-1,5662,"\n"],[1,5757,"\n\n\n"],[-1,5757,"```"],[-1,6369,"\n\n\n"]],[6372,6372],[5623,5623]]],[1538133361288,["gjx16@GJXAIOU",[[-1,6125,"\n"]],[6125,6125],[6124,6124]]],[1538133361501,["gjx16@GJXAIOU",[[-1,6124,"\n"]],[6124,6124],[6123,6123]]],[1538133361937,["gjx16@GJXAIOU",[[-1,6123,"\n"]],[6123,6123],[6122,6122]]],[1538133365309,["gjx16@GJXAIOU",[[-1,6119,"\n"]],[6119,6119],[6118,6118]]],[1538133365540,["gjx16@GJXAIOU",[[-1,6117," "]],[6118,6118],[6117,6117]]],[1538133366156,["gjx16@GJXAIOU",[[-1,6117,"\n"]],[6117,6117],[6116,6116]]],[1538133480399,[null,[[-1,5623,"\n\n`"],[1,5626,"eap"],[-1,5637,"`"],[1,5638,"\n"],[-1,5662,"`"],[1,5663,"\n"],[-1,5757,"\n\n\n"],[1,5760,"```"],[1,6363,"\n\n\n"]],[5623,5623],[6366,6366]]],[1538133480399,[null,[[1,5623,"\n\n`"],[-1,5623,"eap"],[1,5637,"`"],[-1,5637,"\n"],[1,5662,"`"],[-1,5662,"\n"],[1,5757,"\n\n\n"],[-1,5757,"```"],[-1,6363,"\n\n\n"]],[6366,6366],[5623,5623]]],[1538133426952,["gjx16@GJXAIOU",[[1,6126,"\n"]],[6124,6124],[6125,6125]]],[1538133428277,["gjx16@GJXAIOU",[[1,6125,"****"]],[6125,6125],[6127,6127]]],[1538133430393,["gjx16@GJXAIOU",[[1,6127,"争取"]],[6127,6127],[6129,6129]]],[1538133431650,["gjx16@GJXAIOU",[[-1,6127,"争取"]],[6129,6129],[6127,6127]]],[1538133439036,["gjx16@GJXAIOU",[[1,6127,"正确模型4"]],[6127,6127],[6132,6132]]],[1538133441188,["gjx16@GJXAIOU",[[1,6136,"\n"]],[6134,6134],[6135,6135]]],[1538133443081,["gjx16@GJXAIOU",[[1,6137,"\n"]],[6135,6135],[6136,6136]]],[1538133444441,["gjx16@GJXAIOU",[[1,6136,"···"]],[6136,6136],[6139,6139]]],[1538133445541,["gjx16@GJXAIOU",[[-1,6136,"···"]],[6139,6139],[6136,6136]]],[1538133446878,["gjx16@GJXAIOU",[[1,6136,"```"]],[6136,6136],[6139,6139]]],[1538133447946,["gjx16@GJXAIOU",[[1,6141,"\n"]],[6139,6139],[6140,6140]]],[1538133448119,["gjx16@GJXAIOU",[[1,6142,"\n"]],[6140,6140],[6141,6141]]],[1538133448805,["gjx16@GJXAIOU",[[-1,6142,"\n"]],[6141,6141],[6140,6140]]],[1538133448971,["gjx16@GJXAIOU",[[-1,6141,"\n"]],[6140,6140],[6139,6139]]],[1538133450245,["gjx16@GJXAIOU",[[1,6139,"c"]],[6139,6139],[6140,6140]]],[1538133450594,["gjx16@GJXAIOU",[[1,6142,"\n"]],[6140,6140],[6141,6141]]],[1538133450732,["gjx16@GJXAIOU",[[1,6143,"\n"]],[6141,6141],[6142,6142]]],[1538133450900,["gjx16@GJXAIOU",[[1,6144,"\n"]],[6142,6142],[6143,6143]]],[1538133451054,["gjx16@GJXAIOU",[[1,6145,"\n"]],[6143,6143],[6144,6144]]],[1538133451214,["gjx16@GJXAIOU",[[1,6146,"\n"]],[6144,6144],[6145,6145]]],[1538133452299,["gjx16@GJXAIOU",[[1,6145,"```"]],[6145,6145],[6148,6148]]],[1538133461329,["gjx16@GJXAIOU",[[1,6141,"#include<stdio.h>\n\nint *getheap2()\n{\n  return = \"hello\";//可以将一个常量的地址作为函数返回值返回\n\n}\nint main()\n{\n const char *ss = getstring2();\n printf(\"ss = %c\\n\",c);\n return 0;\n\n}"]],[6141,6141],[6304,6304]]],[1538133467148,["gjx16@GJXAIOU",[[-1,6172,"2"]],[6173,6173],[6172,6172]]],[1538133468740,["gjx16@GJXAIOU",[[1,6172,"4"]],[6172,6172],[6173,6173]]],[1538133475278,["gjx16@GJXAIOU",[[-1,6178,"  return = \"hello\";//可以将一个常量的地址作为函数返回值返回"],[1,6218,"s"]],[6178,6218],[6179,6179]]],[1538133476205,["gjx16@GJXAIOU",[[1,6179,"ta"]],[6179,6179],[6181,6181]]],[1538133477646,["gjx16@GJXAIOU",[[-1,6178,"sta"]],[6181,6181],[6178,6178]]],[1538133479481,["gjx16@GJXAIOU",[[1,6178,"  atat"]],[6178,6178],[6184,6184]]],[1538133540402,[null,[[-1,5623,"\n\n`"],[1,5626,"eap"],[-1,5637,"`"],[1,5638,"\n"],[-1,5662,"`"],[1,5663,"\n"],[-1,5757,"\n\n\n"],[1,5760,"```"],[1,6516,"\n\n\n"]],[5623,5623],[6519,6519]]],[1538133540402,[null,[[1,5623,"\n\n`"],[-1,5623,"eap"],[1,5637,"`"],[-1,5637,"\n"],[1,5662,"`"],[-1,5662,"\n"],[1,5757,"\n\n\n"],[-1,5757,"```"],[-1,6516,"\n\n\n"]],[6519,6519],[5623,5623]]],[1538133481618,["gjx16@GJXAIOU",[[-1,6180,"atat"]],[6184,6184],[6180,6180]]],[1538133493089,["gjx16@GJXAIOU",[[1,6180,"static char array[10] - "]],[6180,6180],[6204,6204]]],[1538133493885,["gjx16@GJXAIOU",[[-1,6202,"- "]],[6204,6204],[6202,6202]]],[1538133499183,["gjx16@GJXAIOU",[[1,6202,"= \"\";"]],[6202,6202],[6207,6207]]],[1538133501951,["gjx16@GJXAIOU",[[1,6205,"hello"]],[6205,6205],[6210,6210]]],[1538133513527,["gjx16@GJXAIOU",[[1,6212,"  //仍然在静态区"]],[6212,6212],[6222,6222]]],[1538133515009,["gjx16@GJXAIOU",[[1,6223,"  \n"]],[6222,6222],[6225,6225]]],[1538133522841,["gjx16@GJXAIOU",[[1,6225,"return array;"]],[6225,6225],[6238,6238]]],[1538133534649,["gjx16@GJXAIOU",[[-1,6267,"*"]],[6268,6268],[6267,6267]]],[1538133535847,["gjx16@GJXAIOU",[[-1,6268,"s"]],[6269,6269],[6268,6268]]],[1538133539143,["gjx16@GJXAIOU",[[1,6267,"*"]],[6267,6267],[6268,6268]]],[1538133600404,[null,[[-1,5623,"\n\n`"],[1,5626,"eap"],[-1,5637,"`"],[1,5638,"\n"],[-1,5662,"`"],[1,5663,"\n"],[-1,5757,"\n\n\n"],[1,5760,"```"],[1,6569,"\n\n\n"]],[5623,5623],[6572,6572]]],[1538133600404,[null,[[1,5623,"\n\n`"],[-1,5623,"eap"],[1,5637,"`"],[-1,5637,"\n"],[1,5662,"`"],[-1,5662,"\n"],[1,5757,"\n\n\n"],[-1,5757,"```"],[-1,6569,"\n\n\n"]],[6572,6572],[5623,5623]]],[1538133542267,["gjx16@GJXAIOU",[[-1,6281,"2"]],[6282,6282],[6281,6281]]],[1538133542574,["gjx16@GJXAIOU",[[1,6281,"4"]],[6281,6281],[6282,6282]]],[1538133552397,["gjx16@GJXAIOU",[[-1,6296,"s"]],[6297,6297],[6296,6296]]],[1538133553836,["gjx16@GJXAIOU",[[-1,6300,"c"]],[6301,6301],[6300,6300]]],[1538133554847,["gjx16@GJXAIOU",[[1,6300,"s"]],[6300,6300],[6301,6301]]],[1538133561424,["gjx16@GJXAIOU",[[-1,6141,"#include<stdio.h>\n\nint *getheap4()\n{\n  static char array[10] = \"hello\";  //仍然在静态区\n  return array;\n\n}\nint main()\n{\n const char *s = getstring4();\n printf(\"s = %s\\n\",c);\n return 0;\n\n}"]],[6141,6322],[6141,6141]]],[1538133563054,["gjx16@GJXAIOU",[[1,6141,"#include<stdio.h>\n\nint *getheap4()\n{\n  static char array[10] = \"hello\";  //仍然在静态区\n  return array;\n\n}\nint main()\n{\n const char *s = getstring4();\n printf(\"s = %s\\n\",c);\n return 0;\n\n}"]],[6141,6141],[6322,6322]]],[1538133660510,[null,[[-1,5623,"\n\n`"],[1,5626,"eap"],[-1,5637,"`"],[1,5638,"\n"],[-1,5662,"`"],[1,5663,"\n"],[-1,5757,"\n\n\n"],[1,5760,"```"],[1,6568,"\n\n\n"]],[5623,5623],[6571,6571]]],[1538133660510,[null,[[1,5623,"\n\n`"],[-1,5623,"eap"],[1,5637,"`"],[-1,5637,"\n"],[1,5662,"`"],[-1,5662,"\n"],[1,5757,"\n\n\n"],[-1,5757,"```"],[-1,6568,"\n\n\n"]],[6571,6571],[5623,5623]]],[1538133627218,["gjx16@GJXAIOU",[[-1,6305,"c"]],[6306,6306],[6305,6305]]],[1538133627738,["gjx16@GJXAIOU",[[1,6305,"s"]],[6305,6305],[6306,6306]]],[1538133648697,["gjx16@GJXAIOU",[[-1,6168,"heap"]],[6172,6172],[6168,6168]]],[1538133652002,["gjx16@GJXAIOU",[[1,6168,"string"]],[6168,6168],[6174,6174]]],[1538133658765,["gjx16@GJXAIOU",[[-1,5982,"heap"]],[5986,5986],[5982,5982]]],[1538133660288,["gjx16@GJXAIOU",[[1,5982,"str"]],[5982,5982],[5985,5985]]],[1538133720504,[null,[[-1,5623,"\n\n`"],[1,5626,"eap"],[-1,5637,"`"],[1,5638,"\n"],[-1,5662,"`"],[1,5663,"\n"],[-1,5757,"\n\n\n"],[1,5760,"```"],[1,6569,"\n\n\n"]],[5623,5623],[6572,6572]]],[1538133720504,[null,[[1,5623,"\n\n`"],[-1,5623,"eap"],[1,5637,"`"],[-1,5637,"\n"],[1,5662,"`"],[-1,5662,"\n"],[1,5757,"\n\n\n"],[-1,5757,"```"],[-1,6569,"\n\n\n"]],[6572,6572],[5623,5623]]],[1538133660833,["gjx16@GJXAIOU",[[1,5986,"ng"]],[5986,5986],[5988,5988]]],[1538133689997,["gjx16@GJXAIOU",[[-1,6329,"\n"]],[6329,6329],[6328,6328]]],[1538133690156,["gjx16@GJXAIOU",[[-1,6328,"\n"]],[6328,6328],[6327,6327]]],[1538133690326,["gjx16@GJXAIOU",[[-1,6327,"\n"]],[6327,6327],[6326,6326]]],[1538133692670,["gjx16@GJXAIOU",[[1,6332,"\n"]],[6330,6330],[6331,6331]]],[1538133693766,["gjx16@GJXAIOU",[[1,6333,"\n"]],[6331,6331],[6332,6332]]],[1538133695421,["gjx16@GJXAIOU",[[1,6332,"cheng"]],[6332,6332],[6337,6337]]],[1538133696838,["gjx16@GJXAIOU",[[-1,6332,"cheng"]],[6337,6337],[6332,6332]]],[1538133711374,["gjx16@GJXAIOU",[[1,6332,"程序输出结果为：`s - "]],[6332,6332],[6345,6345]]],[1538133712183,["gjx16@GJXAIOU",[[-1,6343,"- "]],[6345,6345],[6343,6343]]],[1538133717822,["gjx16@GJXAIOU",[[1,6343," = hello`"]],[6343,6343],[6352,6352]]]],null,"gjx16@GJXAIOU"],["fc1c0a77-e9c7-4942-a4fd-ac62df3df69d",1538831785804,"# day10 内存管理\n@toc\n\n\n## 一、变量作用域\n\n全局变量和局部变量\n\n一个C语言变量的作用域可以是代码块，作用域就是函数作用域或者文件作用域\n代码块：{}之间的一段代码；\n\n**1.文件作用域：**\n\n如果一个变量在其他的代码文件中已经定义了，可以在本程序中使用，但是使用前要使用关键字：extern\n例如：`extern int age` //有一个int型变量age已经在其他文件中定义了，这里就直接使用了；\n\n`static int a  = 0;`//在定义这个变量的文件内部是全局的，但在文件外部不可用\n\n---\n\n**2.auto自动变量**\n\nC语言中所有的局部变量默认中都是auto，，所以`auto`可以省略。不需要关注它在内存中什么时候消失和出现\n`auto int i = 0;`等效于`int i = 0;`\n\n----\n\n**3.register变量**\n`register int i = 0;`  //建议，如果有寄存器空闲的话，就将这个变量放进寄存器中使用，可以加快读取\n\n但是`int *p = &i`//这个语句就会报错，因为放在寄存器中就没有内存地址了\n\n---\n\n**4.动态变量和静态变量**\n\n- 动态变量 \n\n```c\n#include<stdio.h>\n\nvoid myauto()\n{\n  int a = 0;\n  printf(\"a = %d\\n\",a);\n  a++;\n}\n\n\nint main()\n{\n  int i;\n  for(i = 0; i < 5; i++)\n  {\n    myatuo();\n \n  }\n\n}\n```\n\n程序的输出结果为 : \n`a = 0`\n`a = 0`\n`a = 0`\n`a = 0`\n`a = 0`\n                          \n\n- 静态变量\n首先只要整个程序开始执行之后，静态变量是一直存在的，不消失的；\n其次，静态变量值初始化一次，即`static int a = 0;`语句只执行一次\n```c\n#include<s tdio.h>\n\nvoid mystatic()\n{\n  static int a = 0;//整个进程运行过程中一直有效，是在静态区，但是只能mystatic函数内部访问使用\n  printf(\"a = %d\\n\",a);\n  a++;\n\n}\n\nint main()\n{\n  int i = 0;\n  for(i = 0; i < 5; i++)\n  {\n    mystatic();\n  }\n}\n```\n程序运行结果为:\n`a = 0`\n`a = 1`\n`a = 2`\n`a = 3`\n`a = 4`\n\n---\n\n**5.变量和函数是否使用extern的区别**\n\n- 变量 \n  - extern int age;//当age这个变量是在另一个.c文件中时，需要在别的文件中调用这个变量时候使用\n  - int age;    //这包含两个含义：声明一个变量或者定义一个变量\n  \n- 函数（下面两个没有什么区别）\n  - extern void age()\n  - void age()     \n\n\n---\n\n\n## 二、内存四区简介\n\n![内存四区图示]($resource/%E5%86%85%E5%AD%98%E5%9B%9B%E5%8C%BA%E5%9B%BE%E7%A4%BA.png)\n\n- **代码区**\n\n存放可执行的代码；程序被操作系统加载到内存中时候，所有可执行的代码都加载到代码区，==这块内存是不可以在运行期间修改的====；\n\n\n\n- **静态区**\n\n存放所有的==静态变量/常量和全局变量/常量==\n\n\n - **栈区**\n\n栈区是一种先进后出的内存结构，所有的==自动变量、指针，数组、函数的形参==都是由编译器自动放出栈中，当一个自动变量超出其作用域的时候，自动从栈中弹出；\n\n对于自动变量，什么时候入栈和出栈都是系统自动控制的\n\n栈区的大小是可以动态设置的，不过不会特别大，一般大小为XX k，\n\nC语言中函数的参数变量是从右往左入栈的，也就是最右边的参数是最先入栈的\n![栈的图示]($resource/%E6%A0%88%E7%9A%84%E5%9B%BE%E7%A4%BA.png)\n\n**栈溢出**\n当栈空间已满，但是还往栈内存中压变量，这就是栈溢出；\n\n\n- **堆区**\n\n堆和栈一样，是一种在程序运行过程中可以随时修改的内存区域，但是==没有栈那样的先进后出的顺序==，是一个大容器，容量远远大于栈，==堆内存空间的申请和释放需要手工通过代码来完成==；\n\n**分配堆的方法：**\n```c\n#include<stdio.h>\n#include<stdlib.h>   //需要加一个头文件\n\nint main()\n{\n    int *p = malloc(sizeof(int)*10);  //语句含义为：在堆中间申请内存，函数的返回值为无类型的指针，参数为size_t无符号的整数   ，现在这个语句的含义是：申请一个内存大小为10个int大小的空间。指针p指向分配出来的堆的地址；\n\n    memset(p ,0,sizeof(int) * 10);  //将分配的这个空间置零初始化\n    free(p);//释放通过malloc分配的堆内存\n    return 0;\n}\n```\n\n\n---\n\n\n**堆和栈的区别**\n\n```c\n#include<stdio.h>\n#include<stdlib.h>\n\nvoid *geta()   //这是错误的，不能将一个栈变量的地址通过函数的返回值返回\n{\n  int a = 0;\n  return &a;\n}\n\n\nvoid *geta1() //可以通过函数的返回值返回一个堆地址，但是一定要free\n{\n  int  *p = malloc(sizeof(int)); //申请了一个堆空间\n  return p;  //返回值为p 即是分配的堆空间的地址\n}\n\n\n\nvoid *gata2()   //这也是合法的，只要将main函数中的geta1改为geta2,然后将free(getp)去掉即可\n{\n  static int a = 0;  //使用static即使a为静态变量，存在于静态区，会一直存在不会被释放\n  return &a;\n}\n\n\n\n\nint main()\n\n{\n  int *getp = geta1();\n  *getp = 100;\n  free(getp);   //getp指向了划分的堆区域，因此释放即可\n}\n\n\n```\n\n**理解下面程序**\n~~这个程序本质上有错误，具体的修改见下面的一个程序~~\n```c\n#include<stdio.h>\n#include<stdlib.h>\n\nvoid getheap(int  *a)\n{\n  a = malloc(sizeof(int) * 10);\n}\n\nint main()\n{\n  int *p =NULL;\n  gatheap(p);  //实参没有任何改变，相当于这里的p一直没有任何改变\n\n  p[0] = 1;\n  p[1] = 2;\n  printf(\"p[0] = %d ,p[1] = %d\\n\",p[0],p[1]);\n  free(p);\n}\n```\n\n![函数图形化解析]($resource/%E5%87%BD%E6%95%B0%E5%9B%BE%E5%BD%A2%E5%8C%96%E8%A7%A3%E6%9E%90.png)\n\n从这程序中可以看出：也就是说a的值改了，a本身是在栈里面的，它只是指向堆里面的一个空间地址；然后实参p的值一直没有变化\ngetheap在执行完之后，a就消失了，导致他指向的具体堆空间的地址编号也随之消失了；\n\n**修改**\n\n```c\n#include<stdio.h>\n#include<stdlib.h>\n\nvoid  getheap(int  **a)\n  {\n     *a  =  malloc(sizeof(int) * 10);  //这里的*a就是指针p中的值了，\n  }\n\n/*\n  int **a = &p;等价于\n  int **a;\n  a = &p\n\n*/\n\n\n\nint  main()\n{\n  int  *p  =NULL;\n  getheap(&p);  //传递的是P的地址\n  p[0]  =  1;\n  p[1]  =  2;\n  printf(\"p[0]  =  %d  ,p[1]  =  %d\\n\",p[0],p[1]);\n  free(p);\n  return  0;\n\n}\n```\n\n程序的分析图片：\n\n![堆和栈地址]($resource/%E5%A0%86%E5%92%8C%E6%A0%88%E5%9C%B0%E5%9D%80.png)\n\n\n\n### 三、内存模型详解以及Linux系统堆内存大小的分析\n\n**1.栈和堆的比较**\n\n- 栈(stack)\n - 明确知道数据占用多好内存\n - 数据很少 \n - 变量离开作用范围后，栈上的数据会自动释放\n - 栈的最大尺寸固定，超过则引起栈溢出\n  \n- 堆(heap)\n  - 需要大量内存的时候\n  - 不知道需要多少内存 \n\n```c\n//在堆中可以建立一个动态的数组\n\n#include<stdio.h>\n\nint main()\n{\n\n  int i ;\n  scanf(\"%d\",&i);\n  int *array = malloc(sizeof(int) * i);\n  free(array);\n\n\n}\n```\n\n---\n\n**2.堆的分配和释放**\n\n内存的最小单位是字节，但是操作系统在管理内存的时候，最小的单位是内存页（32位操作系统中每一页为4k ）\n\n---\n\n**3.malloc和calloc和realloc**\n\n- **malloc**\n```c\n#include<stdio.h>\n#include<stdio.h>\nint main()\n{\n  char *p = malloc(10);//分配一个10个字节的空间,但是这10个空间没有清理过，所以每次使用可能都是10个随机数\n\n  memset(p,0,10); //这里含义是将p 中的10个元素全部置零\n  int i = 0;\n  for(i = 0; i < 10; i++)\n  {\n    printf(\"%d\\n\",p[i]);\n  }\n  free(p);\n  return 0;\n}\n```\n\n- **calloc**\n\n```c\n#include<stdio.h>\n#include<stdlib.h>\n#include<string.h >\n\nint main()\n{\n  char *p = calloc(10,sizeof(char));//分配10个大小为sizeof（char）的空间，并且自动全部置零\n  int i = 0;\n  for(i = 0; i < 10; i++)\n  {\n    printf(\"%d\\n\",p[i]);\n  }\n  return 0;\n  free(p);\n}\n```\n\n- **realloc**\n\n如果已分配的空间不够用，需要划分出一块新的内存空间，要求是这块内存空间和原来已划分的空间是连续的；\n```c\n#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n\nint main()\n{\n  char *p = calloc(10,sizeof(char));//这10个空间是置零了的\n  char *p1 = realloc(p,20);\n  //参数含义：需要扩展的空间名，需要扩展后的空间为20个字节\n  //语句含义：在原有内存基础之上，在堆中间增加连续的内存；如果原有的内存没有连续的空间可拓展，那么会分配一个空间，将原有的内存copy到新空间，然后释放\n  //新开辟的这10个字节空间是没有置零的\n\n  int i = 0;\n  for(i = 0; i < 20; i++)\n  {\n    printf(\"%d\\n\",p1[i]); //这里的p也需要改为p1\n  }\n  return 0;\n  free(p1);  //这里释放的是p1\n}\n```\n\n当要减少原来已划分的空间的时候\n```c\n#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n\nint main()\n{\n  char *p = calloc(10,sizeof(char));//这10个空间是置零了的\n  char *p1 = realloc(p,5);\n  \n  int i = 0;\n  for(i = 0; i < 5; i++)\n  {\n    printf(\"%d\\n\",p1[i]); //这里的p也需要改为p1\n  }\n  return 0;\n  free(p1);  //这里释放的是p1\n}\n```\n\n当`realloc`的第一个参数为空的时候，即：`realloc (NULL,5)`等效于`malloc(5)`\n\n\n**4.二级指针分派堆空间**\n\n如果是通过一个函数的参数给实参分配堆空间内存，那么一定是二级指针的形式\n**正确模型1**\n```c\n#include<stdio.h>\n\nvoid getheap1(int  **p)\n{\n  *p = malloc(100);\n\n}\nint main()\n{\n  int *p = NULL;\n  getheap(&p);//如果是通过一个函数的参数给实参分配堆空间内存，肯定使用二级指针\n\n  free(p);\n\n}\n\n```\n\n**正确模型2**\n\n```c\n#include<stdio.h>\n\nint *getheap2()\n{\n  return = malloc(100);\n\n}\nint main()\n{\n  int *p = NULL;\n\n  p = getheap2();\n\n  free(p);\n\n}\n```\n\n**正确模型3：**\n常量、静态变量、全局变量都在都在静态区域，一直是有效的\n```c\n#include<stdio.h>\n\nint *getstring2()\n{\n  return = \"hello\";//可以将一个常量的地址作为函数返回值返回\n\n}\nint main()\n{\n const char *ss = getstring2();\n printf(\"ss = %c\\n\",c);\n return 0;\n\n}\n\n```\n\n**正确模型4**\n\n```c\n#include<stdio.h>\n\nint *getstring4()\n{\n  static char array[10] = \"hello\";  //仍然在静态区\n  return array;\n\n}\nint main()\n{\n const char *s = getstring4();\n printf(\"s = %s\\n\",s);\n return 0;\n\n}\n```\n\n程序输出结果为：`s  = hello`\n\n**错误的模型1**\n\n```c\n#include<stdio.h>\n\nint *getstring()\n{\n  char array[10] = \"hello\";\n  return array;\n\n}\nint main()\n{\n  char *s = getstring();//当getarray()这个语句执行完之后，因为数组array是存放在栈中，地址就释放了\n  printf(\"s = %s\\n\",s);\n  return 0;\n}\n```\n程序运行结果为乱码\n\n\n\n",[[1538831727140,["gjx16@GJXAIOU",[[1,152,"`"]],[152,152],[153,153]]],[1538831728142,["gjx16@GJXAIOU",[[1,159,"`"]],[159,159],[160,160]]],[1538833319227,["gjx16@GJXAIOU",[[1,1713,"===="]],[1713,1713],[1715,1715]]],[1538833320357,["gjx16@GJXAIOU",[[-1,1715,"=="]],[1715,1715],[1713,1713]]],[1538833325776,["gjx16@GJXAIOU",[[1,1726,"===="]],[1726,1726],[1728,1728]]],[1538833327465,["gjx16@GJXAIOU",[[-1,1728,"=="]],[1728,1728],[1726,1726]]],[1538833424164,["gjx16@GJXAIOU",[[1,1443,"1."]],[1443,1443],[1445,1445]]],[1538833428595,["gjx16@GJXAIOU",[[1,1524,"2."]],[1524,1524],[1526,1526]]],[1538833431464,["gjx16@GJXAIOU",[[1,1565,"3."]],[1565,1565],[1567,1567]]],[1538833435837,["gjx16@GJXAIOU",[[1,1854,"4."]],[1854,1854],[1856,1856]]],[1538833448797,["gjx16@GJXAIOU",[[1,1957,"4.1."]],[1957,1957],[1961,1961]]],[1538833469862,["gjx16@GJXAIOU",[[1,2290,"4.2."]],[2290,2290],[2294,2294]]],[1538834117715,["gjx16@GJXAIOU",[[1,2304,"\n"]],[2303,2303],[2304,2304]]],[1538834119903,["gjx16@GJXAIOU",[[1,2304,"zhu"]],[2304,2304],[2307,2307]]],[1538834120830,["gjx16@GJXAIOU",[[-1,2304,"zhu"]],[2307,2307],[2304,2304]]],[1538834129778,["gjx16@GJXAIOU",[[1,2304,"注：void *"]],[2304,2304],[2312,2312]]],[1538834165825,["gjx16@GJXAIOU",[[1,2312," 表示无类型指针，可以指向任何数据类型"]],[2312,2312],[2331,2331]]],[1538834167596,["gjx16@GJXAIOU",[[1,2332,"\n"]],[2331,2331],[2332,2332]]],[1538834185062,["gjx16@GJXAIOU",[[1,2332,"【"]],[2332,2332],[2333,2333]]],[1538834186024,["gjx16@GJXAIOU",[[-1,2332,"【"]],[2333,2333],[2332,2332]]],[1538834189228,["gjx16@GJXAIOU",[[1,2332,"[]{}"]],[2332,2332],[2336,2336]]],[1538834191469,["gjx16@GJXAIOU",[[-1,2332,"[]{}"]],[2336,2336],[2332,2332]]],[1538834192683,["gjx16@GJXAIOU",[[1,2332,"["]],[2332,2332],[2333,2333]]],[1538834193856,["gjx16@GJXAIOU",[[1,2334,"("]],[2334,2334],[2335,2335]]],[1538834193896,["gjx16@GJXAIOU",[[1,2335,"https://)"]],[2335,2335],[2335,2343]]],[1538834195524,["gjx16@GJXAIOU",[[1,2343,"blog.csdn.net/geekcome/article/details/6249151"]],[2335,2343],[2389,2389]]],[1538834205236,["gjx16@GJXAIOU",[[1,2333,"# void及void指针含义的深刻解析"]],[2333,2333],[2353,2353]]],[1538834211229,["gjx16@GJXAIOU",[[-1,2333,"# "]],[2335,2335],[2333,2333]]],[1538834228791,["gjx16@GJXAIOU",[[1,2409,"\n"]],[2408,2408],[2409,2409]]],[1538834251441,["gjx16@GJXAIOU",[[1,2409,"[# void (*p)() 、 void *p()和void *（*p）(void)的区别]9"]],[2409,2409],[2457,2457]]],[1538834252471,["gjx16@GJXAIOU",[[-1,2456,"9"]],[2457,2457],[2456,2456]]],[1538834312858,[null,[[-1,2351,"\n"],[1,2352,"]"],[-1,2408,"`"],[1,2409,"\n"],[1,2457,"`"]],[2351,2351],[2458,2458]]],[1538834312858,[null,[[1,2351,"\n"],[-1,2351,"]"],[1,2408,"`"],[-1,2408,"\n"],[-1,2457,"`"]],[2458,2458],[2351,2351]]],[1538834252938,["gjx16@GJXAIOU",[[1,2456,"("]],[2456,2456],[2457,2457]]],[1538834252978,["gjx16@GJXAIOU",[[1,2457,"https://)"]],[2457,2457],[2457,2465]]],[1538834254147,["gjx16@GJXAIOU",[[1,2465,"blog.csdn.net/u010275850/article/details/44067033"]],[2457,2465],[2514,2514]]],[1538834258690,["gjx16@GJXAIOU",[[-1,2410,"# "]],[2412,2412],[2410,2410]]],[1538834280992,["gjx16@GJXAIOU",[[1,2514,"\n"]],[2513,2513],[2514,2514]]],[1538834285720,["gjx16@GJXAIOU",[[1,2514,"[# void *p,void *p()与void (*p)()的区别]("]],[2514,2514],[2551,2551]]],[1538834285764,["gjx16@GJXAIOU",[[1,2551,"https://)"]],[2551,2551],[2551,2559]]],[1538834297761,["gjx16@GJXAIOU",[[1,2559,"blog.csdn.net/icycityone/article/details/17374793"]],[2551,2559],[2608,2608]]],[1538834302257,["gjx16@GJXAIOU",[[-1,2515,"# "]],[2517,2517],[2515,2515]]],[1538834306014,["gjx16@GJXAIOU",[[1,2608,"\n"]],[2607,2607],[2608,2608]]],[1538834372877,[null,[[-1,2351,"\n"],[1,2352,"]"],[-1,2408,"`"],[1,2409,"\n"],[1,2609,"`"]],[2351,2351],[2610,2610]]],[1538834372877,[null,[[1,2351,"\n"],[-1,2351,"]"],[1,2408,"`"],[-1,2408,"\n"],[-1,2609,"`"]],[2610,2610],[2351,2351]]],[1538834320093,["gjx16@GJXAIOU",[[1,2608,"[# void（＊p）（）和void＊p（）区别]"]],[2608,2608],[2633,2633]]],[1538834327664,["gjx16@GJXAIOU",[[-1,2609,"# "]],[2611,2611],[2609,2609]]],[1538834332825,["gjx16@GJXAIOU",[[1,2631,"（https://blog.csdn.net/sunyaoo/article/details/42743883）"]],[2631,2631],[2687,2687]]],[1538834344185,["gjx16@GJXAIOU",[[-1,2630,"]"]],[2631,2631],[2630,2630]]],[1538834346277,["gjx16@GJXAIOU",[[1,2630,"]"]],[2630,2630],[2631,2631]]],[1538834348078,["gjx16@GJXAIOU",[[-1,2631,"（"]],[2632,2632],[2631,2631]]],[1538834351139,["gjx16@GJXAIOU",[[1,2631,"("]],[2631,2631],[2632,2632]]],[1538834351178,["gjx16@GJXAIOU",[[1,2640,")https://"]],[2632,2632],[2632,2640]]],[1538834357486,["gjx16@GJXAIOU",[[-1,2640,")"]],[2641,2641],[2640,2640]]],[1538834360249,["gjx16@GJXAIOU",[[-1,2694,"）"]],[2695,2695],[2694,2694]]],[1538834361887,["gjx16@GJXAIOU",[[1,2694,")"]],[2694,2694],[2695,2695]]]],null,"gjx16@GJXAIOU"],["a778885e-1523-47e6-a082-dffb3905a44b",1539346246603,"# day10 内存管理\n@toc\n\n\n## 一、变量作用域\n\n全局变量和局部变量\n\n一个C语言变量的作用域可以是代码块，作用域就是函数作用域或者文件作用域\n代码块：{}之间的一段代码；\n\n**1.文件作用域：**\n\n如果一个变量在其他的代码文件中已经定义了，可以在本程序中使用，但是使用前要使用关键字：`extern`\n例如：`extern int age` //有一个int型变量age已经在其他文件中定义了，这里就直接使用了；\n\n`static int a  = 0;`//在定义这个变量的文件内部是全局的，但在文件外部不可用\n\n---\n\n**2.auto自动变量**\n\nC语言中所有的局部变量默认中都是auto，，所以`auto`可以省略。不需要关注它在内存中什么时候消失和出现\n`auto int i = 0;`等效于`int i = 0;`\n\n----\n\n**3.register变量**\n`register int i = 0;`  //建议，如果有寄存器空闲的话，就将这个变量放进寄存器中使用，可以加快读取\n\n但是`int *p = &i`//这个语句就会报错，因为放在寄存器中就没有内存地址了\n\n---\n\n**4.动态变量和静态变量**\n\n- 动态变量 \n\n```c\n#include<stdio.h>\n\nvoid myauto()\n{\n  int a = 0;\n  printf(\"a = %d\\n\",a);\n  a++;\n}\n\n\nint main()\n{\n  int i;\n  for(i = 0; i < 5; i++)\n  {\n    myatuo();\n \n  }\n\n}\n```\n\n程序的输出结果为 : \n`a = 0`\n`a = 0`\n`a = 0`\n`a = 0`\n`a = 0`\n                          \n\n- 静态变量\n首先只要整个程序开始执行之后，静态变量是一直存在的，不消失的；\n其次，静态变量值初始化一次，即`static int a = 0;`语句只执行一次\n```c\n#include<s tdio.h>\n\nvoid mystatic()\n{\n  static int a = 0;//整个进程运行过程中一直有效，是在静态区，但是只能mystatic函数内部访问使用\n  printf(\"a = %d\\n\",a);\n  a++;\n\n}\n\nint main()\n{\n  int i = 0;\n  for(i = 0; i < 5; i++)\n  {\n    mystatic();\n  }\n}\n```\n程序运行结果为:\n`a = 0`\n`a = 1`\n`a = 2`\n`a = 3`\n`a = 4`\n\n---\n\n**5.变量和函数是否使用extern的区别**\n\n- 变量 \n  - extern int age;//当age这个变量是在另一个.c文件中时，需要在别的文件中调用这个变量时候使用\n  - int age;    //这包含两个含义：声明一个变量或者定义一个变量\n  \n- 函数（下面两个没有什么区别）\n  - extern void age()\n  - void age()     \n\n\n---\n\n\n## 二、内存四区简介\n\n![内存四区图示]($resource/%E5%86%85%E5%AD%98%E5%9B%9B%E5%8C%BA%E5%9B%BE%E7%A4%BA.png)\n\n- **1.代码区**\n\n存放可执行的代码；程序被操作系统加载到内存中时候，所有可执行的代码都加载到代码区，==这块内存是不可以在运行期间修改的====；\n\n\n\n- **2.静态区**\n\n存放所有的==静态变量/常量和全局变量/常量==\n\n\n - **3.栈区**\n\n栈区是一种先进后出的内存结构，所有的==自动变量、指针，数组、函数的形参==都是由编译器自动放出栈中，当一个自动变量超出其作用域的时候，自动从栈中弹出；\n\n对于自动变量，什么时候入栈和出栈都是系统自动控制的\n\n栈区的大小是可以动态设置的，不过不会特别大，一般大小为XX k，\n\nC语言中函数的==参数变量是从右往左入栈==的，也就是最右边的参数是最先入栈的\n![栈的图示]($resource/%E6%A0%88%E7%9A%84%E5%9B%BE%E7%A4%BA.png)\n\n**栈溢出**\n当栈空间已满，但是还往栈内存中压变量，这就是栈溢出；\n\n\n- **4.堆区**\n\n堆和栈一样，是一种在程序运行过程中可以随时修改的内存区域，但是==没有栈那样的先进后出的顺序==，是一个大容器，容量远远大于栈，==堆内存空间的申请和释放需要手工通过代码来完成==；\n\n**4.1.分配堆的方法：**\n```c\n#include<stdio.h>\n#include<stdlib.h>   //需要加一个头文件\n\nint main()\n{\n    int *p = malloc(sizeof(int)*10);  //语句含义为：在堆中间申请内存，函数的返回值为无类型的指针，参数为size_t无符号的整数   ，现在这个语句的含义是：申请一个内存大小为10个int大小的空间。指针p指向分配出来的堆的地址；\n\n    memset(p ,0,sizeof(int) * 10);  //将分配的这个空间置零初始化\n    free(p);//释放通过malloc分配的堆内存\n    return 0;\n}\n```\n\n\n---\n\n\n**4.2.堆和栈的区别**\n\n注：void * 表示无类型指针，可以指向任何数据类型\n[void及void指针含义的深刻解析](https://blog.csdn.net/geekcome/article/details/6249151)\n[void (*p)() 、 void *p()和void *（*p）(void)的区别](https://blog.csdn.net/u010275850/article/details/44067033)\n[void *p,void *p()与void (*p)()的区别](https://blog.csdn.net/icycityone/article/details/17374793)\n[void（＊p）（）和void＊p（）区别](https://https://blog.csdn.net/sunyaoo/article/details/42743883)\n```c\n#include<stdio.h>\n#include<stdlib.h>\n\nvoid *geta()   //这是错误的，不能将一个栈变量的地址通过函数的返回值返回\n{\n  int a = 0;\n  return &a;\n}\n\n\nvoid *geta1() //可以通过函数的返回值返回一个堆地址，但是一定要free\n{\n  int  *p = malloc(sizeof(int)); //申请了一个堆空间\n  return p;  //返回值为p 即是分配的堆空间的地址\n}\n\n\n\nvoid *gata2()   //这也是合法的，只要将main函数中的geta1改为geta2,然后将free(getp)去掉即可\n{\n  static int a = 0;  //使用static即使a为静态变量，存在于静态区，会一直存在不会被释放\n  return &a;\n}\n\n\n\n\nint main()\n\n{\n  int *getp = geta1();\n  *getp = 100;\n  free(getp);   //getp指向了划分的堆区域，因此释放即可\n}\n\n\n```\n\n**理解下面程序**\n~~这个程序本质上有错误，具体的修改见下面的一个程序~~\n```c\n#include<stdio.h>\n#include<stdlib.h>\n\nvoid getheap(int  *a)\n{\n  a = malloc(sizeof(int) * 10);\n}\n\nint main()\n{\n  int *p =NULL;\n  gatheap(p);  //实参没有任何改变，相当于这里的p一直没有任何改变\n\n  p[0] = 1;\n  p[1] = 2;\n  printf(\"p[0] = %d ,p[1] = %d\\n\",p[0],p[1]);\n  free(p);\n}\n```\n\n![函数图形化解析]($resource/%E5%87%BD%E6%95%B0%E5%9B%BE%E5%BD%A2%E5%8C%96%E8%A7%A3%E6%9E%90.png)\n\n从这程序中可以看出：也就是说a的值改了，a本身是在栈里面的，它只是指向堆里面的一个空间地址；然后实参p的值一直没有变化\ngetheap在执行完之后，a就消失了，导致他指向的具体堆空间的地址编号也随之消失了；\n\n**修改**\n\n```c\n#include<stdio.h>\n#include<stdlib.h>\n\nvoid  getheap(int  **a)\n  {\n     *a  =  malloc(sizeof(int) * 10);  //这里的*a就是指针p中的值了，\n  }\n\n/*\n  int **a = &p;等价于\n  int **a;\n  a = &p\n\n*/\n\n\n\nint  main()\n{\n  int  *p  =NULL;\n  getheap(&p);  //传递的是P的地址\n  p[0]  =  1;\n  p[1]  =  2;\n  printf(\"p[0]  =  %d  ,p[1]  =  %d\\n\",p[0],p[1]);\n  free(p);\n  return  0;\n\n}\n```\n\n程序的分析图片：\n\n![堆和栈地址]($resource/%E5%A0%86%E5%92%8C%E6%A0%88%E5%9C%B0%E5%9D%80.png)\n\n\n\n### 三、内存模型详解以及Linux系统堆内存大小的分析\n\n**1.栈和堆的比较**\n\n- 栈(stack)\n - 明确知道数据占用多好内存\n - 数据很少 \n - 变量离开作用范围后，栈上的数据会自动释放\n - 栈的最大尺寸固定，超过则引起栈溢出\n  \n- 堆(heap)\n  - 需要大量内存的时候\n  - 不知道需要多少内存 \n\n```c\n//在堆中可以建立一个动态的数组\n\n#include<stdio.h>\n\nint main()\n{\n\n  int i ;\n  scanf(\"%d\",&i);\n  int *array = malloc(sizeof(int) * i);\n  free(array);\n\n\n}\n```\n\n---\n\n**2.堆的分配和释放**\n\n内存的最小单位是字节，但是操作系统在管理内存的时候，最小的单位是内存页（32位操作系统中每一页为4k ）\n\n---\n\n**3.malloc和calloc和realloc**\n\n- **malloc**\n```c\n#include<stdio.h>\n#include<stdio.h>\nint main()\n{\n  char *p = malloc(10);//分配一个10个字节的空间,但是这10个空间没有清理过，所以每次使用可能都是10个随机数\n\n  memset(p,0,10); //这里含义是将p 中的10个元素全部置零\n  int i = 0;\n  for(i = 0; i < 10; i++)\n  {\n    printf(\"%d\\n\",p[i]);\n  }\n  free(p);\n  return 0;\n}\n```\n\n- **calloc**\n\n```c\n#include<stdio.h>\n#include<stdlib.h>\n#include<string.h >\n\nint main()\n{\n  char *p = calloc(10,sizeof(char));//分配10个大小为sizeof（char）的空间，并且自动全部置零\n  int i = 0;\n  for(i = 0; i < 10; i++)\n  {\n    printf(\"%d\\n\",p[i]);\n  }\n  return 0;\n  free(p);\n}\n```\n\n- **realloc**\n\n如果已分配的空间不够用，需要划分出一块新的内存空间，要求是这块内存空间和原来已划分的空间是连续的；\n```c\n#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n\nint main()\n{\n  char *p = calloc(10,sizeof(char));//这10个空间是置零了的\n  char *p1 = realloc(p,20);\n  //参数含义：需要扩展的空间名，需要扩展后的空间为20个字节\n  //语句含义：在原有内存基础之上，在堆中间增加连续的内存；如果原有的内存没有连续的空间可拓展，那么会分配一个空间，将原有的内存copy到新空间，然后释放\n  //新开辟的这10个字节空间是没有置零的\n\n  int i = 0;\n  for(i = 0; i < 20; i++)\n  {\n    printf(\"%d\\n\",p1[i]); //这里的p也需要改为p1\n  }\n  return 0;\n  free(p1);  //这里释放的是p1\n}\n```\n\n当要减少原来已划分的空间的时候\n```c\n#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n\nint main()\n{\n  char *p = calloc(10,sizeof(char));//这10个空间是置零了的\n  char *p1 = realloc(p,5);\n  \n  int i = 0;\n  for(i = 0; i < 5; i++)\n  {\n    printf(\"%d\\n\",p1[i]); //这里的p也需要改为p1\n  }\n  return 0;\n  free(p1);  //这里释放的是p1\n}\n```\n\n当`realloc`的第一个参数为空的时候，即：`realloc (NULL,5)`等效于`malloc(5)`\n\n\n**4.二级指针分派堆空间**\n\n如果是通过一个函数的参数给实参分配堆空间内存，那么一定是二级指针的形式\n**正确模型1**\n```c\n#include<stdio.h>\n\nvoid getheap1(int  **p)\n{\n  *p = malloc(100);\n\n}\nint main()\n{\n  int *p = NULL;\n  getheap(&p);//如果是通过一个函数的参数给实参分配堆空间内存，肯定使用二级指针\n\n  free(p);\n\n}\n\n```\n\n**正确模型2**\n\n```c\n#include<stdio.h>\n\nint *getheap2()\n{\n  return = malloc(100);\n\n}\nint main()\n{\n  int *p = NULL;\n\n  p = getheap2();\n\n  free(p);\n\n}\n```\n\n**正确模型3：**\n常量、静态变量、全局变量都在都在静态区域，一直是有效的\n```c\n#include<stdio.h>\n\nint *getstring2()\n{\n  return = \"hello\";//可以将一个常量的地址作为函数返回值返回\n\n}\nint main()\n{\n const char *ss = getstring2();\n printf(\"ss = %c\\n\",c);\n return 0;\n\n}\n\n```\n\n**正确模型4**\n\n```c\n#include<stdio.h>\n\nint *getstring4()\n{\n  static char array[10] = \"hello\";  //仍然在静态区\n  return array;\n\n}\nint main()\n{\n const char *s = getstring4();\n printf(\"s = %s\\n\",s);\n return 0;\n\n}\n```\n\n程序输出结果为：`s  = hello`\n\n**错误的模型1**\n\n```c\n#include<stdio.h>\n\nint *getstring()\n{\n  char array[10] = \"hello\";\n  return array;\n\n}\nint main()\n{\n  char *s = getstring();//当getarray()这个语句执行完之后，因为数组array是存放在栈中，地址就释放了\n  printf(\"s = %s\\n\",s);\n  return 0;\n}\n```\n程序运行结果为乱码\n\n\n\n",[[1539346207616,["gjx16@GJXAIOU",[[1,94," "]],[94,94],[95,95]]],[1539351222440,["gjx16@GJXAIOU",[[1,2332,",tongli"]],[2332,2332],[2339,2339]]],[1539351225076,["gjx16@GJXAIOU",[[-1,2333,"tongli"]],[2339,2339],[2333,2333]]],[1539351259377,["gjx16@GJXAIOU",[[1,2333,"同理，可以使用任意数据类型的指针对voif"]],[2333,2333],[2354,2354]]],[1539351261051,["gjx16@GJXAIOU",[[-1,2353,"f"]],[2354,2354],[2353,2353]]],[1539351270877,["gjx16@GJXAIOU",[[1,2353,"d指针赋值"]],[2353,2353],[2358,2358]]],[1539351273029,["gjx16@GJXAIOU",[[1,2359,"\n"]],[2358,2358],[2359,2359]]],[1539351277441,["gjx16@GJXAIOU",[[1,2359,"例子："]],[2359,2359],[2362,2362]]],[1539351278384,["gjx16@GJXAIOU",[[1,2363,"\n"]],[2362,2362],[2363,2363]]],[1539351282534,["gjx16@GJXAIOU",[[1,2363,"```c"]],[2363,2363],[2367,2367]]],[1539351282812,["gjx16@GJXAIOU",[[1,2368,"\n"]],[2367,2367],[2368,2368]]],[1539351283069,["gjx16@GJXAIOU",[[1,2369,"\n"]],[2368,2368],[2369,2369]]],[1539351283292,["gjx16@GJXAIOU",[[1,2370,"\n"]],[2369,2369],[2370,2370]]],[1539351285187,["gjx16@GJXAIOU",[[1,2370,"```"]],[2370,2370],[2373,2373]]],[1539351336981,["gjx16@GJXAIOU",[[1,2368,"int * pint;\nvoid *pvoid;\npvoid = pint; /* 不过不能 pint= pvoid; */ 如果要将pvoid赋给其他类型指针，则需要强制类型转换如：pint= (int *)pvoid;"]],[2368,2368],[2479,2479]]],[1539351340684,["gjx16@GJXAIOU",[[1,2407,"\n"]],[2407,2407],[2408,2408]]],[1539351343996,["gjx16@GJXAIOU",[[-1,2408,"/* "]],[2411,2411],[2408,2408]]],[1539351344564,["gjx16@GJXAIOU",[[-1,2407,"\n"]],[2408,2408],[2407,2407]]],[1539351346124,["gjx16@GJXAIOU",[[1,2407,"\n"]],[2407,2407],[2408,2408]]],[1539351351937,["gjx16@GJXAIOU",[[1,2408,"/"],[-1,2412," "],[1,2413," "]],[2408,2408],[2409,2409]]],[1539351352141,["gjx16@GJXAIOU",[[1,2409,"/"]],[2409,2409],[2410,2410]]],[1539351359975,["gjx16@GJXAIOU",[[-1,2428,"*/ "]],[2431,2431],[2428,2428]]],[1539351366252,["gjx16@GJXAIOU",[[1,2482,"\n"]],[2481,2481],[2482,2482]]],[1539351419516,["gjx16@GJXAIOU",[[1,2483,"\n"]],[2481,2481],[2482,2482]]],[1539351423725,["gjx16@GJXAIOU",[[1,2482,"2.在ANSIC标准中，不允许对void指针进行算术运算如pvoid++或pvoid+=1等，而在GNU中则允许"]],[2482,2482],[2538,2538]]],[1539351436181,["gjx16@GJXAIOU",[[1,2305,"\n"]],[2304,2304],[2305,2305]]],[1539351441724,["gjx16@GJXAIOU",[[-1,2306,"注：void * 表示无类型指针，可以指向任何数据类型,同理，可以使用任意数据类型的指针对void指针赋值\n例子：\n```c\nint * pint;\nvoid *pvoid;\npvoid = pint; \n//不过不能 pint= pvoid; 如果要将pvoid赋给其他类型指针，则需要强制类型转换如：pint= (int *)pvoid;\n\n```\n2.在ANSIC标准中，不允许对void指针进行算术运算如pvoid++或pvoid+=1等，而在GNU中则允许"]],[2306,2539],[2306,2306]]],[1539352580153,["gjx16@GJXAIOU",[[-1,2308,"[void及void指针含义的深刻解析](https://blog.csdn.net/geekcome/article/details/6249151)\n[void (*p)() 、 void *p()和void *（*p）(void)的区别](https://blog.csdn.net/u010275850/article/details/44067033)\n[void *p,void *p()与void (*p)()的区别](https://blog.csdn.net/icycityone/article/details/17374793)\n[void（＊p）（）和void＊p（）区别](https://https://blog.csdn.net/sunyaoo/article/details/42743883)"]],[2308,2671],[2308,2308]]],[1539352580302,["gjx16@GJXAIOU",[[-1,2308,"\n"]],[2308,2308],[2307,2307]]],[1539352580481,["gjx16@GJXAIOU",[[-1,2307,"\n"]],[2307,2307],[2306,2306]]],[1539352580855,["gjx16@GJXAIOU",[[-1,2306,"\n"]],[2306,2306],[2305,2305]]],[1539352581279,["gjx16@GJXAIOU",[[-1,2305,"\n"]],[2305,2305],[2304,2304]]]],null,"gjx16@GJXAIOU"],["efcd915c-f9bd-42f4-9bd9-e590d2f8764b",1540292330288,"# day10 内存管理\n@toc\n\n\n## 一、变量作用域\n\n全局变量和局部变量\n\n一个C语言变量的作用域可以是代码块，作用域就是函数作用域或者文件作用域\n代码块：{}之间的一段代码；\n \n**1.文件作用域：**\n\n如果一个变量在其他的代码文件中已经定义了，可以在本程序中使用，但是使用前要使用关键字：`extern`\n例如：`extern int age` //有一个int型变量age已经在其他文件中定义了，这里就直接使用了；\n\n`static int a  = 0;`//在定义这个变量的文件内部是全局的，但在文件外部不可用\n\n---\n\n**2.auto自动变量**\n\nC语言中所有的局部变量默认中都是auto，，所以`auto`可以省略。不需要关注它在内存中什么时候消失和出现\n`auto int i = 0;`等效于`int i = 0;`\n\n----\n\n**3.register变量**\n`register int i = 0;`  //建议，如果有寄存器空闲的话，就将这个变量放进寄存器中使用，可以加快读取\n\n但是`int *p = &i`//这个语句就会报错，因为放在寄存器中就没有内存地址了\n\n---\n\n**4.动态变量和静态变量**\n\n- 动态变量 \n\n```c\n#include<stdio.h>\n\nvoid myauto()\n{\n  int a = 0;\n  printf(\"a = %d\\n\",a);\n  a++;\n}\n\n\nint main()\n{\n  int i;\n  for(i = 0; i < 5; i++)\n  {\n    myatuo();\n \n  }\n\n}\n```\n\n程序的输出结果为 : \n`a = 0`\n`a = 0`\n`a = 0`\n`a = 0`\n`a = 0`\n                          \n\n- 静态变量\n首先只要整个程序开始执行之后，静态变量是一直存在的，不消失的；\n其次，静态变量值初始化一次，即`static int a = 0;`语句只执行一次\n```c\n#include<s tdio.h>\n\nvoid mystatic()\n{\n  static int a = 0;//整个进程运行过程中一直有效，是在静态区，但是只能mystatic函数内部访问使用\n  printf(\"a = %d\\n\",a);\n  a++;\n\n}\n\nint main()\n{\n  int i = 0;\n  for(i = 0; i < 5; i++)\n  {\n    mystatic();\n  }\n}\n```\n程序运行结果为:\n`a = 0`\n`a = 1`\n`a = 2`\n`a = 3`\n`a = 4`\n\n---\n\n**5.变量和函数是否使用extern的区别**\n\n- 变量 \n  - extern int age;//当age这个变量是在另一个.c文件中时，需要在别的文件中调用这个变量时候使用\n  - int age;    //这包含两个含义：声明一个变量或者定义一个变量\n  \n- 函数（下面两个没有什么区别）\n  - extern void age()\n  - void age()     \n\n\n---\n\n\n## 二、内存四区简介\n\n![内存四区图示]($resource/%E5%86%85%E5%AD%98%E5%9B%9B%E5%8C%BA%E5%9B%BE%E7%A4%BA.png)\n\n- **1.代码区**\n\n存放可执行的代码；程序被操作系统加载到内存中时候，所有可执行的代码都加载到代码区，==这块内存是不可以在运行期间修改的====；\n\n\n\n- **2.静态区**\n\n存放所有的==静态变量/常量和全局变量/常量==\n\n\n - **3.栈区**\n\n栈区是一种先进后出的内存结构，所有的==自动变量、指针，数组、函数的形参==都是由编译器自动放出栈中，当一个自动变量超出其作用域的时候，自动从栈中弹出；\n\n对于自动变量，什么时候入栈和出栈都是系统自动控制的\n\n栈区的大小是可以动态设置的，不过不会特别大，一般大小为XX k，\n\nC语言中函数的==参数变量是从右往左入栈==的，也就是最右边的参数是最先入栈的\n![栈的图示]($resource/%E6%A0%88%E7%9A%84%E5%9B%BE%E7%A4%BA.png)\n\n**栈溢出**\n当栈空间已满，但是还往栈内存中压变量，这就是栈溢出；\n\n\n- **4.堆区**\n\n堆和栈一样，是一种在程序运行过程中可以随时修改的内存区域，但是==没有栈那样的先进后出的顺序==，是一个大容器，容量远远大于栈，==堆内存空间的申请和释放需要手工通过代码来完成==；\n\n**4.1.分配堆的方法：**\n```c\n#include<stdio.h>\n#include<stdlib.h>   //需要加一个头文件\n\nint main()\n{\n    int *p = malloc(sizeof(int)*10);  //语句含义为：在堆中间申请内存，函数的返回值为无类型的指针，参数为size_t无符号的整数   ，现在这个语句的含义是：申请一个内存大小为10个int大小的空间。指针p指向分配出来的堆的地址；\n\n    memset(p ,0,sizeof(int) * 10);  //将分配的这个空间置零初始化\n    free(p);//释放通过malloc分配的堆内存\n    return 0;\n}\n```\n\n\n---\n\n\n**4.2.堆和栈的区别**\n\n```c\n#include<stdio.h>\n#include<stdlib.h>\n\nvoid *geta()   //这是错误的，不能将一个栈变量的地址通过函数的返回值返回\n{\n  int a = 0;\n  return &a;\n}\n\n\nvoid *geta1() //可以通过函数的返回值返回一个堆地址，但是一定要free\n{\n  int  *p = malloc(sizeof(int)); //申请了一个堆空间\n  return p;  //返回值为p 即是分配的堆空间的地址\n}\n\n\n\nvoid *gata2()   //这也是合法的，只要将main函数中的geta1改为geta2,然后将free(getp)去掉即可\n{\n  static int a = 0;  //使用static即使a为静态变量，存在于静态区，会一直存在不会被释放\n  return &a;\n}\n\n\n\n\nint main()\n\n{\n  int *getp = geta1();\n  *getp = 100;\n  free(getp);   //getp指向了划分的堆区域，因此释放即可\n}\n\n\n```\n\n**理解下面程序**\n~~这个程序本质上有错误，具体的修改见下面的一个程序~~\n```c\n#include<stdio.h>\n#include<stdlib.h>\n\nvoid getheap(int  *a)\n{\n  a = malloc(sizeof(int) * 10);\n}\n\nint main()\n{\n  int *p =NULL;\n  gatheap(p);  //实参没有任何改变，相当于这里的p一直没有任何改变\n\n  p[0] = 1;\n  p[1] = 2;\n  printf(\"p[0] = %d ,p[1] = %d\\n\",p[0],p[1]);\n  free(p);\n}\n```\n\n![函数图形化解析]($resource/%E5%87%BD%E6%95%B0%E5%9B%BE%E5%BD%A2%E5%8C%96%E8%A7%A3%E6%9E%90.png)\n\n从这程序中可以看出：也就是说a的值改了，a本身是在栈里面的，它只是指向堆里面的一个空间地址；然后实参p的值一直没有变化\ngetheap在执行完之后，a就消失了，导致他指向的具体堆空间的地址编号也随之消失了；\n\n**修改**\n\n```c\n#include<stdio.h>\n#include<stdlib.h>\n\nvoid  getheap(int  **a)\n  {\n     *a  =  malloc(sizeof(int) * 10);  //这里的*a就是指针p中的值了，\n  }\n\n/*\n  int **a = &p;等价于\n  int **a;\n  a = &p\n\n*/\n\n\n\nint  main()\n{\n  int  *p  =NULL;\n  getheap(&p);  //传递的是P的地址\n  p[0]  =  1;\n  p[1]  =  2;\n  printf(\"p[0]  =  %d  ,p[1]  =  %d\\n\",p[0],p[1]);\n  free(p);\n  return  0;\n\n}\n```\n\n程序的分析图片：\n\n![堆和栈地址]($resource/%E5%A0%86%E5%92%8C%E6%A0%88%E5%9C%B0%E5%9D%80.png)\n\n\n\n### 三、内存模型详解以及Linux系统堆内存大小的分析\n\n**1.栈和堆的比较**\n\n- 栈(stack)\n - 明确知道数据占用多好内存\n - 数据很少 \n - 变量离开作用范围后，栈上的数据会自动释放\n - 栈的最大尺寸固定，超过则引起栈溢出\n  \n- 堆(heap)\n  - 需要大量内存的时候\n  - 不知道需要多少内存 \n\n```c\n//在堆中可以建立一个动态的数组\n\n#include<stdio.h>\n\nint main()\n{\n\n  int i ;\n  scanf(\"%d\",&i);\n  int *array = malloc(sizeof(int) * i);\n  free(array);\n\n\n}\n```\n\n---\n\n**2.堆的分配和释放**\n\n内存的最小单位是字节，但是操作系统在管理内存的时候，最小的单位是内存页（32位操作系统中每一页为4k ）\n\n---\n\n**3.malloc和calloc和realloc**\n\n- **malloc**\n```c\n#include<stdio.h>\n#include<stdio.h>\nint main()\n{\n  char *p = malloc(10);//分配一个10个字节的空间,但是这10个空间没有清理过，所以每次使用可能都是10个随机数\n\n  memset(p,0,10); //这里含义是将p 中的10个元素全部置零\n  int i = 0;\n  for(i = 0; i < 10; i++)\n  {\n    printf(\"%d\\n\",p[i]);\n  }\n  free(p);\n  return 0;\n}\n```\n\n- **calloc**\n\n```c\n#include<stdio.h>\n#include<stdlib.h>\n#include<string.h >\n\nint main()\n{\n  char *p = calloc(10,sizeof(char));//分配10个大小为sizeof（char）的空间，并且自动全部置零\n  int i = 0;\n  for(i = 0; i < 10; i++)\n  {\n    printf(\"%d\\n\",p[i]);\n  }\n  return 0;\n  free(p);\n}\n```\n\n- **realloc**\n\n如果已分配的空间不够用，需要划分出一块新的内存空间，要求是这块内存空间和原来已划分的空间是连续的；\n```c\n#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n\nint main()\n{\n  char *p = calloc(10,sizeof(char));//这10个空间是置零了的\n  char *p1 = realloc(p,20);\n  //参数含义：需要扩展的空间名，需要扩展后的空间为20个字节\n  //语句含义：在原有内存基础之上，在堆中间增加连续的内存；如果原有的内存没有连续的空间可拓展，那么会分配一个空间，将原有的内存copy到新空间，然后释放\n  //新开辟的这10个字节空间是没有置零的\n\n  int i = 0;\n  for(i = 0; i < 20; i++)\n  {\n    printf(\"%d\\n\",p1[i]); //这里的p也需要改为p1\n  }\n  return 0;\n  free(p1);  //这里释放的是p1\n}\n```\n\n当要减少原来已划分的空间的时候\n```c\n#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n\nint main()\n{\n  char *p = calloc(10,sizeof(char));//这10个空间是置零了的\n  char *p1 = realloc(p,5);\n  \n  int i = 0;\n  for(i = 0; i < 5; i++)\n  {\n    printf(\"%d\\n\",p1[i]); //这里的p也需要改为p1\n  }\n  return 0;\n  free(p1);  //这里释放的是p1\n}\n```\n\n当`realloc`的第一个参数为空的时候，即：`realloc (NULL,5)`等效于`malloc(5)`\n\n\n**4.二级指针分派堆空间**\n\n如果是通过一个函数的参数给实参分配堆空间内存，那么一定是二级指针的形式\n**正确模型1**\n```c\n#include<stdio.h>\n\nvoid getheap1(int  **p)\n{\n  *p = malloc(100);\n\n}\nint main()\n{\n  int *p = NULL;\n  getheap(&p);//如果是通过一个函数的参数给实参分配堆空间内存，肯定使用二级指针\n\n  free(p);\n\n}\n\n```\n\n**正确模型2**\n\n```c\n#include<stdio.h>\n\nint *getheap2()\n{\n  return = malloc(100);\n\n}\nint main()\n{\n  int *p = NULL;\n\n  p = getheap2();\n\n  free(p);\n\n}\n```\n\n**正确模型3：**\n常量、静态变量、全局变量都在都在静态区域，一直是有效的\n```c\n#include<stdio.h>\n\nint *getstring2()\n{\n  return = \"hello\";//可以将一个常量的地址作为函数返回值返回\n\n}\nint main()\n{\n const char *ss = getstring2();\n printf(\"ss = %c\\n\",c);\n return 0;\n\n}\n\n```\n\n**正确模型4**\n\n```c\n#include<stdio.h>\n\nint *getstring4()\n{\n  static char array[10] = \"hello\";  //仍然在静态区\n  return array;\n\n}\nint main()\n{\n const char *s = getstring4();\n printf(\"s = %s\\n\",s);\n return 0;\n\n}\n```\n\n程序输出结果为：`s  = hello`\n\n**错误的模型1**\n\n```c\n#include<stdio.h>\n\nint *getstring()\n{\n  char array[10] = \"hello\";\n  return array;\n\n}\nint main()\n{\n  char *s = getstring();//当getarray()这个语句执行完之后，因为数组array是存放在栈中，地址就释放了\n  printf(\"s = %s\\n\",s);\n  return 0;\n}\n```\n程序运行结果为乱码\n\n\n\n",[[1540292313710,["gjx16@GJXAIOU",[[1,808,"**"],[1,818,"**"]],[808,818],[808,822]]],[1540292320426,["gjx16@GJXAIOU",[[1,832,"**"],[1,842,"**"]],[832,842],[832,846]]],[1540292621797,["gjx16@GJXAIOU",[[-1,241,"在定义这个变量的文件内部是全局的，但"]],[258,258],[241,241]]],[1540292832870,["gjx16@GJXAIOU",[[1,857,"\n"]],[856,856],[857,857]]],[1540292833238,["gjx16@GJXAIOU",[[1,858,"\n"]],[857,857],[858,858]]],[1540292840139,["gjx16@GJXAIOU",[[1,858,"static表示"]],[858,858],[866,866]]],[1540292844108,["gjx16@GJXAIOU",[[-1,864,"表示"]],[866,866],[864,864]]],[1540292853826,["gjx16@GJXAIOU",[[1,864,"定义的变量："]],[864,864],[870,870]]],[1540292855029,["gjx16@GJXAIOU",[[1,871,"\n"]],[870,870],[871,871]]],[1540292868651,["gjx16@GJXAIOU",[[1,871,"- 静态局部"]],[871,871],[877,877]]],[1540292913355,["gjx16@GJXAIOU",[[1,877,"变量在函数内存定义的，其生存周期为整个源程序，但是作用域同自动变量，只能在定义该"]],[877,877],[917,917]]],[1540292914211,["gjx16@GJXAIOU",[[-1,916,"该"]],[917,917],[916,916]]],[1540292930211,["gjx16@GJXAIOU",[[1,916,"该变量的函数内部使用；"]],[916,916],[927,927]]],[1540292938951,["gjx16@GJXAIOU",[[1,927,"，退出"]],[927,927],[930,930]]],[1540292941012,["gjx16@GJXAIOU",[[-1,927,"，"]],[928,928],[927,927]]],[1540292946200,["gjx16@GJXAIOU",[[1,929,"该函数zhihou7"]],[929,929],[939,939]]],[1540292948531,["gjx16@GJXAIOU",[[-1,932,"zhihou7"]],[939,939],[932,932]]],[1540292967201,["gjx16@GJXAIOU",[[1,932,"之后该变量仍然存在只是不能使用；"]],[932,932],[948,948]]],[1540293001919,["gjx16@GJXAIOU",[[1,888,"**"],[1,899,"**"]],[888,899],[888,903]]],[1540293006309,["gjx16@GJXAIOU",[[1,915,"**"],[1,930,"**"]],[915,930],[915,934]]],[1540293019245,["gjx16@GJXAIOU",[[1,957,"- \n"]],[956,956],[959,959]]],[1540293023446,["gjx16@GJXAIOU",[[1,858,"**"],[1,870,"**"]],[858,870],[858,874]]],[1540293048994,["gjx16@GJXAIOU",[[1,963,"静态变量未赋初值的"]],[963,963],[972,972]]],[1540293075477,["gjx16@GJXAIOU",[[1,972,"系统自动赋值0；其他自动变量赋值则具有随机性；"]],[972,972],[995,995]]],[1540293107607,["gjx16@GJXAIOU",[[1,869,"静态局部"]],[869,869],[873,873]]],[1540293111027,["gjx16@GJXAIOU",[[1,1000,"- \n"]],[999,999],[1002,1002]]],[1540293111197,["gjx16@GJXAIOU",[[-1,1000,"- "]],[1002,1002],[1001,1001]]],[1540293113203,["gjx16@GJXAIOU",[[1,1001,"\n"]],[1001,1001],[1002,1002]]],[1540293116941,["gjx16@GJXAIOU",[[1,1001,"****"]],[1001,1001],[1003,1003]]],[1540293129937,["gjx16@GJXAIOU",[[1,1003,"static定义的静态全局变量："]],[1003,1003],[1019,1019]]],[1540293131742,["gjx16@GJXAIOU",[[1,1022,"\n"]],[1021,1021],[1022,1022]]],[1540293167653,["gjx16@GJXAIOU",[[1,1022,"- 仍然采用静态存储方式，但是作用域为定义该变量的源文件内部"]],[1022,1022],[1052,1052]]],[1540293185876,["gjx16@GJXAIOU",[[1,1037,"**"],[1,1052,"**"]],[1037,1052],[1037,1056]]],[1540293204668,["gjx16@GJXAIOU",[[1,1056," ，费静态"]],[1056,1056],[1061,1061]]],[1540293205695,["gjx16@GJXAIOU",[[-1,1058,"费静态"]],[1061,1061],[1058,1058]]],[1540293227623,["gjx16@GJXAIOU",[[1,1058,"非静态的全局变量的作用域为这个源程序（）"]],[1058,1058],[1078,1078]]],[1540293231116,["gjx16@GJXAIOU",[[-1,1077,"保罗"]],[1079,1079],[1077,1077]]],[1540293239947,["gjx16@GJXAIOU",[[1,1077,"包括多个源文件"]],[1077,1077],[1084,1084]]],[1540293248892,["gjx16@GJXAIOU",[[1,1086,"- \n"]],[1085,1085],[1088,1088]]],[1540293249051,["gjx16@GJXAIOU",[[-1,1086,"- "]],[1088,1088],[1087,1087]]],[1540293249932,["gjx16@GJXAIOU",[[1,1087,"\n"]],[1087,1087],[1088,1088]]],[1540293252915,["gjx16@GJXAIOU",[[1,858,"\n"]],[857,857],[858,858]]],[1540293253080,["gjx16@GJXAIOU",[[1,859,"\n"]],[858,858],[859,859]]],[1540293258059,["gjx16@GJXAIOU",[[1,859,"="]],[859,859],[860,860]]],[1540293259006,["gjx16@GJXAIOU",[[-1,859,"="]],[860,860],[859,859]]],[1540293261760,["gjx16@GJXAIOU",[[1,859,"·-"]],[859,859],[861,861]]],[1540293262706,["gjx16@GJXAIOU",[[-1,859,"·-"]],[861,861],[859,859]]],[1540293263796,["gjx16@GJXAIOU",[[-1,859,"\n"]],[859,859],[858,858]]],[1540293265132,["gjx16@GJXAIOU",[[1,859,"\n"]],[858,858],[859,859]]],[1540293270202,["gjx16@GJXAIOU",[[1,859,"  - 变量"]],[859,859],[865,865]]],[1540293277941,["gjx16@GJXAIOU",[[1,887,"    "]],[887,887],[891,891]]],[1540293282172,["gjx16@GJXAIOU",[[1,1034,"    "]],[1034,1034],[1038,1038]]],[1540293287558,["gjx16@GJXAIOU",[[1,977,"    "]],[977,977],[981,981]]],[1540293350351,[null,[[-1,1104,"``"],[1,1106,"）"],[1,1108,"\n``"]],[1104,1104],[1111,1111]]],[1540293350351,[null,[[1,1104,"``"],[-1,1104,"）"],[-1,1107,"\n``"]],[1111,1111],[1104,1104]]],[1540293299596,["gjx16@GJXAIOU",[[-1,1040,"  "]],[1042,1042],[1040,1040]]],[1540293307074,["gjx16@GJXAIOU",[[1,1017,"    "]],[1017,1017],[1021,1021]]],[1540293311565,["gjx16@GJXAIOU",[[1,1044,"  "]],[1044,1044],[1046,1046]]],[1540293316013,["gjx16@GJXAIOU",[[-1,1020," "]],[1021,1021],[1020,1020]]],[1540293327135,["gjx16@GJXAIOU",[[1,1109,"    - \n"]],[1108,1108],[1115,1115]]],[1540293327214,["gjx16@GJXAIOU",[[1,1115,"‘"]],[1115,1115],[1116,1116]]],[1540293330092,["gjx16@GJXAIOU",[[-1,1112," - ‘"]],[1116,1116],[1112,1112]]],[1540293331134,["gjx16@GJXAIOU",[[-1,1109,"   "],[1,1112,"\n"]],[1112,1112],[1110,1110]]],[1540293333529,["gjx16@GJXAIOU",[[1,1110,"   "]],[1110,1110],[1113,1113]]],[1540293334515,["gjx16@GJXAIOU",[[-1,1112," "]],[1113,1113],[1112,1112]]],[1540293335042,["gjx16@GJXAIOU",[[1,1112,"- "]],[1112,1112],[1114,1114]]],[1540293340388,["gjx16@GJXAIOU",[[-1,1110,"  - "]],[1114,1114],[1110,1110]]],[1540293347651,["gjx16@GJXAIOU",[[1,1110,"  - 函数"]],[1110,1110],[1116,1116]]],[1540293349022,["gjx16@GJXAIOU",[[1,1117,"  - \n"]],[1116,1116],[1121,1121]]],[1540293410360,[null,[[-1,1107,"``"],[1,1109,"）\n"],[1,1124,"``"]],[1107,1107],[1126,1126]]],[1540293410360,[null,[[1,1107,"``"],[-1,1107,"）\n"],[-1,1124,"``"]],[1126,1126],[1107,1107]]],[1540293354164,["gjx16@GJXAIOU",[[1,1045,"  "]],[1045,1045],[1047,1047]]],[1540293359355,["gjx16@GJXAIOU",[[-1,1045,"  "]],[1047,1047],[1045,1045]]],[1540293365788,["gjx16@GJXAIOU",[[-1,1017,"   "]],[1020,1020],[1017,1017]]],[1540293366510,["gjx16@GJXAIOU",[[-1,1016,"\n"]],[1017,1017],[1016,1016]]],[1540293371108,["gjx16@GJXAIOU",[[1,1016,"    - \n"]],[1015,1015],[1022,1022]]],[1540293374893,["gjx16@GJXAIOU",[[-1,1020,"- "]],[1022,1022],[1020,1020]]],[1540293381159,["gjx16@GJXAIOU",[[1,866," "]],[866,866],[867,867]]],[1540293392369,["gjx16@GJXAIOU",[[1,1022,"      "]],[1022,1022],[1028,1028]]],[1540293397763,["gjx16@GJXAIOU",[[-1,1027," "]],[1028,1028],[1027,1027]]],[1540293402915,["gjx16@GJXAIOU",[[1,1126,"  "]],[1125,1125],[1127,1127]]],[1540293470355,[null,[[-1,1114,"``"],[1,1116,"）\n"],[1,1133,"``"]],[1114,1114],[1135,1135]]],[1540293470356,[null,[[1,1114,"``"],[-1,1114,"）\n"],[-1,1133,"``"]],[1135,1135],[1114,1114]]],[1540293435698,["gjx16@GJXAIOU",[[1,1130,"使用static定义的函数只能在本文件中被调用"]],[1130,1130],[1153,1153]]],[1540293590405,[null,[[-1,1114,"``"],[1,1116,"）\n"],[1,1156,"``"]],[1114,1114],[1158,1158]]],[1540293590405,[null,[[1,1114,"``"],[-1,1114,"）\n"],[-1,1156,"``"]],[1158,1158],[1114,1114]]],[1540293553370,["gjx16@GJXAIOU",[[-1,499,"动态变量和静态变量"],[1,508,"static"]],[499,499],[505,505]]],[1540293555151,["gjx16@GJXAIOU",[[1,505,"使用"]],[505,505],[507,507]]],[1540293573820,["gjx16@GJXAIOU",[[-1,495,"**"]],[497,497],[495,495]]],[1540293577827,["gjx16@GJXAIOU",[[-1,505,"**"]],[507,507],[505,505]]],[1540293583486,["gjx16@GJXAIOU",[[1,495,"### "]],[495,495],[499,499]]],[1540293589694,["gjx16@GJXAIOU",[[1,511,"\n"]],[510,510],[511,511]]],[1540293590279,["gjx16@GJXAIOU",[[1,511,"-"]],[511,511],[512,512]]],[1540293650405,[null,[[-1,1115,"``"],[1,1117,"）\n"],[1,1157,"``"]],[1115,1115],[1159,1159]]],[1540293650405,[null,[[1,1115,"``"],[-1,1115,"）\n"],[-1,1157,"``"]],[1159,1159],[1115,1115]]],[1540293592644,["gjx16@GJXAIOU",[[1,512," ****"]],[512,512],[515,515]]],[1540293593292,["gjx16@GJXAIOU",[[-1,516,"*"]],[515,515],[514,514]]],[1540293597403,["gjx16@GJXAIOU",[[-1,511,"- ***"]],[516,516],[511,511]]],[1540293601311,["gjx16@GJXAIOU",[[1,511,"### #"]],[511,511],[516,516]]],[1540293602027,["gjx16@GJXAIOU",[[-1,514," #"]],[516,516],[514,514]]],[1540293622587,["gjx16@GJXAIOU",[[1,514,"# 修饰变量：动态变量和静态变量"]],[514,514],[530,530]]],[1540293624371,["gjx16@GJXAIOU",[[1,531,"\n"]],[530,530],[531,531]]],[1540293633876,["gjx16@GJXAIOU",[[-1,499,"4."]],[501,501],[499,499]]],[1540293634416,["gjx16@GJXAIOU",[[1,499,"（）"]],[499,499],[501,501]]],[1540293636707,["gjx16@GJXAIOU",[[1,500,"二"]],[500,500],[501,501]]],[1540293643156,["gjx16@GJXAIOU",[[-1,94," "],[1,95,"\n"]],[95,95],[95,95]]],[1540293646652,["gjx16@GJXAIOU",[[1,95,"### （）"]],[95,95],[101,101]]],[1540293649026,["gjx16@GJXAIOU",[[1,100,"以"]],[100,100],[101,101]]],[1540293649875,["gjx16@GJXAIOU",[[-1,100,"以"]],[101,101],[100,100]]],[1540293710414,[null,[[-1,1141,"``"],[1,1143,"）\n"],[1,1183,"``"]],[1141,1141],[1185,1185]]],[1540293710414,[null,[[1,1141,"``"],[-1,1141,"）\n"],[-1,1183,"``"]],[1185,1185],[1141,1141]]],[1540293651730,["gjx16@GJXAIOU",[[1,100,"以"]],[100,100],[101,101]]],[1540293652949,["gjx16@GJXAIOU",[[-1,100,"以"]],[101,101],[100,100]]],[1540293654328,["gjx16@GJXAIOU",[[1,100,"一"]],[100,100],[101,101]]],[1540293658761,["gjx16@GJXAIOU",[[1,102,"两岁"]],[102,102],[104,104]]],[1540293659365,["gjx16@GJXAIOU",[[-1,102,"两岁"]],[104,104],[102,102]]],[1540293663979,["gjx16@GJXAIOU",[[1,102,"零碎知识点"]],[102,102],[107,107]]],[1540293664582,["gjx16@GJXAIOU",[[1,108,"\n"]],[107,107],[108,108]]],[1540293671079,["gjx16@GJXAIOU",[[1,94,"、"]],[94,94],[95,95]]],[1540293671827,["gjx16@GJXAIOU",[[-1,94,"、"]],[95,95],[94,94]]],[1540293672261,["gjx16@GJXAIOU",[[1,95,"\n"]],[94,94],[95,95]]],[1540293672419,["gjx16@GJXAIOU",[[1,96,"\n"]],[95,95],[96,96]]],[1540293674251,["gjx16@GJXAIOU",[[1,111,"\n"]],[110,110],[111,111]]],[1540293686295,["gjx16@GJXAIOU",[[1,533,"1、"]],[533,533],[535,535]]],[1540293701314,["gjx16@GJXAIOU",[[-1,898,"  - 变量"]],[899,904],[898,898]]],[1540293701787,["gjx16@GJXAIOU",[[-1,898,"\n"]],[898,898],[897,897]]],[1540293706976,["gjx16@GJXAIOU",[[1,897,"- 总结"]],[897,897],[901,901]]],[1540293770406,[null,[[-1,1150,"``"],[1,1152,"）\n"],[1,1192,"``"]],[1150,1150],[1194,1194]]],[1540293770406,[null,[[1,1150,"``"],[-1,1150,"）\n"],[-1,1192,"``"]],[1194,1194],[1150,1150]]],[1540293713811,["gjx16@GJXAIOU",[[1,899,"**"],[1,901,"**"]],[899,901],[899,905]]],[1540293715995,["gjx16@GJXAIOU",[[1,809,"**"],[1,813,"**"]],[809,813],[809,817]]],[1540293719709,["gjx16@GJXAIOU",[[1,553,"**"],[1,558,"**"]],[553,558],[553,562]]],[1540293725235,["gjx16@GJXAIOU",[[-1,559," "]],[560,560],[559,559]]],[1540293732633,["gjx16@GJXAIOU",[[-1,937,"  "]],[939,939],[937,937]]],[1540293741434,["gjx16@GJXAIOU",[[-1,1025,"  "]],[1027,1027],[1025,1025]]],[1540293748330,["gjx16@GJXAIOU",[[-1,1067,"   "]],[1070,1070],[1067,1067]]],[1540293751451,["gjx16@GJXAIOU",[[-1,1090,"  "]],[1092,1092],[1090,1090]]],[1540293830400,[null,[[-1,1152,"``"],[1,1154,"）\n"],[1,1194,"``"]],[1152,1152],[1196,1196]]],[1540293830400,[null,[[1,1152,"``"],[-1,1152,"）\n"],[-1,1194,"``"]],[1196,1196],[1152,1152]]],[1540293775972,["gjx16@GJXAIOU",[[-1,1157,"- 函数\n    - 使用static定义的函数只能在本文件中被调用"]],[1157,1191],[1157,1157]]],[1540293780235,["gjx16@GJXAIOU",[[1,1431,"\n"]],[1430,1430],[1431,1431]]],[1540293780398,["gjx16@GJXAIOU",[[1,1432,"\n"]],[1431,1431],[1432,1432]]],[1540293780536,["gjx16@GJXAIOU",[[1,1433,"\n"]],[1432,1432],[1433,1433]]],[1540293780947,["gjx16@GJXAIOU",[[1,1433,"- 函数\n    - 使用static定义的函数只能在本文件中被调用"]],[1433,1433],[1467,1467]]],[1540293785139,["gjx16@GJXAIOU",[[-1,1159,"\n"]],[1159,1159],[1158,1158]]],[1540293785279,["gjx16@GJXAIOU",[[-1,1158,"\n"]],[1158,1158],[1157,1157]]],[1540293785811,["gjx16@GJXAIOU",[[-1,1156," "]],[1157,1157],[1156,1156]]],[1540293798134,["gjx16@GJXAIOU",[[-1,904,"- **总结**\n **static定义的静态局部变量：**\n  - 静态局部变量在函数内存定义的，**其生存周期为整个源程序**，但是作用域同自动变量，**只能在定义该变量的函数内部使用**；退出该函数之后该变量仍然存在只是不能使用；\n  - 静态变量未赋初值的系统自动赋值0；其他自动变量赋值则具有随机性；\n    \n  **static定义的静态全局变量：**\n  - 仍然采用静态存储方式，但是**作用域为定义该变量的源文件内部** ，非静态的全局变量的作用域为这个源程序（包括多个源文件）"]],[904,1153],[904,904]]],[1540293801245,["gjx16@GJXAIOU",[[1,1179,"- **总结**\n **static定义的静态局部变量：**\n  - 静态局部变量在函数内存定义的，**其生存周期为整个源程序**，但是作用域同自动变量，**只能在定义该变量的函数内部使用**；退出该函数之后该变量仍然存在只是不能使用；\n  - 静态变量未赋初值的系统自动赋值0；其他自动变量赋值则具有随机性；\n    \n  **static定义的静态全局变量：**\n  - 仍然采用静态存储方式，但是**作用域为定义该变量的源文件内部** ，非静态的全局变量的作用域为这个源程序（包括多个源文件）"]],[1179,1179],[1428,1428]]],[1540293803726,["gjx16@GJXAIOU",[[-1,906," "]],[907,907],[906,906]]],[1540293803859,["gjx16@GJXAIOU",[[-1,906,"\n"]],[906,906],[905,905]]],[1540293804010,["gjx16@GJXAIOU",[[-1,905,"\n"]],[905,905],[904,904]]],[1540293804187,["gjx16@GJXAIOU",[[-1,904,"\n"]],[904,904],[903,903]]],[1540293804677,["gjx16@GJXAIOU",[[-1,903,"\n"]],[903,903],[902,902]]],[1540293820619,["gjx16@GJXAIOU",[[-1,1425,"- "]],[1427,1427],[1425,1425]]],[1540293820772,["gjx16@GJXAIOU",[[-1,1424,"\n"]],[1425,1425],[1424,1424]]],[1540293821827,["gjx16@GJXAIOU",[[1,1424,"\n"]],[1424,1424],[1425,1425]]],[1540293826992,["gjx16@GJXAIOU",[[1,1425,"#### （）"]],[1425,1425],[1432,1432]]],[1540293828786,["gjx16@GJXAIOU",[[1,1431,"二"]],[1431,1431],[1432,1432]]],[1540293890409,[null,[[1,904,"``"],[-1,1172,"--"],[1,1466,"--"]],[904,904],[1468,1468]]],[1540293890409,[null,[[-1,904,"``"],[1,1174,"--"],[-1,1466,"--"]],[1468,1468],[904,904]]],[1540293835782,["gjx16@GJXAIOU",[[1,1433,"static修饰"]],[1433,1433],[1441,1441]]],[1540293838365,["gjx16@GJXAIOU",[[1,1444,"\n"]],[1443,1443],[1444,1444]]],[1540293843898,["gjx16@GJXAIOU",[[-1,1445,"    - "]],[1451,1451],[1445,1445]]],[1540293844323,["gjx16@GJXAIOU",[[-1,1444,"\n"]],[1445,1445],[1444,1444]]],[1540293847987,["gjx16@GJXAIOU",[[1,1444,"\n"]],[1443,1443],[1444,1444]]],[1540293849883,["gjx16@GJXAIOU",[[1,1469,"\n"]],[1468,1468],[1469,1469]]],[1540293850012,["gjx16@GJXAIOU",[[1,1470,"\n"]],[1469,1469],[1470,1470]]],[1540293850148,["gjx16@GJXAIOU",[[1,1471,"\n"]],[1470,1470],[1471,1471]]],[1540293863835,["gjx16@GJXAIOU",[[-1,1476,"\n"]],[1476,1476],[1475,1475]]],[1540293864701,["gjx16@GJXAIOU",[[-1,1472,"---"]],[1475,1475],[1472,1472]]],[1540293864923,["gjx16@GJXAIOU",[[-1,1472,"\n"]],[1472,1472],[1471,1471]]],[1540293880858,["gjx16@GJXAIOU",[[1,1472,"### extern使用"]],[1472,1472],[1484,1484]]],[1540293885172,["gjx16@GJXAIOU",[[1,1484,"\n"]],[1484,1484],[1485,1485]]],[1540293950407,[null,[[1,904,"``"],[-1,1172,"--"],[1,1485,"**"]],[904,904],[1487,1487]]],[1540293950407,[null,[[-1,904,"``"],[1,1174,"--"],[-1,1485,"**"]],[1487,1487],[904,904]]],[1540293891195,["gjx16@GJXAIOU",[[-1,1486,"*5"]],[1488,1488],[1486,1486]]],[1540293894504,["gjx16@GJXAIOU",[[1,1486,"*"]],[1486,1486],[1487,1487]]],[1540293900383,["gjx16@GJXAIOU",[[1,1476,"（）"]],[1476,1476],[1478,1478]]],[1540293902912,["gjx16@GJXAIOU",[[1,1477,"三"]],[1477,1477],[1478,1478]]],[1540293909717,["gjx16@GJXAIOU",[[1,1508,"："]],[1508,1508],[1509,1509]]],[1540293912965,["gjx16@GJXAIOU",[[-1,1508,"："]],[1509,1509],[1508,1508]]],[1540293914045,["gjx16@GJXAIOU",[[1,1508,":"]],[1508,1508],[1509,1509]]],[1540293940162,["gjx16@GJXAIOU",[[-1,1429," （二）"]],[1433,1433],[1429,1429]]],[1540293942184,["gjx16@GJXAIOU",[[1,1429," 2/"]],[1429,1429],[1432,1432]]],[1540293943611,["gjx16@GJXAIOU",[[-1,1431,"/"]],[1432,1432],[1431,1431]]],[1540293944158,["gjx16@GJXAIOU",[[1,1431,"."]],[1431,1431],[1432,1432]]],[1540294490413,[null,[[1,904,"``"],[-1,1172,"--"],[-1,1487,"5*"],[1,1489,"**变"],[-1,1506,"*"],[1,1508,"*"]],[904,904],[1509,1509]]],[1540294490413,[null,[[-1,904,"``"],[1,1174,"--"],[1,1487,"5*"],[-1,1487,"**变"],[1,1507,"*"],[-1,1508,"*"]],[1509,1509],[904,904]]],[1540294444139,["gjx16@GJXAIOU",[[1,1783,"\n"]],[1782,1782],[1783,1783]]],[1540294444502,["gjx16@GJXAIOU",[[1,1783,"流程说明\n1、操作系统把物理硬盘代码load到内存\n2、操作系统把c代码分成四个区\n3、操作系统找到main函数入口执行"]],[1783,1783],[1843,1843]]],[1540294446668,["gjx16@GJXAIOU",[[1,1844,"\n"]],[1843,1843],[1844,1844]]],[1540294446793,["gjx16@GJXAIOU",[[1,1845,"\n"]],[1844,1844],[1845,1845]]],[1540294550421,[null,[[1,904,"``"],[-1,906,""],[-1,1172,"--"],[1,1183,""],[-1,1487,"5*"],[1,1489,"**变"],[-1,1506,"*"],[1,1508,"*"],[-1,1782,"-"],[1,1788,""],[1,1846,"-"]],[904,904],[1847,1847]]],[1540294550421,[null,[[-1,904,"``"],[1,908,""],[1,1174,"--"],[-1,1183,""],[1,1487,"5*"],[-1,1487,"**变"],[1,1507,"*"],[-1,1508,"*"],[1,1783,"-"],[-1,1788,""],[-1,1846,"-"]],[1847,1847],[904,904]]],[1540294499462,["gjx16@GJXAIOU",[[1,2016,"/"]],[2016,2016],[2017,2017]]],[1540294500604,["gjx16@GJXAIOU",[[-1,2016,"/"]],[2017,2017],[2016,2016]]],[1540294506583,["gjx16@GJXAIOU",[[1,2016,"、局部变量"]],[2016,2016],[2021,2021]]],[1540294549046,["gjx16@GJXAIOU",[[1,2365,"如果没有释放系统会在程序结束的时候"]],[2365,2365],[2382,2382]]],[1540294610424,[null,[[1,904,"``"],[-1,906,""],[-1,1172,"--"],[1,1183,""],[-1,1487,"5*"],[1,1489,"**变"],[-1,1506,"*"],[1,1508,"*"],[-1,1782,"-"],[1,1788,""],[1,1846,"-"],[-1,1857,""],[-1,2015,"="],[1,2021,"="],[-1,2364,"\n"],[1,2382,"\n"]],[904,904],[2383,2383]]],[1540294610424,[null,[[-1,904,"``"],[1,908,""],[1,1174,"--"],[-1,1183,""],[1,1487,"5*"],[-1,1487,"**变"],[1,1507,"*"],[-1,1508,"*"],[1,1783,"-"],[-1,1788,""],[-1,1846,"-"],[1,1858,""],[1,2016,"="],[-1,2021,"="],[1,2365,"\n"],[-1,2382,"\n"]],[2383,2383],[904,904]]],[1540294551483,["gjx16@GJXAIOU",[[1,2382,"回收"]],[2382,2382],[2384,2384]]],[1540294790431,[null,[[1,904,"``"],[-1,906,""],[-1,1172,"--"],[1,1183,""],[-1,1487,"5*"],[1,1489,"**变"],[-1,1506,"*"],[1,1508,"*"],[-1,1782,"-"],[1,1788,""],[1,1846,"-"],[-1,1857,""],[-1,2015,"="],[1,2021,"="],[-1,2364,"\n"],[1,2384,"\n"]],[904,904],[2385,2385]]],[1540294790431,[null,[[-1,904,"``"],[1,908,""],[1,1174,"--"],[-1,1183,""],[1,1487,"5*"],[-1,1487,"**变"],[1,1507,"*"],[-1,1508,"*"],[1,1783,"-"],[-1,1788,""],[-1,1846,"-"],[1,1858,""],[1,2016,"="],[-1,2021,"="],[1,2365,"\n"],[-1,2384,"\n"]],[2385,2385],[904,904]]],[1540294760105,["gjx16@GJXAIOU",[[1,2262,"\n"]],[2261,2261],[2262,2262]]],[1540294760245,["gjx16@GJXAIOU",[[1,2263,"\n"]],[2262,2262],[2263,2263]]],[1540294770493,["gjx16@GJXAIOU",[[1,2261,"![堆栈的生长方向]($resource/%E5%A0%86%E6%A0%88%E7%9A%84%E7%94%9F%E9%95%BF%E6%96%B9%E5%90%91.png)"]],[2261,2261],[2351,2351]]],[1540294970430,[null,[[-1,904,""],[1,904,"``"],[-1,1173,"--"],[1,1175,""],[-1,1487,"5*"],[1,1489,"**变"],[-1,1506,"*"],[1,1508,"*"],[-1,1782,"-"],[1,1783,""],[-1,1846,""],[1,1846,"-"],[-1,2015,"="],[1,2021,"="],[-1,2260,"\n"],[-1,2350,"-"],[1,2351,"\n"],[1,2353,"-"],[-1,2455,"\n"],[1,2475,"\n"]],[904,904],[2476,2476]]],[1540294970430,[null,[[1,904,""],[-1,904,"``"],[1,1175,"--"],[-1,1175,""],[1,1487,"5*"],[-1,1487,"**变"],[1,1507,"*"],[-1,1508,"*"],[1,1783,"-"],[-1,1783,""],[1,1846,""],[-1,1846,"-"],[1,2016,"="],[-1,2021,"="],[1,2261,"\n"],[1,2350,"-"],[-1,2350,"\n"],[-1,2353,"-"],[1,2456,"\n"],[-1,2475,"\n"]],[2476,2476],[904,904]]],[1540294937985,["gjx16@GJXAIOU",[[1,7138,"\n"]],[7135,7135],[7136,7136]]],[1540294938119,["gjx16@GJXAIOU",[[1,7139,"\n"]],[7136,7136],[7137,7137]]],[1540294938274,["gjx16@GJXAIOU",[[1,7140,"\n"]],[7137,7137],[7138,7138]]],[1540294939761,["gjx16@GJXAIOU",[[1,7138,"****"]],[7138,7138],[7140,7140]]],[1540294947183,["gjx16@GJXAIOU",[[1,7140,"函数调用模型："]],[7140,7140],[7147,7147]]],[1540294948977,["gjx16@GJXAIOU",[[1,7152,"\n"]],[7149,7149],[7150,7150]]],[1540294949106,["gjx16@GJXAIOU",[[1,7153,"\n"]],[7150,7150],[7151,7151]]],[1540295030430,[null,[[-1,904,""],[1,904,"``"],[-1,1173,"--"],[1,1175,""],[-1,1487,"5*"],[1,1489,"**变"],[-1,1506,"*"],[1,1508,"*"],[-1,1782,"-"],[1,1783,""],[-1,1846,""],[1,1846,"-"],[-1,2015,"="],[1,2021,"="],[-1,2260,"\n"],[-1,2350,"-"],[1,2351,"\n"],[1,2353,"-"],[-1,2455,"\n"],[1,2475,"\n"],[-1,7137,"\n"],[1,7149,"\n"]],[904,904],[7150,7150]]],[1540295030430,[null,[[1,904,""],[-1,904,"``"],[1,1175,"--"],[-1,1175,""],[1,1487,"5*"],[-1,1487,"**变"],[1,1507,"*"],[-1,1508,"*"],[1,1783,"-"],[-1,1783,""],[1,1846,""],[-1,1846,"-"],[1,2016,"="],[-1,2021,"="],[1,2261,"\n"],[1,2350,"-"],[-1,2350,"\n"],[-1,2353,"-"],[1,2456,"\n"],[-1,2475,"\n"],[1,7138,"\n"],[-1,7149,"\n"]],[7150,7150],[904,904]]],[1540294983000,["gjx16@GJXAIOU",[[1,7150,"下面我们具体总结一下，各个函数的变量的生命周期\n\n\n\nmain里面的变量分配内存，函数fa(),函数fb()中的变量分配的内存空间它们的生命周期都是多长呢？\n\n上述图1，已经说明了内存主要分为四区，因此每个函数中变量在堆栈的生命周期是不同的，\n\n同时在函数调用的时候，先执行的函数最后才执行完毕\n\n\n\nchar*fa()\n{\n\nchar*pa = \"123456\";//pa指针在栈区，“123456”在常量区，该函数调用完后指针变量pa就被释放了\n char*p = NULL;     //指针变量p在栈中分配4字节\n p=(char*)malloc(100);//本函数在这里开辟了一块堆区的内存空间，并把地址赋值给p\n strcpy(p, \"wudunxiong 1234566\");//把常量区的字符串拷贝到堆区\n return p;//返回给主调函数fb()，相对fa来说fb是主调函数，相对main来说，fa(),fb()都是被调用函数\n}\nchar*fb()\n{\n char*pstr = NULL;\n pstr = fa();\n return pstr;//指针变量pstr在这就结束\n}\n\nvoid main()\n{ \n char*str = NULL;\n str = fb();\n printf(\"str = %s\\n\",str);\n free(str);    //防止内存泄露，被调函数fa()分配的内存存的值通过返回值传给主调函数，然后主调函数释放内存\n str = NULL;//防止产生野指针\n system(\"pause\");\n}\n\n总结：\n\n1、主调函数分配的内存空间（堆，栈，全局区）可以在被调用函数中使用，可以以指针作函数参数的形式来使用\n\n2、被调用函数分配的内存空间只有堆区和全局区可以在主调函数中使用（返回值和函数参数），而栈区却不行，因为栈区函数体运行完之后\n\n这个函数占用的内存编译器自动帮你释放了。\n\n3、一定要明白函数的主被调关系以及主被调函数内存分配回收，也就是后面接下几篇总结的函数的输入输出内存模型\n--------------------- \n作者：思心 \n来源：CSDN \n原文：https://blog.csdn.net/wu5215080/article/details/38899259 \n版权声明：本文为博主原创文章，转载请附上博文链接！"]],[7150,7150],[8155,8155]]],[1540294990836,["gjx16@GJXAIOU",[[-1,8030,"--------------------- \n作者：思心 \n来源：CSDN \n原文：https://blog.csdn.net/wu5215080/article/details/38899259 \n版权声明：本文为博主原创文章，转载请附上博文链接！\n"]],[8030,8156],[8030,8030]]],[1540295690443,[null,[[-1,904,""],[1,904,"``"],[-1,1173,"--"],[1,1175,""],[-1,1487,"5*"],[1,1489,"**变"],[-1,1506,"*"],[1,1508,"*"],[-1,1782,"-"],[1,1783,""],[-1,1846,""],[1,1846,"-"],[-1,2015,"="],[1,2021,"="],[-1,2260,"\n"],[-1,2350,"-"],[1,2351,"\n"],[1,2353,"-"],[-1,2455,"\n"],[1,2475,"\n"],[-1,7137,"\n"],[1,8029,"\n"]],[904,904],[8030,8030]]],[1540295690443,[null,[[1,904,""],[-1,904,"``"],[1,1175,"--"],[-1,1175,""],[1,1487,"5*"],[-1,1487,"**变"],[1,1507,"*"],[-1,1508,"*"],[1,1783,"-"],[-1,1783,""],[1,1846,""],[-1,1846,"-"],[1,2016,"="],[-1,2021,"="],[1,2261,"\n"],[1,2350,"-"],[-1,2350,"\n"],[-1,2353,"-"],[1,2456,"\n"],[-1,2475,"\n"],[1,7138,"\n"],[-1,8029,"\n"]],[8030,8030],[904,904]]],[1540295643799,["gjx16@GJXAIOU",[[1,1954,"（"],[-1,7375," "],[1,7376," "],[-1,7390,"     "],[1,7395,"     "],[-1,7411," "],[1,7412," "],[-1,7463," "],[1,7464," "],[-1,7512," "],[1,7513," "],[-1,7590," "],[1,7591," "],[-1,7609," "],[1,7610," "],[-1,7623," "],[1,7624," "],[-1,7668," \n "],[1,7671," \n "],[-1,7688," "],[1,7689," "],[-1,7701," "],[1,7702," "],[-1,7728," "],[1,7729," "],[-1,7739,"   "],[1,7742,"   "],[-1,7791," "],[1,7792," "],[-1,7813," "],[1,7814," "]],[1954,1954],[1955,1955]]],[1540295643925,["gjx16@GJXAIOU",[[1,1955,"）"]],[1955,1955],[1956,1956]]],[1540295653854,["gjx16@GJXAIOU",[[1,1955,"即使用static关键字的"]],[1955,1955],[1968,1968]]],[1540302475857,[null,[[-1,904,""],[1,904,"``"],[-1,1173,"--"],[1,1175,""],[-1,1487,"5*"],[1,1489,"**变"],[-1,1506,"*"],[1,1508,"*"],[-1,1782,"-"],[1,1783,""],[-1,1846,""],[1,1846,"-"],[-1,1953,"和"],[1,1969,"和"],[-1,2030,"="],[1,2036,"="],[-1,2275,"\n"],[-1,2365,"-"],[1,2366,"\n"],[1,2368,"-"],[-1,2470,"\n"],[1,2490,"\n"],[-1,7152,"\n"],[1,8044,"\n"]],[904,904],[8045,8045]]],[1540302475857,[null,[[1,904,""],[-1,904,"``"],[1,1175,"--"],[-1,1175,""],[1,1487,"5*"],[-1,1487,"**变"],[1,1507,"*"],[-1,1508,"*"],[1,1783,"-"],[-1,1783,""],[1,1846,""],[-1,1846,"-"],[1,1954,"和"],[-1,1969,"和"],[1,2031,"="],[-1,2036,"="],[1,2276,"\n"],[1,2365,"-"],[-1,2365,"\n"],[-1,2368,"-"],[1,2471,"\n"],[-1,2490,"\n"],[1,7153,"\n"],[-1,8044,"\n"]],[8045,8045],[904,904]]],[1540302463652,["gjx16@GJXAIOU",[[-1,3355,"有"]],[3356,3356],[3355,3355]]],[1540302469856,["gjx16@GJXAIOU",[[1,3355,"就是一个"]],[3355,3355],[3359,3359]]],[1540302475671,["gjx16@GJXAIOU",[[1,3361,"程序"]],[3361,3361],[3363,3363]]],[1540302535849,[null,[[-1,904,""],[1,904,"``"],[-1,1173,"--"],[1,1175,""],[-1,1487,"5*"],[1,1489,"**变"],[-1,1506,"*"],[1,1508,"*"],[-1,1782,"-"],[1,1783,""],[-1,1846,""],[1,1846,"-"],[-1,1953,"和"],[1,1969,"和"],[-1,2030,"="],[1,2036,"="],[-1,2275,"\n"],[-1,2365,"-"],[1,2366,"\n"],[1,2368,"-"],[-1,2470,"\n"],[1,2490,"\n"],[-1,3354,"有"],[1,3359,"错"],[-1,3360,"，"],[1,3363,"，"],[-1,7157,"\n"],[1,8049,"\n"]],[904,904],[8050,8050]]],[1540302535849,[null,[[1,904,""],[-1,904,"``"],[1,1175,"--"],[-1,1175,""],[1,1487,"5*"],[-1,1487,"**变"],[1,1507,"*"],[-1,1508,"*"],[1,1783,"-"],[-1,1783,""],[1,1846,""],[-1,1846,"-"],[1,1954,"和"],[-1,1969,"和"],[1,2031,"="],[-1,2036,"="],[1,2276,"\n"],[1,2365,"-"],[-1,2365,"\n"],[-1,2368,"-"],[1,2471,"\n"],[-1,2490,"\n"],[1,3355,"有"],[-1,3359,"错"],[1,3361,"，"],[-1,3363,"，"],[1,7158,"\n"],[-1,8049,"\n"]],[8050,8050],[904,904]]],[1540302476825,["gjx16@GJXAIOU",[[1,3363,"例子"]],[3363,3363],[3365,3365]]],[1540302655866,[null,[[-1,904,""],[1,904,"``"],[-1,1173,"--"],[1,1175,""],[-1,1487,"5*"],[1,1489,"**变"],[-1,1506,"*"],[1,1508,"*"],[-1,1782,"-"],[1,1783,""],[-1,1846,""],[1,1846,"-"],[-1,1953,"和"],[1,1969,"和"],[-1,2030,"="],[1,2036,"="],[-1,2275,"\n"],[-1,2365,"-"],[1,2366,"\n"],[1,2368,"-"],[-1,2470,"\n"],[1,2490,"\n"],[-1,3354,"有"],[1,3359,"错"],[-1,3360,"，"],[1,3365,"，"],[-1,7159,"\n"],[1,8051,"\n"]],[904,904],[8052,8052]]],[1540302655866,[null,[[1,904,""],[-1,904,"``"],[1,1175,"--"],[-1,1175,""],[1,1487,"5*"],[-1,1487,"**变"],[1,1507,"*"],[-1,1508,"*"],[1,1783,"-"],[-1,1783,""],[1,1846,""],[-1,1846,"-"],[1,1954,"和"],[-1,1969,"和"],[1,2031,"="],[-1,2036,"="],[1,2276,"\n"],[1,2365,"-"],[-1,2365,"\n"],[-1,2368,"-"],[1,2471,"\n"],[-1,2490,"\n"],[1,3355,"有"],[-1,3359,"错"],[1,3361,"，"],[-1,3365,"，"],[1,7160,"\n"],[-1,8051,"\n"]],[8052,8052],[904,904]]],[1540302643298,["gjx16@GJXAIOU",[[1,1702,"\n"]],[1700,1700],[1701,1701]]],[1540302644546,["gjx16@GJXAIOU",[[1,1703,"\n"]],[1701,1701],[1702,1702]]],[1540302653230,["gjx16@GJXAIOU",[[1,1702,"研究作用："]],[1702,1702],[1707,1707]]],[1540302654013,["gjx16@GJXAIOU",[[1,1709,"\n"]],[1707,1707],[1708,1708]]],[1540302715852,[null,[[-1,904,""],[1,904,"``"],[-1,1173,"--"],[1,1175,""],[-1,1487,"5*"],[1,1489,"**变"],[-1,1506,"*"],[1,1508,"*"],[-1,1701,"!"],[1,1710,"!"],[-1,1790,"-"],[-1,1854,""],[1,1854,"-"],[-1,1961,"和"],[1,1977,"和"],[-1,2038,"="],[1,2044,"="],[-1,2283,"\n"],[-1,2373,"-"],[1,2374,"\n"],[1,2376,"-"],[-1,2478,"\n"],[1,2498,"\n"],[-1,3362,"有"],[1,3367,"错"],[-1,3368,"，"],[1,3373,"，"],[-1,7167,"\n"],[1,8059,"\n"]],[904,904],[8060,8060]]],[1540302715852,[null,[[1,904,""],[-1,904,"``"],[1,1175,"--"],[-1,1175,""],[1,1487,"5*"],[-1,1487,"**变"],[1,1507,"*"],[-1,1508,"*"],[1,1702,"!"],[-1,1710,"!"],[1,1791,"-"],[1,1854,""],[-1,1854,"-"],[1,1962,"和"],[-1,1977,"和"],[1,2039,"="],[-1,2044,"="],[1,2284,"\n"],[1,2373,"-"],[-1,2373,"\n"],[-1,2376,"-"],[1,2479,"\n"],[-1,2498,"\n"],[1,3363,"有"],[-1,3367,"错"],[1,3369,"，"],[-1,3373,"，"],[1,7168,"\n"],[-1,8059,"\n"]],[8060,8060],[904,904]]],[1540302666304,["gjx16@GJXAIOU",[[1,1708,"- 生命周期"]],[1708,1708],[1714,1714]]],[1540302666916,["gjx16@GJXAIOU",[[1,1715,"- \n"]],[1714,1714],[1717,1717]]],[1540302672374,["gjx16@GJXAIOU",[[1,1717,"作用域"]],[1717,1717],[1720,1720]]],[1540302702486,["gjx16@GJXAIOU",[[1,1865,"分区："]],[1865,1865],[1868,1868]]],[1540302704291,["gjx16@GJXAIOU",[[1,1869,"\n"]],[1868,1868],[1869,1869]]],[1540303075856,[null,[[-1,904,""],[1,904,"``"],[-1,1173,"--"],[1,1175,""],[-1,1487,"5*"],[1,1489,"**变"],[-1,1506,"*"],[1,1508,"*"],[-1,1701,"!"],[1,1702,""],[1,1722,"!"],[-1,1802,"-"],[-1,1870,""],[1,1870,"-"],[-1,1977,"和"],[1,1993,"和"],[-1,2054,"="],[1,2060,"="],[-1,2299,"\n"],[-1,2389,"-"],[1,2390,"\n"],[1,2392,"-"],[-1,2494,"\n"],[1,2514,"\n"],[-1,3378,"有"],[1,3383,"错"],[-1,3384,"，"],[1,3389,"，"],[-1,7183,"\n"],[1,8075,"\n"]],[904,904],[8076,8076]]],[1540303075856,[null,[[1,904,""],[-1,904,"``"],[1,1175,"--"],[-1,1175,""],[1,1487,"5*"],[-1,1487,"**变"],[1,1507,"*"],[-1,1508,"*"],[1,1702,"!"],[-1,1702,""],[-1,1722,"!"],[1,1803,"-"],[1,1870,""],[-1,1870,"-"],[1,1978,"和"],[-1,1993,"和"],[1,2055,"="],[-1,2060,"="],[1,2300,"\n"],[1,2389,"-"],[-1,2389,"\n"],[-1,2392,"-"],[1,2495,"\n"],[-1,2514,"\n"],[1,3379,"有"],[-1,3383,"错"],[1,3385,"，"],[-1,3389,"，"],[1,7184,"\n"],[-1,8075,"\n"]],[8076,8076],[904,904]]],[1540303038867,["gjx16@GJXAIOU",[[1,1865,"**"],[1,1868,"**"]],[1865,1868],[1865,1872]]],[1540303045888,["gjx16@GJXAIOU",[[1,1803,"**"],[1,1807,"**："]],[1803,1807],[1810,1810]]],[1540303049014,["gjx16@GJXAIOU",[[1,1702,"**"],[1,1707,"**"]],[1702,1707],[1702,1711]]],[1540303435868,[null,[[-1,904,""],[1,904,"``"],[-1,1173,"--"],[1,1175,""],[-1,1487,"5*"],[1,1489,"**变"],[-1,1506,"*"],[1,1508,"*"],[-1,1701,"!"],[1,1702,""],[1,1726,"!"],[-1,1806,"-"],[1,1813,"："],[-1,1815,"："],[-1,1883,""],[1,1883,"-"],[-1,1990,"和"],[1,2006,"和"],[-1,2067,"="],[1,2073,"="],[-1,2312,"\n"],[-1,2402,"-"],[1,2403,"\n"],[1,2405,"-"],[-1,2507,"\n"],[1,2527,"\n"],[-1,3391,"有"],[1,3396,"错"],[-1,3397,"，"],[1,3402,"，"],[-1,7196,"\n"],[1,8088,"\n"]],[904,904],[8089,8089]]],[1540303435868,[null,[[1,904,""],[-1,904,"``"],[1,1175,"--"],[-1,1175,""],[1,1487,"5*"],[-1,1487,"**变"],[1,1507,"*"],[-1,1508,"*"],[1,1702,"!"],[-1,1702,""],[-1,1726,"!"],[1,1807,"-"],[-1,1813,"："],[1,1816,"："],[1,1883,""],[-1,1883,"-"],[1,1991,"和"],[-1,2006,"和"],[1,2068,"="],[-1,2073,"="],[1,2313,"\n"],[1,2402,"-"],[-1,2402,"\n"],[-1,2405,"-"],[1,2508,"\n"],[-1,2527,"\n"],[1,3392,"有"],[-1,3396,"错"],[1,3398,"，"],[-1,3402,"，"],[1,7197,"\n"],[-1,8088,"\n"]],[8089,8089],[904,904]]],[1540303432577,["gjx16@GJXAIOU",[[1,2838,"\n    "]],[2833,2833],[2838,2838]]],[1540303434658,["gjx16@GJXAIOU",[[1,2838,"篇"]],[2838,2838],[2839,2839]]],[1540303435459,["gjx16@GJXAIOU",[[-1,2838,"篇"]],[2839,2839],[2838,2838]]],[1540303449652,[null,[[-1,904,""],[1,904,"``"],[-1,1173,"--"],[1,1175,""],[-1,1487,"5*"],[1,1489,"**变"],[-1,1506,"*"],[1,1508,"*"],[-1,1701,"!"],[1,1702,""],[1,1726,"!"],[-1,1806,"-"],[1,1813,"："],[-1,1815,"："],[-1,1883,""],[1,1883,"-"],[-1,1990,"和"],[1,2006,"和"],[-1,2067,"="],[1,2073,"="],[-1,2312,"\n"],[-1,2402,"-"],[1,2403,"\n"],[1,2405,"-"],[-1,2507,"\n"],[1,2527,"\n"],[-1,2837,"r"],[1,2843,"r"],[-1,3396,"有"],[1,3401,"错"],[-1,3402,"，"],[1,3407,"，"],[-1,7201,"\n"],[1,8093,"\n"]],[904,904],[8094,8094]]],[1540303449652,[null,[[1,904,""],[-1,904,"``"],[1,1175,"--"],[-1,1175,""],[1,1487,"5*"],[-1,1487,"**变"],[1,1507,"*"],[-1,1508,"*"],[1,1702,"!"],[-1,1702,""],[-1,1726,"!"],[1,1807,"-"],[-1,1813,"："],[1,1816,"："],[1,1883,""],[-1,1883,"-"],[1,1991,"和"],[-1,2006,"和"],[1,2068,"="],[-1,2073,"="],[1,2313,"\n"],[1,2402,"-"],[-1,2402,"\n"],[-1,2405,"-"],[1,2508,"\n"],[-1,2527,"\n"],[1,2838,"r"],[-1,2843,"r"],[1,3397,"有"],[-1,3401,"错"],[1,3403,"，"],[-1,3407,"，"],[1,7202,"\n"],[-1,8093,"\n"]],[8094,8094],[904,904]]],[1540303442933,["gjx16@GJXAIOU",[[1,2838,"p = NULLl"]],[2838,2838],[2847,2847]]],[1540303446729,["gjx16@GJXAIOU",[[-1,2846,"l"]],[2847,2847],[2846,2846]]],[1540303447372,["gjx16@GJXAIOU",[[1,2846,";"]],[2846,2846],[2847,2847]]],[1540303569678,[null,[[-1,904,""],[1,904,"``"],[-1,1173,"--"],[1,1175,""],[-1,1487,"5*"],[1,1489,"**变"],[-1,1506,"*"],[1,1508,"*"],[-1,1701,"!"],[1,1702,""],[1,1726,"!"],[-1,1806,"-"],[1,1813,"："],[-1,1815,"："],[-1,1883,""],[1,1883,"-"],[-1,1990,"和"],[1,2006,"和"],[-1,2067,"="],[1,2073,"="],[-1,2312,"\n"],[-1,2402,"-"],[1,2403,"\n"],[1,2405,"-"],[-1,2507,"\n"],[1,2527,"\n"],[-1,2837,"r"],[1,2852,"r"],[-1,3405,"有"],[1,3410,"错"],[-1,3411,"，"],[1,3416,"，"],[-1,7210,"\n"],[1,8102,"\n"]],[904,904],[8103,8103]]],[1540303569678,[null,[[1,904,""],[-1,904,"``"],[1,1175,"--"],[-1,1175,""],[1,1487,"5*"],[-1,1487,"**变"],[1,1507,"*"],[-1,1508,"*"],[1,1702,"!"],[-1,1702,""],[-1,1726,"!"],[1,1807,"-"],[-1,1813,"："],[1,1816,"："],[1,1883,""],[-1,1883,"-"],[1,1991,"和"],[-1,2006,"和"],[1,2068,"="],[-1,2073,"="],[1,2313,"\n"],[1,2402,"-"],[-1,2402,"\n"],[-1,2405,"-"],[1,2508,"\n"],[-1,2527,"\n"],[1,2838,"r"],[-1,2852,"r"],[1,3406,"有"],[-1,3410,"错"],[1,3412,"，"],[-1,3416,"，"],[1,7211,"\n"],[-1,8102,"\n"]],[8103,8103],[904,904]]],[1540303521593,["gjx16@GJXAIOU",[[1,2979,"//"]],[2979,2979],[2981,2981]]],[1540303523298,["gjx16@GJXAIOU",[[-1,2979,"//"]],[2981,2981],[2979,2979]]],[1540303525872,["gjx16@GJXAIOU",[[1,2979,",yinw"]],[2979,2979],[2984,2984]]],[1540303526795,["gjx16@GJXAIOU",[[-1,2980,"yinw"]],[2984,2984],[2980,2980]]],[1540303547600,["gjx16@GJXAIOU",[[1,2980,"因为函数执行结束之后变量就完全释放了"]],[2980,2980],[2998,2998]]],[1540303629673,[null,[[-1,904,""],[1,904,"``"],[-1,1173,"--"],[1,1175,""],[-1,1487,"5*"],[1,1489,"**变"],[-1,1506,"*"],[1,1508,"*"],[-1,1701,"!"],[1,1702,""],[1,1726,"!"],[-1,1806,"-"],[1,1813,"："],[-1,1815,"："],[-1,1883,""],[1,1883,"-"],[-1,1990,"和"],[1,2006,"和"],[-1,2067,"="],[1,2073,"="],[-1,2312,"\n"],[-1,2402,"-"],[1,2403,"\n"],[1,2405,"-"],[-1,2507,"\n"],[1,2527,"\n"],[-1,2837,"r"],[1,2852,"r"],[-1,2978,"\n"],[1,2998,"\n"],[-1,3424,"有"],[1,3429,"错"],[-1,3430,"，"],[1,3435,"，"],[-1,7229,"\n"],[1,8121,"\n"]],[904,904],[8122,8122]]],[1540303629673,[null,[[1,904,""],[-1,904,"``"],[1,1175,"--"],[-1,1175,""],[1,1487,"5*"],[-1,1487,"**变"],[1,1507,"*"],[-1,1508,"*"],[1,1702,"!"],[-1,1702,""],[-1,1726,"!"],[1,1807,"-"],[-1,1813,"："],[1,1816,"："],[1,1883,""],[-1,1883,"-"],[1,1991,"和"],[-1,2006,"和"],[1,2068,"="],[-1,2073,"="],[1,2313,"\n"],[1,2402,"-"],[-1,2402,"\n"],[-1,2405,"-"],[1,2508,"\n"],[-1,2527,"\n"],[1,2838,"r"],[-1,2852,"r"],[1,2979,"\n"],[-1,2998,"\n"],[1,3425,"有"],[-1,3429,"错"],[1,3431,"，"],[-1,3435,"，"],[1,7230,"\n"],[-1,8121,"\n"]],[8122,8122],[904,904]]],[1540303599941,["gjx16@GJXAIOU",[[1,4790," 这里分派的"]],[4790,4790],[4796,4796]]],[1540303600656,["gjx16@GJXAIOU",[[-1,4793,"分派的"]],[4796,4796],[4793,4793]]],[1540303625253,["gjx16@GJXAIOU",[[1,4793,"分配的空间里面可能有数据，需要手动清空"]],[4793,4793],[4812,4812]]],[1540303689688,[null,[[-1,904,""],[1,904,"``"],[-1,1173,"--"],[1,1175,""],[-1,1487,"5*"],[1,1489,"**变"],[-1,1506,"*"],[1,1508,"*"],[-1,1701,"!"],[1,1702,""],[1,1726,"!"],[-1,1806,"-"],[1,1813,"："],[-1,1815,"："],[-1,1883,""],[1,1883,"-"],[-1,1990,"和"],[1,2006,"和"],[-1,2067,"="],[1,2073,"="],[-1,2312,"\n"],[-1,2402,"-"],[1,2403,"\n"],[1,2405,"-"],[-1,2507,"\n"],[1,2527,"\n"],[-1,2837,"r"],[1,2852,"r"],[-1,2978,"\n"],[1,2998,"\n"],[-1,3424,"有"],[1,3429,"错"],[-1,3430,"，"],[1,3435,"，"],[-1,4789,"\n"],[1,4812,"\n"],[-1,7251,"\n"],[-1,8143,""],[1,8143,"\n"]],[904,904],[8144,8144]]],[1540303689688,[null,[[1,904,""],[-1,904,"``"],[1,1175,"--"],[-1,1175,""],[1,1487,"5*"],[-1,1487,"**变"],[1,1507,"*"],[-1,1508,"*"],[1,1702,"!"],[-1,1702,""],[-1,1726,"!"],[1,1807,"-"],[-1,1813,"："],[1,1816,"："],[1,1883,""],[-1,1883,"-"],[1,1991,"和"],[-1,2006,"和"],[1,2068,"="],[-1,2073,"="],[1,2313,"\n"],[1,2402,"-"],[-1,2402,"\n"],[-1,2405,"-"],[1,2508,"\n"],[-1,2527,"\n"],[1,2838,"r"],[-1,2852,"r"],[1,2979,"\n"],[-1,2998,"\n"],[1,3425,"有"],[-1,3429,"错"],[1,3431,"，"],[-1,3435,"，"],[1,4790,"\n"],[-1,4812,"\n"],[1,7252,"\n"],[1,8143,""],[-1,8143,"\n"]],[8144,8144],[904,904]]],[1540303631600,["gjx16@GJXAIOU",[[1,5091,"分派的"]],[5091,5091],[5094,5094]]],[1540303633200,["gjx16@GJXAIOU",[[-1,5091,"分派的"]],[5094,5094],[5091,5091]]],[1540303641720,["gjx16@GJXAIOU",[[1,5091,"分配的堆孔家"]],[5091,5091],[5097,5097]]],[1540303642930,["gjx16@GJXAIOU",[[-1,5095,"孔家"]],[5097,5097],[5095,5095]]],[1540303658527,["gjx16@GJXAIOU",[[1,5095,"空间已经自动的清空（）"]],[5095,5095],[5106,5106]]],[1540303661711,["gjx16@GJXAIOU",[[1,5105,"置零"]],[5105,5105],[5107,5107]]],[1540303689432,["gjx16@GJXAIOU",[[1,5372," 划分的孔家与已有的空间地址是"]],[5372,5372],[5387,5387]]],[1540303749674,[null,[[-1,904,""],[1,904,"``"],[-1,1173,"--"],[1,1175,""],[-1,1487,"5*"],[1,1489,"**变"],[-1,1506,"*"],[1,1508,"*"],[-1,1701,"!"],[1,1702,""],[1,1726,"!"],[-1,1806,"-"],[1,1813,"："],[-1,1815,"："],[-1,1883,""],[1,1883,"-"],[-1,1990,"和"],[1,2006,"和"],[-1,2067,"="],[1,2073,"="],[-1,2312,"\n"],[-1,2402,"-"],[1,2403,"\n"],[1,2405,"-"],[-1,2507,"\n"],[1,2527,"\n"],[-1,2837,"r"],[1,2852,"r"],[-1,2978,"\n"],[1,2998,"\n"],[-1,3424,"有"],[1,3429,"错"],[-1,3430,"，"],[1,3435,"，"],[-1,4789,"\n"],[1,4812,"\n"],[-1,5090,"\n"],[1,5108,"\n"],[-1,5371,"\n"],[1,5387,"\n"],[-1,7283,"\n"],[-1,8175,""],[1,8175,"\n"]],[904,904],[8176,8176]]],[1540303749674,[null,[[1,904,""],[-1,904,"``"],[1,1175,"--"],[-1,1175,""],[1,1487,"5*"],[-1,1487,"**变"],[1,1507,"*"],[-1,1508,"*"],[1,1702,"!"],[-1,1702,""],[-1,1726,"!"],[1,1807,"-"],[-1,1813,"："],[1,1816,"："],[1,1883,""],[-1,1883,"-"],[1,1991,"和"],[-1,2006,"和"],[1,2068,"="],[-1,2073,"="],[1,2313,"\n"],[1,2402,"-"],[-1,2402,"\n"],[-1,2405,"-"],[1,2508,"\n"],[-1,2527,"\n"],[1,2838,"r"],[-1,2852,"r"],[1,2979,"\n"],[-1,2998,"\n"],[1,3425,"有"],[-1,3429,"错"],[1,3431,"，"],[-1,3435,"，"],[1,4790,"\n"],[-1,4812,"\n"],[1,5091,"\n"],[-1,5108,"\n"],[1,5372,"\n"],[-1,5387,"\n"],[1,7284,"\n"],[1,8175,""],[-1,8175,"\n"]],[8176,8176],[904,904]]],[1540303697626,["gjx16@GJXAIOU",[[1,5387,"连续的"]],[5387,5387],[5390,5390]]],[1540303702345,["gjx16@GJXAIOU",[[-1,5376,"孔家"]],[5378,5378],[5376,5376]]],[1540303704598,["gjx16@GJXAIOU",[[1,5376,"空间"]],[5376,5376],[5378,5378]]],[1540303869678,[null,[[-1,904,""],[1,904,"``"],[-1,1173,"--"],[1,1175,""],[-1,1487,"5*"],[1,1489,"**变"],[-1,1506,"*"],[1,1508,"*"],[-1,1701,"!"],[1,1702,""],[1,1726,"!"],[-1,1806,"-"],[1,1813,"："],[-1,1815,"："],[-1,1883,""],[1,1883,"-"],[-1,1990,"和"],[1,2006,"和"],[-1,2067,"="],[1,2073,"="],[-1,2312,"\n"],[-1,2402,"-"],[1,2403,"\n"],[1,2405,"-"],[-1,2507,"\n"],[1,2527,"\n"],[-1,2837,"r"],[1,2852,"r"],[-1,2978,"\n"],[1,2998,"\n"],[-1,3424,"有"],[1,3429,"错"],[-1,3430,"，"],[1,3435,"，"],[-1,4789,"\n"],[1,4812,"\n"],[-1,5090,"\n"],[1,5108,"\n"],[-1,5371,"\n"],[1,5390,"\n"],[-1,7286,"\n"],[-1,8178,""],[1,8178,"\n"]],[904,904],[8179,8179]]],[1540303869678,[null,[[1,904,""],[-1,904,"``"],[1,1175,"--"],[-1,1175,""],[1,1487,"5*"],[-1,1487,"**变"],[1,1507,"*"],[-1,1508,"*"],[1,1702,"!"],[-1,1702,""],[-1,1726,"!"],[1,1807,"-"],[-1,1813,"："],[1,1816,"："],[1,1883,""],[-1,1883,"-"],[1,1991,"和"],[-1,2006,"和"],[1,2068,"="],[-1,2073,"="],[1,2313,"\n"],[1,2402,"-"],[-1,2402,"\n"],[-1,2405,"-"],[1,2508,"\n"],[-1,2527,"\n"],[1,2838,"r"],[-1,2852,"r"],[1,2979,"\n"],[-1,2998,"\n"],[1,3425,"有"],[-1,3429,"错"],[1,3431,"，"],[-1,3435,"，"],[1,4790,"\n"],[-1,4812,"\n"],[1,5091,"\n"],[-1,5108,"\n"],[1,5372,"\n"],[-1,5390,"\n"],[1,7287,"\n"],[1,8178,""],[-1,8178,"\n"]],[8179,8179],[904,904]]],[1540303820431,["gjx16@GJXAIOU",[[1,7324,"![函数调用模型1]($resource/%E5%87%BD%E6%95%B0%E8%B0%83%E7%94%A8%E6%A8%A1%E5%9E%8B1.png)"]],[7324,7324],[7406,7406]]],[1540303929685,[null,[[-1,904,""],[1,904,"``"],[-1,1173,"--"],[1,1175,""],[-1,1487,"5*"],[1,1489,"**变"],[-1,1506,"*"],[1,1508,"*"],[-1,1701,"!"],[1,1702,""],[1,1726,"!"],[-1,1806,"-"],[1,1813,"："],[-1,1815,"："],[-1,1883,""],[1,1883,"-"],[-1,1990,"和"],[1,2006,"和"],[-1,2067,"="],[1,2073,"="],[-1,2312,"\n"],[-1,2402,"-"],[1,2403,"\n"],[1,2405,"-"],[-1,2507,"\n"],[1,2527,"\n"],[-1,2837,"r"],[1,2852,"r"],[-1,2978,"\n"],[1,2998,"\n"],[-1,3424,"有"],[1,3429,"错"],[-1,3430,"，"],[1,3435,"，"],[-1,4789,"\n"],[1,4812,"\n"],[-1,5090,"\n"],[1,5108,"\n"],[-1,5371,"\n"],[1,5390,"\n"],[-1,7286,"\n"],[-1,8259,""],[1,8259,"\n"]],[904,904],[8260,8260]]],[1540303929685,[null,[[1,904,""],[-1,904,"``"],[1,1175,"--"],[-1,1175,""],[1,1487,"5*"],[-1,1487,"**变"],[1,1507,"*"],[-1,1508,"*"],[1,1702,"!"],[-1,1702,""],[-1,1726,"!"],[1,1807,"-"],[-1,1813,"："],[1,1816,"："],[1,1883,""],[-1,1883,"-"],[1,1991,"和"],[-1,2006,"和"],[1,2068,"="],[-1,2073,"="],[1,2313,"\n"],[1,2402,"-"],[-1,2402,"\n"],[-1,2405,"-"],[1,2508,"\n"],[-1,2527,"\n"],[1,2838,"r"],[-1,2852,"r"],[1,2979,"\n"],[-1,2998,"\n"],[1,3425,"有"],[-1,3429,"错"],[1,3431,"，"],[-1,3435,"，"],[1,4790,"\n"],[-1,4812,"\n"],[1,5091,"\n"],[-1,5108,"\n"],[1,5372,"\n"],[-1,5390,"\n"],[1,7287,"\n"],[1,8259,""],[-1,8259,"\n"]],[8260,8260],[904,904]]],[1540303916089,["gjx16@GJXAIOU",[[1,7529,"![函数调用模型2]($resource/%E5%87%BD%E6%95%B0%E8%B0%83%E7%94%A8%E6%A8%A1%E5%9E%8B2.png)"]],[7529,7529],[7611,7611]]],[1540303989681,[null,[[-1,904,""],[1,904,"``"],[-1,1173,"--"],[1,1175,""],[-1,1487,"5*"],[1,1489,"**变"],[-1,1506,"*"],[1,1508,"*"],[-1,1701,"!"],[1,1702,""],[1,1726,"!"],[-1,1806,"-"],[1,1813,"："],[-1,1815,"："],[-1,1883,""],[1,1883,"-"],[-1,1990,"和"],[1,2006,"和"],[-1,2067,"="],[1,2073,"="],[-1,2312,"\n"],[-1,2402,"-"],[1,2403,"\n"],[1,2405,"-"],[-1,2507,"\n"],[1,2527,"\n"],[-1,2837,"r"],[1,2852,"r"],[-1,2978,"\n"],[1,2998,"\n"],[-1,3424,"有"],[1,3429,"错"],[-1,3430,"，"],[1,3435,"，"],[-1,4789,"\n"],[1,4812,"\n"],[-1,5090,"\n"],[1,5108,"\n"],[-1,5371,"\n"],[1,5390,"\n"],[-1,7286,"\n"],[-1,8340,""],[1,8340,"\n"]],[904,904],[8341,8341]]],[1540303989681,[null,[[1,904,""],[-1,904,"``"],[1,1175,"--"],[-1,1175,""],[1,1487,"5*"],[-1,1487,"**变"],[1,1507,"*"],[-1,1508,"*"],[1,1702,"!"],[-1,1702,""],[-1,1726,"!"],[1,1807,"-"],[-1,1813,"："],[1,1816,"："],[1,1883,""],[-1,1883,"-"],[1,1991,"和"],[-1,2006,"和"],[1,2068,"="],[-1,2073,"="],[1,2313,"\n"],[1,2402,"-"],[-1,2402,"\n"],[-1,2405,"-"],[1,2508,"\n"],[-1,2527,"\n"],[1,2838,"r"],[-1,2852,"r"],[1,2979,"\n"],[-1,2998,"\n"],[1,3425,"有"],[-1,3429,"错"],[1,3431,"，"],[-1,3435,"，"],[1,4790,"\n"],[-1,4812,"\n"],[1,5091,"\n"],[-1,5108,"\n"],[1,5372,"\n"],[-1,5390,"\n"],[1,7287,"\n"],[1,8340,""],[-1,8340,"\n"]],[8341,8341],[904,904]]],[1540303934322,["gjx16@GJXAIOU",[[1,7612,"\n"]],[7611,7611],[7612,7612]]],[1540303942366,["gjx16@GJXAIOU",[[1,7612,"例子程序："]],[7612,7612],[7617,7617]]],[1540303943306,["gjx16@GJXAIOU",[[1,7618,"\n"]],[7617,7617],[7618,7618]]],[1540303945321,["gjx16@GJXAIOU",[[1,7619,"\n"]],[7618,7618],[7619,7619]]],[1540303946357,["gjx16@GJXAIOU",[[1,7619,"```"]],[7619,7619],[7622,7622]]],[1540303946408,["gjx16@GJXAIOU",[[1,7622,"language\n```\n"]],[7622,7622],[7622,7630]]],[1540303947807,["gjx16@GJXAIOU",[[-1,7622,"language"],[1,7630,"c"]],[7622,7630],[7623,7623]]],[1540303950544,["gjx16@GJXAIOU",[[-1,7628,"\n"]],[7628,7628],[7627,7627]]],[1540303951480,["gjx16@GJXAIOU",[[-1,7624,"```"]],[7627,7627],[7624,7624]]],[1540303955233,["gjx16@GJXAIOU",[[1,8158,"\n"]],[8156,8156],[8157,8157]]],[1540303956188,["gjx16@GJXAIOU",[[1,8157,"```"]],[8157,8157],[8160,8160]]],[1540303961476,["gjx16@GJXAIOU",[[1,8162,"**"],[1,8165,"**"]],[8162,8165],[8162,8169]]]],null,"gjx16@GJXAIOU"]]}