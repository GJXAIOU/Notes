{"compress":true,"commitItems":[["23001eaa-03d8-45c8-8f0d-289744bfd78b",1538008244329,"",[[1538008206161,["gjx16@GJXAIOU",[[1,0,"# day11 复合类型\n\n\n\n"]],[0,0],[15,15]]]],null,"gjx16@GJXAIOU"],["bd33e56e-32a4-40c0-801e-7fa0cffd79b9",1538055354226,"# day11 复合类型\n\n\n\n",[[1538055350185,["gjx16@GJXAIOU",[[-1,15,"\n"],[1,16,"#"]],[15,15],[16,16]]],[1538055351525,["gjx16@GJXAIOU",[[1,16,"# "]],[16,16],[18,18]]],[1538055366381,["gjx16@GJXAIOU",[[1,18,"结构体的定义和成员初始化"]],[18,18],[30,30]]],[1538055366920,["gjx16@GJXAIOU",[[1,30,"\n\n"]],[30,30],[31,31]]],[1538055367404,["gjx16@GJXAIOU",[[1,32,"\n"]],[31,31],[32,32]]],[1538055368724,["gjx16@GJXAIOU",[[-1,32,"\n"],[1,33,"#"]],[32,32],[33,33]]],[1538055385137,["gjx16@GJXAIOU",[[1,33,"# 结构体成员内存对齐详解"]],[33,33],[46,46]]],[1538055385601,["gjx16@GJXAIOU",[[1,46,"\n\n"]],[46,46],[47,47]]],[1538055385743,["gjx16@GJXAIOU",[[1,48,"\n"]],[47,47],[48,48]]],[1538055393122,["gjx16@GJXAIOU",[[-1,48,"\n"],[1,49,"#"]],[48,48],[49,49]]],[1538055403116,["gjx16@GJXAIOU",[[1,49,"# 结构体成员的为"]],[49,49],[58,58]]],[1538055403841,["gjx16@GJXAIOU",[[-1,57,"为"]],[58,58],[57,57]]],[1538055408082,["gjx16@GJXAIOU",[[1,57,"位字段"]],[57,57],[60,60]]],[1538055410336,["gjx16@GJXAIOU",[[1,60,"\n\n"]],[60,60],[61,61]]],[1538055410763,["gjx16@GJXAIOU",[[1,62,"\n"]],[61,61],[62,62]]],[1538055412159,["gjx16@GJXAIOU",[[-1,62,"\n"],[1,63,"#"]],[62,62],[63,63]]],[1538055412718,["gjx16@GJXAIOU",[[1,63,"# "]],[63,63],[65,65]]],[1538055424173,["gjx16@GJXAIOU",[[1,65,"结构体数组的定义和使用"]],[65,65],[76,76]]],[1538055424618,["gjx16@GJXAIOU",[[1,76,"\n\n"]],[76,76],[77,77]]],[1538055424919,["gjx16@GJXAIOU",[[1,78,"\n"]],[77,77],[78,78]]],[1538055426109,["gjx16@GJXAIOU",[[-1,78,"\n"],[1,79,"#"]],[78,78],[79,79]]],[1538055429583,["gjx16@GJXAIOU",[[1,79,"# 界都"]],[79,79],[83,83]]],[1538055430413,["gjx16@GJXAIOU",[[-1,81,"界都"]],[83,83],[81,81]]],[1538055438024,["gjx16@GJXAIOU",[[1,81,"结构体"]],[81,81],[84,84]]],[1538055439261,["gjx16@GJXAIOU",[[-1,83,"体"]],[84,84],[83,83]]],[1538055444031,["gjx16@GJXAIOU",[[1,83,"嵌套和"]],[83,83],[86,86]]],[1538055447244,["gjx16@GJXAIOU",[[-1,85,"和"]],[86,86],[85,85]]],[1538055453688,["gjx16@GJXAIOU",[[1,85,"以及结构和指针"]],[85,85],[92,92]]],[1538055454218,["gjx16@GJXAIOU",[[1,92,"\n\n"]],[92,92],[93,93]]],[1538055454901,["gjx16@GJXAIOU",[[1,94,"\n"]],[93,93],[94,94]]]],null,"gjx16@GJXAIOU"],["2d647ec3-e71a-4872-8e38-0548953a7daf",1538139780587,"# day11 复合类型\n\n\n## 结构体的定义和成员初始化\n\n## 结构体成员内存对齐详解\n\n## 结构体成员的位字段\n\n## 结构体数组的定义和使用\n\n## 结构嵌套以及结构和指针\n\n\n",[[1538139765853,["gjx16@GJXAIOU",[[1,32,"\n"]],[30,30],[31,31]]],[1538139766000,["gjx16@GJXAIOU",[[1,33,"\n"]],[31,31],[32,32]]],[1538139853865,["gjx16@GJXAIOU",[[1,31,"****"]],[31,31],[33,33]]],[1538139856581,["gjx16@GJXAIOU",[[1,33,"yingru "]],[33,33],[40,40]]],[1538139858697,["gjx16@GJXAIOU",[[-1,33,"yingru "]],[40,40],[33,33]]],[1538139874571,["gjx16@GJXAIOU",[[-1,31,"****"]],[35,35],[31,31]]],[1538139901264,["gjx16@GJXAIOU",[[1,32,"```"]],[32,32],[35,35]]],[1538139901288,["gjx16@GJXAIOU",[[1,35,"language\n```\n"]],[35,35],[35,43]]],[1538139902221,["gjx16@GJXAIOU",[[-1,35,"language"],[1,43,"c"]],[35,43],[36,36]]],[1538139902493,["gjx16@GJXAIOU",[[1,37,"\n"]],[36,36],[37,37]]],[1538139907617,["gjx16@GJXAIOU",[[1,37,"#include<>"]],[37,37],[47,47]]],[1538139911514,["gjx16@GJXAIOU",[[1,46,"stdio.h"]],[46,46],[53,53]]],[1538139913578,["gjx16@GJXAIOU",[[1,55,"\n"]],[54,54],[55,55]]],[1538139914713,["gjx16@GJXAIOU",[[1,56,"\n"]],[55,55],[56,56]]],[1538139926457,["gjx16@GJXAIOU",[[1,56,"int main()"]],[56,56],[66,66]]],[1538139927038,["gjx16@GJXAIOU",[[1,67,"\n"]],[66,66],[67,67]]],[1538139928370,["gjx16@GJXAIOU",[[1,67,"{}"]],[67,67],[69,69]]],[1538139929901,["gjx16@GJXAIOU",[[1,68,"\n"]],[68,68],[69,69]]],[1538139930101,["gjx16@GJXAIOU",[[1,69,"\n"]],[69,69],[70,70]]],[1538139930304,["gjx16@GJXAIOU",[[1,70,"\n"]],[70,70],[71,71]]],[1538139930496,["gjx16@GJXAIOU",[[1,71,"\n"]],[71,71],[72,72]]],[1538139944852,["gjx16@GJXAIOU",[[1,70,"struct student st   "]],[70,70],[90,90]]],[1538139947226,["gjx16@GJXAIOU",[[-1,87,"   "]],[90,90],[87,87]]],[1538139951081,["gjx16@GJXAIOU",[[1,87,"; //"]],[87,87],[91,91]]],[1538139983134,["gjx16@GJXAIOU",[[1,91,"定义了一个结构体的变量，名字叫做st"]],[91,91],[109,109]]],[1538139993760,["gjx16@GJXAIOU",[[1,55,"void s"]],[55,55],[61,61]]],[1538139996104,["gjx16@GJXAIOU",[[-1,55,"void s"]],[61,61],[55,55]]],[1538139996787,["gjx16@GJXAIOU",[[1,56,"\n"]],[55,55],[56,56]]],[1538140001523,["gjx16@GJXAIOU",[[1,56,"struct()"]],[56,56],[64,64]]],[1538140003032,["gjx16@GJXAIOU",[[-1,62,"()"]],[64,64],[62,62]]],[1538140006393,["gjx16@GJXAIOU",[[1,62," studeng"]],[62,62],[70,70]]],[1538140007077,["gjx16@GJXAIOU",[[-1,69,"g"]],[70,70],[69,69]]],[1538140007259,["gjx16@GJXAIOU",[[1,69,"t"]],[69,69],[70,70]]],[1538140007983,["gjx16@GJXAIOU",[[1,71,"\n"]],[70,70],[71,71]]],[1538140009679,["gjx16@GJXAIOU",[[1,71,"{}"]],[71,71],[73,73]]],[1538140010884,["gjx16@GJXAIOU",[[1,72,"\n"]],[72,72],[73,73]]],[1538140011048,["gjx16@GJXAIOU",[[1,73,"\n"]],[73,73],[74,74]]],[1538140011485,["gjx16@GJXAIOU",[[1,74,"\n"]],[74,74],[75,75]]],[1538140020554,["gjx16@GJXAIOU",[[1,73,"  cha"]],[73,73],[78,78]]],[1538140024149,["gjx16@GJXAIOU",[[1,78,"r nami[]"]],[78,78],[86,86]]],[1538140026106,["gjx16@GJXAIOU",[[-1,82,"mi[]"]],[86,86],[82,82]]],[1538140030609,["gjx16@GJXAIOU",[[1,82,"me[100];"]],[82,82],[90,90]]],[1538140030976,["gjx16@GJXAIOU",[[1,91,"  \n"]],[90,90],[93,93]]],[1538140034030,["gjx16@GJXAIOU",[[1,93,"int age;"]],[93,93],[101,101]]],[1538140034467,["gjx16@GJXAIOU",[[1,102,"  \n"]],[101,101],[104,104]]],[1538140038604,["gjx16@GJXAIOU",[[1,104,"int sex;"]],[104,104],[112,112]]],[1538140041248,["gjx16@GJXAIOU",[[-1,114,"}"]],[115,115],[114,114]]],[1538140041883,["gjx16@GJXAIOU",[[-1,114,"\n"]],[114,114],[113,113]]],[1538140066200,["gjx16@GJXAIOU",[[1,113,"}  //说明了一个结构体的数据成员类型"]],[113,113],[133,133]]],[1538140080297,["gjx16@GJXAIOU",[[1,180,"（）"]],[180,180],[182,182]]],[1538140084964,["gjx16@GJXAIOU",[[1,181,"在掌中"]],[181,181],[184,184]]],[1538140086274,["gjx16@GJXAIOU",[[-1,182,"掌中"]],[184,184],[182,182]]],[1538140088560,["gjx16@GJXAIOU",[[1,182,"栈中"]],[182,182],[184,184]]],[1538140170812,["gjx16@GJXAIOU",[[1,194,"\n"]],[192,192],[193,193]]],[1538140171632,["gjx16@GJXAIOU",[[1,195,"\n"]],[193,193],[194,194]]],[1538140173148,["gjx16@GJXAIOU",[[1,194,"、、"]],[194,194],[196,196]]],[1538140174110,["gjx16@GJXAIOU",[[-1,194,"、、"]],[196,196],[194,194]]],[1538140175872,["gjx16@GJXAIOU",[[1,194,"//shi"]],[194,194],[199,199]]],[1538140178585,["gjx16@GJXAIOU",[[-1,196,"shi"]],[199,199],[196,196]]],[1538140186116,["gjx16@GJXAIOU",[[1,196,"使用成员变量"]],[196,196],[202,202]]],[1538140187451,["gjx16@GJXAIOU",[[1,204,"\n"]],[202,202],[203,203]]],[1538140187807,["gjx16@GJXAIOU",[[1,205,"\n"]],[203,203],[204,204]]],[1538140193151,["gjx16@GJXAIOU",[[1,204,"dt."]],[204,204],[207,207]]],[1538140194557,["gjx16@GJXAIOU",[[-1,204,"dt."]],[207,207],[204,204]]],[1538140200101,["gjx16@GJXAIOU",[[1,204,"st.age "]],[204,204],[211,211]]],[1538140202465,["gjx16@GJXAIOU",[[1,211,"= 10;"]],[211,211],[216,216]]],[1538140203891,["gjx16@GJXAIOU",[[-1,213,"10;"]],[216,216],[213,213]]],[1538140205760,["gjx16@GJXAIOU",[[1,213,"20;"]],[213,213],[216,216]]],[1538140206119,["gjx16@GJXAIOU",[[1,218,"\n"]],[216,216],[217,217]]],[1538140208179,["gjx16@GJXAIOU",[[1,217,"st."]],[217,217],[220,220]]],[1538140792074,["gjx16@GJXAIOU",[[1,220,"sex = 0;"]],[220,220],[228,228]]],[1538140792746,["gjx16@GJXAIOU",[[1,230,"\n"]],[228,228],[229,229]]],[1538140800290,["gjx16@GJXAIOU",[[1,55,"#"]],[55,55],[56,56]]],[1538140804389,["gjx16@GJXAIOU",[[1,56,"include<>"]],[56,56],[65,65]]],[1538140808431,["gjx16@GJXAIOU",[[1,64,"string.h"]],[64,64],[72,72]]],[1538140823667,["gjx16@GJXAIOU",[[1,73,"//这里需要使用strco"]],[73,73],[86,86]]],[1538140824291,["gjx16@GJXAIOU",[[-1,85,"o"]],[86,86],[85,85]]],[1538140825244,["gjx16@GJXAIOU",[[1,85,"pi"]],[85,85],[87,87]]],[1538140826073,["gjx16@GJXAIOU",[[-1,86,"i"]],[87,87],[86,86]]],[1538140828754,["gjx16@GJXAIOU",[[1,86,"y函数"]],[86,86],[89,89]]],[1538140833535,["gjx16@GJXAIOU",[[1,73,"   "]],[73,73],[76,76]]],[1538140835464,["gjx16@GJXAIOU",[[1,93,"\n"]],[93,93],[94,94]]],[1538140838535,["gjx16@GJXAIOU",[[1,172,"\n"]],[172,172],[173,173]]],[1538140838687,["gjx16@GJXAIOU",[[1,173,"\n"]],[173,173],[174,174]]],[1538140850188,["gjx16@GJXAIOU",[[1,269,"strcpy();"]],[269,269],[278,278]]],[1538140856200,["gjx16@GJXAIOU",[[1,277,"st"]],[277,277],[279,279]]],[1538140857304,["gjx16@GJXAIOU",[[-1,277,"st"]],[279,279],[277,277]]],[1538140860003,["gjx16@GJXAIOU",[[1,276,"st."]],[276,276],[279,279]]],[1538140865062,["gjx16@GJXAIOU",[[1,279,"name,\"\""]],[279,279],[286,286]]],[1538140868423,["gjx16@GJXAIOU",[[1,285,"hel"]],[285,285],[288,288]]],[1538140869868,["gjx16@GJXAIOU",[[-1,285,"hel"]],[288,288],[285,285]]],[1538140876550,["gjx16@GJXAIOU",[[1,285,"zhangsan"]],[285,285],[293,293]]],[1538140879762,["gjx16@GJXAIOU",[[-1,285,"zhangsan"]],[293,293],[285,285]]],[1538140882339,["gjx16@GJXAIOU",[[1,285,"zhangsan"]],[285,285],[293,293]]],[1538140886515,["gjx16@GJXAIOU",[[1,295,"\n"]],[295,295],[296,296]]],[1538140887700,["gjx16@GJXAIOU",[[-1,295,"\n"]],[296,296],[295,295]]],[1538140889278,["gjx16@GJXAIOU",[[-1,295,";"]],[296,296],[295,295]]],[1538140891970,["gjx16@GJXAIOU",[[1,295,";"]],[295,295],[296,296]]],[1538140893030,["gjx16@GJXAIOU",[[1,298,"\n"]],[296,296],[297,297]]],[1538140898282,["gjx16@GJXAIOU",[[1,297,"printf();"]],[297,297],[306,306]]],[1538140904534,["gjx16@GJXAIOU",[[1,304,"\"\"\""]],[304,304],[307,307]]],[1538140905548,["gjx16@GJXAIOU",[[-1,306,"\""]],[307,307],[306,306]]],[1538140915526,["gjx16@GJXAIOU",[[1,305,"nm"]],[305,305],[307,307]]],[1538140916138,["gjx16@GJXAIOU",[[-1,306,"m"]],[307,307],[306,306]]],[1538140919839,["gjx16@GJXAIOU",[[1,306,"ame = "]],[306,306],[312,312]]],[1538140924684,["gjx16@GJXAIOU",[[1,312,"%s\\n"]],[312,312],[316,316]]],[1538140932613,["gjx16@GJXAIOU",[[1,317,",st.name"]],[317,317],[325,325]]],[1538141191446,["gjx16@GJXAIOU",[[1,188,"\n"]],[187,187],[188,188]]],[1538141191555,["gjx16@GJXAIOU",[[1,189,"\n"]],[188,188],[189,189]]],[1538141194091,["gjx16@GJXAIOU",[[1,189,"//xian"]],[189,189],[195,195]]],[1538141195783,["gjx16@GJXAIOU",[[-1,191,"xian"]],[195,195],[191,191]]],[1538141202955,["gjx16@GJXAIOU",[[1,191,"先定义然后西湖十花"]],[191,191],[200,200]]],[1538141204183,["gjx16@GJXAIOU",[[-1,196,"西湖十花"]],[200,200],[196,196]]],[1538141208738,["gjx16@GJXAIOU",[[1,196,"初始化"]],[196,196],[199,199]]],[1538141213343,["gjx16@GJXAIOU",[[1,200,"\n"]],[200,200],[201,201]]],[1538141218902,["gjx16@GJXAIOU",[[1,342,"\n"]],[340,340],[341,341]]],[1538141219044,["gjx16@GJXAIOU",[[1,343,"\n"]],[341,341],[342,342]]],[1538141219205,["gjx16@GJXAIOU",[[1,344,"\n"]],[342,342],[343,343]]],[1538141219658,["gjx16@GJXAIOU",[[1,345,"\n"]],[343,343],[344,344]]],[1538141221961,["gjx16@GJXAIOU",[[1,344,"、、"]],[344,344],[346,346]]],[1538141223092,["gjx16@GJXAIOU",[[-1,344,"、、"]],[346,346],[344,344]]],[1538141224910,["gjx16@GJXAIOU",[[1,344,"//zqi"]],[344,344],[349,349]]],[1538141226201,["gjx16@GJXAIOU",[[-1,346,"zqi"]],[349,349],[346,346]]],[1538141242526,["gjx16@GJXAIOU",[[1,346,"在定义的同时初始化成员变量"]],[346,346],[359,359]]],[1538141243072,["gjx16@GJXAIOU",[[1,361,"\n"]],[359,359],[360,360]]],[1538141243429,["gjx16@GJXAIOU",[[1,362,"\n"]],[360,360],[361,361]]],[1538141248652,["gjx16@GJXAIOU",[[1,361,"s"]],[361,361],[362,362]]],[1538141249506,["gjx16@GJXAIOU",[[-1,361,"s"]],[362,362],[361,361]]],[1538141266763,["gjx16@GJXAIOU",[[1,361,"struct stduent st = P{"]],[361,361],[383,383]]],[1538141268106,["gjx16@GJXAIOU",[[-1,381,"P{"]],[383,383],[381,381]]],[1538141270041,["gjx16@GJXAIOU",[[1,381,"{};"]],[381,381],[384,384]]],[1538141274597,["gjx16@GJXAIOU",[[1,382,"\"\""]],[382,382],[384,384]]],[1538141279094,["gjx16@GJXAIOU",[[1,383,"zhangda"]],[383,383],[390,390]]],[1538141279579,["gjx16@GJXAIOU",[[-1,388,"da"]],[390,390],[388,388]]],[1538141279997,["gjx16@GJXAIOU",[[1,388,"sa"]],[388,388],[390,390]]],[1538141281432,["gjx16@GJXAIOU",[[1,390,"n"]],[390,390],[391,391]]],[1538141297869,["gjx16@GJXAIOU",[[1,392,",20,1"]],[392,392],[397,397]]],[1538141792831,["gjx16@GJXAIOU",[[1,399,"//an"]],[399,399],[403,403]]],[1538141793843,["gjx16@GJXAIOU",[[-1,401,"an"]],[403,403],[401,401]]],[1538141802966,["gjx16@GJXAIOU",[[1,401,"这个必须按照顺序依次赋值"]],[401,401],[413,413]]],[1538141803747,["gjx16@GJXAIOU",[[1,415,"\n"]],[413,413],[414,414]]],[1538141828884,["gjx16@GJXAIOU",[[1,414,"struct studeng"]],[414,414],[428,428]]],[1538141829668,["gjx16@GJXAIOU",[[-1,427,"g"]],[428,428],[427,427]]],[1538141841652,["gjx16@GJXAIOU",[[1,427,"t st = {};"]],[427,427],[437,437]]],[1538141871370,["gjx16@GJXAIOU",[[1,435,".age = 20,.name = zhang"]],[435,435],[458,458]]],[1538141873100,["gjx16@GJXAIOU",[[-1,453,"zhang"]],[458,458],[453,453]]],[1538141874574,["gjx16@GJXAIOU",[[1,453,"\"\""]],[453,453],[455,455]]],[1538141878472,["gjx16@GJXAIOU",[[1,454,"zhangsan "]],[454,454],[463,463]]],[1538141879195,["gjx16@GJXAIOU",[[-1,462," "]],[463,463],[462,462]]],[1538141898154,["gjx16@GJXAIOU",[[1,463,",.sex = 0"]],[463,463],[472,472]]],[1538141902719,["gjx16@GJXAIOU",[[1,476,"\n"]],[474,474],[475,475]]],[1538141902889,["gjx16@GJXAIOU",[[1,477,"\n"]],[475,475],[476,476]]],[1538141905767,["gjx16@GJXAIOU",[[1,476,"//tong"]],[476,476],[482,482]]],[1538141907647,["gjx16@GJXAIOU",[[-1,478,"tong"]],[482,482],[478,478]]],[1538141912105,["gjx16@GJXAIOU",[[1,478,"通过"]],[478,478],[480,480]]],[1538142671027,["gjx16@GJXAIOU",[[1,480,"用户赋值进行初始化"]],[480,480],[489,489]]],[1538142671684,["gjx16@GJXAIOU",[[1,491,"\n"]],[489,489],[490,490]]],[1538142672401,["gjx16@GJXAIOU",[[1,492,"\n"]],[490,490],[491,491]]],[1538142682783,["gjx16@GJXAIOU",[[1,491,"scanf（）"]],[491,491],[498,498]]],[1538142683874,["gjx16@GJXAIOU",[[-1,496,"（）"]],[498,498],[496,496]]],[1538142685081,["gjx16@GJXAIOU",[[1,496,"（）"]],[496,496],[498,498]]],[1538142685663,["gjx16@GJXAIOU",[[-1,496,"（）"]],[498,498],[496,496]]],[1538142687042,["gjx16@GJXAIOU",[[1,496,"(0"]],[496,496],[498,498]]],[1538142688509,["gjx16@GJXAIOU",[[-1,497,"0"]],[498,498],[497,497]]],[1538142689980,["gjx16@GJXAIOU",[[1,497,");"]],[497,497],[499,499]]],[1538142723128,["gjx16@GJXAIOU",[[1,497,"\"\""]],[497,497],[499,499]]],[1538142726453,["gjx16@GJXAIOU",[[1,498,"%s"]],[498,498],[500,500]]],[1538142738806,["gjx16@GJXAIOU",[[1,501,",&st.name"]],[501,501],[510,510]]],[1538142746044,["gjx16@GJXAIOU",[[1,514,"\n"]],[512,512],[513,513]]],[1538142746558,["gjx16@GJXAIOU",[[1,513,"scanf(\"%s\",&st.name);"]],[513,513],[534,534]]],[1538142749532,["gjx16@GJXAIOU",[[-1,521,"s"]],[522,522],[521,521]]],[1538142749934,["gjx16@GJXAIOU",[[1,521,"d"]],[521,521],[522,522]]],[1538142753385,["gjx16@GJXAIOU",[[-1,528,"name"]],[532,532],[528,528]]],[1538142754551,["gjx16@GJXAIOU",[[1,528,"age"]],[528,528],[531,531]]],[1538142757087,["gjx16@GJXAIOU",[[1,535,"\n"]],[533,533],[534,534]]],[1538142757812,["gjx16@GJXAIOU",[[1,534,"scanf(\"%s\",&st.name);"]],[534,534],[555,555]]],[1538142760259,["gjx16@GJXAIOU",[[-1,542,"s"]],[543,543],[542,542]]],[1538142760550,["gjx16@GJXAIOU",[[1,542,"d"]],[542,542],[543,543]]],[1538142764309,["gjx16@GJXAIOU",[[-1,549,"name"]],[553,553],[549,549]]],[1538142765650,["gjx16@GJXAIOU",[[1,549,"sex"]],[549,549],[552,552]]],[1538143847673,["gjx16@GJXAIOU",[[1,152,";"]],[152,152],[153,153]]],[1538143858649,["gjx16@GJXAIOU",[[1,172,","]],[172,172],[173,173]]],[1538143873906,["gjx16@GJXAIOU",[[1,173,"注意这里有一个;"]],[173,173],[181,181]]]],null,"gjx16@GJXAIOU"],["feb74fff-0e81-4f74-97f3-eda91369f027",1538204566003,"# day11 复合类型\n\n\n## 结构体的定义和成员初始化\n\n```c\n#include<stdio.h>\n#include<string.h>   //这里需要使用strcpy函数\n\nstruct student\n{\n  char name[100];\n  int age;\n  int sex;\n};  //说明了一个结构体的数据成员类型,注意这里有一个;\n\n\nint main()\n{\n\n\n//先定义然后初始化\n\nstruct student st; //定义了一个结构体的变量（在栈中），名字叫做st\n\n//使用成员变量\n\nst.age = 20;\nst.sex = 0;\nstrcpy(st.name,\"zhangsan\");\nprintf(\"name = %s\\n\",st.name);\n\n\n\n//在定义的同时初始化成员变量\n\nstruct stduent st = {\"zhangsan\",20,1};//这个必须按照顺序依次赋值\nstruct student st = {.age = 20,.name = \"zhangsan\",.sex = 0};\n\n//通过用户赋值进行初始化\n\nscanf(\"%s\",&st.name);\nscanf(\"%d\",&st.age);\nscanf(\"%d\",&st.sex);\n\n}\n```\n\n\n## 结构体成员内存对齐详解\n\n## 结构体成员的位字段\n\n## 结构体数组的定义和使用\n\n## 结构嵌套以及结构和指针\n\n\n",[[1538204507782,["gjx16@GJXAIOU",[[1,484,"、、"]],[484,484],[486,486]]],[1538204509418,["gjx16@GJXAIOU",[[-1,484,"、、"]],[486,486],[484,484]]],[1538204528814,["gjx16@GJXAIOU",[[1,484,"//此方法允许自由变换变量"]],[484,484],[497,497]]],[1538204529546,["gjx16@GJXAIOU",[[-1,494,"换变量"]],[497,497],[494,494]]],[1538204542629,["gjx16@GJXAIOU",[[1,494,"换成员变量的位置进行赋值"]],[494,494],[506,506]]],[1538204711113,["gjx16@GJXAIOU",[[1,201,"法一："]],[201,201],[204,204]]],[1538204717311,["gjx16@GJXAIOU",[[1,359,"法二："]],[359,359],[362,362]]],[1538204723948,["gjx16@GJXAIOU",[[1,516,"发散："]],[516,516],[519,519]]],[1538204727306,["gjx16@GJXAIOU",[[-1,515,"/发散："]],[519,519],[515,515]]],[1538204728556,["gjx16@GJXAIOU",[[1,515,"、"]],[515,515],[516,516]]],[1538204729820,["gjx16@GJXAIOU",[[-1,515,"、"]],[516,516],[515,515]]],[1538204737523,["gjx16@GJXAIOU",[[1,515,"/法三："]],[515,515],[519,519]]],[1538204761938,["gjx16@GJXAIOU",[[1,155,"                 "]],[155,155],[172,172]]],[1538204771624,["gjx16@GJXAIOU",[[1,76,"   "]],[76,76],[79,79]]],[1538204783820,["gjx16@GJXAIOU",[[1,641,"\n"]],[639,639],[640,640]]],[1538204783991,["gjx16@GJXAIOU",[[1,642,"\n"]],[640,640],[641,641]]],[1538204784355,["gjx16@GJXAIOU",[[1,643,"\n"]],[641,641],[642,642]]],[1538205051972,["gjx16@GJXAIOU",[[1,644,"\n"]],[640,640],[641,641]]],[1538205061480,["gjx16@GJXAIOU",[[1,641,"结构体在内存之后赞一定是一个"]],[641,641],[655,655]]],[1538205069250,["gjx16@GJXAIOU",[[-1,648,"后赞一定是一个"]],[655,655],[648,648]]],[1538205074018,["gjx16@GJXAIOU",[[1,648,"中一定第一个"]],[648,648],[654,654]]],[1538205076197,["gjx16@GJXAIOU",[[-1,651,"第一个"]],[654,654],[651,651]]],[1538205088431,["gjx16@GJXAIOU",[[1,651,"是一个矩形结构"]],[651,651],[658,658]]],[1538205089074,["gjx16@GJXAIOU",[[1,662,"\n"]],[658,658],[659,659]]],[1538205089853,["gjx16@GJXAIOU",[[1,663,"\n"]],[659,659],[660,660]]],[1538205091965,["gjx16@GJXAIOU",[[1,660,"```"]],[660,660],[663,663]]],[1538205091989,["gjx16@GJXAIOU",[[1,663,"language\n```\n"]],[663,663],[663,671]]],[1538205093119,["gjx16@GJXAIOU",[[-1,663,"language"],[1,671,"c"]],[663,671],[664,664]]],[1538205093306,["gjx16@GJXAIOU",[[1,665,"\n"]],[664,664],[665,665]]],[1538205093473,["gjx16@GJXAIOU",[[1,666,"\n"]],[665,665],[666,666]]],[1538205098964,["gjx16@GJXAIOU",[[1,666,"#include<>"]],[666,666],[676,676]]],[1538205103855,["gjx16@GJXAIOU",[[1,675,"stdil.h"]],[675,675],[682,682]]],[1538205104795,["gjx16@GJXAIOU",[[-1,680,".h"]],[682,682],[680,680]]],[1538205104944,["gjx16@GJXAIOU",[[-1,679,"l"]],[680,680],[679,679]]],[1538205106810,["gjx16@GJXAIOU",[[1,679,"o.h"]],[679,679],[682,682]]],[1538205109140,["gjx16@GJXAIOU",[[1,684,"\n"]],[683,683],[684,684]]],[1538205112234,["gjx16@GJXAIOU",[[1,684,"int main()"]],[684,684],[694,694]]],[1538205112915,["gjx16@GJXAIOU",[[1,695,"\n"]],[694,694],[695,695]]],[1538205114571,["gjx16@GJXAIOU",[[1,695,"{}"]],[695,695],[697,697]]],[1538205115840,["gjx16@GJXAIOU",[[1,696,"\n"]],[696,696],[697,697]]],[1538205116137,["gjx16@GJXAIOU",[[1,697,"\n"]],[697,697],[698,698]]],[1538205116351,["gjx16@GJXAIOU",[[1,698,"\n"]],[698,698],[699,699]]],[1538205135681,["gjx16@GJXAIOU",[[1,697,"struct neicun a;"]],[697,697],[713,713]]],[1538205136048,["gjx16@GJXAIOU",[[1,715,"\n"]],[713,713],[714,714]]],[1538205142459,["gjx16@GJXAIOU",[[1,684,"\n"]],[684,684],[685,685]]],[1538205142612,["gjx16@GJXAIOU",[[1,685,"\n"]],[685,685],[686,686]]],[1538205142784,["gjx16@GJXAIOU",[[1,686,"\n"]],[686,686],[687,687]]],[1538205142935,["gjx16@GJXAIOU",[[1,687,"\n"]],[687,687],[688,688]]],[1538205155122,["gjx16@GJXAIOU",[[1,685,"struct neicun"]],[685,685],[698,698]]],[1538205157775,["gjx16@GJXAIOU",[[1,701,"\n"]],[698,698],[699,699]]],[1538205158874,["gjx16@GJXAIOU",[[1,699,"{}"]],[699,699],[701,701]]],[1538205160679,["gjx16@GJXAIOU",[[1,700,"\n"]],[700,700],[701,701]]],[1538205160889,["gjx16@GJXAIOU",[[1,701,"\n"]],[701,701],[702,702]]],[1538205161086,["gjx16@GJXAIOU",[[1,702,"\n"]],[702,702],[703,703]]],[1538205161289,["gjx16@GJXAIOU",[[1,703,"\n"]],[703,703],[704,704]]],[1538205161492,["gjx16@GJXAIOU",[[1,704,"\n"]],[704,704],[705,705]]],[1538205164993,["gjx16@GJXAIOU",[[1,701,"a"]],[701,701],[702,702]]],[1538205166760,["gjx16@GJXAIOU",[[-1,701,"a"]],[702,702],[701,701]]],[1538205171790,["gjx16@GJXAIOU",[[1,701,"  int a;"]],[701,701],[709,709]]],[1538205172287,["gjx16@GJXAIOU",[[1,710,"  \n"]],[709,709],[712,712]]],[1538205173665,["gjx16@GJXAIOU",[[1,712,"ki"]],[712,712],[714,714]]],[1538205174710,["gjx16@GJXAIOU",[[-1,712,"ki"]],[714,714],[712,712]]],[1538205177173,["gjx16@GJXAIOU",[[1,712,"int b;"]],[712,712],[718,718]]],[1538205177653,["gjx16@GJXAIOU",[[1,719,"  \n"]],[718,718],[721,721]]],[1538205178916,["gjx16@GJXAIOU",[[1,721,"ha"]],[721,721],[723,723]]],[1538205180054,["gjx16@GJXAIOU",[[-1,721,"ha"]],[723,723],[721,721]]],[1538205182791,["gjx16@GJXAIOU",[[1,721,"char c;"]],[721,721],[728,728]]],[1538205188129,["gjx16@GJXAIOU",[[-1,731,"\n"]],[730,730],[729,729]]],[1538205188256,["gjx16@GJXAIOU",[[-1,730,"\n"]],[729,729],[728,728]]],[1538205188606,["gjx16@GJXAIOU",[[-1,727,";"]],[728,728],[727,727]]],[1538205190015,["gjx16@GJXAIOU",[[1,727,";"]],[727,727],[728,728]]],[1538205194772,["gjx16@GJXAIOU",[[-1,733,"\n"]],[733,733],[732,732]]],[1538205197711,["gjx16@GJXAIOU",[[-1,764,"\n"]],[764,764],[763,763]]],[1538205202811,["gjx16@GJXAIOU",[[1,763,"printf();"]],[763,763],[772,772]]],[1538205207159,["gjx16@GJXAIOU",[[1,770,"\"\""]],[770,770],[772,772]]],[1538205212013,["gjx16@GJXAIOU",[[1,771,"%d\\n"]],[771,771],[775,775]]],[1538205216683,["gjx16@GJXAIOU",[[1,776,",d"]],[776,776],[778,778]]],[1538205217259,["gjx16@GJXAIOU",[[-1,777,"d"]],[778,778],[777,777]]],[1538205220623,["gjx16@GJXAIOU",[[1,777,"sizeof("]],[777,777],[784,784]]],[1538205220658,["gjx16@GJXAIOU",[[1,785,")"]],[784,784],[785,785]]],[1538205229095,["gjx16@GJXAIOU",[[-1,760,"a"]],[761,761],[760,760]]],[1538205233136,["gjx16@GJXAIOU",[[1,760,"duiqi"]],[760,760],[765,765]]],[1538205238283,["gjx16@GJXAIOU",[[1,788,"duiqi"]],[788,788],[793,793]]],[1538205243668,["gjx16@GJXAIOU",[[1,731,";"]],[731,731],[732,732]]],[1538205245556,["gjx16@GJXAIOU",[[-1,729,"\n"]],[729,729],[728,728]]],[1538205300266,["gjx16@GJXAIOU",[[1,796,"  //c"]],[796,796],[801,801]]],[1538205301423,["gjx16@GJXAIOU",[[1,801,"ishi"]],[801,801],[805,805]]],[1538205302773,["gjx16@GJXAIOU",[[-1,800,"cishi"]],[805,805],[800,800]]],[1538205316714,["gjx16@GJXAIOU",[[1,800,"程序的输出结果为：12"]],[800,800],[811,811]]],[1538205317836,["gjx16@GJXAIOU",[[1,812,"\n"]],[811,811],[812,812]]],[1538205319697,["gjx16@GJXAIOU",[[1,813,"\n"]],[812,812],[813,813]]],[1538205319828,["gjx16@GJXAIOU",[[1,814,"\n"]],[813,813],[814,814]]],[1538205319954,["gjx16@GJXAIOU",[[1,815,"\n"]],[814,814],[815,815]]],[1538205324276,["gjx16@GJXAIOU",[[-1,815,"\n"]],[815,815],[814,814]]],[1538205324444,["gjx16@GJXAIOU",[[-1,814,"\n"]],[814,814],[813,813]]],[1538205325085,["gjx16@GJXAIOU",[[-1,813,"\n"]],[813,813],[812,812]]],[1538205326226,["gjx16@GJXAIOU",[[-1,812,"\n"]],[812,812],[811,811]]],[1538205432867,["gjx16@GJXAIOU",[[1,822,"\n"]],[817,817],[818,818]]],[1538205691847,["gjx16@GJXAIOU",[[1,818,"![内存空间对齐1]($resource/%E5%86%85%E5%AD%98%E7%A9%BA%E9%97%B4%E5%AF%B9%E9%BD%901.png)"]],[818,818],[900,900]]],[1538205702712,["gjx16@GJXAIOU",[[-1,712,"int"]],[715,715],[712,712]]],[1538205706446,["gjx16@GJXAIOU",[[1,712,"char"]],[712,712],[716,716]]],[1538205715235,["gjx16@GJXAIOU",[[1,812,"  }//程序的输出结果为：12"]],[799,814],[815,815]]],[1538205728724,["gjx16@GJXAIOU",[[-1,812,"  }//程序的输出结果为：12"]],[799,815],[799,799]]],[1538205732903,["gjx16@GJXAIOU",[[-1,799,"//程序的输出结果为：12"]],[799,812],[799,799]]],[1538205734804,["gjx16@GJXAIOU",[[1,806,"\n"]],[805,805],[806,806]]],[1538205734952,["gjx16@GJXAIOU",[[1,807,"\n"]],[806,806],[807,807]]],[1538205735369,["gjx16@GJXAIOU",[[1,807,"//程序的输出结果为：12"]],[807,807],[820,820]]],[1538205738687,["gjx16@GJXAIOU",[[-1,807,"//"]],[809,809],[807,807]]],[1538205743341,["gjx16@GJXAIOU",[[1,816,"·"]],[816,816],[817,817]]],[1538205746807,["gjx16@GJXAIOU",[[-1,816,"·"]],[817,817],[816,816]]],[1538205747125,["gjx16@GJXAIOU",[[1,816,"·"]],[816,816],[817,817]]],[1538205748119,["gjx16@GJXAIOU",[[-1,816,"·"]],[817,817],[816,816]]],[1538205748812,["gjx16@GJXAIOU",[[1,816,"`"]],[816,816],[817,817]]],[1538205750140,["gjx16@GJXAIOU",[[1,819,"`"]],[819,819],[820,820]]],[1538205807635,["gjx16@GJXAIOU",[[1,799,"//anzho"]],[799,799],[806,806]]],[1538205809091,["gjx16@GJXAIOU",[[-1,801,"anzho"]],[806,806],[801,801]]],[1538205813349,["gjx16@GJXAIOU",[[1,801,"在那好定义中"]],[801,801],[807,807]]],[1538205815556,["gjx16@GJXAIOU",[[-1,801,"在那好定义中"]],[807,807],[801,801]]],[1538205829513,["gjx16@GJXAIOU",[[1,801,"按照定义中最长的那个对齐"]],[801,801],[813,813]]],[1538205867385,["gjx16@GJXAIOU",[[1,813," "]],[813,813],[814,814]]],[1538205879917,["gjx16@GJXAIOU",[[1,922,"\n"]],[918,918],[919,919]]],[1538205881392,["gjx16@GJXAIOU",[[1,919,"****"]],[919,919],[921,921]]],[1538205883785,["gjx16@GJXAIOU",[[1,921,"实例二"]],[921,921],[924,924]]],[1538205886023,["gjx16@GJXAIOU",[[1,930,"\n"]],[926,926],[927,927]]],[1538205887023,["gjx16@GJXAIOU",[[1,927,"··"]],[927,927],[929,929]]],[1538205888058,["gjx16@GJXAIOU",[[-1,927,"··"]],[929,929],[927,927]]],[1538205888998,["gjx16@GJXAIOU",[[1,927,"```"]],[927,927],[930,930]]],[1538205889022,["gjx16@GJXAIOU",[[1,930,"language\n```\n"]],[930,930],[930,938]]],[1538205890137,["gjx16@GJXAIOU",[[-1,930,"language"],[1,938,"c"]],[930,938],[931,931]]],[1538205890438,["gjx16@GJXAIOU",[[1,932,"\n"]],[931,931],[932,932]]],[1538205890586,["gjx16@GJXAIOU",[[1,933,"\n"]],[932,932],[933,933]]],[1538205890765,["gjx16@GJXAIOU",[[1,934,"\n"]],[933,933],[934,934]]],[1538205898147,["gjx16@GJXAIOU",[[1,932,"#include<stdio.h>\n\nstruct neicun\n{\n  int a;\n  char b;\n  char c;\n};\n\nint main()\n{\nstruct neicun duiqi;\nprintf(\"%d\\n\",sizeof(duiqi));  //按照定义中最长的那个对齐 \n}"]],[932,932],[1082,1082]]],[1538205901708,["gjx16@GJXAIOU",[[-1,969,"int a;"]],[975,975],[969,969]]],[1538205911761,["gjx16@GJXAIOU",[[1,969,"char array[10];"]],[969,969],[984,984]]],[1538205916267,["gjx16@GJXAIOU",[[-1,987,"char"]],[991,991],[987,987]]],[1538205917406,["gjx16@GJXAIOU",[[1,987,"int"]],[987,987],[990,990]]],[1538205917622,["gjx16@GJXAIOU",[[1,991," "]],[990,990],[991,991]]],[1538205921422,["gjx16@GJXAIOU",[[-1,991," "]],[992,992],[991,991]]],[1538205929133,["gjx16@GJXAIOU",[[1,1004,"  \n"]],[1003,1003],[1006,1006]]],[1538205997342,["gjx16@GJXAIOU",[[-1,987,"int b;"]],[993,993],[987,987]]],[1538206001252,["gjx16@GJXAIOU",[[1,987,"char b;"]],[987,987],[994,994]]],[1538206003913,["gjx16@GJXAIOU",[[1,1008,"  \n"]],[1004,1004],[1007,1007]]],[1538206007280,["gjx16@GJXAIOU",[[1,1007,"char d;"]],[1007,1007],[1014,1014]]],[1538206008086,["gjx16@GJXAIOU",[[1,1018,"  \n"]],[1014,1014],[1017,1017]]],[1538206010712,["gjx16@GJXAIOU",[[1,1017,"char e"]],[1017,1017],[1023,1023]]],[1538206011025,["gjx16@GJXAIOU",[[1,1027,"  \n"]],[1023,1023],[1026,1026]]],[1538206012670,["gjx16@GJXAIOU",[[-1,1024,"  "]],[1026,1026],[1024,1024]]],[1538206013070,["gjx16@GJXAIOU",[[-1,1024,"\n"]],[1024,1024],[1023,1023]]],[1538206013785,["gjx16@GJXAIOU",[[1,1023,";"]],[1023,1023],[1024,1024]]],[1538206040106,["gjx16@GJXAIOU",[[-1,1116,"\n"]],[1115,1115],[1114,1114]]],[1538206041198,["gjx16@GJXAIOU",[[-1,1115,"\n"]],[1115,1115],[1114,1114]]],[1538206043743,["gjx16@GJXAIOU",[[1,1045,"  "]],[1045,1045],[1047,1047]]],[1538206044792,["gjx16@GJXAIOU",[[1,1068,"  "]],[1068,1068],[1070,1070]]],[1538206047876,["gjx16@GJXAIOU",[[1,1123,"cheng"]],[1123,1123],[1128,1128]]],[1538206049156,["gjx16@GJXAIOU",[[-1,1123,"cheng"]],[1128,1128],[1123,1123]]],[1538206060795,["gjx16@GJXAIOU",[[1,1123,"程序输出结果为：`24"]],[1123,1123],[1134,1134]]],[1538206061701,["gjx16@GJXAIOU",[[-1,1132,"24"]],[1134,1134],[1132,1132]]],[1538206068028,["gjx16@GJXAIOU",[[1,1132,"14`  ,b"]],[1132,1132],[1139,1139]]],[1538206068726,["gjx16@GJXAIOU",[[-1,1138,"b"]],[1139,1139],[1138,1138]]],[1538206073191,["gjx16@GJXAIOU",[[1,1138,"不会讲整个"]],[1138,1138],[1143,1143]]],[1538206075376,["gjx16@GJXAIOU",[[-1,1140,"讲整个"]],[1143,1143],[1140,1140]]],[1538206079305,["gjx16@GJXAIOU",[[1,1140,"将整个"]],[1140,1140],[1143,1143]]],[1538206093980,["gjx16@GJXAIOU",[[1,1143,"数组当成一个整体，知识"]],[1143,1143],[1154,1154]]],[1538206095767,["gjx16@GJXAIOU",[[-1,1152,"知识"]],[1154,1154],[1152,1152]]],[1538206100796,["gjx16@GJXAIOU",[[1,1152,"知识"]],[1152,1152],[1154,1154]]],[1538206101702,["gjx16@GJXAIOU",[[-1,1152,"知识"]],[1154,1154],[1152,1152]]],[1538206132978,["gjx16@GJXAIOU",[[1,1152,"只是10个char型的数据，所以最大的长度仍然为char"]],[1152,1152],[1180,1180]]],[1538206133929,["gjx16@GJXAIOU",[[1,1184,"\n"]],[1180,1180],[1181,1181]]],[1538206173524,["gjx16@GJXAIOU",[[1,1185,"\n"]],[1180,1180],[1181,1181]]],[1538206175103,["gjx16@GJXAIOU",[[1,1186,"\n"]],[1181,1181],[1182,1182]]],[1538206175635,["gjx16@GJXAIOU",[[1,1182,"`"]],[1182,1182],[1183,1183]]],[1538206177101,["gjx16@GJXAIOU",[[-1,1182,"`"]],[1183,1183],[1182,1182]]],[1538206178476,["gjx16@GJXAIOU",[[1,1182,"****"]],[1182,1182],[1184,1184]]],[1538206179860,["gjx16@GJXAIOU",[[1,1184,"shi"]],[1184,1184],[1187,1187]]],[1538206180538,["gjx16@GJXAIOU",[[-1,1184,"shi"]],[1187,1187],[1184,1184]]],[1538206188248,["gjx16@GJXAIOU",[[1,1184,"示例三"]],[1184,1184],[1187,1187]]],[1538206190886,["gjx16@GJXAIOU",[[1,1194,"\n"]],[1189,1189],[1190,1190]]],[1538206192195,["gjx16@GJXAIOU",[[1,1190,"#include<stdio.h>\n\nstruct neicun\n{\n  char array[10];\n  char b;\n  char c;\n  char d;\n  char e;\n  \n};\n\nint main()\n{\n  struct neicun duiqi;\n  printf(\"%d\\n\",sizeof(duiqi));  //按照定义中最长的那个对齐 \n}"]],[1190,1190],[1376,1376]]],[1538206194991,["gjx16@GJXAIOU",[[1,1190,"\n"]],[1189,1189],[1190,1190]]],[1538206196250,["gjx16@GJXAIOU",[[1,1190,"··"]],[1190,1190],[1192,1192]]],[1538206197370,["gjx16@GJXAIOU",[[-1,1190,"··"]],[1192,1192],[1190,1190]]],[1538206198917,["gjx16@GJXAIOU",[[1,1190,"```"]],[1190,1190],[1193,1193]]],[1538206198942,["gjx16@GJXAIOU",[[1,1193,"language\n```\n"]],[1193,1193],[1193,1201]]],[1538206200352,["gjx16@GJXAIOU",[[-1,1193,"language"],[1,1201,"c"]],[1193,1201],[1194,1194]]],[1538206202774,["gjx16@GJXAIOU",[[-1,1195,"```"]],[1198,1198],[1195,1195]]],[1538206205049,["gjx16@GJXAIOU",[[-1,1196,"\n"]],[1195,1195],[1194,1194]]],[1538206208723,["gjx16@GJXAIOU",[[1,1384,"```"]],[1384,1384],[1387,1387]]],[1538206213214,["gjx16@GJXAIOU",[[-1,1233,"char"]],[1237,1237],[1233,1233]]],[1538206215782,["gjx16@GJXAIOU",[[1,1233,"int"]],[1233,1233],[1236,1236]]],[1538206229512,["gjx16@GJXAIOU",[[1,1387,"程序输出结果为："]],[1387,1387],[1395,1395]]],[1538206236843,["gjx16@GJXAIOU",[[1,1291,"  \n"]],[1287,1287],[1290,1290]]],[1538206243421,["gjx16@GJXAIOU",[[1,1290,"char f;"]],[1290,1290],[1297,1297]]],[1538206255496,["gjx16@GJXAIOU",[[1,1405,"`48`"]],[1405,1405],[1409,1409]]],[1538206275834,["gjx16@GJXAIOU",[[1,1411,"\n"]],[1409,1409],[1410,1410]]],[1538206278006,["gjx16@GJXAIOU",[[1,1410,"y"]],[1410,1410],[1411,1411]]],[1538206279711,["gjx16@GJXAIOU",[[-1,1410,"y"]],[1411,1411],[1410,1410]]],[1538206319436,["gjx16@GJXAIOU",[[1,1410,"因为数组中为10个int型数据，所以整个结构体中最大的字节长度"]],[1410,1410],[1441,1441]]],[1538206351835,["gjx16@GJXAIOU",[[1,1441,"为int,所以全部按照int 对齐；"]],[1441,1441],[1459,1459]]],[1538206352599,["gjx16@GJXAIOU",[[1,1461,"\n"]],[1459,1459],[1460,1460]]],[1538206476260,["gjx16@GJXAIOU",[[1,919,"\n"]],[917,917],[918,918]]],[1538206476285,["gjx16@GJXAIOU",[[1,920,"\n"]],[918,918],[919,919]]],[1538206476431,["gjx16@GJXAIOU",[[1,921,"\n"]],[919,919],[920,920]]],[1538206500848,["gjx16@GJXAIOU",[[1,919,"****"]],[919,919],[921,921]]],[1538206515969,["gjx16@GJXAIOU",[[1,921,"结构体中定义变量顺序改变之后"]],[921,921],[935,935]]],[1538206519609,["gjx16@GJXAIOU",[[1,940,"\n"]],[937,937],[938,938]]],[1538206521727,["gjx16@GJXAIOU",[[1,938,"``"]],[938,938],[940,940]]],[1538206522557,["gjx16@GJXAIOU",[[-1,939,"`"]],[940,940],[939,939]]],[1538206524609,["gjx16@GJXAIOU",[[1,939,"``c"]],[939,939],[942,942]]],[1538206524881,["gjx16@GJXAIOU",[[1,945,"\n"]],[942,942],[943,943]]],[1538206525059,["gjx16@GJXAIOU",[[1,946,"\n"]],[943,943],[944,944]]],[1538206525247,["gjx16@GJXAIOU",[[1,947,"\n"]],[944,944],[945,945]]],[1538206526279,["gjx16@GJXAIOU",[[1,945,"```"]],[945,945],[948,948]]],[1538206529469,["gjx16@GJXAIOU",[[1,943,"#include<stdio.h>\n\nstruct neicun\n{\n  int a;\n  char b;\n  char c;\n};\n\nint main()\n{\nstruct neicun duiqi;\nprintf(\"%d\\n\",sizeof(duiqi));  //按照定义中最长的那个对齐 \n}"]],[943,943],[1093,1093]]],[1538206533931,["gjx16@GJXAIOU",[[-1,980,"int"]],[983,983],[980,980]]],[1538206536768,["gjx16@GJXAIOU",[[1,980,"char"]],[980,980],[984,984]]],[1538206541221,["gjx16@GJXAIOU",[[-1,990,"char"]],[994,994],[990,990]]],[1538206542785,["gjx16@GJXAIOU",[[1,990,"int"]],[990,990],[993,993]]],[1538206564914,["gjx16@GJXAIOU",[[-1,832,"12"]],[834,834],[832,832]]],[1538206566205,["gjx16@GJXAIOU",[[1,832,"8"]],[832,832],[833,833]]],[1538206575650,["gjx16@GJXAIOU",[[1,1099,"cheng"]],[1099,1099],[1104,1104]]],[1538206577194,["gjx16@GJXAIOU",[[-1,1099,"cheng"]],[1104,1104],[1099,1099]]],[1538206591205,["gjx16@GJXAIOU",[[1,1099,"程序运行结果：`12`"]],[1099,1099],[1110,1110]]],[1538206592731,["gjx16@GJXAIOU",[[1,1111,"\n"]],[1110,1110],[1111,1111]]],[1538206592902,["gjx16@GJXAIOU",[[1,1112,"\n"]],[1111,1111],[1112,1112]]],[1538206593093,["gjx16@GJXAIOU",[[1,1113,"\n"]],[1112,1112],[1113,1113]]],[1538206900753,["gjx16@GJXAIOU",[[1,1112,"![内存空间对齐2]($resource/%E5%86%85%E5%AD%98%E7%A9%BA%E9%97%B4%E5%AF%B9%E9%BD%902.png)"]],[1112,1112],[1194,1194]]],[1538206903384,["gjx16@GJXAIOU",[[1,1195,"\n"]],[1194,1194],[1195,1195]]],[1538207219092,["gjx16@GJXAIOU",[[1,1196,"\n"]],[1193,1193],[1194,1194]]],[1538207219241,["gjx16@GJXAIOU",[[1,1197,"\n"]],[1194,1194],[1195,1195]]],[1538207220063,["gjx16@GJXAIOU",[[1,1198,"\n"]],[1195,1195],[1196,1196]]],[1538207221338,["gjx16@GJXAIOU",[[1,1196,"****"]],[1196,1196],[1198,1198]]],[1538207222776,["gjx16@GJXAIOU",[[1,1198,"shili"]],[1198,1198],[1203,1203]]],[1538207223964,["gjx16@GJXAIOU",[[-1,1198,"shili"]],[1203,1203],[1198,1198]]],[1538207226027,["gjx16@GJXAIOU",[[1,1198,"示例"]],[1198,1198],[1200,1200]]],[1538207228526,["gjx16@GJXAIOU",[[1,1205,"\n"]],[1202,1202],[1203,1203]]],[1538207232198,["gjx16@GJXAIOU",[[1,1203,"```c"]],[1203,1203],[1207,1207]]],[1538207232717,["gjx16@GJXAIOU",[[1,1210,"\n"]],[1207,1207],[1208,1208]]],[1538207232909,["gjx16@GJXAIOU",[[1,1211,"\n"]],[1208,1208],[1209,1209]]],[1538207233111,["gjx16@GJXAIOU",[[1,1212,"\n"]],[1209,1209],[1210,1210]]],[1538207233312,["gjx16@GJXAIOU",[[1,1213,"\n"]],[1210,1210],[1211,1211]]],[1538207233497,["gjx16@GJXAIOU",[[1,1214,"\n"]],[1211,1211],[1212,1212]]],[1538207237336,["gjx16@GJXAIOU",[[1,1212,"```"]],[1212,1212],[1215,1215]]],[1538207263136,["gjx16@GJXAIOU",[[1,1208,"in"]],[1208,1208],[1210,1210]]],[1538207264001,["gjx16@GJXAIOU",[[-1,1208,"in"]],[1210,1210],[1208,1208]]],[1538207272039,["gjx16@GJXAIOU",[[1,1209,"#include<stdio.h>\n\nstruct neicun\n{\n  char a;\n  int b;\n  char c;\n};\n\nint main()\n{\nstruct neicun duiqi;\nprintf(\"%d\\n\",sizeof(duiqi));  //按照定义中最长的那个对齐 \n}\n"]],[1209,1209],[1360,1360]]],[1538207275073,["gjx16@GJXAIOU",[[-1,1208,"\n"]],[1208,1208],[1207,1207]]],[1538208242454,["gjx16@GJXAIOU",[[-1,1255,"int"]],[1258,1258],[1255,1255]]],[1538208245763,["gjx16@GJXAIOU",[[1,1255,"shout"]],[1255,1255],[1260,1260]]],[1538208253211,["gjx16@GJXAIOU",[[-1,1258,"ut"]],[1260,1260],[1258,1258]]],[1538208254965,["gjx16@GJXAIOU",[[1,1258,"rt"]],[1258,1258],[1260,1260]]],[1538208259945,["gjx16@GJXAIOU",[[-1,1266,"char"]],[1270,1270],[1266,1266]]],[1538208261118,["gjx16@GJXAIOU",[[1,1266,"int"]],[1266,1266],[1269,1269]]],[1538208261305,["gjx16@GJXAIOU",[[1,1270," "]],[1269,1269],[1270,1270]]],[1538208262685,["gjx16@GJXAIOU",[[-1,1270," "]],[1270,1270],[1269,1269]]],[1538208264456,["gjx16@GJXAIOU",[[1,1273,"  \n"]],[1272,1272],[1275,1275]]],[1538208269948,["gjx16@GJXAIOU",[[1,1275,"short d;"]],[1275,1275],[1283,1283]]],[1538208309131,["gjx16@GJXAIOU",[[-1,1373,"\n"]],[1373,1373],[1372,1372]]],[1538208309266,["gjx16@GJXAIOU",[[-1,1372,"\n"]],[1372,1372],[1371,1371]]],[1538208313456,["gjx16@GJXAIOU",[[1,1376,"cheng"]],[1376,1376],[1381,1381]]],[1538208314762,["gjx16@GJXAIOU",[[-1,1376,"cheng"]],[1381,1381],[1376,1376]]],[1538208327605,["gjx16@GJXAIOU",[[1,1376,"程序的运行结果：`121"]],[1376,1376],[1388,1388]]],[1538208328261,["gjx16@GJXAIOU",[[-1,1387,"1"]],[1388,1388],[1387,1387]]],[1538208328996,["gjx16@GJXAIOU",[[1,1387,"`"]],[1387,1387],[1388,1388]]],[1538208331001,["gjx16@GJXAIOU",[[1,1390,"\n"]],[1388,1388],[1389,1389]]],[1538208331131,["gjx16@GJXAIOU",[[1,1391,"\n"]],[1389,1389],[1390,1390]]],[1538213159572,["gjx16@GJXAIOU",[[1,1390,"![内存空间3]($resource/%E5%86%85%E5%AD%98%E7%A9%BA%E9%97%B43.png)"]],[1390,1390],[1452,1452]]]],null,"gjx16@GJXAIOU"],["8ed338ff-9e70-4c1b-8e69-239bfb31bb1a",1538358103530,"# day11 复合类型\n\n\n## 结构体的定义和成员初始化\n\n```c\n#include<stdio.h>\n#include<string.h>      //这里需要使用strcpy函数\n\nstruct student\n{\n  char name[100];\n  int age;\n  int sex;\n};                   //说明了一个结构体的数据成员类型,注意这里有一个;\n\n\nint main()\n{\n\n\n//法一：先定义然后初始化\n\nstruct student st; //定义了一个结构体的变量（在栈中），名字叫做st\n\n//使用成员变量\n\nst.age = 20;\nst.sex = 0;\nstrcpy(st.name,\"zhangsan\");\nprintf(\"name = %s\\n\",st.name);\n\n\n\n//法二：在定义的同时初始化成员变量\n\nstruct stduent st = {\"zhangsan\",20,1};//这个必须按照顺序依次赋值\nstruct student st = {.age = 20,.name = \"zhangsan\",.sex = 0};//此方法允许自由变换成员变量的位置进行赋值\n\n//法三：通过用户赋值进行初始化\n\nscanf(\"%s\",&st.name);\nscanf(\"%d\",&st.age);\nscanf(\"%d\",&st.sex);\n\n}\n```\n\n\n## 结构体成员内存对齐详解\n\n结构体在内存之中一定是一个矩形结构\n\n```c\n\n#include<stdio.h>\n\nstruct neicun\n{\n  int a;\n  char b;\n  char c;\n};\n\nint main()\n{\nstruct neicun duiqi;\nprintf(\"%d\\n\",sizeof(duiqi));  //按照定义中最长的那个对齐 \n}\n```\n\n程序的输出结果为：`8`\n![内存空间对齐1]($resource/%E5%86%85%E5%AD%98%E7%A9%BA%E9%97%B4%E5%AF%B9%E9%BD%901.png)\n\n**结构体中定义变量顺序改变之后**\n```c\n#include<stdio.h>\n\nstruct neicun\n{\n  char a;\n  int b;\n  char c;\n};\n\nint main()\n{\nstruct neicun duiqi;\nprintf(\"%d\\n\",sizeof(duiqi));  //按照定义中最长的那个对齐 \n}\n\n```\n\n程序运行结果：`12`\n\n![内存空间对齐2]($resource/%E5%86%85%E5%AD%98%E7%A9%BA%E9%97%B4%E5%AF%B9%E9%BD%902.png)\n\n\n**示例**\n```c\n#include<stdio.h>\n\nstruct neicun\n{\n  char a;\n  short b;\n  int c;\n  short d;\n};\n\nint main()\n{\nstruct neicun duiqi;\nprintf(\"%d\\n\",sizeof(duiqi));  //按照定义中最长的那个对齐 \n}\n\n```\n程序的运行结果：`12`\n\n![内存空间3]($resource/%E5%86%85%E5%AD%98%E7%A9%BA%E9%97%B43.png)\n\n**实例二**\n```c\n#include<stdio.h>\n\nstruct neicun\n{\n  char array[10];\n  char b;\n  char c;\n  char d;\n  char e;\n  \n};\n\nint main()\n{\n  struct neicun duiqi;\n  printf(\"%d\\n\",sizeof(duiqi));  //按照定义中最长的那个对齐 \n}\n```\n程序输出结果为：`14`  ,不会将整个数组当成一个整体，只是10个char型的数据，所以最大的长度仍然为char\n\n**示例三**\n```c\n\n#include<stdio.h>\n\nstruct neicun\n{\n  int array[10];\n  char b;\n  char c;\n  char d;\n  char e;\n  char f;\n  \n};\n\nint main()\n{\n  struct neicun duiqi;\n  printf(\"%d\\n\",sizeof(duiqi));  //按照定义中最长的那个对齐 \n}\n\n```\n程序输出结果为：`48`\n因为数组中为10个int型数据，所以整个结构体中最大的字节长度为int,所以全部按照int 对齐；\n\n\n## 结构体成员的位字段\n\n## 结构体数组的定义和使用\n\n## 结构嵌套以及结构和指针\n\n\n",[[1538358095926,["gjx16@GJXAIOU",[[1,1196,"\n"]],[1194,1194],[1195,1195]]],[1538358098457,["gjx16@GJXAIOU",[[1,1195,"****"]],[1195,1195],[1197,1197]]],[1538358100907,["gjx16@GJXAIOU",[[1,1197,"示例"]],[1197,1197],[1199,1199]]],[1538358103571,["gjx16@GJXAIOU",[[1,1203,"\n"]],[1201,1201],[1202,1202]]],[1538358104982,["gjx16@GJXAIOU",[[1,1204,"\n"]],[1202,1202],[1203,1203]]],[1538358110862,["gjx16@GJXAIOU",[[1,1203,"···"]],[1203,1203],[1206,1206]]],[1538358111979,["gjx16@GJXAIOU",[[-1,1203,"···"]],[1206,1206],[1203,1203]]],[1538358114708,["gjx16@GJXAIOU",[[1,1203,"```c"]],[1203,1203],[1207,1207]]],[1538358115020,["gjx16@GJXAIOU",[[1,1209,"\n"]],[1207,1207],[1208,1208]]],[1538358115197,["gjx16@GJXAIOU",[[1,1210,"\n"]],[1208,1208],[1209,1209]]],[1538358115377,["gjx16@GJXAIOU",[[1,1211,"\n"]],[1209,1209],[1210,1210]]],[1538358115548,["gjx16@GJXAIOU",[[1,1212,"\n"]],[1210,1210],[1211,1211]]],[1538358115687,["gjx16@GJXAIOU",[[1,1213,"\n"]],[1211,1211],[1212,1212]]],[1538358115948,["gjx16@GJXAIOU",[[1,1214,"\n"]],[1212,1212],[1213,1213]]],[1538358116094,["gjx16@GJXAIOU",[[1,1215,"\n"]],[1213,1213],[1214,1214]]],[1538358116731,["gjx16@GJXAIOU",[[1,1214,"```"]],[1214,1214],[1217,1217]]],[1538358126019,["gjx16@GJXAIOU",[[1,1208,"#include<>"]],[1208,1208],[1218,1218]]],[1538358131378,["gjx16@GJXAIOU",[[1,1217,"stdio.h"]],[1217,1217],[1224,1224]]],[1538358133236,["gjx16@GJXAIOU",[[1,1231,"\n"]],[1225,1225],[1226,1226]]],[1538358133939,["gjx16@GJXAIOU",[[1,1232,"\n"]],[1226,1226],[1227,1227]]],[1538358137677,["gjx16@GJXAIOU",[[1,1227,"int main()"]],[1227,1227],[1237,1237]]],[1538358138421,["gjx16@GJXAIOU",[[1,1243,"\n"]],[1237,1237],[1238,1238]]],[1538358140252,["gjx16@GJXAIOU",[[1,1238,"{]"]],[1238,1238],[1240,1240]]],[1538358141264,["gjx16@GJXAIOU",[[1,1239,"\n"]],[1239,1239],[1240,1240]]],[1538358141452,["gjx16@GJXAIOU",[[1,1240,"\n"]],[1240,1240],[1241,1241]]],[1538358146549,["gjx16@GJXAIOU",[[1,1240,"printf();"]],[1240,1240],[1249,1249]]],[1538358151682,["gjx16@GJXAIOU",[[-1,1250,"]"]],[1251,1251],[1250,1250]]],[1538358152217,["gjx16@GJXAIOU",[[1,1250,"}"]],[1250,1250],[1251,1251]]],[1538358158666,["gjx16@GJXAIOU",[[1,1247,"\"\""]],[1247,1247],[1249,1249]]],[1538358168411,["gjx16@GJXAIOU",[[1,1248,"%d\\n"]],[1248,1248],[1252,1252]]],[1538358178044,["gjx16@GJXAIOU",[[1,1253,",&a"]],[1253,1253],[1256,1256]]],[1538358180905,["gjx16@GJXAIOU",[[-1,1254,"&a"]],[1256,1256],[1254,1254]]],[1538358185261,["gjx16@GJXAIOU",[[1,1254,"sizeof("]],[1254,1254],[1261,1261]]],[1538358185373,["gjx16@GJXAIOU",[[1,1262,")"]],[1261,1261],[1262,1262]]],[1538358195219,["gjx16@GJXAIOU",[[1,1261,"struct C"]],[1261,1261],[1269,1269]]],[1538358199479,["gjx16@GJXAIOU",[[1,1227,"\n"]],[1226,1226],[1227,1227]]],[1538358206349,["gjx16@GJXAIOU",[[1,1227,"struct C"]],[1227,1227],[1235,1235]]],[1538358206904,["gjx16@GJXAIOU",[[1,1236,"\n"]],[1235,1235],[1236,1236]]],[1538358208291,["gjx16@GJXAIOU",[[1,1236,"{}"]],[1236,1236],[1238,1238]]],[1538358209518,["gjx16@GJXAIOU",[[1,1237,"\n"]],[1237,1237],[1238,1238]]],[1538358209698,["gjx16@GJXAIOU",[[1,1238,"\n"]],[1238,1238],[1239,1239]]],[1538358209908,["gjx16@GJXAIOU",[[1,1239,"\n"]],[1239,1239],[1240,1240]]],[1538358212545,["gjx16@GJXAIOU",[[1,1242,"\n"]],[1242,1242],[1243,1243]]],[1538358216506,["gjx16@GJXAIOU",[[1,1238,"  "]],[1238,1238],[1240,1240]]],[1538358649890,["gjx16@GJXAIOU",[[1,1240,"chai"]],[1240,1240],[1244,1244]]],[1538358650790,["gjx16@GJXAIOU",[[-1,1243,"i"]],[1244,1244],[1243,1243]]],[1538358653451,["gjx16@GJXAIOU",[[1,1243,"r a;"]],[1243,1243],[1247,1247]]],[1538358653837,["gjx16@GJXAIOU",[[1,1248,"  \n"]],[1247,1247],[1250,1250]]],[1538358659818,["gjx16@GJXAIOU",[[1,1250,"short b;"]],[1250,1250],[1258,1258]]],[1538358660123,["gjx16@GJXAIOU",[[1,1259,"  \n"]],[1258,1258],[1261,1261]]],[1538358667427,["gjx16@GJXAIOU",[[1,1261,"char c"]],[1261,1261],[1267,1267]]],[1538358667665,["gjx16@GJXAIOU",[[1,1268,"  \n"]],[1267,1267],[1270,1270]]],[1538358671273,["gjx16@GJXAIOU",[[-1,1268,"  "]],[1270,1270],[1268,1268]]],[1538358671618,["gjx16@GJXAIOU",[[-1,1269,"\n"]],[1268,1268],[1267,1267]]],[1538358672657,["gjx16@GJXAIOU",[[1,1267,";"]],[1267,1267],[1268,1268]]],[1538358673015,["gjx16@GJXAIOU",[[1,1269,"  \n"]],[1268,1268],[1271,1271]]],[1538358676669,["gjx16@GJXAIOU",[[1,1271,"int d"]],[1271,1271],[1276,1276]]],[1538358680641,["gjx16@GJXAIOU",[[1,1277,"  \n"]],[1276,1276],[1279,1279]]],[1538358683077,["gjx16@GJXAIOU",[[1,1279,"longlong"]],[1279,1279],[1287,1287]]],[1538358685032,["gjx16@GJXAIOU",[[-1,1283,"long"]],[1287,1287],[1283,1283]]],[1538358688485,["gjx16@GJXAIOU",[[1,1283," long e;"]],[1283,1283],[1291,1291]]],[1538358695896,["gjx16@GJXAIOU",[[1,1247,"  //1ge"]],[1247,1247],[1254,1254]]],[1538358696830,["gjx16@GJXAIOU",[[-1,1250,"/1ge"]],[1254,1254],[1250,1250]]],[1538358698475,["gjx16@GJXAIOU",[[1,1250,"、"]],[1250,1250],[1251,1251]]],[1538358699177,["gjx16@GJXAIOU",[[-1,1250,"、"]],[1251,1251],[1250,1250]]],[1538358702542,["gjx16@GJXAIOU",[[1,1250,"/1"]],[1250,1250],[1252,1252]]],[1538358705928,["gjx16@GJXAIOU",[[1,1252,"个字节"]],[1252,1252],[1255,1255]]],[1538361146622,["gjx16@GJXAIOU",[[1,1266,"、、"]],[1266,1266],[1268,1268]]],[1538361147719,["gjx16@GJXAIOU",[[-1,1266,"、、"]],[1268,1268],[1266,1266]]],[1538361150933,["gjx16@GJXAIOU",[[1,1266,"//kon"]],[1266,1266],[1271,1271]]],[1538361151620,["gjx16@GJXAIOU",[[-1,1268,"kon"]],[1271,1271],[1268,1268]]],[1538361154108,["gjx16@GJXAIOU",[[1,1268,"空一格"]],[1268,1268],[1271,1271]]],[1538361154976,["gjx16@GJXAIOU",[[-1,1270,"格"]],[1271,1271],[1270,1270]]],[1538361163005,["gjx16@GJXAIOU",[[1,1270,"个字节，然后两个字节"]],[1270,1270],[1280,1280]]],[1538361166936,["gjx16@GJXAIOU",[[1,1290," 、、、"]],[1290,1290],[1294,1294]]],[1538361168315,["gjx16@GJXAIOU",[[-1,1290," 、、、"]],[1294,1294],[1290,1290]]],[1538361170873,["gjx16@GJXAIOU",[[1,1290,"//lian"]],[1290,1290],[1296,1296]]],[1538361171782,["gjx16@GJXAIOU",[[-1,1292,"lian"]],[1296,1296],[1292,1292]]],[1538361176197,["gjx16@GJXAIOU",[[1,1292,"一个字节"]],[1292,1292],[1296,1296]]],[1538361230712,["gjx16@GJXAIOU",[[1,1304,"；、、、、、"]],[1304,1304],[1310,1310]]],[1538361232573,["gjx16@GJXAIOU",[[-1,1304,"；、、、、、"]],[1310,1310],[1304,1304]]],[1538361257203,["gjx16@GJXAIOU",[[1,1304,";//另起一行占十个"]],[1304,1304],[1314,1314]]],[1538361258134,["gjx16@GJXAIOU",[[-1,1312,"十个"]],[1314,1314],[1312,1312]]],[1538361261530,["gjx16@GJXAIOU",[[1,1312,"四个字节"]],[1312,1312],[1316,1316]]],[1538361264380,["gjx16@GJXAIOU",[[1,1331,"、、"]],[1331,1331],[1333,1333]]],[1538361265597,["gjx16@GJXAIOU",[[-1,1331,"、、"]],[1333,1333],[1331,1331]]],[1538361268605,["gjx16@GJXAIOU",[[1,1331,"//zha"]],[1331,1331],[1336,1336]]],[1538361269775,["gjx16@GJXAIOU",[[-1,1333,"zha"]],[1336,1336],[1333,1333]]],[1538361293791,["gjx16@GJXAIOU",[[1,1333,"lin"]],[1333,1333],[1336,1336]]],[1538361294641,["gjx16@GJXAIOU",[[-1,1333,"lin"]],[1336,1336],[1333,1333]]],[1538361306596,["gjx16@GJXAIOU",[[1,1333,"另起一行占8个字节"]],[1333,1333],[1342,1342]]],[1538361312605,["gjx16@GJXAIOU",[[-1,1399,"\n"]],[1399,1399],[1398,1398]]],[1538361312755,["gjx16@GJXAIOU",[[-1,1398,"\n"]],[1398,1398],[1397,1397]]],[1538361312921,["gjx16@GJXAIOU",[[-1,1397,"\n"]],[1397,1397],[1396,1396]]],[1538361313217,["gjx16@GJXAIOU",[[-1,1396,"\n"]],[1396,1396],[1395,1395]]],[1538361501974,["gjx16@GJXAIOU",[[1,1401,"\n"]],[1399,1399],[1400,1400]]],[1538361504861,["gjx16@GJXAIOU",[[1,1402,"\n"]],[1400,1400],[1401,1401]]],[1538361505291,["gjx16@GJXAIOU",[[1,1401,"··"]],[1401,1401],[1403,1403]]],[1538361506124,["gjx16@GJXAIOU",[[-1,1401,"··"]],[1403,1403],[1401,1401]]],[1538361507951,["gjx16@GJXAIOU",[[1,1401,"```"]],[1401,1401],[1404,1404]]],[1538361511368,["gjx16@GJXAIOU",[[-1,1401,"```"]],[1404,1404],[1401,1401]]],[1538361521077,["gjx16@GJXAIOU",[[1,1401,"程序运行结果为："]],[1401,1401],[1409,1409]]],[1538361523090,["gjx16@GJXAIOU",[[-1,1408,"："]],[1409,1409],[1408,1408]]],[1538361530474,["gjx16@GJXAIOU",[[1,1408,"：`24`"]],[1408,1408],[1413,1413]]],[1538381499402,["gjx16@GJXAIOU",[[1,2215,"\n"]],[2214,2214],[2215,2215]]],[1538381499542,["gjx16@GJXAIOU",[[1,2216,"\n"]],[2215,2215],[2216,2216]]],[1538381499665,["gjx16@GJXAIOU",[[1,2217,"\n"]],[2216,2216],[2217,2217]]],[1538381506166,["gjx16@GJXAIOU",[[1,2215,"---"]],[2215,2215],[2218,2218]]],[1538381518073,["gjx16@GJXAIOU",[[1,624,"---"]],[624,624],[627,627]]],[1538381518483,["gjx16@GJXAIOU",[[1,628,"\n"]],[627,627],[628,628]]],[1538381523537,["gjx16@GJXAIOU",[[1,18,"yi"]],[18,18],[20,20]]],[1538381524620,["gjx16@GJXAIOU",[[-1,18,"yi"]],[20,20],[18,18]]],[1538381526510,["gjx16@GJXAIOU",[[1,18,"一、"]],[18,18],[20,20]]],[1538381532436,["gjx16@GJXAIOU",[[1,634,"二、"]],[634,634],[636,636]]],[1538381541656,["gjx16@GJXAIOU",[[1,2232,"按"]],[2232,2232],[2233,2233]]],[1538381542340,["gjx16@GJXAIOU",[[-1,2231," 按"]],[2233,2233],[2231,2231]]],[1538381545942,["gjx16@GJXAIOU",[[1,2231," 三、"]],[2231,2231],[2234,2234]]],[1538381550668,["gjx16@GJXAIOU",[[1,2248,"四、"]],[2248,2248],[2250,2250]]],[1538381558224,["gjx16@GJXAIOU",[[1,2266,"五、"]],[2266,2266],[2268,2268]]],[1538381561980,["gjx16@GJXAIOU",[[1,2245,"\n"]],[2243,2243],[2244,2244]]],[1538381562107,["gjx16@GJXAIOU",[[1,2246,"\n"]],[2244,2244],[2245,2245]]],[1538381562269,["gjx16@GJXAIOU",[[1,2247,"\n"]],[2245,2245],[2246,2246]]],[1538381568755,["gjx16@GJXAIOU",[[-1,2225,"-"]],[2226,2226],[2225,2225]]],[1538381570222,["gjx16@GJXAIOU",[[1,2225,"----"]],[2225,2225],[2229,2229]]],[1538381571854,["gjx16@GJXAIOU",[[-1,2223,"------"]],[2229,2229],[2223,2223]]],[1538381575887,["gjx16@GJXAIOU",[[1,2223,"--------"]],[2223,2223],[2231,2231]]],[1538381577371,["gjx16@GJXAIOU",[[-1,2233,"\n"]],[2232,2232],[2231,2231]]],[1538381589321,["gjx16@GJXAIOU",[[-1,2223,"--------"]],[2231,2231],[2223,2223]]],[1538381589467,["gjx16@GJXAIOU",[[-1,2224,"\n"]],[2223,2223],[2222,2222]]],[1538381589768,["gjx16@GJXAIOU",[[-1,2223,"\n"]],[2222,2222],[2221,2221]]],[1538381591551,["gjx16@GJXAIOU",[[1,2221,"---"]],[2221,2221],[2224,2224]]],[1538381598074,["gjx16@GJXAIOU",[[1,2221,"\n"]],[2221,2221],[2222,2222]]],[1538381600683,["gjx16@GJXAIOU",[[1,2225," "]],[2225,2225],[2226,2226]]],[1538381602052,["gjx16@GJXAIOU",[[-1,2225," "]],[2226,2226],[2225,2225]]],[1538381603855,["gjx16@GJXAIOU",[[1,2225,"---------------------"]],[2225,2225],[2246,2246]]],[1538381605430,["gjx16@GJXAIOU",[[-1,2222,"------------------------"]],[2246,2246],[2222,2222]]],[1538381605485,["gjx16@GJXAIOU",[[-1,2223,"\n"]],[2222,2222],[2221,2221]]],[1538381605517,["gjx16@GJXAIOU",[[-1,2222,"\n"]],[2221,2221],[2220,2220]]],[1538381606024,["gjx16@GJXAIOU",[[-1,2212,"照int 对齐；"]],[2220,2220],[2212,2212]]],[1538381608184,["gjx16@GJXAIOU",[[1,2212,"照int 对齐；"]],[2212,2212],[2220,2220]]],[1538381609611,["gjx16@GJXAIOU",[[1,2222,"\n"]],[2220,2220],[2221,2221]]],[1538381610035,["gjx16@GJXAIOU",[[1,2223,"\n"]],[2221,2221],[2222,2222]]],[1538381611233,["gjx16@GJXAIOU",[[1,2222,"---"]],[2222,2222],[2225,2225]]],[1538381615630,["gjx16@GJXAIOU",[[-1,2226,"\n"]],[2226,2226],[2225,2225]]],[1538381617060,["gjx16@GJXAIOU",[[1,2226,"\n"]],[2225,2225],[2226,2226]]],[1538381797105,["gjx16@GJXAIOU",[[1,2246,"\n"]],[2242,2242],[2243,2243]]],[1538381798403,["gjx16@GJXAIOU",[[1,2243,"8*"]],[2243,2243],[2245,2245]]],[1538381799597,["gjx16@GJXAIOU",[[-1,2243,"8*"]],[2245,2245],[2243,2243]]],[1538381800588,["gjx16@GJXAIOU",[[1,2243,"****"]],[2243,2243],[2245,2245]]],[1538381803548,["gjx16@GJXAIOU",[[1,2245,"lizichen"]],[2245,2245],[2253,2253]]],[1538381805736,["gjx16@GJXAIOU",[[-1,2245,"lizichen"]],[2253,2253],[2245,2245]]],[1538381809959,["gjx16@GJXAIOU",[[1,2245,"li"]],[2245,2245],[2247,2247]]],[1538381810670,["gjx16@GJXAIOU",[[-1,2245,"li"]],[2247,2247],[2245,2245]]],[1538381814387,["gjx16@GJXAIOU",[[1,2245,"例子程序"]],[2245,2245],[2249,2249]]],[1538381816718,["gjx16@GJXAIOU",[[1,2255,"\n"]],[2251,2251],[2252,2252]]],[1538381817635,["gjx16@GJXAIOU",[[1,2252,"··"]],[2252,2252],[2254,2254]]],[1538381819294,["gjx16@GJXAIOU",[[-1,2252,"··"]],[2254,2254],[2252,2252]]],[1538381820717,["gjx16@GJXAIOU",[[1,2252,"```"]],[2252,2252],[2255,2255]]],[1538381820746,["gjx16@GJXAIOU",[[1,2255,"language\n```\n"]],[2255,2255],[2255,2263]]],[1538381821907,["gjx16@GJXAIOU",[[-1,2255,"language"],[1,2263,"c"]],[2255,2263],[2256,2256]]],[1538381822109,["gjx16@GJXAIOU",[[1,2257,"\n"]],[2256,2256],[2257,2257]]],[1538381822337,["gjx16@GJXAIOU",[[1,2258,"\n"]],[2257,2257],[2258,2258]]],[1538381829286,["gjx16@GJXAIOU",[[1,2258,"#include<>"]],[2258,2258],[2268,2268]]],[1538381833045,["gjx16@GJXAIOU",[[1,2267,"stdio.j"]],[2267,2267],[2274,2274]]],[1538381833738,["gjx16@GJXAIOU",[[-1,2273,"j"]],[2274,2274],[2273,2273]]],[1538381834419,["gjx16@GJXAIOU",[[1,2273,"h"]],[2273,2273],[2274,2274]]],[1538381836186,["gjx16@GJXAIOU",[[1,2276,"\n"]],[2275,2275],[2276,2276]]],[1538381836718,["gjx16@GJXAIOU",[[1,2277,"\n"]],[2276,2276],[2277,2277]]],[1538381839809,["gjx16@GJXAIOU",[[1,2277,"strucu"]],[2277,2277],[2283,2283]]],[1538381840612,["gjx16@GJXAIOU",[[-1,2282,"u"]],[2283,2283],[2282,2282]]],[1538381847483,["gjx16@GJXAIOU",[[1,2282,"t D"]],[2282,2282],[2285,2285]]],[1538381850579,["gjx16@GJXAIOU",[[1,2285,"]"]],[2285,2285],[2286,2286]]],[1538381851604,["gjx16@GJXAIOU",[[-1,2285,"]"]],[2286,2286],[2285,2285]]],[1538381852512,["gjx16@GJXAIOU",[[1,2286,"\n"]],[2285,2285],[2286,2286]]],[1538381854262,["gjx16@GJXAIOU",[[1,2286,"{}"]],[2286,2286],[2288,2288]]],[1538381855446,["gjx16@GJXAIOU",[[1,2287,"\n"]],[2287,2287],[2288,2288]]],[1538381855903,["gjx16@GJXAIOU",[[1,2288,"\n"]],[2288,2288],[2289,2289]]],[1538381856279,["gjx16@GJXAIOU",[[1,2289,"\n"]],[2289,2289],[2290,2290]]],[1538381860568,["gjx16@GJXAIOU",[[1,2288,"  chaf"]],[2288,2288],[2294,2294]]],[1538381861150,["gjx16@GJXAIOU",[[-1,2293,"f"]],[2294,2294],[2293,2293]]],[1538381861882,["gjx16@GJXAIOU",[[1,2293,"t "]],[2293,2293],[2295,2295]]],[1538381862633,["gjx16@GJXAIOU",[[-1,2293,"t "]],[2295,2295],[2293,2293]]],[1538381875380,["gjx16@GJXAIOU",[[1,2293,"r a : 2;    //ding"]],[2293,2293],[2311,2311]]],[1538381876416,["gjx16@GJXAIOU",[[-1,2306,"/ding"]],[2311,2311],[2306,2306]]],[1538381893120,["gjx16@GJXAIOU",[[1,2306,"/定义一个成员变量"]],[2306,2306],[2315,2315]]],[1538381896532,["gjx16@GJXAIOU",[[-1,2313,"变量"]],[2315,2315],[2313,2313]]],[1538381908362,["gjx16@GJXAIOU",[[1,2313,"类型为char ,"]],[2313,2313],[2322,2322]]],[1538381910263,["gjx16@GJXAIOU",[[1,2322,"d"]],[2322,2322],[2323,2323]]],[1538381910812,["gjx16@GJXAIOU",[[-1,2322,"d"]],[2323,2323],[2322,2322]]],[1538381935507,["gjx16@GJXAIOU",[[1,2322,"但是这个成员只使用2个bir"]],[2322,2322],[2336,2336]]],[1538381936417,["gjx16@GJXAIOU",[[-1,2335,"r"]],[2336,2336],[2335,2335]]],[1538381938361,["gjx16@GJXAIOU",[[1,2335,"t"]],[2335,2335],[2336,2336]]],[1538381940130,["gjx16@GJXAIOU",[[1,2337,"  \n"]],[2336,2336],[2339,2339]]],[1538381942437,["gjx16@GJXAIOU",[[-1,2337,"  "]],[2339,2339],[2337,2337]]],[1538381943065,["gjx16@GJXAIOU",[[-1,2338,"\n"]],[2337,2337],[2336,2336]]],[1538381946506,["gjx16@GJXAIOU",[[1,2337,"\\"]],[2337,2337],[2338,2338]]],[1538381947762,["gjx16@GJXAIOU",[[-1,2337,"\\"]],[2338,2338],[2337,2337]]],[1538381950479,["gjx16@GJXAIOU",[[1,2340,"\n"]],[2340,2340],[2341,2341]]],[1538381950638,["gjx16@GJXAIOU",[[1,2341,"\n"]],[2341,2341],[2342,2342]]],[1538381950813,["gjx16@GJXAIOU",[[1,2342,"\n"]],[2342,2342],[2343,2343]]],[1538381960784,["gjx16@GJXAIOU",[[1,2341,"int main()"]],[2341,2341],[2351,2351]]],[1538381961451,["gjx16@GJXAIOU",[[1,2353,"\n"]],[2351,2351],[2352,2352]]],[1538381962697,["gjx16@GJXAIOU",[[1,2352,"{}"]],[2352,2352],[2354,2354]]],[1538381964377,["gjx16@GJXAIOU",[[1,2353,"\n"]],[2353,2353],[2354,2354]]],[1538381964559,["gjx16@GJXAIOU",[[1,2354,"\n"]],[2354,2354],[2355,2355]]],[1538381964744,["gjx16@GJXAIOU",[[1,2355,"\n"]],[2355,2355],[2356,2356]]],[1538381965345,["gjx16@GJXAIOU",[[1,2356,"\n"]],[2356,2356],[2357,2357]]],[1538382003358,["gjx16@GJXAIOU",[[1,2354,"struct D a;"]],[2354,2354],[2365,2365]]],[1538382004604,["gjx16@GJXAIOU",[[1,2368,"\n"]],[2365,2365],[2366,2366]]],[1538382009705,["gjx16@GJXAIOU",[[-1,2368,"\n"]],[2366,2366],[2365,2365]]],[1538382010682,["gjx16@GJXAIOU",[[-1,2363,"a;"]],[2365,2365],[2363,2363]]],[1538382019735,["gjx16@GJXAIOU",[[1,2363,"lizi;"]],[2363,2363],[2368,2368]]],[1538382020086,["gjx16@GJXAIOU",[[1,2371,"\n"]],[2368,2368],[2369,2369]]],[1538382028604,["gjx16@GJXAIOU",[[1,2369,"lizi.a = 3;"]],[2369,2369],[2380,2380]]],[1538382029156,["gjx16@GJXAIOU",[[1,2383,"\n"]],[2380,2380],[2381,2381]]],[1538382032805,["gjx16@GJXAIOU",[[1,2381,"printf();"]],[2381,2381],[2390,2390]]],[1538382040338,["gjx16@GJXAIOU",[[1,2388,"\"\""]],[2388,2388],[2390,2390]]],[1538382046876,["gjx16@GJXAIOU",[[1,2389,"%d\\n"]],[2389,2389],[2393,2393]]],[1538382067911,["gjx16@GJXAIOU",[[1,2394,",lizi.a"]],[2394,2394],[2401,2401]]],[1538382070734,["gjx16@GJXAIOU",[[1,2406,"\n"]],[2403,2403],[2404,2404]]],[1538382075628,["gjx16@GJXAIOU",[[1,2404,"return 0;"]],[2404,2404],[2413,2413]]],[1538382078433,["gjx16@GJXAIOU",[[-1,2415,"\n"]],[2415,2415],[2414,2414]]],[1538382078607,["gjx16@GJXAIOU",[[-1,2414,"\n"]],[2414,2414],[2413,2413]]],[1538382125816,["gjx16@GJXAIOU",[[1,2425,"\n"]],[2420,2420],[2421,2421]]],[1538382127333,["gjx16@GJXAIOU",[[1,2421,"chn"]],[2421,2421],[2424,2424]]],[1538382128299,["gjx16@GJXAIOU",[[-1,2421,"chn"]],[2424,2424],[2421,2421]]],[1538382147702,["gjx16@GJXAIOU",[[1,2421,"程序的输出结果为：`-1`"]],[2421,2421],[2434,2434]]],[1538382203374,["gjx16@GJXAIOU",[[1,2404,"\n"]],[2403,2403],[2404,2404]]],[1538382208280,["gjx16@GJXAIOU",[[1,2339,";"]],[2339,2339],[2340,2340]]],[1538382226534,["gjx16@GJXAIOU",[[1,2405,"printf();"]],[2405,2405],[2414,2414]]],[1538382230226,["gjx16@GJXAIOU",[[1,2412,"\"\""]],[2412,2412],[2414,2414]]],[1538382237700,["gjx16@GJXAIOU",[[1,2413,"%d\\n"]],[2413,2413],[2417,2417]]],[1538382246498,["gjx16@GJXAIOU",[[1,2418,",sizeof("]],[2418,2418],[2426,2426]]],[1538382246593,["gjx16@GJXAIOU",[[1,2427,")"]],[2426,2426],[2427,2427]]],[1538382259656,["gjx16@GJXAIOU",[[1,2426,"lizi"]],[2426,2426],[2430,2430]]],[1538382265378,["gjx16@GJXAIOU",[[1,2469,"\n"]],[2464,2464],[2465,2465]]],[1538382265410,["gjx16@GJXAIOU",[[1,2470,"\n"]],[2465,2465],[2466,2466]]],[1538382268123,["gjx16@GJXAIOU",[[1,2466,"a"]],[2466,2466],[2467,2467]]],[1538382268870,["gjx16@GJXAIOU",[[1,2472,"\n"]],[2467,2467],[2468,2468]]],[1538382270345,["gjx16@GJXAIOU",[[-1,2472,"\n"]],[2468,2468],[2467,2467]]],[1538382270511,["gjx16@GJXAIOU",[[-1,2466,"a"]],[2467,2467],[2466,2466]]],[1538382271044,["gjx16@GJXAIOU",[[-1,2470,"\n"]],[2466,2466],[2465,2465]]],[1538382273130,["gjx16@GJXAIOU",[[1,2465,"                                        "]],[2465,2465],[2505,2505]]],[1538382276266,["gjx16@GJXAIOU",[[-1,2494,"           "]],[2505,2505],[2494,2494]]],[1538382290230,["gjx16@GJXAIOU",[[1,2494,"`1` //yinwei "]],[2494,2494],[2507,2507]]],[1538382292011,["gjx16@GJXAIOU",[[-1,2500,"yinwei "]],[2507,2507],[2500,2500]]],[1538382319946,["gjx16@GJXAIOU",[[1,2500,"因为内存中最小为一个字节，所以变量lizi还是占"]],[2500,2500],[2524,2524]]],[1538382325749,["gjx16@GJXAIOU",[[1,2524,"一个字节"]],[2524,2524],[2528,2528]]],[1538382342256,["gjx16@GJXAIOU",[[1,2464,"、、="]],[2464,2464],[2467,2467]]],[1538382343400,["gjx16@GJXAIOU",[[-1,2464,"、、="]],[2467,2467],[2464,2464]]],[1538382381736,["gjx16@GJXAIOU",[[1,2464,"//以为2用二进制表示为11，而第一个1代表符号，"]],[2464,2464],[2489,2489]]],[1538382391567,["gjx16@GJXAIOU",[[1,2489,"因此结果为-1"]],[2489,2489],[2496,2496]]]],null,"gjx16@GJXAIOU"],["d0ab622f-69f7-413e-a39c-3620a63b3644",1538382614701,"# day11 复合类型\n\n\n## 一、结构体的定义和成员初始化\n\n```c\n#include<stdio.h>\n#include<string.h>      //这里需要使用strcpy函数\n\nstruct student\n{\n  char name[100];\n  int age;\n  int sex;\n};                   //说明了一个结构体的数据成员类型,注意这里有一个;\n\n\nint main()\n{\n\n\n//法一：先定义然后初始化\n\nstruct student st; //定义了一个结构体的变量（在栈中），名字叫做st\n\n//使用成员变量\n\nst.age = 20;\nst.sex = 0;\nstrcpy(st.name,\"zhangsan\");\nprintf(\"name = %s\\n\",st.name);\n\n\n\n//法二：在定义的同时初始化成员变量\n\nstruct stduent st = {\"zhangsan\",20,1};//这个必须按照顺序依次赋值\nstruct student st = {.age = 20,.name = \"zhangsan\",.sex = 0};//此方法允许自由变换成员变量的位置进行赋值\n\n//法三：通过用户赋值进行初始化\n\nscanf(\"%s\",&st.name);\nscanf(\"%d\",&st.age);\nscanf(\"%d\",&st.sex);\n\n}\n```\n\n---\n\n## 二、结构体成员内存对齐详解\n\n结构体在内存之中一定是一个矩形结构\n\n```c\n\n#include<stdio.h>\n\nstruct neicun\n{\n  int a;\n  char b;\n  char c;\n};\n\nint main()\n{\nstruct neicun duiqi;\nprintf(\"%d\\n\",sizeof(duiqi));  //按照定义中最长的那个对齐 \n}\n```\n\n程序的输出结果为：`8`\n![内存空间对齐1]($resource/%E5%86%85%E5%AD%98%E7%A9%BA%E9%97%B4%E5%AF%B9%E9%BD%901.png)\n\n**结构体中定义变量顺序改变之后**\n```c\n#include<stdio.h>\n\nstruct neicun\n{\n  char a;\n  int b;\n  char c;\n};\n\nint main()\n{\nstruct neicun duiqi;\nprintf(\"%d\\n\",sizeof(duiqi));  //按照定义中最长的那个对齐 \n}\n\n```\n\n程序运行结果：`12`\n\n![内存空间对齐2]($resource/%E5%86%85%E5%AD%98%E7%A9%BA%E9%97%B4%E5%AF%B9%E9%BD%902.png)\n\n**示例**\n\n```c\n#include<stdio.h>\n\nstruct C\n{\n  char a;  //1个字节\n  short b;//空一个字节，然后两个字节\n  char c;//一个字节\n  int d;//另起一行占四个字节\n  long long e;//另起一行占8个字节\n\n}\n\nint main()\n{\nprintf(\"%d\\n\",sizeof(struct C));\n}\n\n```\n\n程序运行结果为：`24`\n\n**示例**\n```c\n#include<stdio.h>\n\nstruct neicun\n{\n  char a;\n  short b;\n  int c;\n  short d;\n};\n\nint main()\n{\nstruct neicun duiqi;\nprintf(\"%d\\n\",sizeof(duiqi));  //按照定义中最长的那个对齐 \n}\n\n```\n程序的运行结果：`12`\n\n![内存空间3]($resource/%E5%86%85%E5%AD%98%E7%A9%BA%E9%97%B43.png)\n\n**实例二**\n```c\n#include<stdio.h>\n\nstruct neicun\n{\n  char array[10];\n  char b;\n  char c;\n  char d;\n  char e;\n  \n};\n\nint main()\n{\n  struct neicun duiqi;\n  printf(\"%d\\n\",sizeof(duiqi));  //按照定义中最长的那个对齐 \n}\n```\n程序输出结果为：`14`  ,不会将整个数组当成一个整体，只是10个char型的数据，所以最大的长度仍然为char\n\n**示例三**\n```c\n\n#include<stdio.h>\n\nstruct neicun\n{\n  int array[10];\n  char b;\n  char c;\n  char d;\n  char e;\n  char f;\n  \n};\n\nint main()\n{\n  struct neicun duiqi;\n  printf(\"%d\\n\",sizeof(duiqi));  //按照定义中最长的那个对齐 \n}\n\n```\n程序输出结果为：`48`\n因为数组中为10个int型数据，所以整个结构体中最大的字节长度为int,所以全部按照int 对齐；\n\n---\n\n## 三、结构体成员的位字段\n\n**例子程序**\n```c\n\n#include<stdio.h>\n\nstruct D\n{\n  char a : 2;    //定义一个成员类型为char ,但是这个成员只使用2个bit\n\n};\n\nint main()\n{\nstruct D lizi;\nlizi.a = 3;\nprintf(\"%d\\n\",lizi.a);\nprintf(\"%d\\n\",sizeof(lizi));\nreturn 0;\n}\n\n```\n程序的输出结果为：`-1`//以为2用二进制表示为11，而第一个1代表符号，因此结果为-1\n                             `1` //因为内存中最小为一个字节，所以变量lizi还是占一个字节\n\n\n\n\n## 四、结构体数组的定义和使用\n\n## 五、结构嵌套以及结构和指针\n\n\n",[[1538382613309,["gjx16@GJXAIOU",[[1,2337,"  "]],[2337,2337],[2339,2339]]],[1538382617825,["gjx16@GJXAIOU",[[1,2339,"x"]],[2339,2339],[2340,2340]]],[1538382618560,["gjx16@GJXAIOU",[[-1,2339,"x"]],[2340,2340],[2339,2339]]],[1538382628058,["gjx16@GJXAIOU",[[1,2339,"char b : 3;"]],[2339,2339],[2350,2350]]],[1538382630188,["gjx16@GJXAIOU",[[-1,2348,"3;"]],[2350,2350],[2348,2348]]],[1538382632672,["gjx16@GJXAIOU",[[1,2348,"4;"]],[2348,2348],[2350,2350]]],[1538382664341,["gjx16@GJXAIOU",[[1,2573,"()"]],[2573,2573],[2575,2575]]],[1538382667193,["gjx16@GJXAIOU",[[1,2574,"8wei"]],[2574,2574],[2578,2578]]],[1538382668091,["gjx16@GJXAIOU",[[-1,2575,"wei"]],[2578,2578],[2575,2575]]],[1538382670114,["gjx16@GJXAIOU",[[1,2575,"为"]],[2575,2575],[2576,2576]]],[1538382670646,["gjx16@GJXAIOU",[[-1,2575,"为"]],[2576,2576],[2575,2575]]],[1538382677012,["gjx16@GJXAIOU",[[1,2575,"位"]],[2575,2575],[2576,2576]]],[1538382793795,["gjx16@GJXAIOU",[[-1,2348,"4"]],[2349,2349],[2348,2348]]],[1538382795183,["gjx16@GJXAIOU",[[1,2348,"2"]],[2348,2348],[2349,2349]]],[1538382797731,["gjx16@GJXAIOU",[[1,2351,"  \n"]],[2350,2350],[2353,2353]]],[1538382802710,["gjx16@GJXAIOU",[[1,2353,"ind"]],[2353,2353],[2356,2356]]],[1538382803400,["gjx16@GJXAIOU",[[-1,2353,"ind"]],[2356,2356],[2353,2353]]],[1538382812628,["gjx16@GJXAIOU",[[1,2353,"unsigned chat"]],[2353,2353],[2366,2366]]],[1538382813464,["gjx16@GJXAIOU",[[-1,2365,"t"]],[2366,2366],[2365,2365]]],[1538382822644,["gjx16@GJXAIOU",[[1,2365,"r c : 3"]],[2365,2365],[2372,2372]]],[1538382823734,["gjx16@GJXAIOU",[[-1,2371,"3"]],[2372,2372],[2371,2371]]],[1538382824575,["gjx16@GJXAIOU",[[1,2371,"2;"]],[2371,2371],[2373,2373]]],[1538382838509,["gjx16@GJXAIOU",[[-1,2371,"2"]],[2372,2372],[2371,2371]]],[1538382838776,["gjx16@GJXAIOU",[[1,2371,"4"]],[2371,2371],[2372,2372]]],[1538382845464,["gjx16@GJXAIOU",[[1,2418,"\n"]],[2417,2417],[2418,2418]]],[1538382847686,["gjx16@GJXAIOU",[[1,2418,"liazi"]],[2418,2418],[2423,2423]]],[1538382848413,["gjx16@GJXAIOU",[[-1,2420,"azi"]],[2423,2423],[2420,2420]]],[1538382851410,["gjx16@GJXAIOU",[[1,2420,"zi .a "]],[2420,2420],[2426,2426]]],[1538382852468,["gjx16@GJXAIOU",[[-1,2422," .a "]],[2426,2426],[2422,2422]]],[1538382854656,["gjx16@GJXAIOU",[[1,2422,".a ="]],[2422,2422],[2426,2426]]],[1538382863283,["gjx16@GJXAIOU",[[1,2426," 16;"]],[2426,2426],[2430,2430]]],[1538382869649,["gjx16@GJXAIOU",[[-1,2423,"a"]],[2424,2424],[2423,2423]]],[1538382870100,["gjx16@GJXAIOU",[[1,2423,"c"]],[2423,2423],[2424,2424]]],[1538382872202,["gjx16@GJXAIOU",[[1,2483,"\n"]],[2482,2482],[2483,2483]]],[1538382874569,["gjx16@GJXAIOU",[[1,2483,"printg"]],[2483,2483],[2489,2489]]],[1538382875501,["gjx16@GJXAIOU",[[-1,2488,"g"]],[2489,2489],[2488,2488]]],[1538382878051,["gjx16@GJXAIOU",[[1,2488,"f();"]],[2488,2488],[2492,2492]]],[1538382881483,["gjx16@GJXAIOU",[[1,2490,"\"\""]],[2490,2490],[2492,2492]]],[1538382885972,["gjx16@GJXAIOU",[[1,2491,"%d]"]],[2491,2491],[2494,2494]]],[1538382886926,["gjx16@GJXAIOU",[[-1,2493,"]"]],[2494,2494],[2493,2493]]],[1538382888408,["gjx16@GJXAIOU",[[1,2493,"\\n"]],[2493,2493],[2495,2495]]],[1538382894315,["gjx16@GJXAIOU",[[1,2496,",si"]],[2496,2496],[2499,2499]]],[1538382894998,["gjx16@GJXAIOU",[[-1,2497,"si"]],[2499,2499],[2497,2497]]],[1538382899667,["gjx16@GJXAIOU",[[1,2497,"lizi.c"]],[2497,2497],[2503,2503]]],[1538383232332,["gjx16@GJXAIOU",[[1,2284," "],[1,2285,"\n"],[1,2287,"\n"],[1,2295," "],[1,2296," "],[1,2298," "],[-1,2303,"  "],[1,2320," "],[1,2337,"\n"],[1,2343," "],[1,2346," "],[1,2347," "],[1,2350,"\n"],[1,2362," "],[1,2366," "],[1,2369," "],[1,2370," "],[1,2373,"\n"],[1,2382," "],[1,2388,"\n"],[1,2391,"\n  "],[1,2398," "],[1,2399," "],[1,2406,"\n  printf(\"sizeof("],[-1,2410,".a = 3"],[1,2416,")  =  %d\\n\",sizeof(lizi))"],[1,2418,"\n  "],[-1,2423,"c = 16"],[1,2429,"a  =  3"],[1,2431,"\n  "],[1,2439,"a  =  "],[1,2454,"\n  lizi.c  =  15;\n\n  "],[1,2462,"c  =  "],[-1,2468,"sizeof("],[1,2475,"lizi.c);\n\n  "],[-1,2479,"))"],[1,2481,".c  =  16"],[1,2483,"\n  "],[1,2491,"cxiugaihou  =  "],[1,2506,"\n  "],[1,2513," "],[1,2515,"\n"]],[2258,2517],[2651,2651]]],[1538383235402,["gjx16@GJXAIOU",[[-1,2342,"\n"]],[2342,2342],[2341,2341]]],[1538383238104,["gjx16@GJXAIOU",[[-1,2359,"\n"]],[2359,2359],[2358,2358]]],[1538383238966,["gjx16@GJXAIOU",[[-1,2290,"\n"]],[2290,2290],[2289,2289]]],[1538383239775,["gjx16@GJXAIOU",[[-1,2385,"\n"]],[2385,2385],[2384,2384]]],[1538383241452,["gjx16@GJXAIOU",[[-1,2401,"\n"]],[2401,2401],[2400,2400]]],[1538383242088,["gjx16@GJXAIOU",[[-1,2403,"\n"]],[2403,2403],[2402,2402]]],[1538383242751,["gjx16@GJXAIOU",[[-1,2422,"\n"]],[2422,2422],[2421,2421]]],[1538383243447,["gjx16@GJXAIOU",[[-1,2470,"\n"]],[2470,2470],[2469,2469]]],[1538383243982,["gjx16@GJXAIOU",[[-1,2486,"\n"]],[2486,2486],[2485,2485]]],[1538383244504,["gjx16@GJXAIOU",[[-1,2517,"\n"]],[2517,2517],[2516,2516]]],[1538383245135,["gjx16@GJXAIOU",[[-1,2534,"\n"]],[2534,2534],[2533,2533]]],[1538383245982,["gjx16@GJXAIOU",[[-1,2565,"\n"]],[2565,2565],[2564,2564]]],[1538383246935,["gjx16@GJXAIOU",[[-1,2582,"\n"]],[2582,2582],[2581,2581]]],[1538383250013,["gjx16@GJXAIOU",[[-1,2636,"\n"]],[2636,2636],[2635,2635]]],[1538383252675,["gjx16@GJXAIOU",[[-1,2287,"\n"]],[2287,2287],[2286,2286]]],[1538383266593,["gjx16@GJXAIOU",[[1,2651,"\n"]],[2651,2651],[2652,2652]]],[1538383266797,["gjx16@GJXAIOU",[[1,2652,"\n"]],[2652,2652],[2653,2653]]],[1538383267019,["gjx16@GJXAIOU",[[1,2653,"\n"]],[2653,2653],[2654,2654]]],[1538383267286,["gjx16@GJXAIOU",[[1,2654,"\n"]],[2654,2654],[2655,2655]]],[1538383284357,["gjx16@GJXAIOU",[[1,2652,"sizeof(lizi) = 1\na = -1\nc = 15\ncxiugaihou = 0\n"]],[2652,2652],[2698,2698]]],[1538383288220,["gjx16@GJXAIOU",[[1,2652,"`"]],[2652,2652],[2653,2653]]],[1538383290167,["gjx16@GJXAIOU",[[1,2669,"`"]],[2669,2669],[2670,2670]]],[1538383291715,["gjx16@GJXAIOU",[[1,2671,"`"]],[2671,2671],[2672,2672]]],[1538383292363,["gjx16@GJXAIOU",[[1,2678,"`"]],[2678,2678],[2679,2679]]],[1538383294052,["gjx16@GJXAIOU",[[1,2680,"`"]],[2680,2680],[2681,2681]]],[1538383294918,["gjx16@GJXAIOU",[[1,2687,"`"]],[2687,2687],[2688,2688]]],[1538383296103,["gjx16@GJXAIOU",[[1,2689,"`"]],[2689,2689],[2690,2690]]],[1538383297251,["gjx16@GJXAIOU",[[1,2704,"`"]],[2704,2704],[2705,2705]]],[1538383301918,["gjx16@GJXAIOU",[[-1,2340,"  char  b  :  2;"]],[2340,2356],[2340,2340]]],[1538383303239,["gjx16@GJXAIOU",[[1,2340,"``"]],[2340,2340],[2342,2342]]],[1538383304387,["gjx16@GJXAIOU",[[-1,2340,"``"]],[2342,2342],[2340,2340]]],[1538383304836,["gjx16@GJXAIOU",[[-1,2340,"\n"]],[2340,2340],[2339,2339]]],[1538383307927,["gjx16@GJXAIOU",[[-1,2358,"c"]],[2359,2359],[2358,2358]]],[1538383308231,["gjx16@GJXAIOU",[[1,2358,"b"]],[2358,2358],[2359,2359]]],[1538383313174,["gjx16@GJXAIOU",[[-1,2543,"c"]],[2544,2544],[2543,2543]]],[1538383313460,["gjx16@GJXAIOU",[[1,2543,"b"]],[2543,2543],[2544,2544]]],[1538383317902,["gjx16@GJXAIOU",[[-1,2506,"c"]],[2507,2507],[2506,2506]]],[1538383318101,["gjx16@GJXAIOU",[[1,2506,"b"]],[2506,2506],[2507,2507]]],[1538383320016,["gjx16@GJXAIOU",[[-1,2526,"c"]],[2527,2527],[2526,2526]]],[1538383320175,["gjx16@GJXAIOU",[[1,2526,"b"]],[2526,2526],[2527,2527]]],[1538383323374,["gjx16@GJXAIOU",[[-1,2554,"c"]],[2555,2555],[2554,2554]]],[1538383323483,["gjx16@GJXAIOU",[[1,2554,"b"]],[2554,2554],[2555,2555]]],[1538383327675,["gjx16@GJXAIOU",[[-1,2574,"c"]],[2575,2575],[2574,2574]]],[1538383328525,["gjx16@GJXAIOU",[[1,2574,"b "]],[2574,2574],[2576,2576]]],[1538383334418,["gjx16@GJXAIOU",[[-1,2601,"c"]],[2602,2602],[2601,2601]]],[1538383334591,["gjx16@GJXAIOU",[[1,2601,"b"]],[2601,2601],[2602,2602]]],[1538383339390,["gjx16@GJXAIOU",[[-1,2664,"`c"]],[2666,2666],[2664,2664]]],[1538383339651,["gjx16@GJXAIOU",[[1,2664,"b"]],[2664,2664],[2665,2665]]],[1538383344827,["gjx16@GJXAIOU",[[1,2664,"`"]],[2664,2664],[2665,2665]]],[1538383346635,["gjx16@GJXAIOU",[[-1,2674,"c"]],[2675,2675],[2674,2674]]],[1538383347247,["gjx16@GJXAIOU",[[1,2674,"b "]],[2674,2674],[2676,2676]]],[1538383354935,["gjx16@GJXAIOU",[[-1,2764,"//因为内存中最小为一个字节，所以变量lizi还是占一个字节(8位)"]],[2764,2798],[2764,2764]]],[1538383356770,["gjx16@GJXAIOU",[[1,2654,"//因为内存中最小为一个字节，所以变量lizi还是占一个字节(8位)"]],[2654,2654],[2688,2688]]],[1538383359322,["gjx16@GJXAIOU",[[-1,2782,"            `1` \n"]],[2783,2799],[2782,2782]]],[1538383368476,["gjx16@GJXAIOU",[[-1,2728,"`-1`//以为2用二进制表示为11，而第一个1代表符号，因此结果为-1"]],[2728,2764],[2728,2728]]],[1538383370450,["gjx16@GJXAIOU",[[1,2697,"`-1`//以为2用二进制表示为11，而第一个1代表符号，因此结果为-1"]],[2697,2697],[2733,2733]]],[1538383373724,["gjx16@GJXAIOU",[[-1,2697,"`-1`"]],[2701,2701],[2697,2697]]],[1538383379935,["gjx16@GJXAIOU",[[1,2738,"//si"]],[2738,2738],[2742,2742]]],[1538383380535,["gjx16@GJXAIOU",[[-1,2740,"si"]],[2742,2742],[2740,2740]]],[1538383388857,["gjx16@GJXAIOU",[[1,2740,"四位能表示15"]],[2740,2740],[2747,2747]]],[1538383565767,["gjx16@GJXAIOU",[[1,2765,"、、"]],[2765,2765],[2767,2767]]],[1538383567103,["gjx16@GJXAIOU",[[-1,2765,"、、"]],[2767,2767],[2765,2765]]],[1538383568793,["gjx16@GJXAIOU",[[1,2765,"//"]],[2765,2765],[2767,2767]]],[1538383575660,["gjx16@GJXAIOU",[[1,2767,"yin"]],[2767,2767],[2770,2770]]],[1538383576790,["gjx16@GJXAIOU",[[-1,2767,"yin"]],[2770,2770],[2767,2767]]],[1538383586397,["gjx16@GJXAIOU",[[1,2767,"因为10"]],[2767,2767],[2771,2771]]],[1538383587307,["gjx16@GJXAIOU",[[-1,2770,"0"]],[2771,2771],[2770,2770]]],[1538383596408,["gjx16@GJXAIOU",[[1,2770,"6表示位"]],[2770,2770],[2774,2774]]],[1538383597627,["gjx16@GJXAIOU",[[-1,2773,"位"]],[2774,2774],[2773,2773]]],[1538383605052,["gjx16@GJXAIOU",[[1,2773,"为 1 --"]],[2773,2773],[2779,2779]]],[1538383605839,["gjx16@GJXAIOU",[[-1,2777,"--"]],[2779,2779],[2777,2777]]],[1538383634017,["gjx16@GJXAIOU",[[1,2777,"0000 ，可是定义的时候只给b四个字节，因此只能"]],[2777,2777],[2802,2802]]],[1538383643052,["gjx16@GJXAIOU",[[1,2802,"显示0000，记过"]],[2802,2802],[2811,2811]]],[1538383644042,["gjx16@GJXAIOU",[[-1,2809,"记过"]],[2811,2811],[2809,2809]]],[1538383649924,["gjx16@GJXAIOU",[[1,2809,"结果即为0；"]],[2809,2809],[2815,2815]]],[1538383689840,["gjx16@GJXAIOU",[[-1,2832,"     "]],[2825,2825],[2820,2820]]],[1538383690047,["gjx16@GJXAIOU",[[-1,2819,"\n"]],[2820,2820],[2819,2819]]],[1538383690495,["gjx16@GJXAIOU",[[-1,2818,"\n"]],[2819,2819],[2818,2818]]],[1538383690910,["gjx16@GJXAIOU",[[-1,2817,"\n"]],[2818,2818],[2817,2817]]],[1538383693557,["gjx16@GJXAIOU",[[-1,2832,"\n"]],[2830,2830],[2829,2829]]],[1538383697064,["gjx16@GJXAIOU",[[-1,2819,"          "]],[2829,2829],[2819,2819]]]],null,"gjx16@GJXAIOU"],["dd1146a5-4912-4e20-bb8f-8a82bbec0398",1538445102677,"# day11 复合类型\n\n\n## 一、结构体的定义和成员初始化\n\n```c\n#include<stdio.h>\n#include<string.h>      //这里需要使用strcpy函数\n\nstruct student\n{\n  char name[100];\n  int age;\n  int sex;\n};                   //说明了一个结构体的数据成员类型,注意这里有一个;\n\n\nint main()\n{\n\n\n//法一：先定义然后初始化\n\nstruct student st; //定义了一个结构体的变量（在栈中），名字叫做st\n\n//使用成员变量\n\nst.age = 20;\nst.sex = 0;\nstrcpy(st.name,\"zhangsan\");\nprintf(\"name = %s\\n\",st.name);\n\n\n\n//法二：在定义的同时初始化成员变量\n\nstruct stduent st = {\"zhangsan\",20,1};//这个必须按照顺序依次赋值\nstruct student st = {.age = 20,.name = \"zhangsan\",.sex = 0};//此方法允许自由变换成员变量的位置进行赋值\n\n//法三：通过用户赋值进行初始化\n\nscanf(\"%s\",&st.name);\nscanf(\"%d\",&st.age);\nscanf(\"%d\",&st.sex);\n\n}\n```\n\n---\n\n## 二、结构体成员内存对齐详解\n\n结构体在内存之中一定是一个矩形结构\n\n```c\n\n#include<stdio.h>\n\nstruct neicun\n{\n  int a;\n  char b;\n  char c;\n};\n\nint main()\n{\nstruct neicun duiqi;\nprintf(\"%d\\n\",sizeof(duiqi));  //按照定义中最长的那个对齐 \n}\n```\n\n程序的输出结果为：`8`\n![内存空间对齐1]($resource/%E5%86%85%E5%AD%98%E7%A9%BA%E9%97%B4%E5%AF%B9%E9%BD%901.png)\n\n**结构体中定义变量顺序改变之后**\n```c\n#include<stdio.h>\n\nstruct neicun\n{\n  char a;\n  int b;\n  char c;\n};\n\nint main()\n{\nstruct neicun duiqi;\nprintf(\"%d\\n\",sizeof(duiqi));  //按照定义中最长的那个对齐 \n}\n\n```\n\n程序运行结果：`12`\n\n![内存空间对齐2]($resource/%E5%86%85%E5%AD%98%E7%A9%BA%E9%97%B4%E5%AF%B9%E9%BD%902.png)\n\n**示例**\n\n```c\n#include<stdio.h>\n\nstruct C\n{\n  char a;  //1个字节\n  short b;//空一个字节，然后两个字节\n  char c;//一个字节\n  int d;//另起一行占四个字节\n  long long e;//另起一行占8个字节\n\n}\n\nint main()\n{\nprintf(\"%d\\n\",sizeof(struct C));\n}\n\n```\n\n程序运行结果为：`24`\n\n**示例**\n```c\n#include<stdio.h>\n\nstruct neicun\n{\n  char a;\n  short b;\n  int c;\n  short d;\n};\n\nint main()\n{\nstruct neicun duiqi;\nprintf(\"%d\\n\",sizeof(duiqi));  //按照定义中最长的那个对齐 \n}\n\n```\n程序的运行结果：`12`\n\n![内存空间3]($resource/%E5%86%85%E5%AD%98%E7%A9%BA%E9%97%B43.png)\n\n**实例二**\n```c\n#include<stdio.h>\n\nstruct neicun\n{\n  char array[10];\n  char b;\n  char c;\n  char d;\n  char e;\n  \n};\n\nint main()\n{\n  struct neicun duiqi;\n  printf(\"%d\\n\",sizeof(duiqi));  //按照定义中最长的那个对齐 \n}\n```\n程序输出结果为：`14`  ,不会将整个数组当成一个整体，只是10个char型的数据，所以最大的长度仍然为char\n\n**示例三**\n```c\n\n#include<stdio.h>\n\nstruct neicun\n{\n  int array[10];\n  char b;\n  char c;\n  char d;\n  char e;\n  char f;\n  \n};\n\nint main()\n{\n  struct neicun duiqi;\n  printf(\"%d\\n\",sizeof(duiqi));  //按照定义中最长的那个对齐 \n}\n\n```\n程序输出结果为：`48`\n因为数组中为10个int型数据，所以整个结构体中最大的字节长度为int,所以全部按照int 对齐；\n\n---\n\n## 三、结构体成员的位字段\n\n**例子程序**\n```c\n\n#include<stdio.h>\n\nstruct  D\n{\n  char  a  :  2;  //定义一个成员类型为char  ,但是这个成员只使用2个bit\n  unsigned  char  b  :  4;\n};\n\nint  main()\n{\n  struct  D  lizi;\n  printf(\"sizeof(lizi)  =  %d\\n\",sizeof(lizi));\n  lizi.a  =  3;\n  printf(\"a  =  %d\\n\",lizi.a);\n  lizi.b  =  15;\n  printf(\"b  =  %d\\n\",lizi.b);\n  lizi.b  =  16;\n  printf(\"b xiugaihou  =  %d\\n\",lizi.b);\n\n  return  0;\n}\n\n```\n程序的输出结果为：\n`sizeof(lizi) = 1`//因为内存中最小为一个字节，所以变量lizi还是占一个字节(8位)\n`a = -1`//以为2用二进制表示为11，而第一个1代表符号，因此结果为-1\n`b = 15`//四位能表示15\n`b xiugaihou = 0`//因为16表示为 1 0000 ，可是定义的时候只给b四个字节，因此只能显示0000，结果即为0；\n\n  \n\n\n## 四、结构体数组的定义和使用\n\n## 五、结构嵌套以及结构和指针\n\n\n",[[1538445065280,["gjx16@GJXAIOU",[[1,2242,"一般用于嵌入式系统中的状态控制"]],[2242,2242],[2257,2257]]],[1538445065857,["gjx16@GJXAIOU",[[1,2258,"\n"]],[2257,2257],[2258,2258]]],[1538445214105,["gjx16@GJXAIOU",[[1,15,"\n"]],[12,12],[13,13]]],[1538445216608,["gjx16@GJXAIOU",[[1,13,"！"]],[13,13],[14,14]]],[1538445217657,["gjx16@GJXAIOU",[[-1,13,"！"]],[14,14],[13,13]]],[1538445219537,["gjx16@GJXAIOU",[[1,13,"@"]],[13,13],[14,14]]],[1538445224361,["gjx16@GJXAIOU",[[1,14,"toc"]],[14,14],[17,17]]],[1538445335678,["gjx16@GJXAIOU",[[1,2387,"  "]],[2387,2387],[2389,2389]]],[1538445336270,["gjx16@GJXAIOU",[[1,2390,"  \n"]],[2389,2389],[2392,2392]]],[1538445341180,["gjx16@GJXAIOU",[[1,2392,"//a"]],[2392,2392],[2395,2395]]],[1538445354004,["gjx16@GJXAIOU",[[1,2395,"和b在内存中是连续的额"]],[2395,2395],[2406,2406]]],[1538445354853,["gjx16@GJXAIOU",[[-1,2405,"额"]],[2406,2406],[2405,2405]]],[1538445356452,["gjx16@GJXAIOU",[[1,2405,"地址"]],[2405,2405],[2407,2407]]],[1538445408994,["gjx16@GJXAIOU",[[1,2858,"\n"]],[2856,2856],[2857,2857]]],[1538445409158,["gjx16@GJXAIOU",[[1,2859,"\n"]],[2857,2857],[2858,2858]]],[1538445414058,["gjx16@GJXAIOU",[[1,2858,"****"]],[2858,2858],[2860,2860]]],[1538445445746,["gjx16@GJXAIOU",[[1,2860,"利用空闲的字节"]],[2860,2860],[2867,2867]]],[1538445447770,["gjx16@GJXAIOU",[[1,2871,"\n"]],[2869,2869],[2870,2870]]],[1538445447967,["gjx16@GJXAIOU",[[1,2872,"\n"]],[2870,2870],[2871,2871]]],[1538445449315,["gjx16@GJXAIOU",[[1,2871,"```"]],[2871,2871],[2874,2874]]],[1538445449344,["gjx16@GJXAIOU",[[1,2874,"language\n```\n"]],[2874,2874],[2874,2882]]],[1538445450631,["gjx16@GJXAIOU",[[-1,2874,"language"],[1,2882,"c"]],[2874,2882],[2875,2875]]],[1538445450846,["gjx16@GJXAIOU",[[1,2876,"\n"]],[2875,2875],[2876,2876]]],[1538445451036,["gjx16@GJXAIOU",[[1,2877,"\n"]],[2876,2876],[2877,2877]]],[1538445456419,["gjx16@GJXAIOU",[[1,2877,"3#"]],[2877,2877],[2879,2879]]],[1538445458516,["gjx16@GJXAIOU",[[-1,2877,"3#"]],[2879,2879],[2877,2877]]],[1538445460426,["gjx16@GJXAIOU",[[1,2877,"#"]],[2877,2877],[2878,2878]]],[1538445465724,["gjx16@GJXAIOU",[[1,2878,"include<>"]],[2878,2878],[2887,2887]]],[1538445472162,["gjx16@GJXAIOU",[[1,2886,"stdio.h"]],[2886,2886],[2893,2893]]],[1538445475050,["gjx16@GJXAIOU",[[1,2895,"\n"]],[2894,2894],[2895,2895]]],[1538445476242,["gjx16@GJXAIOU",[[1,2896,"\n"]],[2895,2895],[2896,2896]]],[1538445480662,["gjx16@GJXAIOU",[[1,2896,"int main()"]],[2896,2896],[2906,2906]]],[1538445481888,["gjx16@GJXAIOU",[[1,2907,"\n"]],[2906,2906],[2907,2907]]],[1538445483431,["gjx16@GJXAIOU",[[1,2907,"}|"]],[2907,2907],[2909,2909]]],[1538445484330,["gjx16@GJXAIOU",[[-1,2907,"}|"]],[2909,2909],[2907,2907]]],[1538445487010,["gjx16@GJXAIOU",[[1,2907,"{}"]],[2907,2907],[2909,2909]]],[1538445488620,["gjx16@GJXAIOU",[[1,2908,"\n"]],[2908,2908],[2909,2909]]],[1538445489514,["gjx16@GJXAIOU",[[1,2909,"\n"]],[2909,2909],[2910,2910]]],[1538445489645,["gjx16@GJXAIOU",[[1,2910,"\n"]],[2910,2910],[2911,2911]]],[1538445494076,["gjx16@GJXAIOU",[[1,2909,"s"]],[2909,2909],[2910,2910]]],[1538445495466,["gjx16@GJXAIOU",[[-1,2909,"s"]],[2910,2910],[2909,2909]]],[1538445497584,["gjx16@GJXAIOU",[[1,2909,"  sr"]],[2909,2909],[2913,2913]]],[1538445498497,["gjx16@GJXAIOU",[[-1,2912,"r"]],[2913,2913],[2912,2912]]],[1538445501660,["gjx16@GJXAIOU",[[1,2912,"trucu"]],[2912,2912],[2917,2917]]],[1538445502338,["gjx16@GJXAIOU",[[-1,2916,"u"]],[2917,2917],[2916,2916]]],[1538445505651,["gjx16@GJXAIOU",[[1,2916,"t "]],[2916,2916],[2918,2918]]],[1538445509015,["gjx16@GJXAIOU",[[1,2896,"\n"]],[2895,2895],[2896,2896]]],[1538445520846,["gjx16@GJXAIOU",[[1,2896,"struct kong"]],[2896,2896],[2907,2907]]],[1538445522195,["gjx16@GJXAIOU",[[1,2907,"x"]],[2907,2907],[2908,2908]]],[1538445524366,["gjx16@GJXAIOU",[[-1,2903,"kongx"]],[2908,2908],[2903,2903]]],[1538445528237,["gjx16@GJXAIOU",[[1,2903,"kongxian"]],[2903,2903],[2911,2911]]],[1538445531213,["gjx16@GJXAIOU",[[-1,2903,"kongxian"]],[2911,2911],[2903,2903]]],[1538445532587,["gjx16@GJXAIOU",[[1,2903,"A"]],[2903,2903],[2904,2904]]],[1538445535977,["gjx16@GJXAIOU",[[1,2905,"\n"]],[2904,2904],[2905,2905]]],[1538445537560,["gjx16@GJXAIOU",[[1,2905,"{}"]],[2905,2905],[2907,2907]]],[1538445539187,["gjx16@GJXAIOU",[[1,2906,"\n"]],[2906,2906],[2907,2907]]],[1538445539395,["gjx16@GJXAIOU",[[1,2907,"\n"]],[2907,2907],[2908,2908]]],[1538445539581,["gjx16@GJXAIOU",[[1,2908,"\n"]],[2908,2908],[2909,2909]]],[1538445541654,["gjx16@GJXAIOU",[[1,2911,"\n"]],[2911,2911],[2912,2912]]],[1538445548770,["gjx16@GJXAIOU",[[1,2907,"  char a;"]],[2907,2907],[2916,2916]]],[1538445549306,["gjx16@GJXAIOU",[[1,2917,"  \n"]],[2916,2916],[2919,2919]]],[1538445554288,["gjx16@GJXAIOU",[[1,2919,"int b;"]],[2919,2919],[2925,2925]]],[1538445558194,["gjx16@GJXAIOU",[[1,2952," "]],[2951,2951],[2952,2952]]],[1538445560029,["gjx16@GJXAIOU",[[1,2952,"A"]],[2952,2952],[2953,2953]]],[1538445560886,["gjx16@GJXAIOU",[[1,2954," "]],[2953,2953],[2954,2954]]],[1538445561970,["gjx16@GJXAIOU",[[1,2954,"s"]],[2954,2954],[2955,2955]]],[1538445562680,["gjx16@GJXAIOU",[[-1,2954,"s"]],[2955,2955],[2954,2954]]],[1538445566578,["gjx16@GJXAIOU",[[1,2954,"kongxian;"]],[2954,2954],[2963,2963]]],[1538445575939,["gjx16@GJXAIOU",[[-1,2962,";"]],[2963,2963],[2962,2962]]],[1538445576535,["gjx16@GJXAIOU",[[1,2963," "]],[2962,2962],[2963,2963]]],[1538445578144,["gjx16@GJXAIOU",[[1,2963,"="]],[2963,2963],[2964,2964]]],[1538445578708,["gjx16@GJXAIOU",[[1,2965," "]],[2964,2964],[2965,2965]]],[1538445580763,["gjx16@GJXAIOU",[[1,2965,"{};"]],[2965,2965],[2968,2968]]],[1538445586078,["gjx16@GJXAIOU",[[1,2966,"1,2"]],[2966,2966],[2969,2969]]],[1538445593595,["gjx16@GJXAIOU",[[1,2971,"\n  i"]],[2971,2971],[2975,2975]]],[1538445594214,["gjx16@GJXAIOU",[[-1,2974,"i"]],[2975,2975],[2974,2974]]],[1538445595402,["gjx16@GJXAIOU",[[1,2974,"ca"]],[2974,2974],[2976,2976]]],[1538445595956,["gjx16@GJXAIOU",[[-1,2975,"a"]],[2976,2976],[2975,2975]]],[1538445597472,["gjx16@GJXAIOU",[[1,2975,"hat"]],[2975,2975],[2978,2978]]],[1538445598254,["gjx16@GJXAIOU",[[-1,2977,"t"]],[2978,2978],[2977,2977]]],[1538445598596,["gjx16@GJXAIOU",[[1,2977,"r"]],[2977,2977],[2978,2978]]],[1538445601923,["gjx16@GJXAIOU",[[1,2979," "]],[2978,2978],[2979,2979]]],[1538445610212,["gjx16@GJXAIOU",[[1,2979,"*p"]],[2979,2979],[2981,2981]]],[1538445610746,["gjx16@GJXAIOU",[[1,2982," "]],[2981,2981],[2982,2982]]],[1538445611975,["gjx16@GJXAIOU",[[1,2982,"="]],[2982,2982],[2983,2983]]],[1538445612185,["gjx16@GJXAIOU",[[1,2984," "]],[2983,2983],[2984,2984]]],[1538445632154,["gjx16@GJXAIOU",[[1,2984,"&kongxian;\n  p++;\n  *-"]],[2984,2984],[3006,3006]]],[1538445633049,["gjx16@GJXAIOU",[[-1,3005,"-"]],[3006,3006],[3005,3005]]],[1538445635390,["gjx16@GJXAIOU",[[1,3005,"p"]],[3005,3005],[3006,3006]]],[1538445635930,["gjx16@GJXAIOU",[[1,3007," "]],[3006,3006],[3007,3007]]],[1538445637168,["gjx16@GJXAIOU",[[1,3007,"="]],[3007,3007],[3008,3008]]],[1538445637416,["gjx16@GJXAIOU",[[1,3009," "]],[3008,3008],[3009,3009]]],[1538445641350,["gjx16@GJXAIOU",[[1,3009,"3"]],[3009,3009],[3010,3010]]],[1538445651460,["gjx16@GJXAIOU",[[1,3010,";\n  p++;\n  *p"]],[3010,3010],[3023,3023]]],[1538445652653,["gjx16@GJXAIOU",[[1,3024," "]],[3023,3023],[3024,3024]]],[1538445653629,["gjx16@GJXAIOU",[[1,3024,"="]],[3024,3024],[3025,3025]]],[1538445653862,["gjx16@GJXAIOU",[[1,3026," "]],[3025,3025],[3026,3026]]],[1538445655845,["gjx16@GJXAIOU",[[1,3026,"4;"]],[3026,3026],[3028,3028]]],[1538445666447,["gjx16@GJXAIOU",[[1,3030,"  rer"]],[3030,3030],[3035,3035]]],[1538445667668,["gjx16@GJXAIOU",[[-1,3034,"r"]],[3035,3035],[3034,3034]]],[1538445671706,["gjx16@GJXAIOU",[[1,3034,"turn 0;"]],[3034,3034],[3041,3041]]],[1538445676678,["gjx16@GJXAIOU",[[1,3032,"\n  "]],[3029,3029],[3032,3032]]],[1538445687279,["gjx16@GJXAIOU",[[1,3032,"printf();"]],[3032,3032],[3041,3041]]],[1538445692325,["gjx16@GJXAIOU",[[1,3039,"\"\""]],[3039,3039],[3041,3041]]],[1538445695990,["gjx16@GJXAIOU",[[1,3056,"%"]],[3056,3056],[3057,3057]]],[1538445698037,["gjx16@GJXAIOU",[[-1,3056,"%"]],[3057,3057],[3056,3056]]],[1538445706055,["gjx16@GJXAIOU",[[1,3040,"%d\\n"]],[3040,3040],[3044,3044]]],[1538445714948,["gjx16@GJXAIOU",[[1,3045,",&kongxian"]],[3045,3045],[3055,3055]]],[1538445720197,["gjx16@GJXAIOU",[[-1,2926,"\n"]],[2926,2926],[2925,2925]]],[1538445726882,["gjx16@GJXAIOU",[[1,2927,";"]],[2927,2927],[2928,2928]]],[1538446124204,["gjx16@GJXAIOU",[[1,3076,"keyi"]],[3076,3076],[3080,3080]]],[1538446125368,["gjx16@GJXAIOU",[[-1,3076,"keyi"]],[3080,3080],[3076,3076]]],[1538446139645,["gjx16@GJXAIOU",[[1,3076,"可以通过程序运行的"]],[3076,3076],[3085,3085]]],[1538446141794,["gjx16@GJXAIOU",[[-1,3084,"的"]],[3085,3085],[3084,3084]]],[1538446158907,["gjx16@GJXAIOU",[[1,3084,"输出的地址查找变量的位置，"]],[3084,3084],[3097,3097]]],[1538446191651,["gjx16@GJXAIOU",[[1,3097,"，"]],[3097,3097],[3098,3098]]],[1538446194767,["gjx16@GJXAIOU",[[-1,3097,"，"]],[3098,3098],[3097,3097]]],[1538446215047,["gjx16@GJXAIOU",[[1,3097,"通过位置查找出内存中变量的具体指"]],[3097,3097],[3113,3113]]],[1538446215731,["gjx16@GJXAIOU",[[-1,3112,"指"]],[3113,3113],[3112,3112]]],[1538446241241,["gjx16@GJXAIOU",[[1,3112,"值，可以看出3和4十载1"]],[3112,3112],[3124,3124]]],[1538446243530,["gjx16@GJXAIOU",[[1,3124,"和2"]],[3124,3124],[3126,3126]]],[1538446246836,["gjx16@GJXAIOU",[[-1,3121,"十载"]],[3123,3123],[3121,3121]]],[1538446250674,["gjx16@GJXAIOU",[[1,3121,"是在"]],[3121,3121],[3123,3123]]],[1538446257675,["gjx16@GJXAIOU",[[1,3126,"的后面的；"]],[3126,3126],[3131,3131]]],[1538446261446,["gjx16@GJXAIOU",[[-1,3133,"  "]],[3135,3135],[3133,3133]]],[1538446261814,["gjx16@GJXAIOU",[[-1,3135,"\n"]],[3133,3133],[3132,3132]]],[1538446262968,["gjx16@GJXAIOU",[[1,3135,"\n"]],[3132,3132],[3133,3133]]],[1538446264038,["gjx16@GJXAIOU",[[1,3133,"---"]],[3133,3133],[3136,3136]]],[1538446270916,["gjx16@GJXAIOU",[[-1,2226,"\n"]],[2227,2227],[2226,2226]]],[1538446272585,["gjx16@GJXAIOU",[[-1,2225,"\n"]],[2226,2226],[2225,2225]]],[1538446273938,["gjx16@GJXAIOU",[[1,2225,"\n"]],[2225,2225],[2226,2226]]],[1538446274324,["gjx16@GJXAIOU",[[1,2226,"\n"]],[2226,2226],[2227,2227]]],[1538446275648,["gjx16@GJXAIOU",[[1,2227,"\n"]],[2227,2227],[2228,2228]]],[1538446284342,["gjx16@GJXAIOU",[[1,3158,"\n"]],[3156,3156],[3157,3157]]],[1538446284512,["gjx16@GJXAIOU",[[1,3159,"\n"]],[3157,3157],[3158,3158]]],[1538446649867,["gjx16@GJXAIOU",[[1,3160,"\n"]],[3157,3157],[3158,3158]]],[1538446651382,["gjx16@GJXAIOU",[[1,3158,"****"]],[3158,3158],[3160,3160]]],[1538446657751,["gjx16@GJXAIOU",[[1,3160,"例子程序"]],[3160,3160],[3164,3164]]],[1538446931088,["gjx16@GJXAIOU",[[1,3169,"\n"]],[3166,3166],[3167,3167]]],[1538446936126,["gjx16@GJXAIOU",[[1,3167,"```"]],[3167,3167],[3170,3170]]],[1538446936155,["gjx16@GJXAIOU",[[1,3170,"language\n```\n"]],[3170,3170],[3170,3178]]],[1538446937927,["gjx16@GJXAIOU",[[-1,3170,"language"],[1,3178,"c"]],[3170,3178],[3171,3171]]],[1538446938197,["gjx16@GJXAIOU",[[1,3172,"\n"]],[3171,3171],[3172,3172]]],[1538446939839,["gjx16@GJXAIOU",[[1,3172,"3"]],[3172,3172],[3173,3173]]],[1538446941387,["gjx16@GJXAIOU",[[-1,3172,"3"]],[3173,3173],[3172,3172]]],[1538446947487,["gjx16@GJXAIOU",[[1,3172,"#include<>"]],[3172,3172],[3182,3182]]],[1538446950666,["gjx16@GJXAIOU",[[1,3181,"stdo"]],[3181,3181],[3185,3185]]],[1538446951424,["gjx16@GJXAIOU",[[-1,3184,"o"]],[3185,3185],[3184,3184]]],[1538446953948,["gjx16@GJXAIOU",[[1,3184,"io.h"]],[3184,3184],[3188,3188]]],[1538446955863,["gjx16@GJXAIOU",[[1,3190,"\n"]],[3189,3189],[3190,3190]]],[1538446956655,["gjx16@GJXAIOU",[[1,3191,"\n"]],[3190,3190],[3191,3191]]],[1538446956899,["gjx16@GJXAIOU",[[1,3192,"\n"]],[3191,3191],[3192,3192]]],[1538446960766,["gjx16@GJXAIOU",[[1,3192,"int main(("]],[3192,3192],[3202,3202]]],[1538446961419,["gjx16@GJXAIOU",[[-1,3201,"("]],[3202,3202],[3201,3201]]],[1538446962385,["gjx16@GJXAIOU",[[1,3201,")"]],[3201,3201],[3202,3202]]],[1538446963176,["gjx16@GJXAIOU",[[1,3203,"\n"]],[3202,3202],[3203,3203]]],[1538446964885,["gjx16@GJXAIOU",[[1,3203,"{}"]],[3203,3203],[3205,3205]]],[1538446966165,["gjx16@GJXAIOU",[[1,3204,"\n"]],[3204,3204],[3205,3205]]],[1538446966365,["gjx16@GJXAIOU",[[1,3205,"\n"]],[3205,3205],[3206,3206]]],[1538446967086,["gjx16@GJXAIOU",[[1,3206,"\n"]],[3206,3206],[3207,3207]]],[1538446983010,["gjx16@GJXAIOU",[[1,3205,"  int"]],[3205,3205],[3210,3210]]],[1538446984633,["gjx16@GJXAIOU",[[-1,3207,"int"]],[3210,3210],[3207,3207]]],[1538446992874,["gjx16@GJXAIOU",[[1,3192,"\n"]],[3190,3190],[3191,3191]]],[1538447004506,["gjx16@GJXAIOU",[[1,3191,"struct B ;"]],[3191,3191],[3201,3201]]],[1538447005603,["gjx16@GJXAIOU",[[1,3203,"\n"]],[3201,3201],[3202,3202]]],[1538447011095,["gjx16@GJXAIOU",[[1,3202,"{};"]],[3202,3202],[3205,3205]]],[1538447013353,["gjx16@GJXAIOU",[[1,3203,"\n"]],[3203,3203],[3204,3204]]],[1538447013575,["gjx16@GJXAIOU",[[1,3204,"\n"]],[3204,3204],[3205,3205]]],[1538447021562,["gjx16@GJXAIOU",[[1,3204,"  char"]],[3204,3204],[3210,3210]]],[1538447024607,["gjx16@GJXAIOU",[[1,3210," age;"]],[3210,3210],[3215,3215]]],[1538447025160,["gjx16@GJXAIOU",[[1,3216,"  \n"]],[3215,3215],[3218,3218]]],[1538447026653,["gjx16@GJXAIOU",[[1,3218,"char"]],[3218,3218],[3222,3222]]],[1538447028758,["gjx16@GJXAIOU",[[-1,3216,"  char"]],[3222,3222],[3216,3216]]],[1538447029101,["gjx16@GJXAIOU",[[-1,3216,"\n"]],[3216,3216],[3215,3215]]],[1538447030196,["gjx16@GJXAIOU",[[-1,3211,"age;"]],[3215,3215],[3211,3211]]],[1538447032108,["gjx16@GJXAIOU",[[1,3211,"name;"]],[3211,3211],[3216,3216]]],[1538447032587,["gjx16@GJXAIOU",[[1,3217,"  \n"]],[3216,3216],[3219,3219]]],[1538447033988,["gjx16@GJXAIOU",[[1,3219,"cha"]],[3219,3219],[3222,3222]]],[1538447034704,["gjx16@GJXAIOU",[[-1,3219,"cha"]],[3222,3222],[3219,3219]]],[1538447036376,["gjx16@GJXAIOU",[[1,3219,"undi"]],[3219,3219],[3223,3223]]],[1538447037394,["gjx16@GJXAIOU",[[-1,3221,"di"]],[3223,3223],[3221,3221]]],[1538447049949,["gjx16@GJXAIOU",[[1,3221,"signed char age;"]],[3221,3221],[3237,3237]]],[1538447050452,["gjx16@GJXAIOU",[[1,3238,"  \n"]],[3237,3237],[3240,3240]]],[1538447052202,["gjx16@GJXAIOU",[[1,3240,"und"]],[3240,3240],[3243,3243]]],[1538447053298,["gjx16@GJXAIOU",[[-1,3242,"d"]],[3243,3243],[3242,3242]]],[1538447063135,["gjx16@GJXAIOU",[[1,3242,"signed char so"]],[3242,3242],[3256,3256]]],[1538447064842,["gjx16@GJXAIOU",[[-1,3255,"o"]],[3256,3256],[3255,3255]]],[1538447066725,["gjx16@GJXAIOU",[[1,3255,"code"]],[3255,3255],[3259,3259]]],[1538447067600,["gjx16@GJXAIOU",[[-1,3257,"de"]],[3259,3259],[3257,3257]]],[1538447069600,["gjx16@GJXAIOU",[[1,3257,"re;"]],[3257,3257],[3260,3260]]],[1538447070119,["gjx16@GJXAIOU",[[1,3261,"  \n"]],[3260,3260],[3263,3263]]],[1538447077810,["gjx16@GJXAIOU",[[1,3263,"cha"]],[3263,3263],[3266,3266]]],[1538447081051,["gjx16@GJXAIOU",[[-1,3263,"cha"]],[3266,3266],[3263,3263]]],[1538447082199,["gjx16@GJXAIOU",[[-1,3261,"  "]],[3263,3263],[3261,3261]]],[1538447082633,["gjx16@GJXAIOU",[[-1,3261,"\n"]],[3261,3261],[3260,3260]]],[1538447090462,["gjx16@GJXAIOU",[[1,3215,"[]"]],[3215,3215],[3217,3217]]],[1538447093214,["gjx16@GJXAIOU",[[1,3216,"6"]],[3216,3216],[3217,3217]]],[1538447103207,["gjx16@GJXAIOU",[[-1,3216,"6"]],[3217,3217],[3216,3216]]],[1538447106866,["gjx16@GJXAIOU",[[1,3216,"100"]],[3216,3216],[3219,3219]]],[1538447131785,["gjx16@GJXAIOU",[[1,3285,"struct B jiegouti s"]],[3285,3285],[3304,3304]]],[1538447132383,["gjx16@GJXAIOU",[[-1,3302," s"]],[3304,3304],[3302,3302]]],[1538447135216,["gjx16@GJXAIOU",[[1,3302,"shuzu;"]],[3302,3302],[3308,3308]]],[1538447141054,["gjx16@GJXAIOU",[[-1,3307,";"]],[3308,3308],[3307,3307]]],[1538447145417,["gjx16@GJXAIOU",[[1,3307,"[5];"]],[3307,3307],[3311,3311]]],[1538447150104,["gjx16@GJXAIOU",[[-1,3310,";"]],[3311,3311],[3310,3310]]],[1538447161731,["gjx16@GJXAIOU",[[1,3310," = {};"]],[3310,3310],[3316,3316]]],[1538447164621,["gjx16@GJXAIOU",[[1,3314,"{"]],[3314,3314],[3315,3315]]],[1538447164873,["gjx16@GJXAIOU",[[1,3316,"}"]],[3315,3315],[3316,3316]]],[1538447168807,["gjx16@GJXAIOU",[[1,3316,",{"]],[3316,3316],[3318,3318]]],[1538447169044,["gjx16@GJXAIOU",[[1,3319,"}"]],[3318,3318],[3319,3319]]],[1538447170495,["gjx16@GJXAIOU",[[1,3319,",{"]],[3319,3319],[3321,3321]]],[1538447170776,["gjx16@GJXAIOU",[[1,3322,"}"]],[3321,3321],[3322,3322]]],[1538447172057,["gjx16@GJXAIOU",[[1,3322,",{"]],[3322,3322],[3324,3324]]],[1538447172382,["gjx16@GJXAIOU",[[1,3325,"}"]],[3324,3324],[3325,3325]]],[1538447173655,["gjx16@GJXAIOU",[[1,3325,",{"]],[3325,3325],[3327,3327]]],[1538447173940,["gjx16@GJXAIOU",[[1,3328,"}"]],[3327,3327],[3328,3328]]],[1538447179785,["gjx16@GJXAIOU",[[1,3315,"\"\""]],[3315,3315],[3317,3317]]],[1538447184642,["gjx16@GJXAIOU",[[1,3316,"zhangsan"]],[3316,3316],[3324,3324]]],[1538447196377,["gjx16@GJXAIOU",[[1,3325,",12,90"]],[3325,3325],[3331,3331]]],[1538447204374,["gjx16@GJXAIOU",[[1,3334,"\"\""]],[3334,3334],[3336,3336]]],[1538447207822,["gjx16@GJXAIOU",[[1,3335,";i"]],[3335,3335],[3337,3337]]],[1538447209494,["gjx16@GJXAIOU",[[-1,3335,";i"]],[3337,3337],[3335,3335]]],[1538447212569,["gjx16@GJXAIOU",[[1,3335,"lisi"]],[3335,3335],[3339,3339]]],[1538447220943,["gjx16@GJXAIOU",[[1,3340,",34,98"]],[3340,3340],[3346,3346]]],[1538447238944,["gjx16@GJXAIOU",[[1,3349,"\"\""]],[3349,3349],[3351,3351]]],[1538447246193,["gjx16@GJXAIOU",[[1,3350,"wangwu"]],[3350,3350],[3356,3356]]],[1538447254810,["gjx16@GJXAIOU",[[1,3357,",23,94"]],[3357,3357],[3363,3363]]],[1538447260016,["gjx16@GJXAIOU",[[1,3366,"::"]],[3366,3366],[3368,3368]]],[1538447260936,["gjx16@GJXAIOU",[[-1,3366,"::"]],[3368,3368],[3366,3366]]],[1538447262086,["gjx16@GJXAIOU",[[1,3366,"\"\""]],[3366,3366],[3368,3368]]],[1538447267438,["gjx16@GJXAIOU",[[1,3367,"zhaoliu"]],[3367,3367],[3374,3374]]],[1538447284858,["gjx16@GJXAIOU",[[1,3375,",34,99"]],[3375,3375],[3381,3381]]],[1538447290786,["gjx16@GJXAIOU",[[1,3384,"\"\""]],[3384,3384],[3386,3386]]],[1538447301448,["gjx16@GJXAIOU",[[1,3385,"zhouqi"]],[3385,3385],[3391,3391]]],[1538447308106,["gjx16@GJXAIOU",[[1,3392,",5"]],[3392,3392],[3394,3394]]],[1538447309007,["gjx16@GJXAIOU",[[-1,3393,"5"]],[3394,3394],[3393,3393]]],[1538447314936,["gjx16@GJXAIOU",[[1,3393,"98,100"]],[3393,3393],[3399,3399]]],[1538447318039,["gjx16@GJXAIOU",[[1,3403,"  \n"]],[3402,3402],[3405,3405]]],[1538447321464,["gjx16@GJXAIOU",[[1,3405,"i"]],[3405,3405],[3406,3406]]],[1538447322692,["gjx16@GJXAIOU",[[1,3407,"t i;"]],[3407,3407],[3411,3411]]],[1538447323134,["gjx16@GJXAIOU",[[1,3412,"  \n"]],[3411,3411],[3414,3414]]],[1538447326952,["gjx16@GJXAIOU",[[1,3414,"for()"]],[3414,3414],[3419,3419]]],[1538447344683,["gjx16@GJXAIOU",[[1,3418,"i = 0;i < 5;i++"]],[3418,3418],[3433,3433]]],[1538447347008,["gjx16@GJXAIOU",[[1,3435,"  \n"]],[3434,3434],[3437,3437]]],[1538447348604,["gjx16@GJXAIOU",[[1,3437,"{}"]],[3437,3437],[3439,3439]]],[1538447350023,["gjx16@GJXAIOU",[[1,3438,"\n  \n  "]],[3438,3438],[3444,3444]]],[1538447357305,["gjx16@GJXAIOU",[[1,3441,"  printf();"]],[3441,3441],[3452,3452]]],[1538447360560,["gjx16@GJXAIOU",[[1,3450,"\"\""]],[3450,3450],[3452,3452]]],[1538447381651,["gjx16@GJXAIOU",[[1,3451,"xingming = %d,ni"]],[3451,3451],[3467,3467]]],[1538447441724,[null,[[-1,3406,"\n"],[1,3407,"n"],[1,3474,"\n"]],[3406,3406],[3475,3475]]],[1538447441724,[null,[[1,3406,"\n"],[-1,3406,"n"],[-1,3474,"\n"]],[3475,3475],[3406,3406]]],[1538447391739,["gjx16@GJXAIOU",[[1,3467,"anling = %d,fenhsu"]],[3467,3467],[3485,3485]]],[1538447393628,["gjx16@GJXAIOU",[[-1,3482,"hsu"]],[3485,3485],[3482,3482]]],[1538447401972,["gjx16@GJXAIOU",[[1,3482,"gshu = %d\\n"]],[3482,3482],[3493,3493]]],[1538447417315,["gjx16@GJXAIOU",[[1,3494,",jiegout"]],[3494,3494],[3502,3502]]],[1538447418353,["gjx16@GJXAIOU",[[-1,3501,"t"]],[3502,3502],[3501,3501]]],[1538447421198,["gjx16@GJXAIOU",[[1,3501,"tidhuzu"]],[3501,3501],[3508,3508]]],[1538447423205,["gjx16@GJXAIOU",[[-1,3503,"dhuzu"]],[3508,3508],[3503,3503]]],[1538447425994,["gjx16@GJXAIOU",[[1,3503,"shuzu,"]],[3503,3503],[3509,3509]]],[1538447426816,["gjx16@GJXAIOU",[[-1,3508,","]],[3509,3509],[3508,3508]]],[1538447435460,["gjx16@GJXAIOU",[[1,3508,".name,jiegoutishuzu."]],[3508,3508],[3528,3528]]],[1538447436430,["gjx16@GJXAIOU",[[-1,3527,"."]],[3528,3528],[3527,3527]]],[1538447437870,["gjx16@GJXAIOU",[[1,3527,"."]],[3527,3527],[3528,3528]]],[1538447474091,[null,[[-1,3406,"\n"],[1,3407,"n"],[1,3534,"\n"]],[3406,3406],[3535,3535]]],[1538447474091,[null,[[1,3406,"\n"],[-1,3406,"n"],[-1,3534,"\n"]],[3535,3535],[3406,3406]]],[1538447446741,["gjx16@GJXAIOU",[[1,3528,"age,jiefou"]],[3528,3528],[3538,3538]]],[1538447447745,["gjx16@GJXAIOU",[[-1,3535,"fou"]],[3538,3538],[3535,3535]]],[1538447457758,["gjx16@GJXAIOU",[[1,3535,"goutishuzu.score"]],[3535,3535],[3551,3551]]],[1538447467936,["gjx16@GJXAIOU",[[1,3558,"  returnl"]],[3558,3558],[3567,3567]]],[1538447468746,["gjx16@GJXAIOU",[[-1,3566,"l"]],[3567,3567],[3566,3566]]],[1538447469869,["gjx16@GJXAIOU",[[1,3566,"0;"]],[3566,3566],[3568,3568]]],[1538447472254,["gjx16@GJXAIOU",[[1,3566," "]],[3566,3566],[3567,3567]]],[1538447714105,[null,[[-1,3406,"\n"],[1,3407,"n"],[1,3569,"\n"]],[3406,3406],[3570,3570]]],[1538447714105,[null,[[1,3406,"\n"],[-1,3406,"n"],[-1,3569,"\n"]],[3570,3570],[3406,3406]]],[1538447692724,["gjx16@GJXAIOU",[[-1,3198,"B ;"],[1,3201," B\n"],[1,3204,"\n"],[1,3210," "],[1,3221,"\n"],[1,3233," "],[1,3237," "],[1,3242,"\n"],[1,3254," "],[1,3258," "],[1,3265,"\n"],[1,3274," "],[1,3280,"\n"],[1,3283,"\n"],[1,3291," "],[1,3294," "],[1,3311," "],[1,3312," "],[1,3403,"\n"],[1,3409," "],[1,3411,"\n"],[1,3420," "],[1,3421," "],[1,3425," "],[1,3428," "],[1,3435,"\n"],[-1,3439,"  "],[1,3441,"\n"],[1,3460," "],[1,3461," "],[-1,3463,"d"],[1,3464,"s"],[1,3473," "],[1,3476," "],[1,3487," "],[1,3488," "],[1,3508,"[i]"],[1,3527,"[i]"],[1,3545,"[i]"],[1,3553,"\n"],[1,3558,"\n"],[1,3567," "],[1,3569,"\n"]],[3172,3571],[3613,3613]]],[1538447695304,["gjx16@GJXAIOU",[[-1,3204,"\n"]],[3204,3204],[3203,3203]]],[1538447696763,["gjx16@GJXAIOU",[[-1,3201,"\n"]],[3201,3201],[3200,3200]]],[1538447697696,["gjx16@GJXAIOU",[[-1,3224," "]],[3225,3225],[3224,3224]]],[1538447699672,["gjx16@GJXAIOU",[[1,3224," "]],[3224,3224],[3225,3225]]],[1538447702338,["gjx16@GJXAIOU",[[-1,3222,"\n"]],[3222,3222],[3221,3221]]],[1538447703222,["gjx16@GJXAIOU",[[-1,3245,"\n"]],[3245,3245],[3244,3244]]],[1538447703877,["gjx16@GJXAIOU",[[-1,3270,"\n"]],[3270,3270],[3269,3269]]],[1538447704916,["gjx16@GJXAIOU",[[-1,3286,"\n"]],[3286,3286],[3285,3285]]],[1538447705552,["gjx16@GJXAIOU",[[-1,3288,"\n"]],[3288,3288],[3287,3287]]],[1538447708550,["gjx16@GJXAIOU",[[-1,3423,"\n"]],[3423,3423],[3422,3422]]],[1538447709244,["gjx16@GJXAIOU",[[-1,3450,"\n"]],[3450,3450],[3449,3449]]],[1538447710024,["gjx16@GJXAIOU",[[-1,3454,"\n"]],[3454,3454],[3453,3453]]],[1538447711941,["gjx16@GJXAIOU",[[-1,3582,"\n"]],[3582,3582],[3581,3581]]],[1538447713658,["gjx16@GJXAIOU",[[-1,3600,"\n"]],[3600,3600],[3599,3599]]],[1538447774103,[null,[[-1,3416,"\n"],[1,3417,"n"],[1,3600,"}"]],[3416,3416],[3601,3601]]],[1538447774103,[null,[[1,3416,"\n"],[-1,3416,"n"],[-1,3600,"}"]],[3601,3601],[3416,3416]]],[1538447719868,["gjx16@GJXAIOU",[[1,3609,"\n"]],[3605,3605],[3606,3606]]],[1538447728932,["gjx16@GJXAIOU",[[1,3610,"\n"]],[3606,3606],[3607,3607]]],[1538447730886,["gjx16@GJXAIOU",[[1,3607,"c"]],[3607,3607],[3608,3608]]],[1538447731510,["gjx16@GJXAIOU",[[-1,3607,"c"]],[3608,3608],[3607,3607]]],[1538447743680,["gjx16@GJXAIOU",[[1,3607,"程序输出结果：xingming = zhangsan,nianling = 12,fengshu = 90\nxingming = lisi,nianling = 34,fengshu = 98\nxingming = wangwu,nianling = 23,fengshu = 94\nxingming = zhaoliu,nianling = 34,fengshu = 99\nxingming = zhouqi,nianling = 98,fengshu = 100\n\n\n"]],[3607,3607],[3843,3843]]],[1538447747930,["gjx16@GJXAIOU",[[1,3614,"\n"]],[3614,3614],[3615,3615]]],[1538447750384,["gjx16@GJXAIOU",[[1,3615,"·"]],[3615,3615],[3616,3616]]],[1538447751385,["gjx16@GJXAIOU",[[-1,3615,"·"]],[3616,3616],[3615,3615]]],[1538447752361,["gjx16@GJXAIOU",[[1,3615,"`"]],[3615,3615],[3616,3616]]],[1538447754626,["gjx16@GJXAIOU",[[1,3663,"`"]],[3663,3663],[3664,3664]]],[1538447755534,["gjx16@GJXAIOU",[[1,3707,"`"]],[3707,3707],[3708,3708]]],[1538447756435,["gjx16@GJXAIOU",[[1,3753,"`"]],[3753,3753],[3754,3754]]],[1538447757213,["gjx16@GJXAIOU",[[1,3800,"`"]],[3800,3800],[3801,3801]]],[1538447762027,["gjx16@GJXAIOU",[[1,3846,"`"]],[3846,3846],[3847,3847]]],[1538447762647,["gjx16@GJXAIOU",[[1,3799,"`"]],[3799,3799],[3800,3800]]],[1538447764010,["gjx16@GJXAIOU",[[1,3752,"``"]],[3752,3752],[3753,3753]]],[1538447771666,["gjx16@GJXAIOU",[[-1,3753,"`"]],[3753,3753],[3752,3752]]],[1538447773447,["gjx16@GJXAIOU",[[1,3706,"`"]],[3706,3706],[3707,3707]]],[1538447834107,[null,[[-1,3416,"\n"],[1,3417,"n"],[1,3600,"}"],[-1,3604,"\n"],[-1,3854,"#"],[1,3855,"\n"],[1,3857,"#"]],[3416,3416],[3858,3858]]],[1538447834107,[null,[[1,3416,"\n"],[-1,3416,"n"],[-1,3600,"}"],[1,3605,"\n"],[1,3854,"#"],[-1,3854,"\n"],[-1,3857,"#"]],[3858,3858],[3416,3416]]],[1538447774437,["gjx16@GJXAIOU",[[1,3662,"`"]],[3662,3662],[3663,3663]]],[1538447803753,["gjx16@GJXAIOU",[[1,3411,"  //定义的时候直接赋值"]],[3411,3411],[3424,3424]]],[1538447821138,["gjx16@GJXAIOU",[[1,3244,"、、"]],[3244,3244],[3246,3246]]],[1538447822539,["gjx16@GJXAIOU",[[-1,3244,"、、"]],[3246,3246],[3244,3244]]],[1538447825105,["gjx16@GJXAIOU",[[1,3244,"//shi"]],[3244,3244],[3249,3249]]],[1538447826406,["gjx16@GJXAIOU",[[-1,3246,"shi"]],[3249,3249],[3246,3246]]],[1538447833154,["gjx16@GJXAIOU",[[1,3246,"使用无符号的"]],[3246,3246],[3252,3252]]],[1538447894112,[null,[[-1,3437,"\n"],[1,3438,"n"],[1,3621,"}"],[-1,3625,"\n"],[-1,3876,"#"],[1,3877,"\n"],[1,3879,"#"]],[3437,3437],[3880,3880]]],[1538447894112,[null,[[1,3437,"\n"],[-1,3437,"n"],[-1,3621,"}"],[1,3626,"\n"],[1,3876,"#"],[-1,3876,"\n"],[-1,3879,"#"]],[3880,3880],[3437,3437]]],[1538447847261,["gjx16@GJXAIOU",[[1,3252,"字符类型就行，范围位"]],[3252,3252],[3262,3262]]],[1538447848248,["gjx16@GJXAIOU",[[-1,3261,"位"]],[3262,3262],[3261,3261]]],[1538447868285,["gjx16@GJXAIOU",[[1,3261,"为0-255，完全可以满足数据要求"]],[3261,3261],[3278,3278]]],[1538449154133,[null,[[-1,3463,"\n"],[1,3464,"n"],[1,3647,"}"],[-1,3651,"\n"],[-1,3902,"#"],[1,3903,"\n"],[1,3905,"#"]],[3463,3463],[3906,3906]]],[1538449154133,[null,[[1,3463,"\n"],[-1,3463,"n"],[-1,3647,"}"],[1,3652,"\n"],[1,3902,"#"],[-1,3902,"\n"],[-1,3905,"#"]],[3906,3906],[3463,3463]]],[1538449150123,["gjx16@GJXAIOU",[[1,3905,"\n"]],[3898,3898],[3899,3899]]],[1538449150337,["gjx16@GJXAIOU",[[1,3906,"\n"]],[3899,3899],[3900,3900]]],[1538449153052,["gjx16@GJXAIOU",[[1,3900,"*"]],[3900,3900],[3901,3901]]],[1538449214133,[null,[[-1,3463,"\n"],[1,3464,"n"],[1,3647,"}"],[-1,3651,"\n"],[-1,3903,"#"],[1,3904,"\n"],[1,3908,"#"]],[3463,3463],[3909,3909]]],[1538449214133,[null,[[1,3463,"\n"],[-1,3463,"n"],[-1,3647,"}"],[1,3652,"\n"],[1,3903,"#"],[-1,3903,"\n"],[-1,3908,"#"]],[3909,3909],[3463,3463]]],[1538449154295,["gjx16@GJXAIOU",[[1,3901,"***"]],[3901,3901],[3902,3902]]],[1538449162779,["gjx16@GJXAIOU",[[1,3902,"和数组相似的用啊"]],[3902,3902],[3910,3910]]],[1538449163416,["gjx16@GJXAIOU",[[-1,3909,"啊"]],[3910,3910],[3909,3909]]],[1538449164561,["gjx16@GJXAIOU",[[1,3909,"法"]],[3909,3909],[3910,3910]]],[1538449166794,["gjx16@GJXAIOU",[[1,3919,"\n"]],[3912,3912],[3913,3913]]],[1538449167312,["gjx16@GJXAIOU",[[1,3920,"\n"]],[3913,3913],[3914,3914]]],[1538449167844,["gjx16@GJXAIOU",[[1,3914,"·"]],[3914,3914],[3915,3915]]],[1538449168902,["gjx16@GJXAIOU",[[-1,3914,"·"]],[3915,3915],[3914,3914]]],[1538449170180,["gjx16@GJXAIOU",[[1,3914,"```"]],[3914,3914],[3917,3917]]],[1538449170212,["gjx16@GJXAIOU",[[1,3917,"language\n```\n"]],[3917,3917],[3917,3925]]],[1538449171199,["gjx16@GJXAIOU",[[-1,3917,"language"],[1,3925,"c"]],[3917,3925],[3918,3918]]],[1538449171442,["gjx16@GJXAIOU",[[1,3919,"\n"]],[3918,3918],[3919,3919]]],[1538449172181,["gjx16@GJXAIOU",[[1,3920,"\n"]],[3919,3919],[3920,3920]]],[1538449172247,["gjx16@GJXAIOU",[[1,3921,"\n"]],[3920,3920],[3921,3921]]],[1538449514137,[null,[[-1,3463,"\n"],[1,3464,"n"],[1,3647,"}"],[-1,3651,"\n"],[-1,3926,"#"],[1,3927,"\n"],[1,3933,"#"]],[3463,3463],[3934,3934]]],[1538449514137,[null,[[1,3463,"\n"],[-1,3463,"n"],[-1,3647,"}"],[1,3652,"\n"],[1,3926,"#"],[-1,3926,"\n"],[-1,3933,"#"]],[3934,3934],[3463,3463]]],[1538449499545,["gjx16@GJXAIOU",[[1,3919,"#include<stdio.h>\n\nstruct  B\n{\n  char  name[100];\n  unsigned  char  age;//使用无符号的字符类型就行，范围为0-255，完全可以满足数据要求\n  unsigned  char  score;\n};\n\nint  main()\n{\n  struct  B  jiegoutishuzu[5]  =  {{\"zhangsan\",12,90},{\"lisi\",34,98},{\"wangwu\",23,94},{\"zhaoliu\",34,99},{\"zhouqi\",98,100}};  //定义的时候直接赋值\n\n  int  i;\n  for(i  =  0;i  <  5;i++)\n  {\n  printf(\"xingming  =  %s,nianling  =  %d,fengshu  =  %d\\n\",jiegoutishuzu[i].name,jiegoutishuzu[i].age,jiegoutishuzu[i].score);\n  }\n\n  return  0;\n}"]],[3919,3919],[4395,4395]]],[1538449509884,["gjx16@GJXAIOU",[[-1,4193," //定义的时候直接赋值"]],[4193,4205],[4193,4193]]],[1538449574139,[null,[[-1,3463,"\n"],[1,3464,"n"],[1,3647,"}"],[-1,3651,"\n"],[-1,4390,"#"],[1,4391,"\n"],[1,4397,"#"]],[3463,3463],[4398,4398]]],[1538449574139,[null,[[1,3463,"\n"],[-1,3463,"n"],[-1,3647,"}"],[1,3652,"\n"],[1,4390,"#"],[-1,4390,"\n"],[-1,4397,"#"]],[4398,4398],[3463,3463]]],[1538449514620,["gjx16@GJXAIOU",[[1,4195,"\n"]],[4194,4194],[4195,4195]]],[1538449514666,["gjx16@GJXAIOU",[[1,4196,"\n"]],[4195,4195],[4196,4196]]],[1538449518486,["gjx16@GJXAIOU",[[1,4196,"STR"]],[4196,4196],[4199,4199]]],[1538449519603,["gjx16@GJXAIOU",[[-1,4196,"STR"]],[4199,4199],[4196,4196]]],[1538449525522,["gjx16@GJXAIOU",[[1,4196,"  t"]],[4196,4196],[4199,4199]]],[1538449526541,["gjx16@GJXAIOU",[[-1,4198,"t"]],[4199,4199],[4198,4198]]],[1538449537512,["gjx16@GJXAIOU",[[1,4198,"struct B tmp;"]],[4198,4198],[4211,4211]]],[1538449538050,["gjx16@GJXAIOU",[[1,4214,"\n  "]],[4211,4211],[4214,4214]]],[1538449540071,["gjx16@GJXAIOU",[[-1,4212,"  "]],[4214,4214],[4212,4212]]],[1538449540409,["gjx16@GJXAIOU",[[-1,4212,"\n"]],[4212,4212],[4211,4211]]],[1538449540853,["gjx16@GJXAIOU",[[-1,4210,";"]],[4211,4211],[4210,4210]]],[1538449555329,["gjx16@GJXAIOU",[[1,4210," = jiegoutishuzu[0];"]],[4210,4210],[4230,4230]]],[1538449555904,["gjx16@GJXAIOU",[[1,4233,"\n  "]],[4230,4230],[4233,4233]]],[1538449563812,["gjx16@GJXAIOU",[[1,4233,"jirgoutishuzu"]],[4233,4233],[4246,4246]]],[1538449565572,["gjx16@GJXAIOU",[[-1,4231,"  jirgoutishuzu"]],[4246,4246],[4231,4231]]],[1538449565735,["gjx16@GJXAIOU",[[-1,4231,"\n"]],[4231,4231],[4230,4230]]],[1538449567677,["gjx16@GJXAIOU",[[1,4233,"\n  "]],[4230,4230],[4233,4233]]],[1538449572738,["gjx16@GJXAIOU",[[1,4233,"jiegoutishuzu "]],[4233,4233],[4247,4247]]],[1538449573436,["gjx16@GJXAIOU",[[-1,4246," "]],[4247,4247],[4246,4246]]],[1538449634142,[null,[[-1,3463,"\n"],[1,3464,"n"],[1,3647,"}"],[-1,3651,"\n"],[-1,4442,"#"],[1,4443,"\n"],[1,4449,"#"]],[3463,3463],[4450,4450]]],[1538449634142,[null,[[1,3463,"\n"],[-1,3463,"n"],[-1,3647,"}"],[1,3652,"\n"],[1,4442,"#"],[-1,4442,"\n"],[-1,4449,"#"]],[4450,4450],[3463,3463]]],[1538449574728,["gjx16@GJXAIOU",[[1,4246,"p"]],[4246,4246],[4247,4247]]],[1538449575650,["gjx16@GJXAIOU",[[-1,4246,"p"]],[4247,4247],[4246,4246]]],[1538449578752,["gjx16@GJXAIOU",[[1,4246,"[0];"]],[4246,4246],[4250,4250]]],[1538449579438,["gjx16@GJXAIOU",[[-1,4249,";"]],[4250,4250],[4249,4249]]],[1538449588755,["gjx16@GJXAIOU",[[1,4249," = jiegoutishuzu[1];"]],[4249,4249],[4269,4269]]],[1538449589237,["gjx16@GJXAIOU",[[1,4272,"\n  "]],[4269,4269],[4272,4272]]],[1538449607511,["gjx16@GJXAIOU",[[1,4272,"jirgoutishuzu[1] = jiegot"]],[4272,4272],[4297,4297]]],[1538449608274,["gjx16@GJXAIOU",[[-1,4296,"t"]],[4297,4297],[4296,4296]]],[1538449612278,["gjx16@GJXAIOU",[[1,4296,"utishuzu["]],[4296,4296],[4305,4305]]],[1538449616853,["gjx16@GJXAIOU",[[-1,4291,"jiegoutishuzu["]],[4305,4305],[4291,4291]]],[1538449620722,["gjx16@GJXAIOU",[[1,4291,"tmp;"]],[4291,4291],[4295,4295]]],[1538449622400,["gjx16@GJXAIOU",[[1,4298,"\n  "]],[4295,4295],[4298,4298]]],[1538449630278,["gjx16@GJXAIOU",[[1,4195,"//joah"]],[4195,4195],[4201,4201]]],[1538449631562,["gjx16@GJXAIOU",[[-1,4197,"joah"]],[4201,4201],[4197,4197]]],[1538449633856,["gjx16@GJXAIOU",[[1,4197,"交换"]],[4197,4197],[4199,4199]]],[1538449694144,[null,[[-1,3463,"\n"],[1,3464,"n"],[1,3647,"}"],[-1,3651,"\n"],[-1,4498,"#"],[1,4499,"\n"],[1,4505,"#"]],[3463,3463],[4506,4506]]],[1538449694144,[null,[[1,3463,"\n"],[-1,3463,"n"],[-1,3647,"}"],[1,3652,"\n"],[1,4498,"#"],[-1,4498,"\n"],[-1,4505,"#"]],[4506,4506],[3463,3463]]],[1538449640547,["gjx16@GJXAIOU",[[1,4199,"结构体中元素的顺醋"]],[4199,4199],[4208,4208]]],[1538449641150,["gjx16@GJXAIOU",[[-1,4206,"顺醋"]],[4208,4208],[4206,4206]]],[1538449643163,["gjx16@GJXAIOU",[[1,4206,"顺序"]],[4206,4206],[4208,4208]]],[1538449644696,["gjx16@GJXAIOU",[[1,4209,"\n"]],[4208,4208],[4209,4209]]],[1538449690372,["gjx16@GJXAIOU",[[-1,4288,"r"]],[4289,4289],[4288,4288]]],[1538449691782,["gjx16@GJXAIOU",[[1,4288,"娥"]],[4288,4288],[4289,4289]]],[1538449693142,["gjx16@GJXAIOU",[[-1,4288,"娥"]],[4289,4289],[4288,4288]]],[1538449754143,[null,[[-1,3463,"\n"],[1,3464,"n"],[1,3647,"}"],[-1,3651,"\n"],[-1,4507,"#"],[1,4508,"\n"],[1,4514,"#"]],[3463,3463],[4515,4515]]],[1538449754143,[null,[[1,3463,"\n"],[-1,3463,"n"],[-1,3647,"}"],[1,3652,"\n"],[1,4507,"#"],[-1,4507,"\n"],[-1,4514,"#"]],[4515,4515],[3463,3463]]],[1538449694808,["gjx16@GJXAIOU",[[1,4288,"娥"]],[4288,4288],[4289,4289]]],[1538449697495,["gjx16@GJXAIOU",[[-1,4288,"娥"]],[4289,4289],[4288,4288]]],[1538449706342,["gjx16@GJXAIOU",[[1,4288,"e"]],[4288,4288],[4289,4289]]],[1538449723529,["gjx16@GJXAIOU",[[1,4508,"程序运行结果位："]],[4508,4508],[4516,4516]]],[1538449724175,["gjx16@GJXAIOU",[[-1,4514,"位："]],[4516,4516],[4514,4514]]],[1538449728635,["gjx16@GJXAIOU",[[1,4514,"为："]],[4514,4514],[4516,4516]]],[1538449730796,["gjx16@GJXAIOU",[[1,4523,"\n"]],[4516,4516],[4517,4517]]],[1538449732039,["gjx16@GJXAIOU",[[1,4517,"xingming  =  lisi,nianling  =  34,fengshu  =  98\nxingming  =  zhangsan,nianling  =  12,fengshu  =  90\nxingming  =  wangwu,nianling  =  23,fengshu  =  94\nxingming  =  zhaoliu,nianling  =  34,fengshu  =  99\nxingming  =  zhouqi,nianling  =  98,fengshu  =  100\n"]],[4517,4517],[4774,4774]]],[1538449737044,["gjx16@GJXAIOU",[[1,4517,"·"]],[4517,4517],[4518,4518]]],[1538449738126,["gjx16@GJXAIOU",[[1,4567,"·"]],[4567,4567],[4568,4568]]],[1538449739872,["gjx16@GJXAIOU",[[-1,4567,"·"]],[4568,4568],[4567,4567]]],[1538449742103,["gjx16@GJXAIOU",[[-1,4517,"·"]],[4518,4518],[4517,4517]]],[1538449742362,["gjx16@GJXAIOU",[[1,4517,"·"]],[4517,4517],[4518,4518]]],[1538449743430,["gjx16@GJXAIOU",[[-1,4517,"·"]],[4518,4518],[4517,4517]]],[1538449745623,["gjx16@GJXAIOU",[[1,4517,"`"]],[4517,4517],[4518,4518]]],[1538449746648,["gjx16@GJXAIOU",[[1,4567,"`"]],[4567,4567],[4568,4568]]],[1538449747554,["gjx16@GJXAIOU",[[1,4621,"`"]],[4621,4621],[4622,4622]]],[1538449748291,["gjx16@GJXAIOU",[[1,4672,"`"]],[4672,4672],[4673,4673]]],[1538449751058,["gjx16@GJXAIOU",[[1,4725,"`"]],[4725,4725],[4726,4726]]],[1538449753753,["gjx16@GJXAIOU",[[1,4778,"`"]],[4778,4778],[4779,4779]]],[1538449814146,[null,[[-1,3463,"\n"],[1,3464,"n"],[1,3647,"}"],[-1,3651,"\n"],[-1,4516,"#"],[1,4517,"\n"],[1,4787,"#"]],[3463,3463],[4788,4788]]],[1538449814146,[null,[[1,3463,"\n"],[-1,3463,"n"],[-1,3647,"}"],[1,3652,"\n"],[1,4516,"#"],[-1,4516,"\n"],[-1,4787,"#"]],[4788,4788],[3463,3463]]],[1538449757988,["gjx16@GJXAIOU",[[1,4727,"`"]],[4727,4727],[4728,4728]]],[1538449759036,["gjx16@GJXAIOU",[[1,4674,"`"]],[4674,4674],[4675,4675]]],[1538449761824,["gjx16@GJXAIOU",[[1,4568,"  "]],[4568,4568],[4570,4570]]],[1538449765759,["gjx16@GJXAIOU",[[-1,4568,"  "]],[4570,4570],[4568,4568]]],[1538449769636,["gjx16@GJXAIOU",[[1,4620,"`"]],[4620,4620],[4621,4621]]],[1538449770604,["gjx16@GJXAIOU",[[1,4566,"`"]],[4566,4566],[4567,4567]]],[1538449781137,["gjx16@GJXAIOU",[[-1,3991,"//使用无符号的字符类型就行，范围为0-255，完全可以满足数据要求"]],[3991,4025],[3991,3991]]],[1538449793432,["gjx16@GJXAIOU",[[1,3913,"1/"]],[3913,3913],[3915,3915]]],[1538449794728,["gjx16@GJXAIOU",[[-1,3914,"/"]],[3915,3915],[3914,3914]]],[1538449813396,["gjx16@GJXAIOU",[[1,3914,".交换结构体中"]],[3914,3914],[3921,3921]]],[1538449874189,[null,[[-1,3463,"\n"],[1,3464,"n"],[1,3647,"}"],[-1,3651,"\n"],[-1,4490,"#"],[1,4491,"\n"],[1,4765,"#"]],[3463,3463],[4766,4766]]],[1538449874189,[null,[[1,3463,"\n"],[-1,3463,"n"],[-1,3647,"}"],[1,3652,"\n"],[1,4490,"#"],[-1,4490,"\n"],[-1,4765,"#"]],[4766,4766],[3463,3463]]],[1538449824060,["gjx16@GJXAIOU",[[1,3921,"定义数组的元素"]],[3921,3921],[3928,3928]]],[1538449847373,["gjx16@GJXAIOU",[[1,4767,"2.通过结构实现数组的功能"]],[4767,4767],[4780,4780]]],[1538449848318,["gjx16@GJXAIOU",[[1,4785,"\n"]],[4780,4780],[4781,4781]]],[1538449848963,["gjx16@GJXAIOU",[[1,4786,"\n"]],[4781,4781],[4782,4782]]],[1538449851408,["gjx16@GJXAIOU",[[1,4782,"·"]],[4782,4782],[4783,4783]]],[1538449852345,["gjx16@GJXAIOU",[[-1,4782,"·"]],[4783,4783],[4782,4782]]],[1538449854216,["gjx16@GJXAIOU",[[1,4782,"```"]],[4782,4782],[4785,4785]]],[1538449854249,["gjx16@GJXAIOU",[[1,4785,"language\n```\n"]],[4785,4785],[4785,4793]]],[1538449855698,["gjx16@GJXAIOU",[[-1,4785,"language"],[1,4793,"c"]],[4785,4793],[4786,4786]]],[1538449856172,["gjx16@GJXAIOU",[[1,4787,"\n"]],[4786,4786],[4787,4787]]],[1538449860676,["gjx16@GJXAIOU",[[1,4786,"++++"]],[4786,4786],[4788,4788]]],[1538449861965,["gjx16@GJXAIOU",[[-1,4788,"++"]],[4788,4788],[4786,4786]]],[1538449868327,["gjx16@GJXAIOU",[[-1,4785,"c++"]],[4788,4788],[4785,4785]]],[1538449869435,["gjx16@GJXAIOU",[[1,4785,"jan"]],[4785,4785],[4788,4788]]],[1538449870098,["gjx16@GJXAIOU",[[-1,4787,"n"]],[4788,4788],[4787,4787]]],[1538449870645,["gjx16@GJXAIOU",[[1,4787,"va"]],[4787,4787],[4789,4789]]],[1538449872514,["gjx16@GJXAIOU",[[-1,4785,"java"]],[4789,4789],[4785,4785]]],[1538449874104,["gjx16@GJXAIOU",[[1,4785,"c+"]],[4785,4785],[4787,4787]]],[1538449934181,[null,[[-1,3463,"\n"],[1,3464,"n"],[1,3647,"}"],[-1,3651,"\n"],[-1,4497,"#"],[1,4498,"\n"],[1,4798,"#"]],[3463,3463],[4799,4799]]],[1538449934181,[null,[[1,3463,"\n"],[-1,3463,"n"],[-1,3647,"}"],[1,3652,"\n"],[1,4497,"#"],[-1,4497,"\n"],[-1,4798,"#"]],[4799,4799],[3463,3463]]],[1538449874314,["gjx16@GJXAIOU",[[1,4787,"+++"]],[4787,4787],[4788,4788]]],[1538449875288,["gjx16@GJXAIOU",[[-1,4788,"++"]],[4788,4788],[4786,4786]]],[1538449878681,["gjx16@GJXAIOU",[[-1,4785,"c++"]],[4788,4788],[4785,4785]]],[1538449880197,["gjx16@GJXAIOU",[[1,4785,"php"]],[4785,4785],[4788,4788]]],[1538449881260,["gjx16@GJXAIOU",[[-1,4785,"php"]],[4788,4788],[4785,4785]]],[1538449882372,["gjx16@GJXAIOU",[[1,4785,"c"]],[4785,4785],[4786,4786]]],[1538449902422,["gjx16@GJXAIOU",[[1,4787,"#include<stdio.h>\n\nstruct  B\n{\n  char  name[100];\n  unsigned  char  age;\n  unsigned  char  score;\n};\n\nint  main()\n{\n  struct  B  jiegoutishuzu[5]  =  {{\"zhangsan\",12,90},{\"lisi\",34,98},{\"wangwu\",23,94},{\"zhaoliu\",34,99},{\"zhouqi\",98,100}}; \n\n//交换结构体中元素的顺序\n\n  struct B tmp = jiegoutishuzu[0];\n  jiegoutishuzu[0] = jiegoutishuzu[1];\n  jiegoutishuzu[1] = tmp;\n  \n  int  i;\n  for(i  =  0;i  <  5;i++)\n  {\n  printf(\"xingming  =  %s,nianling  =  %d,fengshu  =  %d\\n\",jiegoutishuzu[i].name,jiegoutishuzu[i].age,jiegoutishuzu[i].score);\n  }\n\n  return  0;\n}"]],[4787,4787],[5335,5335]]],[1538450114188,[null,[[-1,3463,"\n"],[1,3464,"n"],[1,3647,"}"],[-1,3648,""],[-1,3653,"\n"],[-1,4497,"#"],[1,4498,"\n"],[1,5345,"#"]],[3463,3463],[5346,5346]]],[1538450114188,[null,[[1,3463,"\n"],[-1,3463,"n"],[-1,3647,"}"],[1,3649,""],[1,3654,"\n"],[1,4497,"#"],[-1,4497,"\n"],[-1,5345,"#"]],[5346,5346],[3463,3463]]],[1538450057138,["gjx16@GJXAIOU",[[-1,4838," unsigned  char  age;\n  unsigned  char  score;"]],[4838,4884],[4838,4838]]],[1538450061577,["gjx16@GJXAIOU",[[-1,4826,"name"]],[4830,4830],[4826,4826]]],[1538450064144,["gjx16@GJXAIOU",[[1,4826,"array"]],[4826,4826],[4831,4831]]],[1538450075674,["gjx16@GJXAIOU",[[-1,4871,"jiegoutishuzu[5]  =  {{\"zhangsan\",12,90},{\"lisi\",34,98},{\"wangwu\",23,94},{\"zhaoliu\",34,99},{\"zhouqi\",98,100}}; \n\n//交换结构体中元素的顺序\n\n  struct B tmp = jiegoutishuzu[0];\n  jiegoutishuzu[0] = jiegoutishuzu[1];\n  jiegoutishuzu[1] = tmp;\n  \n  int  i;\n  for(i  =  0;i  <  5;i++)\n  {\n  printf(\"xingming  =  %s,nianling  =  %d,fengshu  =  %d\\n\",jiegoutishuzu[i].name,jiegoutishuzu[i].age,jiegoutishuzu[i].score);\n  }\n"]],[4871,5275],[4871,4871]]],[1538450087092,["gjx16@GJXAIOU",[[1,4871,"a1 ={{"]],[4871,4871],[4877,4877]]],[1538450088121,["gjx16@GJXAIOU",[[-1,4876,"{"]],[4877,4877],[4876,4876]]],[1538450090038,["gjx16@GJXAIOU",[[1,4876,"};"]],[4876,4876],[4878,4878]]],[1538450092858,["gjx16@GJXAIOU",[[1,4876,"\"\""]],[4876,4876],[4878,4878]]],[1538450095263,["gjx16@GJXAIOU",[[1,4877,"hello"]],[4877,4877],[4882,4882]]],[1538450106316,["gjx16@GJXAIOU",[[1,4888,"\n  "]],[4885,4885],[4888,4888]]],[1538450106763,["gjx16@GJXAIOU",[[1,4888," struct  B  a1 ={\"hello\"};"]],[4888,4888],[4914,4914]]],[1538450109214,["gjx16@GJXAIOU",[[-1,4888," "]],[4889,4889],[4888,4888]]],[1538450112887,["gjx16@GJXAIOU",[[-1,4900,"1"]],[4901,4901],[4900,4900]]],[1538450113434,["gjx16@GJXAIOU",[[1,4900,"2"]],[4900,4900],[4901,4901]]],[1538450174188,[null,[[-1,3463,"\n"],[1,3464,"n"],[1,3647,"}"],[-1,3651,"\n"],[-1,4497,"#"],[1,4498,"\n"],[1,4938,"#"]],[3463,3463],[4939,4939]]],[1538450174188,[null,[[1,3463,"\n"],[-1,3463,"n"],[-1,3647,"}"],[1,3652,"\n"],[1,4497,"#"],[-1,4497,"\n"],[-1,4938,"#"]],[4939,4939],[3463,3463]]],[1538450117274,["gjx16@GJXAIOU",[[-1,4905,"hello"]],[4910,4910],[4905,4905]]],[1538450118295,["gjx16@GJXAIOU",[[1,4905,"0"]],[4905,4905],[4906,4906]]],[1538450122376,["gjx16@GJXAIOU",[[-1,4904,"\"0\""]],[4907,4907],[4904,4904]]],[1538450123467,["gjx16@GJXAIOU",[[1,4904,"0"]],[4904,4904],[4905,4905]]],[1538450128284,["gjx16@GJXAIOU",[[1,4910,"\n  "]],[4907,4907],[4910,4910]]],[1538450131685,["gjx16@GJXAIOU",[[1,4910,"a2 - "]],[4910,4910],[4915,4915]]],[1538450132503,["gjx16@GJXAIOU",[[-1,4913,"- "]],[4915,4915],[4913,4913]]],[1538450134201,["gjx16@GJXAIOU",[[1,4913,"-"]],[4913,4913],[4914,4914]]],[1538450135103,["gjx16@GJXAIOU",[[-1,4913,"-"]],[4914,4914],[4913,4913]]],[1538450138581,["gjx16@GJXAIOU",[[1,4913,"=aq"]],[4913,4913],[4916,4916]]],[1538450139254,["gjx16@GJXAIOU",[[-1,4915,"q"]],[4916,4916],[4915,4915]]],[1538450140116,["gjx16@GJXAIOU",[[1,4915,"1;"]],[4915,4915],[4917,4917]]],[1538450143136,["gjx16@GJXAIOU",[[1,4914," "]],[4914,4914],[4915,4915]]],[1538450145862,["gjx16@GJXAIOU",[[1,4921,"\n  "]],[4918,4918],[4921,4921]]],[1538450150677,["gjx16@GJXAIOU",[[1,4921,"printf();"]],[4921,4921],[4930,4930]]],[1538450154704,["gjx16@GJXAIOU",[[1,4928,"\"\""]],[4928,4928],[4930,4930]]],[1538450168076,["gjx16@GJXAIOU",[[1,4929,"a2.array = %s\\n"]],[4929,4929],[4944,4944]]],[1538450173865,["gjx16@GJXAIOU",[[1,4945,",a2.arra"]],[4945,4945],[4953,4953]]],[1538450234189,[null,[[-1,3463,"\n"],[1,3464,"n"],[1,3647,"}"],[-1,3651,"\n"],[-1,4497,"#"],[1,4498,"\n"],[1,4980,"#"]],[3463,3463],[4981,4981]]],[1538450234189,[null,[[1,3463,"\n"],[-1,3463,"n"],[-1,3647,"}"],[1,3652,"\n"],[1,4497,"#"],[-1,4497,"\n"],[-1,4980,"#"]],[4981,4981],[3463,3463]]],[1538450209406,["gjx16@GJXAIOU",[[1,4981,"\n"]],[4975,4975],[4976,4976]]],[1538450219199,["gjx16@GJXAIOU",[[1,4976,"程序运行的结果位"]],[4976,4976],[4984,4984]]],[1538450220170,["gjx16@GJXAIOU",[[-1,4982,"果位"]],[4984,4984],[4982,4982]]],[1538450232104,["gjx16@GJXAIOU",[[1,4982,"果为：·"]],[4982,4982],[4986,4986]]],[1538450233224,["gjx16@GJXAIOU",[[-1,4985,"·"]],[4986,4986],[4985,4985]]],[1538450234062,["gjx16@GJXAIOU",[[1,4985,"`"]],[4985,4985],[4986,4986]]],[1538450294193,[null,[[-1,3463,"\n"],[1,3464,"n"],[1,3647,"}"],[-1,3651,"\n"],[-1,4497,"#"],[1,4498,"\n"],[1,4953,"y"],[-1,4975,"\n"],[-1,4990,"#\n"],[1,4992,"\n\n##"]],[3463,3463],[4996,4996]]],[1538450294193,[null,[[1,3463,"\n"],[-1,3463,"n"],[-1,3647,"}"],[1,3652,"\n"],[1,4497,"#"],[-1,4497,"\n"],[-1,4953,"y"],[1,4976,"\n"],[1,4990,"#\n"],[-1,4990,"\n\n##"]],[4996,4996],[3463,3463]]],[1538450237248,["gjx16@GJXAIOU",[[1,4986,"a2.array = hello`"]],[4986,4986],[5003,5003]]],[1538450269359,["gjx16@GJXAIOU",[[1,4885,"//如果结构体的成员为数组的，通过结构课"]],[4885,4885],[4905,4905]]],[1538450273519,["gjx16@GJXAIOU",[[-1,4902,"结构课"]],[4905,4905],[4902,4902]]],[1538450285270,["gjx16@GJXAIOU",[[1,4902,"结构可以变现的实现数组的"]],[4902,4902],[4914,4914]]],[1538460901218,[null,[[-1,3463,"\n"],[1,3464,"n"],[1,3647,"}"],[-1,3651,"\n"],[-1,4497,"#"],[1,4498,"\n"],[1,4982,"y"],[-1,5003,"\n"],[-1,5036,"#\n"],[1,5038,"\n\n##"]],[3463,3463],[5042,5042]]],[1538460901218,[null,[[1,3463,"\n"],[-1,3463,"n"],[-1,3647,"}"],[1,3652,"\n"],[1,4497,"#"],[-1,4497,"\n"],[-1,4982,"y"],[1,5004,"\n"],[1,5036,"#\n"],[-1,5036,"\n\n##"]],[5042,5042],[3463,3463]]],[1538460896112,["gjx16@GJXAIOU",[[1,4914,"赋值"]],[4914,4914],[4916,4916]]],[1538460961223,[null,[[-1,3463,"\n"],[1,3464,"n"],[1,3647,"}"],[-1,3651,"\n"],[-1,4497,"#"],[1,4498,"\n"],[1,4984,"y"],[-1,5005,"\n"],[-1,5038,"#\n"],[1,5040,"\n\n##"]],[3463,3463],[5044,5044]]],[1538460961224,[null,[[1,3463,"\n"],[-1,3463,"n"],[-1,3647,"}"],[1,3652,"\n"],[1,4497,"#"],[-1,4497,"\n"],[-1,4984,"y"],[1,5006,"\n"],[1,5038,"#\n"],[-1,5038,"\n\n##"]],[5044,5044],[3463,3463]]],[1538460933464,["gjx16@GJXAIOU",[[1,4916,"  "]],[4916,4916],[4918,4918]]],[1538461021221,[null,[[-1,3463,"\n"],[1,3464,"n"],[1,3647,"}"],[-1,3651,"\n"],[-1,4497,"#"],[1,4498,"\n"],[1,4986,"y"],[-1,5007,"\n"],[-1,5040,"#\n"],[1,5042,"\n\n##"]],[3463,3463],[5046,5046]]],[1538461021221,[null,[[1,3463,"\n"],[-1,3463,"n"],[-1,3647,"}"],[1,3652,"\n"],[1,4497,"#"],[-1,4497,"\n"],[-1,4986,"y"],[1,5008,"\n"],[1,5040,"#\n"],[-1,5040,"\n\n##"]],[5046,5046],[3463,3463]]],[1538460961731,["gjx16@GJXAIOU",[[1,5042,"\n"]],[5037,5037],[5038,5038]]],[1538460961854,["gjx16@GJXAIOU",[[1,5043,"\n"]],[5038,5038],[5039,5039]]],[1538460996080,["gjx16@GJXAIOU",[[1,5039,"3.将上面第一个程序（）"]],[5039,5039],[5051,5051]]],[1538461002316,["gjx16@GJXAIOU",[[1,5050,"例子程序中"]],[5050,5050],[5055,5055]]],[1538461002909,["gjx16@GJXAIOU",[[-1,5054,"中"]],[5055,5055],[5054,5054]]],[1538461020794,["gjx16@GJXAIOU",[[1,5055,"中的数组元素按照年龄进行排序"]],[5055,5055],[5069,5069]]],[1538461081221,[null,[[-1,3463,"\n"],[1,3464,"n"],[1,3647,"}"],[-1,3651,"\n"],[-1,4497,"#"],[1,4498,"\n"],[1,4986,"y"],[-1,5007,"\n"],[-1,5070,"#"],[1,5071,"\n"],[1,5074,"##"]],[3463,3463],[5076,5076]]],[1538461081221,[null,[[1,3463,"\n"],[-1,3463,"n"],[-1,3647,"}"],[1,3652,"\n"],[1,4497,"#"],[-1,4497,"\n"],[-1,4986,"y"],[1,5008,"\n"],[1,5070,"#"],[-1,5070,"\n"],[-1,5074,"##"]],[5076,5076],[3463,3463]]],[1538461040788,["gjx16@GJXAIOU",[[1,5069,"，如果年龄相同则按照分数排序"]],[5069,5069],[5083,5083]]],[1538461041336,["gjx16@GJXAIOU",[[1,5088,"\n"]],[5083,5083],[5084,5084]]],[1538461041915,["gjx16@GJXAIOU",[[1,5089,"\n"]],[5084,5084],[5085,5085]]],[1538461062602,["gjx16@GJXAIOU",[[1,5090,"\n"]],[5084,5084],[5085,5085]]],[1538461064810,["gjx16@GJXAIOU",[[1,5085,"```"]],[5085,5085],[5088,5088]]],[1538461064843,["gjx16@GJXAIOU",[[1,5088,"language\n```\n"]],[5088,5088],[5088,5096]]],[1538461065876,["gjx16@GJXAIOU",[[-1,5088,"language"],[1,5096,"c"]],[5088,5096],[5089,5089]]],[1538461066140,["gjx16@GJXAIOU",[[1,5090,"\n"]],[5089,5089],[5090,5090]]],[1538461066331,["gjx16@GJXAIOU",[[1,5091,"\n"]],[5090,5090],[5091,5091]]],[1538461067595,["gjx16@GJXAIOU",[[1,5091,"#include<stdio.h>\n\nstruct  B\n{\n  char  name[100];\n  unsigned  char  age;//使用无符号的字符类型就行，范围为0-255，完全可以满足数据要求\n  unsigned  char  score;\n};\n\nint  main()\n{\n  struct  B  jiegoutishuzu[5]  =  {{\"zhangsan\",12,90},{\"lisi\",34,98},{\"wangwu\",23,94},{\"zhaoliu\",34,99},{\"zhouqi\",98,100}};  //定义的时候直接赋值\n\n  int  i;\n  for(i  =  0;i  <  5;i++)\n  {\n  printf(\"xingming  =  %s,nianling  =  %d,fengshu  =  %d\\n\",jiegoutishuzu[i].name,jiegoutishuzu[i].age,jiegoutishuzu[i].score);\n  }\n\n  return  0;\n}"]],[5091,5091],[5567,5567]]],[1538461141222,[null,[[-1,3463,"\n"],[1,3464,"n"],[1,3647,"}"],[-1,3648,""],[-1,3653,"\n"],[-1,4497,"#"],[1,4498,"\n"],[1,4986,"y"],[-1,5008,"\n"],[-1,5084,"#"],[1,5085,"\n"],[1,5578,"##"]],[3463,3463],[5580,5580]]],[1538461141222,[null,[[1,3463,"\n"],[-1,3463,"n"],[-1,3647,"}"],[1,3649,""],[1,3654,"\n"],[1,4497,"#"],[-1,4497,"\n"],[-1,4986,"y"],[1,5009,"\n"],[1,5084,"#"],[-1,5084,"\n"],[-1,5578,"##"]],[5580,5580],[3463,3463]]],[1538461092804,["gjx16@GJXAIOU",[[1,5038,"===="]],[5038,5038],[5040,5040]]],[1538461095702,["gjx16@GJXAIOU",[[1,5040,"map"]],[5040,5040],[5043,5043]]],[1538461097039,["gjx16@GJXAIOU",[[-1,5040,"map"]],[5043,5043],[5040,5040]]],[1538461104395,["gjx16@GJXAIOU",[[1,5040,"冒泡排序法使用"]],[5040,5040],[5047,5047]]],[1538461110784,["gjx16@GJXAIOU",[[1,5038,"~~~~"]],[5038,5038],[5040,5040]]],[1538461112639,["gjx16@GJXAIOU",[[-1,5040,"~~"]],[5040,5040],[5038,5038]]],[1538461120496,["gjx16@GJXAIOU",[[1,5051,"~~~~"]],[5051,5051],[5053,5053]]],[1538461122268,["gjx16@GJXAIOU",[[-1,5053,"~~"]],[5053,5053],[5051,5051]]],[1538461133355,["gjx16@GJXAIOU",[[-1,5106,"#include<stdio.h>\n\nstruct  B\n{\n  char  name[100];\n  unsigned  char  age;//使用无符号的字符类型就行，范围为0-255，完全可以满足数据要求\n  unsigned  char  score;\n};\n\nint  main()\n{\n  struct  B  jiegoutishuzu[5]  =  {{\"zhangsan\",12,90},{\"lisi\",34,98},{\"wangwu\",23,94},{\"zhaoliu\",34,99},{\"zhouqi\",98,100}};  //定义的时候直接赋值\n\n  int  i;\n  for(i  =  0;i  <  5;i++)\n  {\n  printf(\"xingming  =  %s,nianling  =  %d,fengshu  =  %d\\n\",jiegoutishuzu[i].name,jiegoutishuzu[i].age,jiegoutishuzu[i].score);\n  }\n\n  return  0;\n}"]],[5106,5582],[5106,5106]]],[1538461201224,[null,[[-1,3463,"\n"],[1,3464,"n"],[1,3647,"}"],[-1,3651,"\n"],[-1,4497,"#"],[1,4498,"\n"],[1,4986,"y"],[-1,5007,"\n"],[-1,5099,"#"],[1,5100,"\n"],[1,5117,"##"]],[3463,3463],[5119,5119]]],[1538461201224,[null,[[1,3463,"\n"],[-1,3463,"n"],[-1,3647,"}"],[1,3652,"\n"],[1,4497,"#"],[-1,4497,"\n"],[-1,4986,"y"],[1,5008,"\n"],[1,5099,"#"],[-1,5099,"\n"],[-1,5117,"##"]],[5119,5119],[3463,3463]]],[1538461143088,["gjx16@GJXAIOU",[[-1,5116,"\n"]],[5115,5115],[5114,5114]]],[1538461143249,["gjx16@GJXAIOU",[[-1,5115,"\n"]],[5114,5114],[5113,5113]]],[1538461143431,["gjx16@GJXAIOU",[[-1,5114,"\n"]],[5113,5113],[5112,5112]]],[1538461144174,["gjx16@GJXAIOU",[[1,5112,"---"]],[5112,5112],[5115,5115]]],[1538461146905,["gjx16@GJXAIOU",[[1,5112,"\n"]],[5111,5111],[5112,5112]]],[1538461150677,["gjx16@GJXAIOU",[[1,5137,"\n"]],[5134,5134],[5135,5135]]],[1538461150837,["gjx16@GJXAIOU",[[1,5138,"\n"]],[5135,5135],[5136,5136]]],[1538461171636,["gjx16@GJXAIOU",[[1,5137," "]],[5137,5137],[5138,5138]]],[1538461381227,[null,[[-1,3463,"\n"],[1,3464,"n"],[1,3647,"}"],[-1,3651,"\n"],[-1,4497,"#"],[1,4498,"\n"],[1,4986,"y"],[-1,5007,"\n"],[-1,5099,"#"],[1,5100,"\n"],[1,5118,"##"],[1,5135," "],[-1,5137," "]],[3463,3463],[5137,5137]]],[1538461381227,[null,[[1,3463,"\n"],[-1,3463,"n"],[-1,3647,"}"],[1,3652,"\n"],[1,4497,"#"],[-1,4497,"\n"],[-1,4986,"y"],[1,5008,"\n"],[1,5099,"#"],[-1,5099,"\n"],[-1,5118,"##"],[-1,5137," "],[1,5140," "]],[5137,5137],[3463,3463]]],[1538461355158,["gjx16@GJXAIOU",[[1,5136,"### 1.结构的嵌套"]],[5136,5136],[5147,5147]]],[1538461355793,["gjx16@GJXAIOU",[[1,5148,"\n"]],[5147,5147],[5148,5148]]],[1538461357039,["gjx16@GJXAIOU",[[1,5149,"\n"]],[5148,5148],[5149,5149]]],[1538461360881,["gjx16@GJXAIOU",[[1,5149,"·"]],[5149,5149],[5150,5150]]],[1538461362572,["gjx16@GJXAIOU",[[-1,5149,"·"]],[5150,5150],[5149,5149]]],[1538461364938,["gjx16@GJXAIOU",[[1,5149,"```"]],[5149,5149],[5152,5152]]],[1538461364972,["gjx16@GJXAIOU",[[1,5152,"language\n```\n"]],[5152,5152],[5152,5160]]],[1538461366328,["gjx16@GJXAIOU",[[-1,5152,"language"],[1,5160,"c"]],[5152,5160],[5153,5153]]],[1538461366608,["gjx16@GJXAIOU",[[1,5154,"\n"]],[5153,5153],[5154,5154]]],[1538461372809,["gjx16@GJXAIOU",[[1,5154,"#include<>"]],[5154,5154],[5164,5164]]],[1538461377855,["gjx16@GJXAIOU",[[1,5163,"stdio.h"]],[5163,5163],[5170,5170]]],[1538461379248,["gjx16@GJXAIOU",[[1,5172,"\n"]],[5171,5171],[5172,5172]]],[1538461379988,["gjx16@GJXAIOU",[[1,5173,"\n"]],[5172,5172],[5173,5173]]],[1538461441268,[null,[[-1,3463,"\n"],[1,3464,"n"],[1,3647,"}"],[-1,3648,""],[-1,3653,"\n"],[-1,4497,"#"],[1,4498,"\n"],[1,4986,"y"],[-1,5008,"\n"],[-1,5099,"#"],[1,5100,"\n"],[1,5118,"##"],[-1,5133,"\n\n"],[-1,5179,""],[1,5180,"\n\n"]],[3463,3463],[5182,5182]]],[1538461441268,[null,[[1,3463,"\n"],[-1,3463,"n"],[-1,3647,"}"],[1,3649,""],[1,3654,"\n"],[1,4497,"#"],[-1,4497,"\n"],[-1,4986,"y"],[1,5009,"\n"],[1,5099,"#"],[-1,5099,"\n"],[-1,5118,"##"],[1,5135,"\n\n"],[1,5179,""],[-1,5180,"\n\n"]],[5182,5182],[3463,3463]]],[1538461388278,["gjx16@GJXAIOU",[[1,5173,"struct S"]],[5173,5173],[5181,5181]]],[1538461389125,["gjx16@GJXAIOU",[[-1,5180,"S"]],[5181,5181],[5180,5180]]],[1538461390226,["gjx16@GJXAIOU",[[1,5180,"A "]],[5180,5180],[5182,5182]]],[1538461391888,["gjx16@GJXAIOU",[[1,5183,"\n"]],[5182,5182],[5183,5183]]],[1538461395353,["gjx16@GJXAIOU",[[1,5183,"{};"]],[5183,5183],[5186,5186]]],[1538461397290,["gjx16@GJXAIOU",[[1,5184,"\n"]],[5184,5184],[5185,5185]]],[1538461397734,["gjx16@GJXAIOU",[[1,5185,"\n"]],[5185,5185],[5186,5186]]],[1538461402352,["gjx16@GJXAIOU",[[1,5185,"  int a;"]],[5185,5185],[5193,5193]]],[1538461403067,["gjx16@GJXAIOU",[[1,5194,"  \n"]],[5193,5193],[5196,5196]]],[1538461407253,["gjx16@GJXAIOU",[[1,5196,"char b;"]],[5196,5196],[5203,5203]]],[1538461410502,["gjx16@GJXAIOU",[[1,5207,"\n"]],[5206,5206],[5207,5207]]],[1538461411015,["gjx16@GJXAIOU",[[1,5208,"\n"]],[5207,5207],[5208,5208]]],[1538461420078,["gjx16@GJXAIOU",[[1,5208,"struct B;"]],[5208,5208],[5217,5217]]],[1538461420877,["gjx16@GJXAIOU",[[-1,5216,";"]],[5217,5217],[5216,5216]]],[1538461421604,["gjx16@GJXAIOU",[[1,5217,"\n"]],[5216,5216],[5217,5217]]],[1538461424242,["gjx16@GJXAIOU",[[1,5217,"{};"]],[5217,5217],[5220,5220]]],[1538461426292,["gjx16@GJXAIOU",[[1,5218,"\n"]],[5218,5218],[5219,5219]]],[1538461426510,["gjx16@GJXAIOU",[[1,5219,"\n"]],[5219,5219],[5220,5220]]],[1538461426667,["gjx16@GJXAIOU",[[1,5220,"\n"]],[5220,5220],[5221,5221]]],[1538461436237,["gjx16@GJXAIOU",[[1,5219,"  strucr"]],[5219,5219],[5227,5227]]],[1538461437097,["gjx16@GJXAIOU",[[-1,5226,"r"]],[5227,5227],[5226,5226]]],[1538461441176,["gjx16@GJXAIOU",[[1,5226,"t A"]],[5226,5226],[5229,5229]]],[1538461501259,[null,[[-1,3463,"\n"],[1,3464,"n"],[1,3647,"}"],[-1,3648,""],[-1,3653,"\n"],[-1,4497,"#"],[1,4498,"\n"],[1,4986,"y"],[-1,5008,"\n"],[-1,5099,"#"],[1,5100,"\n"],[1,5118,"##"],[-1,5133,"\n\n"],[-1,5239,""],[1,5240,"\n\n"]],[3463,3463],[5242,5242]]],[1538461501259,[null,[[1,3463,"\n"],[-1,3463,"n"],[-1,3647,"}"],[1,3649,""],[1,3654,"\n"],[1,4497,"#"],[-1,4497,"\n"],[-1,4986,"y"],[1,5009,"\n"],[1,5099,"#"],[-1,5099,"\n"],[-1,5118,"##"],[1,5135,"\n\n"],[1,5239,""],[-1,5240,"\n\n"]],[5242,5242],[3463,3463]]],[1538461443768,["gjx16@GJXAIOU",[[1,5229," a;"]],[5229,5229],[5232,5232]]],[1538461444250,["gjx16@GJXAIOU",[[1,5233,"  \n"]],[5232,5232],[5235,5235]]],[1538461445128,["gjx16@GJXAIOU",[[1,5235,"s"]],[5235,5235],[5236,5236]]],[1538461445958,["gjx16@GJXAIOU",[[-1,5235,"s"]],[5236,5236],[5235,5235]]],[1538461448625,["gjx16@GJXAIOU",[[1,5235,"char b;"]],[5235,5235],[5242,5242]]],[1538461454002,["gjx16@GJXAIOU",[[1,5247,"\n"]],[5246,5246],[5247,5247]]],[1538461455009,["gjx16@GJXAIOU",[[1,5248,"\n"]],[5247,5247],[5248,5248]]],[1538461460607,["gjx16@GJXAIOU",[[1,5248,"int main();"]],[5248,5248],[5259,5259]]],[1538461461405,["gjx16@GJXAIOU",[[-1,5258,";"]],[5259,5259],[5258,5258]]],[1538461462749,["gjx16@GJXAIOU",[[1,5259,"\n"]],[5258,5258],[5259,5259]]],[1538461464638,["gjx16@GJXAIOU",[[1,5259,"{}"]],[5259,5259],[5261,5261]]],[1538461465815,["gjx16@GJXAIOU",[[1,5260,"\n"]],[5260,5260],[5261,5261]]],[1538461466018,["gjx16@GJXAIOU",[[1,5261,"\n"]],[5261,5261],[5262,5262]]],[1538461466200,["gjx16@GJXAIOU",[[1,5262,"\n"]],[5262,5262],[5263,5263]]],[1538461466440,["gjx16@GJXAIOU",[[1,5263,"\n"]],[5263,5263],[5264,5264]]],[1538461480045,["gjx16@GJXAIOU",[[1,5261,"  printf();"]],[5261,5261],[5272,5272]]],[1538461483625,["gjx16@GJXAIOU",[[1,5270,"\"\""]],[5270,5270],[5272,5272]]],[1538461495127,["gjx16@GJXAIOU",[[1,5271,"sizeof()"]],[5271,5271],[5279,5279]]],[1538461500074,["gjx16@GJXAIOU",[[1,5278,"sr"]],[5278,5278],[5280,5280]]],[1538461500758,["gjx16@GJXAIOU",[[-1,5279,"r"]],[5280,5280],[5279,5279]]],[1538461561262,[null,[[-1,3463,"\n"],[1,3464,"n"],[1,3647,"}"],[-1,3648,""],[-1,3653,"\n"],[-1,4497,"#"],[1,4498,"\n"],[1,4986,"y"],[-1,5008,"\n"],[-1,5099,"#"],[1,5100,"\n"],[1,5118,"##"],[-1,5133,"\n\n"],[-1,5293,""],[1,5294,"\n\n"]],[3463,3463],[5296,5296]]],[1538461561262,[null,[[1,3463,"\n"],[-1,3463,"n"],[-1,3647,"}"],[1,3649,""],[1,3654,"\n"],[1,4497,"#"],[-1,4497,"\n"],[-1,4986,"y"],[1,5009,"\n"],[1,5099,"#"],[-1,5099,"\n"],[-1,5118,"##"],[1,5135,"\n\n"],[1,5293,""],[-1,5294,"\n\n"]],[5296,5296],[3463,3463]]],[1538461507308,["gjx16@GJXAIOU",[[1,5279,"truct B "]],[5279,5279],[5287,5287]]],[1538461508124,["gjx16@GJXAIOU",[[-1,5286," "]],[5287,5287],[5286,5286]]],[1538461515713,["gjx16@GJXAIOU",[[1,5287," = %d\\n"]],[5287,5287],[5294,5294]]],[1538461524050,["gjx16@GJXAIOU",[[1,5295,",sizeof("]],[5295,5295],[5303,5303]]],[1538461524167,["gjx16@GJXAIOU",[[1,5304,")"]],[5303,5303],[5304,5304]]],[1538461530735,["gjx16@GJXAIOU",[[1,5303,"strucr"]],[5303,5303],[5309,5309]]],[1538461531620,["gjx16@GJXAIOU",[[-1,5308,"r"]],[5309,5309],[5308,5308]]],[1538461535011,["gjx16@GJXAIOU",[[1,5308,"t A"]],[5308,5308],[5311,5311]]],[1538461537861,["gjx16@GJXAIOU",[[-1,5310,"A"]],[5311,5311],[5310,5310]]],[1538461538814,["gjx16@GJXAIOU",[[1,5310,"B"]],[5310,5310],[5311,5311]]],[1538461541806,["gjx16@GJXAIOU",[[1,5315,"  \n"]],[5314,5314],[5317,5317]]],[1538461552580,["gjx16@GJXAIOU",[[1,5317,"return 0;"]],[5317,5317],[5326,5326]]],[1538461555817,["gjx16@GJXAIOU",[[-1,5328,"\n"]],[5328,5328],[5327,5327]]],[1538461556023,["gjx16@GJXAIOU",[[-1,5327,"\n"]],[5327,5327],[5326,5326]]],[1538461560074,["gjx16@GJXAIOU",[[-1,5243,"\n"]],[5243,5243],[5242,5242]]],[1538461621267,[null,[[-1,3463,"\n"],[1,3464,"n"],[1,3647,"}"],[-1,3648,""],[-1,3653,"\n"],[-1,4497,"#"],[1,4498,"\n"],[1,4986,"y"],[-1,5008,"\n"],[-1,5099,"#"],[1,5100,"\n"],[1,5118,"##"],[-1,5133,"\n\n"],[-1,5333,""],[1,5334,"\n\n"]],[3463,3463],[5336,5336]]],[1538461621267,[null,[[1,3463,"\n"],[-1,3463,"n"],[-1,3647,"}"],[1,3649,""],[1,3654,"\n"],[1,4497,"#"],[-1,4497,"\n"],[-1,4986,"y"],[1,5009,"\n"],[1,5099,"#"],[-1,5099,"\n"],[-1,5118,"##"],[1,5135,"\n\n"],[1,5333,""],[-1,5334,"\n\n"]],[5336,5336],[3463,3463]]],[1538461592490,["gjx16@GJXAIOU",[[1,5334,"che"]],[5334,5334],[5337,5337]]],[1538461594832,["gjx16@GJXAIOU",[[-1,5334,"che"]],[5337,5337],[5334,5334]]],[1538461612979,["gjx16@GJXAIOU",[[1,5334,"程序运行结果：`sizeof(struct B) = 12`"]],[5334,5334],[5364,5364]]],[1538461921269,[null,[[-1,3463,"\n"],[1,3464,"n"],[1,3647,"}"],[-1,3648,""],[-1,3653,"\n"],[-1,4497,"#"],[1,4498,"\n"],[1,4986,"y"],[-1,5008,"\n"],[-1,5099,"#"],[1,5100,"\n"],[1,5118,"##"],[-1,5133,"\n\n"],[-1,5333,""],[1,5364,"\n\n"]],[3463,3463],[5366,5366]]],[1538461921269,[null,[[1,3463,"\n"],[-1,3463,"n"],[-1,3647,"}"],[1,3649,""],[1,3654,"\n"],[1,4497,"#"],[-1,4497,"\n"],[-1,4986,"y"],[1,5009,"\n"],[1,5099,"#"],[-1,5099,"\n"],[-1,5118,"##"],[1,5135,"\n\n"],[1,5333,""],[-1,5364,"\n\n"]],[5366,5366],[3463,3463]]],[1538461883125,["gjx16@GJXAIOU",[[1,5365," \n"]],[5364,5364],[5366,5366]]],[1538461884885,["gjx16@GJXAIOU",[[-1,5365," "],[1,5366,"\n"]],[5366,5366],[5366,5366]]],[1538461884940,["gjx16@GJXAIOU",[[1,5368,"\n"]],[5366,5366],[5367,5367]]],[1538461886379,["gjx16@GJXAIOU",[[-1,5368,"\n"]],[5367,5367],[5366,5366]]],[1538461887181,["gjx16@GJXAIOU",[[-1,5367,"\n"]],[5366,5366],[5365,5365]]],[1538462221277,[null,[[-1,3463,"\n"],[1,3464,"n"],[1,3647,"}"],[-1,3648,""],[-1,3653,"\n"],[-1,4497,"#"],[1,4498,"\n"],[1,4986,"y"],[-1,5008,"\n"],[-1,5099,"#"],[1,5100,"\n"],[1,5118,"##"],[-1,5133,"\n\n"],[-1,5364," "],[1,5365,"\n"]],[3463,3463],[5366,5366]]],[1538462221277,[null,[[1,3463,"\n"],[-1,3463,"n"],[-1,3647,"}"],[1,3649,""],[1,3654,"\n"],[1,4497,"#"],[-1,4497,"\n"],[-1,4986,"y"],[1,5009,"\n"],[1,5099,"#"],[-1,5099,"\n"],[-1,5118,"##"],[1,5135,"\n\n"],[1,5364," "],[-1,5364,"\n"]],[5366,5366],[3463,3463]]],[1538462191637,["gjx16@GJXAIOU",[[1,5365,"![结构嵌套]($resource/%E7%BB%93%E6%9E%84%E5%B5%8C%E5%A5%97.png)"]],[5365,5365],[5425,5425]]],[1538462195855,["gjx16@GJXAIOU",[[1,5365," \n"]],[5364,5364],[5366,5366]]],[1538462199381,["gjx16@GJXAIOU",[[1,5428,"\n"]],[5426,5426],[5427,5427]]],[1538462199537,["gjx16@GJXAIOU",[[1,5429,"\n"]],[5427,5427],[5428,5428]]],[1538462581284,[null,[[-1,3463,"\n"],[1,3464,"n"],[1,3647,"}"],[-1,3648,""],[-1,3653,"\n"],[-1,4497,"#"],[1,4498,"\n"],[1,4986,"y"],[-1,5008,"\n"],[-1,5099,"#"],[1,5100,"\n"],[1,5118,"##"],[-1,5133,"\n\n"],[-1,5364," "],[1,5365,"\n"]],[3463,3463],[5366,5366]]],[1538462581284,[null,[[1,3463,"\n"],[-1,3463,"n"],[-1,3647,"}"],[1,3649,""],[1,3654,"\n"],[1,4497,"#"],[-1,4497,"\n"],[-1,4986,"y"],[1,5009,"\n"],[1,5099,"#"],[-1,5099,"\n"],[-1,5118,"##"],[1,5135,"\n\n"],[1,5364," "],[-1,5364,"\n"]],[5366,5366],[3463,3463]]],[1538462540792,["gjx16@GJXAIOU",[[1,5430,"\n"]],[5427,5427],[5428,5428]]],[1538462541290,["gjx16@GJXAIOU",[[1,5431,"\n"]],[5428,5428],[5429,5429]]],[1538462543221,["gjx16@GJXAIOU",[[1,5429,"****"]],[5429,5429],[5431,5431]]],[1538462545445,["gjx16@GJXAIOU",[[1,5431,"jiegouti "]],[5431,5431],[5440,5440]]],[1538462547259,["gjx16@GJXAIOU",[[-1,5431,"jiegouti "]],[5440,5440],[5431,5431]]],[1538462553129,["gjx16@GJXAIOU",[[1,5431,"结构体之间的娥"]],[5431,5431],[5438,5438]]],[1538462553697,["gjx16@GJXAIOU",[[-1,5437,"娥"]],[5438,5438],[5437,5437]]],[1538462556587,["gjx16@GJXAIOU",[[1,5437,"赋值"]],[5437,5437],[5439,5439]]],[1538462558918,["gjx16@GJXAIOU",[[1,5444,"\n"]],[5441,5441],[5442,5442]]],[1538462560226,["gjx16@GJXAIOU",[[1,5445,"\n"]],[5442,5442],[5443,5443]]],[1538462561458,["gjx16@GJXAIOU",[[1,5443,"···"]],[5443,5443],[5446,5446]]],[1538462562575,["gjx16@GJXAIOU",[[-1,5443,"···"]],[5446,5446],[5443,5443]]],[1538462566703,["gjx16@GJXAIOU",[[1,5443,"```"]],[5443,5443],[5446,5446]]],[1538462566738,["gjx16@GJXAIOU",[[1,5446,"language\n```\n"]],[5446,5446],[5446,5454]]],[1538462568188,["gjx16@GJXAIOU",[[-1,5446,"language"],[1,5454,"c"]],[5446,5454],[5447,5447]]],[1538462568337,["gjx16@GJXAIOU",[[1,5448,"\n"]],[5447,5447],[5448,5448]]],[1538462641277,[null,[[-1,3463,"\n"],[1,3464,"n"],[1,3647,"}"],[-1,3648,""],[-1,3653,"\n"],[-1,4497,"#"],[1,4498,"\n"],[1,4986,"y"],[-1,5008,"\n"],[-1,5099,"#"],[1,5100,"\n"],[1,5118,"##"],[-1,5133,"\n\n"],[-1,5364," "],[1,5365,"\n"]],[3463,3463],[5366,5366]]],[1538462641277,[null,[[1,3463,"\n"],[-1,3463,"n"],[-1,3647,"}"],[1,3649,""],[1,3654,"\n"],[1,4497,"#"],[-1,4497,"\n"],[-1,4986,"y"],[1,5009,"\n"],[1,5099,"#"],[-1,5099,"\n"],[-1,5118,"##"],[1,5135,"\n\n"],[1,5364," "],[-1,5364,"\n"]],[5366,5366],[3463,3463]]],[1538462582705,["gjx16@GJXAIOU",[[1,5448,"#include<stdio.h>\n\nstruct A \n{\n  int a;\n  char b;\n};\n\nstruct B\n{\n  struct A a;\n  char b;\n};\n\nint main()\n{\n  printf(\"sizeof(struct B) = %d\\n\",sizeof(struct B));\n  return 0;\n}"]],[5448,5448],[5621,5621]]],[1538462761301,[null,[[-1,3463,"\n"],[1,3464,"n"],[1,3647,"}"],[-1,3648,""],[-1,3653,"\n"],[-1,4497,"#"],[1,4498,"\n"],[1,4986,"y"],[-1,5008,"\n"],[-1,5099,"#"],[1,5100,"\n"],[1,5118,"##"],[-1,5133,"\n\n"],[-1,5364," "],[1,5365,"\n"]],[3463,3463],[5366,5366]]],[1538462761301,[null,[[1,3463,"\n"],[-1,3463,"n"],[-1,3647,"}"],[1,3649,""],[1,3654,"\n"],[1,4497,"#"],[-1,4497,"\n"],[-1,4986,"y"],[1,5009,"\n"],[1,5099,"#"],[-1,5099,"\n"],[-1,5118,"##"],[1,5135,"\n\n"],[1,5364," "],[-1,5364,"\n"]],[5366,5366],[3463,3463]]],[1538462729698,["gjx16@GJXAIOU",[[-1,5502,"struct B\n{\n  struct A a;\n  char b;\n};\n\n"]],[5501,5540],[5501,5501]]],[1538462736606,["gjx16@GJXAIOU",[[-1,5516," printf(\"sizeof(struct B) = %d\\n\",sizeof(struct B));"]],[5516,5568],[5516,5516]]],[1538462740995,["gjx16@GJXAIOU",[[1,5516,"strucu"]],[5516,5516],[5522,5522]]],[1538462741535,["gjx16@GJXAIOU",[[-1,5521,"u"]],[5522,5522],[5521,5521]]],[1538462750956,["gjx16@GJXAIOU",[[1,5521,"t A a1,a2;"]],[5521,5521],[5531,5531]]],[1538462751457,["gjx16@GJXAIOU",[[1,5533,"\n "]],[5531,5531],[5533,5533]]],[1538462751557,["gjx16@GJXAIOU",[[-1,5532," "],[1,5533,"\n"]],[5533,5533],[5533,5533]]],[1538462752811,["gjx16@GJXAIOU",[[-1,5533,"\n"]],[5533,5533],[5532,5532]]],[1538462760984,["gjx16@GJXAIOU",[[1,5532,"  a1.a = 1;"]],[5532,5532],[5543,5543]]],[1538462821288,[null,[[-1,3463,"\n"],[1,3464,"n"],[1,3647,"}"],[-1,3648,""],[-1,3653,"\n"],[-1,4497,"#"],[1,4498,"\n"],[1,4986,"y"],[-1,5008,"\n"],[-1,5099,"#"],[1,5100,"\n"],[1,5118,"##"],[-1,5133,"\n\n"],[-1,5364," "],[1,5365,"\n"]],[3463,3463],[5366,5366]]],[1538462821288,[null,[[1,3463,"\n"],[-1,3463,"n"],[-1,3647,"}"],[1,3649,""],[1,3654,"\n"],[1,4497,"#"],[-1,4497,"\n"],[-1,4986,"y"],[1,5009,"\n"],[1,5099,"#"],[-1,5099,"\n"],[-1,5118,"##"],[1,5135,"\n\n"],[1,5364," "],[-1,5364,"\n"]],[5366,5366],[3463,3463]]],[1538462761357,["gjx16@GJXAIOU",[[1,5546,"\n  "]],[5543,5543],[5546,5546]]],[1538462765563,["gjx16@GJXAIOU",[[1,5546,"a1.b;"]],[5546,5546],[5551,5551]]],[1538462766383,["gjx16@GJXAIOU",[[-1,5550,";"]],[5551,5551],[5550,5550]]],[1538462768817,["gjx16@GJXAIOU",[[1,5550," = 2"]],[5550,5550],[5554,5554]]],[1538462769199,["gjx16@GJXAIOU",[[1,5557,"\n  "]],[5554,5554],[5557,5557]]],[1538462770739,["gjx16@GJXAIOU",[[-1,5555,"  "]],[5557,5557],[5555,5555]]],[1538462771082,["gjx16@GJXAIOU",[[-1,5555,"\n"]],[5555,5555],[5554,5554]]],[1538462771914,["gjx16@GJXAIOU",[[1,5554,";"]],[5554,5554],[5555,5555]]],[1538462772227,["gjx16@GJXAIOU",[[1,5558,"\n  "]],[5555,5555],[5558,5558]]],[1538462772939,["gjx16@GJXAIOU",[[-1,5556,"  "],[1,5558,"\n"]],[5558,5558],[5557,5557]]],[1538462820056,["gjx16@GJXAIOU",[[1,5557,"  a2 = a1;//结构体赋值，其实就是"]],[5557,5557],[5579,5579]]],[1538462881288,[null,[[-1,3463,"\n"],[1,3464,"n"],[1,3647,"}"],[-1,3648,""],[-1,3653,"\n"],[-1,4497,"#"],[1,4498,"\n"],[1,4986,"y"],[-1,5008,"\n"],[-1,5099,"#"],[1,5100,"\n"],[1,5118,"##"],[-1,5133,"\n\n"],[-1,5364," "],[1,5365,"\n"]],[3463,3463],[5366,5366]]],[1538462881288,[null,[[1,3463,"\n"],[-1,3463,"n"],[-1,3647,"}"],[1,3649,""],[1,3654,"\n"],[1,4497,"#"],[-1,4497,"\n"],[-1,4986,"y"],[1,5009,"\n"],[1,5099,"#"],[-1,5099,"\n"],[-1,5118,"##"],[1,5135,"\n\n"],[1,5364," "],[-1,5364,"\n"]],[5366,5366],[3463,3463]]],[1538462830889,["gjx16@GJXAIOU",[[1,5579,"结构体之间内存的拷贝"]],[5579,5579],[5589,5589]]],[1538462832505,["gjx16@GJXAIOU",[[1,5592,"\n  "]],[5589,5589],[5592,5592]]],[1538462834083,["gjx16@GJXAIOU",[[1,5592,"。"]],[5592,5592],[5593,5593]]],[1538462835328,["gjx16@GJXAIOU",[[-1,5592,"。"]],[5593,5593],[5592,5592]]],[1538462845138,["gjx16@GJXAIOU",[[1,5592,"//等效于；"]],[5592,5592],[5598,5598]]],[1538462846888,["gjx16@GJXAIOU",[[-1,5597,"；"]],[5598,5598],[5597,5597]]],[1538462851685,["gjx16@GJXAIOU",[[1,5597,"：menc"]],[5597,5597],[5602,5602]]],[1538462852437,["gjx16@GJXAIOU",[[-1,5600,"nc"]],[5602,5602],[5600,5600]]],[1538462858097,["gjx16@GJXAIOU",[[1,5600,"mcpy();"]],[5600,5600],[5607,5607]]],[1538462870374,["gjx16@GJXAIOU",[[1,5605,"&a2,&a1,dizeo"]],[5605,5605],[5618,5618]]],[1538462871953,["gjx16@GJXAIOU",[[-1,5613,"dizeo"]],[5618,5618],[5613,5613]]],[1538462873835,["gjx16@GJXAIOU",[[1,5613,"sizeon"]],[5613,5613],[5619,5619]]],[1538462874707,["gjx16@GJXAIOU",[[-1,5618,"n"]],[5619,5619],[5618,5618]]],[1538462875068,["gjx16@GJXAIOU",[[1,5618,"g"]],[5618,5618],[5619,5619]]],[1538462875509,["gjx16@GJXAIOU",[[-1,5618,"g"]],[5619,5619],[5618,5618]]],[1538462876740,["gjx16@GJXAIOU",[[1,5618,"f("]],[5618,5618],[5620,5620]]],[1538462876846,["gjx16@GJXAIOU",[[1,5621,")"]],[5620,5620],[5621,5621]]],[1538462879995,["gjx16@GJXAIOU",[[1,5620,"a1"]],[5620,5620],[5622,5622]]],[1538462941289,[null,[[-1,3463,"\n"],[1,3464,"n"],[1,3647,"}"],[-1,3648,""],[-1,3653,"\n"],[-1,4497,"#"],[1,4498,"\n"],[1,4986,"y"],[-1,5008,"\n"],[-1,5099,"#"],[1,5100,"\n"],[1,5118,"##"],[-1,5133,"\n\n"],[-1,5364," "],[1,5365,"\n"]],[3463,3463],[5366,5366]]],[1538462941289,[null,[[1,3463,"\n"],[-1,3463,"n"],[-1,3647,"}"],[1,3649,""],[1,3654,"\n"],[1,4497,"#"],[-1,4497,"\n"],[-1,4986,"y"],[1,5009,"\n"],[1,5099,"#"],[-1,5099,"\n"],[-1,5118,"##"],[1,5135,"\n\n"],[1,5364," "],[-1,5364,"\n"]],[5366,5366],[3463,3463]]],[1538462886726,["gjx16@GJXAIOU",[[1,5625,"//mu"]],[5625,5625],[5629,5629]]],[1538462887527,["gjx16@GJXAIOU",[[-1,5627,"mu"]],[5629,5629],[5627,5627]]],[1538462906218,["gjx16@GJXAIOU",[[1,5627,"目标地址，原地址，拷贝长度"]],[5627,5627],[5640,5640]]],[1538463601325,[null,[[-1,3463,"\n"],[1,3464,"n"],[1,3647,"}"],[-1,3648,""],[-1,3653,"\n"],[-1,4497,"#"],[1,4498,"\n"],[1,4986,"y"],[-1,5008,"\n"],[-1,5099,"#"],[1,5100,"\n"],[1,5118,"##"],[-1,5133,"\n\n"],[-1,5364," "],[1,5365,"\n"]],[3463,3463],[5366,5366]]],[1538463601325,[null,[[1,3463,"\n"],[-1,3463,"n"],[-1,3647,"}"],[1,3649,""],[1,3654,"\n"],[1,4497,"#"],[-1,4497,"\n"],[-1,4986,"y"],[1,5009,"\n"],[1,5099,"#"],[-1,5099,"\n"],[-1,5118,"##"],[1,5135,"\n\n"],[1,5364," "],[-1,5364,"\n"]],[5366,5366],[3463,3463]]],[1538463599618,["gjx16@GJXAIOU",[[1,5662,"\n"]],[5658,5658],[5659,5659]]],[1538463600112,["gjx16@GJXAIOU",[[1,5663,"\n"]],[5659,5659],[5660,5660]]],[1538463661311,[null,[[-1,3463,"\n"],[1,3464,"n"],[1,3647,"}"],[-1,3648,""],[-1,3653,"\n"],[-1,4497,"#"],[1,4498,"\n"],[1,4986,"y"],[-1,5008,"\n"],[-1,5099,"#"],[1,5100,"\n"],[1,5118,"##"],[-1,5133,"\n\n"],[-1,5364," "],[1,5365,"\n"]],[3463,3463],[5366,5366]]],[1538463661311,[null,[[1,3463,"\n"],[-1,3463,"n"],[-1,3647,"}"],[1,3649,""],[1,3654,"\n"],[1,4497,"#"],[-1,4497,"\n"],[-1,4986,"y"],[1,5009,"\n"],[1,5099,"#"],[-1,5099,"\n"],[-1,5118,"##"],[1,5135,"\n\n"],[1,5364," "],[-1,5364,"\n"]],[5366,5366],[3463,3463]]],[1538463602226,["gjx16@GJXAIOU",[[1,5660,"****"]],[5660,5660],[5662,5662]]],[1538463608172,["gjx16@GJXAIOU",[[1,5662,"指向结构体的"]],[5662,5662],[5668,5668]]],[1538463612098,["gjx16@GJXAIOU",[[-1,5667,"的"]],[5668,5668],[5667,5667]]],[1538463614249,["gjx16@GJXAIOU",[[1,5667,"ZHIZHEN"]],[5667,5667],[5674,5674]]],[1538463616039,["gjx16@GJXAIOU",[[-1,5667,"ZHIZHEN"]],[5674,5674],[5667,5667]]],[1538463618876,["gjx16@GJXAIOU",[[1,5667,"指针"]],[5667,5667],[5669,5669]]],[1538463623760,["gjx16@GJXAIOU",[[1,5667,"的"]],[5667,5667],[5668,5668]]],[1538463625974,["gjx16@GJXAIOU",[[1,5676,"\n"]],[5672,5672],[5673,5673]]],[1538463626509,["gjx16@GJXAIOU",[[1,5677,"\n"]],[5673,5673],[5674,5674]]],[1538463648411,["gjx16@GJXAIOU",[[1,5674," "]],[5674,5674],[5675,5675]]],[1538463721339,[null,[[-1,3463,"\n"],[1,3464,"n"],[1,3647,"}"],[-1,3648,""],[-1,3653,"\n"],[-1,4497,"#"],[1,4498,"\n"],[1,4986,"y"],[-1,5008,"\n"],[-1,5099,"#"],[1,5100,"\n"],[1,5118,"##"],[-1,5133,"\n\n"],[-1,5364," "],[1,5365,"\n"]],[3463,3463],[5366,5366]]],[1538463721339,[null,[[1,3463,"\n"],[-1,3463,"n"],[-1,3647,"}"],[1,3649,""],[1,3654,"\n"],[1,4497,"#"],[-1,4497,"\n"],[-1,4986,"y"],[1,5009,"\n"],[1,5099,"#"],[-1,5099,"\n"],[-1,5118,"##"],[1,5135,"\n\n"],[1,5364," "],[-1,5364,"\n"]],[5366,5366],[3463,3463]]],[1538463688465,["gjx16@GJXAIOU",[[1,5675," ···"]],[5675,5675],[5679,5679]]],[1538463695933,["gjx16@GJXAIOU",[[-1,5674,"  ···"]],[5679,5679],[5674,5674]]],[1538463696708,["gjx16@GJXAIOU",[[1,5674,"··"]],[5674,5674],[5676,5676]]],[1538463697919,["gjx16@GJXAIOU",[[-1,5674,"··"]],[5676,5676],[5674,5674]]],[1538463698135,["gjx16@GJXAIOU",[[-1,5677,"\n"]],[5674,5674],[5673,5673]]],[1538463699875,["gjx16@GJXAIOU",[[1,5673,"```"]],[5673,5673],[5676,5676]]],[1538463699910,["gjx16@GJXAIOU",[[1,5676,"language\n```\n"]],[5676,5676],[5676,5684]]],[1538463704770,["gjx16@GJXAIOU",[[-1,5676,"language"],[1,5684,"c"]],[5676,5684],[5677,5677]]],[1538463706477,["gjx16@GJXAIOU",[[1,5678,"\n"]],[5677,5677],[5678,5678]]],[1538463713325,["gjx16@GJXAIOU",[[1,5678,"#include<stdio.h>\n\nstruct A \n{\n  int a;\n  char b;\n};\n\nint main()\n{\n struct A a1,a2;\n  a1.a = 1;\n  a1.b = 2;\n\n  a2 = a1;//结构体赋值，其实就是结构体之间内存的拷贝\n  //等效于：memcpy(&a2,&a1,sizeof(a1));//目标地址，原地址，拷贝长度\n  return 0;\n}"]],[5678,5678],[5884,5884]]],[1538463721236,["gjx16@GJXAIOU",[[-1,5782," 2;"]],[5785,5785],[5782,5782]]],[1538463781331,[null,[[-1,3463,"\n"],[1,3464,"n"],[1,3647,"}"],[-1,3648,""],[-1,3653,"\n"],[-1,4497,"#"],[1,4498,"\n"],[1,4986,"y"],[-1,5008,"\n"],[-1,5099,"#"],[1,5100,"\n"],[1,5118,"##"],[-1,5133,"\n\n"],[-1,5364," "],[1,5365,"\n"]],[3463,3463],[5366,5366]]],[1538463781331,[null,[[1,3463,"\n"],[-1,3463,"n"],[-1,3647,"}"],[1,3649,""],[1,3654,"\n"],[1,4497,"#"],[-1,4497,"\n"],[-1,4986,"y"],[1,5009,"\n"],[1,5099,"#"],[-1,5099,"\n"],[-1,5118,"##"],[1,5135,"\n\n"],[1,5364," "],[-1,5364,"\n"]],[5366,5366],[3463,3463]]],[1538463722399,["gjx16@GJXAIOU",[[-1,5774,"  a1.b ="]],[5782,5782],[5774,5774]]],[1538463722454,["gjx16@GJXAIOU",[[-1,5775,"\n"]],[5774,5774],[5773,5773]]],[1538463724707,["gjx16@GJXAIOU",[[-1,5762,"  a1.a = 1;"]],[5773,5773],[5762,5762]]],[1538463725110,["gjx16@GJXAIOU",[[-1,5763,"\n"]],[5762,5762],[5761,5761]]],[1538463726302,["gjx16@GJXAIOU",[[-1,5757,",a2;"]],[5761,5761],[5757,5757]]],[1538463727962,["gjx16@GJXAIOU",[[1,5757,";"]],[5757,5757],[5758,5758]]],[1538463731946,["gjx16@GJXAIOU",[[-1,5762,"a2 = a1;//结构体赋值，其实就是结构体之间内存的拷贝\n  //等效于：memcpy(&a2,&a1,sizeof(a1));//目标地址，原地址，拷贝长度\n  "]],[5759,5843],[5759,5759]]],[1538463736552,["gjx16@GJXAIOU",[[1,5759," strunt"]],[5759,5759],[5766,5766]]],[1538463737645,["gjx16@GJXAIOU",[[-1,5764,"nt"]],[5766,5766],[5764,5764]]],[1538463744469,["gjx16@GJXAIOU",[[1,5764,"ct A a2"]],[5764,5764],[5771,5771]]],[1538463746654,["gjx16@GJXAIOU",[[-1,5769,"a2"]],[5771,5771],[5769,5769]]],[1538463755003,["gjx16@GJXAIOU",[[1,5769,"*p = &a1;"]],[5769,5769],[5778,5778]]],[1538463755615,["gjx16@GJXAIOU",[[1,5780,"\n "]],[5778,5778],[5780,5780]]],[1538463901335,[null,[[-1,3463,"\n"],[1,3464,"n"],[1,3647,"}"],[-1,3648,""],[-1,3653,"\n"],[-1,4497,"#"],[1,4498,"\n"],[1,4986,"y"],[-1,5008,"\n"],[-1,5099,"#"],[1,5100,"\n"],[1,5118,"##"],[-1,5133,"\n\n"],[-1,5364," "],[1,5365,"\n"]],[3463,3463],[5366,5366]]],[1538463901335,[null,[[1,3463,"\n"],[-1,3463,"n"],[-1,3647,"}"],[1,3649,""],[1,3654,"\n"],[1,4497,"#"],[-1,4497,"\n"],[-1,4986,"y"],[1,5009,"\n"],[1,5099,"#"],[-1,5099,"\n"],[-1,5118,"##"],[1,5135,"\n\n"],[1,5364," "],[-1,5364,"\n"]],[5366,5366],[3463,3463]]],[1538463848439,["gjx16@GJXAIOU",[[-1,5779," "],[1,5780,"\n"]],[5780,5780],[5780,5780]]],[1538463851241,["gjx16@GJXAIOU",[[1,5780,"//d"]],[5780,5780],[5783,5783]]],[1538463852070,["gjx16@GJXAIOU",[[-1,5782,"d"]],[5783,5783],[5782,5782]]],[1538463855319,["gjx16@GJXAIOU",[[1,5782,"对执政"]],[5782,5782],[5785,5785]]],[1538463856002,["gjx16@GJXAIOU",[[-1,5783,"执政"]],[5785,5785],[5783,5783]]],[1538463859933,["gjx16@GJXAIOU",[[1,5783,"指针进行赋值"]],[5783,5783],[5789,5789]]],[1538463860352,["gjx16@GJXAIOU",[[1,5790,"\n"]],[5789,5789],[5790,5790]]],[1538463861447,["gjx16@GJXAIOU",[[1,5791,"\n"]],[5790,5790],[5791,5791]]],[1538463866230,["gjx16@GJXAIOU",[[1,5791,"()"]],[5791,5791],[5793,5793]]],[1538463869049,["gjx16@GJXAIOU",[[1,5792,"*p"]],[5792,5792],[5794,5794]]],[1538463881392,["gjx16@GJXAIOU",[[1,5795,".a = 10;"]],[5795,5795],[5803,5803]]],[1538463882414,["gjx16@GJXAIOU",[[1,5804,"\n"]],[5803,5803],[5804,5804]]],[1538463884795,["gjx16@GJXAIOU",[[1,5804,"()"]],[5804,5804],[5806,5806]]],[1538463888405,["gjx16@GJXAIOU",[[1,5805,"*p "]],[5805,5805],[5808,5808]]],[1538463889795,["gjx16@GJXAIOU",[[-1,5807," "]],[5808,5808],[5807,5807]]],[1538463897607,["gjx16@GJXAIOU",[[1,5808,".b = 20;"]],[5808,5808],[5816,5816]]],[1538463898311,["gjx16@GJXAIOU",[[1,5817,"\n"]],[5816,5816],[5817,5817]]],[1538463899519,["gjx16@GJXAIOU",[[1,5818,"\n"]],[5817,5817],[5818,5818]]],[1538464021340,[null,[[-1,3463,"\n"],[1,3464,"n"],[1,3647,"}"],[-1,3648,""],[-1,3653,"\n"],[-1,4497,"#"],[1,4498,"\n"],[1,4986,"y"],[-1,5008,"\n"],[-1,5099,"#"],[1,5100,"\n"],[1,5118,"##"],[-1,5133,"\n\n"],[-1,5364," "],[1,5365,"\n"]],[3463,3463],[5366,5366]]],[1538464021340,[null,[[1,3463,"\n"],[-1,3463,"n"],[-1,3647,"}"],[1,3649,""],[1,3654,"\n"],[1,4497,"#"],[-1,4497,"\n"],[-1,4986,"y"],[1,5009,"\n"],[1,5099,"#"],[-1,5099,"\n"],[-1,5118,"##"],[1,5135,"\n\n"],[1,5364," "],[-1,5364,"\n"]],[5366,5366],[3463,3463]]],[1538463974053,["gjx16@GJXAIOU",[[1,5791,"//"]],[5791,5791],[5793,5793]]],[1538463976511,["gjx16@GJXAIOU",[[1,5806,"//"]],[5806,5806],[5808,5808]]],[1538463982125,["gjx16@GJXAIOU",[[1,5790,"//fangfa"]],[5790,5790],[5798,5798]]],[1538463983372,["gjx16@GJXAIOU",[[-1,5792,"fangfa"]],[5798,5798],[5792,5792]]],[1538463987760,["gjx16@GJXAIOU",[[1,5792,"方法一："]],[5792,5792],[5796,5796]]],[1538463990684,["gjx16@GJXAIOU",[[1,5829,"\n"]],[5827,5827],[5828,5828]]],[1538463992084,["gjx16@GJXAIOU",[[1,5828,"、、"]],[5828,5828],[5830,5830]]],[1538463992951,["gjx16@GJXAIOU",[[-1,5828,"、、"]],[5830,5830],[5828,5828]]],[1538463996356,["gjx16@GJXAIOU",[[1,5828,"//方噶"]],[5828,5828],[5832,5832]]],[1538463997037,["gjx16@GJXAIOU",[[-1,5829,"/方噶"]],[5832,5832],[5829,5829]]],[1538464009429,["gjx16@GJXAIOU",[[1,5829,"/方法二："]],[5829,5829],[5834,5834]]],[1538464010094,["gjx16@GJXAIOU",[[1,5836,"\n"]],[5834,5834],[5835,5835]]],[1538464015652,["gjx16@GJXAIOU",[[1,5835,"【"]],[5835,5835],[5836,5836]]],[1538464016695,["gjx16@GJXAIOU",[[-1,5835,"【"]],[5836,5836],[5835,5835]]],[1538464021074,["gjx16@GJXAIOU",[[1,5835,"p "]],[5835,5835],[5837,5837]]],[1538464081342,[null,[[-1,3463,"\n"],[1,3464,"n"],[1,3647,"}"],[-1,3648,""],[-1,3653,"\n"],[-1,4497,"#"],[1,4498,"\n"],[1,4986,"y"],[-1,5008,"\n"],[-1,5099,"#"],[1,5100,"\n"],[1,5118,"##"],[-1,5133,"\n\n"],[-1,5364," "],[1,5365,"\n"]],[3463,3463],[5366,5366]]],[1538464081342,[null,[[1,3463,"\n"],[-1,3463,"n"],[-1,3647,"}"],[1,3649,""],[1,3654,"\n"],[1,4497,"#"],[-1,4497,"\n"],[-1,4986,"y"],[1,5009,"\n"],[1,5099,"#"],[-1,5099,"\n"],[-1,5118,"##"],[1,5135,"\n\n"],[1,5364," "],[-1,5364,"\n"]],[5366,5366],[3463,3463]]],[1538464022717,["gjx16@GJXAIOU",[[-1,5836," "]],[5837,5837],[5836,5836]]],[1538464030138,["gjx16@GJXAIOU",[[1,5836,"->a = qo"]],[5836,5836],[5844,5844]]],[1538464031189,["gjx16@GJXAIOU",[[-1,5842,"qo"]],[5844,5844],[5842,5842]]],[1538464032983,["gjx16@GJXAIOU",[[1,5842,"10;"]],[5842,5842],[5845,5845]]],[1538464033457,["gjx16@GJXAIOU",[[1,5847,"\n"]],[5845,5845],[5846,5846]]],[1538464043950,["gjx16@GJXAIOU",[[1,5846,"p -"]],[5846,5846],[5849,5849]]],[1538464045150,["gjx16@GJXAIOU",[[-1,5847," -"]],[5849,5849],[5847,5847]]],[1538464048164,["gjx16@GJXAIOU",[[1,5847,"-<"]],[5847,5847],[5849,5849]]],[1538464048893,["gjx16@GJXAIOU",[[-1,5848,"<"]],[5849,5849],[5848,5848]]],[1538464049702,["gjx16@GJXAIOU",[[1,5848,"."]],[5848,5848],[5849,5849]]],[1538464050571,["gjx16@GJXAIOU",[[-1,5848,"."]],[5849,5849],[5848,5848]]],[1538464058482,["gjx16@GJXAIOU",[[1,5848,">b = 10"]],[5848,5848],[5855,5855]]],[1538464059372,["gjx16@GJXAIOU",[[-1,5853,"10"]],[5855,5855],[5853,5853]]],[1538464061154,["gjx16@GJXAIOU",[[1,5853,"20;"]],[5853,5853],[5856,5856]]]],null,"gjx16@GJXAIOU"],["1beab290-8bc9-4874-815b-72a53f6ac384",1538469161094,"# day11 复合类型\n@toc\n\n\n## 一、结构体的定义和成员初始化\n\n```c\n#include<stdio.h>\n#include<string.h>      //这里需要使用strcpy函数\n\nstruct student\n{\n  char name[100];\n  int age;\n  int sex;\n};                   //说明了一个结构体的数据成员类型,注意这里有一个;\n\n\nint main()\n{\n\n\n//法一：先定义然后初始化\n\nstruct student st; //定义了一个结构体的变量（在栈中），名字叫做st\n\n//使用成员变量\n\nst.age = 20;\nst.sex = 0;\nstrcpy(st.name,\"zhangsan\");\nprintf(\"name = %s\\n\",st.name);\n\n\n\n//法二：在定义的同时初始化成员变量\n\nstruct stduent st = {\"zhangsan\",20,1};//这个必须按照顺序依次赋值\nstruct student st = {.age = 20,.name = \"zhangsan\",.sex = 0};//此方法允许自由变换成员变量的位置进行赋值\n\n//法三：通过用户赋值进行初始化\n\nscanf(\"%s\",&st.name);\nscanf(\"%d\",&st.age);\nscanf(\"%d\",&st.sex);\n\n}\n```\n\n---\n\n## 二、结构体成员内存对齐详解\n\n结构体在内存之中一定是一个矩形结构\n\n```c\n\n#include<stdio.h>\n\nstruct neicun\n{\n  int a;\n  char b;\n  char c;\n};\n\nint main()\n{\nstruct neicun duiqi;\nprintf(\"%d\\n\",sizeof(duiqi));  //按照定义中最长的那个对齐 \n}\n```\n\n程序的输出结果为：`8`\n![内存空间对齐1]($resource/%E5%86%85%E5%AD%98%E7%A9%BA%E9%97%B4%E5%AF%B9%E9%BD%901.png)\n\n**结构体中定义变量顺序改变之后**\n```c\n#include<stdio.h>\n\nstruct neicun\n{\n  char a;\n  int b;\n  char c;\n};\n\nint main()\n{\nstruct neicun duiqi;\nprintf(\"%d\\n\",sizeof(duiqi));  //按照定义中最长的那个对齐 \n}\n\n```\n\n程序运行结果：`12`\n\n![内存空间对齐2]($resource/%E5%86%85%E5%AD%98%E7%A9%BA%E9%97%B4%E5%AF%B9%E9%BD%902.png)\n\n**示例**\n\n```c\n#include<stdio.h>\n\nstruct C\n{\n  char a;  //1个字节\n  short b;//空一个字节，然后两个字节\n  char c;//一个字节\n  int d;//另起一行占四个字节\n  long long e;//另起一行占8个字节\n\n}\n\nint main()\n{\nprintf(\"%d\\n\",sizeof(struct C));\n}\n\n```\n\n程序运行结果为：`24`\n\n**示例**\n```c\n#include<stdio.h>\n\nstruct neicun\n{\n  char a;\n  short b;\n  int c;\n  short d;\n};\n\nint main()\n{\nstruct neicun duiqi;\nprintf(\"%d\\n\",sizeof(duiqi));  //按照定义中最长的那个对齐 \n}\n\n```\n程序的运行结果：`12`\n\n![内存空间3]($resource/%E5%86%85%E5%AD%98%E7%A9%BA%E9%97%B43.png)\n\n**实例二**\n```c\n#include<stdio.h>\n\nstruct neicun\n{\n  char array[10];\n  char b;\n  char c;\n  char d;\n  char e;\n  \n};\n\nint main()\n{\n  struct neicun duiqi;\n  printf(\"%d\\n\",sizeof(duiqi));  //按照定义中最长的那个对齐 \n}\n```\n程序输出结果为：`14`  ,不会将整个数组当成一个整体，只是10个char型的数据，所以最大的长度仍然为char\n\n**示例三**\n```c\n\n#include<stdio.h>\n\nstruct neicun\n{\n  int array[10];\n  char b;\n  char c;\n  char d;\n  char e;\n  char f;\n  \n};\n\nint main()\n{\n  struct neicun duiqi;\n  printf(\"%d\\n\",sizeof(duiqi));  //按照定义中最长的那个对齐 \n}\n\n```\n程序输出结果为：`48`\n因为数组中为10个int型数据，所以整个结构体中最大的字节长度为int,所以全部按照int 对齐；\n\n\n---\n\n## 三、结构体成员的位字段\n一般用于嵌入式系统中的状态控制\n\n**例子程序**\n```c\n\n#include<stdio.h>\n\nstruct  D\n{\n  char  a  :  2;  //定义一个成员类型为char  ,但是这个成员只使用2个bit\n  unsigned  char  b  :  4;  \n  //a和b在内存中是连续的地址\n};\n\nint  main()\n{\n  struct  D  lizi;\n  printf(\"sizeof(lizi)  =  %d\\n\",sizeof(lizi));\n  lizi.a  =  3;\n  printf(\"a  =  %d\\n\",lizi.a);\n  lizi.b  =  15;\n  printf(\"b  =  %d\\n\",lizi.b);\n  lizi.b  =  16;\n  printf(\"b xiugaihou  =  %d\\n\",lizi.b);\n\n  return  0;\n}\n\n```\n程序的输出结果为：\n`sizeof(lizi) = 1`//因为内存中最小为一个字节，所以变量lizi还是占一个字节(8位)\n`a = -1`//以为2用二进制表示为11，而第一个1代表符号，因此结果为-1\n`b = 15`//四位能表示15\n`b xiugaihou = 0`//因为16表示为 1 0000 ，可是定义的时候只给b四个字节，因此只能显示0000，结果即为0；\n\n**利用空闲的字节**\n\n```c\n\n#include<stdio.h>\n\nstruct A\n{\n  char a;\n  int b;\n};\n\nint main()\n{\n  struct A kongxian = {1,2};\n  char *p = &kongxian;\n  p++;\n  *p = 3;\n  p++;\n  *p = 4; \n  printf(\"%d\\n\",&kongxian);\n  return 0;\n}\n```\n可以通过程序运行输出的地址查找变量的位置，通过位置查找出内存中变量的具体值，可以看出3和4是在1和2的后面的；\n\n---\n\n\n## 四、结构体数组的定义和使用\n\n**例子程序**\n```c\n#include<stdio.h>\n\nstruct  B\n{\n  char  name[100];\n  unsigned  char  age;//使用无符号的字符类型就行，范围为0-255，完全可以满足数据要求\n  unsigned  char  score;\n};\n\nint  main()\n{\n  struct  B  jiegoutishuzu[5]  =  {{\"zhangsan\",12,90},{\"lisi\",34,98},{\"wangwu\",23,94},{\"zhaoliu\",34,99},{\"zhouqi\",98,100}};  //定义的时候直接赋值\n\n  int  i;\n  for(i  =  0;i  <  5;i++)\n  {\n  printf(\"xingming  =  %s,nianling  =  %d,fengshu  =  %d\\n\",jiegoutishuzu[i].name,jiegoutishuzu[i].age,jiegoutishuzu[i].score);\n  }\n\n  return  0;\n}\n```\n\n程序输出结果：\n`xingming = zhangsan,nianling = 12,fengshu = 90`\n`xingming = lisi,nianling = 34,fengshu = 98`\n`xingming = wangwu,nianling = 23,fengshu = 94`\n`xingming = zhaoliu,nianling = 34,fengshu = 99`\n`xingming = zhouqi,nianling = 98,fengshu = 100`\n\n**和数组相似的用法**\n1.交换结构体中定义数组的元素\n```c\n#include<stdio.h>\n\nstruct  B\n{\n  char  name[100];\n  unsigned  char  age;\n  unsigned  char  score;\n};\n\nint  main()\n{\n  struct  B  jiegoutishuzu[5]  =  {{\"zhangsan\",12,90},{\"lisi\",34,98},{\"wangwu\",23,94},{\"zhaoliu\",34,99},{\"zhouqi\",98,100}}; \n\n//交换结构体中元素的顺序\n\n  struct B tmp = jiegoutishuzu[0];\n  jiegoutishuzu[0] = jiegoutishuzu[1];\n  jiegoutishuzu[1] = tmp;\n  \n  int  i;\n  for(i  =  0;i  <  5;i++)\n  {\n  printf(\"xingming  =  %s,nianling  =  %d,fengshu  =  %d\\n\",jiegoutishuzu[i].name,jiegoutishuzu[i].age,jiegoutishuzu[i].score);\n  }\n\n  return  0;\n}\n\n\n```\n程序运行结果为：\n`xingming  =  lisi,nianling  =  34,fengshu  =  98`\n`xingming  =  zhangsan,nianling  =  12,fengshu  =  90`\n`xingming  =  wangwu,nianling  =  23,fengshu  =  94`\n`xingming  =  zhaoliu,nianling  =  34,fengshu  =  99`\n`xingming  =  zhouqi,nianling  =  98,fengshu  =  100`\n\n\n2.通过结构实现数组的功能\n\n```c\n#include<stdio.h>\n\nstruct  B\n{\n  char  array[100];\n \n};\n\nint  main()\n{\n  struct  B  a1 ={\"hello\"};//如果结构体的成员为数组的，通过结构可以变现的实现数组的赋值  \n  struct  B  a2 ={0};\n  a2 = a1;\n  printf(\"a2.array = %s\\n\",a2.array);\n  return  0;\n}\n```\n程序运行的结果为：`a2.array = hello`\n\n~~==冒泡排序法使用==~~\n3.将上面第一个程序（例子程序）中的数组元素按照年龄进行排序，如果年龄相同则按照分数排序\n\n```c\n\n\n```\n\n\n---\n\n## 五、结构嵌套以及结构和指针\n\n### 1.结构的嵌套\n\n```c\n#include<stdio.h>\n\nstruct A \n{\n  int a;\n  char b;\n};\n\nstruct B\n{\n  struct A a;\n  char b;\n};\n\nint main()\n{\n  printf(\"sizeof(struct B) = %d\\n\",sizeof(struct B));\n  return 0;\n}\n```\n\n 程序运行结果：`sizeof(struct B) = 12`\n \n![结构嵌套]($resource/%E7%BB%93%E6%9E%84%E5%B5%8C%E5%A5%97.png)\n\n\n**结构体之间的赋值**\n\n```c\n#include<stdio.h>\n\nstruct A \n{\n  int a;\n  char b;\n};\n\nint main()\n{\n struct A a1,a2;\n  a1.a = 1;\n  a1.b = 2;\n\n  a2 = a1;//结构体赋值，其实就是结构体之间内存的拷贝\n  //等效于：memcpy(&a2,&a1,sizeof(a1));//目标地址，原地址，拷贝长度\n  return 0;\n}\n```\n\n**指向结构体的指针**\n```c\n#include<stdio.h>\n\nstruct A \n{\n  int a;\n  char b;\n};\n\nint main()\n{\n struct A a1;\n struct A *p = &a1;\n\n//对指针进行赋值\n//方法一：\n//(*p).a = 10;\n//(*p).b = 20;\n\n//方法二：\np->a = 10;\np->b = 20;\n\n  return 0;\n}\n```\n\n\n\n\n",[[1538469147484,["gjx16@GJXAIOU",[[1,5856," "]],[5856,5856],[5857,5857]]],[1538469203861,["gjx16@GJXAIOU",[[1,5881,"\n"]],[5876,5876],[5877,5877]]],[1538469204026,["gjx16@GJXAIOU",[[1,5882,"\n"]],[5877,5877],[5878,5878]]],[1538469204155,["gjx16@GJXAIOU",[[1,5883,"\n"]],[5878,5878],[5879,5879]]],[1538469204529,["gjx16@GJXAIOU",[[1,5884,"\n"]],[5879,5879],[5880,5880]]],[1538469211053,["gjx16@GJXAIOU",[[1,5880,"### 结构体重"]],[5880,5880],[5888,5888]]],[1538469211613,["gjx16@GJXAIOU",[[-1,5887,"重"]],[5888,5888],[5887,5887]]],[1538469219367,["gjx16@GJXAIOU",[[1,5887,"中的数组成员和纸张"]],[5887,5887],[5896,5896]]],[1538469220190,["gjx16@GJXAIOU",[[-1,5894,"纸张"]],[5896,5896],[5894,5894]]],[1538469224199,["gjx16@GJXAIOU",[[1,5894,"指针成员"]],[5894,5894],[5898,5898]]],[1538469224878,["gjx16@GJXAIOU",[[1,5903,"\n"]],[5898,5898],[5899,5899]]],[1538469225055,["gjx16@GJXAIOU",[[1,5904,"\n"]],[5899,5899],[5900,5900]]],[1538469895326,["gjx16@GJXAIOU",[[1,5905,"\n"]],[5899,5899],[5900,5900]]],[1538469896776,["gjx16@GJXAIOU",[[1,5900,"```"]],[5900,5900],[5903,5903]]],[1538469896811,["gjx16@GJXAIOU",[[1,5903,"language\n```\n"]],[5903,5903],[5903,5911]]],[1538469898018,["gjx16@GJXAIOU",[[-1,5903,"language"],[1,5911,"c"]],[5903,5911],[5904,5904]]],[1538469898204,["gjx16@GJXAIOU",[[1,5905,"\n"]],[5904,5904],[5905,5905]]],[1538469904564,["gjx16@GJXAIOU",[[1,5905,"#include<>"]],[5905,5905],[5915,5915]]],[1538469909690,["gjx16@GJXAIOU",[[1,5914,"stdio.h"]],[5914,5914],[5921,5921]]],[1538469911984,["gjx16@GJXAIOU",[[1,5923,"\n"]],[5922,5922],[5923,5923]]],[1538469913674,["gjx16@GJXAIOU",[[1,5923,"3"]],[5923,5923],[5924,5924]]],[1538469915321,["gjx16@GJXAIOU",[[-1,5923,"3"]],[5924,5924],[5923,5923]]],[1538469922700,["gjx16@GJXAIOU",[[1,5923,"#include《》"]],[5923,5923],[5933,5933]]],[1538469923922,["gjx16@GJXAIOU",[[-1,5931,"《》"]],[5933,5933],[5931,5931]]],[1538469924822,["gjx16@GJXAIOU",[[1,5931,"<>"]],[5931,5931],[5933,5933]]],[1538469929573,["gjx16@GJXAIOU",[[1,5932,"string.h"]],[5932,5932],[5940,5940]]],[1538469931166,["gjx16@GJXAIOU",[[1,5942,"\n"]],[5941,5941],[5942,5942]]],[1538469932761,["gjx16@GJXAIOU",[[1,5943,"\n"]],[5942,5942],[5943,5943]]],[1538469935552,["gjx16@GJXAIOU",[[1,5943,"str"]],[5943,5943],[5946,5946]]],[1538469936431,["gjx16@GJXAIOU",[[-1,5943,"str"]],[5946,5946],[5943,5943]]],[1538469938058,["gjx16@GJXAIOU",[[1,5944,"\n"]],[5943,5943],[5944,5944]]],[1538469939915,["gjx16@GJXAIOU",[[1,5944,"int ma"]],[5944,5944],[5950,5950]]],[1538469941107,["gjx16@GJXAIOU",[[1,5951,"n()"]],[5951,5951],[5954,5954]]],[1538469941748,["gjx16@GJXAIOU",[[1,5955,"\n"]],[5954,5954],[5955,5955]]],[1538469942960,["gjx16@GJXAIOU",[[1,5955,"{}"]],[5955,5955],[5957,5957]]],[1538469944316,["gjx16@GJXAIOU",[[1,5956,"\n"]],[5956,5956],[5957,5957]]],[1538469944510,["gjx16@GJXAIOU",[[1,5957,"\n"]],[5957,5957],[5958,5958]]],[1538469944702,["gjx16@GJXAIOU",[[1,5958,"\n"]],[5958,5958],[5959,5959]]],[1538469947353,["gjx16@GJXAIOU",[[1,5957,"  "]],[5957,5957],[5959,5959]]],[1538470060007,[null,[[-1,5950,"\nn()`"],[1,5955,"in()\n"],[1,5963,"`"]],[5950,5950],[5964,5964]]],[1538470060007,[null,[[1,5950,"\nn()`"],[-1,5950,"in()\n"],[-1,5963,"`"]],[5964,5964],[5950,5950]]],[1538470058844,["gjx16@GJXAIOU",[[1,5959,"stru"]],[5959,5959],[5963,5963]]],[1538470120009,[null,[[-1,5950,"\nn()`"],[1,5955,"in()\n"],[1,5967,"`"]],[5950,5950],[5968,5968]]],[1538470120009,[null,[[1,5950,"\nn()`"],[-1,5950,"in()\n"],[-1,5967,"`"]],[5968,5968],[5950,5950]]],[1538470069768,["gjx16@GJXAIOU",[[1,5963,"ct studeng"]],[5963,5963],[5973,5973]]],[1538470070275,["gjx16@GJXAIOU",[[-1,5972,"g"]],[5973,5973],[5972,5972]]],[1538470073235,["gjx16@GJXAIOU",[[1,5972,"t st;"]],[5972,5972],[5977,5977]]],[1538470073774,["gjx16@GJXAIOU",[[1,5978,"  \n"]],[5977,5977],[5980,5980]]],[1538470081581,["gjx16@GJXAIOU",[[1,5980,"st.age = 10;"]],[5980,5980],[5992,5992]]],[1538470082249,["gjx16@GJXAIOU",[[1,5993,"  \n"]],[5992,5992],[5995,5995]]],[1538470087296,["gjx16@GJXAIOU",[[1,5944,"\n"]],[5942,5942],[5943,5943]]],[1538470095497,["gjx16@GJXAIOU",[[1,5943,"struct student"]],[5943,5943],[5957,5957]]],[1538470098767,["gjx16@GJXAIOU",[[1,5959,"\n"]],[5957,5957],[5958,5958]]],[1538470100439,["gjx16@GJXAIOU",[[1,5958,"{}"]],[5958,5958],[5960,5960]]],[1538470101791,["gjx16@GJXAIOU",[[1,5959,"\n"]],[5959,5959],[5960,5960]]],[1538470101981,["gjx16@GJXAIOU",[[1,5960,"\n"]],[5960,5960],[5961,5961]]],[1538470102474,["gjx16@GJXAIOU",[[1,5961,"\n"]],[5961,5961],[5962,5962]]],[1538470111401,["gjx16@GJXAIOU",[[1,5960,"  char name[1000"]],[5960,5960],[5976,5976]]],[1538470112797,["gjx16@GJXAIOU",[[-1,5975,"0"]],[5976,5976],[5975,5975]]],[1538470114902,["gjx16@GJXAIOU",[[1,5975,"];"]],[5975,5975],[5977,5977]]],[1538470116759,["gjx16@GJXAIOU",[[1,5978,"  \n"]],[5977,5977],[5980,5980]]],[1538470119507,["gjx16@GJXAIOU",[[1,5980,"int age"]],[5980,5980],[5987,5987]]],[1538470180008,[null,[[-1,5998,"\nn()`"],[1,6003,"in()\n"],[1,6047,"`"]],[5998,5998],[6048,6048]]],[1538470180008,[null,[[1,5998,"\nn()`"],[-1,5998,"in()\n"],[-1,6047,"`"]],[6048,6048],[5998,5998]]],[1538470120153,["gjx16@GJXAIOU",[[1,5987,";"]],[5987,5987],[5988,5988]]],[1538470123123,["gjx16@GJXAIOU",[[1,5991,";"]],[5991,5991],[5992,5992]]],[1538470125354,["gjx16@GJXAIOU",[[-1,5989,"\n"]],[5989,5989],[5988,5988]]],[1538470147933,["gjx16@GJXAIOU",[[1,5993,"\n"]],[5991,5991],[5992,5992]]],[1538470150529,["gjx16@GJXAIOU",[[1,5992,"str\\\\"]],[5992,5992],[5997,5997]]],[1538470152262,["gjx16@GJXAIOU",[[-1,5992,"str\\\\"]],[5997,5997],[5992,5992]]],[1538470152659,["gjx16@GJXAIOU",[[1,5994,"\n"]],[5992,5992],[5993,5993]]],[1538470154487,["gjx16@GJXAIOU",[[1,5993,"dtru"]],[5993,5993],[5997,5997]]],[1538470155624,["gjx16@GJXAIOU",[[-1,5993,"dtru"]],[5997,5997],[5993,5993]]],[1538470155822,["gjx16@GJXAIOU",[[-1,5994,"\n"]],[5993,5993],[5992,5992]]],[1538470156732,["gjx16@GJXAIOU",[[1,5994,"\n"]],[5992,5992],[5993,5993]]],[1538470161594,["gjx16@GJXAIOU",[[1,5993,"struct su"]],[5993,5993],[6002,6002]]],[1538470162355,["gjx16@GJXAIOU",[[-1,6001,"u"]],[6002,6002],[6001,6001]]],[1538470164609,["gjx16@GJXAIOU",[[1,6001,"tudeng"]],[6001,6001],[6007,6007]]],[1538470165751,["gjx16@GJXAIOU",[[-1,6006,"g"]],[6007,6007],[6006,6006]]],[1538470168739,["gjx16@GJXAIOU",[[1,6006,"t_a"]],[6006,6006],[6009,6009]]],[1538470172667,["gjx16@GJXAIOU",[[1,6011,"\n"]],[6009,6009],[6010,6010]]],[1538470176138,["gjx16@GJXAIOU",[[1,6010,"{};"]],[6010,6010],[6013,6013]]],[1538470178813,["gjx16@GJXAIOU",[[1,6011,"\n"]],[6011,6011],[6012,6012]]],[1538470179028,["gjx16@GJXAIOU",[[1,6012,"\n"]],[6012,6012],[6013,6013]]],[1538470179383,["gjx16@GJXAIOU",[[1,6013,"\n"]],[6013,6013],[6014,6014]]],[1538470240012,[null,[[-1,6024,"\nn()`"],[1,6029,"in()\n"],[1,6073,"`"]],[6024,6024],[6074,6074]]],[1538470240012,[null,[[1,6024,"\nn()`"],[-1,6024,"in()\n"],[-1,6073,"`"]],[6074,6074],[6024,6024]]],[1538470182440,["gjx16@GJXAIOU",[[1,6012,"  "]],[6012,6012],[6014,6014]]],[1538470300016,[null,[[-1,6026,"\nn()`"],[1,6031,"in()\n"],[1,6075,"`"]],[6026,6026],[6076,6076]]],[1538470300016,[null,[[1,6026,"\nn()`"],[-1,6026,"in()\n"],[-1,6075,"`"]],[6076,6076],[6026,6026]]],[1538470248219,["gjx16@GJXAIOU",[[1,6072,"  \n"]],[6068,6068],[6071,6071]]],[1538470261327,["gjx16@GJXAIOU",[[1,6071,"strcpy();"]],[6071,6071],[6080,6080]]],[1538470268003,["gjx16@GJXAIOU",[[1,6078,"st.nae"]],[6078,6078],[6084,6084]]],[1538470268935,["gjx16@GJXAIOU",[[-1,6083,"e"]],[6084,6084],[6083,6083]]],[1538470271437,["gjx16@GJXAIOU",[[1,6083,"me "]],[6083,6083],[6086,6086]]],[1538470272708,["gjx16@GJXAIOU",[[-1,6085," "]],[6086,6086],[6085,6085]]],[1538470275419,["gjx16@GJXAIOU",[[1,6085,",::"]],[6085,6085],[6088,6088]]],[1538470276603,["gjx16@GJXAIOU",[[-1,6086,"::"]],[6088,6088],[6086,6086]]],[1538470277681,["gjx16@GJXAIOU",[[1,6086,"\"\""]],[6086,6086],[6088,6088]]],[1538470283592,["gjx16@GJXAIOU",[[1,6087,"zhangsan"]],[6087,6087],[6095,6095]]],[1538470288941,["gjx16@GJXAIOU",[[1,6102,"  \n"]],[6098,6098],[6101,6101]]],[1538470291009,["gjx16@GJXAIOU",[[-1,6099,"  "],[1,6101,"\n"]],[6101,6101],[6100,6100]]],[1538470297257,["gjx16@GJXAIOU",[[1,6100,"  printf();"]],[6100,6100],[6111,6111]]],[1538470360016,[null,[[-1,6026,"\nn()`"],[1,6031,"in()\n"],[1,6118,"`"]],[6026,6026],[6119,6119]]],[1538470360016,[null,[[1,6026,"\nn()`"],[-1,6026,"in()\n"],[-1,6118,"`"]],[6119,6119],[6026,6026]]],[1538470301256,["gjx16@GJXAIOU",[[1,6109,"\"\""]],[6109,6109],[6111,6111]]],[1538470307518,["gjx16@GJXAIOU",[[1,6110,"%d,%d"]],[6110,6110],[6115,6115]]],[1538470308092,["gjx16@GJXAIOU",[[-1,6114,"d"]],[6115,6115],[6114,6114]]],[1538470309779,["gjx16@GJXAIOU",[[1,6114,"s\\n"]],[6114,6114],[6117,6117]]],[1538470326380,["gjx16@GJXAIOU",[[1,6118,",st.age,st.name"]],[6118,6118],[6133,6133]]],[1538470335259,["gjx16@GJXAIOU",[[1,6139,"  \n"]],[6135,6135],[6138,6138]]],[1538470336524,["gjx16@GJXAIOU",[[-1,6136,"  "],[1,6138,"\n"]],[6138,6138],[6137,6137]]],[1538470351355,["gjx16@GJXAIOU",[[1,6137,"  return 0;"]],[6137,6137],[6148,6148]]],[1538470480019,[null,[[-1,6026,"\nn()`"],[1,6031,"in()\n"],[1,6155,"`"]],[6026,6026],[6156,6156]]],[1538470480019,[null,[[1,6026,"\nn()`"],[-1,6026,"in()\n"],[-1,6155,"`"]],[6156,6156],[6026,6026]]],[1538470426894,["gjx16@GJXAIOU",[[1,6014,"char *name;"]],[6014,6014],[6025,6025]]],[1538470428083,["gjx16@GJXAIOU",[[1,6026,"  \n"]],[6025,6025],[6028,6028]]],[1538470431034,["gjx16@GJXAIOU",[[1,6028,"int age;"]],[6028,6028],[6036,6036]]],[1538470435199,["gjx16@GJXAIOU",[[-1,6037,"\n"]],[6037,6037],[6036,6036]]],[1538470477543,["gjx16@GJXAIOU",[[1,5993,"\n"]],[5992,5992],[5993,5993]]],[1538470540021,[null,[[-1,6048,"\nn()`"],[1,6053,"in()\n"],[1,6177,"`"]],[6048,6048],[6178,6178]]],[1538470540021,[null,[[1,6048,"\nn()`"],[-1,6048,"in()\n"],[-1,6177,"`"]],[6178,6178],[6048,6048]]],[1538470481152,["gjx16@GJXAIOU",[[1,6042,"\n"]],[6041,6041],[6042,6042]]],[1538470491649,["gjx16@GJXAIOU",[[-1,6122,"\n"]],[6122,6122],[6121,6121]]],[1538470600022,[null,[[-1,6049,"\nn()`"],[1,6054,"in()\n"],[1,6177,"`"]],[6049,6049],[6178,6178]]],[1538470600022,[null,[[1,6049,"\nn()`"],[-1,6049,"in()\n"],[-1,6177,"`"]],[6178,6178],[6049,6049]]],[1538470543821,["gjx16@GJXAIOU",[[-1,6174,"\n"]],[6174,6174],[6173,6173]]],[1538470545058,["gjx16@GJXAIOU",[[-1,6171,"  "]],[6173,6173],[6171,6171]]],[1538470545514,["gjx16@GJXAIOU",[[-1,6171,"\n"]],[6171,6171],[6170,6170]]],[1538470560644,["gjx16@GJXAIOU",[[1,6183,"\n"]],[6176,6176],[6177,6177]]],[1538470561381,["gjx16@GJXAIOU",[[1,6184,"\n"]],[6177,6177],[6178,6178]]],[1538470563571,["gjx16@GJXAIOU",[[1,6178,"```"]],[6178,6178],[6181,6181]]],[1538470563608,["gjx16@GJXAIOU",[[1,6181,"language\n```\n"]],[6181,6181],[6181,6189]]],[1538470564532,["gjx16@GJXAIOU",[[-1,6181,"language"],[1,6189,"c"]],[6181,6189],[6182,6182]]],[1538470564921,["gjx16@GJXAIOU",[[1,6183,"\n"]],[6182,6182],[6183,6183]]],[1538470566231,["gjx16@GJXAIOU",[[1,6183,"#include<stdio.h>\n#include<string.h>\n\nstruct student\n{\n  char name[100];\n  int age;\n};\n\n\nstruct student_a\n{\n  char *name;\n  int age;\n};\n\n\nint main()\n{\n  struct student st;\n  st.age = 10;\n  strcpy(st.name,\"zhangsan\");\n  printf(\"%d,%s\\n\",st.age,st.name);\n\n  return 0;\n}"]],[6183,6183],[6450,6450]]],[1538470572107,["gjx16@GJXAIOU",[[-1,5994,"struct student_a\n{\n  char *name;\n  int age;\n};\n"]],[5993,6040],[5993,5993]]],[1538470572594,["gjx16@GJXAIOU",[[-1,5995,"\n"]],[5993,5993],[5992,5992]]],[1538470574307,["gjx16@GJXAIOU",[[-1,5994,"\n"]],[5994,5994],[5993,5993]]],[1538470574484,["gjx16@GJXAIOU",[[-1,5993,"\n"]],[5993,5993],[5992,5992]]],[1538470580322,["gjx16@GJXAIOU",[[-1,6221,"\n"]],[6220,6220],[6219,6219]]],[1538470580673,["gjx16@GJXAIOU",[[-1,6217,"};"]],[6219,6219],[6217,6217]]],[1538470580860,["gjx16@GJXAIOU",[[-1,6218,"\n"]],[6217,6217],[6216,6216]]],[1538470582384,["gjx16@GJXAIOU",[[-1,6206,"  int age;"]],[6216,6216],[6206,6206]]],[1538470582586,["gjx16@GJXAIOU",[[-1,6207,"\n"]],[6206,6206],[6205,6205]]],[1538470586306,["gjx16@GJXAIOU",[[-1,6188,"  char name[100];"]],[6205,6205],[6188,6188]]],[1538470586557,["gjx16@GJXAIOU",[[-1,6189,"\n"]],[6188,6188],[6187,6187]]],[1538470586775,["gjx16@GJXAIOU",[[-1,6186,"{"]],[6187,6187],[6186,6186]]],[1538470586987,["gjx16@GJXAIOU",[[-1,6187,"\n"]],[6186,6186],[6185,6185]]],[1538470591071,["gjx16@GJXAIOU",[[-1,6171,"struct student"]],[6185,6185],[6171,6171]]],[1538470591296,["gjx16@GJXAIOU",[[-1,6172,"\n"]],[6171,6171],[6170,6170]]],[1538470591519,["gjx16@GJXAIOU",[[-1,6171,"\n"]],[6170,6170],[6169,6169]]],[1538470660025,[null,[[-1,5999,"\nn()`"],[1,6004,"in()\n"],[-1,6125,"\n"],[1,6126,"`"],[1,6353,"\n"]],[5999,5999],[6354,6354]]],[1538470660025,[null,[[1,5999,"\nn()`"],[-1,5999,"in()\n"],[1,6125,"\n"],[-1,6125,"`"],[-1,6353,"\n"]],[6354,6354],[5999,5999]]],[1538470626442,["gjx16@GJXAIOU",[[1,6249,"_a"]],[6249,6249],[6251,6251]]],[1538470632546,["gjx16@GJXAIOU",[[1,6254," = {}"]],[6254,6254],[6259,6259]]],[1538470638549,["gjx16@GJXAIOU",[[1,6258,"NULL,0"]],[6258,6258],[6264,6264]]],[1538470720026,[null,[[-1,5999,"\nn()`"],[1,6004,"in()\n"],[-1,6125,"\n"],[1,6126,"`"],[1,6366,"\n"]],[5999,5999],[6367,6367]]],[1538470720026,[null,[[1,5999,"\nn()`"],[-1,5999,"in()\n"],[1,6125,"\n"],[-1,6125,"`"],[-1,6366,"\n"]],[6367,6367],[5999,5999]]],[1538470700209,["gjx16@GJXAIOU",[[1,6266,"//必须赋初值"]],[6266,6266],[6273,6273]]],[1538470709700,["gjx16@GJXAIOU",[[1,6291,"\n  "]],[6288,6288],[6291,6291]]],[1538470718767,["gjx16@GJXAIOU",[[1,6291,"st.name = "]],[6291,6291],[6301,6301]]],[1538470780026,[null,[[-1,5999,"\nn()`"],[1,6004,"in()\n"],[-1,6125,"\n"],[1,6126,"`"],[1,6386,"\n"]],[5999,5999],[6387,6387]]],[1538470780026,[null,[[1,5999,"\nn()`"],[-1,5999,"in()\n"],[1,6125,"\n"],[-1,6125,"`"],[-1,6386,"\n"]],[6387,6387],[5999,5999]]],[1538470729213,["gjx16@GJXAIOU",[[1,6301,"malloc()"]],[6301,6301],[6309,6309]]],[1538470734174,["gjx16@GJXAIOU",[[1,6308,"100"]],[6308,6308],[6311,6311]]],[1538470753297,["gjx16@GJXAIOU",[[1,6312,";//因为内人"]],[6312,6312],[6319,6319]]],[1538470754012,["gjx16@GJXAIOU",[[-1,6317,"内人"]],[6319,6319],[6317,6317]]],[1538470775005,["gjx16@GJXAIOU",[[1,6317,"内容为空值，所以没有空间，需要单独划分"]],[6317,6317],[6336,6336]]],[1538470840031,[null,[[-1,5999,"\nn()`"],[1,6004,"in()\n"],[-1,6125,"\n"],[1,6126,"`"],[1,6421,"\n"]],[5999,5999],[6422,6422]]],[1538470840031,[null,[[1,5999,"\nn()`"],[-1,5999,"in()\n"],[1,6125,"\n"],[-1,6125,"`"],[-1,6421,"\n"]],[6422,6422],[5999,5999]]],[1538470783296,["gjx16@GJXAIOU",[[1,6336,"空间"]],[6336,6336],[6338,6338]]],[1538470789412,["gjx16@GJXAIOU",[[1,6405,"  \n"]],[6404,6404],[6407,6407]]],[1538470790165,["gjx16@GJXAIOU",[[-1,6405,"  "],[1,6407,"\n"]],[6407,6407],[6406,6406]]],[1538470799079,["gjx16@GJXAIOU",[[1,6406,"  free();"]],[6406,6406],[6415,6415]]],[1538470803191,["gjx16@GJXAIOU",[[1,6413,"st,"]],[6413,6413],[6416,6416]]],[1538470804450,["gjx16@GJXAIOU",[[-1,6415,","]],[6416,6416],[6415,6415]]],[1538470809161,["gjx16@GJXAIOU",[[1,6415,".name"]],[6415,6415],[6420,6420]]],[1538471500042,[null,[[-1,5999,"\nn()`"],[1,6004,"in()\n"],[-1,6125,"\n"],[1,6126,"`"],[1,6441,"\n"]],[5999,5999],[6442,6442]]],[1538471500042,[null,[[1,5999,"\nn()`"],[-1,5999,"in()\n"],[1,6125,"\n"],[-1,6125,"`"],[-1,6441,"\n"]],[6442,6442],[5999,5999]]],[1538471458925,["gjx16@GJXAIOU",[[1,6189," "]],[6189,6189],[6190,6190]]],[1538471920043,[null,[[-1,5999,"\nn()`"],[1,6004,"in()\n"],[-1,6125,"\n"],[1,6126,"`"],[1,6442,"\n"]],[5999,5999],[6443,6443]]],[1538471920043,[null,[[1,5999,"\nn()`"],[-1,5999,"in()\n"],[1,6125,"\n"],[-1,6125,"`"],[-1,6442,"\n"]],[6443,6443],[5999,5999]]],[1538471902873,["gjx16@GJXAIOU",[[1,6443,"c"]],[6443,6443],[6444,6444]]],[1538471903458,["gjx16@GJXAIOU",[[-1,6443,"c"]],[6444,6444],[6443,6443]]],[1538471918952,["gjx16@GJXAIOU",[[1,6443,"程序允许结果：`10,zhangsan`"]],[6443,6443],[6463,6463]]],[1538471980044,[null,[[-1,5999,"\nn()`"],[1,6004,"in()\n"],[-1,6125,"\n"],[1,6126,"`"],[1,6463,"\n"]],[5999,5999],[6464,6464]]],[1538471980044,[null,[[1,5999,"\nn()`"],[-1,5999,"in()\n"],[1,6125,"\n"],[-1,6125,"`"],[-1,6463,"\n"]],[6464,6464],[5999,5999]]],[1538471930630,["gjx16@GJXAIOU",[[1,6380,"st.age = "]],[6380,6380],[6389,6389]]],[1538471937654,["gjx16@GJXAIOU",[[1,6392,"st,name"]],[6392,6392],[6399,6399]]],[1538471942719,["gjx16@GJXAIOU",[[1,6467,"st,"]],[6467,6467],[6470,6470]]],[1538471944220,["gjx16@GJXAIOU",[[-1,6469,","]],[6470,6470],[6469,6469]]],[1538471948555,["gjx16@GJXAIOU",[[1,6469,".age = "]],[6469,6469],[6476,6476]]],[1538471954050,["gjx16@GJXAIOU",[[1,6479,"st,"]],[6479,6479],[6482,6482]]],[1538471954939,["gjx16@GJXAIOU",[[-1,6481,","]],[6482,6482],[6481,6481]]],[1538471959296,["gjx16@GJXAIOU",[[1,6481,".name = "]],[6481,6481],[6489,6489]]],[1538472100046,[null,[[-1,5999,"\nn()`"],[1,6004,"in()\n"],[-1,6125,"\n"],[1,6126,"`"],[1,6498,"\n"]],[5999,5999],[6499,6499]]],[1538472100046,[null,[[1,5999,"\nn()`"],[-1,5999,"in()\n"],[1,6125,"\n"],[-1,6125,"`"],[-1,6498,"\n"]],[6499,6499],[5999,5999]]],[1538472043522,["gjx16@GJXAIOU",[[1,6171,"\n"]],[6169,6169],[6170,6170]]],[1538472044153,["gjx16@GJXAIOU",[[1,6170,"#pragma warning(disable : 4996)"]],[6170,6170],[6201,6201]]],[1538472160052,[null,[[-1,5999,"\nn()`"],[1,6004,"in()\n"],[-1,6125,"\n"],[1,6126,"`"],[1,6530,"\n"]],[5999,5999],[6531,6531]]],[1538472160052,[null,[[1,5999,"\nn()`"],[-1,5999,"in()\n"],[1,6125,"\n"],[-1,6125,"`"],[-1,6530,"\n"]],[6531,6531],[5999,5999]]],[1538472124863,["gjx16@GJXAIOU",[[1,6128,"\n"]],[6127,6127],[6128,6128]]],[1538472127142,["gjx16@GJXAIOU",[[1,6128,"****"]],[6128,6128],[6130,6130]]],[1538472128052,["gjx16@GJXAIOU",[[1,6130,"jie"]],[6130,6130],[6133,6133]]],[1538472129364,["gjx16@GJXAIOU",[[-1,6130,"jie"]],[6133,6133],[6130,6130]]],[1538472135266,["gjx16@GJXAIOU",[[1,6130,"接头体"]],[6130,6130],[6133,6133]]],[1538472136276,["gjx16@GJXAIOU",[[-1,6130,"接头体"]],[6133,6133],[6130,6130]]],[1538472150856,["gjx16@GJXAIOU",[[1,6130,"结构体中的指针成员"]],[6130,6130],[6139,6139]]],[1538472156856,["gjx16@GJXAIOU",[[1,6130,"2."]],[6130,6130],[6132,6132]]],[1538472220051,[null,[[-1,5999,"\nn()`"],[1,6004,"in()\n"],[-1,6125,"\n"],[1,6126,"`"],[1,6546,"\n"]],[5999,5999],[6547,6547]]],[1538472220051,[null,[[1,5999,"\nn()`"],[-1,5999,"in()\n"],[1,6125,"\n"],[-1,6125,"`"],[-1,6546,"\n"]],[6547,6547],[5999,5999]]],[1538472161413,["gjx16@GJXAIOU",[[1,5900,"\n"]],[5898,5898],[5899,5899]]],[1538472162931,["gjx16@GJXAIOU",[[1,5901,"\n"]],[5899,5899],[5900,5900]]],[1538472164692,["gjx16@GJXAIOU",[[-1,5901,"\n"]],[5901,5901],[5900,5900]]],[1538472168088,["gjx16@GJXAIOU",[[1,5900,"****"]],[5900,5900],[5902,5902]]],[1538472187864,["gjx16@GJXAIOU",[[1,5902,"1.结构体中的数组成员"]],[5902,5902],[5913,5913]]],[1538472195089,["gjx16@GJXAIOU",[[1,6160,"\n"]],[6159,6159],[6160,6160]]],[1538472201388,["gjx16@GJXAIOU",[[1,6160,"此程序指针"]],[6160,6160],[6165,6165]]],[1538472202456,["gjx16@GJXAIOU",[[-1,6163,"指针"]],[6165,6165],[6163,6163]]],[1538472218809,["gjx16@GJXAIOU",[[1,6163,"只能在VS中跑，在"]],[6163,6163],[6172,6172]]],[1538472236107,[null,[[-1,6015,"\nn()`"],[1,6020,"in()\n"],[-1,6141,"\n"],[1,6142,"`"],[1,6575,"\n"]],[6015,6015],[6576,6576]]],[1538472236107,[null,[[1,6015,"\nn()`"],[-1,6015,"in()\n"],[1,6141,"\n"],[-1,6141,"`"],[-1,6575,"\n"]],[6576,6576],[6015,6015]]],[1538472234284,["gjx16@GJXAIOU",[[1,6172,"Qt中一直报错"]],[6172,6172],[6179,6179]]],[1538472476117,[null,[[-1,6015,"\nn()`"],[1,6020,"in()\n"],[-1,6141,"\n"],[1,6142,"`"],[1,6582,"\n"]],[6015,6015],[6583,6583]]],[1538472476117,[null,[[1,6015,"\nn()`"],[-1,6015,"in()\n"],[1,6141,"\n"],[-1,6141,"`"],[-1,6582,"\n"]],[6583,6583],[6015,6015]]],[1538472422185,["gjx16@GJXAIOU",[[1,5105,"#include<stdio.h>\n\nstruct  B\n{\n  char  name[100];\n  unsigned  char  age;//使用无符号的字符类型就行，范围为0-255，完全可以满足数据要求\n  unsigned  char  score;\n};\n\nint  main()\n{\n  struct  B  jiegoutishuzu[5]  =  {{\"zhangsan\",12,90},{\"lisi\",34,98},{\"wangwu\",23,94},{\"zhaoliu\",34,99},{\"zhouqi\",98,100}};  //定义的时候直接赋值\n\n  int  i;\n  for(i  =  0;i  <  5;i++)\n  {\n  printf(\"xingming  =  %s,nianling  =  %d,fengshu  =  %d\\n\",jiegoutishuzu[i].name,jiegoutishuzu[i].age,jiegoutishuzu[i].score);\n  }\n\n  return  0;\n}"]],[5105,5105],[5581,5581]]],[1538475336872,[null,[[-1,6491,"\nn()`"],[1,6496,"in()\n"],[-1,6617,"\n"],[1,6618,"`"],[1,7058,"\n"]],[6491,6491],[7059,7059]]],[1538475336872,[null,[[1,6491,"\nn()`"],[-1,6491,"in()\n"],[1,6617,"\n"],[-1,6617,"`"],[-1,7058,"\n"]],[7059,7059],[6491,6491]]],[1538475322588,["gjx16@GJXAIOU",[[1,5454,"\n  \n  "]],[5454,5454],[5460,5460]]]],null,"gjx16@GJXAIOU"],["0b420d9f-1553-4179-ac86-72b09ae0c08e",1538477856107,"# day11 复合类型\n@toc\n\n\n## 一、结构体的定义和成员初始化\n\n```c\n#include<stdio.h>\n#include<string.h>      //这里需要使用strcpy函数\n\nstruct student\n{\n  char name[100];\n  int age;\n  int sex;\n};                   //说明了一个结构体的数据成员类型,注意这里有一个;\n\n\nint main()\n{\n\n\n//法一：先定义然后初始化\n\nstruct student st; //定义了一个结构体的变量（在栈中），名字叫做st\n\n//使用成员变量\n\nst.age = 20;\nst.sex = 0;\nstrcpy(st.name,\"zhangsan\");\nprintf(\"name = %s\\n\",st.name);\n\n\n\n//法二：在定义的同时初始化成员变量\n\nstruct stduent st = {\"zhangsan\",20,1};//这个必须按照顺序依次赋值\nstruct student st = {.age = 20,.name = \"zhangsan\",.sex = 0};//此方法允许自由变换成员变量的位置进行赋值\n\n//法三：通过用户赋值进行初始化\n\nscanf(\"%s\",&st.name);\nscanf(\"%d\",&st.age);\nscanf(\"%d\",&st.sex);\n\n}\n```\n\n---\n\n## 二、结构体成员内存对齐详解\n\n结构体在内存之中一定是一个矩形结构\n\n```c\n\n#include<stdio.h>\n\nstruct neicun\n{\n  int a;\n  char b;\n  char c;\n};\n\nint main()\n{\nstruct neicun duiqi;\nprintf(\"%d\\n\",sizeof(duiqi));  //按照定义中最长的那个对齐 \n}\n```\n\n程序的输出结果为：`8`\n![内存空间对齐1]($resource/%E5%86%85%E5%AD%98%E7%A9%BA%E9%97%B4%E5%AF%B9%E9%BD%901.png)\n\n**结构体中定义变量顺序改变之后**\n```c\n#include<stdio.h>\n\nstruct neicun\n{\n  char a;\n  int b;\n  char c;\n};\n\nint main()\n{\nstruct neicun duiqi;\nprintf(\"%d\\n\",sizeof(duiqi));  //按照定义中最长的那个对齐 \n}\n\n```\n\n程序运行结果：`12`\n\n![内存空间对齐2]($resource/%E5%86%85%E5%AD%98%E7%A9%BA%E9%97%B4%E5%AF%B9%E9%BD%902.png)\n\n**示例**\n\n```c\n#include<stdio.h>\n\nstruct C\n{\n  char a;  //1个字节\n  short b;//空一个字节，然后两个字节\n  char c;//一个字节\n  int d;//另起一行占四个字节\n  long long e;//另起一行占8个字节\n\n}\n\nint main()\n{\nprintf(\"%d\\n\",sizeof(struct C));\n}\n\n```\n\n程序运行结果为：`24`\n\n**示例**\n```c\n#include<stdio.h>\n\nstruct neicun\n{\n  char a;\n  short b;\n  int c;\n  short d;\n};\n\nint main()\n{\nstruct neicun duiqi;\nprintf(\"%d\\n\",sizeof(duiqi));  //按照定义中最长的那个对齐 \n}\n\n```\n程序的运行结果：`12`\n\n![内存空间3]($resource/%E5%86%85%E5%AD%98%E7%A9%BA%E9%97%B43.png)\n\n**实例二**\n```c\n#include<stdio.h>\n\nstruct neicun\n{\n  char array[10];\n  char b;\n  char c;\n  char d;\n  char e;\n  \n};\n\nint main()\n{\n  struct neicun duiqi;\n  printf(\"%d\\n\",sizeof(duiqi));  //按照定义中最长的那个对齐 \n}\n```\n程序输出结果为：`14`  ,不会将整个数组当成一个整体，只是10个char型的数据，所以最大的长度仍然为char\n\n**示例三**\n```c\n\n#include<stdio.h>\n\nstruct neicun\n{\n  int array[10];\n  char b;\n  char c;\n  char d;\n  char e;\n  char f;\n  \n};\n\nint main()\n{\n  struct neicun duiqi;\n  printf(\"%d\\n\",sizeof(duiqi));  //按照定义中最长的那个对齐 \n}\n\n```\n程序输出结果为：`48`\n因为数组中为10个int型数据，所以整个结构体中最大的字节长度为int,所以全部按照int 对齐；\n\n\n---\n\n## 三、结构体成员的位字段\n一般用于嵌入式系统中的状态控制\n\n**例子程序**\n```c\n\n#include<stdio.h>\n\nstruct  D\n{\n  char  a  :  2;  //定义一个成员类型为char  ,但是这个成员只使用2个bit\n  unsigned  char  b  :  4;  \n  //a和b在内存中是连续的地址\n};\n\nint  main()\n{\n  struct  D  lizi;\n  printf(\"sizeof(lizi)  =  %d\\n\",sizeof(lizi));\n  lizi.a  =  3;\n  printf(\"a  =  %d\\n\",lizi.a);\n  lizi.b  =  15;\n  printf(\"b  =  %d\\n\",lizi.b);\n  lizi.b  =  16;\n  printf(\"b xiugaihou  =  %d\\n\",lizi.b);\n\n  return  0;\n}\n\n```\n程序的输出结果为：\n`sizeof(lizi) = 1`//因为内存中最小为一个字节，所以变量lizi还是占一个字节(8位)\n`a = -1`//以为2用二进制表示为11，而第一个1代表符号，因此结果为-1\n`b = 15`//四位能表示15\n`b xiugaihou = 0`//因为16表示为 1 0000 ，可是定义的时候只给b四个字节，因此只能显示0000，结果即为0；\n\n**利用空闲的字节**\n\n```c\n\n#include<stdio.h>\n\nstruct A\n{\n  char a;\n  int b;\n};\n\nint main()\n{\n  struct A kongxian = {1,2};\n  char *p = &kongxian;\n  p++;\n  *p = 3;\n  p++;\n  *p = 4; \n  printf(\"%d\\n\",&kongxian);\n  return 0;\n}\n```\n可以通过程序运行输出的地址查找变量的位置，通过位置查找出内存中变量的具体值，可以看出3和4是在1和2的后面的；\n\n---\n\n\n## 四、结构体数组的定义和使用\n\n**例子程序**\n```c\n#include<stdio.h>\n\nstruct  B\n{\n  char  name[100];\n  unsigned  char  age;//使用无符号的字符类型就行，范围为0-255，完全可以满足数据要求\n  unsigned  char  score;\n};\n\nint  main()\n{\n  struct  B  jiegoutishuzu[5]  =  {{\"zhangsan\",12,90},{\"lisi\",34,98},{\"wangwu\",23,94},{\"zhaoliu\",34,99},{\"zhouqi\",98,100}};  //定义的时候直接赋值\n\n  int  i;\n  for(i  =  0;i  <  5;i++)\n  {\n  printf(\"xingming  =  %s,nianling  =  %d,fengshu  =  %d\\n\",jiegoutishuzu[i].name,jiegoutishuzu[i].age,jiegoutishuzu[i].score);\n  }\n\n  return  0;\n}\n```\n\n程序输出结果：\n`xingming = zhangsan,nianling = 12,fengshu = 90`\n`xingming = lisi,nianling = 34,fengshu = 98`\n`xingming = wangwu,nianling = 23,fengshu = 94`\n`xingming = zhaoliu,nianling = 34,fengshu = 99`\n`xingming = zhouqi,nianling = 98,fengshu = 100`\n\n**和数组相似的用法**\n1.交换结构体中定义数组的元素\n```c\n#include<stdio.h>\n\nstruct  B\n{\n  char  name[100];\n  unsigned  char  age;\n  unsigned  char  score;\n};\n\nint  main()\n{\n  struct  B  jiegoutishuzu[5]  =  {{\"zhangsan\",12,90},{\"lisi\",34,98},{\"wangwu\",23,94},{\"zhaoliu\",34,99},{\"zhouqi\",98,100}}; \n\n//交换结构体中元素的顺序\n\n  struct B tmp = jiegoutishuzu[0];\n  jiegoutishuzu[0] = jiegoutishuzu[1];\n  jiegoutishuzu[1] = tmp;\n  \n  int  i;\n  for(i  =  0;i  <  5;i++)\n  {\n  printf(\"xingming  =  %s,nianling  =  %d,fengshu  =  %d\\n\",jiegoutishuzu[i].name,jiegoutishuzu[i].age,jiegoutishuzu[i].score);\n  }\n\n  return  0;\n}\n\n\n```\n程序运行结果为：\n`xingming  =  lisi,nianling  =  34,fengshu  =  98`\n`xingming  =  zhangsan,nianling  =  12,fengshu  =  90`\n`xingming  =  wangwu,nianling  =  23,fengshu  =  94`\n`xingming  =  zhaoliu,nianling  =  34,fengshu  =  99`\n`xingming  =  zhouqi,nianling  =  98,fengshu  =  100`\n\n\n2.通过结构实现数组的功能\n\n```c\n#include<stdio.h>\n\nstruct  B\n{\n  char  array[100];\n \n};\n\nint  main()\n{\n  struct  B  a1 ={\"hello\"};//如果结构体的成员为数组的，通过结构可以变现的实现数组的赋值  \n  struct  B  a2 ={0};\n  a2 = a1;\n  printf(\"a2.array = %s\\n\",a2.array);\n  return  0;\n}\n```\n程序运行的结果为：`a2.array = hello`\n\n~~==冒泡排序法使用==~~\n3.将上面第一个程序（例子程序）中的数组元素按照年龄进行排序，如果年龄相同则按照分数排序\n\n```c\n#include<stdio.h>\n\nstruct  B\n{\n  char  name[100];\n  unsigned  char  age;//使用无符号的字符类型就行，范围为0-255，完全可以满足数据要求\n  unsigned  char  score;\n};\n\nint  main()\n{\n  struct  B  jiegoutishuzu[5]  =  {{\"zhangsan\",12,90},{\"lisi\",34,98},{\"wangwu\",23,94},{\"zhaoliu\",34,99},{\"zhouqi\",98,100}};  //定义的时候直接赋值\n\n  int  i;\n  for(i  =  0;i  <  5;i++)\n  {\n  printf(\"xingming  \n  \n  =  %s,nianling  =  %d,fengshu  =  %d\\n\",jiegoutishuzu[i].name,jiegoutishuzu[i].age,jiegoutishuzu[i].score);\n  }\n\n  return  0;\n}\n\n```\n\n\n---\n\n## 五、结构嵌套以及结构和指针\n\n### 1.结构的嵌套\n\n```c\n#include<stdio.h>\n\nstruct A \n{\n  int a;\n  char b;\n};\n\nstruct B\n{\n  struct A a;\n  char b;\n};\n\nint main()\n{\n  printf(\"sizeof(struct B) = %d\\n\",sizeof(struct B));\n  return 0;\n}\n```\n\n 程序运行结果：`sizeof(struct B) = 12`\n \n![结构嵌套]($resource/%E7%BB%93%E6%9E%84%E5%B5%8C%E5%A5%97.png)\n\n\n**结构体之间的赋值**\n\n```c\n#include<stdio.h>\n\nstruct A \n{\n  int a;\n  char b;\n};\n\nint main()\n{\n struct A a1,a2;\n  a1.a = 1;\n  a1.b = 2;\n\n  a2 = a1;//结构体赋值，其实就是结构体之间内存的拷贝\n  //等效于：memcpy(&a2,&a1,sizeof(a1));//目标地址，原地址，拷贝长度\n  return 0;\n}\n```\n\n**指向结构体的指针**\n```c\n#include<stdio.h>\n\nstruct A \n{\n  int a;\n  char b;\n};\n\nint main()\n{\n struct A a1;\n struct A *p = &a1;\n\n//对指针进行赋值\n//方法一：\n//(*p).a = 10;\n//(*p).b = 20;\n\n//方法二：\np->a = 10;\np->b = 20; \n\n  return 0;\n}\n```\n\n\n\n### 结构体中的数组成员和指针成员\n\n**1.结构体中的数组成员**\n```c\n#include<stdio.h>\n#include<string.h>\n\nstruct student\n{\n  char name[100];\n  int age;\n};\n\nint main()\n{\n  struct student st;\n  st.age = 10;\n  strcpy(st.name,\"zhangsan\");\n  printf(\"%d,%s\\n\",st.age,st.name);\n\n  return 0;\n}\n```\n\n**2.结构体中的指针成员**\n此程序只能在VS中跑，在Qt中一直报错\n```c\n#include<stdio.h>\n#include<string.h>\n#pragma warning(disable : 4996)\n\nstruct student_a\n{ \n  char *name;\n  int age;\n};\n\n\nint main()\n{\n  struct student_a st = {NULL,0};//必须赋初值\n  st.age = 10;\n  st.name = malloc(100);//因为内容为空值，所以没有空间，需要单独划分空间\n  strcpy(st.name,\"zhangsan\");\n  printf(\"st.age = %d,st,name%s\\n\",st.age,st.name);\n\n  free(st.name);\n\n  return 0;\n}\n```\n程序允许结果：`st.age = 10,st.name = zhangsan`\n\n\n\n\n\n\n",[[1538477838370,["gjx16@GJXAIOU",[[-1,5177,"//使用无符号的字符类型就行，范围为0-255，完全可以满足数据要求"]],[5177,5211],[5177,5177]]],[1538477850304,["gjx16@GJXAIOU",[[-1,5424,"  "]],[5426,5426],[5424,5424]]],[1538477850734,["gjx16@GJXAIOU",[[-1,5423,"\n"]],[5424,5424],[5423,5423]]],[1538477851856,["gjx16@GJXAIOU",[[-1,5421,"  "]],[5423,5423],[5421,5421]]],[1538477852379,["gjx16@GJXAIOU",[[-1,5420,"\n"]],[5421,5421],[5420,5420]]],[1538477863851,["gjx16@GJXAIOU",[[-1,5449,"  =  "]],[5454,5454],[5449,5449]]],[1538477869554,["gjx16@GJXAIOU",[[1,5449," = "]],[5449,5449],[5452,5452]]],[1538477994607,["gjx16@GJXAIOU",[[-1,5346,"//定义的时候直接赋值"]],[5346,5357],[5346,5346]]],[1538478044260,["gjx16@GJXAIOU",[[1,5348,"\n"]],[5347,5347],[5348,5348]]],[1538478046156,["gjx16@GJXAIOU",[[1,5348,"int"]],[5348,5348],[5351,5351]]],[1538478047406,["gjx16@GJXAIOU",[[-1,5348,"int"]],[5351,5351],[5348,5348]]],[1538478049888,["gjx16@GJXAIOU",[[1,5348,"  int"]],[5348,5348],[5353,5353]]],[1538478051127,["gjx16@GJXAIOU",[[-1,5350,"int"]],[5353,5353],[5350,5350]]],[1538478053027,["gjx16@GJXAIOU",[[1,5350,"ing"]],[5350,5350],[5353,5353]]],[1538478053571,["gjx16@GJXAIOU",[[-1,5352,"g"]],[5353,5353],[5352,5352]]],[1538478056216,["gjx16@GJXAIOU",[[1,5352,"t img"]],[5352,5352],[5357,5357]]],[1538478057882,["gjx16@GJXAIOU",[[-1,5354,"img"]],[5357,5357],[5354,5354]]],[1538478061620,["gjx16@GJXAIOU",[[1,5354,"min = 0;"]],[5354,5354],[5362,5362]]],[1538478062216,["gjx16@GJXAIOU",[[1,5365,"\n  "]],[5362,5362],[5365,5365]]],[1538478063542,["gjx16@GJXAIOU",[[1,5365,"int"]],[5365,5365],[5368,5368]]],[1538478077916,["gjx16@GJXAIOU",[[1,5368," max = 4;"]],[5368,5368],[5377,5377]]],[1538478083154,["gjx16@GJXAIOU",[[1,5380,"\n  "]],[5377,5377],[5380,5380]]],[1538478090429,["gjx16@GJXAIOU",[[1,5380,"if()"]],[5380,5380],[5384,5384]]],[1538478119724,["gjx16@GJXAIOU",[[1,5383,"jieshu"]],[5383,5383],[5389,5389]]],[1538478121810,["gjx16@GJXAIOU",[[-1,5386,"shu"]],[5389,5389],[5386,5386]]],[1538478123363,["gjx16@GJXAIOU",[[1,5386,"gouti"]],[5386,5386],[5391,5391]]],[1538478140262,["gjx16@GJXAIOU",[[1,5391,"shuzu.age"]],[5391,5391],[5400,5400]]]],null,"gjx16@GJXAIOU"],["6107356d-4227-4271-9e20-befd7bc5bb76",1538536466594,"# day11 复合类型\n@toc\n\n\n## 一、结构体的定义和成员初始化\n\n```c\n#include<stdio.h>\n#include<string.h>      //这里需要使用strcpy函数\n\nstruct student\n{\n  char name[100];\n  int age;\n  int sex;\n};                   //说明了一个结构体的数据成员类型,注意这里有一个;\n\n\nint main()\n{\n\n\n//法一：先定义然后初始化\n\nstruct student st; //定义了一个结构体的变量（在栈中），名字叫做st\n\n//使用成员变量\n\nst.age = 20;\nst.sex = 0;\nstrcpy(st.name,\"zhangsan\");\nprintf(\"name = %s\\n\",st.name);\n\n\n\n//法二：在定义的同时初始化成员变量\n\nstruct stduent st = {\"zhangsan\",20,1};//这个必须按照顺序依次赋值\nstruct student st = {.age = 20,.name = \"zhangsan\",.sex = 0};//此方法允许自由变换成员变量的位置进行赋值\n\n//法三：通过用户赋值进行初始化\n\nscanf(\"%s\",&st.name);\nscanf(\"%d\",&st.age);\nscanf(\"%d\",&st.sex);\n\n}\n```\n\n---\n\n## 二、结构体成员内存对齐详解\n\n结构体在内存之中一定是一个矩形结构\n\n```c\n\n#include<stdio.h>\n\nstruct neicun\n{\n  int a;\n  char b;\n  char c;\n};\n\nint main()\n{\nstruct neicun duiqi;\nprintf(\"%d\\n\",sizeof(duiqi));  //按照定义中最长的那个对齐 \n}\n```\n\n程序的输出结果为：`8`\n![内存空间对齐1]($resource/%E5%86%85%E5%AD%98%E7%A9%BA%E9%97%B4%E5%AF%B9%E9%BD%901.png)\n\n**结构体中定义变量顺序改变之后**\n```c\n#include<stdio.h>\n\nstruct neicun\n{\n  char a;\n  int b;\n  char c;\n};\n\nint main()\n{\nstruct neicun duiqi;\nprintf(\"%d\\n\",sizeof(duiqi));  //按照定义中最长的那个对齐 \n}\n\n```\n\n程序运行结果：`12`\n\n![内存空间对齐2]($resource/%E5%86%85%E5%AD%98%E7%A9%BA%E9%97%B4%E5%AF%B9%E9%BD%902.png)\n\n**示例**\n\n```c\n#include<stdio.h>\n\nstruct C\n{\n  char a;  //1个字节\n  short b;//空一个字节，然后两个字节\n  char c;//一个字节\n  int d;//另起一行占四个字节\n  long long e;//另起一行占8个字节\n\n}\n\nint main()\n{\nprintf(\"%d\\n\",sizeof(struct C));\n}\n\n```\n\n程序运行结果为：`24`\n\n**示例**\n```c\n#include<stdio.h>\n\nstruct neicun\n{\n  char a;\n  short b;\n  int c;\n  short d;\n};\n\nint main()\n{\nstruct neicun duiqi;\nprintf(\"%d\\n\",sizeof(duiqi));  //按照定义中最长的那个对齐 \n}\n\n```\n程序的运行结果：`12`\n\n![内存空间3]($resource/%E5%86%85%E5%AD%98%E7%A9%BA%E9%97%B43.png)\n\n**实例二**\n```c\n#include<stdio.h>\n\nstruct neicun\n{\n  char array[10];\n  char b;\n  char c;\n  char d;\n  char e;\n  \n};\n\nint main()\n{\n  struct neicun duiqi;\n  printf(\"%d\\n\",sizeof(duiqi));  //按照定义中最长的那个对齐 \n}\n```\n程序输出结果为：`14`  ,不会将整个数组当成一个整体，只是10个char型的数据，所以最大的长度仍然为char\n\n**示例三**\n```c\n\n#include<stdio.h>\n\nstruct neicun\n{\n  int array[10];\n  char b;\n  char c;\n  char d;\n  char e;\n  char f;\n  \n};\n\nint main()\n{\n  struct neicun duiqi;\n  printf(\"%d\\n\",sizeof(duiqi));  //按照定义中最长的那个对齐 \n}\n\n```\n程序输出结果为：`48`\n因为数组中为10个int型数据，所以整个结构体中最大的字节长度为int,所以全部按照int 对齐；\n\n\n---\n\n## 三、结构体成员的位字段\n一般用于嵌入式系统中的状态控制\n\n**例子程序**\n```c\n\n#include<stdio.h>\n\nstruct  D\n{\n  char  a  :  2;  //定义一个成员类型为char  ,但是这个成员只使用2个bit\n  unsigned  char  b  :  4;  \n  //a和b在内存中是连续的地址\n};\n\nint  main()\n{\n  struct  D  lizi;\n  printf(\"sizeof(lizi)  =  %d\\n\",sizeof(lizi));\n  lizi.a  =  3;\n  printf(\"a  =  %d\\n\",lizi.a);\n  lizi.b  =  15;\n  printf(\"b  =  %d\\n\",lizi.b);\n  lizi.b  =  16;\n  printf(\"b xiugaihou  =  %d\\n\",lizi.b);\n\n  return  0;\n}\n\n```\n程序的输出结果为：\n`sizeof(lizi) = 1`//因为内存中最小为一个字节，所以变量lizi还是占一个字节(8位)\n`a = -1`//以为2用二进制表示为11，而第一个1代表符号，因此结果为-1\n`b = 15`//四位能表示15\n`b xiugaihou = 0`//因为16表示为 1 0000 ，可是定义的时候只给b四个字节，因此只能显示0000，结果即为0；\n\n**利用空闲的字节**\n\n```c\n\n#include<stdio.h>\n\nstruct A\n{\n  char a;\n  int b;\n};\n\nint main()\n{\n  struct A kongxian = {1,2};\n  char *p = &kongxian;\n  p++;\n  *p = 3;\n  p++;\n  *p = 4; \n  printf(\"%d\\n\",&kongxian);\n  return 0;\n}\n```\n可以通过程序运行输出的地址查找变量的位置，通过位置查找出内存中变量的具体值，可以看出3和4是在1和2的后面的；\n\n---\n\n\n## 四、结构体数组的定义和使用\n\n**例子程序**\n```c\n#include<stdio.h>\n\nstruct  B\n{\n  char  name[100];\n  unsigned  char  age;//使用无符号的字符类型就行，范围为0-255，完全可以满足数据要求\n  unsigned  char  score;\n};\n\nint  main()\n{\n  struct  B  jiegoutishuzu[5]  =  {{\"zhangsan\",12,90},{\"lisi\",34,98},{\"wangwu\",23,94},{\"zhaoliu\",34,99},{\"zhouqi\",98,100}};  //定义的时候直接赋值\n\n  int  i;\n  for(i  =  0;i  <  5;i++)\n  {\n  printf(\"xingming  =  %s,nianling  =  %d,fengshu  =  %d\\n\",jiegoutishuzu[i].name,jiegoutishuzu[i].age,jiegoutishuzu[i].score);\n  }\n\n  return  0;\n}\n```\n\n程序输出结果：\n`xingming = zhangsan,nianling = 12,fengshu = 90`\n`xingming = lisi,nianling = 34,fengshu = 98`\n`xingming = wangwu,nianling = 23,fengshu = 94`\n`xingming = zhaoliu,nianling = 34,fengshu = 99`\n`xingming = zhouqi,nianling = 98,fengshu = 100`\n\n**和数组相似的用法**\n1.交换结构体中定义数组的元素\n```c\n#include<stdio.h>\n\nstruct  B\n{\n  char  name[100];\n  unsigned  char  age;\n  unsigned  char  score;\n};\n\nint  main()\n{\n  struct  B  jiegoutishuzu[5]  =  {{\"zhangsan\",12,90},{\"lisi\",34,98},{\"wangwu\",23,94},{\"zhaoliu\",34,99},{\"zhouqi\",98,100}}; \n\n//交换结构体中元素的顺序\n\n  struct B tmp = jiegoutishuzu[0];\n  jiegoutishuzu[0] = jiegoutishuzu[1];\n  jiegoutishuzu[1] = tmp;\n  \n  int  i;\n  for(i  =  0;i  <  5;i++)\n  {\n  printf(\"xingming  =  %s,nianling  =  %d,fengshu  =  %d\\n\",jiegoutishuzu[i].name,jiegoutishuzu[i].age,jiegoutishuzu[i].score);\n  }\n\n  return  0;\n}\n\n\n```\n程序运行结果为：\n`xingming  =  lisi,nianling  =  34,fengshu  =  98`\n`xingming  =  zhangsan,nianling  =  12,fengshu  =  90`\n`xingming  =  wangwu,nianling  =  23,fengshu  =  94`\n`xingming  =  zhaoliu,nianling  =  34,fengshu  =  99`\n`xingming  =  zhouqi,nianling  =  98,fengshu  =  100`\n\n\n2.通过结构实现数组的功能\n\n```c\n#include<stdio.h>\n\nstruct  B\n{\n  char  array[100];\n \n};\n\nint  main()\n{\n  struct  B  a1 ={\"hello\"};//如果结构体的成员为数组的，通过结构可以变现的实现数组的赋值  \n  struct  B  a2 ={0};\n  a2 = a1;\n  printf(\"a2.array = %s\\n\",a2.array);\n  return  0;\n}\n```\n程序运行的结果为：`a2.array = hello`\n\n~~==冒泡排序法使用==~~\n3.将上面第一个程序（例子程序）中的数组元素按照年龄进行排序，如果年龄相同则按照分数排序\n\n```c\n#include<stdio.h>\n\nstruct  B\n{\n  char  name[100];\n  unsigned  char  age;\n  unsigned  char  score;\n};\n\nint  main()\n{\n  struct  B  jiegoutishuzu[5]  =  {{\"zhangsan\",12,90},{\"lisi\",34,98},{\"wangwu\",23,94},{\"zhaoliu\",34,99},{\"zhouqi\",98,100}};  \n\n  int min = 0;\n  int max = 4;\n  if(jiegoutishuzu.age)\n  int  i;\n  for(i  =  0;i  <  5;i++)\n  {\n  printf(\"xingming  =  %s,nianling  =  %d,fengshu = %d\\n\",jiegoutishuzu[i].name,jiegoutishuzu[i].age,jiegoutishuzu[i].score);\n  }\n\n  return  0;\n}\n\n```\n\n\n---\n\n## 五、结构嵌套以及结构和指针\n\n### 1.结构的嵌套\n\n```c\n#include<stdio.h>\n\nstruct A \n{\n  int a;\n  char b;\n};\n\nstruct B\n{\n  struct A a;\n  char b;\n};\n\nint main()\n{\n  printf(\"sizeof(struct B) = %d\\n\",sizeof(struct B));\n  return 0;\n}\n```\n\n 程序运行结果：`sizeof(struct B) = 12`\n \n![结构嵌套]($resource/%E7%BB%93%E6%9E%84%E5%B5%8C%E5%A5%97.png)\n\n\n**结构体之间的赋值**\n\n```c\n#include<stdio.h>\n\nstruct A \n{\n  int a;\n  char b;\n};\n\nint main()\n{\n struct A a1,a2;\n  a1.a = 1;\n  a1.b = 2;\n\n  a2 = a1;//结构体赋值，其实就是结构体之间内存的拷贝\n  //等效于：memcpy(&a2,&a1,sizeof(a1));//目标地址，原地址，拷贝长度\n  return 0;\n}\n```\n\n**指向结构体的指针**\n```c\n#include<stdio.h>\n\nstruct A \n{\n  int a;\n  char b;\n};\n\nint main()\n{\n struct A a1;\n struct A *p = &a1;\n\n//对指针进行赋值\n//方法一：\n//(*p).a = 10;\n//(*p).b = 20;\n\n//方法二：\np->a = 10;\np->b = 20; \n\n  return 0;\n}\n```\n\n\n\n### 结构体中的数组成员和指针成员\n\n**1.结构体中的数组成员**\n```c\n#include<stdio.h>\n#include<string.h>\n\nstruct student\n{\n  char name[100];\n  int age;\n};\n\nint main()\n{\n  struct student st;\n  st.age = 10;\n  strcpy(st.name,\"zhangsan\");\n  printf(\"%d,%s\\n\",st.age,st.name);\n\n  return 0;\n}\n```\n\n**2.结构体中的指针成员**\n此程序只能在VS中跑，在Qt中一直报错\n```c\n#include<stdio.h>\n#include<string.h>\n#pragma warning(disable : 4996)\n\nstruct student_a\n{ \n  char *name;\n  int age;\n};\n\n\nint main()\n{\n  struct student_a st = {NULL,0};//必须赋初值\n  st.age = 10;\n  st.name = malloc(100);//因为内容为空值，所以没有空间，需要单独划分空间\n  strcpy(st.name,\"zhangsan\");\n  printf(\"st.age = %d,st,name%s\\n\",st.age,st.name);\n\n  free(st.name);\n\n  return 0;\n}\n```\n程序允许结果：`st.age = 10,st.name = zhangsan`\n\n\n\n\n\n\n",[[1538536451032,["gjx16@GJXAIOU",[[1,5124,"* "]],[5133,5133],[5135,5135]]],[1538536455655,["gjx16@GJXAIOU",[[-1,5124,"* "]],[5135,5135],[5133,5133]]],[1538549308987,["gjx16@GJXAIOU",[[1,5207,"\n"]],[5206,5206],[5207,5207]]],[1538549322684,["gjx16@GJXAIOU",[[1,5207,"vodi"]],[5207,5207],[5211,5211]]],[1538549323762,["gjx16@GJXAIOU",[[-1,5209,"di"]],[5211,5211],[5209,5209]]],[1538549331756,["gjx16@GJXAIOU",[[1,5209,"id swap()"]],[5209,5209],[5218,5218]]],[1538549336120,["gjx16@GJXAIOU",[[1,5217,"struct"]],[5217,5217],[5223,5223]]],[1538549358114,["gjx16@GJXAIOU",[[1,5223," B *a,strucr"]],[5223,5223],[5235,5235]]],[1538549359028,["gjx16@GJXAIOU",[[-1,5234,"r"]],[5235,5235],[5234,5234]]],[1538549364450,["gjx16@GJXAIOU",[[1,5234,"t B *b"]],[5234,5234],[5240,5240]]],[1538549367554,["gjx16@GJXAIOU",[[1,5242,"\n"]],[5241,5241],[5242,5242]]],[1538549370323,["gjx16@GJXAIOU",[[1,5242,"{}"]],[5242,5242],[5244,5244]]],[1538549371856,["gjx16@GJXAIOU",[[1,5243,"\n"]],[5243,5243],[5244,5244]]],[1538549372596,["gjx16@GJXAIOU",[[1,5244,"\n"]],[5244,5244],[5245,5245]]],[1538549385744,["gjx16@GJXAIOU",[[1,5244,"  struct "]],[5244,5244],[5253,5253]]],[1538549446372,["gjx16@GJXAIOU",[[1,5253,"B tmp = *a;"]],[5253,5253],[5264,5264]]],[1538549446784,["gjx16@GJXAIOU",[[1,5265,"  \n"]],[5264,5264],[5267,5267]]],[1538549451553,["gjx16@GJXAIOU",[[1,5267,"*a = *b;"]],[5267,5267],[5275,5275]]],[1538549451932,["gjx16@GJXAIOU",[[1,5276,"  \n"]],[5275,5275],[5278,5278]]],[1538549456935,["gjx16@GJXAIOU",[[1,5278,"*b = t"]],[5278,5278],[5284,5284]]],[1538549457169,["gjx16@GJXAIOU",[[1,5284,"o"]],[5284,5284],[5285,5285]]],[1538549457848,["gjx16@GJXAIOU",[[-1,5284,"o"]],[5285,5285],[5284,5284]]],[1538549459710,["gjx16@GJXAIOU",[[1,5284,"mp;"]],[5284,5284],[5287,5287]]],[1538549464833,["gjx16@GJXAIOU",[[1,5290,"\n"]],[5289,5289],[5290,5290]]],[1538549464999,["gjx16@GJXAIOU",[[1,5291,"\n"]],[5290,5290],[5291,5291]]],[1538549469012,["gjx16@GJXAIOU",[[1,5207,"\n"]],[5206,5206],[5207,5207]]],[1538549472875,["gjx16@GJXAIOU",[[1,5242,"  "]],[5242,5242],[5244,5244]]],[1538549474830,["gjx16@GJXAIOU",[[-1,5243," "]],[5244,5244],[5243,5243]]],[1538549496103,["gjx16@GJXAIOU",[[1,5207,"//函数功能：交换两个元素位置"]],[5207,5207],[5222,5222]]],[1538549511252,["gjx16@GJXAIOU",[[-1,5456,"min = 0;"]],[5464,5464],[5456,5456]]],[1538549514484,["gjx16@GJXAIOU",[[1,5456,"i;"]],[5456,5456],[5458,5458]]],[1538549519496,["gjx16@GJXAIOU",[[-1,5465,"max = 4;"]],[5473,5473],[5465,5465]]],[1538549521005,["gjx16@GJXAIOU",[[1,5465,"j;"]],[5465,5465],[5467,5467]]],[1538549547358,["gjx16@GJXAIOU",[[1,5490,"for"]],[5490,5490],[5493,5493]]],[1538549551132,["gjx16@GJXAIOU",[[-1,5468,"  if(jiegoutishuzu.agefor"]],[5493,5493],[5468,5468]]],[1538549551196,["gjx16@GJXAIOU",[[-1,5467,"\n"]],[5468,5468],[5467,5467]]],[1538549551855,["gjx16@GJXAIOU",[[-1,5459,"  int j;"]],[5467,5467],[5459,5459]]],[1538549551919,["gjx16@GJXAIOU",[[-1,5458,"\n"]],[5459,5459],[5458,5458]]],[1538549553228,["gjx16@GJXAIOU",[[-1,5458,")"]],[5459,5459],[5458,5458]]],[1538549558645,["gjx16@GJXAIOU",[[-1,5465," i"]],[5467,5467],[5465,5465]]],[1538549559941,["gjx16@GJXAIOU",[[1,5465,"j"]],[5465,5465],[5466,5466]]],[1538549571070,["gjx16@GJXAIOU",[[-1,5500," printf(\"xingming  =  %s,nianling  =  %d,fengshu = %d\\n\",jiegoutishuzu[i].name,jiegoutishuzu[i].age,jiegoutishuzu[i].score);"]],[5500,5624],[5500,5500]]],[1538549576660,["gjx16@GJXAIOU",[[1,5500,"    for()"]],[5500,5500],[5509,5509]]],[1538549590230,["gjx16@GJXAIOU",[[1,5508,"j = 1; j< 5;"]],[5508,5508],[5520,5520]]],[1538549592162,["gjx16@GJXAIOU",[[-1,5519,";"]],[5520,5520],[5519,5519]]],[1538549598750,["gjx16@GJXAIOU",[[1,5519,"-i; j++"]],[5519,5519],[5526,5526]]],[1538549602119,["gjx16@GJXAIOU",[[1,5530,"   \n  "]],[5527,5527],[5533,5533]]],[1538549603755,["gjx16@GJXAIOU",[[1,5533,"\"\""]],[5533,5533],[5535,5535]]],[1538549604719,["gjx16@GJXAIOU",[[-1,5533,"\"\""]],[5535,5535],[5533,5533]]],[1538549607170,["gjx16@GJXAIOU",[[1,5533,"{}"]],[5533,5533],[5535,5535]]],[1538549609761,["gjx16@GJXAIOU",[[1,5534,"\n     \n     \n     "]],[5534,5534],[5552,5552]]],[1538549632151,["gjx16@GJXAIOU",[[1,5540,"  if "]],[5540,5540],[5545,5545]]],[1538549638160,["gjx16@GJXAIOU",[[1,5545,"()"]],[5545,5545],[5547,5547]]],[1538549641032,["gjx16@GJXAIOU",[[-1,5544," "]],[5545,5545],[5544,5544]]],[1538549653818,["gjx16@GJXAIOU",[[1,5545,"jiegoutishuzu[i"]],[5545,5545],[5560,5560]]],[1538549655104,["gjx16@GJXAIOU",[[-1,5559,"i"]],[5560,5560],[5559,5559]]],[1538549657609,["gjx16@GJXAIOU",[[1,5559,"j] "]],[5559,5559],[5562,5562]]],[1538549658469,["gjx16@GJXAIOU",[[-1,5561," "]],[5562,5562],[5561,5561]]],[1538549668735,["gjx16@GJXAIOU",[[1,5561,".age < jiegoutishuzu."]],[5561,5561],[5582,5582]]],[1538549669711,["gjx16@GJXAIOU",[[-1,5581,"."]],[5582,5582],[5581,5581]]],[1538549672984,["gjx16@GJXAIOU",[[1,5581,"[j="]],[5581,5581],[5584,5584]]],[1538549674782,["gjx16@GJXAIOU",[[-1,5583,"="]],[5584,5584],[5583,5583]]],[1538549685516,["gjx16@GJXAIOU",[[1,5583,"-1].age"]],[5583,5583],[5590,5590]]],[1538549688531,["gjx16@GJXAIOU",[[1,5597,"  \n     "]],[5591,5591],[5599,5599]]],[1538549690089,["gjx16@GJXAIOU",[[1,5599,"{}"]],[5599,5599],[5601,5601]]],[1538549694463,["gjx16@GJXAIOU",[[1,5600,"\n       \n       \n       1"]],[5600,5600],[5625,5625]]],[1538549695794,["gjx16@GJXAIOU",[[-1,5624,"1"]],[5625,5625],[5624,5624]]],[1538549709062,["gjx16@GJXAIOU",[[1,5608,"  swap()"]],[5608,5608],[5616,5616]]],[1538549716470,["gjx16@GJXAIOU",[[1,5615,"&s"]],[5615,5615],[5617,5617]]],[1538549717257,["gjx16@GJXAIOU",[[-1,5616,"s"]],[5617,5617],[5616,5616]]],[1538549729438,["gjx16@GJXAIOU",[[1,5616,"jiegoutishuzu[j]."]],[5616,5616],[5633,5633]]],[1538549731590,["gjx16@GJXAIOU",[[-1,5632,"."]],[5633,5633],[5632,5632]]],[1538549737317,["gjx16@GJXAIOU",[[1,5632,",jiet"]],[5632,5632],[5637,5637]]],[1538549737935,["gjx16@GJXAIOU",[[-1,5636,"t"]],[5637,5637],[5636,5636]]],[1538549748113,["gjx16@GJXAIOU",[[1,5636,"goutishuzu.[j-1]"]],[5636,5636],[5652,5652]]],[1538549756885,["gjx16@GJXAIOU",[[-1,5659,"  "]],[5661,5661],[5659,5659]]],[1538549757876,["gjx16@GJXAIOU",[[-1,5654,"     "]],[5659,5659],[5654,5654]]],[1538549758069,["gjx16@GJXAIOU",[[-1,5654,"\n"]],[5654,5654],[5653,5653]]],[1538549770676,["gjx16@GJXAIOU",[[1,5662,"else if()"]],[5662,5662],[5671,5671]]],[1538549776760,["gjx16@GJXAIOU",[[1,5662,"\n       "]],[5662,5662],[5670,5670]]],[1538549786331,["gjx16@GJXAIOU",[[1,5678,"jiegoutishuzupj]"]],[5678,5678],[5694,5694]]],[1538549787230,["gjx16@GJXAIOU",[[-1,5692,"j]"]],[5694,5694],[5692,5692]]],[1538549794182,["gjx16@GJXAIOU",[[1,5692,"[j] ++"]],[5692,5692],[5698,5698]]],[1538549795260,["gjx16@GJXAIOU",[[-1,5696,"++"]],[5698,5698],[5696,5696]]],[1538549795961,["gjx16@GJXAIOU",[[1,5696,"==="]],[5696,5696],[5699,5699]]],[1538549797290,["gjx16@GJXAIOU",[[-1,5698,"="]],[5699,5699],[5698,5698]]],[1538549809076,["gjx16@GJXAIOU",[[1,5698," jiegoutishuzu[j-1]"]],[5698,5698],[5717,5717]]],[1538549812542,["gjx16@GJXAIOU",[[1,5724,"  \n     "]],[5718,5718],[5726,5726]]],[1538549813820,["gjx16@GJXAIOU",[[1,5726,"\""]],[5726,5726],[5727,5727]]],[1538549814793,["gjx16@GJXAIOU",[[-1,5726,"\""]],[5727,5727],[5726,5726]]],[1538549816245,["gjx16@GJXAIOU",[[1,5726,"{}"]],[5726,5726],[5728,5728]]],[1538549817866,["gjx16@GJXAIOU",[[1,5727,"\n       \n       "]],[5727,5727],[5743,5743]]],[1538549829124,["gjx16@GJXAIOU",[[1,5735,"  if()"]],[5735,5735],[5741,5741]]],[1538549864786,["gjx16@GJXAIOU",[[1,5740,"jiegoutishuzu[j].score < jiegoutishuzu[j-1["]],[5740,5740],[5783,5783]]],[1538549865735,["gjx16@GJXAIOU",[[-1,5782,"["]],[5783,5783],[5782,5782]]],[1538549874035,["gjx16@GJXAIOU",[[1,5782,"].score"]],[5782,5782],[5789,5789]]],[1538549876894,["gjx16@GJXAIOU",[[1,5798,"  \n       "]],[5790,5790],[5800,5800]]],[1538549887123,["gjx16@GJXAIOU",[[1,5800,"{}"]],[5800,5800],[5802,5802]]],[1538549888580,["gjx16@GJXAIOU",[[1,5801,"\n         \n         "]],[5801,5801],[5821,5821]]],[1538549899284,["gjx16@GJXAIOU",[[1,5811,"  swap();"]],[5811,5811],[5820,5820]]],[1538549902499,["gjx16@GJXAIOU",[[1,5653,";"]],[5653,5653],[5654,5654]]],[1538549934369,["gjx16@GJXAIOU",[[1,5819,"&jiegoutishuzu[j],&jiegoutishuzu[j-1]"]],[5819,5819],[5856,5856]]],[1538549955299,["gjx16@GJXAIOU",[[1,5896,"  printf(0;"]],[5896,5896],[5907,5907]]],[1538549956584,["gjx16@GJXAIOU",[[-1,5904,"(0;"]],[5907,5907],[5904,5904]]],[1538549958331,["gjx16@GJXAIOU",[[1,5904,"();"]],[5904,5904],[5907,5907]]],[1538549961967,["gjx16@GJXAIOU",[[1,5905,"\"\""]],[5905,5905],[5907,5907]]],[1538549990121,["gjx16@GJXAIOU",[[1,5906,"paixujou"]],[5906,5906],[5914,5914]]],[1538549990856,["gjx16@GJXAIOU",[[-1,5911,"jou"]],[5914,5914],[5911,5911]]],[1538549996922,["gjx16@GJXAIOU",[[1,5911,"hou ="]],[5911,5911],[5916,5916]]],[1538550004033,["gjx16@GJXAIOU",[[1,5916," %s\\n"]],[5916,5916],[5921,5921]]],[1538550007916,["gjx16@GJXAIOU",[[1,5898,"\n  "]],[5895,5895],[5898,5898]]],[1538550011263,["gjx16@GJXAIOU",[[1,5898,"for()"]],[5898,5898],[5903,5903]]],[1538550031120,["gjx16@GJXAIOU",[[1,5902,"k = 0; k < 5; k++"]],[5902,5902],[5919,5919]]],[1538550034453,["gjx16@GJXAIOU",[[1,5898,"\n  "]],[5895,5895],[5898,5898]]],[1538550034651,["gjx16@GJXAIOU",[[-1,5896,"  "],[1,5898,"\n"]],[5898,5898],[5897,5897]]],[1538550036699,["gjx16@GJXAIOU",[[1,5897,"int "]],[5897,5897],[5901,5901]]],[1538550037816,["gjx16@GJXAIOU",[[-1,5897,"int "]],[5901,5901],[5897,5897]]],[1538550040622,["gjx16@GJXAIOU",[[1,5897,"  int k;"]],[5897,5897],[5905,5905]]],[1538550050855,["gjx16@GJXAIOU",[[1,5933,"{\n  "]],[5933,5933],[5937,5937]]],[1538550054572,["gjx16@GJXAIOU",[[1,5966,"}\n  "]],[5966,5966],[5970,5970]]],[1538550065939,["gjx16@GJXAIOU",[[1,5961,"jiegoutishuzu[k]"]],[5961,5961],[5977,5977]]],[1538555121336,["gjx16@GJXAIOU",[[1,5105,"/*\n\n将结构体成员st中按照年龄排序，年龄相同安排分数排序\n\n*/\n\n"],[1,5134,"\n"],[1,5136,"\n"],[-1,5149,"10"],[1,5151,"2"],[1,5154,"\n"],[1,5178,"\n"],[1,5203,"\n"],[-1,5207,"//函数功能：交换两个元素位置\n"],[1,5227," "],[1,5240," "],[1,5241," "],[1,5245,"  "],[1,5251," "],[1,5254," "],[-1,5257," "],[1,5258,"\n"],[1,5260,"\n"],[1,5269," "],[1,5272," "],[1,5275," "],[1,5278," "],[1,5281,"\n"],[1,5286," "],[1,5289," "],[1,5292,"\n"],[1,5298," "],[1,5299," "],[-1,5305,"}"],[1,5307,"}"],[1,5321,"\n"],[1,5323,"\n"],[-1,5336,"jiegoutishuzu"],[1,5349,"st"],[1,5358,"  "],[1,5444,"  "],[-1,5446,"  "],[1,5456," "],[1,5458,"\n"],[1,5465," "],[1,5467,"\n"],[1,5473,"  "],[1,5482,"  "],[1,5490,"  "],[1,5495,"\n"],[-1,5499,"   "],[1,5502,"\n"],[1,5507,"  "],[1,5510," "],[1,5511," "],[1,5515," "],[1,5516,"  "],[1,5518," "],[1,5519,"  "],[1,5520,"  "],[1,5522," "],[1,5527,"\n"],[-1,5530,"   "],[-1,5535,"   "],[1,5538,"\n"],[1,5540,"if"],[-1,5542,"if(jiegoutishuzu"],[1,5558,"(st"],[1,5566," "],[-1,5568,"jiegoutishuzu"],[1,5581," st"],[1,5583,"  "],[1,5584,"  "],[-1,5592,"    "],[1,5596,"\n"],[-1,5598," "],[-1,5601,"       "],[1,5608,"\n"],[-1,5616,"jiegoutishuzu"],[1,5629,"st"],[-1,5633,"jiegoutishuzu."],[1,5647,"  &st"],[1,5649,"  "],[1,5650,"  "],[-1,5655,"     "],[1,5660,"\n"],[-1,5664,"     "],[1,5669,"\n"],[1,5676," "],[-1,5678,"(jiegoutishuzup"],[1,5693,"  (st"],[1,5696,".age "],[-1,5700,"jiegoutishuzu"],[1,5713," st"],[1,5715,"  "],[1,5716,"  "],[1,5718,".age"],[-1,5720,"     "],[1,5725,"\n"],[1,5729,"\n"],[-1,5731,"       if(jiegoutishuzu"],[1,5754,"if  (st"],[1,5764," "],[-1,5766,"jiegoutishuzu"],[1,5779," st"],[1,5781,"  "],[1,5782,"  "],[-1,5792,"       "],[1,5799,"\n"],[-1,5803,"         "],[1,5812,"\n"],[-1,5820,"jiegoutishuzu"],[1,5833,"st"],[-1,5837,"&jiegoutishuzu"],[1,5851,"  &st"],[1,5853,"  "],[1,5854,"  "],[-1,5859,"       "],[1,5866,"\n"],[1,5869,"\n"],[-1,5872,"     "],[-1,5879,"     "],[-1,5885,"   "],[1,5891,"\n"],[1,5903," "],[1,5905,"\n"],[1,5914," "],[1,5915," "],[1,5919," "],[1,5920," "],[1,5922," "],[1,5926," "],[1,5930,"\n"],[1,5934,"\n"],[-1,5945,"paixuhou"],[1,5953,"st[%d].name  =  %s,st[%d].age  =  %d,st[%d].score "],[1,5955," "],[-1,5957,"s\\n\"jiegoutishuzu"],[1,5974,"d\\n\",  k,  st[k].name,  k,  st[k].age,  k,  st"],[1,5977,".score"],[1,5979,"\n"],[1,5984,"\n"],[-1,5997,"}"],[1,5999,"}"]],[5105,5999],[6015,6015]]],[1538555126889,["gjx16@GJXAIOU",[[-1,5136,"\n"]],[5136,5136],[5135,5135]]],[1538555127810,["gjx16@GJXAIOU",[[-1,5108,"\n"]],[5108,5108],[5107,5107]]],[1538555168618,["gjx16@GJXAIOU",[[-1,5157,"\n"]],[5157,5157],[5156,5156]]],[1538555169929,["gjx16@GJXAIOU",[[-1,5167,"\n"]],[5167,5167],[5166,5166]]],[1538555170814,["gjx16@GJXAIOU",[[-1,5169,"\n"]],[5169,5169],[5168,5168]]],[1538555171493,["gjx16@GJXAIOU",[[-1,5187,"\n"]],[5187,5187],[5186,5186]]],[1538555172367,["gjx16@GJXAIOU",[[-1,5210,"\n"]],[5210,5210],[5209,5209]]],[1538555173248,["gjx16@GJXAIOU",[[-1,5235,"\n"]],[5235,5235],[5234,5234]]],[1538555174753,["gjx16@GJXAIOU",[[-1,5281,"\n"]],[5281,5281],[5280,5280]]],[1538555175573,["gjx16@GJXAIOU",[[-1,5283,"\n"]],[5283,5283],[5282,5282]]],[1538555178323,["gjx16@GJXAIOU",[[1,5239,"\n"]],[5238,5238],[5239,5239]]],[1538555179714,["gjx16@GJXAIOU",[[-1,5309,"\n"]],[5309,5309],[5308,5308]]],[1538555180313,["gjx16@GJXAIOU",[[-1,5324," "]],[5325,5325],[5324,5324]]],[1538555181859,["gjx16@GJXAIOU",[[1,5324," "]],[5324,5324],[5325,5325]]],[1538555183450,["gjx16@GJXAIOU",[[-1,5322,"\n"]],[5322,5322],[5321,5321]]],[1538555184401,["gjx16@GJXAIOU",[[-1,5336,"\n"]],[5336,5336],[5335,5335]]],[1538555188139,["gjx16@GJXAIOU",[[1,5339,"\n"]],[5338,5338],[5339,5339]]],[1538555188426,["gjx16@GJXAIOU",[[1,5340,"\n"]],[5339,5339],[5340,5340]]],[1538555190486,["gjx16@GJXAIOU",[[-1,5353,"\n"]],[5353,5353],[5352,5352]]],[1538555192200,["gjx16@GJXAIOU",[[-1,5355,"\n"]],[5355,5355],[5354,5354]]],[1538555193196,["gjx16@GJXAIOU",[[-1,5483,"\n"]],[5483,5483],[5482,5482]]],[1538555193852,["gjx16@GJXAIOU",[[-1,5493,"\n"]],[5493,5493],[5492,5492]]],[1538555194588,["gjx16@GJXAIOU",[[-1,5526,"\n"]],[5526,5526],[5525,5525]]],[1538555195222,["gjx16@GJXAIOU",[[-1,5530,"\n"]],[5530,5530],[5529,5529]]],[1538555196200,["gjx16@GJXAIOU",[[-1,5569,"\n"]],[5569,5569],[5568,5568]]],[1538555197202,["gjx16@GJXAIOU",[[-1,5573,"\n"]],[5573,5573],[5572,5572]]],[1538555197832,["gjx16@GJXAIOU",[[-1,5611,"\n"]],[5611,5611],[5610,5610]]],[1538555198824,["gjx16@GJXAIOU",[[-1,5615,"\n"]],[5615,5615],[5614,5614]]],[1538555199530,["gjx16@GJXAIOU",[[-1,5646,"\n "]],[5646,5648],[5646,5646]]],[1538555202224,["gjx16@GJXAIOU",[[1,5646,"\n "]],[5646,5646],[5646,5648]]],[1538555204776,["gjx16@GJXAIOU",[[-1,5646,"\n"]],[5646,5646],[5645,5645]]],[1538555206247,["gjx16@GJXAIOU",[[-1,5696,"\n"]],[5696,5696],[5695,5695]]],[1538555207098,["gjx16@GJXAIOU",[[-1,5700,"\n"]],[5700,5700],[5699,5699]]],[1538555208422,["gjx16@GJXAIOU",[[-1,5742,"\n"]],[5742,5742],[5741,5741]]],[1538555209293,["gjx16@GJXAIOU",[[-1,5650,"\n"]],[5650,5650],[5649,5649]]],[1538555210629,["gjx16@GJXAIOU",[[-1,5745,"\n"]],[5745,5745],[5744,5744]]],[1538555212368,["gjx16@GJXAIOU",[[-1,5776,"\n"]],[5776,5776],[5775,5775]]],[1538555215261,["gjx16@GJXAIOU",[[1,5532,"  "]],[5532,5532],[5534,5534]]],[1538555216980,["gjx16@GJXAIOU",[[1,5573,"  "]],[5572,5572],[5574,5574]]],[1538555217200,["gjx16@GJXAIOU",[[1,5575,"  "]],[5574,5574],[5576,5576]]],[1538555219309,["gjx16@GJXAIOU",[[1,5581,"      "]],[5580,5580],[5586,5586]]],[1538555221120,["gjx16@GJXAIOU",[[1,5625,"    "]],[5625,5625],[5629,5629]]],[1538555224406,["gjx16@GJXAIOU",[[1,5633,"      "]],[5632,5632],[5638,5638]]],[1538555226406,["gjx16@GJXAIOU",[[1,5629,"    "]],[5629,5629],[5633,5633]]],[1538555227801,["gjx16@GJXAIOU",[[1,5643,"    "]],[5642,5642],[5646,5646]]],[1538555230529,["gjx16@GJXAIOU",[[1,5678,"          "]],[5677,5677],[5687,5687]]],[1538555232994,["gjx16@GJXAIOU",[[-1,5686,"  "]],[5687,5687],[5685,5685]]],[1538555237815,["gjx16@GJXAIOU",[[1,5690,"      "]],[5688,5688],[5694,5694]]],[1538555240793,["gjx16@GJXAIOU",[[1,5741,"          "]],[5740,5740],[5750,5750]]],[1538555243894,["gjx16@GJXAIOU",[[-1,5749,"  "]],[5750,5750],[5748,5748]]],[1538555248323,["gjx16@GJXAIOU",[[1,5753,"          "]],[5753,5753],[5763,5763]]],[1538555252040,["gjx16@GJXAIOU",[[1,5805,"            "]],[5805,5805],[5817,5817]]],[1538555255530,["gjx16@GJXAIOU",[[1,5821,"              "]],[5821,5821],[5835,5835]]],[1538555258557,["gjx16@GJXAIOU",[[1,5866,"            "]],[5865,5865],[5877,5877]]],[1538555263442,["gjx16@GJXAIOU",[[1,5883,"        "]],[5881,5881],[5889,5889]]],[1538555271106,["gjx16@GJXAIOU",[[1,5896,"    "]],[5896,5896],[5900,5900]]],[1538555277463,["gjx16@GJXAIOU",[[1,5893,"  "]],[5893,5893],[5895,5895]]],[1538555279689,["gjx16@GJXAIOU",[[-1,5893,"  "]],[5895,5895],[5893,5893]]],[1538555280164,["gjx16@GJXAIOU",[[-1,5893,"\n"]],[5893,5893],[5892,5892]]],[1538555283547,["gjx16@GJXAIOU",[[-1,5880,"\n"]],[5880,5880],[5879,5879]]],[1538555286454,["gjx16@GJXAIOU",[[-1,5900,"\n"]],[5900,5900],[5899,5899]]],[1538555289857,["gjx16@GJXAIOU",[[-1,5915,"\n"]],[5915,5915],[5914,5914]]],[1538555290765,["gjx16@GJXAIOU",[[-1,5946,"\n"]],[5946,5946],[5945,5945]]],[1538555291747,["gjx16@GJXAIOU",[[-1,5950,"\n"]],[5950,5950],[5949,5949]]],[1538555292760,["gjx16@GJXAIOU",[[-1,6073,"\n"]],[6073,6073],[6072,6072]]],[1538555296926,["gjx16@GJXAIOU",[[1,5952,"  "]],[5952,5952],[5954,5954]]],[1538555297933,["gjx16@GJXAIOU",[[1,5948,"  "]],[5947,5947],[5949,5949]]],[1538555299261,["gjx16@GJXAIOU",[[1,6079,"  "]],[6077,6077],[6079,6079]]],[1538555310442,["gjx16@GJXAIOU",[[1,5956,"  "]],[5955,5955],[5957,5957]]],[1538555318494,["gjx16@GJXAIOU",[[-1,5730," "]],[5731,5731],[5730,5730]]],[1538555319781,["gjx16@GJXAIOU",[[-1,5727," "]],[5727,5727],[5726,5726]]],[1538555320949,["gjx16@GJXAIOU",[[-1,5790," "]],[5790,5790],[5789,5789]]],[1538555321651,["gjx16@GJXAIOU",[[-1,5787," "]],[5787,5787],[5786,5786]]],[1538555322768,["gjx16@GJXAIOU",[[-1,5854," "]],[5855,5855],[5854,5854]]],[1538555323468,["gjx16@GJXAIOU",[[-1,5873,"}"]],[5874,5874],[5873,5873]]],[1538555324798,["gjx16@GJXAIOU",[[-1,5851," "]],[5851,5851],[5850,5850]]],[1538555326685,["gjx16@GJXAIOU",[[1,5851," "]],[5850,5850],[5851,5851]]],[1538555327139,["gjx16@GJXAIOU",[[1,5873,"}"]],[5873,5873],[5874,5874]]],[1538555340433,["gjx16@GJXAIOU",[[-1,5038,"~~==冒泡排序法使用==~~"]],[5053,5053],[5038,5038]]]],null,"gjx16@GJXAIOU"],["d55abd3a-3941-4734-afed-cddbf2b7f8ea",1538725994742,"# day11 复合类型\n@toc\n\n\n## 一、结构体的定义和成员初始化\n\n```c\n#include<stdio.h>\n#include<string.h>      //这里需要使用strcpy函数\n\nstruct student\n{\n  char name[100];\n  int age;\n  int sex;\n};                   //说明了一个结构体的数据成员类型,注意这里有一个;\n\n\nint main()\n{\n\n\n//法一：先定义然后初始化\n\nstruct student st; //定义了一个结构体的变量（在栈中），名字叫做st\n\n//使用成员变量\n\nst.age = 20;\nst.sex = 0;\nstrcpy(st.name,\"zhangsan\");\nprintf(\"name = %s\\n\",st.name);\n\n\n\n//法二：在定义的同时初始化成员变量\n\nstruct stduent st = {\"zhangsan\",20,1};//这个必须按照顺序依次赋值\nstruct student st = {.age = 20,.name = \"zhangsan\",.sex = 0};//此方法允许自由变换成员变量的位置进行赋值\n\n//法三：通过用户赋值进行初始化\n\nscanf(\"%s\",&st.name);\nscanf(\"%d\",&st.age);\nscanf(\"%d\",&st.sex);\n\n}\n```\n\n---\n\n## 二、结构体成员内存对齐详解\n\n结构体在内存之中一定是一个矩形结构\n\n```c\n\n#include<stdio.h>\n\nstruct neicun\n{\n  int a;\n  char b;\n  char c;\n};\n\nint main()\n{\nstruct neicun duiqi;\nprintf(\"%d\\n\",sizeof(duiqi));  //按照定义中最长的那个对齐 \n}\n```\n\n程序的输出结果为：`8`\n![内存空间对齐1]($resource/%E5%86%85%E5%AD%98%E7%A9%BA%E9%97%B4%E5%AF%B9%E9%BD%901.png)\n\n**结构体中定义变量顺序改变之后**\n```c\n#include<stdio.h>\n\nstruct neicun\n{\n  char a;\n  int b;\n  char c;\n};\n\nint main()\n{\nstruct neicun duiqi;\nprintf(\"%d\\n\",sizeof(duiqi));  //按照定义中最长的那个对齐 \n}\n\n```\n\n程序运行结果：`12`\n\n![内存空间对齐2]($resource/%E5%86%85%E5%AD%98%E7%A9%BA%E9%97%B4%E5%AF%B9%E9%BD%902.png)\n\n**示例**\n\n```c\n#include<stdio.h>\n\nstruct C\n{\n  char a;  //1个字节\n  short b;//空一个字节，然后两个字节\n  char c;//一个字节\n  int d;//另起一行占四个字节\n  long long e;//另起一行占8个字节\n\n}\n\nint main()\n{\nprintf(\"%d\\n\",sizeof(struct C));\n}\n\n```\n\n程序运行结果为：`24`\n\n**示例**\n```c\n#include<stdio.h>\n\nstruct neicun\n{\n  char a;\n  short b;\n  int c;\n  short d;\n};\n\nint main()\n{\nstruct neicun duiqi;\nprintf(\"%d\\n\",sizeof(duiqi));  //按照定义中最长的那个对齐 \n}\n\n```\n程序的运行结果：`12`\n\n![内存空间3]($resource/%E5%86%85%E5%AD%98%E7%A9%BA%E9%97%B43.png)\n\n**实例二**\n```c\n#include<stdio.h>\n\nstruct neicun\n{\n  char array[10];\n  char b;\n  char c;\n  char d;\n  char e;\n  \n};\n\nint main()\n{\n  struct neicun duiqi;\n  printf(\"%d\\n\",sizeof(duiqi));  //按照定义中最长的那个对齐 \n}\n```\n程序输出结果为：`14`  ,不会将整个数组当成一个整体，只是10个char型的数据，所以最大的长度仍然为char\n\n**示例三**\n```c\n\n#include<stdio.h>\n\nstruct neicun\n{\n  int array[10];\n  char b;\n  char c;\n  char d;\n  char e;\n  char f;\n  \n};\n\nint main()\n{\n  struct neicun duiqi;\n  printf(\"%d\\n\",sizeof(duiqi));  //按照定义中最长的那个对齐 \n}\n\n```\n程序输出结果为：`48`\n因为数组中为10个int型数据，所以整个结构体中最大的字节长度为int,所以全部按照int 对齐；\n\n\n---\n\n## 三、结构体成员的位字段\n一般用于嵌入式系统中的状态控制\n\n**例子程序**\n```c\n\n#include<stdio.h>\n\nstruct  D\n{\n  char  a  :  2;  //定义一个成员类型为char  ,但是这个成员只使用2个bit\n  unsigned  char  b  :  4;  \n  //a和b在内存中是连续的地址\n};\n\nint  main()\n{\n  struct  D  lizi;\n  printf(\"sizeof(lizi)  =  %d\\n\",sizeof(lizi));\n  lizi.a  =  3;\n  printf(\"a  =  %d\\n\",lizi.a);\n  lizi.b  =  15;\n  printf(\"b  =  %d\\n\",lizi.b);\n  lizi.b  =  16;\n  printf(\"b xiugaihou  =  %d\\n\",lizi.b);\n\n  return  0;\n}\n\n```\n程序的输出结果为：\n`sizeof(lizi) = 1`//因为内存中最小为一个字节，所以变量lizi还是占一个字节(8位)\n`a = -1`//以为2用二进制表示为11，而第一个1代表符号，因此结果为-1\n`b = 15`//四位能表示15\n`b xiugaihou = 0`//因为16表示为 1 0000 ，可是定义的时候只给b四个字节，因此只能显示0000，结果即为0；\n\n**利用空闲的字节**\n\n```c\n\n#include<stdio.h>\n\nstruct A\n{\n  char a;\n  int b;\n};\n\nint main()\n{\n  struct A kongxian = {1,2};\n  char *p = &kongxian;\n  p++;\n  *p = 3;\n  p++;\n  *p = 4; \n  printf(\"%d\\n\",&kongxian);\n  return 0;\n}\n```\n可以通过程序运行输出的地址查找变量的位置，通过位置查找出内存中变量的具体值，可以看出3和4是在1和2的后面的；\n\n---\n\n\n## 四、结构体数组的定义和使用\n\n**例子程序**\n```c\n#include<stdio.h>\n\nstruct  B\n{\n  char  name[100];\n  unsigned  char  age;//使用无符号的字符类型就行，范围为0-255，完全可以满足数据要求\n  unsigned  char  score;\n};\n\nint  main()\n{\n  struct  B  jiegoutishuzu[5]  =  {{\"zhangsan\",12,90},{\"lisi\",34,98},{\"wangwu\",23,94},{\"zhaoliu\",34,99},{\"zhouqi\",98,100}};  //定义的时候直接赋值\n\n  int  i;\n  for(i  =  0;i  <  5;i++)\n  {\n  printf(\"xingming  =  %s,nianling  =  %d,fengshu  =  %d\\n\",jiegoutishuzu[i].name,jiegoutishuzu[i].age,jiegoutishuzu[i].score);\n  }\n\n  return  0;\n}\n```\n\n程序输出结果：\n`xingming = zhangsan,nianling = 12,fengshu = 90`\n`xingming = lisi,nianling = 34,fengshu = 98`\n`xingming = wangwu,nianling = 23,fengshu = 94`\n`xingming = zhaoliu,nianling = 34,fengshu = 99`\n`xingming = zhouqi,nianling = 98,fengshu = 100`\n\n**和数组相似的用法**\n1.交换结构体中定义数组的元素\n```c\n#include<stdio.h>\n\nstruct  B\n{\n  char  name[100];\n  unsigned  char  age;\n  unsigned  char  score;\n};\n\nint  main()\n{\n  struct  B  jiegoutishuzu[5]  =  {{\"zhangsan\",12,90},{\"lisi\",34,98},{\"wangwu\",23,94},{\"zhaoliu\",34,99},{\"zhouqi\",98,100}}; \n\n//交换结构体中元素的顺序\n\n  struct B tmp = jiegoutishuzu[0];\n  jiegoutishuzu[0] = jiegoutishuzu[1];\n  jiegoutishuzu[1] = tmp;\n  \n  int  i;\n  for(i  =  0;i  <  5;i++)\n  {\n  printf(\"xingming  =  %s,nianling  =  %d,fengshu  =  %d\\n\",jiegoutishuzu[i].name,jiegoutishuzu[i].age,jiegoutishuzu[i].score);\n  }\n\n  return  0;\n}\n\n\n```\n程序运行结果为：\n`xingming  =  lisi,nianling  =  34,fengshu  =  98`\n`xingming  =  zhangsan,nianling  =  12,fengshu  =  90`\n`xingming  =  wangwu,nianling  =  23,fengshu  =  94`\n`xingming  =  zhaoliu,nianling  =  34,fengshu  =  99`\n`xingming  =  zhouqi,nianling  =  98,fengshu  =  100`\n\n\n2.通过结构实现数组的功能\n\n```c\n#include<stdio.h>\n\nstruct  B\n{\n  char  array[100];\n \n};\n\nint  main()\n{\n  struct  B  a1 ={\"hello\"};//如果结构体的成员为数组的，通过结构可以变现的实现数组的赋值  \n  struct  B  a2 ={0};\n  a2 = a1;\n  printf(\"a2.array = %s\\n\",a2.array);\n  return  0;\n}\n```\n程序运行的结果为：`a2.array = hello`\n\n\n3.将上面第一个程序（例子程序）中的数组元素按照年龄进行排序，如果年龄相同则按照分数排序\n\n```c\n/*\n将结构体成员st中按照年龄排序，年龄相同安排分数排序\n*/\n\n#include<stdio.h>\nstruct  B\n{\n  char  name[20];\n  unsigned  char  age;\n  unsigned  char  score;\n};\n\n\nvoid  swap(struct  B  *a,  struct  B  *b)\n{\n  struct  B  tmp  =  *a;\n  *a  =  *b;\n  *b  =  tmp;\n}\n\n\n\nint  main()\n{\n  struct  B  st[5]  =  {  {\"zhangsan\",12,90},{\"lisi\",34,98},{\"wangwu\",23,94},{\"zhaoliu\",34,99},{\"zhouqi\",98,100}  };\n\n  int  i;\n  int  j;\n  for  (i  =  0;  i  <  5;  i++)\n  {\n    for  (j  =  1;  j  <  5  -  i;  j++)\n      {\n        if  (st[j].age  <  st[j  -  1].age)\n          {\n            swap(&st[j],  &st[j  -  1]);\n          }\n        else  if  (st[j].age  ==  st[j - 1].age)\n          {\n            if  (st[j].score  <  st[j - 1].score)\n              {\n                swap(&st[j],  &st[j  - 1]);\n              }\n          }\n      }\n  }\n\n  int  k;\n  for(k  =  0;  k  <  5;  k++)\n    {\n      printf(\"st[%d].name  =  %s,st[%d].age  =  %d,st[%d].score  =  %d\\n\",  k,  st[k].name,  k,  st[k].age,  k,  st[k].score);\n    }\n\n  return  0;\n\n}\n```\n\n\n---\n\n## 五、结构嵌套以及结构和指针\n\n### 1.结构的嵌套\n\n```c\n#include<stdio.h>\n\nstruct A \n{\n  int a;\n  char b;\n};\n\nstruct B\n{\n  struct A a;\n  char b;\n};\n\nint main()\n{\n  printf(\"sizeof(struct B) = %d\\n\",sizeof(struct B));\n  return 0;\n}\n```\n\n 程序运行结果：`sizeof(struct B) = 12`\n \n![结构嵌套]($resource/%E7%BB%93%E6%9E%84%E5%B5%8C%E5%A5%97.png)\n\n\n**结构体之间的赋值**\n\n```c\n#include<stdio.h>\n\nstruct A \n{\n  int a;\n  char b;\n};\n\nint main()\n{\n struct A a1,a2;\n  a1.a = 1;\n  a1.b = 2;\n\n  a2 = a1;//结构体赋值，其实就是结构体之间内存的拷贝\n  //等效于：memcpy(&a2,&a1,sizeof(a1));//目标地址，原地址，拷贝长度\n  return 0;\n}\n```\n\n**指向结构体的指针**\n```c\n#include<stdio.h>\n\nstruct A \n{\n  int a;\n  char b;\n};\n\nint main()\n{\n struct A a1;\n struct A *p = &a1;\n\n//对指针进行赋值\n//方法一：\n//(*p).a = 10;\n//(*p).b = 20;\n\n//方法二：\np->a = 10;\np->b = 20; \n\n  return 0;\n}\n```\n\n\n\n### 结构体中的数组成员和指针成员\n\n**1.结构体中的数组成员**\n```c\n#include<stdio.h>\n#include<string.h>\n\nstruct student\n{\n  char name[100];\n  int age;\n};\n\nint main()\n{\n  struct student st;\n  st.age = 10;\n  strcpy(st.name,\"zhangsan\");\n  printf(\"%d,%s\\n\",st.age,st.name);\n\n  return 0;\n}\n```\n\n**2.结构体中的指针成员**\n此程序只能在VS中跑，在Qt中一直报错\n```c\n#include<stdio.h>\n#include<string.h>\n#pragma warning(disable : 4996)\n\nstruct student_a\n{ \n  char *name;\n  int age;\n};\n\n\nint main()\n{\n  struct student_a st = {NULL,0};//必须赋初值\n  st.age = 10;\n  st.name = malloc(100);//因为内容为空值，所以没有空间，需要单独划分空间\n  strcpy(st.name,\"zhangsan\");\n  printf(\"st.age = %d,st,name%s\\n\",st.age,st.name);\n\n  free(st.name);\n\n  return 0;\n}\n```\n程序允许结果：`st.age = 10,st.name = zhangsan`\n\n\n\n\n\n\n",[[1538725974625,["gjx16@GJXAIOU",[[1,1435,"\n"]],[1434,1434],[1435,1435]]],[1538725978206,["gjx16@GJXAIOU",[[1,1435,"****"]],[1435,1435],[1437,1437]]],[1538725981747,["gjx16@GJXAIOU",[[1,1437,"欧数为"]],[1437,1437],[1440,1440]]],[1538725982879,["gjx16@GJXAIOU",[[-1,1438,"*欧数为"]],[1440,1440],[1436,1436]]],[1538725985683,["gjx16@GJXAIOU",[[1,1438,"***"]],[1436,1436],[1437,1437]]],[1538725988635,["gjx16@GJXAIOU",[[-1,1439,"**"]],[1437,1437],[1435,1435]]],[1538725993078,["gjx16@GJXAIOU",[[1,1437,"偶数位"]],[1437,1437],[1440,1440]]],[1538726054741,[null,[[-1,1440,"欧"],[1,1441,"*"]],[1440,1440],[1442,1442]]],[1538726054741,[null,[[1,1440,"欧"],[-1,1440,"*"]],[1442,1442],[1440,1440]]],[1538725994807,["gjx16@GJXAIOU",[[1,1440,"对齐"]],[1440,1440],[1442,1442]]],[1538726009420,["gjx16@GJXAIOU",[[1,1435,"===="]],[1435,1435],[1437,1437]]],[1538726010860,["gjx16@GJXAIOU",[[-1,1437,"=="]],[1437,1437],[1435,1435]]],[1538726014217,["gjx16@GJXAIOU",[[1,1446,"===="]],[1446,1446],[1448,1448]]],[1538726015715,["gjx16@GJXAIOU",[[-1,1448,"=="]],[1448,1448],[1446,1446]]],[1538726654751,[null,[[-1,1444,"欧"],[1,1445,"*"]],[1444,1444],[1446,1446]]],[1538726654751,[null,[[1,1444,"欧"],[-1,1444,"*"]],[1446,1446],[1444,1444]]],[1538726596664,["gjx16@GJXAIOU",[[1,6249,"\n"]],[6248,6248],[6249,6249]]],[1538726647173,["gjx16@GJXAIOU",[[1,6249,"  strucu"]],[6249,6249],[6257,6257]]],[1538726647887,["gjx16@GJXAIOU",[[-1,6256,"u"]],[6257,6257],[6256,6256]]],[1538726654361,["gjx16@GJXAIOU",[[1,6256,"t B  "]],[6256,6256],[6261,6261]]],[1538726714761,[null,[[-1,1444,"欧"],[1,1445,"*"]],[1444,1444],[1446,1446]]],[1538726714761,[null,[[1,1444,"欧"],[-1,1444,"*"]],[1446,1446],[1444,1444]]],[1538726657497,["gjx16@GJXAIOU",[[1,6261,"a2;"]],[6261,6261],[6264,6264]]],[1538726658346,["gjx16@GJXAIOU",[[1,6267,"\n  "]],[6264,6264],[6267,6267]]],[1538726664428,["gjx16@GJXAIOU",[[1,6267,"a2.a.la"]],[6267,6267],[6274,6274]]],[1538726665375,["gjx16@GJXAIOU",[[-1,6272,"la"]],[6274,6274],[6272,6272]]],[1538726674880,["gjx16@GJXAIOU",[[1,6272,"a = 200;  //fang"]],[6272,6272],[6288,6288]]],[1538726675978,["gjx16@GJXAIOU",[[-1,6284,"fang"]],[6288,6288],[6284,6284]]],[1538726680309,["gjx16@GJXAIOU",[[1,6284,"访问F"]],[6284,6284],[6287,6287]]],[1538726681245,["gjx16@GJXAIOU",[[-1,6286,"F"]],[6287,6287],[6286,6286]]],[1538726693174,["gjx16@GJXAIOU",[[1,6286,"A结构中的a"]],[6286,6286],[6292,6292]]],[1538726774755,[null,[[-1,1444,"欧"],[1,1445,"*"]],[1444,1444],[1446,1446]]],[1538726774755,[null,[[1,1444,"欧"],[-1,1444,"*"]],[1446,1446],[1444,1444]]],[1538726756936,["gjx16@GJXAIOU",[[1,6236,"\n"]],[6235,6235],[6236,6236]]],[1538726757003,["gjx16@GJXAIOU",[[1,6237,"\n"]],[6236,6236],[6237,6237]]],[1538726758555,["gjx16@GJXAIOU",[[1,6237,"at"]],[6237,6237],[6239,6239]]],[1538726759391,["gjx16@GJXAIOU",[[-1,6237,"at"]],[6239,6239],[6237,6237]]],[1538726772204,["gjx16@GJXAIOU",[[1,6237,"struct  c"]],[6237,6237],[6246,6246]]],[1538726773993,["gjx16@GJXAIOU",[[-1,6244," c"]],[6246,6246],[6244,6244]]],[1538726774404,["gjx16@GJXAIOU",[[1,6244,"C"]],[6244,6244],[6245,6245]]],[1538726834756,[null,[[-1,1444,"欧"],[1,1445,"*"]],[1444,1444],[1446,1446]]],[1538726834756,[null,[[1,1444,"欧"],[-1,1444,"*"]],[1446,1446],[1444,1444]]],[1538726776073,["gjx16@GJXAIOU",[[1,6245,";"]],[6245,6245],[6246,6246]]],[1538726777741,["gjx16@GJXAIOU",[[-1,6245,";"]],[6246,6246],[6245,6245]]],[1538726778243,["gjx16@GJXAIOU",[[1,6246,"\n"]],[6245,6245],[6246,6246]]],[1538726780902,["gjx16@GJXAIOU",[[1,6246,"{};"]],[6246,6246],[6249,6249]]],[1538726783680,["gjx16@GJXAIOU",[[1,6247,"\n"]],[6247,6247],[6248,6248]]],[1538726783845,["gjx16@GJXAIOU",[[1,6248,"\n"]],[6248,6248],[6249,6249]]],[1538726815261,["gjx16@GJXAIOU",[[1,6248,"int *a = mallox"]],[6248,6248],[6263,6263]]],[1538726816232,["gjx16@GJXAIOU",[[-1,6262,"x"]],[6263,6263],[6262,6262]]],[1538726818962,["gjx16@GJXAIOU",[[1,6262,"c();"]],[6262,6262],[6266,6266]]],[1538726825140,["gjx16@GJXAIOU",[[1,6264,"sizeof("]],[6264,6264],[6271,6271]]],[1538726825252,["gjx16@GJXAIOU",[[1,6272,")"]],[6271,6271],[6272,6272]]],[1538726831475,["gjx16@GJXAIOU",[[1,6271,"int a;"]],[6271,6271],[6277,6277]]],[1538726832815,["gjx16@GJXAIOU",[[-1,6276,";"]],[6277,6277],[6276,6276]]],[1538726894758,[null,[[-1,1444,"欧"],[1,1445,"*"]],[1444,1444],[1446,1446]]],[1538726894758,[null,[[1,1444,"欧"],[-1,1444,"*"]],[1446,1446],[1444,1444]]],[1538726843306,["gjx16@GJXAIOU",[[1,6342,"\n  "]],[6339,6339],[6342,6342]]],[1538726843856,["gjx16@GJXAIOU",[[-1,6340,"  "],[1,6342,"\n"]],[6342,6342],[6341,6341]]],[1538726877783,["gjx16@GJXAIOU",[[1,6341,"  struct *C  *ap = mallox"]],[6341,6341],[6366,6366]]],[1538726878729,["gjx16@GJXAIOU",[[-1,6364,"ox"]],[6366,6366],[6364,6364]]],[1538726879032,["gjx16@GJXAIOU",[[1,6364,"c"]],[6364,6364],[6365,6365]]],[1538726879824,["gjx16@GJXAIOU",[[-1,6364,"c"]],[6365,6365],[6364,6364]]],[1538726884768,["gjx16@GJXAIOU",[[1,6364,"oc();"]],[6364,6364],[6369,6369]]],[1538726887915,["gjx16@GJXAIOU",[[1,6367,"sizo"]],[6367,6367],[6371,6371]]],[1538726888939,["gjx16@GJXAIOU",[[-1,6370,"o"]],[6371,6371],[6370,6370]]],[1538726892071,["gjx16@GJXAIOU",[[1,6370,"eof("]],[6370,6370],[6374,6374]]],[1538726892175,["gjx16@GJXAIOU",[[1,6375,")"]],[6374,6374],[6375,6375]]],[1538726894500,["gjx16@GJXAIOU",[[1,6374,"st"]],[6374,6374],[6376,6376]]],[1538726954759,[null,[[-1,1444,"欧"],[1,1445,"*"]],[1444,1444],[1446,1446]]],[1538726954759,[null,[[1,1444,"欧"],[-1,1444,"*"]],[1446,1446],[1444,1444]]],[1538726896084,["gjx16@GJXAIOU",[[1,6376,"ruce"]],[6376,6376],[6380,6380]]],[1538726897200,["gjx16@GJXAIOU",[[-1,6379,"e"]],[6380,6380],[6379,6379]]],[1538726897544,["gjx16@GJXAIOU",[[1,6379,"r"]],[6379,6379],[6380,6380]]],[1538726898154,["gjx16@GJXAIOU",[[-1,6379,"r"]],[6380,6380],[6379,6379]]],[1538726903964,["gjx16@GJXAIOU",[[1,6379,"t C"]],[6379,6379],[6382,6382]]],[1538726908823,["gjx16@GJXAIOU",[[1,6388,"\n  "]],[6385,6385],[6388,6388]]],[1538726910879,["gjx16@GJXAIOU",[[1,6388,"ap "]],[6388,6388],[6391,6391]]],[1538726911584,["gjx16@GJXAIOU",[[-1,6390," "]],[6391,6391],[6390,6390]]],[1538726913203,["gjx16@GJXAIOU",[[1,6390,"-<"]],[6390,6390],[6392,6392]]],[1538726913759,["gjx16@GJXAIOU",[[-1,6391,"<"]],[6392,6392],[6391,6391]]],[1538726915404,["gjx16@GJXAIOU",[[1,6391,"> "]],[6391,6391],[6393,6393]]],[1538726916327,["gjx16@GJXAIOU",[[-1,6392," "]],[6393,6393],[6392,6392]]],[1538726917682,["gjx16@GJXAIOU",[[1,6392,"a."]],[6392,6392],[6394,6394]]],[1538726936959,["gjx16@GJXAIOU",[[-1,6248,"int"]],[6251,6251],[6248,6248]]],[1538726939428,["gjx16@GJXAIOU",[[1,6248,"struncr"]],[6248,6248],[6255,6255]]],[1538726940401,["gjx16@GJXAIOU",[[-1,6253,"cr"]],[6255,6255],[6253,6253]]],[1538726940591,["gjx16@GJXAIOU",[[1,6253,"r"]],[6253,6253],[6254,6254]]],[1538726941415,["gjx16@GJXAIOU",[[-1,6252,"nr"]],[6254,6254],[6252,6252]]],[1538726942953,["gjx16@GJXAIOU",[[1,6252,"ct"]],[6252,6252],[6254,6254]]],[1538726944075,["gjx16@GJXAIOU",[[1,6255," "]],[6254,6254],[6255,6255]]],[1538726948552,["gjx16@GJXAIOU",[[1,6255,"A"]],[6255,6255],[6256,6256]]],[1538727014761,[null,[[-1,1444,"欧"],[1,1445,"*"]],[1444,1444],[1446,1446]]],[1538727014761,[null,[[1,1444,"欧"],[-1,1444,"*"]],[1446,1446],[1444,1444]]],[1538726958120,["gjx16@GJXAIOU",[[1,6248,"  "]],[6248,6248],[6250,6250]]],[1538726966263,["gjx16@GJXAIOU",[[1,6401,"a = 20;"]],[6401,6401],[6408,6408]]],[1538726966681,["gjx16@GJXAIOU",[[1,6411,"\n  "]],[6408,6408],[6411,6411]]],[1538726994201,["gjx16@GJXAIOU",[[-1,6357,"*"]],[6358,6358],[6357,6357]]],[1538727006483,["gjx16@GJXAIOU",[[1,6391,"//zhe"]],[6391,6391],[6396,6396]]],[1538727007633,["gjx16@GJXAIOU",[[-1,6393,"zhe"]],[6396,6396],[6393,6393]]],[1538727012393,["gjx16@GJXAIOU",[[1,6393,"这个结构体"]],[6393,6393],[6398,6398]]],[1538727074762,[null,[[-1,1444,"欧"],[1,1445,"*"]],[1444,1444],[1446,1446]]],[1538727074762,[null,[[1,1444,"欧"],[-1,1444,"*"]],[1446,1446],[1444,1444]]],[1538727037724,["gjx16@GJXAIOU",[[1,6398,"成员是在堆里面"]],[6398,6398],[6405,6405]]],[1538727058218,["gjx16@GJXAIOU",[[1,6427,"\n  "]],[6421,6421],[6424,6424]]],[1538727065625,["gjx16@GJXAIOU",[[1,6424,"free();"]],[6424,6424],[6431,6431]]],[1538727068470,["gjx16@GJXAIOU",[[1,6429,"ap"]],[6429,6429],[6431,6431]]],[1538727554770,[null,[[-1,1444,"欧"],[1,1445,"*"]],[1444,1444],[1446,1446]]],[1538727554770,[null,[[1,1444,"欧"],[-1,1444,"*"]],[1446,1446],[1444,1444]]],[1538727511908,["gjx16@GJXAIOU",[[1,6518,"\n ap->a.a = 20\nsizeof(struct B) = 12\n"]],[6518,6518],[6555,6555]]],[1538727515040,["gjx16@GJXAIOU",[[-1,6533,"sizeof(struct B) = 12"]],[6533,6554],[6533,6533]]],[1538727517069,["gjx16@GJXAIOU",[[-1,6533,"\n"]],[6533,6533],[6532,6532]]],[1538727518704,["gjx16@GJXAIOU",[[1,6532,"`"]],[6532,6532],[6533,6533]]],[1538727521875,["gjx16@GJXAIOU",[[1,6520,"`"]],[6520,6520],[6521,6521]]],[1538727538867,["gjx16@GJXAIOU",[[1,6162,"#include<stdlib.h>\n\n"],[-1,6169,"A "],[1,6171," A\n"],[1,6173,"\n"],[1,6180," "],[1,6182,"\n"],[1,6190," "],[1,6192,"\n"],[1,6204," "],[1,6205,"\n"],[1,6208,"\n"],[1,6217," "],[1,6218," "],[1,6221,"\n"],[1,6229," "],[1,6231,"\n"],[-1,6234,"\n"],[1,6244," "],[1,6245,"\n"],[1,6248,"\n"],[1,6257," "],[-1,6259,"*a"],[-1,6262,"= m"],[-1,6266,"lloc(sizeof(int a))"],[1,6286,"\n"],[1,6290,"\n"],[1,6293," "],[1,6301,"\n"],[1,6302,"\n"],[1,6311," "],[1,6319,"\n"],[1,6327," "],[1,6330," "],[1,6357," "],[1,6364," "],[1,6365," "],[1,6387," "],[1,6406,"\n"],[1,6416," "],[1,6417," "],[1,6422,"\n"],[-1,6424,"free("],[1,6429,"printf(\""],[1,6431,"->a.a  =  %d\\n\",ap->a.a"],[-1,6434,"  "],[1,6461," "],[1,6463," "],[1,6465," "],[1,6486," "],[1,6491,"\n  free(ap);\n\n"],[1,6500," "],[1,6502,"\n"]],[6143,6504],[6578,6578]]],[1538727544704,["gjx16@GJXAIOU",[[1,7857,"\n"]],[7852,7852],[7853,7853]]],[1538727544842,["gjx16@GJXAIOU",[[1,7858,"\n"]],[7853,7853],[7854,7854]]],[1538727545015,["gjx16@GJXAIOU",[[1,7859,"\n"]],[7854,7854],[7855,7855]]],[1538727547653,["gjx16@GJXAIOU",[[1,7855,"```"]],[7855,7855],[7858,7858]]],[1538727547694,["gjx16@GJXAIOU",[[1,7858,"language\n```\n"]],[7858,7858],[7858,7866]]],[1538727548733,["gjx16@GJXAIOU",[[-1,7858,"language"],[1,7866,"c"]],[7858,7866],[7859,7859]]],[1538727548906,["gjx16@GJXAIOU",[[1,7860,"\n"]],[7859,7859],[7860,7860]]],[1538727549088,["gjx16@GJXAIOU",[[1,7861,"\n"]],[7860,7860],[7861,7861]]],[1538727614769,[null,[[-1,1444,"欧"],[1,1445,"*"]],[1444,1444],[1446,1446]]],[1538727614769,[null,[[1,1444,"欧"],[-1,1444,"*"]],[1446,1446],[1444,1444]]],[1538727555251,["gjx16@GJXAIOU",[[1,7860,"/**\n\n  * ┏┓ ┏┓+  +\n\n  *　　　　　　　┏┛┻━━━┛┻┓  +  +\n\n  *　　　　　　　┃　　　　　　┃\n\n  *　　　　　　　┃　　　━ ┃  ++  +  +  +\n\n  * ████━████  ┃+\n\n  *　　　　　　　┃　　　　　　　┃  +\n\n  *　　　　　　　┃　　　┻　　　┃\n\n  *　　　　　　　┃　　　　　　┃  +  +\n\n  *　　　　　　　┗━┓　　　┏━┛\n\n  * ┃　　　┃\n\n  * ┃　　　┃  +  +  +  +\n\n  * ┃　　　┃　　　　Code  is  far  away  from  bug  with  the  animal  protecting\n\n  * ┃　　　┃  +\n\n  * ┃　　　┃\n\n  * ┃　　　┃　　+\n\n  * ┃ ┗━━━┓  +  +\n\n  * ┃  ┣┓\n\n  * ┃  ┏┛\n\n  * ┗┓┓┏━┳┓┏┛  +  +  +  +\n\n  * ┃┫┫  ┃┫┫\n\n  * ┗┻┛  ┗┻┛+  +  +  +\n\n  */"]],[7860,7860],[8329,8329]]],[1538727581107,["gjx16@GJXAIOU",[[-1,7855,"```c\n/**\n\n  * ┏┓ ┏┓+  +\n\n  *　　　　　　　┏┛┻━━━┛┻┓  +  +\n\n  *　　　　　　　┃　　　　　　┃\n\n  *　　　　　　　┃　　　━ ┃  ++  +  +  +\n\n  * ████━████  ┃+\n\n  *　　　　　　　┃　　　　　　　┃  +\n\n  *　　　　　　　┃　　　┻　　　┃\n\n  *　　　　　　　┃　　　　　　┃  +  +\n\n  *　　　　　　　┗━┓　　　┏━┛\n\n  * ┃　　　┃\n\n  * ┃　　　┃  +  +  +  +\n\n  * ┃　　　┃　　　　Code  is  far  away  from  bug  with  the  animal  protecting\n\n  * ┃　　　┃  +\n\n  * ┃　　　┃\n\n  * ┃　　　┃　　+\n\n  * ┃ ┗━━━┓  +  +\n\n  * ┃  ┣┓\n\n  * ┃  ┏┛\n\n  * ┗┓┓┏━┳┓┏┛  +  +  +  +\n\n  * ┃┫┫  ┃┫┫\n\n  * ┗┻┛  ┗┻┛+  +  +  +\n\n  */\n\n```"]],[7855,8334],[7855,7855]]],[1538727587774,["gjx16@GJXAIOU",[[-1,6161,"\n"]],[6161,6161],[6160,6160]]],[1538727590564,["gjx16@GJXAIOU",[[-1,6191,"\n"]],[6191,6191],[6190,6190]]],[1538727592542,["gjx16@GJXAIOU",[[-1,6193,"\n"]],[6193,6193],[6192,6192]]],[1538727593707,["gjx16@GJXAIOU",[[-1,6203,"\n"]],[6203,6203],[6202,6202]]],[1538727594883,["gjx16@GJXAIOU",[[-1,6214,"\n"]],[6214,6214],[6213,6213]]],[1538727597105,["gjx16@GJXAIOU",[[-1,6228,"\n"]],[6228,6228],[6227,6227]]],[1538727598059,["gjx16@GJXAIOU",[[-1,6230,"\n"]],[6230,6230],[6229,6229]]],[1538727599331,["gjx16@GJXAIOU",[[-1,6246,"\n"]],[6246,6246],[6245,6245]]],[1538727601088,["gjx16@GJXAIOU",[[-1,6257,"\n"]],[6257,6257],[6256,6256]]],[1538727603173,["gjx16@GJXAIOU",[[-1,6271,"\n"]],[6271,6271],[6270,6270]]],[1538727604341,["gjx16@GJXAIOU",[[-1,6273,"\n"]],[6273,6273],[6272,6272]]],[1538727605386,["gjx16@GJXAIOU",[[-1,6289,"\n"]],[6289,6289],[6288,6288]]],[1538727607506,["gjx16@GJXAIOU",[[-1,6305,"\n"]],[6305,6305],[6304,6304]]],[1538727609601,["gjx16@GJXAIOU",[[-1,6307,"\n"]],[6307,6307],[6306,6306]]],[1538727610597,["gjx16@GJXAIOU",[[-1,6324,"\n"]],[6324,6324],[6323,6323]]],[1538727611615,["gjx16@GJXAIOU",[[-1,6354,"\n"]],[6354,6354],[6353,6353]]],[1538727612946,["gjx16@GJXAIOU",[[-1,6416,"\n"]],[6416,6416],[6415,6415]]],[1538727632416,[null,[[-1,1444,"欧"],[1,1445,"*"]],[1444,1444],[1446,1446]]],[1538727632416,[null,[[1,1444,"欧"],[-1,1444,"*"]],[1446,1446],[1444,1444]]],[1538727615549,["gjx16@GJXAIOU",[[-1,6473,"\n"]],[6473,6473],[6472,6472]]],[1538727624805,["gjx16@GJXAIOU",[[1,6356,"\n  "]],[6356,6356],[6359,6359]]],[1538727630601,["gjx16@GJXAIOU",[[-1,6561,"\n"]],[6561,6561],[6560,6560]]],[1538730872478,[null,[[-1,1444,"欧"],[1,1445,"*"]],[1444,1444],[1446,1446]]],[1538730872478,[null,[[1,1444,"欧"],[-1,1444,"*"]],[1446,1446],[1444,1444]]],[1538730845091,["gjx16@GJXAIOU",[[1,7836,"##  一、结构作为函数的参数\n**例子程序**\n\n```c\n#include<stdio.h>\n#include<string.h>\n#include<stdlib.h>\n\nstruct student \n{\n  char name[20];\n  int age;\n};\n\n\nvoid printf_student(struct student a)\n{\n  printf(\"name = %s,age = %d\\n\",a.name,a.age);\n}\n\nint main()\n{\n  struct student st = {\"tom\",20};\n  printf_student(st);//调用函数\n  return 0;\n}\n```\n\n程序运行结果：`name = tom,age = 20`\n\n**例子程序2**\n\n```c\n#include<stdio.h>\n#include<string.h>\n#include<stdlib.h>\n\nstruct student \n{\n  char name[20];\n  int age;\n};\n\n\nvoid set_student(struct student *a,const char *name, int age)  \n{\n  strcpy(a->name,name);\n  a->age = age;\n}\n\n\nint main()\n{\n  struct student st;\n  set_student(&st,\"mike\",100);  //只有传递地址才能将形参的变化反映到实参这边\n  printf(\"name = %s,age = %d\\n\",st.name,st.age);\n  return 0;\n}\n```\n程序运行结果：`name = mike,age = 100`\n\n尽量不要直接使用结构作为函数参数，如果使用尽量采用指针的形式\n将以上程序融合修改为：\n\n```c\n#include<stdio.h>\n#include<string.h>\n#include<stdlib.h>\n\nstruct student \n{\n  char name[20];\n  int age;\n};\n\n\nvoid printf_student(const struct student *b)  //加入const之后就不会改变它的值，需要改变值时候去掉const\n{\n  printf(\"name = %s,age = %d\\n\",b->name,b->age);\n}\n\n\nvoid set_student(struct student *a,const char *name, int age)  \n{\n  strcpy(a->name,name);\n  a->age = age;\n}\n\n\nint main()\n{\n  struct student st;\n  set_student(&st,\"mike\",100);  //只有传递地址才能将形参的变化反映到实参这边\n  printf_student(&st);\n  return 0;\n}\n```\n程序运行结果：`name = mike,age = 100`"]],[7836,7836],[9176,9176]]],[1538730850411,["gjx16@GJXAIOU",[[1,7836,"\n"]],[7835,7835],[7836,7836]]],[1538730855628,["gjx16@GJXAIOU",[[1,7836,"@toc"]],[7836,7836],[7840,7840]]],[1538730862070,["gjx16@GJXAIOU",[[-1,7836,"@toc"]],[7836,7840],[7836,7836]]],[1538730864524,["gjx16@GJXAIOU",[[-1,7841,"一"]],[7842,7842],[7841,7841]]],[1538730865293,["gjx16@GJXAIOU",[[1,7841,"liu"]],[7841,7841],[7844,7844]]],[1538730867041,["gjx16@GJXAIOU",[[-1,7841,"liu"]],[7844,7844],[7841,7841]]],[1538730868900,["gjx16@GJXAIOU",[[1,7841,"六"]],[7841,7841],[7842,7842]]],[1538730932492,[null,[[-1,1444,"欧"],[1,1445,"*"]],[1444,1444],[1446,1446]]],[1538730932492,[null,[[1,1444,"欧"],[-1,1444,"*"]],[1446,1446],[1444,1444]]],[1538730873612,["gjx16@GJXAIOU",[[1,7853,"\n"]],[7853,7853],[7854,7854]]],[1538730880007,["gjx16@GJXAIOU",[[1,7860,"1"]],[7860,7860],[7861,7861]]],[1538730892905,["gjx16@GJXAIOU",[[1,8615,"* "]],[8615,8645],[8617,8647]]],[1538730894678,["gjx16@GJXAIOU",[[-1,8617,"尽量不要直接使用结构作为函数参数，如果使用尽量采用指针的形式"]],[8617,8647],[8617,8617]]],[1538730896966,["gjx16@GJXAIOU",[[1,8617,"尽量不要直接使用结构作为函数参数，如果使用尽量采用指针的形式"]],[8617,8617],[8617,8647]]],[1538730899337,["gjx16@GJXAIOU",[[-1,8615,"* "]],[8616,8616],[8615,8615]]],[1538730900866,["gjx16@GJXAIOU",[[1,8615,"===="]],[8615,8615],[8617,8617]]],[1538730902221,["gjx16@GJXAIOU",[[-1,8617,"=="]],[8617,8617],[8615,8615]]],[1538730906171,["gjx16@GJXAIOU",[[1,8647,"=="]],[8647,8647],[8649,8649]]],[1538730906527,["gjx16@GJXAIOU",[[-1,8647,"=="]],[8649,8649],[8647,8647]]],[1538730908298,["gjx16@GJXAIOU",[[1,8647,"=="]],[8647,8647],[8649,8649]]]],null,"gjx16@GJXAIOU"]]}