{"compress":true,"commitItems":[["9b9bcd36-d576-454c-b43f-2eef35f70b9b",1536398086567,"",[[1536398032232,["gjx16@GJXAIOU",[[1,0,"# day5\n\n\n\n"]],[0,0],[9,9]]],[1536398043010,["gjx16@GJXAIOU",[[1,8,"数组"]],[8,8],[10,10]]],[1536398054244,["gjx16@GJXAIOU",[[1,8,"## 以为"]],[8,8],[13,13]]],[1536398054901,["gjx16@GJXAIOU",[[-1,11,"以为"]],[13,13],[11,11]]],[1536398072443,["gjx16@GJXAIOU",[[1,11,"一维"]],[11,11],[13,13]]],[1536398075071,["gjx16@GJXAIOU",[[1,17,"\n"]],[15,15],[16,16]]],[1536398287665,["gjx16@GJXAIOU",[[-1,17,"\n"],[1,18,"8"]],[17,17],[18,18]]],[1536398287937,["gjx16@GJXAIOU",[[1,18,"88"]],[18,18],[20,20]]],[1536398288825,["gjx16@GJXAIOU",[[-1,18,"88"]],[20,20],[18,18]]],[1536398288968,["gjx16@GJXAIOU",[[-1,17,"8"],[1,18,"\n"]],[18,18],[17,17]]],[1536398302196,["gjx16@GJXAIOU",[[-1,17,"\n"],[1,18,"#"]],[17,17],[18,18]]],[1536398310557,["gjx16@GJXAIOU",[[1,18,"## 定义数组"]],[18,18],[25,25]]],[1536398367162,["gjx16@GJXAIOU",[[1,25,"\n\n"]],[25,25],[26,26]]],[1536398367369,["gjx16@GJXAIOU",[[1,27,"\n"]],[26,26],[27,27]]],[1536398369871,["gjx16@GJXAIOU",[[-1,27,"\n"],[1,28,"~"]],[27,27],[28,28]]],[1536398370123,["gjx16@GJXAIOU",[[1,28,"~~~"]],[28,28],[29,29]]],[1536398370879,["gjx16@GJXAIOU",[[-1,29,"~~"]],[29,29],[27,27]]],[1536398372954,["gjx16@GJXAIOU",[[-1,28,"~"]],[29,29],[28,28]]],[1536398373277,["gjx16@GJXAIOU",[[-1,27,"~"],[1,28,"\n"]],[28,28],[27,27]]],[1536398374094,["gjx16@GJXAIOU",[[-1,27,"\n"],[1,28,"·"]],[27,27],[28,28]]],[1536398374520,["gjx16@GJXAIOU",[[1,28,"··"]],[28,28],[30,30]]],[1536398375278,["gjx16@GJXAIOU",[[-1,28,"··"]],[30,30],[28,28]]],[1536398375397,["gjx16@GJXAIOU",[[-1,27,"·"],[1,28,"\n"]],[28,28],[27,27]]],[1536398377448,["gjx16@GJXAIOU",[[-1,27,"\n"],[1,28,"`"]],[27,27],[28,28]]],[1536398378355,["gjx16@GJXAIOU",[[1,28,"``"]],[28,28],[30,30]]],[1536398378378,["gjx16@GJXAIOU",[[1,30,"language\n```\n"]],[30,30],[30,38]]],[1536398379265,["gjx16@GJXAIOU",[[-1,30,"language"],[1,38,"c"]],[30,38],[31,31]]],[1536398379474,["gjx16@GJXAIOU",[[1,32,"\n"]],[31,31],[32,32]]],[1536398383714,["gjx16@GJXAIOU",[[1,32,"# "]],[32,32],[34,34]]],[1536398385790,["gjx16@GJXAIOU",[[-1,33," "]],[34,34],[33,33]]],[1536398390770,["gjx16@GJXAIOU",[[1,33,"include《》"]],[33,33],[42,42]]],[1536398391870,["gjx16@GJXAIOU",[[-1,40,"《》"]],[42,42],[40,40]]],[1536398392907,["gjx16@GJXAIOU",[[1,40,"，。"]],[40,40],[42,42]]],[1536398393881,["gjx16@GJXAIOU",[[-1,39,"e，。"]],[42,42],[39,39]]],[1536398396610,["gjx16@GJXAIOU",[[1,39,"e,."]],[39,39],[42,42]]],[1536398397302,["gjx16@GJXAIOU",[[-1,40,",."]],[42,42],[40,40]]],[1536398397912,["gjx16@GJXAIOU",[[1,40,"<>"]],[40,40],[42,42]]],[1536398401924,["gjx16@GJXAIOU",[[1,41,"stdio "]],[41,41],[47,47]]],[1536398402490,["gjx16@GJXAIOU",[[-1,46," "]],[47,47],[46,46]]],[1536398404502,["gjx16@GJXAIOU",[[1,46,".h"]],[46,46],[48,48]]],[1536398406007,["gjx16@GJXAIOU",[[1,50,"\n"]],[49,49],[50,50]]],[1536398406262,["gjx16@GJXAIOU",[[1,51,"\n"]],[50,50],[51,51]]],[1536398409340,["gjx16@GJXAIOU",[[1,51,"int mian "]],[51,51],[60,60]]],[1536398410555,["gjx16@GJXAIOU",[[-1,56,"ian "]],[60,60],[56,56]]],[1536398412357,["gjx16@GJXAIOU",[[1,56,"ain()"]],[56,56],[61,61]]],[1536398412866,["gjx16@GJXAIOU",[[1,62,"\n"]],[61,61],[62,62]]],[1536398416619,["gjx16@GJXAIOU",[[1,62,"{}"]],[62,62],[64,64]]],[1536398417849,["gjx16@GJXAIOU",[[1,63,"\n"]],[63,63],[64,64]]],[1536398418013,["gjx16@GJXAIOU",[[1,64,"\n"]],[64,64],[65,65]]],[1536398418319,["gjx16@GJXAIOU",[[1,65,"\n"]],[65,65],[66,66]]],[1536398418477,["gjx16@GJXAIOU",[[1,66,"\n"]],[66,66],[67,67]]],[1536398418664,["gjx16@GJXAIOU",[[1,67,"\n"]],[67,67],[68,68]]],[1536398418847,["gjx16@GJXAIOU",[[1,68,"\n"]],[68,68],[69,69]]],[1536398431848,["gjx16@GJXAIOU",[[1,64,"  int arrat"]],[64,64],[75,75]]],[1536398432413,["gjx16@GJXAIOU",[[-1,74,"t"]],[75,75],[74,74]]],[1536398437546,["gjx16@GJXAIOU",[[1,74,"y[10"]],[74,74],[78,78]]],[1536398438042,["gjx16@GJXAIOU",[[1,79,"  \n"]],[78,78],[81,81]]],[1536398438056,["gjx16@GJXAIOU",[[1,81,"]"]],[81,81],[82,82]]],[1536398440664,["gjx16@GJXAIOU",[[-1,79,"  ]"]],[82,82],[79,79]]],[1536398441143,["gjx16@GJXAIOU",[[-1,83,"\n"]],[79,79],[78,78]]],[1536398446538,["gjx16@GJXAIOU",[[1,78,"];  "]],[78,78],[82,82]]],[1536398486556,["gjx16@GJXAIOU",[[1,82,"//定义了一个数组，数组名为array，里面有十个元素"]],[82,82],[109,109]]],[1536398492958,["gjx16@GJXAIOU",[[1,110,"  \n"]],[109,109],[112,112]]],[1536398492982,["gjx16@GJXAIOU",[[-1,110,"  "],[1,112,"\n"]],[112,112],[111,111]]],[1536398502076,["gjx16@GJXAIOU",[[1,111,"  array[1"]],[111,111],[120,120]]],[1536398502933,["gjx16@GJXAIOU",[[-1,119,"1"]],[120,120],[119,119]]],[1536398506051,["gjx16@GJXAIOU",[[1,119,"0] "]],[119,119],[122,122]]],[1536398512459,["gjx16@GJXAIOU",[[1,122,"= 20;"]],[122,122],[127,127]]],[1536398512981,["gjx16@GJXAIOU",[[1,128,"  \n"]],[127,127],[130,130]]],[1536398515804,["gjx16@GJXAIOU",[[1,130,"arrat"]],[130,130],[135,135]]],[1536398516542,["gjx16@GJXAIOU",[[-1,134,"t"]],[135,135],[134,134]]],[1536398520590,["gjx16@GJXAIOU",[[1,134,"y[9["]],[134,134],[138,138]]],[1536398521568,["gjx16@GJXAIOU",[[-1,137,"["]],[138,138],[137,137]]],[1536398527301,["gjx16@GJXAIOU",[[1,137,"] = 100;"]],[137,137],[145,145]]],[1536398538154,["gjx16@GJXAIOU",[[1,149,"  returun"]],[149,149],[158,158]]],[1536398538960,["gjx16@GJXAIOU",[[-1,156,"un"]],[158,158],[156,156]]],[1536398540864,["gjx16@GJXAIOU",[[1,156,"n 0'"]],[156,156],[160,160]]],[1536398541584,["gjx16@GJXAIOU",[[-1,159,"'"]],[160,160],[159,159]]],[1536398542381,["gjx16@GJXAIOU",[[1,159,";"]],[159,159],[160,160]]],[1536398556725,["gjx16@GJXAIOU",[[1,109,",cong "]],[109,109],[115,115]]],[1536398557739,["gjx16@GJXAIOU",[[-1,110,"cong "]],[115,115],[110,110]]],[1536398563529,["gjx16@GJXAIOU",[[1,110,"从0-9；"]],[110,110],[115,115]]],[1536398573151,["gjx16@GJXAIOU",[[1,153,"  prt"]],[153,153],[158,158]]],[1536398573933,["gjx16@GJXAIOU",[[-1,157,"t"]],[158,158],[157,157]]],[1536398582148,["gjx16@GJXAIOU",[[1,157,"intf()'"]],[157,157],[164,164]]],[1536398582808,["gjx16@GJXAIOU",[[-1,163,"'"]],[164,164],[163,163]]],[1536398583223,["gjx16@GJXAIOU",[[1,163,";"]],[163,163],[164,164]]],[1536398591130,["gjx16@GJXAIOU",[[1,162,"\"\"//5"]],[162,162],[167,167]]],[1536398592978,["gjx16@GJXAIOU",[[-1,163,"\"//5"]],[167,167],[163,163]]],[1536398612146,["gjx16@GJXAIOU",[[1,163,"%d\\n\",array[1]"]],[163,163],[177,177]]],[1536398626561,["gjx16@GJXAIOU",[[-1,175,"1"]],[176,176],[175,175]]],[1536398627037,["gjx16@GJXAIOU",[[1,175,"0"]],[175,175],[176,176]]],[1536398645567,["gjx16@GJXAIOU",[[1,199,"\n"]],[198,198],[199,199]]],[1536398647896,["gjx16@GJXAIOU",[[-1,199,"\n"],[1,200,"s"]],[199,199],[200,200]]],[1536398648507,["gjx16@GJXAIOU",[[1,200,"huzu"]],[200,200],[204,204]]],[1536398649260,["gjx16@GJXAIOU",[[-1,200,"huzu"]],[204,204],[200,200]]],[1536398649380,["gjx16@GJXAIOU",[[-1,199,"s"],[1,200,"\n"]],[200,200],[199,199]]],[1536398649490,["gjx16@GJXAIOU",[[-1,199,"\n"]],[199,199],[198,198]]],[1536398650442,["gjx16@GJXAIOU",[[1,199,"\n"]],[198,198],[199,199]]],[1536398650604,["gjx16@GJXAIOU",[[1,200,"\n"]],[199,199],[200,200]]],[1536398652139,["gjx16@GJXAIOU",[[-1,200,"\n"],[1,201,"数组"]],[200,200],[202,202]]],[1536398665976,["gjx16@GJXAIOU",[[1,202,"在内存中就是一个连续的空间；"]],[202,202],[216,216]]],[1536398933529,["gjx16@GJXAIOU",[[1,180,"  size"]],[180,180],[186,186]]],[1536398960605,["gjx16@GJXAIOU",[[-1,182,"size"],[1,186,"p"]],[182,186],[183,183]]],[1536398967020,["gjx16@GJXAIOU",[[1,183,"rintf();"]],[183,183],[191,191]]],[1536398970573,["gjx16@GJXAIOU",[[1,189,"\"\""]],[189,189],[191,191]]],[1536398973545,["gjx16@GJXAIOU",[[1,190,"/5"]],[190,190],[192,192]]],[1536398974641,["gjx16@GJXAIOU",[[-1,190,"/5"]],[192,192],[190,190]]],[1536398981829,["gjx16@GJXAIOU",[[1,190,"%d\\n"]],[190,190],[194,194]]],[1536398988853,["gjx16@GJXAIOU",[[1,195,",arr"]],[195,195],[199,199]]],[1536398994158,["gjx16@GJXAIOU",[[1,199,"y["]],[199,199],[201,201]]],[1536398998731,["gjx16@GJXAIOU",[[-1,196,"arry["]],[201,201],[196,196]]],[1536399005030,["gjx16@GJXAIOU",[[1,196,"sizeof("]],[196,196],[203,203]]],[1536399005198,["gjx16@GJXAIOU",[[1,204,")"]],[203,203],[204,204]]],[1536399008092,["gjx16@GJXAIOU",[[1,203,"arrat"]],[203,203],[208,208]]],[1536399008870,["gjx16@GJXAIOU",[[-1,207,"t"]],[208,208],[207,207]]],[1536399009668,["gjx16@GJXAIOU",[[1,207,"y"]],[207,207],[208,208]]],[1536399081004,["gjx16@GJXAIOU",[[1,211,"//yige"]],[211,211],[217,217]]],[1536399081753,["gjx16@GJXAIOU",[[-1,213,"yige"]],[217,217],[213,213]]],[1536399089544,["gjx16@GJXAIOU",[[1,213,"一个整数四个字节看，"]],[213,213],[223,223]]],[1536399090179,["gjx16@GJXAIOU",[[-1,221,"看，"]],[223,223],[221,221]]],[1536399103069,["gjx16@GJXAIOU",[[1,221,"，所以这里显示是40"]],[221,221],[231,231]]],[1536399157849,["gjx16@GJXAIOU",[[1,267,"\n\n"]],[267,267],[268,268]]],[1536399157994,["gjx16@GJXAIOU",[[1,269,"\n"]],[268,268],[269,269]]],[1536399159820,["gjx16@GJXAIOU",[[-1,269,"\n"],[1,270,"*"]],[269,269],[270,270]]],[1536399161043,["gjx16@GJXAIOU",[[1,270,"***"]],[270,270],[271,271]]],[1536399161718,["gjx16@GJXAIOU",[[1,271,"；"]],[271,271],[272,272]]],[1536399162464,["gjx16@GJXAIOU",[[-1,271,"；"]],[272,272],[271,271]]],[1536399166051,["gjx16@GJXAIOU",[[1,271,"连续的赋值"]],[271,271],[276,276]]],[1536399169084,["gjx16@GJXAIOU",[[1,276,"操作"]],[276,276],[278,278]]],[1536399170848,["gjx16@GJXAIOU",[[1,280,"\n\n"]],[280,280],[281,281]]],[1536399170995,["gjx16@GJXAIOU",[[1,282,"\n"]],[281,281],[282,282]]],[1536399172631,["gjx16@GJXAIOU",[[-1,282,"\n"],[1,283,"`"]],[282,282],[283,283]]],[1536399173067,["gjx16@GJXAIOU",[[1,283,"``"]],[283,283],[285,285]]],[1536399173090,["gjx16@GJXAIOU",[[1,285,"language\n```\n"]],[285,285],[285,293]]],[1536399174078,["gjx16@GJXAIOU",[[-1,285,"language"],[1,293,"c"]],[285,293],[286,286]]],[1536399174545,["gjx16@GJXAIOU",[[1,287,"\n"]],[286,286],[287,287]]],[1536399178523,["gjx16@GJXAIOU",[[1,287,"int i ;"]],[287,287],[294,294]]],[1536399179385,["gjx16@GJXAIOU",[[-1,292," ;"]],[294,294],[292,292]]],[1536399179938,["gjx16@GJXAIOU",[[1,292,";"]],[292,292],[293,293]]],[1536399180238,["gjx16@GJXAIOU",[[1,294,"\n"]],[293,293],[294,294]]],[1536399185337,["gjx16@GJXAIOU",[[1,294,"for()"]],[294,294],[299,299]]],[1536399199308,["gjx16@GJXAIOU",[[1,298,"i=1;i<a"]],[298,298],[305,305]]],[1536399200215,["gjx16@GJXAIOU",[[-1,304,"a"]],[305,305],[304,304]]],[1536399208053,["gjx16@GJXAIOU",[[1,304,"10;i++"]],[304,304],[310,310]]],[1536399210574,["gjx16@GJXAIOU",[[1,312,"\n"]],[311,311],[312,312]]],[1536399212990,["gjx16@GJXAIOU",[[1,312,"{}"]],[312,312],[314,314]]],[1536399214334,["gjx16@GJXAIOU",[[1,313,"\n"]],[313,313],[314,314]]],[1536399214483,["gjx16@GJXAIOU",[[1,314,"\n"]],[314,314],[315,315]]],[1536399214645,["gjx16@GJXAIOU",[[1,315,"\n"]],[315,315],[316,316]]],[1536399214896,["gjx16@GJXAIOU",[[1,316,"\n"]],[316,316],[317,317]]],[1536399220369,["gjx16@GJXAIOU",[[1,315,"arrat"]],[315,315],[320,320]]],[1536399221097,["gjx16@GJXAIOU",[[-1,319,"t"]],[320,320],[319,319]]],[1536399223700,["gjx16@GJXAIOU",[[1,319,"y【】"]],[319,319],[322,322]]],[1536399224463,["gjx16@GJXAIOU",[[-1,320,"【】"]],[322,322],[320,320]]],[1536399226402,["gjx16@GJXAIOU",[[1,320,"[]"]],[320,320],[322,322]]],[1536399228567,["gjx16@GJXAIOU",[[1,321,"i "]],[321,321],[323,323]]],[1536399229446,["gjx16@GJXAIOU",[[-1,322," "]],[323,323],[322,322]]],[1536399245763,["gjx16@GJXAIOU",[[1,323," = i;  //这个语句含义为"]],[323,323],[339,339]]],[1536399250233,["gjx16@GJXAIOU",[[-1,332,"这个语句含义为"]],[339,339],[332,332]]],[1536399252287,["gjx16@GJXAIOU",[[1,340,"\n"]],[339,339],[340,340]]],[1536399252396,["gjx16@GJXAIOU",[[1,341,"\n"]],[340,340],[341,341]]],[1536399266933,["gjx16@GJXAIOU",[[1,342,"\n"]],[340,340],[341,341]]],[1536399267091,["gjx16@GJXAIOU",[[1,343,"\n"]],[341,341],[342,342]]],[1536399455618,["gjx16@GJXAIOU",[[1,253,"本质就是："]],[253,253],[258,258]]],[1536399465889,["gjx16@GJXAIOU",[[1,272,"而且每个元素的"]],[272,272],[279,279]]],[1536399475921,["gjx16@GJXAIOU",[[1,279,"类型是一样的；"]],[279,279],[286,286]]],[1536399483266,["gjx16@GJXAIOU",[[1,360,"****"]],[360,360],[362,362]]],[1536399489409,["gjx16@GJXAIOU",[[1,362,"数组的初始胡"]],[362,362],[368,368]]],[1536399490459,["gjx16@GJXAIOU",[[-1,367,"胡"]],[368,368],[367,367]]],[1536399491541,["gjx16@GJXAIOU",[[1,367,"化"]],[367,367],[368,368]]],[1536399493665,["gjx16@GJXAIOU",[[1,373,"\n"]],[370,370],[371,371]]],[1536399493822,["gjx16@GJXAIOU",[[1,374,"\n"]],[371,371],[372,372]]],[1536399493976,["gjx16@GJXAIOU",[[1,375,"\n"]],[372,372],[373,373]]],[1536399498399,["gjx16@GJXAIOU",[[1,373,"```"]],[373,373],[376,376]]],[1536399498423,["gjx16@GJXAIOU",[[1,376,"language\n```\n"]],[376,376],[376,384]]],[1536399499494,["gjx16@GJXAIOU",[[-1,376,"language"],[1,384,"c"]],[376,384],[377,377]]],[1536399499684,["gjx16@GJXAIOU",[[1,378,"\n"]],[377,377],[378,378]]],[1536399500110,["gjx16@GJXAIOU",[[1,379,"\n"]],[378,378],[379,379]]],[1536399506088,["gjx16@GJXAIOU",[[1,378,"ing"]],[378,378],[381,381]]],[1536399507163,["gjx16@GJXAIOU",[[-1,380,"g"]],[381,381],[380,380]]],[1536399510095,["gjx16@GJXAIOU",[[1,380,"t main()"]],[380,380],[388,388]]],[1536399510911,["gjx16@GJXAIOU",[[1,390,"\n"]],[388,388],[389,389]]],[1536399513599,["gjx16@GJXAIOU",[[1,389,"{}"]],[389,389],[391,391]]],[1536399514945,["gjx16@GJXAIOU",[[1,390,"\n"]],[390,390],[391,391]]],[1536399515081,["gjx16@GJXAIOU",[[1,391,"\n"]],[391,391],[392,392]]],[1536399515212,["gjx16@GJXAIOU",[[1,392,"\n"]],[392,392],[393,393]]],[1536399515365,["gjx16@GJXAIOU",[[1,393,"\n"]],[393,393],[394,394]]],[1536399527525,["gjx16@GJXAIOU",[[1,391,"  int array[]"]],[391,391],[404,404]]],[1536399533103,["gjx16@GJXAIOU",[[1,403,"10"]],[403,403],[405,405]]],[1536399541163,["gjx16@GJXAIOU",[[1,406," = {};"]],[406,406],[412,412]]],[1536399553162,["gjx16@GJXAIOU",[[1,410,"100,2,3,3,4,9"]],[410,410],[423,423]]],[1536399557842,["gjx16@GJXAIOU",[[1,425,"?/"]],[425,425],[427,427]]],[1536399558988,["gjx16@GJXAIOU",[[-1,425,"?/"]],[427,427],[425,425]]],[1536399565993,["gjx16@GJXAIOU",[[1,425,"、、"]],[425,425],[427,427]]],[1536399566895,["gjx16@GJXAIOU",[[-1,425,"、、"]],[427,427],[425,425]]],[1536399586779,["gjx16@GJXAIOU",[[1,425,"//定义一个数组的同时进行赋值初始化"]],[425,425],[443,443]]],[1536399588021,["gjx16@GJXAIOU",[[1,444,"  \n"]],[443,443],[446,446]]],[1536399923944,["gjx16@GJXAIOU",[[1,447,"  int i;"]],[447,447],[455,455]]],[1536399924644,["gjx16@GJXAIOU",[[1,456,"  \n"]],[455,455],[458,458]]],[1536399925947,["gjx16@GJXAIOU",[[1,458,"   "]],[458,458],[461,461]]],[1536399928352,["gjx16@GJXAIOU",[[-1,458,"   "]],[461,461],[458,458]]],[1536399929789,["gjx16@GJXAIOU",[[1,458,"dor"]],[458,458],[461,461]]],[1536399930558,["gjx16@GJXAIOU",[[-1,459,"or"]],[461,461],[459,459]]],[1536399931506,["gjx16@GJXAIOU",[[1,459,"for"]],[459,459],[462,462]]],[1536399932525,["gjx16@GJXAIOU",[[-1,457," dfor"]],[462,462],[457,457]]],[1536399933566,["gjx16@GJXAIOU",[[1,457,"for"]],[457,457],[460,460]]],[1536399935614,["gjx16@GJXAIOU",[[1,457," "]],[457,457],[458,458]]],[1536399939149,["gjx16@GJXAIOU",[[1,461,"90"]],[461,461],[463,463]]],[1536399940035,["gjx16@GJXAIOU",[[-1,461,"90"]],[463,463],[461,461]]],[1536399940629,["gjx16@GJXAIOU",[[1,461,"()"]],[461,461],[463,463]]],[1536399945895,["gjx16@GJXAIOU",[[1,462,"i = 1"]],[462,462],[467,467]]],[1536399947853,["gjx16@GJXAIOU",[[-1,464,"= 1"]],[467,467],[464,464]]],[1536399949723,["gjx16@GJXAIOU",[[1,464,"="]],[464,464],[465,465]]],[1536399954059,["gjx16@GJXAIOU",[[-1,319,"1"]],[320,320],[319,319]]],[1536399954693,["gjx16@GJXAIOU",[[1,319,"0"]],[319,319],[320,320]]],[1536399957222,["gjx16@GJXAIOU",[[1,318," "]],[318,318],[319,319]]],[1536399958852,["gjx16@GJXAIOU",[[-1,319,"="],[1,320," "]],[319,320],[320,320]]],[1536399961618,["gjx16@GJXAIOU",[[1,320,"= "]],[320,320],[322,322]]],[1536399963316,["gjx16@GJXAIOU",[[-1,319," "]],[320,320],[319,319]]],[1536399965364,["gjx16@GJXAIOU",[[1,324," "]],[324,324],[325,325]]],[1536399967182,["gjx16@GJXAIOU",[[1,326," "]],[326,326],[327,327]]],[1536399972497,["gjx16@GJXAIOU",[[1,469,"0;"]],[469,469],[471,471]]],[1536399974214,["gjx16@GJXAIOU",[[-1,469,"0;"]],[471,471],[469,469]]],[1536399981920,["gjx16@GJXAIOU",[[1,469," 0;i="]],[469,469],[474,474]]],[1536399982990,["gjx16@GJXAIOU",[[-1,473,"="]],[474,474],[473,473]]],[1536399984698,["gjx16@GJXAIOU",[[1,473," ="]],[473,473],[475,475]]],[1536399986676,["gjx16@GJXAIOU",[[-1,474,"="]],[475,475],[474,474]]],[1536399999491,["gjx16@GJXAIOU",[[1,474,"< 10;i++"]],[474,474],[482,482]]],[1536400001787,["gjx16@GJXAIOU",[[1,484,"  \n"]],[483,483],[486,486]]],[1536400004068,["gjx16@GJXAIOU",[[1,486,"{}"]],[486,486],[488,488]]],[1536400005614,["gjx16@GJXAIOU",[[1,487,"\n  \n  \n  \n  "]],[487,487],[499,499]]],[1536400008242,["gjx16@GJXAIOU",[[1,493,"  "]],[493,493],[495,495]]],[1536400014232,["gjx16@GJXAIOU",[[1,495,"printf();"]],[495,495],[504,504]]],[1536400017836,["gjx16@GJXAIOU",[[1,502,"::"]],[502,502],[504,504]]],[1536400018625,["gjx16@GJXAIOU",[[-1,502,"::"]],[504,504],[502,502]]],[1536400019814,["gjx16@GJXAIOU",[[1,502,"\"\""]],[502,502],[504,504]]],[1536400023570,["gjx16@GJXAIOU",[[1,503,"??????????????????????????????"]],[503,503],[533,533]]],[1536400025553,["gjx16@GJXAIOU",[[-1,503,"??????????????????????????????"]],[533,533],[503,503]]],[1536400028256,["gjx16@GJXAIOU",[[1,503,"%d"]],[503,503],[505,505]]],[1536400030504,["gjx16@GJXAIOU",[[-1,503,"%d"]],[505,505],[503,503]]],[1536400034271,["gjx16@GJXAIOU",[[1,503,"arrat"]],[503,503],[508,508]]],[1536400034910,["gjx16@GJXAIOU",[[-1,507,"t"]],[508,508],[507,507]]],[1536400037434,["gjx16@GJXAIOU",[[1,507,"y[]"]],[507,507],[510,510]]],[1536400041289,["gjx16@GJXAIOU",[[1,509,"%d"]],[509,509],[511,511]]],[1536400048225,["gjx16@GJXAIOU",[[1,512,"\\n"]],[512,512],[514,514]]],[1536400054258,["gjx16@GJXAIOU",[[1,515,",n"]],[515,515],[517,517]]],[1536400055332,["gjx16@GJXAIOU",[[-1,516,"n"]],[517,517],[516,516]]],[1536400066570,["gjx16@GJXAIOU",[[1,516,"i,arrau"]],[516,516],[523,523]]],[1536400068386,["gjx16@GJXAIOU",[[-1,522,"u"]],[523,523],[522,522]]],[1536400071382,["gjx16@GJXAIOU",[[1,522,"y[li"]],[522,522],[526,526]]],[1536400072738,["gjx16@GJXAIOU",[[-1,524,"li"]],[526,526],[524,524]]],[1536400073696,["gjx16@GJXAIOU",[[1,524,"i["]],[524,524],[526,526]]],[1536400074509,["gjx16@GJXAIOU",[[-1,525,"["]],[526,526],[525,525]]],[1536400075482,["gjx16@GJXAIOU",[[1,525,"]"]],[525,525],[526,526]]],[1536411827432,["gjx16@GJXAIOU",[[1,545,"****"]],[545,545],[547,547]]],[1536411894020,["gjx16@GJXAIOU",[[-1,545,"****"]],[549,549],[545,545]]],[1536411895598,["gjx16@GJXAIOU",[[1,545,"···"]],[545,545],[548,548]]],[1536411896509,["gjx16@GJXAIOU",[[-1,545,"···"]],[548,548],[545,545]]],[1536411898554,["gjx16@GJXAIOU",[[1,545,"```"]],[545,545],[548,548]]],[1536411898579,["gjx16@GJXAIOU",[[1,548,"language\n```\n"]],[548,548],[548,556]]],[1536411899682,["gjx16@GJXAIOU",[[-1,548,"language"],[1,556,"c"]],[548,556],[549,549]]],[1536411899927,["gjx16@GJXAIOU",[[1,549,"'"]],[549,549],[550,550]]],[1536411899953,["gjx16@GJXAIOU",[[-1,549,"'"],[1,550,"’"]],[550,550],[550,550]]],[1536411901051,["gjx16@GJXAIOU",[[-1,549,"’"]],[550,550],[549,549]]],[1536411901301,["gjx16@GJXAIOU",[[1,550,"\n"]],[549,549],[550,550]]],[1536411956580,["gjx16@GJXAIOU",[[1,447,",zheshi"]],[447,447],[454,454]]],[1536411958358,["gjx16@GJXAIOU",[[-1,448,"zheshi"]],[454,454],[448,448]]],[1536411964874,["gjx16@GJXAIOU",[[1,448,"这是部分初始化"]],[448,448],[455,455]]],[1536412025881,["gjx16@GJXAIOU",[[1,458,"int arrat"]],[458,458],[467,467]]],[1536412026718,["gjx16@GJXAIOU",[[-1,466,"t"]],[467,467],[466,466]]],[1536412043653,["gjx16@GJXAIOU",[[1,466,"y[10] = { 0\""]],[466,466],[478,478]]],[1536412044494,["gjx16@GJXAIOU",[[-1,477,"\""]],[478,478],[477,477]]],[1536412053270,["gjx16@GJXAIOU",[[1,477,"};  //将所欲"]],[477,477],[486,486]]],[1536412053978,["gjx16@GJXAIOU",[[-1,484,"所欲"]],[486,486],[484,484]]],[1536412064349,["gjx16@GJXAIOU",[[1,484,"所有元素值为"]],[484,484],[490,490]]],[1536412065164,["gjx16@GJXAIOU",[[-1,488,"值为"]],[490,490],[488,488]]],[1536412071308,["gjx16@GJXAIOU",[[1,488,"置位"]],[488,488],[490,490]]],[1536412071872,["gjx16@GJXAIOU",[[-1,489,"位"]],[490,490],[489,489]]],[1536412074198,["gjx16@GJXAIOU",[[1,489,"为0"]],[489,489],[491,491]]],[1536412074959,["gjx16@GJXAIOU",[[1,494,"\n  "]],[491,491],[494,494]]],[1536412083163,["gjx16@GJXAIOU",[[1,457,"、、"]],[457,457],[459,459]]],[1536412084113,["gjx16@GJXAIOU",[[-1,457,"、、"]],[459,459],[457,457]]],[1536412085961,["gjx16@GJXAIOU",[[1,457,"//\n "]],[457,457],[461,461]]],[1536412090684,["gjx16@GJXAIOU",[[1,498,"//"]],[498,498],[500,500]]],[1536412091476,["gjx16@GJXAIOU",[[1,503,"\n  "]],[500,500],[503,503]]],[1536412095856,["gjx16@GJXAIOU",[[1,503,"ing"]],[503,503],[506,506]]],[1536412096476,["gjx16@GJXAIOU",[[-1,505,"g"]],[506,506],[505,505]]],[1536412098064,["gjx16@GJXAIOU",[[1,505,"t i;"]],[505,505],[509,509]]],[1536412098803,["gjx16@GJXAIOU",[[1,512,"\n  "]],[509,509],[512,512]]],[1536412100701,["gjx16@GJXAIOU",[[1,512,"d"]],[512,512],[513,513]]],[1536412101257,["gjx16@GJXAIOU",[[-1,512,"d"]],[513,513],[512,512]]],[1536412105536,["gjx16@GJXAIOU",[[1,512,"for()"]],[512,512],[517,517]]],[1536412122054,["gjx16@GJXAIOU",[[1,516,"i = 0; i<10"]],[516,516],[527,527]]],[1536412123866,["gjx16@GJXAIOU",[[-1,524,"<10"]],[527,527],[524,524]]],[1536412126067,["gjx16@GJXAIOU",[[1,524," <10"]],[524,524],[528,528]]],[1536412127464,["gjx16@GJXAIOU",[[-1,526,"10"]],[528,528],[526,526]]],[1536412133724,["gjx16@GJXAIOU",[[1,526," 10; i++"]],[526,526],[534,534]]],[1536412136212,["gjx16@GJXAIOU",[[1,538,"\n  "]],[535,535],[538,538]]],[1536412138119,["gjx16@GJXAIOU",[[1,538,"ar"]],[538,538],[540,540]]],[1536412138630,["gjx16@GJXAIOU",[[-1,539,"r"]],[540,540],[539,539]]],[1536412139101,["gjx16@GJXAIOU",[[1,539,"ee"]],[539,539],[541,541]]],[1536412139776,["gjx16@GJXAIOU",[[-1,539,"ee"]],[541,541],[539,539]]],[1536412141318,["gjx16@GJXAIOU",[[1,539,"rrau"]],[539,539],[543,543]]],[1536412141775,["gjx16@GJXAIOU",[[-1,542,"u"]],[543,543],[542,542]]],[1536412142241,["gjx16@GJXAIOU",[[1,542,"y"]],[542,542],[543,543]]],[1536412157311,["gjx16@GJXAIOU",[[1,543,"[i] = 0'"]],[543,543],[551,551]]],[1536412158302,["gjx16@GJXAIOU",[[-1,550,"'"]],[551,551],[550,550]]],[1536412158637,["gjx16@GJXAIOU",[[1,550,";"]],[550,550],[551,551]]],[1536412174786,["gjx16@GJXAIOU",[[1,554,"\n  "]],[551,551],[554,554]]],[1536412178117,["gjx16@GJXAIOU",[[1,554,"}"]],[554,554],[555,555]]],[1536412181281,["gjx16@GJXAIOU",[[1,537,"\n  "]],[537,537],[540,540]]],[1536412185225,["gjx16@GJXAIOU",[[1,537,"{"]],[537,537],[538,538]]],[1536412189078,["gjx16@GJXAIOU",[[1,562,"\n  "]],[559,559],[562,562]]],[1536412189274,["gjx16@GJXAIOU",[[-1,560,"  "],[1,562,"\n"]],[562,562],[561,561]]],[1536412189474,["gjx16@GJXAIOU",[[1,562,"\n"]],[561,561],[562,562]]],[1536412194762,["gjx16@GJXAIOU",[[1,459,"zhi"]],[459,459],[462,462]]],[1536412195492,["gjx16@GJXAIOU",[[-1,459,"zhi"]],[462,462],[459,459]]],[1536412270810,["gjx16@GJXAIOU",[[1,395,"\n"]],[394,394],[395,395]]],[1536412275585,["gjx16@GJXAIOU",[[1,395,"、"]],[395,395],[396,396]]],[1536412296700,["gjx16@GJXAIOU",[[-1,395,"、"]],[396,396],[395,395]]],[1536412301600,["gjx16@GJXAIOU",[[1,395,"/*shu"]],[395,395],[400,400]]],[1536412302433,["gjx16@GJXAIOU",[[-1,397,"shu"]],[400,400],[397,397]]],[1536412308505,["gjx16@GJXAIOU",[[1,397,"数组初始胡"]],[397,397],[402,402]]],[1536412309334,["gjx16@GJXAIOU",[[-1,401,"胡"]],[402,402],[401,401]]],[1536412321336,["gjx16@GJXAIOU",[[1,401,"化的三种方式*、"]],[401,401],[409,409]]],[1536412322173,["gjx16@GJXAIOU",[[-1,408,"、"]],[409,409],[408,408]]],[1536412323270,["gjx16@GJXAIOU",[[1,408,"、"]],[408,408],[409,409]]],[1536412324883,["gjx16@GJXAIOU",[[-1,408,"、"]],[409,409],[408,408]]],[1536412325426,["gjx16@GJXAIOU",[[1,408,"/"]],[408,408],[409,409]]],[1536412327231,["gjx16@GJXAIOU",[[1,410,"\n"]],[409,409],[410,410]]],[1536412341241,["gjx16@GJXAIOU",[[1,410,"  int at"]],[410,410],[418,418]]],[1536412341797,["gjx16@GJXAIOU",[[-1,417,"t"]],[418,418],[417,417]]],[1536412345277,["gjx16@GJXAIOU",[[1,417,"rray{"]],[417,417],[422,422]]],[1536412346073,["gjx16@GJXAIOU",[[-1,421,"{"]],[422,422],[421,421]]],[1536412354629,["gjx16@GJXAIOU",[[1,421,"[10] = {1 "]],[421,421],[431,431]]],[1536412355688,["gjx16@GJXAIOU",[[-1,430," "]],[431,431],[430,430]]],[1536412359175,["gjx16@GJXAIOU",[[1,430,",1."]],[430,430],[433,433]]],[1536412360066,["gjx16@GJXAIOU",[[-1,432,"."]],[433,433],[432,432]]],[1536412377423,["gjx16@GJXAIOU",[[1,432,",3,5,5,6,9,6,8,5};"]],[432,432],[450,450]]],[1536412380122,["gjx16@GJXAIOU",[[1,453,"\n  "]],[450,450],[453,453]]],[1536412386455,["gjx16@GJXAIOU",[[1,450,"//"]],[450,450],[452,452]]],[1536412393506,["gjx16@GJXAIOU",[[1,452,"全部进行赋值"]],[452,452],[458,458]]],[1536412402870,["gjx16@GJXAIOU",[[-1,524,"//"]],[526,526],[524,524]]],[1536412411578,["gjx16@GJXAIOU",[[1,565,"另一只"]],[565,565],[568,568]]],[1536412412240,["gjx16@GJXAIOU",[[-1,567,"只"]],[568,568],[567,567]]],[1536412419594,["gjx16@GJXAIOU",[[1,567,"种置为0 的方法"]],[567,567],[575,575]]],[1536412433182,["gjx16@GJXAIOU",[[-1,407,"*/"]],[407,409],[407,407]]],[1536412434806,["gjx16@GJXAIOU",[[1,634,"*/"]],[634,634],[636,636]]],[1536412438017,["gjx16@GJXAIOU",[[1,395,"\n"]],[395,395],[396,396]]],[1536412438153,["gjx16@GJXAIOU",[[1,396,"\n"]],[396,396],[397,397]]],[1536412483363,["gjx16@GJXAIOU",[[1,734,"\n"]],[733,733],[734,734]]],[1536412484447,["gjx16@GJXAIOU",[[1,734,"*8"]],[734,734],[736,736]]],[1536412485350,["gjx16@GJXAIOU",[[-1,735,"8"]],[736,736],[735,735]]],[1536412486381,["gjx16@GJXAIOU",[[1,735,"***"]],[735,735],[736,736]]],[1536412494370,["gjx16@GJXAIOU",[[1,736,"求数组中最大院"]],[736,736],[743,743]]],[1536412495341,["gjx16@GJXAIOU",[[-1,742,"院"]],[743,743],[742,742]]],[1536412499252,["gjx16@GJXAIOU",[[1,742,"元素的值"]],[742,742],[746,746]]],[1536412506307,["gjx16@GJXAIOU",[[1,754,"int面"]],[754,754],[758,758]]],[1536412506959,["gjx16@GJXAIOU",[[-1,756,"t面"]],[758,758],[756,756]]],[1536412508601,["gjx16@GJXAIOU",[[1,756,"他"]],[756,756],[757,757]]],[1536412510207,["gjx16@GJXAIOU",[[-1,756,"他"]],[757,757],[756,756]]],[1536412510640,["gjx16@GJXAIOU",[[1,756," "]],[756,756],[757,757]]],[1536412511476,["gjx16@GJXAIOU",[[-1,756," "]],[757,757],[756,756]]],[1536412516038,["gjx16@GJXAIOU",[[1,756,"t main()"]],[756,756],[764,764]]],[1536412516635,["gjx16@GJXAIOU",[[1,765,"\n"]],[764,764],[765,765]]],[1536412518421,["gjx16@GJXAIOU",[[1,765,"{}"]],[765,765],[767,767]]],[1536412519916,["gjx16@GJXAIOU",[[1,766,"\n"]],[766,766],[767,767]]],[1536412520106,["gjx16@GJXAIOU",[[1,767,"\n"]],[767,767],[768,768]]],[1536412520233,["gjx16@GJXAIOU",[[1,768,"\n"]],[768,768],[769,769]]],[1536412520384,["gjx16@GJXAIOU",[[1,769,"\n"]],[769,769],[770,770]]],[1536412520617,["gjx16@GJXAIOU",[[1,770,"\n"]],[770,770],[771,771]]],[1536412520770,["gjx16@GJXAIOU",[[1,771,"\n"]],[771,771],[772,772]]],[1536412520941,["gjx16@GJXAIOU",[[1,772,"\n"]],[772,772],[773,773]]],[1536412533843,["gjx16@GJXAIOU",[[1,767,"  int array[5["]],[767,767],[781,781]]],[1536412534894,["gjx16@GJXAIOU",[[-1,780,"["]],[781,781],[780,780]]],[1536412539334,["gjx16@GJXAIOU",[[1,780,"] = P"]],[780,780],[785,785]]],[1536412540250,["gjx16@GJXAIOU",[[-1,784,"P"]],[785,785],[784,784]]],[1536412552432,["gjx16@GJXAIOU",[[1,784,"{2,3,5,6,7}"]],[784,784],[795,795]]],[1536412966585,["gjx16@GJXAIOU",[[1,796,"INT"]],[796,796],[799,799]]],[1536412967506,["gjx16@GJXAIOU",[[-1,796,"INT"]],[799,799],[796,796]]],[1536412970100,["gjx16@GJXAIOU",[[1,796,"  inr"]],[796,796],[801,801]]],[1536412970893,["gjx16@GJXAIOU",[[-1,800,"r"]],[801,801],[800,800]]],[1536412979883,["gjx16@GJXAIOU",[[1,800,"t max = 0;"]],[800,800],[810,810]]],[1536412980331,["gjx16@GJXAIOU",[[1,811,"  \n"]],[810,810],[813,813]]],[1536412984546,["gjx16@GJXAIOU",[[1,813,"int i;"]],[813,813],[819,819]]],[1536412986102,["gjx16@GJXAIOU",[[1,820,"  \n"]],[819,819],[822,822]]],[1536412986926,["gjx16@GJXAIOU",[[1,822,"f"]],[822,822],[823,823]]],[1536412988977,["gjx16@GJXAIOU",[[1,823,"or()"]],[823,823],[827,827]]],[1536412993916,["gjx16@GJXAIOU",[[1,826,"i=0"]],[826,826],[829,829]]],[1536412995568,["gjx16@GJXAIOU",[[-1,827,"=0"]],[829,829],[827,827]]],[1536412997561,["gjx16@GJXAIOU",[[1,827," =0"]],[827,827],[830,830]]],[1536412998215,["gjx16@GJXAIOU",[[-1,829,"0"]],[830,830],[829,829]]],[1536413023645,["gjx16@GJXAIOU",[[1,829," 0;i < 10;i++"]],[829,829],[842,842]]],[1536413044795,["gjx16@GJXAIOU",[[1,843," //想找最大的先遍历"]],[843,843],[854,854]]],[1536413047508,["gjx16@GJXAIOU",[[1,854,"一遍"]],[854,854],[856,856]]],[1536413049882,["gjx16@GJXAIOU",[[1,857,"  \n"]],[856,856],[859,859]]],[1536413054427,["gjx16@GJXAIOU",[[1,859,"{}"]],[859,859],[861,861]]],[1536413056619,["gjx16@GJXAIOU",[[1,860,"\n  \n  \n  \n  \n  "]],[860,860],[875,875]]],[1536413081388,["gjx16@GJXAIOU",[[1,863,"if "]],[863,863],[866,866]]],[1536413082131,["gjx16@GJXAIOU",[[-1,863,"if "]],[866,866],[863,863]]],[1536413086620,["gjx16@GJXAIOU",[[1,863,"  if()"]],[863,863],[869,869]]],[1536413094574,["gjx16@GJXAIOU",[[1,868,"max,"]],[868,868],[872,872]]],[1536413095359,["gjx16@GJXAIOU",[[-1,871,","]],[872,872],[871,871]]],[1536413096046,["gjx16@GJXAIOU",[[1,871,"<"]],[871,871],[872,872]]],[1536413098276,["gjx16@GJXAIOU",[[-1,871,"<"]],[872,872],[871,871]]],[1536413102367,["gjx16@GJXAIOU",[[1,871," <arra"]],[871,871],[877,877]]],[1536413110674,["gjx16@GJXAIOU",[[1,877,"y"]],[877,877],[878,878]]],[1536413115448,["gjx16@GJXAIOU",[[1,873," "]],[873,873],[874,874]]],[1536413121849,["gjx16@GJXAIOU",[[1,879,"[i]"]],[879,879],[882,882]]],[1536413125812,["gjx16@GJXAIOU",[[1,886,"  \n  "]],[883,883],[888,888]]],[1536413142602,["gjx16@GJXAIOU",[[1,888,"  max = array[i];"]],[888,888],[905,905]]],[1536413143318,["gjx16@GJXAIOU",[[1,908,"    \n  "]],[905,905],[912,912]]],[1536413148990,["gjx16@GJXAIOU",[[-1,906,"      "],[1,912,"\n"]],[912,912],[907,907]]],[1536413149638,["gjx16@GJXAIOU",[[-1,907,"\n"]],[907,907],[906,906]]],[1536413150748,["gjx16@GJXAIOU",[[1,906," "]],[906,906],[907,907]]],[1536413151672,["gjx16@GJXAIOU",[[-1,906," "]],[907,907],[906,906]]],[1536413152113,["gjx16@GJXAIOU",[[1,906,"q"]],[906,906],[907,907]]],[1536413152855,["gjx16@GJXAIOU",[[-1,906,"q"]],[907,907],[906,906]]],[1536413153072,["gjx16@GJXAIOU",[[1,906,"  "]],[906,906],[908,908]]],[1536413158356,["gjx16@GJXAIOU",[[-1,915,"  "]],[917,917],[915,915]]],[1536413158526,["gjx16@GJXAIOU",[[-1,915,"\n"]],[915,915],[914,914]]],[1536413158944,["gjx16@GJXAIOU",[[-1,912,"  "]],[914,914],[912,912]]],[1536413159129,["gjx16@GJXAIOU",[[-1,912,"\n"]],[912,912],[911,911]]],[1536413159542,["gjx16@GJXAIOU",[[-1,909,"  "]],[911,911],[909,909]]],[1536413159711,["gjx16@GJXAIOU",[[-1,909,"\n"]],[909,909],[908,908]]],[1536413160380,["gjx16@GJXAIOU",[[-1,906,"  "]],[908,908],[906,906]]],[1536413160655,["gjx16@GJXAIOU",[[-1,906,"\n"]],[906,906],[905,905]]],[1536413164286,["gjx16@GJXAIOU",[[1,910,"  "]],[910,910],[912,912]]],[1536413165607,["gjx16@GJXAIOU",[[-1,910,"  "],[1,912,"\n"]],[912,912],[911,911]]],[1536413166990,["gjx16@GJXAIOU",[[1,911,"  "]],[911,911],[913,913]]],[1536413172233,["gjx16@GJXAIOU",[[1,913,"printf();"]],[913,913],[922,922]]],[1536413176344,["gjx16@GJXAIOU",[[1,920,"\"\""]],[920,920],[922,922]]],[1536413180118,["gjx16@GJXAIOU",[[1,921,"%s"]],[921,921],[923,923]]],[1536413180927,["gjx16@GJXAIOU",[[-1,922,"s"]],[923,923],[922,922]]],[1536413184454,["gjx16@GJXAIOU",[[1,922,"d\\n"]],[922,922],[925,925]]],[1536413196180,["gjx16@GJXAIOU",[[1,926,",max"]],[926,926],[930,930]]],[1536413198803,["gjx16@GJXAIOU",[[1,933,"  \n"]],[932,932],[935,935]]],[1536413200020,["gjx16@GJXAIOU",[[-1,933,"  "],[1,935,"\n"]],[935,935],[934,934]]],[1536413205272,["gjx16@GJXAIOU",[[1,934,"return 0;"]],[934,934],[943,943]]],[1536413214732,["gjx16@GJXAIOU",[[1,921,"max = "]],[921,921],[927,927]]],[1536413220263,["gjx16@GJXAIOU",[[-1,952,"\n"]],[952,952],[951,951]]],[1536413220499,["gjx16@GJXAIOU",[[-1,951,"\n"]],[951,951],[950,950]]],[1536414234781,["gjx16@GJXAIOU",[[1,795,";"]],[795,795],[796,796]]],[1536414813999,["gjx16@GJXAIOU",[[-1,959,"\n"],[1,960,"3"]],[959,959],[960,960]]],[1536414815025,["gjx16@GJXAIOU",[[1,960,"33333"]],[960,960],[965,965]]]],null,"gjx16@GJXAIOU"],["ce28bb1c-41ce-42eb-977e-df47fe09d7c6",1536456860934,"# day5\n\n## 一维数组\n\n### 定义数组\n\n```c\n#include<stdio.h>\n\nint main()\n{\n  int array[10];  //定义了一个数组，数组名为array，里面有十个元素,从0-9；\n\n  array[0] = 20;\n  array[9] = 100;\n\n  printf(\"%d\\n\",array[0]);\n  printf(\"%d\\n\",sizeof(array));//一个整数四个字节，所以这里显示是40\n  return 0;\n}\n```\n\n数组本质就是：在内存中就是一个连续的空间；而且每个元素的类型是一样的；\n\n**连续的赋值操作**\n\n```c\nint i;\nfor(i = 0;i < 10;i++)\n{\n\narray[i] = i;  //\n\n}\n```\n\n**数组的初始化**\n\n\n```c\nint main()\n{\n\n\n/*数组初始化的三种方式\n  int array[10] = {1,1,3,5,5,6,9,6,8,5};//全部进行赋值\n  \n  int array[10] = {100,2,3,3,4,9};//定义一个数组的同时进行赋值初始化,这是部分初始化\n \n  int array[10] = { 0};  //将所有元素置为0\n  //另一种置为0 的方法\n  int i;\n  for(i = 0; i < 10; i++)\n {\n   array[i] = 0;\n  }\n\n*/\n\n  int i;\n  for(i = 0;i < 10;i++)\n  {\n  \n    printf(\"array[%d]\\n\",i,array[i]);\n  \n  }\n\n}\n\n```\n\n**求数组中最大元素的值**\n```c\nint main()\n{\n  int array[5] = {2,3,5,6,7};\n  int max = 0;\n  int i;\n  for(i = 0;i < 10;i++) //想找最大的先遍历一遍\n  {\n    if(max < array[i])\n      max = array[i];\n  }\n\n  printf(\"max = %d\\n\",max);\n\nreturn 0;\n\n}\n```\n\n333333",[[1536456853937,["gjx16@GJXAIOU",[[-1,961,"3333"]],[965,965],[961,961]]],[1536457016558,["gjx16@GJXAIOU",[[-1,837,"10"]],[839,839],[837,837]]],[1536457017366,["gjx16@GJXAIOU",[[1,837,"5"]],[837,837],[838,838]]],[1536457035773,["gjx16@GJXAIOU",[[-1,959,"3"]],[960,960],[959,959]]],[1536457035911,["gjx16@GJXAIOU",[[-1,958,"3"],[1,959,"\n"]],[959,959],[958,958]]],[1536457038944,["gjx16@GJXAIOU",[[-1,958,"\n"],[1,959,"*"]],[958,958],[959,959]]],[1536457039120,["gjx16@GJXAIOU",[[1,959,"***"]],[959,959],[960,960]]],[1536457064291,["gjx16@GJXAIOU",[[1,960,"求数组中的最小值，并求出最小值的编号"]],[960,960],[978,978]]],[1536457066811,["gjx16@GJXAIOU",[[1,980,"\n\n"]],[980,980],[981,981]]],[1536457067539,["gjx16@GJXAIOU",[[-1,981,"\n"],[1,982,"·"]],[981,981],[982,982]]],[1536457067728,["gjx16@GJXAIOU",[[1,982,"·"]],[982,982],[983,983]]],[1536457068757,["gjx16@GJXAIOU",[[-1,982,"·"]],[983,983],[982,982]]],[1536457068903,["gjx16@GJXAIOU",[[-1,981,"·"],[1,982,"\n"]],[982,982],[981,981]]],[1536457069767,["gjx16@GJXAIOU",[[-1,981,"\n"],[1,982,"`"]],[981,981],[982,982]]],[1536457070232,["gjx16@GJXAIOU",[[1,982,"``"]],[982,982],[984,984]]],[1536457070257,["gjx16@GJXAIOU",[[1,984,"language\n```\n"]],[984,984],[984,992]]],[1536457071358,["gjx16@GJXAIOU",[[-1,984,"language"],[1,992,"c"]],[984,992],[985,985]]],[1536457071574,["gjx16@GJXAIOU",[[1,986,"\n"]],[985,985],[986,986]]],[1536457071745,["gjx16@GJXAIOU",[[1,987,"\n"]],[986,986],[987,987]]],[1536457071913,["gjx16@GJXAIOU",[[1,988,"\n"]],[987,987],[988,988]]],[1536457123896,["gjx16@GJXAIOU",[[1,986,"int main()\n{\n  int array[5] = {2,3,5,6,7};\n  int max = 0;\n  int i;\n  for(i = 0;i < 5;i++) //想找最大的先遍历一遍\n  {\n    if(max < array[i])\n      max = array[i];\n  }\n\n  printf(\"max = %d\\n\",max);\n\nreturn 0;\n\n}"]],[986,986],[1184,1184]]],[1536457127472,["gjx16@GJXAIOU",[[-1,1104,"<"]],[1105,1105],[1104,1104]]],[1536457128054,["gjx16@GJXAIOU",[[1,1104,">"]],[1104,1104],[1105,1105]]],[1536457147248,["gjx16@GJXAIOU",[[-1,1036,"ax"]],[1038,1038],[1036,1036]]],[1536457148821,["gjx16@GJXAIOU",[[1,1036,"in"]],[1036,1036],[1038,1038]]],[1536457153970,["gjx16@GJXAIOU",[[-1,1101,"ax"]],[1103,1103],[1101,1101]]],[1536457155162,["gjx16@GJXAIOU",[[1,1101,"in"]],[1101,1101],[1103,1103]]],[1536457169331,["gjx16@GJXAIOU",[[-1,1123,"ax"]],[1125,1125],[1123,1123]]],[1536457170561,["gjx16@GJXAIOU",[[1,1123,"in"]],[1123,1123],[1125,1125]]],[1536457175059,["gjx16@GJXAIOU",[[-1,1153,"max"]],[1156,1156],[1153,1153]]],[1536457176954,["gjx16@GJXAIOU",[[1,1153,"mian"]],[1153,1153],[1157,1157]]],[1536457178562,["gjx16@GJXAIOU",[[-1,1155,"an"]],[1157,1157],[1155,1155]]],[1536457179156,["gjx16@GJXAIOU",[[1,1155,"n"]],[1155,1155],[1156,1156]]],[1536457184089,["gjx16@GJXAIOU",[[-1,1166,"ax"]],[1168,1168],[1166,1166]]],[1536457187025,["gjx16@GJXAIOU",[[1,1166,"in"]],[1166,1166],[1168,1168]]],[1536457236679,["gjx16@GJXAIOU",[[-1,1041,"0"]],[1042,1042],[1041,1041]]],[1536457238871,["gjx16@GJXAIOU",[[1,1041,"ara"]],[1041,1041],[1044,1044]]],[1536457239849,["gjx16@GJXAIOU",[[-1,1043,"a"]],[1044,1044],[1043,1043]]],[1536457247278,["gjx16@GJXAIOU",[[1,1043,"ray[0]"]],[1043,1043],[1049,1049]]],[1536457250976,["gjx16@GJXAIOU",[[-1,1070,"0"]],[1071,1071],[1070,1070]]],[1536457251596,["gjx16@GJXAIOU",[[1,1070,"1"]],[1070,1070],[1071,1071]]],[1536457265243,["gjx16@GJXAIOU",[[-1,1088,"大"]],[1089,1089],[1088,1088]]],[1536457266298,["gjx16@GJXAIOU",[[1,1088,"xiao"]],[1088,1088],[1092,1092]]],[1536457268181,["gjx16@GJXAIOU",[[-1,1088,"xiao"]],[1092,1092],[1088,1088]]],[1536457270374,["gjx16@GJXAIOU",[[1,1088,"小"]],[1088,1088],[1089,1089]]],[1536457280751,["gjx16@GJXAIOU",[[1,1053,"\n  "]],[1050,1050],[1053,1053]]],[1536457297405,["gjx16@GJXAIOU",[[1,1053,"int index = 0;///"]],[1053,1053],[1070,1070]]],[1536457298063,["gjx16@GJXAIOU",[[-1,1069,"/"]],[1070,1070],[1069,1069]]],[1536457332749,["gjx16@GJXAIOU",[[1,1069,"在没有遍历数组之前，默认数组的第0号元素就是最小的元素；"]],[1069,1069],[1097,1097]]],[1536457357565,["gjx16@GJXAIOU",[[1,1174,"\n    "]],[1169,1169],[1174,1174]]],[1536457362802,["gjx16@GJXAIOU",[[1,1174,"  j"]],[1174,1174],[1177,1177]]],[1536457363492,["gjx16@GJXAIOU",[[-1,1176,"j"]],[1177,1177],[1176,1176]]],[1536457370838,["gjx16@GJXAIOU",[[1,1176,"index = i;"]],[1176,1176],[1186,1186]]],[1536457388671,["gjx16@GJXAIOU",[[1,1232,",index = "]],[1232,1232],[1241,1241]]],[1536457414384,["gjx16@GJXAIOU",[[1,1241,"%d"]],[1241,1241],[1243,1243]]],[1536457423749,["gjx16@GJXAIOU",[[1,1250,",index"]],[1250,1250],[1256,1256]]],[1536457498215,["gjx16@GJXAIOU",[[-1,809,"0"]],[810,810],[809,809]]],[1536457506013,["gjx16@GJXAIOU",[[1,809,"array[0]"]],[809,809],[817,817]]],[1536457509722,["gjx16@GJXAIOU",[[-1,838,"0"]],[839,839],[838,838]]],[1536457510089,["gjx16@GJXAIOU",[[1,838,"1"]],[838,838],[839,839]]],[1536457852043,["gjx16@GJXAIOU",[[1,1286,"\n"]],[1285,1285],[1286,1286]]],[1536457852221,["gjx16@GJXAIOU",[[1,1287,"\n"]],[1286,1286],[1287,1287]]],[1536457856780,["gjx16@GJXAIOU",[[-1,1287,"\n"],[1,1288,"*"]],[1287,1287],[1288,1288]]],[1536457856969,["gjx16@GJXAIOU",[[1,1288,"***"]],[1288,1288],[1289,1289]]],[1536457860044,["gjx16@GJXAIOU",[[1,1289,"qiu shuzu "]],[1289,1289],[1299,1299]]],[1536457862133,["gjx16@GJXAIOU",[[-1,1289,"qiu shuzu "]],[1299,1299],[1289,1289]]],[1536457874087,["gjx16@GJXAIOU",[[1,1289,"求数组元素和"]],[1289,1289],[1295,1295]]],[1536457876489,["gjx16@GJXAIOU",[[1,1297,"\n\n"]],[1297,1297],[1298,1298]]],[1536457876713,["gjx16@GJXAIOU",[[1,1299,"\n"]],[1298,1298],[1299,1299]]],[1536457888910,["gjx16@GJXAIOU",[[-1,1299,"\n"],[1,1300,"·"]],[1299,1299],[1300,1300]]],[1536457889110,["gjx16@GJXAIOU",[[1,1300,"·"]],[1300,1300],[1301,1301]]],[1536457889724,["gjx16@GJXAIOU",[[-1,1300,"·"]],[1301,1301],[1300,1300]]],[1536457889897,["gjx16@GJXAIOU",[[-1,1299,"·"],[1,1300,"\n"]],[1300,1300],[1299,1299]]],[1536457890601,["gjx16@GJXAIOU",[[-1,1299,"\n"],[1,1300,"`"]],[1299,1299],[1300,1300]]],[1536457891319,["gjx16@GJXAIOU",[[1,1300,"``"]],[1300,1300],[1302,1302]]],[1536457891344,["gjx16@GJXAIOU",[[1,1302,"language\n```\n"]],[1302,1302],[1302,1310]]],[1536457892390,["gjx16@GJXAIOU",[[-1,1302,"language"],[1,1310,"c"]],[1302,1310],[1303,1303]]],[1536457892776,["gjx16@GJXAIOU",[[1,1304,"\n"]],[1303,1303],[1304,1304]]],[1536457892944,["gjx16@GJXAIOU",[[1,1305,"\n"]],[1304,1304],[1305,1305]]],[1536457901069,["gjx16@GJXAIOU",[[1,1305,"int main()"]],[1305,1305],[1315,1315]]],[1536457901788,["gjx16@GJXAIOU",[[1,1316,"\n"]],[1315,1315],[1316,1316]]],[1536457904383,["gjx16@GJXAIOU",[[1,1316,"{}"]],[1316,1316],[1318,1318]]],[1536457905483,["gjx16@GJXAIOU",[[1,1317,"\n"]],[1317,1317],[1318,1318]]],[1536457905630,["gjx16@GJXAIOU",[[1,1318,"\n"]],[1318,1318],[1319,1319]]],[1536457905840,["gjx16@GJXAIOU",[[1,1319,"\n"]],[1319,1319],[1320,1320]]],[1536457906006,["gjx16@GJXAIOU",[[1,1320,"\n"]],[1320,1320],[1321,1321]]],[1536457906210,["gjx16@GJXAIOU",[[1,1321,"\n"]],[1321,1321],[1322,1322]]],[1536457906599,["gjx16@GJXAIOU",[[1,1322,"\n"]],[1322,1322],[1323,1323]]],[1536457906803,["gjx16@GJXAIOU",[[1,1323,"\n"]],[1323,1323],[1324,1324]]],[1536457906996,["gjx16@GJXAIOU",[[1,1324,"\n"]],[1324,1324],[1325,1325]]],[1536457907210,["gjx16@GJXAIOU",[[1,1325,"\n"]],[1325,1325],[1326,1326]]],[1536457927667,["gjx16@GJXAIOU",[[1,1318,"  int i;"]],[1318,1318],[1326,1326]]],[1536457928410,["gjx16@GJXAIOU",[[1,1327,"  \n"]],[1326,1326],[1329,1329]]],[1536457929215,["gjx16@GJXAIOU",[[1,1329,"ji"]],[1329,1329],[1331,1331]]],[1536457930301,["gjx16@GJXAIOU",[[-1,1329,"ji"]],[1331,1331],[1329,1329]]],[1536457934108,["gjx16@GJXAIOU",[[1,1329,"int aun"]],[1329,1329],[1336,1336]]],[1536457935983,["gjx16@GJXAIOU",[[-1,1333,"aun"]],[1336,1336],[1333,1333]]],[1536457936929,["gjx16@GJXAIOU",[[1,1333,"sun"]],[1333,1333],[1336,1336]]],[1536457938067,["gjx16@GJXAIOU",[[-1,1335,"n"]],[1336,1336],[1335,1335]]],[1536457938771,["gjx16@GJXAIOU",[[1,1335,"m"]],[1335,1335],[1336,1336]]],[1536457943099,["gjx16@GJXAIOU",[[1,1336," = 0;"]],[1336,1336],[1341,1341]]],[1536457943832,["gjx16@GJXAIOU",[[1,1342,"  \n"]],[1341,1341],[1344,1344]]],[1536457945871,["gjx16@GJXAIOU",[[1,1344,"foi"]],[1344,1344],[1347,1347]]],[1536457946662,["gjx16@GJXAIOU",[[-1,1345,"oi"]],[1347,1347],[1345,1345]]],[1536457952132,["gjx16@GJXAIOU",[[1,1319,"\n  "]],[1319,1319],[1322,1322]]],[1536457955029,["gjx16@GJXAIOU",[[-1,1322," "]],[1323,1323],[1322,1322]]],[1536457956242,["gjx16@GJXAIOU",[[1,1322,"1"]],[1322,1322],[1323,1323]]],[1536457957328,["gjx16@GJXAIOU",[[-1,1322,"1"]],[1323,1323],[1322,1322]]],[1536457960015,["gjx16@GJXAIOU",[[1,1319,"int"]],[1319,1319],[1322,1322]]],[1536457961550,["gjx16@GJXAIOU",[[-1,1319,"int"]],[1322,1322],[1319,1319]]],[1536457972887,["gjx16@GJXAIOU",[[1,1319," int array[10] = {}"]],[1319,1319],[1338,1338]]],[1536457993310,["gjx16@GJXAIOU",[[1,1337,"1,2,3,4,5,6,7,8,9,0"]],[1337,1337],[1356,1356]]],[1536457996535,["gjx16@GJXAIOU",[[1,1357,";"]],[1357,1357],[1358,1358]]],[1536458002225,["gjx16@GJXAIOU",[[1,1386,"or()"]],[1386,1386],[1390,1390]]],[1536458015837,["gjx16@GJXAIOU",[[1,1389,"i = 0; i<"]],[1389,1389],[1398,1398]]],[1536458017268,["gjx16@GJXAIOU",[[-1,1397,"<"]],[1398,1398],[1397,1397]]],[1536458028272,["gjx16@GJXAIOU",[[1,1397," < 10; I+"]],[1397,1397],[1406,1406]]],[1536458029040,["gjx16@GJXAIOU",[[-1,1404,"I+"]],[1406,1406],[1404,1404]]],[1536458031038,["gjx16@GJXAIOU",[[1,1404,"i++"]],[1404,1404],[1407,1407]]],[1536458032862,["gjx16@GJXAIOU",[[1,1409,"  \n"]],[1408,1408],[1411,1411]]],[1536458035359,["gjx16@GJXAIOU",[[1,1411,"{}"]],[1411,1411],[1413,1413]]],[1536458037510,["gjx16@GJXAIOU",[[1,1412,"\n  \n  \n  \n  \n  \n  "]],[1412,1412],[1430,1430]]],[1536458046375,["gjx16@GJXAIOU",[[1,1415,"  sun"]],[1415,1415],[1420,1420]]],[1536458046897,["gjx16@GJXAIOU",[[-1,1419,"n"]],[1420,1420],[1419,1419]]],[1536458057509,["gjx16@GJXAIOU",[[1,1419,"m = sum +array"]],[1419,1419],[1433,1433]]],[1536458059644,["gjx16@GJXAIOU",[[-1,1429,"rray"]],[1433,1433],[1429,1429]]],[1536458059960,["gjx16@GJXAIOU",[[-1,1428,"a"]],[1429,1429],[1428,1428]]],[1536458062708,["gjx16@GJXAIOU",[[1,1428," array "]],[1428,1428],[1435,1435]]],[1536458063462,["gjx16@GJXAIOU",[[-1,1434," "]],[1435,1435],[1434,1434]]],[1536458069427,["gjx16@GJXAIOU",[[1,1434,"[i];"]],[1434,1434],[1438,1438]]],[1536458073731,["gjx16@GJXAIOU",[[-1,1448,"  "]],[1450,1450],[1448,1448]]],[1536458073909,["gjx16@GJXAIOU",[[-1,1448,"\n"]],[1448,1448],[1447,1447]]],[1536458074318,["gjx16@GJXAIOU",[[-1,1445,"  "]],[1447,1447],[1445,1445]]],[1536458074504,["gjx16@GJXAIOU",[[-1,1445,"\n"]],[1445,1445],[1444,1444]]],[1536458074874,["gjx16@GJXAIOU",[[-1,1442,"  "]],[1444,1444],[1442,1442]]],[1536458075121,["gjx16@GJXAIOU",[[-1,1442,"\n"]],[1442,1442],[1441,1441]]],[1536458075303,["gjx16@GJXAIOU",[[-1,1440," "]],[1441,1441],[1440,1440]]],[1536458086038,["gjx16@GJXAIOU",[[1,1446,"  printf();"]],[1446,1446],[1457,1457]]],[1536458089436,["gjx16@GJXAIOU",[[1,1455,"\"\""]],[1455,1455],[1457,1457]]],[1536458095312,["gjx16@GJXAIOU",[[1,1456,"%d\\n"]],[1456,1456],[1460,1460]]],[1536458100743,["gjx16@GJXAIOU",[[1,1456,"sum = "]],[1456,1456],[1462,1462]]],[1536458106101,["gjx16@GJXAIOU",[[1,1467,",sum"]],[1467,1467],[1471,1471]]],[1536458110053,["gjx16@GJXAIOU",[[1,1474,"  \n"]],[1473,1473],[1476,1476]]],[1536458110780,["gjx16@GJXAIOU",[[-1,1474,"  "],[1,1476,"\n"]],[1476,1476],[1475,1475]]],[1536458112219,["gjx16@GJXAIOU",[[1,1475,"tr"]],[1475,1475],[1477,1477]]],[1536458113542,["gjx16@GJXAIOU",[[-1,1475,"tr"]],[1477,1477],[1475,1475]]],[1536458119399,["gjx16@GJXAIOU",[[1,1475,"return 0"]],[1475,1475],[1483,1483]]],[1536458120183,["gjx16@GJXAIOU",[[1,1483,";"]],[1483,1483],[1484,1484]]],[1536458124790,["gjx16@GJXAIOU",[[1,1475,"  "]],[1475,1475],[1477,1477]]],[1536458204177,["gjx16@GJXAIOU",[[-1,1491,"\n"]],[1491,1491],[1490,1490]]],[1536458204341,["gjx16@GJXAIOU",[[-1,1490,"\n"]],[1490,1490],[1489,1489]]],[1536458204526,["gjx16@GJXAIOU",[[-1,1489,"\n"]],[1489,1489],[1488,1488]]],[1536458204966,["gjx16@GJXAIOU",[[-1,1488,"\n"]],[1488,1488],[1487,1487]]],[1536458253169,["gjx16@GJXAIOU",[[1,1494,"\n"]],[1493,1493],[1494,1494]]],[1536458253669,["gjx16@GJXAIOU",[[1,1495,"\n"]],[1494,1494],[1495,1495]]],[1536458260867,["gjx16@GJXAIOU",[[-1,1495,"\n"],[1,1496,"*"]],[1495,1495],[1496,1496]]],[1536458261021,["gjx16@GJXAIOU",[[1,1496,"***"]],[1496,1496],[1497,1497]]],[1536458262979,["gjx16@GJXAIOU",[[1,1497,"dayin"]],[1497,1497],[1502,1502]]],[1536458264601,["gjx16@GJXAIOU",[[-1,1497,"dayin"]],[1502,1502],[1497,1497]]],[1536458271737,["gjx16@GJXAIOU",[[1,1497,"打印所欲"]],[1497,1497],[1501,1501]]],[1536458272582,["gjx16@GJXAIOU",[[-1,1500,"欲"]],[1501,1501],[1500,1500]]],[1536458274022,["gjx16@GJXAIOU",[[1,1500,"有"]],[1500,1500],[1501,1501]]],[1536458276569,["gjx16@GJXAIOU",[[-1,1497,"打印所有"]],[1501,1501],[1497,1497]]],[1536458292797,["gjx16@GJXAIOU",[[1,1497,"打印数组中大于平均值的所欲"]],[1497,1497],[1510,1510]]],[1536458293582,["gjx16@GJXAIOU",[[-1,1509,"欲"]],[1510,1510],[1509,1509]]],[1536458297337,["gjx16@GJXAIOU",[[1,1509,"有"]],[1509,1509],[1510,1510]]],[1536458314389,["gjx16@GJXAIOU",[[1,1510,"的值与其下标"]],[1510,1510],[1516,1516]]],[1536458316911,["gjx16@GJXAIOU",[[1,1518,"\n\n"]],[1518,1518],[1519,1519]]],[1536458317068,["gjx16@GJXAIOU",[[1,1520,"\n"]],[1519,1519],[1520,1520]]],[1536458318736,["gjx16@GJXAIOU",[[1,1520,"  "]],[1520,1520],[1522,1522]]],[1536458320254,["gjx16@GJXAIOU",[[-1,1521," "]],[1522,1522],[1521,1521]]],[1536458321686,["gjx16@GJXAIOU",[[1,1521,"```"]],[1521,1521],[1524,1524]]],[1536458323581,["gjx16@GJXAIOU",[[-1,1520," ```"]],[1524,1524],[1520,1520]]],[1536458324392,["gjx16@GJXAIOU",[[-1,1520,"\n"],[1,1521,"`"]],[1520,1520],[1521,1521]]],[1536458324840,["gjx16@GJXAIOU",[[1,1521,"``"]],[1521,1521],[1523,1523]]],[1536458324865,["gjx16@GJXAIOU",[[1,1523,"language\n```\n"]],[1523,1523],[1523,1531]]],[1536458325843,["gjx16@GJXAIOU",[[-1,1523,"language"],[1,1531,"c"]],[1523,1531],[1524,1524]]],[1536458326100,["gjx16@GJXAIOU",[[1,1525,"\n"]],[1524,1524],[1525,1525]]],[1536458326300,["gjx16@GJXAIOU",[[1,1526,"\n"]],[1525,1525],[1526,1526]]],[1536458373730,["gjx16@GJXAIOU",[[1,1526,"int main()"]],[1526,1526],[1536,1536]]],[1536458374359,["gjx16@GJXAIOU",[[1,1537,"\n"]],[1536,1536],[1537,1537]]],[1536458375405,["gjx16@GJXAIOU",[[1,1537,"P"]],[1537,1537],[1538,1538]]],[1536458376369,["gjx16@GJXAIOU",[[-1,1537,"P"]],[1538,1538],[1537,1537]]],[1536458377915,["gjx16@GJXAIOU",[[1,1537,"{}"]],[1537,1537],[1539,1539]]],[1536458378996,["gjx16@GJXAIOU",[[1,1538,"\n"]],[1538,1538],[1539,1539]]],[1536458379168,["gjx16@GJXAIOU",[[1,1539,"\n"]],[1539,1539],[1540,1540]]],[1536458379337,["gjx16@GJXAIOU",[[1,1540,"\n"]],[1540,1540],[1541,1541]]],[1536458379500,["gjx16@GJXAIOU",[[1,1541,"\n"]],[1541,1541],[1542,1542]]],[1536458379663,["gjx16@GJXAIOU",[[1,1542,"\n"]],[1542,1542],[1543,1543]]],[1536458389210,["gjx16@GJXAIOU",[[1,1539,"  d"]],[1539,1539],[1542,1542]]],[1536458390323,["gjx16@GJXAIOU",[[-1,1541,"d"]],[1542,1542],[1541,1541]]],[1536458392836,["gjx16@GJXAIOU",[[1,1541,"imt a"]],[1541,1541],[1546,1546]]],[1536458394519,["gjx16@GJXAIOU",[[-1,1542,"mt a"]],[1546,1546],[1542,1542]]],[1536458418405,["gjx16@GJXAIOU",[[1,1542,"nt array[10] = {1 2 "]],[1542,1542],[1562,1562]]],[1536458432852,["gjx16@GJXAIOU",[[1,1562,"3 4 5 6 7 8 9 0};"]],[1562,1562],[1579,1579]]],[1536458433464,["gjx16@GJXAIOU",[[1,1580,"  \n"]],[1579,1579],[1582,1582]]],[1536458445626,["gjx16@GJXAIOU",[[1,1582,"int i "]],[1582,1582],[1588,1588]]],[1536458446246,["gjx16@GJXAIOU",[[-1,1587," "]],[1588,1588],[1587,1587]]],[1536458446829,["gjx16@GJXAIOU",[[1,1587,";"]],[1587,1587],[1588,1588]]],[1536458447328,["gjx16@GJXAIOU",[[1,1589,"  \n"]],[1588,1588],[1591,1591]]],[1536458448790,["gjx16@GJXAIOU",[[1,1591,"inr"]],[1591,1591],[1594,1594]]],[1536458449428,["gjx16@GJXAIOU",[[-1,1593,"r"]],[1594,1594],[1593,1593]]],[1536458451356,["gjx16@GJXAIOU",[[1,1593,"t a"]],[1593,1593],[1596,1596]]],[1536458884546,["gjx16@GJXAIOU",[[1,1596,"ver ="]],[1596,1596],[1601,1601]]],[1536458910735,["gjx16@GJXAIOU",[[-1,1599," ="]],[1601,1601],[1599,1599]]],[1536458911742,["gjx16@GJXAIOU",[[1,1599,";"]],[1599,1599],[1600,1600]]],[1536458912513,["gjx16@GJXAIOU",[[1,1601,"  \n"]],[1600,1600],[1603,1603]]],[1536458920004,["gjx16@GJXAIOU",[[1,1603,"int sum = 0;"]],[1603,1603],[1615,1615]]],[1536458921074,["gjx16@GJXAIOU",[[1,1616,"  \n"]],[1615,1615],[1618,1618]]],[1536458924287,["gjx16@GJXAIOU",[[1,1618,"for "]],[1618,1618],[1622,1622]]],[1536458926944,["gjx16@GJXAIOU",[[-1,1621," "]],[1622,1622],[1621,1621]]],[1536458928059,["gjx16@GJXAIOU",[[1,1621,"（）"]],[1621,1621],[1623,1623]]],[1536458933686,["gjx16@GJXAIOU",[[-1,1621,"（）"]],[1622,1622],[1621,1621]]],[1536458936201,["gjx16@GJXAIOU",[[1,1621,"()"]],[1621,1621],[1623,1623]]],[1536458959278,["gjx16@GJXAIOU",[[1,1622,"i = 0; i <"]],[1622,1622],[1632,1632]]],[1536458961558,["gjx16@GJXAIOU",[[1,1632,"10"]],[1632,1632],[1634,1634]]],[1536458963309,["gjx16@GJXAIOU",[[-1,1632,"10"]],[1634,1634],[1632,1632]]],[1536458971479,["gjx16@GJXAIOU",[[1,1632," 10;i++"]],[1632,1632],[1639,1639]]],[1536458978130,["gjx16@GJXAIOU",[[1,1641,"  {}"]],[1641,1641],[1645,1645]]],[1536458981630,["gjx16@GJXAIOU",[[1,1644,"\n  \n  \n  \n  "]],[1644,1644],[1656,1656]]],[1536458984071,["gjx16@GJXAIOU",[[1,1647,"  "]],[1647,1647],[1649,1649]]],[1536459036207,["gjx16@GJXAIOU",[[1,1649,"sum + "]],[1649,1649],[1655,1655]]],[1536459037190,["gjx16@GJXAIOU",[[-1,1654," "]],[1655,1655],[1654,1654]]],[1536459040790,["gjx16@GJXAIOU",[[1,1654,"= a"]],[1654,1654],[1657,1657]]],[1536459041536,["gjx16@GJXAIOU",[[-1,1656,"a"]],[1657,1657],[1656,1656]]],[1536459047488,["gjx16@GJXAIOU",[[1,1656,"array[i];"]],[1656,1656],[1665,1665]]],[1536459059488,["gjx16@GJXAIOU",[[-1,1669,"  "]],[1671,1671],[1669,1669]]],[1536459059894,["gjx16@GJXAIOU",[[-1,1669,"\n"]],[1669,1669],[1668,1668]]],[1536459060597,["gjx16@GJXAIOU",[[-1,1666,"  "]],[1668,1668],[1666,1666]]],[1536459060980,["gjx16@GJXAIOU",[[-1,1666,"\n"]],[1666,1666],[1665,1665]]],[1536459064413,["gjx16@GJXAIOU",[[1,1670,"  "]],[1670,1670],[1672,1672]]],[1536459099147,["gjx16@GJXAIOU",[[1,1672,"aver = aum"]],[1672,1672],[1682,1682]]],[1536459100701,["gjx16@GJXAIOU",[[-1,1679,"aum"]],[1682,1682],[1679,1679]]],[1536459130656,["gjx16@GJXAIOU",[[1,1679,"sum /a0"]],[1679,1679],[1686,1686]]],[1536459131534,["gjx16@GJXAIOU",[[-1,1684,"a0"]],[1686,1686],[1684,1684]]],[1536459133609,["gjx16@GJXAIOU",[[1,1684,"10;"]],[1684,1684],[1687,1687]]],[1536459135606,["gjx16@GJXAIOU",[[1,1688,"  \n"]],[1687,1687],[1690,1690]]],[1536459138213,["gjx16@GJXAIOU",[[1,1690,"if"]],[1690,1690],[1692,1692]]],[1536459140715,["gjx16@GJXAIOU",[[1,1692,"()"]],[1692,1692],[1694,1694]]],[1536459143930,["gjx16@GJXAIOU",[[1,1693,"i"]],[1693,1693],[1694,1694]]],[1536459145101,["gjx16@GJXAIOU",[[-1,1693,"i"]],[1694,1694],[1693,1693]]],[1536459162678,["gjx16@GJXAIOU",[[1,1693,"array[i] >aver,"]],[1693,1693],[1708,1708]]],[1536459163727,["gjx16@GJXAIOU",[[-1,1707,","]],[1708,1708],[1707,1707]]],[1536459166218,["gjx16@GJXAIOU",[[1,1709,"  \n"]],[1708,1708],[1711,1711]]],[1536459168865,["gjx16@GJXAIOU",[[1,1711,"{}"]],[1711,1711],[1713,1713]]],[1536459170962,["gjx16@GJXAIOU",[[1,1712,"\n  \n  \n  \n  \n  "]],[1712,1712],[1727,1727]]],[1536459199640,["gjx16@GJXAIOU",[[1,1715,"  printf();"]],[1715,1715],[1726,1726]]],[1536459207874,["gjx16@GJXAIOU",[[1,1724,":"]],[1724,1724],[1725,1725]]],[1536459208823,["gjx16@GJXAIOU",[[-1,1724,":"]],[1725,1725],[1724,1724]]],[1536459210143,["gjx16@GJXAIOU",[[1,1724,"\n"]],[1724,1724],[1725,1725]]],[1536459211156,["gjx16@GJXAIOU",[[-1,1724,"\n"]],[1725,1725],[1724,1724]]],[1536459213394,["gjx16@GJXAIOU",[[1,1724,"\"\""]],[1724,1724],[1726,1726]]],[1536459217068,["gjx16@GJXAIOU",[[1,1725,"/5"]],[1725,1725],[1727,1727]]],[1536459218496,["gjx16@GJXAIOU",[[-1,1725,"/5"]],[1727,1727],[1725,1725]]],[1536459225318,["gjx16@GJXAIOU",[[1,1725,"%d\\n"]],[1725,1725],[1729,1729]]],[1536459236289,["gjx16@GJXAIOU",[[1,1730,",array"]],[1730,1730],[1736,1736]]],[1536459272776,["gjx16@GJXAIOU",[[1,1618,"\n  "]],[1615,1615],[1618,1618]]],[1536459283266,["gjx16@GJXAIOU",[[1,1618,"int index = 0;"]],[1618,1618],[1632,1632]]],[1536459318133,["gjx16@GJXAIOU",[[1,1758,"  printf();"]],[1758,1758],[1769,1769]]],[1536459328186,["gjx16@GJXAIOU",[[1,1767,"“”"]],[1767,1767],[1769,1769]]],[1536459328914,["gjx16@GJXAIOU",[[-1,1767,"“”"]],[1769,1769],[1767,1767]]],[1536459330662,["gjx16@GJXAIOU",[[1,1767,"\"\""]],[1767,1767],[1769,1769]]],[1536459336669,["gjx16@GJXAIOU",[[1,1768,"%d\\n"]],[1768,1768],[1772,1772]]],[1536459343741,["gjx16@GJXAIOU",[[1,1773,",index"]],[1773,1773],[1779,1779]]],[1536459353776,["gjx16@GJXAIOU",[[1,1732,"\n  "]],[1729,1729],[1732,1732]]],[1536459364006,["gjx16@GJXAIOU",[[1,1732,"  index = i;"]],[1732,1732],[1744,1744]]],[1536459367742,["gjx16@GJXAIOU",[[-1,1800,"  "]],[1802,1802],[1800,1800]]],[1536459368140,["gjx16@GJXAIOU",[[-1,1800,"\n"]],[1800,1800],[1799,1799]]],[1536459369042,["gjx16@GJXAIOU",[[-1,1797,"  "]],[1799,1799],[1797,1797]]],[1536459369237,["gjx16@GJXAIOU",[[-1,1797,"\n"]],[1797,1797],[1796,1796]]],[1536459616647,["gjx16@GJXAIOU",[[1,1519,"zhe"]],[1519,1519],[1522,1522]]],[1536459617957,["gjx16@GJXAIOU",[[-1,1519,"zhe"]],[1522,1522],[1519,1519]]],[1536459624740,["gjx16@GJXAIOU",[[1,1519,"这个程序为确定"]],[1519,1519],[1526,1526]]],[1536459627363,["gjx16@GJXAIOU",[[-1,1523,"为"]],[1524,1524],[1523,1523]]],[1536459629833,["gjx16@GJXAIOU",[[1,1523,"未"]],[1523,1523],[1524,1524]]],[1536459636632,["gjx16@GJXAIOU",[[1,1815,"\n"]],[1814,1814],[1815,1815]]],[1536459636801,["gjx16@GJXAIOU",[[1,1816,"\n"]],[1815,1815],[1816,1816]]],[1536459637476,["gjx16@GJXAIOU",[[1,1817,"\n"]],[1816,1816],[1817,1817]]],[1536460134512,["gjx16@GJXAIOU",[[1,1818,"\n"]],[1814,1814],[1815,1815]]],[1536460134667,["gjx16@GJXAIOU",[[1,1819,"\n"]],[1815,1815],[1816,1816]]],[1536460136602,["gjx16@GJXAIOU",[[1,1816,"****"]],[1816,1816],[1818,1818]]],[1536460168368,["gjx16@GJXAIOU",[[1,1818,"数组你只"]],[1818,1818],[1822,1822]]],[1536460169473,["gjx16@GJXAIOU",[[-1,1820,"你只"]],[1822,1822],[1820,1820]]],[1536460184419,["gjx16@GJXAIOU",[[1,1820,"逆置"]],[1820,1820],[1822,1822]]],[1536460185966,["gjx16@GJXAIOU",[[1,1828,"\n"]],[1824,1824],[1825,1825]]],[1536460186145,["gjx16@GJXAIOU",[[1,1829,"\n"]],[1825,1825],[1826,1826]]],[1536460189734,["gjx16@GJXAIOU",[[1,1826,"```"]],[1826,1826],[1829,1829]]],[1536460189760,["gjx16@GJXAIOU",[[1,1829,"language\n```\n"]],[1829,1829],[1829,1837]]],[1536460190819,["gjx16@GJXAIOU",[[-1,1829,"language"],[1,1837,"c"]],[1829,1837],[1830,1830]]],[1536460191047,["gjx16@GJXAIOU",[[1,1831,"\n"]],[1830,1830],[1831,1831]]],[1536460223340,["gjx16@GJXAIOU",[[1,1831," "]],[1831,1831],[1832,1832]]],[1536460274776,["gjx16@GJXAIOU",[[1,1832," "]],[1832,1832],[1833,1833]]],[1536460602959,["gjx16@GJXAIOU",[[-1,1831,"  "]],[1833,1833],[1831,1831]]],[1536460612901,["gjx16@GJXAIOU",[[1,1831,"int main()"]],[1831,1831],[1841,1841]]],[1536460613650,["gjx16@GJXAIOU",[[1,1842,"\n"]],[1841,1841],[1842,1842]]],[1536460615832,["gjx16@GJXAIOU",[[1,1842,"{}"]],[1842,1842],[1844,1844]]],[1536460617035,["gjx16@GJXAIOU",[[1,1843,"\n"]],[1843,1843],[1844,1844]]],[1536460617206,["gjx16@GJXAIOU",[[1,1844,"\n"]],[1844,1844],[1845,1845]]],[1536460617387,["gjx16@GJXAIOU",[[1,1845,"\n"]],[1845,1845],[1846,1846]]],[1536460617571,["gjx16@GJXAIOU",[[1,1846,"\n"]],[1846,1846],[1847,1847]]],[1536460617749,["gjx16@GJXAIOU",[[1,1847,"\n"]],[1847,1847],[1848,1848]]],[1536460629044,["gjx16@GJXAIOU",[[1,1844,"  int array["]],[1844,1844],[1856,1856]]],[1536460636914,["gjx16@GJXAIOU",[[1,1856,"10] = {};"]],[1856,1856],[1865,1865]]],[1536460641970,["gjx16@GJXAIOU",[[1,1863,"1,2 ,3"]],[1863,1863],[1869,1869]]],[1536460642899,["gjx16@GJXAIOU",[[-1,1866," ,3"]],[1869,1869],[1866,1866]]],[1536460652804,["gjx16@GJXAIOU",[[1,1866,",3,4,5,6,7,8 "]],[1866,1866],[1879,1879]]],[1536460653489,["gjx16@GJXAIOU",[[-1,1878," "]],[1879,1879],[1878,1878]]],[1536460656835,["gjx16@GJXAIOU",[[1,1878,",9,0"]],[1878,1878],[1882,1882]]],[1536460660446,["gjx16@GJXAIOU",[[1,1885,"  \n"]],[1884,1884],[1887,1887]]],[1536460663671,["gjx16@GJXAIOU",[[1,1887,"int i"]],[1887,1887],[1892,1892]]],[1536460666418,["gjx16@GJXAIOU",[[-1,1889,"t i"]],[1892,1892],[1889,1889]]],[1536460668216,["gjx16@GJXAIOU",[[1,1889,"t "]],[1889,1889],[1891,1891]]],[1536460674397,["gjx16@GJXAIOU",[[1,1887,"\n  "]],[1887,1887],[1890,1890]]],[1536460679777,["gjx16@GJXAIOU",[[-1,1885,"  "],[1,1887,"\n"]],[1887,1887],[1886,1886]]],[1536460684952,["gjx16@GJXAIOU",[[1,1886,"//bufengji"]],[1886,1886],[1896,1896]]],[1536460686535,["gjx16@GJXAIOU",[[-1,1888,"bufengji"]],[1896,1896],[1888,1888]]],[1536460690354,["gjx16@GJXAIOU",[[1,1888,"部分交换"]],[1888,1888],[1892,1892]]],[1536461103461,["gjx16@GJXAIOU",[[1,1899,"透明片"]],[1899,1899],[1902,1902]]],[1536461104364,["gjx16@GJXAIOU",[[-1,1899,"透明片"]],[1902,1902],[1899,1899]]],[1536461108027,["gjx16@GJXAIOU",[[1,1899,"tmp = "]],[1899,1899],[1905,1905]]],[1536461159513,["gjx16@GJXAIOU",[[1,1905,"array[0];"]],[1905,1905],[1914,1914]]],[1536461160101,["gjx16@GJXAIOU",[[1,1915,"  \n"]],[1914,1914],[1917,1917]]],[1536461163739,["gjx16@GJXAIOU",[[1,1917,"ara"]],[1917,1917],[1920,1920]]],[1536461164629,["gjx16@GJXAIOU",[[-1,1919,"a"]],[1920,1920],[1919,1919]]],[1536461172332,["gjx16@GJXAIOU",[[1,1919,"ray[0] = "]],[1919,1919],[1928,1928]]],[1536461181795,["gjx16@GJXAIOU",[[1,1928,"array[1];"]],[1928,1928],[1937,1937]]],[1536461215028,["gjx16@GJXAIOU",[[1,1938,"  \n  \n"]],[1937,1937],[1940,1940]]],[1536461226423,["gjx16@GJXAIOU",[[1,1940,"array[1] = arrayl"]],[1940,1940],[1957,1957]]],[1536461229175,["gjx16@GJXAIOU",[[-1,1951,"arrayl"]],[1957,1957],[1951,1951]]],[1536461231616,["gjx16@GJXAIOU",[[1,1951,"tmp;"]],[1951,1951],[1955,1955]]],[1536461232824,["gjx16@GJXAIOU",[[1,1959,"  \n"]],[1955,1955],[1958,1958]]],[1536461233683,["gjx16@GJXAIOU",[[-1,1956,"  "],[1,1958,"\n"]],[1958,1958],[1957,1957]]],[1536461233951,["gjx16@GJXAIOU",[[1,1958,"\n"]],[1957,1957],[1958,1958]]],[1536461255152,["gjx16@GJXAIOU",[[1,1958,"//前半部分与后半部分交换"]],[1958,1958],[1971,1971]]],[1536461256746,["gjx16@GJXAIOU",[[1,1972,"\n"]],[1971,1971],[1972,1972]]],[1536461260810,["gjx16@GJXAIOU",[[1,1972,"int i"]],[1972,1972],[1977,1977]]],[1536461265149,["gjx16@GJXAIOU",[[1,1972,"  "]],[1972,1972],[1974,1974]]],[1536461268297,["gjx16@GJXAIOU",[[1,1979,";"]],[1979,1979],[1980,1980]]],[1536461268889,["gjx16@GJXAIOU",[[1,1984,"  \n"]],[1980,1980],[1983,1983]]],[1536461270569,["gjx16@GJXAIOU",[[1,1983,"fpr"]],[1983,1983],[1986,1986]]],[1536461271210,["gjx16@GJXAIOU",[[-1,1984,"pr"]],[1986,1986],[1984,1984]]],[1536461274256,["gjx16@GJXAIOU",[[1,1984,"or();"]],[1984,1984],[1989,1989]]],[1536461275130,["gjx16@GJXAIOU",[[-1,1988,";"]],[1989,1989],[1988,1988]]],[1536461277821,["gjx16@GJXAIOU",[[1,1987,"i="]],[1987,1987],[1989,1989]]],[1536461279078,["gjx16@GJXAIOU",[[-1,1988,"="]],[1989,1989],[1988,1988]]],[1536461290885,["gjx16@GJXAIOU",[[1,1988," = 0; i < 10;"]],[1988,1988],[2001,2001]]],[1536461296020,["gjx16@GJXAIOU",[[-1,1998,"10;"]],[2001,2001],[1998,1998]]],[1536461300794,["gjx16@GJXAIOU",[[1,1998,"4; 0"]],[1998,1998],[2002,2002]]],[1536461301582,["gjx16@GJXAIOU",[[-1,2001,"0"]],[2002,2002],[2001,2001]]],[1536461304024,["gjx16@GJXAIOU",[[1,2001,"i++"]],[2001,2001],[2004,2004]]],[1536461305966,["gjx16@GJXAIOU",[[1,2009,"  \n"]],[2005,2005],[2008,2008]]],[1536461308344,["gjx16@GJXAIOU",[[1,2008,"{}"]],[2008,2008],[2010,2010]]],[1536461310949,["gjx16@GJXAIOU",[[1,2009,"\n  \n  \n  \n  \n  "]],[2009,2009],[2024,2024]]],[1536461320873,["gjx16@GJXAIOU",[[1,2012,"  intt"]],[2012,2012],[2018,2018]]],[1536461321802,["gjx16@GJXAIOU",[[-1,2017,"t"]],[2018,2018],[2017,2017]]],[1536461328482,["gjx16@GJXAIOU",[[1,2017," tmp = arrau"]],[2017,2017],[2029,2029]]],[1536461329219,["gjx16@GJXAIOU",[[-1,2028,"u"]],[2029,2029],[2028,2028]]],[1536461333704,["gjx16@GJXAIOU",[[1,2028,"y[i];"]],[2028,2028],[2033,2033]]],[1536461334743,["gjx16@GJXAIOU",[[1,2036,"  \n  "]],[2033,2033],[2038,2038]]],[1536461352824,["gjx16@GJXAIOU",[[1,2038,"array["]],[2038,2038],[2044,2044]]],[1536461365188,["gjx16@GJXAIOU",[[1,2044,"i] = array[9-i];"]],[2044,2044],[2060,2060]]],[1536461366021,["gjx16@GJXAIOU",[[1,2063,"  \n  "]],[2060,2060],[2065,2065]]],[1536461378470,["gjx16@GJXAIOU",[[1,2065,"array[9-i;"]],[2065,2065],[2075,2075]]],[1536461379176,["gjx16@GJXAIOU",[[-1,2074,";"]],[2075,2075],[2074,2074]]],[1536461386672,["gjx16@GJXAIOU",[[1,2074,"] = array"]],[2074,2074],[2083,2083]]],[1536461389930,["gjx16@GJXAIOU",[[-1,2078,"array"]],[2083,2083],[2078,2078]]],[1536461391791,["gjx16@GJXAIOU",[[1,2078,"tm["]],[2078,2078],[2081,2081]]],[1536461392656,["gjx16@GJXAIOU",[[-1,2080,"["]],[2081,2081],[2080,2080]]],[1536461396100,["gjx16@GJXAIOU",[[1,2080,"p;"]],[2080,2080],[2082,2082]]],[1536461425145,["gjx16@GJXAIOU",[[1,2085,"  \n  "]],[2082,2082],[2087,2087]]],[1536461425777,["gjx16@GJXAIOU",[[-1,2083,"    "],[1,2087,"\n"]],[2087,2087],[2084,2084]]],[1536461432022,["gjx16@GJXAIOU",[[-1,2088,"  "]],[2090,2090],[2088,2088]]],[1536461432198,["gjx16@GJXAIOU",[[-1,2088,"\n"]],[2088,2088],[2087,2087]]],[1536461432597,["gjx16@GJXAIOU",[[-1,2085,"  "]],[2087,2087],[2085,2085]]],[1536461432786,["gjx16@GJXAIOU",[[-1,2085,"\n"]],[2085,2085],[2084,2084]]],[1536461432989,["gjx16@GJXAIOU",[[-1,2084,"\n"]],[2084,2084],[2083,2083]]],[1536461433176,["gjx16@GJXAIOU",[[-1,2083,"\n"]],[2083,2083],[2082,2082]]],[1536461436337,["gjx16@GJXAIOU",[[-1,2090,"  "],[1,2092,"\n"]],[2092,2092],[2091,2091]]],[1536461467653,["gjx16@GJXAIOU",[[1,2091,"  printf90"]],[2091,2091],[2101,2101]]],[1536461468540,["gjx16@GJXAIOU",[[-1,2099,"90"]],[2101,2101],[2099,2099]]],[1536461470145,["gjx16@GJXAIOU",[[1,2099,"();"]],[2099,2099],[2102,2102]]],[1536461474854,["gjx16@GJXAIOU",[[1,2100,"\"\""]],[2100,2100],[2102,2102]]],[1536461478369,["gjx16@GJXAIOU",[[1,2101,"/5"]],[2101,2101],[2103,2103]]],[1536461479357,["gjx16@GJXAIOU",[[-1,2101,"/5"]],[2103,2103],[2101,2101]]],[1536461483546,["gjx16@GJXAIOU",[[1,2101,"%d\\n"]],[2101,2101],[2105,2105]]],[1536461494559,["gjx16@GJXAIOU",[[1,2106,",array"]],[2106,2106],[2112,2112]]],[1536461522637,["gjx16@GJXAIOU",[[1,2091,"\n"]],[2090,2090],[2091,2091]]],[1536461524136,["gjx16@GJXAIOU",[[1,2092,"\n"]],[2091,2091],[2092,2092]]],[1536461527616,["gjx16@GJXAIOU",[[1,2092,"  for()"]],[2092,2092],[2099,2099]]],[1536461530521,["gjx16@GJXAIOU",[[1,2098,"i= "]],[2098,2098],[2101,2101]]],[1536461531130,["gjx16@GJXAIOU",[[-1,2099,"= "]],[2101,2101],[2099,2099]]],[1536461534171,["gjx16@GJXAIOU",[[1,2099," =0;"]],[2099,2099],[2103,2103]]],[1536461534958,["gjx16@GJXAIOU",[[-1,2101,"0;"]],[2103,2103],[2101,2101]]],[1536461542961,["gjx16@GJXAIOU",[[1,2101," 0;i <10"]],[2101,2101],[2109,2109]]],[1536461544115,["gjx16@GJXAIOU",[[-1,2107,"10"]],[2109,2109],[2107,2107]]],[1536461549295,["gjx16@GJXAIOU",[[1,2107," 10;i++"]],[2107,2107],[2114,2114]]],[1536461558518,["gjx16@GJXAIOU",[[1,2118,"\n  "]],[2115,2115],[2118,2118]]],[1536461568084,["gjx16@GJXAIOU",[[1,2118,"{}"]],[2118,2118],[2120,2120]]],[1536461570509,["gjx16@GJXAIOU",[[-1,2119,"}"]],[2120,2120],[2119,2119]]],[1536461575677,["gjx16@GJXAIOU",[[1,2145,"  }"]],[2145,2145],[2148,2148]]],[1536461579863,["gjx16@GJXAIOU",[[1,2122,"  "]],[2122,2122],[2124,2124]]],[1536461586770,["gjx16@GJXAIOU",[[1,2132,"aa"]],[2132,2132],[2134,2134]]],[1536461587491,["gjx16@GJXAIOU",[[-1,2133,"a"]],[2134,2134],[2133,2133]]],[1536461591110,["gjx16@GJXAIOU",[[1,2133,"rray["]],[2133,2133],[2138,2138]]],[1536461603069,["gjx16@GJXAIOU",[[1,2140,"]=%d"]],[2140,2140],[2144,2144]]],[1536461612131,["gjx16@GJXAIOU",[[1,2148,"i "]],[2148,2148],[2150,2150]]],[1536461613254,["gjx16@GJXAIOU",[[-1,2149," "]],[2150,2150],[2149,2149]]],[1536461613558,["gjx16@GJXAIOU",[[1,2149,","]],[2149,2149],[2150,2150]]],[1536461620624,["gjx16@GJXAIOU",[[1,2155,"[i]"]],[2155,2155],[2158,2158]]],[1536461638605,["gjx16@GJXAIOU",[[1,1997,"="]],[1997,1997],[1998,1998]]],[1536461763966,["gjx16@GJXAIOU",[[1,1971,"()"]],[1971,1971],[1973,1973]]],[1536461766775,["gjx16@GJXAIOU",[[1,1972,"fayi"]],[1972,1972],[1976,1976]]],[1536461768077,["gjx16@GJXAIOU",[[-1,1972,"fayi"]],[1976,1976],[1972,1972]]],[1536461770050,["gjx16@GJXAIOU",[[1,1972,"法医"]],[1972,1972],[1974,1974]]],[1536461770899,["gjx16@GJXAIOU",[[-1,1971,"(法医"]],[1974,1974],[1971,1971]]],[1536461781584,["gjx16@GJXAIOU",[[1,1971,"（法一"]],[1971,1971],[1974,1974]]],[1536461814897,["gjx16@GJXAIOU",[[-1,2088,"  "]],[2090,2090],[2088,2088]]],[1536461815336,["gjx16@GJXAIOU",[[-1,2088,"\n"]],[2088,2088],[2087,2087]]],[1536461817098,["gjx16@GJXAIOU",[[1,2092,"  \n"]],[2091,2091],[2094,2094]]],[1536461817302,["gjx16@GJXAIOU",[[-1,2092,"  "],[1,2094,"\n"]],[2094,2094],[2093,2093]]],[1536461822588,["gjx16@GJXAIOU",[[1,2093,"、、"]],[2093,2093],[2095,2095]]],[1536461823536,["gjx16@GJXAIOU",[[-1,2093,"、、"]],[2095,2095],[2093,2093]]],[1536461833987,["gjx16@GJXAIOU",[[1,2093,"//方法二"]],[2093,2093],[2098,2098]]],[1536461834966,["gjx16@GJXAIOU",[[1,2101,"\n"]],[2098,2098],[2099,2099]]],[1536461881615,["gjx16@GJXAIOU",[[1,2099,"   int min = 0;"]],[2099,2099],[2114,2114]]],[1536461882291,["gjx16@GJXAIOU",[[1,2115,"   \n"]],[2114,2114],[2118,2118]]],[1536461888553,["gjx16@GJXAIOU",[[1,2119,"nt max -"]],[2119,2119],[2127,2127]]],[1536461889582,["gjx16@GJXAIOU",[[-1,2126,"-"]],[2127,2127],[2126,2126]]],[1536461895167,["gjx16@GJXAIOU",[[1,2126,"= 9;"]],[2126,2126],[2130,2130]]],[1536461903057,["gjx16@GJXAIOU",[[1,2114,"//shu"]],[2114,2114],[2119,2119]]],[1536461904309,["gjx16@GJXAIOU",[[-1,2116,"shu"]],[2119,2119],[2116,2116]]],[1536461916969,["gjx16@GJXAIOU",[[1,2116,"数组的最小小标"]],[2116,2116],[2123,2123]]],[1536461917848,["gjx16@GJXAIOU",[[-1,2121,"小标"]],[2123,2123],[2121,2121]]],[1536461920748,["gjx16@GJXAIOU",[[1,2121,"下标"]],[2121,2121],[2123,2123]]],[1536461925919,["gjx16@GJXAIOU",[[1,2139,"、、"]],[2139,2139],[2141,2141]]],[1536461926796,["gjx16@GJXAIOU",[[-1,2139,"、、"]],[2141,2141],[2139,2139]]],[1536461935928,["gjx16@GJXAIOU",[[1,2139,"//数组的最大下标"]],[2139,2139],[2148,2148]]],[1536461938130,["gjx16@GJXAIOU",[[1,2149,"   \n"]],[2148,2148],[2152,2152]]],[1536462003310,[null,[[-1,2127,"\n"],[1,2128,"i"],[1,2152,"\n"]],[2127,2127],[2153,2153]]],[1536462003310,[null,[[1,2127,"\n"],[-1,2127,"i"],[-1,2152,"\n"]],[2153,2153],[2127,2127]]],[1536461949289,["gjx16@GJXAIOU",[[1,2152,"while()"]],[2152,2152],[2159,2159]]],[1536461959260,["gjx16@GJXAIOU",[[1,2158,"min <max"]],[2158,2158],[2166,2166]]],[1536461962426,["gjx16@GJXAIOU",[[1,2168,"   \n"]],[2167,2167],[2171,2171]]],[1536461969137,["gjx16@GJXAIOU",[[1,2171,"{}"]],[2171,2171],[2173,2173]]],[1536461972699,["gjx16@GJXAIOU",[[1,2172,"\n   \n   \n   \n   "]],[2172,2172],[2188,2188]]],[1536461978023,["gjx16@GJXAIOU",[[1,2176,"  omt "]],[2176,2176],[2182,2182]]],[1536461979134,["gjx16@GJXAIOU",[[-1,2178,"omt "]],[2182,2182],[2178,2178]]],[1536461991368,["gjx16@GJXAIOU",[[1,2178,"int tmp = arrat"]],[2178,2178],[2193,2193]]],[1536461992306,["gjx16@GJXAIOU",[[-1,2192,"t"]],[2193,2193],[2192,2192]]],[1536461994458,["gjx16@GJXAIOU",[[1,2192,"y;"]],[2192,2192],[2194,2194]]],[1536461995133,["gjx16@GJXAIOU",[[-1,2193,";"]],[2194,2194],[2193,2193]]],[1536462001803,["gjx16@GJXAIOU",[[1,2193,"[min]'"]],[2193,2193],[2199,2199]]],[1536462002434,["gjx16@GJXAIOU",[[-1,2198,"'"]],[2199,2199],[2198,2198]]],[1536462003179,["gjx16@GJXAIOU",[[1,2198,";"]],[2198,2198],[2199,2199]]],[1536462063311,[null,[[-1,2127,"\n"],[1,2128,"i"],[1,2212,"\n"]],[2127,2127],[2213,2213]]],[1536462063311,[null,[[1,2127,"\n"],[-1,2127,"i"],[-1,2212,"\n"]],[2213,2213],[2127,2127]]],[1536462003624,["gjx16@GJXAIOU",[[1,2203,"  \n   "]],[2199,2199],[2205,2205]]],[1536462010726,["gjx16@GJXAIOU",[[1,2205,"array[man"]],[2205,2205],[2214,2214]]],[1536462011558,["gjx16@GJXAIOU",[[-1,2213,"n"]],[2214,2214],[2213,2213]]],[1536462015422,["gjx16@GJXAIOU",[[1,2213,"x]="]],[2213,2213],[2216,2216]]],[1536462016474,["gjx16@GJXAIOU",[[-1,2215,"="]],[2216,2216],[2215,2215]]],[1536462032354,["gjx16@GJXAIOU",[[1,2215," = array[max];"]],[2215,2215],[2229,2229]]],[1536462037685,["gjx16@GJXAIOU",[[-1,2211,"max"]],[2214,2214],[2211,2211]]],[1536462039163,["gjx16@GJXAIOU",[[1,2211,"min"]],[2211,2211],[2214,2214]]],[1536462044123,["gjx16@GJXAIOU",[[1,2233,"  \n   "]],[2229,2229],[2235,2235]]],[1536462059226,["gjx16@GJXAIOU",[[1,2235,"array[max] =tmp;"]],[2235,2235],[2251,2251]]],[1536462060910,["gjx16@GJXAIOU",[[1,2255,"  \n   "]],[2251,2251],[2257,2257]]],[1536462062822,["gjx16@GJXAIOU",[[1,2257,"ming"]],[2257,2257],[2261,2261]]],[1536462123312,[null,[[-1,2127,"\n"],[1,2128,"i"],[1,2274,"\n"]],[2127,2127],[2275,2275]]],[1536462123312,[null,[[1,2127,"\n"],[-1,2127,"i"],[-1,2274,"\n"]],[2275,2275],[2127,2127]]],[1536462063988,["gjx16@GJXAIOU",[[-1,2260,"g"]],[2261,2261],[2260,2260]]],[1536462067368,["gjx16@GJXAIOU",[[1,2260,"++;"]],[2260,2260],[2263,2263]]],[1536462067722,["gjx16@GJXAIOU",[[1,2267,"  \n   "]],[2263,2263],[2269,2269]]],[1536462073086,["gjx16@GJXAIOU",[[1,2269,"max__"]],[2269,2269],[2274,2274]]],[1536462074224,["gjx16@GJXAIOU",[[-1,2272,"__"]],[2274,2274],[2272,2272]]],[1536462076066,["gjx16@GJXAIOU",[[1,2272,"--;"]],[2272,2272],[2275,2275]]],[1536477063605,[null,[[-1,2127,"\n"],[1,2128,"i"],[1,2288,"\n"]],[2127,2127],[2289,2289]]],[1536477063605,[null,[[1,2127,"\n"],[-1,2127,"i"],[-1,2288,"\n"]],[2289,2289],[2127,2127]]],[1536477043947,["gjx16@GJXAIOU",[[-1,2280,"   "]],[2283,2283],[2280,2280]]],[1536477044099,["gjx16@GJXAIOU",[[-1,2280,"\n"]],[2280,2280],[2279,2279]]],[1536477045222,["gjx16@GJXAIOU",[[-1,2276,"   "]],[2279,2279],[2276,2276]]],[1536477045524,["gjx16@GJXAIOU",[[-1,2276,"\n"]],[2276,2276],[2275,2275]]],[1536478263628,[null,[[-1,2127,"\n"],[1,2128,"i"],[1,2280,"\n"]],[2127,2127],[2281,2281]]],[1536478263628,[null,[[1,2127,"\n"],[-1,2127,"i"],[-1,2280,"\n"]],[2281,2281],[2127,2127]]],[1536478257291,["gjx16@GJXAIOU",[[1,2368,"\n"]],[2364,2364],[2365,2365]]],[1536478258520,["gjx16@GJXAIOU",[[1,2365,"****"]],[2365,2365],[2367,2367]]],[1536478259398,["gjx16@GJXAIOU",[[1,2367,"shu"]],[2367,2367],[2370,2370]]],[1536478260194,["gjx16@GJXAIOU",[[-1,2367,"shu"]],[2370,2370],[2367,2367]]],[1536478323629,[null,[[-1,2127,"\n"],[1,2128,"i"],[1,2282,"\n"],[-1,2364,"\n"],[1,2369,"\n"]],[2127,2127],[2370,2370]]],[1536478323629,[null,[[1,2127,"\n"],[-1,2127,"i"],[-1,2282,"\n"],[1,2365,"\n"],[-1,2369,"\n"]],[2370,2370],[2127,2127]]],[1536478271300,["gjx16@GJXAIOU",[[1,2367,"水仙花数"]],[2367,2367],[2371,2371]]],[1536478273378,["gjx16@GJXAIOU",[[1,2377,"\n"]],[2373,2373],[2374,2374]]],[1536478284148,["gjx16@GJXAIOU",[[1,2374,"![水仙花数]($resource/%E6%B0%B4%E4%BB%99%E8%8A%B1%E6%95%B0.png)"]],[2374,2374],[2434,2434]]],[1536478287272,["gjx16@GJXAIOU",[[1,2437,"\n"]],[2433,2433],[2434,2434]]],[1536478287406,["gjx16@GJXAIOU",[[1,2438,"\n"]],[2434,2434],[2435,2435]]],[1536478287576,["gjx16@GJXAIOU",[[1,2439,"\n"]],[2435,2435],[2436,2436]]],[1536479043641,[null,[[-1,2127,"\n"],[1,2128,"i"],[1,2282,"\n"],[-1,2364,"\n"],[1,2433,"\n"]],[2127,2127],[2434,2434]]],[1536479043641,[null,[[1,2127,"\n"],[-1,2127,"i"],[-1,2282,"\n"],[1,2365,"\n"],[-1,2433,"\n"]],[2434,2434],[2127,2127]]],[1536479008794,["gjx16@GJXAIOU",[[1,2440,"\n"]],[2433,2433],[2434,2434]]],[1536479010166,["gjx16@GJXAIOU",[[1,2434,"****"]],[2434,2434],[2436,2436]]],[1536479014308,["gjx16@GJXAIOU",[[1,2434,"\n"]],[2434,2434],[2435,2435]]],[1536479036000,["gjx16@GJXAIOU",[[1,2437,"求3-100中的素数"]],[2437,2437],[2447,2447]]],[1536479038144,["gjx16@GJXAIOU",[[1,2456,"\n"]],[2449,2449],[2450,2450]]],[1536479103649,[null,[[-1,2127,"\n"],[1,2128,"i"],[1,2282,"\n"],[-1,2364,"\n"],[-1,2435,""],[1,2449,"\n"]],[2127,2127],[2450,2450]]],[1536479103649,[null,[[1,2127,"\n"],[-1,2127,"i"],[-1,2282,"\n"],[1,2365,"\n"],[1,2435,""],[-1,2449,"\n"]],[2450,2450],[2127,2127]]],[1536479079276,["gjx16@GJXAIOU",[[1,2450,"![素数]($resource/%E7%B4%A0%E6%95%B0.png)"]],[2450,2450],[2490,2490]]],[1536479081085,["gjx16@GJXAIOU",[[1,2496,"\n"]],[2490,2490],[2491,2491]]],[1536479081241,["gjx16@GJXAIOU",[[1,2497,"\n"]],[2491,2491],[2492,2492]]],[1536479163648,[null,[[-1,2127,"\n"],[1,2128,"i"],[1,2282,"\n"],[-1,2364,"\n"],[-1,2450,""],[1,2489,"\n"]],[2127,2127],[2490,2490]]],[1536479163648,[null,[[1,2127,"\n"],[-1,2127,"i"],[-1,2282,"\n"],[1,2365,"\n"],[1,2450,""],[-1,2489,"\n"]],[2490,2490],[2127,2127]]],[1536479146613,["gjx16@GJXAIOU",[[1,2498,"\n"]],[2489,2489],[2490,2490]]],[1536479146802,["gjx16@GJXAIOU",[[1,2499,"\n"]],[2490,2490],[2491,2491]]],[1536479146929,["gjx16@GJXAIOU",[[1,2500,"\n"]],[2491,2491],[2492,2492]]],[1536479147114,["gjx16@GJXAIOU",[[1,2501,"\n"]],[2492,2492],[2493,2493]]],[1536479147301,["gjx16@GJXAIOU",[[1,2502,"\n"]],[2493,2493],[2494,2494]]],[1536479147480,["gjx16@GJXAIOU",[[1,2503,"\n"]],[2494,2494],[2495,2495]]],[1536479147646,["gjx16@GJXAIOU",[[1,2504,"\n"]],[2495,2495],[2496,2496]]],[1536479147799,["gjx16@GJXAIOU",[[1,2505,"\n"]],[2496,2496],[2497,2497]]],[1536479147913,["gjx16@GJXAIOU",[[1,2506,"\n"]],[2497,2497],[2498,2498]]],[1536479148077,["gjx16@GJXAIOU",[[1,2507,"\n"]],[2498,2498],[2499,2499]]],[1536479148168,["gjx16@GJXAIOU",[[1,2508,"\n"]],[2499,2499],[2500,2500]]],[1536479148308,["gjx16@GJXAIOU",[[1,2509,"\n"]],[2500,2500],[2501,2501]]],[1536479148419,["gjx16@GJXAIOU",[[1,2510,"\n"]],[2501,2501],[2502,2502]]],[1536479148645,["gjx16@GJXAIOU",[[1,2511,"\n"]],[2502,2502],[2503,2503]]],[1536479150300,["gjx16@GJXAIOU",[[1,2503,"、3"]],[2503,2503],[2505,2505]]],[1536479151073,["gjx16@GJXAIOU",[[-1,2503,"、3"]],[2505,2505],[2503,2503]]],[1536479156507,["gjx16@GJXAIOU",[[1,2503,"# 二维数组"]],[2503,2503],[2509,2509]]],[1536479157091,["gjx16@GJXAIOU",[[1,2518,"\n"]],[2509,2509],[2510,2510]]],[1536479157246,["gjx16@GJXAIOU",[[1,2519,"\n"]],[2510,2510],[2511,2511]]],[1536479157384,["gjx16@GJXAIOU",[[1,2520,"\n"]],[2511,2511],[2512,2512]]],[1536479223646,[null,[[-1,2127,"\n"],[1,2128,"i"],[1,2282,"\n"],[-1,2364,"\n"],[-1,2503,""],[1,2509,"\n"]],[2127,2127],[2510,2510]]],[1536479223646,[null,[[1,2127,"\n"],[-1,2127,"i"],[-1,2282,"\n"],[1,2365,"\n"],[1,2503,""],[-1,2509,"\n"]],[2510,2510],[2127,2127]]],[1536479196430,["gjx16@GJXAIOU",[[1,2511,"## 二维数组的定义"]],[2511,2511],[2521,2521]]],[1536479196926,["gjx16@GJXAIOU",[[1,2531,"\n"]],[2521,2521],[2522,2522]]],[1536479197090,["gjx16@GJXAIOU",[[1,2532,"\n"]],[2522,2522],[2523,2523]]],[1536479283648,[null,[[-1,2127,"\n"],[1,2128,"i"],[1,2282,"\n"],[-1,2364,"\n"],[-1,2511,""],[1,2521,"\n"]],[2127,2127],[2522,2522]]],[1536479283648,[null,[[1,2127,"\n"],[-1,2127,"i"],[-1,2282,"\n"],[1,2365,"\n"],[1,2511,""],[-1,2521,"\n"]],[2522,2522],[2127,2127]]],[1536479228464,["gjx16@GJXAIOU",[[1,2523,"~~~~"]],[2523,2523],[2525,2525]]],[1536479229344,["gjx16@GJXAIOU",[[-1,2525,"~~"]],[2525,2525],[2523,2523]]],[1536479231882,["gjx16@GJXAIOU",[[-1,2523,"~~"]],[2525,2525],[2523,2523]]],[1536479235413,["gjx16@GJXAIOU",[[1,2523,"```"]],[2523,2523],[2526,2526]]],[1536479235441,["gjx16@GJXAIOU",[[1,2526,"language\n```\n"]],[2526,2526],[2526,2534]]],[1536479236385,["gjx16@GJXAIOU",[[-1,2526,"language"],[1,2534,"c"]],[2526,2534],[2527,2527]]],[1536479236669,["gjx16@GJXAIOU",[[1,2528,"\n"]],[2527,2527],[2528,2528]]],[1536479251743,["gjx16@GJXAIOU",[[1,2528,"include"]],[2528,2528],[2535,2535]]],[1536479256053,["gjx16@GJXAIOU",[[-1,2528,"include"]],[2535,2535],[2528,2528]]],[1536479263103,["gjx16@GJXAIOU",[[1,2528,"#include<>"]],[2528,2528],[2538,2538]]],[1536479268164,["gjx16@GJXAIOU",[[1,2537,"stdio.h"]],[2537,2537],[2544,2544]]],[1536479269983,["gjx16@GJXAIOU",[[1,2546,"\n"]],[2545,2545],[2546,2546]]],[1536479273779,["gjx16@GJXAIOU",[[1,2547,"\n"]],[2546,2546],[2547,2547]]],[1536479277416,["gjx16@GJXAIOU",[[1,2547,"int main()"]],[2547,2547],[2557,2557]]],[1536479278081,["gjx16@GJXAIOU",[[1,2558,"\n"]],[2557,2557],[2558,2558]]],[1536479280288,["gjx16@GJXAIOU",[[1,2558,"{}"]],[2558,2558],[2560,2560]]],[1536479281343,["gjx16@GJXAIOU",[[1,2559,"\n"]],[2559,2559],[2560,2560]]],[1536479281509,["gjx16@GJXAIOU",[[1,2560,"\n"]],[2560,2560],[2561,2561]]],[1536479281687,["gjx16@GJXAIOU",[[1,2561,"\n"]],[2561,2561],[2562,2562]]],[1536479281866,["gjx16@GJXAIOU",[[1,2562,"\n"]],[2562,2562],[2563,2563]]],[1536479282035,["gjx16@GJXAIOU",[[1,2563,"\n"]],[2563,2563],[2564,2564]]],[1536479282210,["gjx16@GJXAIOU",[[1,2564,"\n"]],[2564,2564],[2565,2565]]],[1536479343650,[null,[[-1,2127,"\n"],[1,2128,"i"],[1,2282,"\n"],[-1,2364,"\n"],[-1,2567,""],[1,2570,"\n"]],[2127,2127],[2571,2571]]],[1536479343650,[null,[[1,2127,"\n"],[-1,2127,"i"],[-1,2282,"\n"],[1,2365,"\n"],[1,2567,""],[-1,2570,"\n"]],[2571,2571],[2127,2127]]],[1536479287590,["gjx16@GJXAIOU",[[1,2560,"  int m"]],[2560,2560],[2567,2567]]],[1536479288132,["gjx16@GJXAIOU",[[-1,2566,"m"]],[2567,2567],[2566,2566]]],[1536479289061,["gjx16@GJXAIOU",[[1,2566,"s"]],[2566,2566],[2567,2567]]],[1536479289647,["gjx16@GJXAIOU",[[-1,2566,"s"]],[2567,2567],[2566,2566]]],[1536479296327,["gjx16@GJXAIOU",[[1,2566,"array[2]1"]],[2566,2566],[2575,2575]]],[1536479297123,["gjx16@GJXAIOU",[[-1,2574,"1"]],[2575,2575],[2574,2574]]],[1536479301954,["gjx16@GJXAIOU",[[1,2574,"[3] = "]],[2574,2574],[2580,2580]]],[1536479306546,["gjx16@GJXAIOU",[[-1,2578,"= "]],[2579,2579],[2577,2577]]],[1536479319046,["gjx16@GJXAIOU",[[1,2577,";//蒂尼"]],[2577,2577],[2582,2582]]],[1536479319755,["gjx16@GJXAIOU",[[-1,2580,"蒂尼"]],[2582,2582],[2580,2580]]],[1536479326041,["gjx16@GJXAIOU",[[1,2580,"定义了医德二维数组"]],[2580,2580],[2589,2589]]],[1536479328959,["gjx16@GJXAIOU",[[-1,2583,"医德"]],[2585,2585],[2583,2583]]],[1536479330685,["gjx16@GJXAIOU",[[1,2583,"一个"]],[2583,2583],[2585,2585]]],[1536479341540,["gjx16@GJXAIOU",[[1,2589,"，相当于有两个"]],[2589,2589],[2596,2596]]],[1536479403652,[null,[[-1,2127,"\n"],[1,2128,"i"],[1,2282,"\n"],[-1,2362,"\n"],[1,2607,"\n"]],[2127,2127],[2608,2608]]],[1536479403652,[null,[[1,2127,"\n"],[-1,2127,"i"],[-1,2282,"\n"],[1,2363,"\n"],[-1,2607,"\n"]],[2608,2608],[2127,2127]]],[1536479352088,["gjx16@GJXAIOU",[[1,2596,"array[3]"]],[2596,2596],[2604,2604]]],[1536480003666,[null,[[-1,2127,"\n"],[1,2128,"i"],[1,2282,"\n"],[-1,2362,"\n"],[1,2615,"\n"]],[2127,2127],[2616,2616]]],[1536480003666,[null,[[1,2127,"\n"],[-1,2127,"i"],[-1,2282,"\n"],[1,2363,"\n"],[-1,2615,"\n"]],[2616,2616],[2127,2127]]],[1536479972232,["gjx16@GJXAIOU",[[1,2606,"  \n"]],[2605,2605],[2608,2608]]],[1536480002452,["gjx16@GJXAIOU",[[1,2608,"array[0][0] = 0;//给第0行"]],[2608,2608],[2630,2630]]],[1536480063670,[null,[[-1,2127,"\n"],[1,2128,"i"],[1,2282,"\n"],[-1,2362,"\n"],[1,2640,"\n"]],[2127,2127],[2641,2641]]],[1536480063670,[null,[[1,2127,"\n"],[-1,2127,"i"],[-1,2282,"\n"],[1,2363,"\n"],[-1,2640,"\n"]],[2641,2641],[2127,2127]]],[1536480014077,["gjx16@GJXAIOU",[[1,2630,"第0列复制"]],[2630,2630],[2635,2635]]],[1536480015182,["gjx16@GJXAIOU",[[-1,2633,"复制"]],[2635,2635],[2633,2633]]],[1536480017624,["gjx16@GJXAIOU",[[1,2633,"赋值"]],[2633,2633],[2635,2635]]],[1536480017831,["gjx16@GJXAIOU",[[1,2636,"  \n"]],[2635,2635],[2638,2638]]],[1536480060074,["gjx16@GJXAIOU",[[1,2638,"array[1][2] = 0;//给第1行第2列赋值"]],[2638,2638],[2665,2665]]],[1536480061248,["gjx16@GJXAIOU",[[1,2666,"  \n"]],[2665,2665],[2668,2668]]],[1536480062367,["gjx16@GJXAIOU",[[-1,2666,"  "],[1,2668,"\n"]],[2668,2668],[2667,2667]]],[1536480123671,[null,[[-1,2127,"\n"],[1,2128,"i"],[1,2282,"\n"],[-1,2362,"\n"],[1,2677,"\n"]],[2127,2127],[2678,2678]]],[1536480123671,[null,[[1,2127,"\n"],[-1,2127,"i"],[-1,2282,"\n"],[1,2363,"\n"],[-1,2677,"\n"]],[2678,2678],[2127,2127]]],[1536480070975,["gjx16@GJXAIOU",[[1,2608,"\n  "]],[2605,2605],[2608,2608]]],[1536480071332,["gjx16@GJXAIOU",[[-1,2606,"  "],[1,2608,"\n"]],[2608,2608],[2607,2607]]],[1536480076603,["gjx16@GJXAIOU",[[1,2607,"  int "]],[2607,2607],[2613,2613]]],[1536480086606,["gjx16@GJXAIOU",[[-1,2607,"  int "]],[2613,2613],[2607,2607]]],[1536480086762,["gjx16@GJXAIOU",[[-1,2607,"\n"]],[2607,2607],[2606,2606]]],[1536480086928,["gjx16@GJXAIOU",[[-1,2606,"\n"]],[2606,2606],[2605,2605]]],[1536480090649,["gjx16@GJXAIOU",[[1,2560,"\n"]],[2559,2559],[2560,2560]]],[1536480092775,["gjx16@GJXAIOU",[[1,2560,"、、"]],[2560,2560],[2562,2562]]],[1536480093652,["gjx16@GJXAIOU",[[-1,2560,"、、"]],[2562,2562],[2560,2560]]],[1536480102860,["gjx16@GJXAIOU",[[1,2560,"//先定义后付制"]],[2560,2560],[2568,2568]]],[1536480103839,["gjx16@GJXAIOU",[[-1,2566,"付制"]],[2568,2568],[2566,2566]]],[1536480105267,["gjx16@GJXAIOU",[[1,2566,"赋值"]],[2566,2566],[2568,2568]]],[1536480117014,["gjx16@GJXAIOU",[[1,2681,"\n"]],[2675,2675],[2676,2676]]],[1536480119241,["gjx16@GJXAIOU",[[1,2676,"  、"]],[2676,2676],[2679,2679]]],[1536480120042,["gjx16@GJXAIOU",[[-1,2678,"、"]],[2679,2679],[2678,2678]]],[1536480122323,["gjx16@GJXAIOU",[[1,2678,"//  "]],[2678,2678],[2682,2682]]],[1536480183670,[null,[[-1,2127,"\n"],[1,2128,"i"],[1,2282,"\n"],[-1,2362,"\n"],[1,2693,"\n"]],[2127,2127],[2694,2694]]],[1536480183670,[null,[[1,2127,"\n"],[-1,2127,"i"],[-1,2282,"\n"],[1,2363,"\n"],[-1,2693,"\n"]],[2694,2694],[2127,2127]]],[1536480124069,["gjx16@GJXAIOU",[[-1,2681," "]],[2682,2682],[2681,2681]]],[1536480125388,["gjx16@GJXAIOU",[[1,2681,"ding"]],[2681,2681],[2685,2685]]],[1536480126962,["gjx16@GJXAIOU",[[-1,2680," ding"]],[2685,2685],[2680,2680]]],[1536480135707,["gjx16@GJXAIOU",[[1,2680,"定义的同时进行赋值"]],[2680,2680],[2689,2689]]],[1536480136250,["gjx16@GJXAIOU",[[1,2690,"  \n"]],[2689,2689],[2692,2692]]],[1536480154592,["gjx16@GJXAIOU",[[1,2692,"int a[3["]],[2692,2692],[2700,2700]]],[1536480155383,["gjx16@GJXAIOU",[[-1,2699,"["]],[2700,2700],[2699,2699]]],[1536480168273,["gjx16@GJXAIOU",[[1,2699,"][4] = {};"]],[2699,2699],[2709,2709]]],[1536480171306,["gjx16@GJXAIOU",[[1,2707,"{"]],[2707,2707],[2708,2708]]],[1536480171669,["gjx16@GJXAIOU",[[1,2709,"}"]],[2708,2708],[2709,2709]]],[1536480180319,["gjx16@GJXAIOU",[[1,2708,"1,2,3,4,"]],[2708,2708],[2716,2716]]],[1536480243672,[null,[[-1,2127,"\n"],[1,2128,"i"],[1,2282,"\n"],[-1,2362,"\n"],[1,2730,"\n"]],[2127,2127],[2731,2731]]],[1536480243672,[null,[[1,2127,"\n"],[-1,2127,"i"],[-1,2282,"\n"],[1,2363,"\n"],[-1,2730,"\n"]],[2731,2731],[2127,2127]]],[1536480186225,["gjx16@GJXAIOU",[[1,2717,",{"]],[2717,2717],[2719,2719]]],[1536480186646,["gjx16@GJXAIOU",[[1,2720,"}"]],[2719,2719],[2720,2720]]],[1536480193288,["gjx16@GJXAIOU",[[1,2719,"5,6,7k"]],[2719,2719],[2725,2725]]],[1536480194243,["gjx16@GJXAIOU",[[-1,2724,"k"]],[2725,2725],[2724,2724]]],[1536480197099,["gjx16@GJXAIOU",[[1,2724,",8"]],[2724,2724],[2726,2726]]],[1536480200399,["gjx16@GJXAIOU",[[1,2727,"{"]],[2727,2727],[2728,2728]]],[1536480200809,["gjx16@GJXAIOU",[[1,2729,"}"]],[2728,2728],[2729,2729]]],[1536480203226,["gjx16@GJXAIOU",[[1,2727,","]],[2727,2727],[2728,2728]]],[1536480207493,["gjx16@GJXAIOU",[[1,2729,"9 "]],[2729,2729],[2731,2731]]],[1536480208187,["gjx16@GJXAIOU",[[-1,2730," "]],[2731,2731],[2730,2730]]],[1536480214247,["gjx16@GJXAIOU",[[1,2730,",10,11,12"]],[2730,2730],[2739,2739]]],[1536483063722,[null,[[-1,2127,"\n"],[1,2128,"i"],[1,2282,"\n"],[-1,2362,"\n"],[1,2753,"\n"]],[2127,2127],[2754,2754]]],[1536483063722,[null,[[1,2127,"\n"],[-1,2127,"i"],[-1,2282,"\n"],[1,2363,"\n"],[-1,2753,"\n"]],[2754,2754],[2127,2127]]],[1536483011458,["gjx16@GJXAIOU",[[1,2560,"\n"]],[2560,2560],[2561,2561]]],[1536483014122,["gjx16@GJXAIOU",[[-1,2677,"  "]],[2679,2679],[2677,2677]]],[1536483043484,["gjx16@GJXAIOU",[[1,2510,"keyi "]],[2510,2510],[2515,2515]]],[1536483044352,["gjx16@GJXAIOU",[[-1,2510,"keyi "]],[2515,2515],[2510,2510]]],[1536483045698,["gjx16@GJXAIOU",[[1,2511,"\n"]],[2510,2510],[2511,2511]]],[1536483059513,["gjx16@GJXAIOU",[[1,2510,"可以近似理解为表格；"]],[2510,2510],[2520,2520]]],[1536483963742,[null,[[-1,2127,"\n"],[1,2128,"i"],[1,2282,"\n"],[-1,2362,"\n"],[1,2763,"\n"]],[2127,2127],[2764,2764]]],[1536483963742,[null,[[1,2127,"\n"],[-1,2127,"i"],[-1,2282,"\n"],[1,2363,"\n"],[-1,2763,"\n"]],[2764,2764],[2127,2127]]],[1536483928458,["gjx16@GJXAIOU",[[1,2754," "]],[2754,2754],[2755,2755]]],[1536484023748,[null,[[-1,2127,"\n"],[1,2128,"i"],[1,2282,"\n"],[-1,2362,"\n"],[1,2764,"\n"]],[2127,2127],[2765,2765]]],[1536484023748,[null,[[1,2127,"\n"],[-1,2127,"i"],[-1,2282,"\n"],[1,2363,"\n"],[-1,2764,"\n"]],[2765,2765],[2127,2127]]],[1536483986360,["gjx16@GJXAIOU",[[1,2753,"  int a[3][4] = {};"]],[2753,2753],[2772,2772]]],[1536483997761,["gjx16@GJXAIOU",[[1,2770,"0"]],[2770,2770],[2771,2771]]],[1536484015947,["gjx16@GJXAIOU",[[1,2773,"//将二维数组中所有值全部"]],[2773,2773],[2786,2786]]],[1536484083745,[null,[[-1,2127,"\n"],[1,2128,"i"],[1,2282,"\n"],[-1,2362,"\n"],[1,2797,"\n"]],[2127,2127],[2798,2798]]],[1536484083745,[null,[[1,2127,"\n"],[-1,2127,"i"],[-1,2282,"\n"],[1,2363,"\n"],[-1,2797,"\n"]],[2798,2798],[2127,2127]]],[1536484030304,["gjx16@GJXAIOU",[[1,2786,"置0"]],[2786,2786],[2788,2788]]],[1536484031694,["gjx16@GJXAIOU",[[1,2790," \n "]],[2788,2788],[2791,2791]]],[1536484067249,["gjx16@GJXAIOU",[[-1,2796,"\n"]],[2796,2796],[2795,2795]]],[1536484067413,["gjx16@GJXAIOU",[[-1,2795,"\n"]],[2795,2795],[2794,2794]]],[1536484067586,["gjx16@GJXAIOU",[[-1,2794,"\n"]],[2794,2794],[2793,2793]]],[1536484068087,["gjx16@GJXAIOU",[[-1,2792," "]],[2793,2793],[2792,2792]]],[1536484071649,["gjx16@GJXAIOU",[[1,2809,"\n"]],[2799,2799],[2800,2800]]],[1536484072846,["gjx16@GJXAIOU",[[1,2800,"****"]],[2800,2800],[2802,2802]]],[1536484075564,["gjx16@GJXAIOU",[[1,2802,"输出"]],[2802,2802],[2804,2804]]],[1536484143745,[null,[[-1,2127,"\n"],[1,2128,"i"],[1,2282,"\n"],[-1,2362,"\n"],[1,2806,"\n"]],[2127,2127],[2807,2807]]],[1536484143745,[null,[[1,2127,"\n"],[-1,2127,"i"],[-1,2282,"\n"],[1,2363,"\n"],[-1,2806,"\n"]],[2807,2807],[2127,2127]]],[1536484085136,["gjx16@GJXAIOU",[[1,2816,"\n"]],[2806,2806],[2807,2807]]],[1536484085528,["gjx16@GJXAIOU",[[1,2817,"\n"]],[2807,2807],[2808,2808]]],[1536484090539,["gjx16@GJXAIOU",[[1,2808,"```"]],[2808,2808],[2811,2811]]],[1536484090567,["gjx16@GJXAIOU",[[1,2811,"language\n```\n"]],[2811,2811],[2811,2819]]],[1536484091992,["gjx16@GJXAIOU",[[-1,2811,"language"],[1,2819,"c"]],[2811,2819],[2812,2812]]],[1536484092286,["gjx16@GJXAIOU",[[1,2813,"\n"]],[2812,2812],[2813,2813]]],[1536484203748,[null,[[-1,2127,"\n"],[1,2128,"i"],[1,2282,"\n"],[-1,2362,"\n"],[1,2817,"\n"]],[2127,2127],[2818,2818]]],[1536484203748,[null,[[1,2127,"\n"],[-1,2127,"i"],[-1,2282,"\n"],[1,2363,"\n"],[-1,2817,"\n"]],[2818,2818],[2127,2127]]],[1536484147669,["gjx16@GJXAIOU",[[1,2813,"int maii"]],[2813,2813],[2821,2821]]],[1536484148244,["gjx16@GJXAIOU",[[-1,2820,"i"]],[2821,2821],[2820,2820]]],[1536484149648,["gjx16@GJXAIOU",[[1,2820,"n)"]],[2820,2820],[2822,2822]]],[1536484150193,["gjx16@GJXAIOU",[[-1,2821,")"]],[2822,2822],[2821,2821]]],[1536484151210,["gjx16@GJXAIOU",[[1,2821,"()"]],[2821,2821],[2823,2823]]],[1536484152179,["gjx16@GJXAIOU",[[1,2824,"\n"]],[2823,2823],[2824,2824]]],[1536484153375,["gjx16@GJXAIOU",[[1,2824,"{}"]],[2824,2824],[2826,2826]]],[1536484154450,["gjx16@GJXAIOU",[[1,2825,"\n"]],[2825,2825],[2826,2826]]],[1536484154632,["gjx16@GJXAIOU",[[1,2826,"\n"]],[2826,2826],[2827,2827]]],[1536484154750,["gjx16@GJXAIOU",[[1,2827,"\n"]],[2827,2827],[2828,2828]]],[1536484154973,["gjx16@GJXAIOU",[[1,2828,"\n"]],[2828,2828],[2829,2829]]],[1536484155176,["gjx16@GJXAIOU",[[1,2829,"\n"]],[2829,2829],[2830,2830]]],[1536484188986,["gjx16@GJXAIOU",[[1,2826,"  int array[2][3] = {};"]],[2826,2826],[2849,2849]]],[1536484191964,["gjx16@GJXAIOU",[[1,2847,"{"]],[2847,2847],[2848,2848]]],[1536484193384,["gjx16@GJXAIOU",[[1,2849,"}"]],[2848,2848],[2849,2849]]],[1536484196836,["gjx16@GJXAIOU",[[1,2848,"1,3"]],[2848,2848],[2851,2851]]],[1536484197852,["gjx16@GJXAIOU",[[-1,2850,"3"]],[2851,2851],[2850,2850]]],[1536484199949,["gjx16@GJXAIOU",[[1,2850,"2,4"]],[2850,2850],[2853,2853]]],[1536484200919,["gjx16@GJXAIOU",[[-1,2852,"4"]],[2853,2853],[2852,2852]]],[1536484201358,["gjx16@GJXAIOU",[[1,2852,"3"]],[2852,2852],[2853,2853]]],[1536484263747,[null,[[-1,2127,"\n"],[1,2128,"i"],[1,2282,"\n"],[-1,2362,"\n"],[1,2865,"\n"]],[2127,2127],[2866,2866]]],[1536484263747,[null,[[1,2127,"\n"],[-1,2127,"i"],[-1,2282,"\n"],[1,2363,"\n"],[-1,2865,"\n"]],[2866,2866],[2127,2127]]],[1536484211161,["gjx16@GJXAIOU",[[1,2854,",{4,5,6"]],[2854,2854],[2861,2861]]],[1536484212576,["gjx16@GJXAIOU",[[1,2862,"}"]],[2861,2861],[2862,2862]]],[1536484323750,[null,[[-1,2127,"\n"],[1,2128,"i"],[1,2282,"\n"],[-1,2362,"\n"],[1,2873,"\n"]],[2127,2127],[2874,2874]]],[1536484323750,[null,[[1,2127,"\n"],[-1,2127,"i"],[-1,2282,"\n"],[1,2363,"\n"],[-1,2873,"\n"]],[2874,2874],[2127,2127]]],[1536484315822,["gjx16@GJXAIOU",[[1,2865,"  \n"]],[2864,2864],[2867,2867]]],[1536484383750,[null,[[-1,2127,"\n"],[1,2128,"i"],[1,2282,"\n"],[-1,2362,"\n"],[1,2876,"\n"]],[2127,2127],[2877,2877]]],[1536484383750,[null,[[1,2127,"\n"],[-1,2127,"i"],[-1,2282,"\n"],[1,2363,"\n"],[-1,2876,"\n"]],[2877,2877],[2127,2127]]],[1536484346465,["gjx16@GJXAIOU",[[1,2867,"printf();"]],[2867,2867],[2876,2876]]],[1536484363427,["gjx16@GJXAIOU",[[1,2874,"\"\""]],[2874,2874],[2876,2876]]],[1536484370882,["gjx16@GJXAIOU",[[1,2875,"%d\\n"]],[2875,2875],[2879,2879]]],[1536484383397,["gjx16@GJXAIOU",[[1,2880,",sizeof"]],[2880,2880],[2887,2887]]],[1536484443751,[null,[[-1,2127,"\n"],[1,2128,"i"],[1,2282,"\n"],[-1,2362,"\n"],[1,2898,"\n"]],[2127,2127],[2899,2899]]],[1536484443751,[null,[[1,2127,"\n"],[-1,2127,"i"],[-1,2282,"\n"],[1,2363,"\n"],[-1,2898,"\n"]],[2899,2899],[2127,2127]]],[1536484385008,["gjx16@GJXAIOU",[[1,2887,"("]],[2887,2887],[2888,2888]]],[1536484385121,["gjx16@GJXAIOU",[[1,2889,")"]],[2888,2888],[2889,2889]]],[1536484392308,["gjx16@GJXAIOU",[[1,2888,"array"]],[2888,2888],[2893,2893]]],[1536484398159,["gjx16@GJXAIOU",[[1,2896,"//zheng"]],[2896,2896],[2903,2903]]],[1536484399193,["gjx16@GJXAIOU",[[-1,2898,"zheng"]],[2903,2903],[2898,2898]]],[1536484412327,["gjx16@GJXAIOU",[[1,2898,"整个数组的大小为24"]],[2898,2898],[2908,2908]]],[1536484434104,["gjx16@GJXAIOU",[[1,2909,"  printf（）；"]],[2909,2909],[2920,2920]]],[1536484439722,["gjx16@GJXAIOU",[[-1,2916,"f（）；"]],[2920,2920],[2916,2916]]],[1536484442973,["gjx16@GJXAIOU",[[1,2916,"f();"]],[2916,2916],[2920,2920]]],[1536484503752,[null,[[-1,2127,"\n"],[1,2128,"i"],[1,2282,"\n"],[-1,2362,"\n"],[1,2928,"\n"]],[2127,2127],[2929,2929]]],[1536484503752,[null,[[1,2127,"\n"],[-1,2127,"i"],[-1,2282,"\n"],[1,2363,"\n"],[-1,2928,"\n"]],[2929,2929],[2127,2127]]],[1536484446413,["gjx16@GJXAIOU",[[1,2918,"\"\""]],[2918,2918],[2920,2920]]],[1536484451138,["gjx16@GJXAIOU",[[1,2919,"%d\\n"]],[2919,2919],[2923,2923]]],[1536484455037,["gjx16@GJXAIOU",[[1,2924,",six"]],[2924,2924],[2928,2928]]],[1536484455922,["gjx16@GJXAIOU",[[-1,2927,"x"]],[2928,2928],[2927,2927]]],[1536484456842,["gjx16@GJXAIOU",[[1,2927,"zr"]],[2927,2927],[2929,2929]]],[1536484457732,["gjx16@GJXAIOU",[[-1,2928,"r"]],[2929,2929],[2928,2928]]],[1536484461746,["gjx16@GJXAIOU",[[1,2928,"eof("]],[2928,2928],[2932,2932]]],[1536484461839,["gjx16@GJXAIOU",[[1,2933,")"]],[2932,2932],[2933,2933]]],[1536484468702,["gjx16@GJXAIOU",[[1,2932,"array[0]"]],[2932,2932],[2940,2940]]],[1536484485436,["gjx16@GJXAIOU",[[1,2943," //相当于第0行的长度"]],[2943,2943],[2955,2955]]],[1536484487045,["gjx16@GJXAIOU",[[-1,2953,"长度"]],[2955,2955],[2953,2953]]],[1536484492178,["gjx16@GJXAIOU",[[1,2953,"大小，为12"]],[2953,2953],[2959,2959]]],[1536484501777,["gjx16@GJXAIOU",[[1,2960,"  \n"]],[2959,2959],[2962,2962]]],[1536484563753,[null,[[-1,2127,"\n"],[1,2128,"i"],[1,2282,"\n"],[-1,2362,"\n"],[1,2970,"\n"]],[2127,2127],[2971,2971]]],[1536484563753,[null,[[1,2127,"\n"],[-1,2127,"i"],[-1,2282,"\n"],[1,2363,"\n"],[-1,2970,"\n"]],[2971,2971],[2127,2127]]],[1536484510416,["gjx16@GJXAIOU",[[1,2962,"printf90"]],[2962,2962],[2970,2970]]],[1536484511170,["gjx16@GJXAIOU",[[-1,2968,"90"]],[2970,2970],[2968,2968]]],[1536484513507,["gjx16@GJXAIOU",[[1,2968,"();"]],[2968,2968],[2971,2971]]],[1536484517344,["gjx16@GJXAIOU",[[1,2969,"\"\""]],[2969,2969],[2971,2971]]],[1536484521615,["gjx16@GJXAIOU",[[1,2970,"%d\\n"]],[2970,2970],[2974,2974]]],[1536484529551,["gjx16@GJXAIOU",[[1,2975,",sizeof("]],[2975,2975],[2983,2983]]],[1536484529655,["gjx16@GJXAIOU",[[1,2984,")"]],[2983,2983],[2984,2984]]],[1536484536530,["gjx16@GJXAIOU",[[1,2983,"array[0]p"]],[2983,2983],[2992,2992]]],[1536484537426,["gjx16@GJXAIOU",[[-1,2991,"p"]],[2992,2992],[2991,2991]]],[1536484540264,["gjx16@GJXAIOU",[[1,2991,"[0]"]],[2991,2991],[2994,2994]]],[1536484547875,["gjx16@GJXAIOU",[[1,2997,"//xian"]],[2997,2997],[3003,3003]]],[1536484549415,["gjx16@GJXAIOU",[[-1,2999,"xian"]],[3003,3003],[2999,2999]]],[1536484563057,["gjx16@GJXAIOU",[[1,2999,"相当于第0行"]],[2999,2999],[3005,3005]]],[1536484623756,[null,[[-1,2127,"\n"],[1,2128,"i"],[1,2282,"\n"],[-1,2362,"\n"],[1,3013,"\n"]],[2127,2127],[3014,3014]]],[1536484623756,[null,[[1,2127,"\n"],[-1,2127,"i"],[-1,2282,"\n"],[1,2363,"\n"],[-1,3013,"\n"]],[3014,3014],[2127,2127]]],[1536484566337,["gjx16@GJXAIOU",[[1,3005,"元素"]],[3005,3005],[3007,3007]]],[1536484568324,["gjx16@GJXAIOU",[[-1,3005,"元素"]],[3007,3007],[3005,3005]]],[1536484580367,["gjx16@GJXAIOU",[[1,3005,"第0列元素的代销"]],[3005,3005],[3013,3013]]],[1536484580944,["gjx16@GJXAIOU",[[-1,3011,"代销"]],[3013,3013],[3011,3011]]],[1536484588321,["gjx16@GJXAIOU",[[1,3011,"大小，为4"]],[3011,3011],[3016,3016]]],[1536484589557,["gjx16@GJXAIOU",[[1,3017,"  \n"]],[3016,3016],[3019,3019]]],[1536484590092,["gjx16@GJXAIOU",[[-1,3017,"  "],[1,3019,"\n"]],[3019,3019],[3018,3018]]],[1536484590357,["gjx16@GJXAIOU",[[1,3021,"\n"]],[3018,3018],[3019,3019]]],[1536484615839,["gjx16@GJXAIOU",[[-1,3021,"\n"]],[3021,3021],[3020,3020]]],[1536484615988,["gjx16@GJXAIOU",[[-1,3020,"\n"]],[3020,3020],[3019,3019]]],[1536484616137,["gjx16@GJXAIOU",[[-1,3019,"\n"]],[3019,3019],[3018,3018]]],[1536484616274,["gjx16@GJXAIOU",[[-1,3018,"\n"]],[3018,3018],[3017,3017]]],[1536484616438,["gjx16@GJXAIOU",[[-1,3017,"\n"]],[3017,3017],[3016,3016]]],[1536484619700,["gjx16@GJXAIOU",[[-1,2802,"输出"]],[2804,2804],[2802,2802]]],[1536484623225,["gjx16@GJXAIOU",[[1,2802,"数组大小"]],[2802,2802],[2806,2806]]],[1536484683759,[null,[[-1,2127,"\n"],[1,2128,"i"],[1,2282,"\n"],[-1,2362,"\n"],[1,3024,"\n"]],[2127,2127],[3025,3025]]],[1536484683759,[null,[[1,2127,"\n"],[-1,2127,"i"],[-1,2282,"\n"],[1,2363,"\n"],[-1,3024,"\n"]],[3025,3025],[2127,2127]]],[1536484628718,["gjx16@GJXAIOU",[[1,3035,"\n"]],[3024,3024],[3025,3025]]],[1536484628886,["gjx16@GJXAIOU",[[1,3036,"\n"]],[3025,3025],[3026,3026]]],[1536484630470,["gjx16@GJXAIOU",[[1,3026,"****"]],[3026,3026],[3028,3028]]],[1536484638306,["gjx16@GJXAIOU",[[1,3028,"数组的值输出"]],[3028,3028],[3034,3034]]],[1536484640287,["gjx16@GJXAIOU",[[1,3047,"\n"]],[3036,3036],[3037,3037]]],[1536484640866,["gjx16@GJXAIOU",[[1,3048,"\n"]],[3037,3037],[3038,3038]]],[1536484643060,["gjx16@GJXAIOU",[[1,3038,"```"]],[3038,3038],[3041,3041]]],[1536484643095,["gjx16@GJXAIOU",[[1,3041,"language\n```\n"]],[3041,3041],[3041,3049]]],[1536484644038,["gjx16@GJXAIOU",[[-1,3041,"language"],[1,3049,"c"]],[3041,3049],[3042,3042]]],[1536484644271,["gjx16@GJXAIOU",[[1,3043,"\n"]],[3042,3042],[3043,3043]]],[1536484650605,["gjx16@GJXAIOU",[[1,3043,"int main()"]],[3043,3043],[3053,3053]]],[1536484651319,["gjx16@GJXAIOU",[[1,3054,"\n"]],[3053,3053],[3054,3054]]],[1536484652814,["gjx16@GJXAIOU",[[1,3054,"{}"]],[3054,3054],[3056,3056]]],[1536484653942,["gjx16@GJXAIOU",[[1,3055,"\n"]],[3055,3055],[3056,3056]]],[1536484654099,["gjx16@GJXAIOU",[[1,3056,"\n"]],[3056,3056],[3057,3057]]],[1536484654269,["gjx16@GJXAIOU",[[1,3057,"\n"]],[3057,3057],[3058,3058]]],[1536484654424,["gjx16@GJXAIOU",[[1,3058,"\n"]],[3058,3058],[3059,3059]]],[1536484654629,["gjx16@GJXAIOU",[[1,3059,"\n"]],[3059,3059],[3060,3060]]],[1536484654818,["gjx16@GJXAIOU",[[1,3060,"\n"]],[3060,3060],[3061,3061]]],[1536484665970,["gjx16@GJXAIOU",[[1,3056,"  int array[]"]],[3056,3056],[3069,3069]]],[1536484668465,["gjx16@GJXAIOU",[[1,3068,"2"]],[3068,3068],[3069,3069]]],[1536484674710,["gjx16@GJXAIOU",[[1,3070,"[3] = "]],[3070,3070],[3076,3076]]],[1536485471890,[null,[[-1,2127,"\n"],[1,2128,"i"],[1,2282,"\n"],[-1,2362,"\n"],[1,3086,"\n"]],[2127,2127],[3087,3087]]],[1536485471890,[null,[[1,2127,"\n"],[-1,2127,"i"],[-1,2282,"\n"],[1,2363,"\n"],[-1,3086,"\n"]],[3087,3087],[2127,2127]]],[1536485425839,["gjx16@GJXAIOU",[[1,3076,"{}'"]],[3076,3076],[3079,3079]]],[1536485427315,["gjx16@GJXAIOU",[[-1,3078,"'"]],[3079,3079],[3078,3078]]],[1536485427885,["gjx16@GJXAIOU",[[1,3078,";"]],[3078,3078],[3079,3079]]],[1536485430818,["gjx16@GJXAIOU",[[1,3077,"{"]],[3077,3077],[3078,3078]]],[1536485431102,["gjx16@GJXAIOU",[[1,3079,"}"]],[3078,3078],[3079,3079]]],[1536485435552,["gjx16@GJXAIOU",[[1,3078,"1,3"]],[3078,3078],[3081,3081]]],[1536485436183,["gjx16@GJXAIOU",[[-1,3080,"3"]],[3081,3081],[3080,3080]]],[1536485439547,["gjx16@GJXAIOU",[[1,3080,"2,3"]],[3080,3080],[3083,3083]]],[1536485443782,["gjx16@GJXAIOU",[[1,3084,",{"]],[3084,3084],[3086,3086]]],[1536485444008,["gjx16@GJXAIOU",[[1,3087,"}"]],[3086,3086],[3087,3087]]],[1536485449634,["gjx16@GJXAIOU",[[1,3086,"4,5,6"]],[3086,3086],[3091,3091]]],[1536485454287,["gjx16@GJXAIOU",[[1,3095,"  \n"]],[3094,3094],[3097,3097]]],[1536485456450,["gjx16@GJXAIOU",[[-1,3095,"  "],[1,3097,"\n"]],[3097,3097],[3096,3096]]],[1536485458400,["gjx16@GJXAIOU",[[1,3096,"int"]],[3096,3096],[3099,3099]]],[1536485459197,["gjx16@GJXAIOU",[[-1,3096,"int"]],[3099,3099],[3096,3096]]],[1536485464258,["gjx16@GJXAIOU",[[1,3096,"  int i,j;"]],[3096,3096],[3106,3106]]],[1536485464738,["gjx16@GJXAIOU",[[1,3107,"  \n"]],[3106,3106],[3109,3109]]],[1536485468058,["gjx16@GJXAIOU",[[1,3109,"for()"]],[3109,3109],[3114,3114]]],[1536485471731,["gjx16@GJXAIOU",[[1,3113,"i = "]],[3113,3113],[3117,3117]]],[1536485531900,[null,[[-1,2127,"\n"],[1,2128,"i"],[1,2282,"\n"],[-1,2362,"\n"],[1,3128,"\n"]],[2127,2127],[3129,3129]]],[1536485531900,[null,[[1,2127,"\n"],[-1,2127,"i"],[-1,2282,"\n"],[1,2363,"\n"],[-1,3128,"\n"]],[3129,3129],[2127,2127]]],[1536485473168,["gjx16@GJXAIOU",[[1,3117,"0 "]],[3117,3117],[3119,3119]]],[1536485473863,["gjx16@GJXAIOU",[[-1,3118," "]],[3119,3119],[3118,3118]]],[1536485487931,["gjx16@GJXAIOU",[[1,3118,"; i < 2;I"]],[3118,3118],[3127,3127]]],[1536485488624,["gjx16@GJXAIOU",[[-1,3126,"I"]],[3127,3127],[3126,3126]]],[1536485490383,["gjx16@GJXAIOU",[[1,3126,"i++"]],[3126,3126],[3129,3129]]],[1536485492231,["gjx16@GJXAIOU",[[1,3131,"  \n"]],[3130,3130],[3133,3133]]],[1536485494235,["gjx16@GJXAIOU",[[1,3133,"{}"]],[3133,3133],[3135,3135]]],[1536485496042,["gjx16@GJXAIOU",[[1,3134,"\n  \n  \n  \n  \n  "]],[3134,3134],[3149,3149]]],[1536485499878,["gjx16@GJXAIOU",[[-1,3154,"\n"]],[3154,3154],[3153,3153]]],[1536485500052,["gjx16@GJXAIOU",[[-1,3153,"\n"]],[3153,3153],[3152,3152]]],[1536485509188,["gjx16@GJXAIOU",[[1,3137,"  for()"]],[3137,3137],[3144,3144]]],[1536485522041,["gjx16@GJXAIOU",[[1,3143,"j = 0; j<"]],[3143,3143],[3152,3152]]],[1536485523107,["gjx16@GJXAIOU",[[-1,3151,"<"]],[3152,3152],[3151,3151]]],[1536485527336,["gjx16@GJXAIOU",[[1,3151," <3"]],[3151,3151],[3154,3154]]],[1536485528543,["gjx16@GJXAIOU",[[-1,3153,"3"]],[3154,3154],[3153,3153]]],[1536485530437,["gjx16@GJXAIOU",[[1,3153," 3;"]],[3153,3153],[3156,3156]]],[1536485591895,[null,[[-1,2127,"\n"],[1,2128,"i"],[1,2282,"\n"],[-1,2362,"\n"],[1,3178,"\n"]],[2127,2127],[3179,3179]]],[1536485591895,[null,[[1,2127,"\n"],[-1,2127,"i"],[-1,2282,"\n"],[1,2363,"\n"],[-1,3178,"\n"]],[3179,3179],[2127,2127]]],[1536485533600,["gjx16@GJXAIOU",[[1,3156,"j+="]],[3156,3156],[3159,3159]]],[1536485534450,["gjx16@GJXAIOU",[[-1,3158,"="]],[3159,3159],[3158,3158]]],[1536485534955,["gjx16@GJXAIOU",[[1,3158,"+"]],[3158,3158],[3159,3159]]],[1536485536944,["gjx16@GJXAIOU",[[1,3163,"  \n  "]],[3160,3160],[3165,3165]]],[1536485539666,["gjx16@GJXAIOU",[[1,3165,"{}"]],[3165,3165],[3167,3167]]],[1536485541178,["gjx16@GJXAIOU",[[1,3166,"\n    \n    \n    "]],[3166,3166],[3181,3181]]],[1536485544471,["gjx16@GJXAIOU",[[-1,3189,"  "]],[3191,3191],[3189,3189]]],[1536485544772,["gjx16@GJXAIOU",[[-1,3189,"\n"]],[3189,3189],[3188,3188]]],[1536485545349,["gjx16@GJXAIOU",[[-1,3186,"  "]],[3188,3188],[3186,3186]]],[1536485545518,["gjx16@GJXAIOU",[[-1,3186,"\n"]],[3186,3186],[3185,3185]]],[1536485546043,["gjx16@GJXAIOU",[[-1,3183,"  "]],[3185,3185],[3183,3183]]],[1536485546228,["gjx16@GJXAIOU",[[-1,3183,"\n"]],[3183,3183],[3182,3182]]],[1536485546383,["gjx16@GJXAIOU",[[-1,3181,"}"]],[3182,3182],[3181,3181]]],[1536485548906,["gjx16@GJXAIOU",[[1,3181,"}"]],[3181,3181],[3182,3182]]],[1536485553380,["gjx16@GJXAIOU",[[-1,3188,"\n"]],[3188,3188],[3187,3187]]],[1536485553819,["gjx16@GJXAIOU",[[-1,3187,"\n"]],[3187,3187],[3186,3186]]],[1536485591775,["gjx16@GJXAIOU",[[1,3171,"printf()"]],[3171,3171],[3179,3179]]],[1536486251913,[null,[[-1,2127,"\n"],[1,2128,"i"],[1,2282,"\n"],[-1,2362,"\n"],[1,3200,"\n"]],[2127,2127],[3201,3201]]],[1536486251913,[null,[[1,2127,"\n"],[-1,2127,"i"],[-1,2282,"\n"],[1,2363,"\n"],[-1,3200,"\n"]],[3201,3201],[2127,2127]]],[1536486248460,["gjx16@GJXAIOU",[[1,3178,"\"\""]],[3178,3178],[3180,3180]]],[1536486251621,["gjx16@GJXAIOU",[[1,3179,"arra"]],[3179,3179],[3183,3183]]],[1536486311909,[null,[[-1,2127,"\n"],[1,2128,"i"],[1,2282,"\n"],[-1,2362,"\n"],[1,3206,"\n"]],[2127,2127],[3207,3207]]],[1536486311909,[null,[[1,2127,"\n"],[-1,2127,"i"],[-1,2282,"\n"],[1,2363,"\n"],[-1,3206,"\n"]],[3207,3207],[2127,2127]]],[1536486258026,["gjx16@GJXAIOU",[[1,3183,"y[i][j]"]],[3183,3183],[3190,3190]]],[1536486262556,["gjx16@GJXAIOU",[[-1,3185,"i"]],[3186,3186],[3185,3185]]],[1536486264249,["gjx16@GJXAIOU",[[1,3185,"*"]],[3185,3185],[3186,3186]]],[1536486265465,["gjx16@GJXAIOU",[[-1,3185,"*"]],[3186,3186],[3185,3185]]],[1536486269869,["gjx16@GJXAIOU",[[1,3185,"%d"]],[3185,3185],[3187,3187]]],[1536486272598,["gjx16@GJXAIOU",[[-1,3189,"j"]],[3190,3190],[3189,3189]]],[1536486275309,["gjx16@GJXAIOU",[[1,3189,"%d"]],[3189,3189],[3191,3191]]],[1536486285689,["gjx16@GJXAIOU",[[1,3192,"= \\n"]],[3192,3192],[3196,3196]]],[1536486290416,["gjx16@GJXAIOU",[[1,3197,",i "]],[3197,3197],[3200,3200]]],[1536486291061,["gjx16@GJXAIOU",[[-1,3199," "]],[3200,3200],[3199,3199]]],[1536486307157,["gjx16@GJXAIOU",[[1,3199,",j,array[i["]],[3199,3199],[3210,3210]]],[1536486308082,["gjx16@GJXAIOU",[[-1,3209,"["]],[3210,3210],[3209,3209]]],[1536486309262,["gjx16@GJXAIOU",[[1,3209,"]"]],[3209,3209],[3210,3210]]],[1536486371913,[null,[[-1,2127,"\n"],[1,2128,"i"],[1,2282,"\n"],[-1,2362,"\n"],[1,3232,"\n"]],[2127,2127],[3233,3233]]],[1536486371913,[null,[[1,2127,"\n"],[-1,2127,"i"],[-1,2282,"\n"],[1,2363,"\n"],[-1,3232,"\n"]],[3233,3233],[2127,2127]]],[1536486313195,["gjx16@GJXAIOU",[[1,3210,"[i"]],[3210,3210],[3212,3212]]],[1536486313911,["gjx16@GJXAIOU",[[-1,3211,"i"]],[3212,3212],[3211,3211]]],[1536486314993,["gjx16@GJXAIOU",[[1,3211,"j\\"]],[3211,3211],[3213,3213]]],[1536486315711,["gjx16@GJXAIOU",[[-1,3212,"\\"]],[3213,3213],[3212,3212]]],[1536486316641,["gjx16@GJXAIOU",[[1,3212,"]"]],[3212,3212],[3213,3213]]],[1536486321850,["gjx16@GJXAIOU",[[1,3214,"'"]],[3214,3214],[3215,3215]]],[1536486322878,["gjx16@GJXAIOU",[[-1,3214,"'"]],[3215,3215],[3214,3214]]],[1536486323349,["gjx16@GJXAIOU",[[1,3214,";"]],[3214,3214],[3215,3215]]],[1536486332108,["gjx16@GJXAIOU",[[-1,3219," "]],[3220,3220],[3219,3219]]],[1536486345245,["gjx16@GJXAIOU",[[1,2374,"\n"]],[2373,2373],[2374,2374]]],[1536486368211,["gjx16@GJXAIOU",[[1,2374,"~~~~~"]],[2374,2374],[2377,2377]]],[1536486368706,["gjx16@GJXAIOU",[[-1,2378,"~"]],[2377,2377],[2376,2376]]],[1536486369133,["gjx16@GJXAIOU",[[1,2376,"===="]],[2376,2376],[2378,2378]]],[1536486431910,[null,[[-1,2127,"\n"],[1,2128,"i"],[1,2282,"\n"],[-1,2362,"\n"],[1,3244,"\n"]],[2127,2127],[3245,3245]]],[1536486431910,[null,[[1,2127,"\n"],[-1,2127,"i"],[-1,2282,"\n"],[1,2363,"\n"],[-1,3244,"\n"]],[3245,3245],[2127,2127]]],[1536486373677,["gjx16@GJXAIOU",[[-1,2374,"~~====~~"]],[2382,2382],[2374,2374]]],[1536486377217,["gjx16@GJXAIOU",[[1,2374,"```c"]],[2374,2374],[2378,2378]]],[1536486377475,["gjx16@GJXAIOU",[[1,2379,"\n"]],[2378,2378],[2379,2379]]],[1536486381546,["gjx16@GJXAIOU",[[1,2379,"```"]],[2379,2379],[2382,2382]]],[1536486385569,["gjx16@GJXAIOU",[[1,2379,"\n"]],[2379,2379],[2380,2380]]],[1536486385714,["gjx16@GJXAIOU",[[1,2380,"\n"]],[2380,2380],[2381,2381]]],[1536486385872,["gjx16@GJXAIOU",[[1,2381,"\n"]],[2381,2381],[2382,2382]]],[1536486386052,["gjx16@GJXAIOU",[[1,2382,"\n"]],[2382,2382],[2383,2383]]],[1536486491915,[null,[[-1,2127,"\n"],[1,2128,"i"],[1,2282,"\n"],[-1,2362,"\n"],[1,3248,"\n"]],[2127,2127],[3249,3249]]],[1536486491915,[null,[[1,2127,"\n"],[-1,2127,"i"],[-1,2282,"\n"],[1,2363,"\n"],[-1,3248,"\n"]],[3249,3249],[2127,2127]]],[1536486469700,["gjx16@GJXAIOU",[[1,2379,"int main()"]],[2379,2379],[2389,2389]]],[1536486470280,["gjx16@GJXAIOU",[[1,2393,"\n"]],[2389,2389],[2390,2390]]],[1536486471681,["gjx16@GJXAIOU",[[1,2390,"}"]],[2390,2390],[2391,2391]]],[1536486472813,["gjx16@GJXAIOU",[[-1,2390,"}"]],[2391,2391],[2390,2390]]],[1536486474497,["gjx16@GJXAIOU",[[1,2390,"{}"]],[2390,2390],[2392,2392]]],[1536486475964,["gjx16@GJXAIOU",[[1,2391,"\n"]],[2391,2391],[2392,2392]]],[1536486476103,["gjx16@GJXAIOU",[[1,2392,"\n"]],[2392,2392],[2393,2393]]],[1536486476239,["gjx16@GJXAIOU",[[1,2393,"\n"]],[2393,2393],[2394,2394]]],[1536486476370,["gjx16@GJXAIOU",[[1,2394,"\n"]],[2394,2394],[2395,2395]]],[1536486476480,["gjx16@GJXAIOU",[[1,2395,"\n"]],[2395,2395],[2396,2396]]],[1536486476614,["gjx16@GJXAIOU",[[1,2396,"\n"]],[2396,2396],[2397,2397]]],[1536486480899,["gjx16@GJXAIOU",[[-1,2401,"\n"]],[2401,2401],[2400,2400]]],[1536486481061,["gjx16@GJXAIOU",[[-1,2400,"\n"]],[2400,2400],[2399,2399]]],[1536486671915,[null,[[-1,2127,"\n"],[1,2128,"i"],[1,2282,"\n"],[-1,2362,"\n"],[1,3265,"\n"]],[2127,2127],[3266,3266]]],[1536486671915,[null,[[1,2127,"\n"],[-1,2127,"i"],[-1,2282,"\n"],[1,2363,"\n"],[-1,3265,"\n"]],[3266,3266],[2127,2127]]],[1536486653261,["gjx16@GJXAIOU",[[1,2392,"  it"]],[2392,2392],[2396,2396]]],[1536486654242,["gjx16@GJXAIOU",[[-1,2394,"it"]],[2396,2396],[2394,2394]]],[1536486655901,["gjx16@GJXAIOU",[[1,2394,"imt"]],[2394,2394],[2397,2397]]],[1536486656714,["gjx16@GJXAIOU",[[-1,2395,"mt"]],[2397,2397],[2395,2395]]],[1536486658703,["gjx16@GJXAIOU",[[1,2395,"nt "]],[2395,2395],[2398,2398]]],[1536486731931,[null,[[-1,2127,"\n"],[1,2128,"i"],[1,2282,"\n"],[-1,2362,"\n"],[1,3271,"\n"]],[2127,2127],[3272,3272]]],[1536486731932,[null,[[1,2127,"\n"],[-1,2127,"i"],[-1,2282,"\n"],[1,2363,"\n"],[-1,3271,"\n"]],[3272,3272],[2127,2127]]],[1536486674798,["gjx16@GJXAIOU",[[1,2398,"i;"]],[2398,2398],[2400,2400]]],[1536486714743,["gjx16@GJXAIOU",[[1,2473,"\n"]],[2471,2471],[2472,2472]]],[1536486714899,["gjx16@GJXAIOU",[[1,2474,"\n"]],[2472,2472],[2473,2473]]],[1536486715445,["gjx16@GJXAIOU",[[1,2475,"\n"]],[2473,2473],[2474,2474]]],[1536486717052,["gjx16@GJXAIOU",[[1,2474,"****"]],[2474,2474],[2476,2476]]],[1536486721427,["gjx16@GJXAIOU",[[1,2476,"qiu"]],[2476,2476],[2479,2479]]],[1536486722208,["gjx16@GJXAIOU",[[-1,2476,"qiu"]],[2479,2479],[2476,2476]]],[1536486729099,["gjx16@GJXAIOU",[[1,2476,"求一个数组中所有急速"]],[2476,2476],[2486,2486]]],[1536486729801,["gjx16@GJXAIOU",[[-1,2484,"急速"]],[2486,2486],[2484,2484]]],[1536486791922,[null,[[-1,2127,"\n"],[1,2128,"i"],[1,2282,"\n"],[-1,2362,"\n"],[1,3288,"\n"]],[2127,2127],[3289,3289]]],[1536486791922,[null,[[1,2127,"\n"],[-1,2127,"i"],[-1,2282,"\n"],[1,2363,"\n"],[-1,3288,"\n"]],[3289,3289],[2127,2127]]],[1536486739675,["gjx16@GJXAIOU",[[1,2484,"奇数之和"]],[2484,2484],[2488,2488]]],[1536486741450,["gjx16@GJXAIOU",[[1,2492,"\n"]],[2490,2490],[2491,2491]]],[1536486744538,["gjx16@GJXAIOU",[[1,2491,"      "]],[2491,2491],[2497,2497]]],[1536486745581,["gjx16@GJXAIOU",[[-1,2493,"    "]],[2497,2497],[2493,2493]]],[1536486746402,["gjx16@GJXAIOU",[[1,2493,"  "]],[2493,2493],[2495,2495]]],[1536486747051,["gjx16@GJXAIOU",[[-1,2493,"  "]],[2495,2495],[2493,2493]]],[1536486750219,["gjx16@GJXAIOU",[[1,2493,"```"]],[2493,2493],[2496,2496]]],[1536486752941,["gjx16@GJXAIOU",[[-1,2492," ```"]],[2496,2496],[2492,2492]]],[1536486757976,["gjx16@GJXAIOU",[[1,2492,"```"]],[2492,2492],[2495,2495]]],[1536486759914,["gjx16@GJXAIOU",[[-1,2491," ```"]],[2495,2495],[2491,2491]]],[1536486762914,["gjx16@GJXAIOU",[[1,2491,"```c"]],[2491,2491],[2495,2495]]],[1536486763288,["gjx16@GJXAIOU",[[1,2497,"\n"]],[2495,2495],[2496,2496]]],[1536486764077,["gjx16@GJXAIOU",[[1,2498,"\n"]],[2496,2496],[2497,2497]]],[1536486767107,["gjx16@GJXAIOU",[[1,2497,"```"]],[2497,2497],[2500,2500]]],[1536486777951,["gjx16@GJXAIOU",[[1,2497,"\n"]],[2496,2496],[2497,2497]]],[1536486780689,["gjx16@GJXAIOU",[[1,2497,"ing=t "]],[2497,2497],[2503,2503]]],[1536486781568,["gjx16@GJXAIOU",[[-1,2499,"g=t "]],[2503,2503],[2499,2499]]],[1536486784822,["gjx16@GJXAIOU",[[1,2499,"t main()"]],[2499,2499],[2507,2507]]],[1536486785479,["gjx16@GJXAIOU",[[1,2508,"\n"]],[2507,2507],[2508,2508]]],[1536486787105,["gjx16@GJXAIOU",[[1,2508,"{}"]],[2508,2508],[2510,2510]]],[1536486788682,["gjx16@GJXAIOU",[[1,2509,"\n"]],[2509,2509],[2510,2510]]],[1536486788858,["gjx16@GJXAIOU",[[1,2510,"\n"]],[2510,2510],[2511,2511]]],[1536486789193,["gjx16@GJXAIOU",[[1,2511,"\n"]],[2511,2511],[2512,2512]]],[1536486851926,[null,[[-1,2127,"\n"],[1,2128,"i"],[1,2282,"\n"],[-1,2362,"\n"],[1,3319,"\n"]],[2127,2127],[3320,3320]]],[1536486851926,[null,[[1,2127,"\n"],[-1,2127,"i"],[-1,2282,"\n"],[1,2363,"\n"],[-1,3319,"\n"]],[3320,3320],[2127,2127]]],[1536486799382,["gjx16@GJXAIOU",[[1,2510,"  int arrau"]],[2510,2510],[2521,2521]]],[1536486800052,["gjx16@GJXAIOU",[[-1,2520,"u"]],[2521,2521],[2520,2520]]],[1536486815338,["gjx16@GJXAIOU",[[1,2520,"y[10] = {};"]],[2520,2520],[2531,2531]]],[1536486829976,["gjx16@GJXAIOU",[[1,2529,"1,3,4,7,8,0."]],[2529,2529],[2541,2541]]],[1536486831020,["gjx16@GJXAIOU",[[-1,2540,"."]],[2541,2541],[2540,2540]]],[1536486832997,["gjx16@GJXAIOU",[[1,2540,",9"]],[2540,2540],[2542,2542]]],[1536486836967,["gjx16@GJXAIOU",[[1,2545,"  \n"]],[2544,2544],[2547,2547]]],[1536486841187,["gjx16@GJXAIOU",[[1,2547,"int i;"]],[2547,2547],[2553,2553]]],[1536486841683,["gjx16@GJXAIOU",[[1,2554,"  \n"]],[2553,2553],[2556,2556]]],[1536486844914,["gjx16@GJXAIOU",[[1,2556,"d"]],[2556,2556],[2557,2557]]],[1536486845591,["gjx16@GJXAIOU",[[-1,2556,"d"]],[2557,2557],[2556,2556]]],[1536486847866,["gjx16@GJXAIOU",[[1,2556,"dun"]],[2556,2556],[2559,2559]]],[1536486848461,["gjx16@GJXAIOU",[[-1,2556,"dun"]],[2559,2559],[2556,2556]]],[1536486850571,["gjx16@GJXAIOU",[[1,2556,"int sun"]],[2556,2556],[2563,2563]]],[1536486851614,["gjx16@GJXAIOU",[[-1,2562,"n"]],[2563,2563],[2562,2562]]],[1536486911923,[null,[[-1,2127,"\n"],[1,2128,"i"],[1,2282,"\n"],[-1,2362,"\n"],[1,3371,"\n"]],[2127,2127],[3372,3372]]],[1536486911923,[null,[[1,2127,"\n"],[-1,2127,"i"],[-1,2282,"\n"],[1,2363,"\n"],[-1,3371,"\n"]],[3372,3372],[2127,2127]]],[1536486856014,["gjx16@GJXAIOU",[[1,2562,"m = 0;"]],[2562,2562],[2568,2568]]],[1536486856702,["gjx16@GJXAIOU",[[1,2569,"  \n"]],[2568,2568],[2571,2571]]],[1536486860977,["gjx16@GJXAIOU",[[1,2571,"for()"]],[2571,2571],[2576,2576]]],[1536486878118,["gjx16@GJXAIOU",[[1,2575,"i = 0; i<"]],[2575,2575],[2584,2584]]],[1536486879366,["gjx16@GJXAIOU",[[-1,2583,"<"]],[2584,2584],[2583,2583]]],[1536486885460,["gjx16@GJXAIOU",[[1,2583," <10"]],[2583,2583],[2587,2587]]],[1536486886546,["gjx16@GJXAIOU",[[-1,2585,"10"]],[2587,2587],[2585,2585]]],[1536486887777,["gjx16@GJXAIOU",[[1,2585," 10 "]],[2585,2585],[2589,2589]]],[1536486888622,["gjx16@GJXAIOU",[[-1,2588," "]],[2589,2589],[2588,2588]]],[1536486892558,["gjx16@GJXAIOU",[[1,2588,";i++"]],[2588,2588],[2592,2592]]],[1536486899659,["gjx16@GJXAIOU",[[1,2594,"  {}"]],[2594,2594],[2598,2598]]],[1536486901554,["gjx16@GJXAIOU",[[1,2597,"\n  \n  \n  "]],[2597,2597],[2606,2606]]],[1536486904216,["gjx16@GJXAIOU",[[1,2600,"  "]],[2600,2600],[2602,2602]]],[1536486971930,[null,[[-1,2127,"\n"],[1,2128,"i"],[1,2282,"\n"],[-1,2362,"\n"],[1,3417,"\n"]],[2127,2127],[3418,3418]]],[1536486971930,[null,[[1,2127,"\n"],[-1,2127,"i"],[-1,2282,"\n"],[1,2363,"\n"],[-1,3417,"\n"]],[3418,3418],[2127,2127]]],[1536486924763,["gjx16@GJXAIOU",[[1,2602,"if()"]],[2602,2602],[2606,2606]]],[1536486932641,["gjx16@GJXAIOU",[[1,2605,"array【"]],[2605,2605],[2611,2611]]],[1536486933379,["gjx16@GJXAIOU",[[-1,2610,"【"]],[2611,2611],[2610,2610]]],[1536486935061,["gjx16@GJXAIOU",[[1,2610,"[]"]],[2610,2610],[2612,2612]]],[1536486937522,["gjx16@GJXAIOU",[[1,2611,"i"]],[2611,2611],[2612,2612]]],[1536486941888,["gjx16@GJXAIOU",[[1,2613," = "]],[2613,2613],[2616,2616]]],[1536486946889,["gjx16@GJXAIOU",[[-1,2614,"= "]],[2616,2616],[2614,2614]]],[1536486971554,["gjx16@GJXAIOU",[[1,2614,"% 2 !="]],[2614,2614],[2620,2620]]],[1536487031928,[null,[[-1,2127,"\n"],[1,2128,"i"],[1,2282,"\n"],[-1,2362,"\n"],[1,3436,"\n"]],[2127,2127],[3437,3437]]],[1536487031928,[null,[[1,2127,"\n"],[-1,2127,"i"],[-1,2282,"\n"],[1,2363,"\n"],[-1,3436,"\n"]],[3437,3437],[2127,2127]]],[1536486976129,["gjx16@GJXAIOU",[[1,2620," 0;"]],[2620,2620],[2623,2623]]],[1536486977367,["gjx16@GJXAIOU",[[-1,2622,";"]],[2623,2623],[2622,2622]]],[1536486980149,["gjx16@GJXAIOU",[[1,2626,"  \n  "]],[2623,2623],[2628,2628]]],[1536486980978,["gjx16@GJXAIOU",[[-1,2624,"    "],[1,2628,"\n"]],[2628,2628],[2625,2625]]],[1536486982074,["gjx16@GJXAIOU",[[-1,2625,"\n"]],[2625,2625],[2624,2624]]],[1536486985368,["gjx16@GJXAIOU",[[1,2624,"    sun"]],[2624,2624],[2631,2631]]],[1536486986224,["gjx16@GJXAIOU",[[-1,2630,"n"]],[2631,2631],[2630,2630]]],[1536486988132,["gjx16@GJXAIOU",[[1,2630,"m_"]],[2630,2630],[2632,2632]]],[1536486988884,["gjx16@GJXAIOU",[[-1,2631,"_"]],[2632,2632],[2631,2631]]],[1536486989961,["gjx16@GJXAIOU",[[1,2631,"+"]],[2631,2631],[2632,2632]]],[1536486991302,["gjx16@GJXAIOU",[[-1,2631,"+"]],[2632,2632],[2631,2631]]],[1536487002571,["gjx16@GJXAIOU",[[1,2631," += arrayj["]],[2631,2631],[2642,2642]]],[1536487003745,["gjx16@GJXAIOU",[[-1,2640,"j["]],[2642,2642],[2640,2640]]],[1536487006881,["gjx16@GJXAIOU",[[1,2640,"[o"]],[2640,2640],[2642,2642]]],[1536487007756,["gjx16@GJXAIOU",[[-1,2641,"o"]],[2642,2642],[2641,2641]]],[1536487011153,["gjx16@GJXAIOU",[[1,2641,"i];"]],[2641,2641],[2644,2644]]],[1536487091937,[null,[[-1,2127,"\n"],[1,2128,"i"],[1,2282,"\n"],[-1,2362,"\n"],[1,3459,"\n"]],[2127,2127],[3460,3460]]],[1536487091937,[null,[[1,2127,"\n"],[-1,2127,"i"],[-1,2282,"\n"],[1,2363,"\n"],[-1,3459,"\n"]],[3460,3460],[2127,2127]]],[1536487039686,["gjx16@GJXAIOU",[[1,2628,"{\n    "]],[2628,2628],[2634,2634]]],[1536487044052,["gjx16@GJXAIOU",[[1,2653,"  }}"]],[2653,2653],[2657,2657]]],[1536487045214,["gjx16@GJXAIOU",[[-1,2656,"}"]],[2657,2657],[2656,2656]]],[1536487051072,["gjx16@GJXAIOU",[[1,2661,"  \n"]],[2660,2660],[2663,2663]]],[1536487051197,["gjx16@GJXAIOU",[[-1,2661,"  "],[1,2663,"\n"]],[2663,2663],[2662,2662]]],[1536487051352,["gjx16@GJXAIOU",[[1,2663,"\n"]],[2662,2662],[2663,2663]]],[1536487055286,["gjx16@GJXAIOU",[[-1,2663,"\n"]],[2663,2663],[2662,2662]]],[1536487055456,["gjx16@GJXAIOU",[[-1,2662,"\n"]],[2662,2662],[2661,2661]]],[1536487055801,["gjx16@GJXAIOU",[[-1,2661,"\n"]],[2661,2661],[2660,2660]]],[1536487058586,["gjx16@GJXAIOU",[[1,2659,"  \n  "]],[2656,2656],[2661,2661]]],[1536487060866,["gjx16@GJXAIOU",[[1,2661,"pir"]],[2661,2661],[2664,2664]]],[1536487061600,["gjx16@GJXAIOU",[[-1,2662,"ir"]],[2664,2664],[2662,2662]]],[1536487067162,["gjx16@GJXAIOU",[[1,2662,"rintf();"]],[2662,2662],[2670,2670]]],[1536487091792,["gjx16@GJXAIOU",[[1,2668,"**"]],[2668,2668],[2670,2670]]],[1536487151933,[null,[[-1,2127,"\n"],[1,2128,"i"],[1,2282,"\n"],[-1,2362,"\n"],[1,3484,"\n"]],[2127,2127],[3485,3485]]],[1536487151933,[null,[[1,2127,"\n"],[-1,2127,"i"],[-1,2282,"\n"],[1,2363,"\n"],[-1,3484,"\n"]],[3485,3485],[2127,2127]]],[1536487093523,["gjx16@GJXAIOU",[[1,2670,"="]],[2670,2670],[2671,2671]]],[1536487095178,["gjx16@GJXAIOU",[[-1,2668,"**="]],[2671,2671],[2668,2668]]],[1536487097524,["gjx16@GJXAIOU",[[1,2668,"\"\""]],[2668,2668],[2670,2670]]],[1536487101340,["gjx16@GJXAIOU",[[1,2669,"$"]],[2669,2669],[2670,2670]]],[1536487102390,["gjx16@GJXAIOU",[[-1,2669,"$"]],[2670,2670],[2669,2669]]],[1536487106308,["gjx16@GJXAIOU",[[1,2669,"%d"]],[2669,2669],[2671,2671]]],[1536487108311,["gjx16@GJXAIOU",[[-1,2669,"%d"]],[2671,2671],[2669,2669]]],[1536487114788,["gjx16@GJXAIOU",[[1,2669,"array[o"]],[2669,2669],[2676,2676]]],[1536487115632,["gjx16@GJXAIOU",[[-1,2675,"o"]],[2676,2676],[2675,2675]]],[1536487117107,["gjx16@GJXAIOU",[[1,2675,"i]"]],[2675,2675],[2677,2677]]],[1536487118667,["gjx16@GJXAIOU",[[-1,2675,"i]"]],[2677,2677],[2675,2675]]],[1536487121245,["gjx16@GJXAIOU",[[1,2675,"%d["]],[2675,2675],[2678,2678]]],[1536487122024,["gjx16@GJXAIOU",[[-1,2677,"["]],[2678,2678],[2677,2677]]],[1536487125497,["gjx16@GJXAIOU",[[1,2677,"] -"]],[2677,2677],[2680,2680]]],[1536487126302,["gjx16@GJXAIOU",[[-1,2679,"-"]],[2680,2680],[2679,2679]]],[1536487128773,["gjx16@GJXAIOU",[[1,2679,"= "]],[2679,2679],[2681,2681]]],[1536487271938,[null,[[-1,2127,"\n"],[1,2128,"i"],[1,2282,"\n"],[-1,2362,"\n"],[1,3496,"\n"]],[2127,2127],[3497,3497]]],[1536487271938,[null,[[1,2127,"\n"],[-1,2127,"i"],[-1,2282,"\n"],[1,2363,"\n"],[-1,3496,"\n"]],[3497,3497],[2127,2127]]],[1536487239094,["gjx16@GJXAIOU",[[1,2681,"\\n0"]],[2681,2681],[2684,2684]]],[1536487240436,["gjx16@GJXAIOU",[[-1,2683,"0"]],[2684,2684],[2683,2683]]],[1536487243517,["gjx16@GJXAIOU",[[1,2684,","]],[2684,2684],[2685,2685]]],[1536487331937,[null,[[-1,2127,"\n"],[1,2128,"i"],[1,2282,"\n"],[-1,2362,"\n"],[1,3499,"\n"]],[2127,2127],[3500,3500]]],[1536487331937,[null,[[1,2127,"\n"],[-1,2127,"i"],[-1,2282,"\n"],[1,2363,"\n"],[-1,3499,"\n"]],[3500,3500],[2127,2127]]],[1536487292950,["gjx16@GJXAIOU",[[1,2685,"i,array[o"]],[2685,2685],[2694,2694]]],[1536487293793,["gjx16@GJXAIOU",[[-1,2693,"o"]],[2694,2694],[2693,2693]]],[1536487295105,["gjx16@GJXAIOU",[[1,2693,"i]"]],[2693,2693],[2695,2695]]],[1536487391936,[null,[[-1,2127,"\n"],[1,2128,"i"],[1,2282,"\n"],[-1,2362,"\n"],[1,3509,"\n"]],[2127,2127],[3510,3510]]],[1536487391936,[null,[[1,2127,"\n"],[-1,2127,"i"],[-1,2282,"\n"],[1,2363,"\n"],[-1,3509,"\n"]],[3510,3510],[2127,2127]]],[1536487361936,["gjx16@GJXAIOU",[[1,2634,"  "]],[2633,2633],[2635,2635]]],[1536487451938,[null,[[-1,2127,"\n"],[1,2128,"i"],[1,2282,"\n"],[-1,2362,"\n"],[1,3511,"\n"]],[2127,2127],[3512,3512]]],[1536487451938,[null,[[1,2127,"\n"],[-1,2127,"i"],[-1,2282,"\n"],[1,2363,"\n"],[-1,3511,"\n"]],[3512,3512],[2127,2127]]],[1536487401335,["gjx16@GJXAIOU",[[1,2628,"\n    "]],[2623,2623],[2628,2628]]],[1536487407531,["gjx16@GJXAIOU",[[1,2628,"//if()"]],[2628,2628],[2634,2634]]],[1536487421024,["gjx16@GJXAIOU",[[1,2633,"array[i["]],[2633,2633],[2641,2641]]],[1536487421785,["gjx16@GJXAIOU",[[-1,2640,"["]],[2641,2641],[2640,2640]]],[1536487429889,["gjx16@GJXAIOU",[[1,2640,"]%s"]],[2640,2640],[2643,2643]]],[1536487430848,["gjx16@GJXAIOU",[[-1,2642,"s"]],[2643,2643],[2642,2642]]],[1536487440652,["gjx16@GJXAIOU",[[1,2642," 2 == 1"]],[2642,2642],[2649,2649]]],[1536487511946,[null,[[-1,2127,"\n"],[1,2128,"i"],[1,2282,"\n"],[-1,2362,"\n"],[1,3538,"\n"]],[2127,2127],[3539,3539]]],[1536487511946,[null,[[1,2127,"\n"],[-1,2127,"i"],[-1,2282,"\n"],[1,2363,"\n"],[-1,3538,"\n"]],[3539,3539],[2127,2127]]],[1536487456260,["gjx16@GJXAIOU",[[1,2486,"yauj"]],[2486,2486],[2490,2490]]],[1536487457007,["gjx16@GJXAIOU",[[-1,2486,"yauj"]],[2490,2490],[2486,2486]]],[1536487459277,["gjx16@GJXAIOU",[[1,2486,"元素"]],[2486,2486],[2488,2488]]],[1536487468153,["gjx16@GJXAIOU",[[1,2755,"\n"]],[2754,2754],[2755,2755]]],[1536487495336,["gjx16@GJXAIOU",[[1,2755,"注：素数：除了1和本身均不能被任何数整除；"]],[2755,2755],[2776,2776]]],[1536487495895,["gjx16@GJXAIOU",[[1,2777,"\n"]],[2776,2776],[2777,2777]]],[1536487499605,["gjx16@GJXAIOU",[[1,2777,"·"]],[2777,2777],[2778,2778]]],[1536487500178,["gjx16@GJXAIOU",[[-1,2777,"·"]],[2778,2778],[2777,2777]]],[1536487500348,["gjx16@GJXAIOU",[[-1,2777,"\n"]],[2777,2777],[2776,2776]]],[1536487501321,["gjx16@GJXAIOU",[[1,2777,"\n"]],[2776,2776],[2777,2777]]],[1536487504833,["gjx16@GJXAIOU",[[1,2777,"```c"]],[2777,2777],[2781,2781]]],[1536487505114,["gjx16@GJXAIOU",[[1,2782,"\n"]],[2781,2781],[2782,2782]]],[1536487506265,["gjx16@GJXAIOU",[[1,2783,"\n"]],[2782,2782],[2783,2783]]],[1536487506463,["gjx16@GJXAIOU",[[1,2784,"\n"]],[2783,2783],[2784,2784]]],[1536487507858,["gjx16@GJXAIOU",[[1,2784,"```"]],[2784,2784],[2787,2787]]],[1536487571943,[null,[[-1,2127,"\n"],[1,2128,"i"],[1,2282,"\n"],[-1,2362,"\n"],[1,3573,"\n"]],[2127,2127],[3574,3574]]],[1536487571943,[null,[[1,2127,"\n"],[-1,2127,"i"],[-1,2282,"\n"],[1,2363,"\n"],[-1,3573,"\n"]],[3574,3574],[2127,2127]]],[1536487534022,["gjx16@GJXAIOU",[[1,2782,"int main()"]],[2782,2782],[2792,2792]]],[1536487534915,["gjx16@GJXAIOU",[[1,2794,"\n"]],[2792,2792],[2793,2793]]],[1536487537498,["gjx16@GJXAIOU",[[1,2793,"{}"]],[2793,2793],[2795,2795]]],[1536487539085,["gjx16@GJXAIOU",[[1,2794,"\n"]],[2794,2794],[2795,2795]]],[1536487540522,["gjx16@GJXAIOU",[[1,2795,"\n"]],[2795,2795],[2796,2796]]],[1536487540694,["gjx16@GJXAIOU",[[1,2796,"\n"]],[2796,2796],[2797,2797]]],[1536487541615,["gjx16@GJXAIOU",[[1,2797,"\n"]],[2797,2797],[2798,2798]]],[1536487542212,["gjx16@GJXAIOU",[[1,2798,"\n"]],[2798,2798],[2799,2799]]],[1536487545211,["gjx16@GJXAIOU",[[1,2795,"  "]],[2795,2795],[2797,2797]]],[1536487691947,[null,[[-1,2127,"\n"],[1,2128,"i"],[1,2282,"\n"],[-1,2362,"\n"],[1,3593,"\n"]],[2127,2127],[3594,3594]]],[1536487691947,[null,[[1,2127,"\n"],[-1,2127,"i"],[-1,2282,"\n"],[1,2363,"\n"],[-1,3593,"\n"]],[3594,3594],[2127,2127]]],[1536487655310,["gjx16@GJXAIOU",[[1,2797,"int i;"]],[2797,2797],[2803,2803]]],[1536487657945,["gjx16@GJXAIOU",[[1,2804,"  \n"]],[2803,2803],[2806,2806]]],[1536487660831,["gjx16@GJXAIOU",[[1,2806,"int j'"]],[2806,2806],[2812,2812]]],[1536487661616,["gjx16@GJXAIOU",[[-1,2811,"'"]],[2812,2812],[2811,2811]]],[1536487662771,["gjx16@GJXAIOU",[[1,2811,"'"]],[2811,2811],[2812,2812]]],[1536487663480,["gjx16@GJXAIOU",[[-1,2811,"'"]],[2812,2812],[2811,2811]]],[1536487664141,["gjx16@GJXAIOU",[[1,2811,";"]],[2811,2811],[2812,2812]]],[1536487664528,["gjx16@GJXAIOU",[[1,2813,"  \n"]],[2812,2812],[2815,2815]]],[1536487668530,["gjx16@GJXAIOU",[[1,2815,"for()"]],[2815,2815],[2820,2820]]],[1536487680006,["gjx16@GJXAIOU",[[1,2819,"i = 0;i <"]],[2819,2819],[2828,2828]]],[1536487751951,[null,[[-1,2127,"\n"],[1,2128,"i"],[1,2282,"\n"],[-1,2362,"\n"],[1,3625,"\n"]],[2127,2127],[3626,3626]]],[1536487751951,[null,[[1,2127,"\n"],[-1,2127,"i"],[-1,2282,"\n"],[1,2363,"\n"],[-1,3625,"\n"]],[3626,3626],[2127,2127]]],[1536487713719,["gjx16@GJXAIOU",[[1,2824,"\\2"]],[2824,2824],[2826,2826]]],[1536487715593,["gjx16@GJXAIOU",[[-1,2823,"0\\2"]],[2826,2826],[2823,2823]]],[1536487716508,["gjx16@GJXAIOU",[[1,2823,"3"]],[2823,2823],[2824,2824]]],[1536487722262,["gjx16@GJXAIOU",[[1,2828," 100"]],[2828,2828],[2832,2832]]],[1536487723328,["gjx16@GJXAIOU",[[-1,2831,"0"]],[2832,2832],[2831,2831]]],[1536487724915,["gjx16@GJXAIOU",[[1,2831,"1 "]],[2831,2831],[2833,2833]]],[1536487726045,["gjx16@GJXAIOU",[[-1,2832," "]],[2833,2833],[2832,2832]]],[1536487730150,["gjx16@GJXAIOU",[[1,2832,";i++"]],[2832,2832],[2836,2836]]],[1536487731983,["gjx16@GJXAIOU",[[1,2838,"  \n"]],[2837,2837],[2840,2840]]],[1536487735167,["gjx16@GJXAIOU",[[1,2840,"{}"]],[2840,2840],[2842,2842]]],[1536487736811,["gjx16@GJXAIOU",[[1,2841,"\n  \n  \n  "]],[2841,2841],[2850,2850]]],[1536487740725,["gjx16@GJXAIOU",[[-1,2854,"\n"]],[2854,2854],[2853,2853]]],[1536487740896,["gjx16@GJXAIOU",[[-1,2853,"\n"]],[2853,2853],[2852,2852]]],[1536487741553,["gjx16@GJXAIOU",[[-1,2852,"\n"]],[2852,2852],[2851,2851]]],[1536487744713,["gjx16@GJXAIOU",[[1,2844,"  "]],[2844,2844],[2846,2846]]],[1536487871951,[null,[[-1,2127,"\n"],[1,2128,"i"],[1,2282,"\n"],[-1,2362,"\n"],[1,3646,"\n"]],[2127,2127],[3647,3647]]],[1536487871951,[null,[[1,2127,"\n"],[-1,2127,"i"],[-1,2282,"\n"],[1,2363,"\n"],[-1,3646,"\n"]],[3647,3647],[2127,2127]]],[1536487850306,["gjx16@GJXAIOU",[[1,2846,"for()"]],[2846,2846],[2851,2851]]],[1536487861437,["gjx16@GJXAIOU",[[1,2850,"j <"]],[2850,2850],[2853,2853]]],[1536488051954,[null,[[-1,2127,"\n"],[1,2128,"i"],[1,2282,"\n"],[-1,2362,"\n"],[1,3654,"\n"]],[2127,2127],[3655,3655]]],[1536488051954,[null,[[1,2127,"\n"],[-1,2127,"i"],[-1,2282,"\n"],[1,2363,"\n"],[-1,3654,"\n"]],[3655,3655],[2127,2127]]],[1536488003107,["gjx16@GJXAIOU",[[1,2853," "]],[2853,2853],[2854,2854]]],[1536488231958,[null,[[-1,2127,"\n"],[1,2128,"i"],[1,2282,"\n"],[-1,2362,"\n"],[1,3655,"\n"]],[2127,2127],[3656,3656]]],[1536488231958,[null,[[1,2127,"\n"],[-1,2127,"i"],[-1,2282,"\n"],[1,2363,"\n"],[-1,3655,"\n"]],[3656,3656],[2127,2127]]],[1536488182536,["gjx16@GJXAIOU",[[1,2854,"2;jj"]],[2854,2854],[2858,2858]]],[1536488186185,["gjx16@GJXAIOU",[[-1,2856,"jj"]],[2858,2858],[2856,2856]]],[1536488198684,["gjx16@GJXAIOU",[[1,2856,"j < i;j++"]],[2856,2856],[2865,2865]]],[1536488200763,["gjx16@GJXAIOU",[[1,2869,"  \n  "]],[2866,2866],[2871,2871]]],[1536488203311,["gjx16@GJXAIOU",[[1,2880,"{"]],[2880,2880],[2881,2881]]],[1536488204597,["gjx16@GJXAIOU",[[-1,2880,"{"]],[2881,2881],[2880,2880]]],[1536488207884,["gjx16@GJXAIOU",[[1,2871,"  "]],[2868,2868],[2870,2870]]],[1536488210694,["gjx16@GJXAIOU",[[1,2870,"}|"]],[2870,2870],[2872,2872]]],[1536488211995,["gjx16@GJXAIOU",[[-1,2870,"}|"]],[2872,2872],[2870,2870]]],[1536488214623,["gjx16@GJXAIOU",[[1,2870,"{}"]],[2870,2870],[2872,2872]]],[1536488217108,["gjx16@GJXAIOU",[[1,2871,"\n   \n   \n   "]],[2871,2871],[2883,2883]]],[1536488230896,["gjx16@GJXAIOU",[[1,2875,"  if()"]],[2875,2875],[2881,2881]]],[1536488291958,[null,[[-1,2127,"\n"],[1,2128,"i"],[1,2282,"\n"],[-1,2362,"\n"],[1,3693,"\n"]],[2127,2127],[3694,3694]]],[1536488291958,[null,[[1,2127,"\n"],[-1,2127,"i"],[-1,2282,"\n"],[1,2363,"\n"],[-1,3693,"\n"]],[3694,3694],[2127,2127]]],[1536488246091,["gjx16@GJXAIOU",[[1,2880,"i%j = "]],[2880,2880],[2886,2886]]],[1536488251645,["gjx16@GJXAIOU",[[-1,2884,"= "]],[2886,2886],[2884,2884]]],[1536488260749,["gjx16@GJXAIOU",[[1,2884,"!= 0"]],[2884,2884],[2888,2888]]],[1536488290198,["gjx16@GJXAIOU",[[1,2893,"  \n   "]],[2889,2889],[2895,2895]]],[1536494853111,[null,[[-1,2127,"\n"],[1,2128,"i"],[1,2282,"\n"],[-1,2362,"\n"],[1,3707,"\n"]],[2127,2127],[3708,3708]]],[1536494853111,[null,[[1,2127,"\n"],[-1,2127,"i"],[-1,2282,"\n"],[1,2363,"\n"],[-1,3707,"\n"]],[3708,3708],[2127,2127]]],[1536494808802,["gjx16@GJXAIOU",[[-1,2896,"   "]],[2899,2899],[2896,2896]]],[1536494809029,["gjx16@GJXAIOU",[[-1,2896,"\n"]],[2896,2896],[2895,2895]]],[1536494810257,["gjx16@GJXAIOU",[[-1,2890,"     "]],[2895,2895],[2890,2890]]],[1536494810552,["gjx16@GJXAIOU",[[-1,2890,"\n"]],[2890,2890],[2889,2889]]],[1536494810796,["gjx16@GJXAIOU",[[-1,2888,")"]],[2889,2889],[2888,2888]]],[1536494813034,["gjx16@GJXAIOU",[[1,2888,";"]],[2888,2888],[2889,2889]]],[1536494822315,["gjx16@GJXAIOU",[[1,2900,"  printf();"]],[2900,2900],[2911,2911]]],[1536494830161,["gjx16@GJXAIOU",[[1,2909,"\"\""]],[2909,2909],[2911,2911]]],[1536494836102,["gjx16@GJXAIOU",[[1,2910,"%dl"]],[2910,2910],[2913,2913]]],[1536494836786,["gjx16@GJXAIOU",[[-1,2912,"l"]],[2913,2913],[2912,2912]]],[1536494839160,["gjx16@GJXAIOU",[[1,2912,"\\n"]],[2912,2912],[2914,2914]]],[1536494849687,["gjx16@GJXAIOU",[[1,2915,",i"]],[2915,2915],[2917,2917]]],[1536494913111,[null,[[-1,2127,"\n"],[1,2128,"i"],[1,2282,"\n"],[-1,2362,"\n"],[1,3716,"\n"]],[2127,2127],[3717,3717]]],[1536494913111,[null,[[1,2127,"\n"],[-1,2127,"i"],[-1,2282,"\n"],[1,2363,"\n"],[-1,3716,"\n"]],[3717,3717],[2127,2127]]],[1536494902971,["gjx16@GJXAIOU",[[1,3675,"%d"]],[3675,3675],[3677,3677]]],[1536494973125,[null,[[-1,2127,"\n"],[1,2128,"i"],[1,2282,"\n"],[-1,2362,"\n"],[1,3718,"\n"]],[2127,2127],[3719,3719]]],[1536494973125,[null,[[1,2127,"\n"],[-1,2127,"i"],[-1,2282,"\n"],[1,2363,"\n"],[-1,3718,"\n"]],[3719,3719],[2127,2127]]],[1536494913791,["gjx16@GJXAIOU",[[1,3713,"  \n"]],[3712,3712],[3715,3715]]],[1536494916368,["gjx16@GJXAIOU",[[1,3715,"retue"]],[3715,3715],[3720,3720]]],[1536494917125,["gjx16@GJXAIOU",[[-1,3719,"e"]],[3720,3720],[3719,3719]]],[1536494918716,["gjx16@GJXAIOU",[[1,3719,"rn;"]],[3719,3719],[3722,3722]]],[1536494919419,["gjx16@GJXAIOU",[[-1,3721,";"]],[3722,3722],[3721,3721]]],[1536494932741,["gjx16@GJXAIOU",[[1,3721," 0;"]],[3721,3721],[3724,3724]]],[1536494941098,["gjx16@GJXAIOU",[[1,3500,"  \n"]],[3499,3499],[3502,3502]]],[1536494943036,["gjx16@GJXAIOU",[[1,3502,"te"]],[3502,3502],[3504,3504]]],[1536494944659,["gjx16@GJXAIOU",[[-1,3501," te"]],[3504,3504],[3501,3501]]],[1536494949434,["gjx16@GJXAIOU",[[1,3501,"return 0;"]],[3501,3501],[3510,3510]]],[1536494961646,["gjx16@GJXAIOU",[[1,3273,"  return 0;"]],[3273,3273],[3284,3284]]],[1536494966696,["gjx16@GJXAIOU",[[1,2924,"  \n"]],[2923,2923],[2926,2926]]],[1536494969395,["gjx16@GJXAIOU",[[1,2926,"retue"]],[2926,2926],[2931,2931]]],[1536494970040,["gjx16@GJXAIOU",[[-1,2930,"e"]],[2931,2931],[2930,2930]]],[1536494973023,["gjx16@GJXAIOU",[[1,2930,"rn 0"]],[2930,2930],[2934,2934]]],[1536495033121,[null,[[-1,2127,"\n"],[1,2128,"i"],[1,2282,"\n"],[-1,2362,"\n"],[1,3763,"\n"]],[2127,2127],[3764,3764]]],[1536495033121,[null,[[1,2127,"\n"],[-1,2127,"i"],[-1,2282,"\n"],[1,2363,"\n"],[-1,3763,"\n"]],[3764,3764],[2127,2127]]],[1536494973344,["gjx16@GJXAIOU",[[1,2934,";"]],[2934,2934],[2935,2935]]],[1536494978374,["gjx16@GJXAIOU",[[1,2733,"  \n"]],[2732,2732],[2735,2735]]],[1536494981195,["gjx16@GJXAIOU",[[1,2735,"retun"]],[2735,2735],[2740,2740]]],[1536494981647,["gjx16@GJXAIOU",[[-1,2739,"n"]],[2740,2740],[2739,2739]]],[1536494982808,["gjx16@GJXAIOU",[[1,2739,"rn;"]],[2739,2739],[2742,2742]]],[1536494983384,["gjx16@GJXAIOU",[[-1,2741,";"]],[2742,2742],[2741,2741]]],[1536494985253,["gjx16@GJXAIOU",[[1,2741," -"]],[2741,2741],[2743,2743]]],[1536494986008,["gjx16@GJXAIOU",[[-1,2742,"-"]],[2743,2743],[2742,2742]]],[1536494987510,["gjx16@GJXAIOU",[[1,2742,"-l"]],[2742,2742],[2744,2744]]],[1536494988174,["gjx16@GJXAIOU",[[-1,2741," -l"]],[2744,2744],[2741,2741]]],[1536494993006,["gjx16@GJXAIOU",[[1,2741," 0;"]],[2741,2741],[2744,2744]]],[1536495005661,["gjx16@GJXAIOU",[[1,2357,"  return 0;"]],[2357,2357],[2368,2368]]],[1536495273130,[null,[[-1,2127,"\n"],[1,2128,"i"],[1,2282,"\n"],[-1,2356,"\n"],[1,2368,"\n"],[-1,2373,"\n"],[1,3787,"\n"]],[2127,2127],[3788,3788]]],[1536495273130,[null,[[1,2127,"\n"],[-1,2127,"i"],[-1,2282,"\n"],[1,2357,"\n"],[-1,2368,"\n"],[1,2374,"\n"],[-1,3787,"\n"]],[3788,3788],[2127,2127]]],[1536495259805,["gjx16@GJXAIOU",[[1,3799,"\n"]],[3788,3788],[3789,3789]]],[1536495513132,[null,[[-1,2127,"\n"],[1,2128,"i"],[1,2282,"\n"],[-1,2356,"\n"],[1,2368,"\n"],[-1,2373,"\n"],[1,3787,"\n"]],[2127,2127],[3788,3788]]],[1536495513132,[null,[[1,2127,"\n"],[-1,2127,"i"],[-1,2282,"\n"],[1,2357,"\n"],[-1,2368,"\n"],[1,2374,"\n"],[-1,3787,"\n"]],[3788,3788],[2127,2127]]],[1536495486740,["gjx16@GJXAIOU",[[1,3800,"\n"]],[3787,3787],[3788,3788]]],[1536495487164,["gjx16@GJXAIOU",[[1,3801,"\n"]],[3788,3788],[3789,3789]]],[1536495487392,["gjx16@GJXAIOU",[[1,3802,"\n"]],[3789,3789],[3790,3790]]],[1536495489638,["gjx16@GJXAIOU",[[1,3790,"****"]],[3790,3790],[3792,3792]]],[1536495490715,["gjx16@GJXAIOU",[[1,3792,"qiu"]],[3792,3792],[3795,3795]]],[1536495512484,["gjx16@GJXAIOU",[[-1,3792,"qiu"]],[3795,3795],[3792,3792]]],[1536495573131,[null,[[-1,2127,"\n"],[1,2128,"i"],[1,2282,"\n"],[-1,2356,"\n"],[1,2368,"\n"],[-1,2373,"\n"],[1,3794,"\n"]],[2127,2127],[3795,3795]]],[1536495573131,[null,[[1,2127,"\n"],[-1,2127,"i"],[-1,2282,"\n"],[1,2357,"\n"],[-1,2368,"\n"],[1,2374,"\n"],[-1,3794,"\n"]],[3795,3795],[2127,2127]]],[1536495513570,["gjx16@GJXAIOU",[[1,3792,"qiu"]],[3792,3792],[3795,3795]]],[1536495514176,["gjx16@GJXAIOU",[[-1,3792,"qiu"]],[3795,3795],[3792,3792]]],[1536495522661,["gjx16@GJXAIOU",[[1,3792,"求一个二维数组的每列"]],[3792,3792],[3802,3802]]],[1536495523408,["gjx16@GJXAIOU",[[-1,3800,"每列"]],[3802,3802],[3800,3800]]],[1536495530784,["gjx16@GJXAIOU",[[1,3800,"每行每列的和"]],[3800,3800],[3806,3806]]],[1536495532754,["gjx16@GJXAIOU",[[1,3821,"\n"]],[3808,3808],[3809,3809]]],[1536495533032,["gjx16@GJXAIOU",[[1,3822,"\n"]],[3809,3809],[3810,3810]]],[1536495538299,["gjx16@GJXAIOU",[[1,3810,"每列的值"]],[3810,3810],[3814,3814]]],[1536495538889,["gjx16@GJXAIOU",[[-1,3813,"值"]],[3814,3814],[3813,3813]]],[1536495541406,["gjx16@GJXAIOU",[[1,3813,"和："]],[3813,3813],[3815,3815]]],[1536495541895,["gjx16@GJXAIOU",[[1,3828,"\n"]],[3815,3815],[3816,3816]]],[1536495552502,["gjx16@GJXAIOU",[[1,3816,"![每列的和]($resource/%E6%AF%8F%E5%88%97%E7%9A%84%E5%92%8C.png)"]],[3816,3816],[3876,3876]]],[1536495633129,[null,[[-1,2127,"\n"],[1,2128,"i"],[1,2282,"\n"],[-1,2356,"\n"],[1,2368,"\n"],[-1,2373,"\n"],[1,3875,"\n"]],[2127,2127],[3876,3876]]],[1536495633129,[null,[[1,2127,"\n"],[-1,2127,"i"],[-1,2282,"\n"],[1,2357,"\n"],[-1,2368,"\n"],[1,2374,"\n"],[-1,3875,"\n"]],[3876,3876],[2127,2127]]],[1536495586490,["gjx16@GJXAIOU",[[1,3888,"\n"]],[3876,3876],[3877,3877]]],[1536495630485,["gjx16@GJXAIOU",[[1,3878,"![打印行的和]($resource/%E6%89%93%E5%8D%B0%E8%A1%8C%E7%9A%84%E5%92%8C.png)\n![每列的和]($resource/%E6%AF%8F%E5%88%97%E7%9A%84%E5%92%8C.png)"]],[3878,3878],[4008,4008]]],[1536495693133,[null,[[-1,2127,"\n"],[1,2128,"i"],[1,2282,"\n"],[-1,2356,"\n"],[1,2368,"\n"],[-1,2373,"\n"],[1,4007,"\n"]],[2127,2127],[4008,4008]]],[1536495693133,[null,[[1,2127,"\n"],[-1,2127,"i"],[-1,2282,"\n"],[1,2357,"\n"],[-1,2368,"\n"],[1,2374,"\n"],[-1,4007,"\n"]],[4008,4008],[2127,2127]]],[1536495633844,["gjx16@GJXAIOU",[[-1,3948,"![每列的和]($resource/%E6%AF%8F%E5%88%97%E7%9A%84%E5%92%8C.png)\n"]],[3948,4008],[3948,3948]]],[1536495635744,["gjx16@GJXAIOU",[[1,3958,"\n"]],[3948,3948],[3949,3949]]],[1536495635880,["gjx16@GJXAIOU",[[1,3959,"\n"]],[3949,3949],[3950,3950]]],[1536495635981,["gjx16@GJXAIOU",[[1,3960,"\n"]],[3950,3950],[3951,3951]]],[1536495636254,["gjx16@GJXAIOU",[[1,3961,"\n"]],[3951,3951],[3952,3952]]],[1536495933139,[null,[[-1,2127,"\n"],[1,2128,"i"],[1,2282,"\n"],[-1,2356,"\n"],[1,2368,"\n"],[-1,2373,"\n"],[1,3947,"\n"]],[2127,2127],[3948,3948]]],[1536495933139,[null,[[1,2127,"\n"],[-1,2127,"i"],[-1,2282,"\n"],[1,2357,"\n"],[-1,2368,"\n"],[1,2374,"\n"],[-1,3947,"\n"]],[3948,3948],[2127,2127]]],[1536495886294,["gjx16@GJXAIOU",[[1,3951,"****"]],[3951,3951],[3953,3953]]],[1536495891298,["gjx16@GJXAIOU",[[1,3953,"冒泡排序"]],[3953,3953],[3957,3957]]],[1536495893238,["gjx16@GJXAIOU",[[1,3970,"\n"]],[3959,3959],[3960,3960]]],[1536496833165,[null,[[-1,2127,"\n"],[1,2128,"i"],[1,2282,"\n"],[-1,2356,"\n"],[1,2368,"\n"],[-1,2373,"\n"],[1,3959,"\n"]],[2127,2127],[3960,3960]]],[1536496833165,[null,[[1,2127,"\n"],[-1,2127,"i"],[-1,2282,"\n"],[1,2357,"\n"],[-1,2368,"\n"],[1,2374,"\n"],[-1,3959,"\n"]],[3960,3960],[2127,2127]]],[1536496798892,["gjx16@GJXAIOU",[[1,3961,"![冒泡1]($resource/%E5%86%92%E6%B3%A11.png)\n![冒泡2]($resource/%E5%86%92%E6%B3%A12.png)\n![冒泡3]($resource/%E5%86%92%E6%B3%A13.png)"]],[3961,3961],[4087,4087]]],[1536496801298,["gjx16@GJXAIOU",[[1,4003,"\n"]],[4002,4002],[4003,4003]]],[1536496802457,["gjx16@GJXAIOU",[[1,4046,"\n"]],[4045,4045],[4046,4046]]],[1536497073160,[null,[[-1,2127,"\n"],[1,2128,"i"],[1,2282,"\n"],[-1,2356,"\n"],[1,2368,"\n"],[-1,2373,"\n"],[1,4088,"\n"]],[2127,2127],[4089,4089]]],[1536497073160,[null,[[1,2127,"\n"],[-1,2127,"i"],[-1,2282,"\n"],[1,2357,"\n"],[-1,2368,"\n"],[1,2374,"\n"],[-1,4088,"\n"]],[4089,4089],[2127,2127]]],[1536497056256,["gjx16@GJXAIOU",[[1,3816,"\n"]],[3815,3815],[3816,3816]]],[1536498573194,[null,[[-1,2127,"\n"],[1,2128,"i"],[1,2282,"\n"],[-1,2356,"\n"],[1,2368,"\n"],[-1,2373,"\n"],[1,4089,"\n"]],[2127,2127],[4090,4090]]],[1536498573194,[null,[[1,2127,"\n"],[-1,2127,"i"],[-1,2282,"\n"],[1,2357,"\n"],[-1,2368,"\n"],[1,2374,"\n"],[-1,4089,"\n"]],[4090,4090],[2127,2127]]],[1536498567327,["gjx16@GJXAIOU",[[1,3817,"\n"]],[3816,3816],[3817,3817]]],[1536498567850,["gjx16@GJXAIOU",[[1,3818,"\n"]],[3817,3817],[3818,3818]]],[1536498633189,[null,[[-1,2127,"\n"],[1,2128,"i"],[1,2282,"\n"],[-1,2356,"\n"],[1,2368,"\n"],[-1,2373,"\n"],[1,4091,"\n"]],[2127,2127],[4092,4092]]],[1536498633189,[null,[[1,2127,"\n"],[-1,2127,"i"],[-1,2282,"\n"],[1,2357,"\n"],[-1,2368,"\n"],[1,2374,"\n"],[-1,4091,"\n"]],[4092,4092],[2127,2127]]],[1536498626875,["gjx16@GJXAIOU",[[1,3819,"\n"]],[3815,3815],[3816,3816]]],[1536498873197,[null,[[-1,2127,"\n"],[1,2128,"i"],[1,2282,"\n"],[-1,2356,"\n"],[1,2368,"\n"],[-1,2373,"\n"],[1,4092,"\n"]],[2127,2127],[4093,4093]]],[1536498873197,[null,[[1,2127,"\n"],[-1,2127,"i"],[-1,2282,"\n"],[1,2357,"\n"],[-1,2368,"\n"],[1,2374,"\n"],[-1,4092,"\n"]],[4093,4093],[2127,2127]]],[1536498858271,["gjx16@GJXAIOU",[[1,3816,"··"]],[3816,3816],[3818,3818]]],[1536498859109,["gjx16@GJXAIOU",[[-1,3817,"·"]],[3818,3818],[3817,3817]]],[1536498871666,["gjx16@GJXAIOU",[[1,3817,"```"]],[3817,3817],[3820,3820]]],[1536498872970,["gjx16@GJXAIOU",[[-1,3816,"·```"]],[3820,3820],[3816,3816]]],[1536498933196,[null,[[-1,2127,"\n"],[1,2128,"i"],[1,2282,"\n"],[-1,2356,"\n"],[1,2368,"\n"],[-1,2373,"\n"],[1,4092,"\n"]],[2127,2127],[4093,4093]]],[1536498933196,[null,[[1,2127,"\n"],[-1,2127,"i"],[-1,2282,"\n"],[1,2357,"\n"],[-1,2368,"\n"],[1,2374,"\n"],[-1,4092,"\n"]],[4093,4093],[2127,2127]]],[1536498874741,["gjx16@GJXAIOU",[[1,3816,"```"]],[3816,3816],[3819,3819]]],[1536498874771,["gjx16@GJXAIOU",[[1,3819,"language\n```\n"]],[3819,3819],[3819,3827]]],[1536498875879,["gjx16@GJXAIOU",[[-1,3819,"language"],[1,3827,"c"]],[3819,3827],[3820,3820]]],[1536498876126,["gjx16@GJXAIOU",[[1,3821,"\n"]],[3820,3820],[3821,3821]]],[1536498900234,["gjx16@GJXAIOU",[[-1,3790,"**求一个二维数组的每行每列的和**\n\n每列的和：\n```c\n\n```\n\n\n\n"]],[3787,3825],[3787,3787]]],[1536498900712,["gjx16@GJXAIOU",[[1,3791,"\n"]],[3787,3787],[3788,3788]]],[1536498903164,["gjx16@GJXAIOU",[[1,3788,"\\9*369*"]],[3788,3788],[3795,3795]]],[1536499173204,[null,[[-1,2127,"\n"],[1,2128,"i"],[1,2282,"\n"],[-1,2356,"\n"],[1,2368,"\n"],[-1,2373,"\n"],[1,4071,"\n"]],[2127,2127],[4072,4072]]],[1536499173204,[null,[[1,2127,"\n"],[-1,2127,"i"],[-1,2282,"\n"],[1,2357,"\n"],[-1,2368,"\n"],[1,2374,"\n"],[-1,4071,"\n"]],[4072,4072],[2127,2127]]],[1536499173080,["gjx16@GJXAIOU",[[-1,3791,"369*"]],[3795,3795],[3791,3791]]],[1536499188947,[null,[[-1,2127,"\n"],[1,2128,"i"],[1,2282,"\n"],[-1,2356,"\n"],[1,2368,"\n"],[-1,2373,"\n"],[1,4067,"\n"]],[2127,2127],[4068,4068]]],[1536499188947,[null,[[1,2127,"\n"],[-1,2127,"i"],[-1,2282,"\n"],[1,2357,"\n"],[-1,2368,"\n"],[1,2374,"\n"],[-1,4067,"\n"]],[4068,4068],[2127,2127]]],[1536499173991,["gjx16@GJXAIOU",[[-1,3788,"\\9*"]],[3791,3791],[3788,3788]]],[1536499179654,["gjx16@GJXAIOU",[[1,3788,"\\9*369*"]],[3788,3788],[3795,3795]]],[1536499180179,["gjx16@GJXAIOU",[[-1,3788,"\\9*369*"]],[3795,3795],[3788,3788]]],[1536499180792,["gjx16@GJXAIOU",[[-1,3791,"\n"]],[3788,3788],[3787,3787]]],[1536499183712,["gjx16@GJXAIOU",[[1,3790,"**求一个二维数组的每行每列的和**\n\n每列的和：\n```c\n\n```\n\n\n\n"]],[3787,3787],[3787,3825]]],[1536499248954,[null,[[-1,2127,"\n"],[1,2128,"i"],[1,2282,"\n"],[-1,2356,"\n"],[1,2368,"\n"],[-1,2373,"\n"],[1,4102,"\n"]],[2127,2127],[4103,4103]]],[1536499248954,[null,[[1,2127,"\n"],[-1,2127,"i"],[-1,2282,"\n"],[1,2357,"\n"],[-1,2368,"\n"],[1,2374,"\n"],[-1,4102,"\n"]],[4103,4103],[2127,2127]]],[1536499192673,["gjx16@GJXAIOU",[[1,3821,"ine"]],[3821,3821],[3824,3824]]],[1536499193360,["gjx16@GJXAIOU",[[-1,3823,"e"]],[3824,3824],[3823,3823]]],[1536499196485,["gjx16@GJXAIOU",[[1,3823,"t main()"]],[3823,3823],[3831,3831]]],[1536499197644,["gjx16@GJXAIOU",[[1,3832,"\n"]],[3831,3831],[3832,3832]]],[1536499199285,["gjx16@GJXAIOU",[[1,3832,"{}"]],[3832,3832],[3834,3834]]],[1536499200662,["gjx16@GJXAIOU",[[1,3833,"\n"]],[3833,3833],[3834,3834]]],[1536499200831,["gjx16@GJXAIOU",[[1,3834,"\n"]],[3834,3834],[3835,3835]]],[1536499201360,["gjx16@GJXAIOU",[[1,3835,"\n"]],[3835,3835],[3836,3836]]],[1536499201530,["gjx16@GJXAIOU",[[1,3836,"\n"]],[3836,3836],[3837,3837]]],[1536499208433,["gjx16@GJXAIOU",[[1,3834,"  int i;"]],[3834,3834],[3842,3842]]],[1536499209084,["gjx16@GJXAIOU",[[1,3843,"  \n"]],[3842,3842],[3845,3845]]],[1536499214985,["gjx16@GJXAIOU",[[-1,3843,"  "]],[3845,3845],[3843,3843]]],[1536499215208,["gjx16@GJXAIOU",[[-1,3845,"\n"]],[3843,3843],[3842,3842]]],[1536499215913,["gjx16@GJXAIOU",[[-1,3840,"i;"]],[3842,3842],[3840,3840]]],[1536499235980,["gjx16@GJXAIOU",[[1,3840,"array[3][5] = {};"]],[3840,3840],[3857,3857]]],[1536499239924,["gjx16@GJXAIOU",[[1,3855,"{"]],[3855,3855],[3856,3856]]],[1536499240162,["gjx16@GJXAIOU",[[1,3857,"}"]],[3856,3856],[3857,3857]]],[1536499308953,[null,[[-1,2127,"\n"],[1,2128,"i"],[1,2282,"\n"],[-1,2356,"\n"],[1,2368,"\n"],[-1,2373,"\n"],[1,4144,"\n"]],[2127,2127],[4145,4145]]],[1536499308953,[null,[[1,2127,"\n"],[-1,2127,"i"],[-1,2282,"\n"],[1,2357,"\n"],[-1,2368,"\n"],[1,2374,"\n"],[-1,4144,"\n"]],[4145,4145],[2127,2127]]],[1536499256814,["gjx16@GJXAIOU",[[1,3856,"1,3,4,5,9"]],[3856,3856],[3865,3865]]],[1536499265614,["gjx16@GJXAIOU",[[1,3866,",{"]],[3866,3866],[3868,3868]]],[1536499265840,["gjx16@GJXAIOU",[[1,3869,"}"]],[3868,3868],[3869,3869]]],[1536499270459,["gjx16@GJXAIOU",[[1,3868,"4,9k"]],[3868,3868],[3872,3872]]],[1536499271114,["gjx16@GJXAIOU",[[-1,3871,"k"]],[3872,3872],[3871,3871]]],[1536499275550,["gjx16@GJXAIOU",[[1,3871,",5,0,-"]],[3871,3871],[3877,3877]]],[1536499277218,["gjx16@GJXAIOU",[[-1,3876,"-"]],[3877,3877],[3876,3876]]],[1536499278148,["gjx16@GJXAIOU",[[1,3876,"8"]],[3876,3876],[3877,3877]]],[1536499281639,["gjx16@GJXAIOU",[[1,3878,",{"]],[3878,3878],[3880,3880]]],[1536499281864,["gjx16@GJXAIOU",[[1,3881,"}"]],[3880,3880],[3881,3881]]],[1536499286066,["gjx16@GJXAIOU",[[1,3880,"9,32"]],[3880,3880],[3884,3884]]],[1536499286678,["gjx16@GJXAIOU",[[-1,3883,"2"]],[3884,3884],[3883,3883]]],[1536499290585,["gjx16@GJXAIOU",[[1,3883,",4,23,4"]],[3883,3883],[3890,3890]]],[1536499293905,["gjx16@GJXAIOU",[[1,3894,"  \n"]],[3893,3893],[3896,3896]]],[1536499368959,[null,[[-1,2127,"\n"],[1,2128,"i"],[1,2282,"\n"],[-1,2356,"\n"],[1,2368,"\n"],[-1,2373,"\n"],[1,4181,"\n"]],[2127,2127],[4182,4182]]],[1536499368959,[null,[[1,2127,"\n"],[-1,2127,"i"],[-1,2282,"\n"],[1,2357,"\n"],[-1,2368,"\n"],[1,2374,"\n"],[-1,4181,"\n"]],[4182,4182],[2127,2127]]],[1536499310735,["gjx16@GJXAIOU",[[-1,3811,"列"]],[3812,3812],[3811,3811]]],[1536499312796,["gjx16@GJXAIOU",[[1,3811,"hang"]],[3811,3811],[3815,3815]]],[1536499314206,["gjx16@GJXAIOU",[[-1,3811,"hang"]],[3815,3815],[3811,3811]]],[1536499315440,["gjx16@GJXAIOU",[[1,3811,"行"]],[3811,3811],[3812,3812]]],[1536499334666,["gjx16@GJXAIOU",[[1,3896,"int i,;"]],[3896,3896],[3903,3903]]],[1536499335515,["gjx16@GJXAIOU",[[-1,3902,";"]],[3903,3903],[3902,3902]]],[1536499336662,["gjx16@GJXAIOU",[[1,3902,"j;"]],[3902,3902],[3904,3904]]],[1536499337198,["gjx16@GJXAIOU",[[1,3905,"  \n"]],[3904,3904],[3907,3907]]],[1536499341013,["gjx16@GJXAIOU",[[1,3907,"for()"]],[3907,3907],[3912,3912]]],[1536499365432,["gjx16@GJXAIOU",[[1,3911,"i = 0; i <3;i++"]],[3911,3911],[3926,3926]]],[1536499428963,[null,[[-1,2127,"\n"],[1,2128,"i"],[1,2282,"\n"],[-1,2356,"\n"],[1,2368,"\n"],[-1,2373,"\n"],[1,4212,"\n"]],[2127,2127],[4213,4213]]],[1536499428963,[null,[[1,2127,"\n"],[-1,2127,"i"],[-1,2282,"\n"],[1,2357,"\n"],[-1,2368,"\n"],[1,2374,"\n"],[-1,4212,"\n"]],[4213,4213],[2127,2127]]],[1536499370220,["gjx16@GJXAIOU",[[1,3928,"{}"]],[3928,3928],[3930,3930]]],[1536499371452,["gjx16@GJXAIOU",[[1,3929,"\n"]],[3929,3929],[3930,3930]]],[1536499371618,["gjx16@GJXAIOU",[[1,3930,"\n"]],[3930,3930],[3931,3931]]],[1536499371836,["gjx16@GJXAIOU",[[1,3931,"\n"]],[3931,3931],[3932,3932]]],[1536499373612,["gjx16@GJXAIOU",[[1,3932,"`"]],[3932,3932],[3933,3933]]],[1536499375051,["gjx16@GJXAIOU",[[-1,3932,"`"]],[3933,3933],[3932,3932]]],[1536499375370,["gjx16@GJXAIOU",[[1,3932,"  "]],[3932,3932],[3934,3934]]],[1536499378079,["gjx16@GJXAIOU",[[1,3928,"  "]],[3928,3928],[3930,3930]]],[1536499385660,["gjx16@GJXAIOU",[[1,3932,"    for()"]],[3932,3932],[3941,3941]]],[1536499388966,["gjx16@GJXAIOU",[[1,3940,"j= "]],[3940,3940],[3943,3943]]],[1536499390435,["gjx16@GJXAIOU",[[-1,3941,"= "]],[3943,3943],[3941,3941]]],[1536499397628,["gjx16@GJXAIOU",[[1,3941," = 0;j"]],[3941,3941],[3947,3947]]],[1536499400960,["gjx16@GJXAIOU",[[-1,3946,"j"]],[3947,3947],[3946,3946]]],[1536499403191,["gjx16@GJXAIOU",[[1,3946,"j<"]],[3946,3946],[3948,3948]]],[1536499403845,["gjx16@GJXAIOU",[[-1,3947,"<"]],[3948,3948],[3947,3947]]],[1536499409414,["gjx16@GJXAIOU",[[1,3947," <5"]],[3947,3947],[3950,3950]]],[1536499410381,["gjx16@GJXAIOU",[[-1,3949,"5"]],[3950,3950],[3949,3949]]],[1536499414386,["gjx16@GJXAIOU",[[1,3949," 5;j++"]],[3949,3949],[3955,3955]]],[1536499422365,["gjx16@GJXAIOU",[[1,3957,"    {}"]],[3957,3957],[3963,3963]]],[1536499425082,["gjx16@GJXAIOU",[[1,3962,"\n    \n    \n    "]],[3962,3962],[3977,3977]]],[1536499427655,["gjx16@GJXAIOU",[[1,3967,"  "]],[3967,3967],[3969,3969]]],[1536499488964,[null,[[-1,2127,"\n"],[1,2128,"i"],[1,2282,"\n"],[-1,2356,"\n"],[1,2368,"\n"],[-1,2373,"\n"],[1,4268,"\n"]],[2127,2127],[4269,4269]]],[1536499488964,[null,[[1,2127,"\n"],[-1,2127,"i"],[-1,2282,"\n"],[1,2357,"\n"],[-1,2368,"\n"],[1,2374,"\n"],[-1,4268,"\n"]],[4269,4269],[2127,2127]]],[1536499434858,["gjx16@GJXAIOU",[[1,3985,"    re"]],[3985,3985],[3991,3991]]],[1536499436310,["gjx16@GJXAIOU",[[-1,3987,"  re"]],[3991,3991],[3987,3987]]],[1536499438462,["gjx16@GJXAIOU",[[1,3987,"retun"]],[3987,3987],[3992,3992]]],[1536499439063,["gjx16@GJXAIOU",[[-1,3991,"n"]],[3992,3992],[3991,3991]]],[1536499440129,["gjx16@GJXAIOU",[[1,3991,"en"]],[3991,3991],[3993,3993]]],[1536499441208,["gjx16@GJXAIOU",[[-1,3991,"en"]],[3993,3993],[3991,3991]]],[1536499444119,["gjx16@GJXAIOU",[[1,3991,"rn 0;"]],[3991,3991],[3996,3996]]],[1536499458954,["gjx16@GJXAIOU",[[1,3934,"\n  "]],[3931,3931],[3934,3934]]],[1536499467768,["gjx16@GJXAIOU",[[1,3934,"  int sum = 0;"]],[3934,3934],[3948,3948]]],[1536499484573,["gjx16@GJXAIOU",[[1,3986,"sum +["]],[3986,3986],[3992,3992]]],[1536499485533,["gjx16@GJXAIOU",[[-1,3991,"["]],[3992,3992],[3991,3991]]],[1536499486778,["gjx16@GJXAIOU",[[1,3991,"= "]],[3991,3991],[3993,3993]]],[1536499548972,[null,[[-1,2127,"\n"],[1,2128,"i"],[1,2282,"\n"],[-1,2356,"\n"],[1,2368,"\n"],[-1,2373,"\n"],[1,4303,"\n"]],[2127,2127],[4304,4304]]],[1536499548972,[null,[[1,2127,"\n"],[-1,2127,"i"],[-1,2282,"\n"],[1,2357,"\n"],[-1,2368,"\n"],[1,2374,"\n"],[-1,4303,"\n"]],[4304,4304],[2127,2127]]],[1536499517355,["gjx16@GJXAIOU",[[1,3993,"array[i][j];"]],[3993,3993],[4005,4005]]],[1536499521097,["gjx16@GJXAIOU",[[1,4019,"  \n  "]],[4016,4016],[4021,4021]]],[1536499527120,["gjx16@GJXAIOU",[[1,4021,"printf();"]],[4021,4021],[4030,4030]]],[1536499530833,["gjx16@GJXAIOU",[[1,4028,"\"\""]],[4028,4028],[4030,4030]]],[1536499536275,["gjx16@GJXAIOU",[[1,4029,"%d/"]],[4029,4029],[4032,4032]]],[1536499537009,["gjx16@GJXAIOU",[[-1,4031,"/"]],[4032,4032],[4031,4031]]],[1536499538338,["gjx16@GJXAIOU",[[1,4031,"\\n"]],[4031,4031],[4033,4033]]],[1536499542736,["gjx16@GJXAIOU",[[1,4034,",ara"]],[4034,4034],[4038,4038]]],[1536499543960,["gjx16@GJXAIOU",[[-1,4035,"ara"]],[4038,4038],[4035,4035]]],[1536499545112,["gjx16@GJXAIOU",[[1,4035,"sum"]],[4035,4035],[4038,4038]]],[1536499608966,[null,[[-1,2127,"\n"],[1,2128,"i"],[1,2282,"\n"],[-1,2356,"\n"],[1,2368,"\n"],[-1,2373,"\n"],[1,4339,"\n"]],[2127,2127],[4340,4340]]],[1536499608966,[null,[[1,2127,"\n"],[-1,2127,"i"],[-1,2282,"\n"],[1,2357,"\n"],[-1,2368,"\n"],[1,2374,"\n"],[-1,4339,"\n"]],[4340,4340],[2127,2127]]],[1536499551301,["gjx16@GJXAIOU",[[-1,4006,"    "]],[4010,4010],[4006,4006]]],[1536499551755,["gjx16@GJXAIOU",[[-1,4006,"\n"]],[4006,4006],[4005,4005]]],[1536499585843,["gjx16@GJXAIOU",[[1,4062,"\n"]],[4057,4057],[4058,4058]]],[1536499586481,["gjx16@GJXAIOU",[[1,4063,"\n"]],[4058,4058],[4059,4059]]],[1536499588016,["gjx16@GJXAIOU",[[1,4059,"me"]],[4059,4059],[4061,4061]]],[1536499588756,["gjx16@GJXAIOU",[[-1,4059,"me"]],[4061,4061],[4059,4059]]],[1536499592839,["gjx16@GJXAIOU",[[1,4059,"每列的和："]],[4059,4059],[4064,4064]]],[1536499593227,["gjx16@GJXAIOU",[[1,4069,"\n"]],[4064,4064],[4065,4065]]],[1536499595365,["gjx16@GJXAIOU",[[1,4070,"\n"]],[4065,4065],[4066,4066]]],[1536499596079,["gjx16@GJXAIOU",[[1,4066,"···"]],[4066,4066],[4069,4069]]],[1536499597851,["gjx16@GJXAIOU",[[-1,4066,"···"]],[4069,4069],[4066,4066]]],[1536499598782,["gjx16@GJXAIOU",[[1,4071,"\n"]],[4066,4066],[4067,4067]]],[1536499599614,["gjx16@GJXAIOU",[[1,4067,"···"]],[4067,4067],[4070,4070]]],[1536499602203,["gjx16@GJXAIOU",[[-1,4067,"···"]],[4070,4070],[4067,4067]]],[1536499603986,["gjx16@GJXAIOU",[[1,4067,"```"]],[4067,4067],[4070,4070]]],[1536499604017,["gjx16@GJXAIOU",[[1,4070,"language\n```\n"]],[4070,4070],[4070,4078]]],[1536499605300,["gjx16@GJXAIOU",[[-1,4070,"language"],[1,4078,"c"]],[4070,4078],[4071,4071]]],[1536499605531,["gjx16@GJXAIOU",[[1,4072,"\n"]],[4071,4071],[4072,4072]]],[1536499608840,["gjx16@GJXAIOU",[[1,4072,"int mai"]],[4072,4072],[4079,4079]]],[1536499668969,[null,[[-1,2127,"\n"],[1,2128,"i"],[1,2282,"\n"],[-1,2356,"\n"],[1,2368,"\n"],[-1,2373,"\n"],[1,4361,"\n"]],[2127,2127],[4362,4362]]],[1536499668969,[null,[[1,2127,"\n"],[-1,2127,"i"],[-1,2282,"\n"],[1,2357,"\n"],[-1,2368,"\n"],[1,2374,"\n"],[-1,4361,"\n"]],[4362,4362],[2127,2127]]],[1536499609947,["gjx16@GJXAIOU",[[1,4079,"n()"]],[4079,4079],[4082,4082]]],[1536499610565,["gjx16@GJXAIOU",[[1,4083,"\n"]],[4082,4082],[4083,4083]]],[1536499611565,["gjx16@GJXAIOU",[[1,4083,"{{"]],[4083,4083],[4085,4085]]],[1536499613398,["gjx16@GJXAIOU",[[-1,4084,"{"]],[4085,4085],[4084,4084]]],[1536499614260,["gjx16@GJXAIOU",[[1,4084,"}"]],[4084,4084],[4085,4085]]],[1536499615821,["gjx16@GJXAIOU",[[1,4084,"\n"]],[4084,4084],[4085,4085]]],[1536499616001,["gjx16@GJXAIOU",[[1,4085,"\n"]],[4085,4085],[4086,4086]]],[1536499616156,["gjx16@GJXAIOU",[[1,4086,"\n"]],[4086,4086],[4087,4087]]],[1536499616321,["gjx16@GJXAIOU",[[1,4087,"\n"]],[4087,4087],[4088,4088]]],[1536499616471,["gjx16@GJXAIOU",[[1,4088,"\n"]],[4088,4088],[4089,4089]]],[1536499619408,["gjx16@GJXAIOU",[[1,4088,"rer"]],[4088,4088],[4091,4091]]],[1536499621084,["gjx16@GJXAIOU",[[-1,4088,"rer"]],[4091,4091],[4088,4088]]],[1536499624394,["gjx16@GJXAIOU",[[1,4088,"re"]],[4088,4088],[4090,4090]]],[1536499626900,["gjx16@GJXAIOU",[[-1,4088,"re"]],[4090,4090],[4088,4088]]],[1536499630588,["gjx16@GJXAIOU",[[1,4088,"retun"]],[4088,4088],[4093,4093]]],[1536499631068,["gjx16@GJXAIOU",[[-1,4092,"n"]],[4093,4093],[4092,4092]]],[1536499631434,["gjx16@GJXAIOU",[[1,4092,"en"]],[4092,4092],[4094,4094]]],[1536499632111,["gjx16@GJXAIOU",[[-1,4092,"en"]],[4094,4094],[4092,4092]]],[1536499635865,["gjx16@GJXAIOU",[[1,4092,"rn 0;"]],[4092,4092],[4097,4097]]],[1536499645188,["gjx16@GJXAIOU",[[1,4085,"  int array["]],[4085,4085],[4097,4097]]],[1536499653582,["gjx16@GJXAIOU",[[1,4087," "],[1,4097,"3][5] = {{1,3,4,5,9},{4,9,5,0,8},{9,3,4,23,4}};"]],[4087,4097],[4145,4145]]],[1536499655314,["gjx16@GJXAIOU",[[1,4146,"   \n"]],[4145,4145],[4149,4149]]],[1536499663594,["gjx16@GJXAIOU",[[1,4149,"int i,j;"]],[4149,4149],[4157,4157]]],[1536499664115,["gjx16@GJXAIOU",[[1,4158,"   \n"]],[4157,4157],[4161,4161]]],[1536499668573,["gjx16@GJXAIOU",[[1,4161,"for()"]],[4161,4161],[4166,4166]]],[1536499728981,[null,[[-1,2127,"\n"],[1,2128,"i"],[1,2282,"\n"],[-1,2356,"\n"],[1,2368,"\n"],[-1,2373,"\n"],[1,4462,"\n"]],[2127,2127],[4463,4463]]],[1536499728981,[null,[[1,2127,"\n"],[-1,2127,"i"],[-1,2282,"\n"],[1,2357,"\n"],[-1,2368,"\n"],[1,2374,"\n"],[-1,4462,"\n"]],[4463,4463],[2127,2127]]],[1536499669322,["gjx16@GJXAIOU",[[1,4166,"'"]],[4166,4166],[4167,4167]]],[1536499669922,["gjx16@GJXAIOU",[[-1,4166,"'"]],[4167,4167],[4166,4166]]],[1536499670516,["gjx16@GJXAIOU",[[1,4166,";"]],[4166,4166],[4167,4167]]],[1536499682969,["gjx16@GJXAIOU",[[1,4165,"j = 0; j<"]],[4165,4165],[4174,4174]]],[1536499684205,["gjx16@GJXAIOU",[[-1,4172,"j<"]],[4174,4174],[4172,4172]]],[1536499684430,["gjx16@GJXAIOU",[[1,4172," "]],[4172,4172],[4173,4173]]],[1536499685791,["gjx16@GJXAIOU",[[-1,4172," "]],[4173,4173],[4172,4172]]],[1536499693392,["gjx16@GJXAIOU",[[1,4172,"j < 5; j++"]],[4172,4172],[4182,4182]]],[1536499695257,["gjx16@GJXAIOU",[[1,4185,"   \n"]],[4184,4184],[4188,4188]]],[1536499698797,["gjx16@GJXAIOU",[[1,4188,"{}"]],[4188,4188],[4190,4190]]],[1536499700380,["gjx16@GJXAIOU",[[1,4189,"\n   \n   \n   "]],[4189,4189],[4201,4201]]],[1536499711696,["gjx16@GJXAIOU",[[1,4193,"  int sum = 0;"]],[4193,4193],[4207,4207]]],[1536499712297,["gjx16@GJXAIOU",[[1,4211,"  \n   "]],[4207,4207],[4213,4213]]],[1536499716073,["gjx16@GJXAIOU",[[1,4213,"for()"]],[4213,4213],[4218,4218]]],[1536499722931,["gjx16@GJXAIOU",[[1,4217,"i = 0 "]],[4217,4217],[4223,4223]]],[1536499723640,["gjx16@GJXAIOU",[[-1,4222," "]],[4223,4223],[4222,4222]]],[1536499726596,["gjx16@GJXAIOU",[[1,4222,"; j"]],[4222,4222],[4225,4225]]],[1536499727252,["gjx16@GJXAIOU",[[-1,4224,"j"]],[4225,4225],[4224,4224]]],[1536499727940,["gjx16@GJXAIOU",[[1,4224,"i"]],[4224,4224],[4225,4225]]],[1536499789024,[null,[[-1,2127,"\n"],[1,2128,"i"],[1,2282,"\n"],[-1,2356,"\n"],[1,2368,"\n"],[-1,2373,"\n"],[1,4531,"\n"]],[2127,2127],[4532,4532]]],[1536499789024,[null,[[1,2127,"\n"],[-1,2127,"i"],[-1,2282,"\n"],[1,2357,"\n"],[-1,2368,"\n"],[1,2374,"\n"],[-1,4531,"\n"]],[4532,4532],[2127,2127]]],[1536499736851,["gjx16@GJXAIOU",[[1,4226,"< 3;I"]],[4226,4226],[4231,4231]]],[1536499737646,["gjx16@GJXAIOU",[[-1,4230,"I"]],[4231,4231],[4230,4230]]],[1536499739817,["gjx16@GJXAIOU",[[1,4230,"i++"]],[4230,4230],[4233,4233]]],[1536499741671,["gjx16@GJXAIOU",[[1,4238,"  \n   "]],[4234,4234],[4240,4240]]],[1536499743799,["gjx16@GJXAIOU",[[1,4240,"{}"]],[4240,4240],[4242,4242]]],[1536499745310,["gjx16@GJXAIOU",[[1,4241,"\n     \n     "]],[4241,4241],[4253,4253]]],[1536499767807,["gjx16@GJXAIOU",[[1,4247,"  sum +=array[i][j];"]],[4247,4247],[4267,4267]]],[1536499778456,["gjx16@GJXAIOU",[[1,4278,"printf();"]],[4278,4278],[4287,4287]]],[1536499782564,["gjx16@GJXAIOU",[[1,4285,"j"]],[4285,4285],[4286,4286]]],[1536499783492,["gjx16@GJXAIOU",[[-1,4285,"j"]],[4286,4286],[4285,4285]]],[1536499786225,["gjx16@GJXAIOU",[[1,4285,"\"\""]],[4285,4285],[4287,4287]]],[1536499788929,["gjx16@GJXAIOU",[[1,4286,"%"]],[4286,4286],[4287,4287]]],[1536499849071,[null,[[-1,2127,"\n"],[1,2128,"i"],[1,2282,"\n"],[-1,2356,"\n"],[1,2368,"\n"],[-1,2373,"\n"],[-1,4225,")"],[1,4226," "],[1,4233,")"],[-1,4237,"\n"],[1,4290,"\n"],[1,4590,"\n"]],[2127,2127],[4591,4591]]],[1536499849071,[null,[[1,2127,"\n"],[-1,2127,"i"],[-1,2282,"\n"],[1,2357,"\n"],[-1,2368,"\n"],[1,2374,"\n"],[1,4225,")"],[-1,4225," "],[-1,4233,")"],[1,4238,"\n"],[-1,4290,"\n"],[-1,4591,"\n"]],[4591,4591],[2127,2127]]],[1536499793063,["gjx16@GJXAIOU",[[1,4287,"d\\n"]],[4287,4287],[4290,4290]]],[1536499804869,["gjx16@GJXAIOU",[[1,4291,",array[i][j]"]],[4291,4291],[4303,4303]]],[1536499824519,["gjx16@GJXAIOU",[[-1,4312,"\n"]],[4312,4312],[4311,4311]]],[1536499825092,["gjx16@GJXAIOU",[[-1,4311,"\n"]],[4311,4311],[4310,4310]]],[1536499829703,["gjx16@GJXAIOU",[[1,4311,"  "]],[4311,4311],[4313,4313]]],[1536499833670,["gjx16@GJXAIOU",[[-1,4066,"\n"]],[4066,4066],[4065,4065]]],[1536499844142,["gjx16@GJXAIOU",[[-1,4333,"![每列的和]($resource/%E6%AF%8F%E5%88%97%E7%9A%84%E5%92%8C.png)\n\n\n![打印行的和]($resource/%E6%89%93%E5%8D%B0%E8%A1%8C%E7%9A%84%E5%92%8C.png)"]],[4333,4464],[4333,4333]]],[1536499844635,["gjx16@GJXAIOU",[[-1,4336,"\n"]],[4333,4333],[4332,4332]]],[1536499845741,["gjx16@GJXAIOU",[[-1,4335,"\n"]],[4335,4335],[4334,4334]]],[1536499846040,["gjx16@GJXAIOU",[[-1,4334,"\n"]],[4334,4334],[4333,4333]]],[1536499846547,["gjx16@GJXAIOU",[[-1,4333,"\n"]],[4333,4333],[4332,4332]]],[1536499846967,["gjx16@GJXAIOU",[[-1,4332,"\n"]],[4332,4332],[4331,4331]]],[1536499847399,["gjx16@GJXAIOU",[[-1,4331,"\n"]],[4331,4331],[4330,4330]]],[1536499848964,["gjx16@GJXAIOU",[[-1,4330,"\n"]],[4330,4330],[4329,4329]]],[1536499909063,[null,[[-1,2127,"\n"],[1,2128,"i"],[1,2282,"\n"],[-1,2356,"\n"],[1,2368,"\n"],[-1,2373,"\n"],[-1,4224,")"],[1,4225," "],[1,4232,")"],[-1,4236,"\n"],[1,4304,"\n"],[-1,4309,"\n"],[1,4312,"r"],[-1,4329,"\n"],[1,4330,"*"],[1,4466,"\n"]],[2127,2127],[4467,4467]]],[1536499909063,[null,[[1,2127,"\n"],[-1,2127,"i"],[-1,2282,"\n"],[1,2357,"\n"],[-1,2368,"\n"],[1,2374,"\n"],[1,4224,")"],[-1,4224," "],[-1,4232,")"],[1,4237,"\n"],[-1,4304,"\n"],[1,4310,"\n"],[-1,4312,"r"],[1,4330,"\n"],[-1,4330,"*"],[-1,4467,"\n"]],[4467,4467],[2127,2127]]],[1536499852577,["gjx16@GJXAIOU",[[1,4340,"\n"]],[4339,4339],[4340,4340]]],[1536499854756,["gjx16@GJXAIOU",[[-1,4340,"\n"]],[4340,4340],[4339,4339]]],[1536499856674,["gjx16@GJXAIOU",[[1,4339,"```"]],[4339,4339],[4342,4342]]],[1536499856705,["gjx16@GJXAIOU",[[1,4342,"language\n```\n"]],[4342,4342],[4342,4350]]],[1536499857799,["gjx16@GJXAIOU",[[-1,4342,"language"],[1,4350,"c"]],[4342,4350],[4343,4343]]],[1536499858033,["gjx16@GJXAIOU",[[1,4344,"\n"]],[4343,4343],[4344,4344]]],[1536499860573,["gjx16@GJXAIOU",[[1,4344,"int mi"]],[4344,4344],[4350,4350]]],[1536499861126,["gjx16@GJXAIOU",[[-1,4349,"i"]],[4350,4350],[4349,4349]]],[1536499863303,["gjx16@GJXAIOU",[[1,4349,"ain()"]],[4349,4349],[4354,4354]]],[1536499864292,["gjx16@GJXAIOU",[[1,4355,"\n"]],[4354,4354],[4355,4355]]],[1536499866519,["gjx16@GJXAIOU",[[1,4355,"{}"]],[4355,4355],[4357,4357]]],[1536499867620,["gjx16@GJXAIOU",[[1,4356,"\n"]],[4356,4356],[4357,4357]]],[1536499867784,["gjx16@GJXAIOU",[[1,4357,"\n"]],[4357,4357],[4358,4358]]],[1536499874743,["gjx16@GJXAIOU",[[1,4357,"  retuen"]],[4357,4357],[4365,4365]]],[1536499875483,["gjx16@GJXAIOU",[[-1,4363,"en"]],[4365,4365],[4363,4363]]],[1536499879602,["gjx16@GJXAIOU",[[1,4363,"rn 0;"]],[4363,4363],[4368,4368]]],[1536499882285,["gjx16@GJXAIOU",[[1,4357,"\n"]],[4356,4356],[4357,4357]]],[1536499904457,["gjx16@GJXAIOU",[[1,4357,"  int array[10] = {}'"]],[4357,4357],[4378,4378]]],[1536499905659,["gjx16@GJXAIOU",[[-1,4377,"'"]],[4378,4378],[4377,4377]]],[1536499906346,["gjx16@GJXAIOU",[[1,4377,";"]],[4377,4377],[4378,4378]]],[1536499969067,[null,[[-1,2127,"\n"],[1,2128,"i"],[1,2282,"\n"],[-1,2356,"\n"],[1,2368,"\n"],[-1,2373,"\n"],[-1,4224,")"],[1,4225," "],[1,4232,")"],[-1,4236,"\n"],[1,4304,"\n"],[-1,4309,"\n"],[1,4312,"r"],[-1,4329,"\n"],[1,4330,"*"],[-1,4337,"\n"],[1,4397,"\n"],[-1,4524,""],[1,4524,"\n"]],[2127,2127],[4525,4525]]],[1536499969067,[null,[[1,2127,"\n"],[-1,2127,"i"],[-1,2282,"\n"],[1,2357,"\n"],[-1,2368,"\n"],[1,2374,"\n"],[1,4224,")"],[-1,4224," "],[-1,4232,")"],[1,4237,"\n"],[-1,4304,"\n"],[1,4310,"\n"],[-1,4312,"r"],[1,4330,"\n"],[-1,4330,"*"],[1,4338,"\n"],[-1,4397,"\n"],[1,4525,""],[-1,4525,"\n"]],[4525,4525],[2127,2127]]],[1536499912697,["gjx16@GJXAIOU",[[1,4376,"1,4,8k"]],[4376,4376],[4382,4382]]],[1536499914260,["gjx16@GJXAIOU",[[-1,4381,"k"]],[4382,4382],[4381,4381]]],[1536499935368,["gjx16@GJXAIOU",[[1,4381,",0,9,34,0"]],[4381,4381],[4390,4390]]],[1536499936103,["gjx16@GJXAIOU",[[-1,4389,"0"]],[4390,4390],[4389,4389]]],[1536499949851,["gjx16@GJXAIOU",[[1,4389,"98,100,5,3"]],[4389,4389],[4399,4399]]],[1536499952767,["gjx16@GJXAIOU",[[1,4404,"\n  "]],[4401,4401],[4404,4404]]],[1536500449073,[null,[[-1,2127,"\n"],[1,2128,"i"],[1,2282,"\n"],[-1,2356,"\n"],[1,2368,"\n"],[-1,2373,"\n"],[-1,4224,")"],[1,4225," "],[1,4232,")"],[-1,4236,"\n"],[1,4304,"\n"],[-1,4309,"\n"],[1,4312,"r"],[-1,4329,"\n"],[1,4330,"*"],[-1,4337,"\n"],[1,4423,"\n"],[-1,4550,""],[1,4550,"\n"]],[2127,2127],[4551,4551]]],[1536500449073,[null,[[1,2127,"\n"],[-1,2127,"i"],[-1,2282,"\n"],[1,2357,"\n"],[-1,2368,"\n"],[1,2374,"\n"],[1,4224,")"],[-1,4224," "],[-1,4232,")"],[1,4237,"\n"],[-1,4304,"\n"],[1,4310,"\n"],[-1,4312,"r"],[1,4330,"\n"],[-1,4330,"*"],[1,4338,"\n"],[-1,4423,"\n"],[1,4551,""],[-1,4551,"\n"]],[4551,4551],[2127,2127]]],[1536500425165,["gjx16@GJXAIOU",[[1,4404,"for"]],[4404,4404],[4407,4407]]],[1536500430002,["gjx16@GJXAIOU",[[-1,4404,"for"]],[4407,4407],[4404,4404]]],[1536500433283,["gjx16@GJXAIOU",[[1,4404,"int i;"]],[4404,4404],[4410,4410]]],[1536500433984,["gjx16@GJXAIOU",[[1,4413,"\n  "]],[4410,4410],[4413,4413]]],[1536500437190,["gjx16@GJXAIOU",[[1,4413,"for()"]],[4413,4413],[4418,4418]]],[1536500445813,["gjx16@GJXAIOU",[[1,4417,"i = 0;"]],[4417,4417],[4423,4423]]],[1536500509077,[null,[[-1,2127,"\n"],[1,2128,"i"],[1,2282,"\n"],[-1,2356,"\n"],[1,2368,"\n"],[-1,2373,"\n"],[-1,4224,")"],[1,4225," "],[1,4232,")"],[-1,4236,"\n"],[1,4304,"\n"],[-1,4309,"\n"],[1,4312,"r"],[-1,4329,"\n"],[1,4330,"*"],[-1,4337,"\n"],[1,4443,"\n"],[-1,4570,""],[1,4570,"\n"]],[2127,2127],[4571,4571]]],[1536500509077,[null,[[1,2127,"\n"],[-1,2127,"i"],[-1,2282,"\n"],[1,2357,"\n"],[-1,2368,"\n"],[1,2374,"\n"],[1,4224,")"],[-1,4224," "],[-1,4232,")"],[1,4237,"\n"],[-1,4304,"\n"],[1,4310,"\n"],[-1,4312,"r"],[1,4330,"\n"],[-1,4330,"*"],[1,4338,"\n"],[-1,4443,"\n"],[1,4571,""],[-1,4571,"\n"]],[4571,4571],[2127,2127]]],[1536500496135,["gjx16@GJXAIOU",[[1,4423,"i < 10;i+="]],[4423,4423],[4433,4433]]],[1536500496999,["gjx16@GJXAIOU",[[-1,4432,"="]],[4433,4433],[4432,4432]]],[1536500497907,["gjx16@GJXAIOU",[[1,4432,"+"]],[4432,4432],[4433,4433]]],[1536500500017,["gjx16@GJXAIOU",[[1,4437,"\n  "]],[4434,4434],[4437,4437]]],[1536500504027,["gjx16@GJXAIOU",[[1,4437,"  {}"]],[4437,4437],[4441,4441]]],[1536500506347,["gjx16@GJXAIOU",[[1,4440,"\n    \n    \n    "]],[4440,4440],[4455,4455]]],[1536500569079,[null,[[-1,2127,"\n"],[1,2128,"i"],[1,2282,"\n"],[-1,2356,"\n"],[1,2368,"\n"],[-1,2373,"\n"],[-1,4224,")"],[1,4225," "],[1,4232,")"],[-1,4236,"\n"],[1,4304,"\n"],[-1,4309,"\n"],[1,4312,"r"],[-1,4329,"\n"],[1,4330,"*"],[-1,4337,"\n"],[1,4475,"\n"],[-1,4602,""],[1,4602,"\n"]],[2127,2127],[4603,4603]]],[1536500569079,[null,[[1,2127,"\n"],[-1,2127,"i"],[-1,2282,"\n"],[1,2357,"\n"],[-1,2368,"\n"],[1,2374,"\n"],[1,4224,")"],[-1,4224," "],[-1,4232,")"],[1,4237,"\n"],[-1,4304,"\n"],[1,4310,"\n"],[-1,4312,"r"],[1,4330,"\n"],[-1,4330,"*"],[1,4338,"\n"],[-1,4475,"\n"],[1,4603,""],[-1,4603,"\n"]],[4603,4603],[2127,2127]]],[1536500521478,["gjx16@GJXAIOU",[[1,4445,"  if()"]],[4445,4445],[4451,4451]]],[1536500534660,["gjx16@GJXAIOU",[[1,4450,"array[i-"]],[4450,4450],[4458,4458]]],[1536500538223,["gjx16@GJXAIOU",[[-1,4455,"[i-"]],[4458,4458],[4455,4455]]],[1536500545707,["gjx16@GJXAIOU",[[1,4455,"[i-1]"]],[4455,4455],[4460,4460]]],[1536500553753,["gjx16@GJXAIOU",[[-1,4421,"0"]],[4422,4422],[4421,4421]]],[1536500555194,["gjx16@GJXAIOU",[[1,4421,"1"]],[4421,4421],[4422,4422]]],[1536500629079,[null,[[-1,2127,"\n"],[1,2128,"i"],[1,2282,"\n"],[-1,2356,"\n"],[1,2368,"\n"],[-1,2373,"\n"],[-1,4224,")"],[1,4225," "],[1,4232,")"],[-1,4236,"\n"],[1,4304,"\n"],[-1,4309,"\n"],[1,4312,"r"],[-1,4329,"\n"],[1,4330,"*"],[-1,4337,"\n"],[1,4491,"\n"],[-1,4618,""],[1,4618,"\n"]],[2127,2127],[4619,4619]]],[1536500629079,[null,[[1,2127,"\n"],[-1,2127,"i"],[-1,2282,"\n"],[1,2357,"\n"],[-1,2368,"\n"],[1,2374,"\n"],[1,4224,")"],[-1,4224," "],[-1,4232,")"],[1,4237,"\n"],[-1,4304,"\n"],[1,4310,"\n"],[-1,4312,"r"],[1,4330,"\n"],[-1,4330,"*"],[1,4338,"\n"],[-1,4491,"\n"],[1,4619,""],[-1,4619,"\n"]],[4619,4619],[2127,2127]]],[1536500580451,["gjx16@GJXAIOU",[[-1,4421,"1"]],[4422,4422],[4421,4421]]],[1536500581827,["gjx16@GJXAIOU",[[1,4421,"0"]],[4421,4421],[4422,4422]]],[1536500586054,["gjx16@GJXAIOU",[[1,4413,"\n  "]],[4410,4410],[4413,4413]]],[1536500589204,["gjx16@GJXAIOU",[[1,4413,"int j;"]],[4413,4413],[4419,4419]]],[1536500599161,["gjx16@GJXAIOU",[[1,4454,"\n    "]],[4449,4449],[4454,4454]]],[1536500603490,["gjx16@GJXAIOU",[[1,4454,"  for()"]],[4454,4454],[4461,4461]]],[1536500612331,["gjx16@GJXAIOU",[[1,4460,"j = 1; j<"]],[4460,4460],[4469,4469]]],[1536500613348,["gjx16@GJXAIOU",[[-1,4468,"<"]],[4469,4469],[4468,4468]]],[1536500617850,["gjx16@GJXAIOU",[[1,4468," <10"]],[4468,4468],[4472,4472]]],[1536500620302,["gjx16@GJXAIOU",[[-1,4470,"10"]],[4472,4472],[4470,4470]]],[1536500625674,["gjx16@GJXAIOU",[[1,4470," 10-j"]],[4470,4470],[4475,4475]]],[1536500627925,["gjx16@GJXAIOU",[[-1,4474,"j"]],[4475,4475],[4474,4474]]],[1536500628713,["gjx16@GJXAIOU",[[1,4474,"i"]],[4474,4474],[4475,4475]]],[1536500689082,[null,[[-1,2127,"\n"],[1,2128,"i"],[1,2282,"\n"],[-1,2356,"\n"],[1,2368,"\n"],[-1,2373,"\n"],[-1,4224,")"],[1,4225," "],[1,4232,")"],[-1,4236,"\n"],[1,4304,"\n"],[-1,4309,"\n"],[1,4312,"r"],[-1,4329,"\n"],[1,4330,"*"],[-1,4337,"\n"],[1,4527,"\n"],[-1,4654,""],[1,4654,"\n"]],[2127,2127],[4655,4655]]],[1536500689082,[null,[[1,2127,"\n"],[-1,2127,"i"],[-1,2282,"\n"],[1,2357,"\n"],[-1,2368,"\n"],[1,2374,"\n"],[1,4224,")"],[-1,4224," "],[-1,4232,")"],[1,4237,"\n"],[-1,4304,"\n"],[1,4310,"\n"],[-1,4312,"r"],[1,4330,"\n"],[-1,4330,"*"],[1,4338,"\n"],[-1,4527,"\n"],[1,4655,""],[-1,4655,"\n"]],[4655,4655],[2127,2127]]],[1536500633928,["gjx16@GJXAIOU",[[1,4475,";j++"]],[4475,4475],[4479,4479]]],[1536500637600,["gjx16@GJXAIOU",[[1,4487,"\n      "]],[4480,4480],[4487,4487]]],[1536500640360,["gjx16@GJXAIOU",[[1,4487,"{"]],[4487,4487],[4488,4488]]],[1536500643565,["gjx16@GJXAIOU",[[1,4495,"  "]],[4495,4495],[4497,4497]]],[1536500653084,["gjx16@GJXAIOU",[[1,4516,"  }"]],[4516,4516],[4519,4519]]],[1536500749086,[null,[[-1,2127,"\n"],[1,2128,"i"],[1,2282,"\n"],[-1,2356,"\n"],[1,2368,"\n"],[-1,2373,"\n"],[-1,4224,")"],[1,4225," "],[1,4232,")"],[-1,4236,"\n"],[1,4304,"\n"],[-1,4309,"\n"],[1,4312,"r"],[-1,4329,"\n"],[1,4330,"*"],[-1,4337,"\n"],[1,4544,"\n"],[-1,4671,""],[1,4671,"\n"]],[2127,2127],[4672,4672]]],[1536500749086,[null,[[1,2127,"\n"],[-1,2127,"i"],[-1,2282,"\n"],[1,2357,"\n"],[-1,2368,"\n"],[1,2374,"\n"],[1,4224,")"],[-1,4224," "],[-1,4232,")"],[1,4237,"\n"],[-1,4304,"\n"],[1,4310,"\n"],[-1,4312,"r"],[1,4330,"\n"],[-1,4330,"*"],[1,4338,"\n"],[-1,4544,"\n"],[1,4672,""],[-1,4672,"\n"]],[4672,4672],[2127,2127]]],[1536500696025,["gjx16@GJXAIOU",[[1,4510," ?"]],[4510,4510],[4512,4512]]],[1536500697037,["gjx16@GJXAIOU",[[-1,4511,"?"]],[4512,4512],[4511,4511]]],[1536500704690,["gjx16@GJXAIOU",[[1,4511,">array[i]"]],[4511,4511],[4520,4520]]],[1536500707614,["gjx16@GJXAIOU",[[1,4528,"  \n      "]],[4521,4521],[4530,4530]]],[1536500713905,["gjx16@GJXAIOU",[[1,4530,"int tmp;"]],[4530,4530],[4538,4538]]],[1536500714476,["gjx16@GJXAIOU",[[1,4545,"  \n      "]],[4538,4538],[4547,4547]]],[1536500719313,["gjx16@GJXAIOU",[[1,4547,"tem"]],[4547,4547],[4550,4550]]],[1536500727983,["gjx16@GJXAIOU",[[-1,4548,"em"]],[4550,4550],[4548,4548]]],[1536500738458,["gjx16@GJXAIOU",[[1,4548,"mp = array[i];"]],[4548,4548],[4562,4562]]],[1536500739368,["gjx16@GJXAIOU",[[1,4569,"  \n      "]],[4562,4562],[4571,4571]]],[1536500748970,["gjx16@GJXAIOU",[[1,4571,"array[i]"]],[4571,4571],[4579,4579]]],[1536500809083,[null,[[-1,2127,"\n"],[1,2128,"i"],[1,2282,"\n"],[-1,2356,"\n"],[1,2368,"\n"],[-1,2373,"\n"],[-1,4224,")"],[1,4225," "],[1,4232,")"],[-1,4236,"\n"],[1,4304,"\n"],[-1,4309,"\n"],[1,4312,"r"],[-1,4329,"\n"],[1,4330,"*"],[-1,4337,"\n"],[1,4612,"\n"],[1,4739,"\n"]],[2127,2127],[4740,4740]]],[1536500809083,[null,[[1,2127,"\n"],[-1,2127,"i"],[-1,2282,"\n"],[1,2357,"\n"],[-1,2368,"\n"],[1,2374,"\n"],[1,4224,")"],[-1,4224," "],[-1,4232,")"],[1,4237,"\n"],[-1,4304,"\n"],[1,4310,"\n"],[-1,4312,"r"],[1,4330,"\n"],[-1,4330,"*"],[1,4338,"\n"],[-1,4612,"\n"],[-1,4740,"\n"]],[4740,4740],[2127,2127]]],[1536500760191,["gjx16@GJXAIOU",[[1,4579," = array[i-1];"]],[4579,4579],[4593,4593]]],[1536500760862,["gjx16@GJXAIOU",[[1,4600,"  \n      "]],[4593,4593],[4602,4602]]],[1536500774416,["gjx16@GJXAIOU",[[1,4602,"array[i-1] = a"]],[4602,4602],[4616,4616]]],[1536500775283,["gjx16@GJXAIOU",[[-1,4615,"a"]],[4616,4616],[4615,4615]]],[1536500777033,["gjx16@GJXAIOU",[[1,4615,"tm[ "]],[4615,4615],[4619,4619]]],[1536500777679,["gjx16@GJXAIOU",[[-1,4617,"[ "]],[4619,4619],[4617,4617]]],[1536500779769,["gjx16@GJXAIOU",[[1,4617,"p;"]],[4617,4617],[4619,4619]]],[1536500789972,["gjx16@GJXAIOU",[[1,4530,"  {\n          "]],[4530,4530],[4544,4544]]],[1536500793740,["gjx16@GJXAIOU",[[1,4561,"  "]],[4561,4561],[4563,4563]]],[1536500794770,["gjx16@GJXAIOU",[[1,4587,"  "]],[4587,4587],[4589,4589]]],[1536500795610,["gjx16@GJXAIOU",[[1,4620,"  "]],[4620,4620],[4622,4622]]],[1536500797073,["gjx16@GJXAIOU",[[1,4646,"    \n      "]],[4639,4639],[4650,4650]]],[1536500799422,["gjx16@GJXAIOU",[[1,4650,"}"]],[4650,4650],[4651,4651]]],[1536500869091,[null,[[-1,2127,"\n"],[1,2128,"i"],[1,2282,"\n"],[-1,2356,"\n"],[1,2368,"\n"],[-1,2373,"\n"],[-1,4224,")"],[1,4225," "],[1,4232,")"],[-1,4236,"\n"],[1,4304,"\n"],[-1,4309,"\n"],[1,4312,"r"],[-1,4329,"\n"],[1,4330,"*"],[-1,4337,"\n"],[1,4684,"\n"],[1,4811,"\n"]],[2127,2127],[4812,4812]]],[1536500869091,[null,[[1,2127,"\n"],[-1,2127,"i"],[-1,2282,"\n"],[1,2357,"\n"],[-1,2368,"\n"],[1,2374,"\n"],[1,4224,")"],[-1,4224," "],[-1,4232,")"],[1,4237,"\n"],[-1,4304,"\n"],[1,4310,"\n"],[-1,4312,"r"],[1,4330,"\n"],[-1,4330,"*"],[1,4338,"\n"],[-1,4684,"\n"],[-1,4812,"\n"]],[4812,4812],[2127,2127]]],[1536500823733,["gjx16@GJXAIOU",[[1,4668,"  \n  "]],[4665,4665],[4670,4670]]],[1536500827223,["gjx16@GJXAIOU",[[1,4670,"for()"]],[4670,4670],[4675,4675]]],[1536500833034,["gjx16@GJXAIOU",[[1,4674,"i="]],[4674,4674],[4676,4676]]],[1536500834225,["gjx16@GJXAIOU",[[-1,4675,"="]],[4676,4676],[4675,4675]]],[1536500842617,["gjx16@GJXAIOU",[[1,4675," = 0;i>"]],[4675,4675],[4682,4682]]],[1536500843170,["gjx16@GJXAIOU",[[-1,4681,">"]],[4682,4682],[4681,4681]]],[1536500850495,["gjx16@GJXAIOU",[[1,4681," < 10;i++"]],[4681,4681],[4690,4690]]],[1536500929087,[null,[[-1,2127,"\n"],[1,2128,"i"],[1,2282,"\n"],[-1,2356,"\n"],[1,2368,"\n"],[-1,2373,"\n"],[-1,4224,")"],[1,4225," "],[1,4232,")"],[-1,4236,"\n"],[1,4304,"\n"],[-1,4309,"\n"],[1,4312,"r"],[-1,4329,"\n"],[1,4330,"*"],[-1,4337,"\n"],[1,4710,"\n"],[1,4837,"\n"]],[2127,2127],[4838,4838]]],[1536500929087,[null,[[1,2127,"\n"],[-1,2127,"i"],[-1,2282,"\n"],[1,2357,"\n"],[-1,2368,"\n"],[1,2374,"\n"],[1,4224,")"],[-1,4224," "],[-1,4232,")"],[1,4237,"\n"],[-1,4304,"\n"],[1,4310,"\n"],[-1,4312,"r"],[1,4330,"\n"],[-1,4330,"*"],[1,4338,"\n"],[-1,4710,"\n"],[-1,4838,"\n"]],[4838,4838],[2127,2127]]],[1536500895827,["gjx16@GJXAIOU",[[-1,4506,"i"]],[4507,4507],[4506,4506]]],[1536500896361,["gjx16@GJXAIOU",[[1,4506,"j"]],[4506,4506],[4507,4507]]],[1536500899082,["gjx16@GJXAIOU",[[-1,4518,"i"]],[4519,4519],[4518,4518]]],[1536500899675,["gjx16@GJXAIOU",[[1,4518,"j"]],[4518,4518],[4519,4519]]],[1536500911129,["gjx16@GJXAIOU",[[1,4544,"  "]],[4543,4543],[4545,4545]]],[1536500912296,["gjx16@GJXAIOU",[[1,4565,"  "]],[4564,4564],[4566,4566]]],[1536500912845,["gjx16@GJXAIOU",[[1,4593,"  "]],[4592,4592],[4594,4594]]],[1536500914098,["gjx16@GJXAIOU",[[1,4628,"  "]],[4628,4628],[4630,4630]]],[1536500989094,[null,[[-1,2127,"\n"],[1,2128,"i"],[1,2282,"\n"],[-1,2356,"\n"],[1,2368,"\n"],[-1,2373,"\n"],[-1,4224,")"],[1,4225," "],[1,4232,")"],[-1,4236,"\n"],[1,4304,"\n"],[-1,4309,"\n"],[1,4312,"r"],[-1,4329,"\n"],[1,4330,"*"],[-1,4337,"\n"],[1,4718,"\n"],[1,4845,"\n"]],[2127,2127],[4846,4846]]],[1536500989094,[null,[[1,2127,"\n"],[-1,2127,"i"],[-1,2282,"\n"],[1,2357,"\n"],[-1,2368,"\n"],[1,2374,"\n"],[1,4224,")"],[-1,4224," "],[-1,4232,")"],[1,4237,"\n"],[-1,4304,"\n"],[1,4310,"\n"],[-1,4312,"r"],[1,4330,"\n"],[-1,4330,"*"],[1,4338,"\n"],[-1,4718,"\n"],[-1,4846,"\n"]],[4846,4846],[2127,2127]]],[1536500943021,["gjx16@GJXAIOU",[[-1,4579,"i"]],[4580,4580],[4579,4579]]],[1536500943782,["gjx16@GJXAIOU",[[1,4579,"j"]],[4579,4579],[4580,4580]]],[1536500965308,["gjx16@GJXAIOU",[[-1,4579,"j"]],[4580,4580],[4579,4579]]],[1536500967865,["gjx16@GJXAIOU",[[1,4579,"i"]],[4579,4579],[4580,4580]]],[1536500969755,["gjx16@GJXAIOU",[[-1,4628,"  "]],[4630,4630],[4628,4628]]],[1536500975254,["gjx16@GJXAIOU",[[1,4628,"  "]],[4626,4626],[4628,4628]]],[1536500978049,["gjx16@GJXAIOU",[[-1,4579,"i"]],[4580,4580],[4579,4579]]],[1536500978576,["gjx16@GJXAIOU",[[1,4579,"j"]],[4579,4579],[4580,4580]]],[1536500980607,["gjx16@GJXAIOU",[[-1,4601,"i"]],[4602,4602],[4601,4601]]],[1536500980964,["gjx16@GJXAIOU",[[1,4601,"j"]],[4601,4601],[4602,4602]]],[1536500983566,["gjx16@GJXAIOU",[[-1,4636,"i"]],[4637,4637],[4636,4636]]],[1536500983943,["gjx16@GJXAIOU",[[1,4636,"j"]],[4636,4636],[4637,4637]]],[1536500986979,["gjx16@GJXAIOU",[[-1,4612,"i"]],[4613,4613],[4612,4612]]],[1536500987495,["gjx16@GJXAIOU",[[1,4612,"j"]],[4612,4612],[4613,4613]]],[1536501049088,[null,[[-1,2127,"\n"],[1,2128,"i"],[1,2282,"\n"],[-1,2356,"\n"],[1,2368,"\n"],[-1,2373,"\n"],[-1,4224,")"],[1,4225," "],[1,4232,")"],[-1,4236,"\n"],[1,4304,"\n"],[-1,4309,"\n"],[1,4312,"r"],[-1,4329,"\n"],[1,4330,"*"],[-1,4337,"\n"],[1,4718,"\n"],[1,4845,"\n"]],[2127,2127],[4846,4846]]],[1536501049088,[null,[[1,2127,"\n"],[-1,2127,"i"],[-1,2282,"\n"],[1,2357,"\n"],[-1,2368,"\n"],[1,2374,"\n"],[1,4224,")"],[-1,4224," "],[-1,4232,")"],[1,4237,"\n"],[-1,4304,"\n"],[1,4310,"\n"],[-1,4312,"r"],[1,4330,"\n"],[-1,4330,"*"],[1,4338,"\n"],[-1,4718,"\n"],[-1,4846,"\n"]],[4846,4846],[2127,2127]]],[1536501001211,["gjx16@GJXAIOU",[[1,4702,"  \n  "]],[4699,4699],[4704,4704]]],[1536501003094,["gjx16@GJXAIOU",[[1,4704,"{}"]],[4704,4704],[4706,4706]]],[1536501004970,["gjx16@GJXAIOU",[[1,4705,"\n    \n    "]],[4705,4705],[4715,4715]]],[1536501013850,["gjx16@GJXAIOU",[[1,4710,"printf();"]],[4710,4710],[4719,4719]]],[1536501018519,["gjx16@GJXAIOU",[[1,4717,"\n"]],[4717,4717],[4718,4718]]],[1536501018703,["gjx16@GJXAIOU",[[1,4718,"\n"]],[4718,4718],[4719,4719]]],[1536501019929,["gjx16@GJXAIOU",[[-1,4718,"\n"]],[4719,4719],[4718,4718]]],[1536501020442,["gjx16@GJXAIOU",[[-1,4717,"\n"]],[4718,4718],[4717,4717]]],[1536501023473,["gjx16@GJXAIOU",[[1,4717,"\"\""]],[4717,4717],[4719,4719]]],[1536501043141,["gjx16@GJXAIOU",[[1,4718,"array[%d] = %d\\n"]],[4718,4718],[4734,4734]]],[1536501048472,["gjx16@GJXAIOU",[[1,4735,","]],[4735,4735],[4736,4736]]],[1536501109094,[null,[[-1,2127,"\n"],[1,2128,"i"],[1,2282,"\n"],[-1,2356,"\n"],[1,2368,"\n"],[-1,2373,"\n"],[-1,4224,")"],[1,4225," "],[1,4232,")"],[-1,4236,"\n"],[1,4304,"\n"],[-1,4309,"\n"],[1,4312,"r"],[-1,4329,"\n"],[1,4330,"*"],[-1,4337,"\n"],[1,4763,"\n"],[1,4890,"\n"]],[2127,2127],[4891,4891]]],[1536501109094,[null,[[1,2127,"\n"],[-1,2127,"i"],[-1,2282,"\n"],[1,2357,"\n"],[-1,2368,"\n"],[1,2374,"\n"],[1,4224,")"],[-1,4224," "],[-1,4232,")"],[1,4237,"\n"],[-1,4304,"\n"],[1,4310,"\n"],[-1,4312,"r"],[1,4330,"\n"],[-1,4330,"*"],[1,4338,"\n"],[-1,4763,"\n"],[-1,4891,"\n"]],[4891,4891],[2127,2127]]],[1536501057052,["gjx16@GJXAIOU",[[1,4736,"i,array[i]"]],[4736,4736],[4746,4746]]],[1536501063976,["gjx16@GJXAIOU",[[-1,4774,"![冒泡1]($resource/%E5%86%92%E6%B3%A11.png)\n\n![冒泡2]($resource/%E5%86%92%E6%B3%A12.png)\n\n![冒泡3]($resource/%E5%86%92%E6%B3%A13.png)\n\n\n"]],[4773,4903],[4773,4773]]],[1536501074657,["gjx16@GJXAIOU",[[1,8,"\n"]],[6,6],[7,7]]],[1536501078692,["gjx16@GJXAIOU",[[1,0,"\n"]],[0,0],[1,1]]],[1536501083573,["gjx16@GJXAIOU",[[1,0,"-"]],[0,0],[1,1]]],[1536501083798,["gjx16@GJXAIOU",[[1,0,"-"]],[1,1],[2,2]]],[1536501084087,["gjx16@GJXAIOU",[[1,2,"-"]],[2,2],[3,3]]],[1536501084117,["gjx16@GJXAIOU",[[1,4,"\n---\n\n"]],[3,3],[4,4]]],[1536501097952,["gjx16@GJXAIOU",[[1,4,"date:2018-9-9"]],[4,4],[17,17]]],[1536501169099,[null,[[-1,2151,"\n"],[1,2152,"i"],[1,2306,"\n"],[-1,2380,"\n"],[1,2392,"\n"],[-1,2397,"\n"],[-1,4248,")"],[1,4249," "],[1,4256,")"],[-1,4260,"\n"],[1,4328,"\n"],[-1,4333,"\n"],[1,4336,"r"],[-1,4353,"\n"],[1,4354,"*"],[-1,4361,"\n"],[-1,4797,"!"],[1,4798,"\n\n\n"]],[2151,2151],[4801,4801]]],[1536501169099,[null,[[1,2151,"\n"],[-1,2151,"i"],[-1,2306,"\n"],[1,2381,"\n"],[-1,2392,"\n"],[1,2398,"\n"],[1,4248,")"],[-1,4248," "],[-1,4256,")"],[1,4261,"\n"],[-1,4328,"\n"],[1,4334,"\n"],[-1,4336,"r"],[1,4354,"\n"],[-1,4354,"*"],[1,4362,"\n"],[1,4797,"!"],[-1,4797,"\n\n\n"]],[4801,4801],[2151,2151]]],[1536501122531,["gjx16@GJXAIOU",[[1,9,"'"]],[9,9],[10,10]]],[1536501125489,["gjx16@GJXAIOU",[[1,18,"'"]],[18,18],[19,19]]],[1536501144658,["gjx16@GJXAIOU",[[1,37,"yi "]],[37,37],[40,40]]],[1536501146328,["gjx16@GJXAIOU",[[-1,37,"yi "]],[40,40],[37,37]]],[1536501147445,["gjx16@GJXAIOU",[[1,37,"yi "]],[37,37],[40,40]]],[1536501148611,["gjx16@GJXAIOU",[[-1,37,"yi "]],[40,40],[37,37]]],[1536501149886,["gjx16@GJXAIOU",[[1,38,"一"]],[37,37],[38,38]]],[1536501151909,["gjx16@GJXAIOU",[[1,38,"、"]],[38,38],[39,39]]],[1536501156722,["gjx16@GJXAIOU",[[1,49,"（）"]],[49,49],[51,51]]],[1536501159317,["gjx16@GJXAIOU",[[1,50,"一"]],[50,50],[51,51]]],[1536501229098,[null,[[-1,2158,"\n"],[1,2159,"i"],[1,2313,"\n"],[-1,2387,"\n"],[1,2399,"\n"],[-1,2404,"\n"],[-1,4255,")"],[1,4256," "],[1,4263,")"],[-1,4267,"\n"],[1,4335,"\n"],[-1,4340,"\n"],[1,4343,"r"],[-1,4360,"\n"],[1,4361,"*"],[-1,4368,"\n"],[-1,4804,"!"],[1,4805,"\n\n\n"]],[2158,2158],[4808,4808]]],[1536501229098,[null,[[1,2158,"\n"],[-1,2158,"i"],[-1,2313,"\n"],[1,2388,"\n"],[-1,2399,"\n"],[1,2405,"\n"],[1,4255,")"],[-1,4255," "],[-1,4263,")"],[1,4268,"\n"],[-1,4335,"\n"],[1,4341,"\n"],[-1,4343,"r"],[1,4361,"\n"],[-1,4361,"*"],[1,4369,"\n"],[1,4804,"!"],[-1,4804,"\n\n\n"]],[4808,4808],[2158,2158]]],[1536501171004,["gjx16@GJXAIOU",[[-1,45,"### （一）定义数组"]],[45,56],[45,45]]],[1536501172943,["gjx16@GJXAIOU",[[1,45,"****"]],[45,45],[47,47]]],[1536501175078,["gjx16@GJXAIOU",[[1,47,"1."]],[47,47],[49,49]]],[1536501182065,["gjx16@GJXAIOU",[[-1,47,"1."]],[49,49],[47,47]]],[1536501183972,["gjx16@GJXAIOU",[[1,47,"1."]],[47,47],[49,49]]],[1536501184505,["gjx16@GJXAIOU",[[-1,47,"1."]],[49,49],[47,47]]],[1536501185017,["gjx16@GJXAIOU",[[-1,45,"****"]],[47,47],[45,45]]],[1536501185946,["gjx16@GJXAIOU",[[1,45,"### （一）定义数组"]],[45,45],[45,56]]],[1536501187628,["gjx16@GJXAIOU",[[-1,45,"### （一）定义数组"]],[45,56],[45,45]]],[1536501189159,["gjx16@GJXAIOU",[[1,45,"****"]],[45,45],[47,47]]],[1536501194344,["gjx16@GJXAIOU",[[1,47,"定义数组"]],[47,47],[51,51]]],[1536501198196,["gjx16@GJXAIOU",[[1,47,"1."]],[47,47],[49,49]]],[1536501216842,["gjx16@GJXAIOU",[[1,264,"\n  "]],[261,261],[264,264]]],[1536501289093,[null,[[-1,2160,"\n"],[1,2161,"i"],[1,2315,"\n"],[-1,2389,"\n"],[1,2401,"\n"],[-1,2406,"\n"],[-1,4257,")"],[1,4258," "],[1,4265,")"],[-1,4269,"\n"],[1,4337,"\n"],[-1,4342,"\n"],[1,4345,"r"],[-1,4362,"\n"],[1,4363,"*"],[-1,4370,"\n"],[-1,4806,"!"],[1,4807,"\n\n\n"]],[2160,2160],[4810,4810]]],[1536501289093,[null,[[1,2160,"\n"],[-1,2160,"i"],[-1,2315,"\n"],[1,2390,"\n"],[-1,2401,"\n"],[1,2407,"\n"],[1,4257,")"],[-1,4257," "],[-1,4265,")"],[1,4270,"\n"],[-1,4337,"\n"],[1,4343,"\n"],[-1,4345,"r"],[1,4363,"\n"],[-1,4363,"*"],[1,4371,"\n"],[1,4806,"!"],[-1,4806,"\n\n\n"]],[4810,4810],[2160,2160]]],[1536501276293,["gjx16@GJXAIOU",[[1,323,"2."]],[323,323],[325,325]]],[1536501349100,[null,[[-1,2162,"\n"],[1,2163,"i"],[1,2317,"\n"],[-1,2391,"\n"],[1,2403,"\n"],[-1,2408,"\n"],[-1,4259,")"],[1,4260," "],[1,4267,")"],[-1,4271,"\n"],[1,4339,"\n"],[-1,4344,"\n"],[1,4347,"r"],[-1,4364,"\n"],[1,4365,"*"],[-1,4372,"\n"],[-1,4808,"!"],[1,4809,"\n\n\n"]],[2162,2162],[4812,4812]]],[1536501349100,[null,[[1,2162,"\n"],[-1,2162,"i"],[-1,2317,"\n"],[1,2392,"\n"],[-1,2403,"\n"],[1,2409,"\n"],[1,4259,")"],[-1,4259," "],[-1,4267,")"],[1,4272,"\n"],[-1,4339,"\n"],[1,4345,"\n"],[-1,4347,"r"],[1,4365,"\n"],[-1,4365,"*"],[1,4373,"\n"],[1,4808,"!"],[-1,4808,"\n\n\n"]],[4812,4812],[2162,2162]]],[1536501289334,["gjx16@GJXAIOU",[[1,341,"\n"]],[340,340],[341,341]]],[1536501297048,["gjx16@GJXAIOU",[[1,341,"int main()"]],[341,341],[351,351]]],[1536501301035,["gjx16@GJXAIOU",[[1,352,"\n"]],[351,351],[352,352]]],[1536501302724,["gjx16@GJXAIOU",[[1,352,"{"]],[352,352],[353,353]]],[1536501307887,["gjx16@GJXAIOU",[[1,354,"  "]],[354,354],[356,356]]],[1536501309958,["gjx16@GJXAIOU",[[1,363,"  "]],[363,363],[365,365]]],[1536501311971,["gjx16@GJXAIOU",[[1,387,"  "]],[387,387],[389,389]]],[1536501315426,["gjx16@GJXAIOU",[[-1,391,"\n"]],[391,391],[390,390]]],[1536501318133,["gjx16@GJXAIOU",[[1,391,"    "]],[391,391],[395,395]]],[1536501319782,["gjx16@GJXAIOU",[[-1,413,"\n"]],[413,413],[412,412]]],[1536501322359,["gjx16@GJXAIOU",[[1,413,"  "]],[413,413],[415,415]]],[1536501324236,["gjx16@GJXAIOU",[[-1,414," "]],[415,415],[414,414]]],[1536501325563,["gjx16@GJXAIOU",[[1,414,"  "]],[414,414],[416,416]]],[1536501327174,["gjx16@GJXAIOU",[[-1,415," "]],[416,416],[415,415]]],[1536501330201,["gjx16@GJXAIOU",[[1,417,"  \n"]],[416,416],[419,419]]],[1536501334480,["gjx16@GJXAIOU",[[1,419,"return;"]],[419,419],[426,426]]],[1536501335076,["gjx16@GJXAIOU",[[-1,425,";"]],[426,426],[425,425]]],[1536501336325,["gjx16@GJXAIOU",[[1,425," o;"]],[425,425],[428,428]]],[1536501337107,["gjx16@GJXAIOU",[[-1,426,"o;"]],[428,428],[426,426]]],[1536501338896,["gjx16@GJXAIOU",[[1,426,"0;"]],[426,426],[428,428]]],[1536501339577,["gjx16@GJXAIOU",[[1,429,"  \n"]],[428,428],[431,431]]],[1536501341782,["gjx16@GJXAIOU",[[-1,430," "]],[431,431],[430,430]]],[1536501343006,["gjx16@GJXAIOU",[[1,430,"}"]],[430,430],[431,431]]],[1536501346187,["gjx16@GJXAIOU",[[-1,429," "]],[430,430],[429,429]]],[1536501829110,[null,[[-1,2199,"\n"],[1,2200,"i"],[1,2354,"\n"],[-1,2428,"\n"],[1,2440,"\n"],[-1,2445,"\n"],[-1,4296,")"],[1,4297," "],[1,4304,")"],[-1,4308,"\n"],[1,4376,"\n"],[-1,4381,"\n"],[1,4384,"r"],[-1,4401,"\n"],[1,4402,"*"],[-1,4409,"\n"],[-1,4845,"!"],[1,4846,"\n\n\n"]],[2199,2199],[4849,4849]]],[1536501829110,[null,[[1,2199,"\n"],[-1,2199,"i"],[-1,2354,"\n"],[1,2429,"\n"],[-1,2440,"\n"],[1,2446,"\n"],[1,4296,")"],[-1,4296," "],[-1,4304,")"],[1,4309,"\n"],[-1,4376,"\n"],[1,4382,"\n"],[-1,4384,"r"],[1,4402,"\n"],[-1,4402,"*"],[1,4410,"\n"],[1,4845,"!"],[-1,4845,"\n\n\n"]],[4849,4849],[2199,2199]]],[1536501803737,["gjx16@GJXAIOU",[[-1,410,"//"]],[412,412],[410,410]]],[1536501811519,["gjx16@GJXAIOU",[[-1,466,"\n"]],[466,466],[465,465]]],[1536501826848,["gjx16@GJXAIOU",[[1,794,"  return 0;"]],[794,794],[805,805]]],[1536501889111,[null,[[-1,2207,"\n"],[1,2208,"i"],[1,2362,"\n"],[-1,2436,"\n"],[1,2448,"\n"],[-1,2453,"\n"],[-1,4304,")"],[1,4305," "],[1,4312,")"],[-1,4316,"\n"],[1,4384,"\n"],[-1,4389,"\n"],[1,4392,"r"],[-1,4409,"\n"],[1,4410,"*"],[-1,4417,"\n"],[-1,4853,"!"],[1,4854,"\n\n\n"]],[2207,2207],[4857,4857]]],[1536501889111,[null,[[1,2207,"\n"],[-1,2207,"i"],[-1,2362,"\n"],[1,2437,"\n"],[-1,2448,"\n"],[1,2454,"\n"],[1,4304,")"],[-1,4304," "],[-1,4312,")"],[1,4317,"\n"],[-1,4384,"\n"],[1,4390,"\n"],[-1,4392,"r"],[1,4410,"\n"],[-1,4410,"*"],[1,4418,"\n"],[1,4853,"!"],[-1,4853,"\n\n\n"]],[4857,4857],[2207,2207]]],[1536501843951,["gjx16@GJXAIOU",[[-1,613," 0"]],[615,615],[613,613]]],[1536501845124,["gjx16@GJXAIOU",[[1,613,"0"]],[613,613],[614,614]]],[1536501859272,["gjx16@GJXAIOU",[[-1,700," "]],[701,701],[700,700]]],[1536501869791,["gjx16@GJXAIOU",[[1,478,"()"]],[478,478],[480,480]]],[1536501871293,["gjx16@GJXAIOU",[[1,479,"a"]],[479,479],[480,480]]],[1536501871870,["gjx16@GJXAIOU",[[-1,479,"a"]],[480,480],[479,479]]],[1536501876070,["gjx16@GJXAIOU",[[1,479,"挨个渎职"]],[479,479],[483,483]]],[1536501876879,["gjx16@GJXAIOU",[[-1,481,"渎职"]],[483,483],[481,481]]],[1536501888008,["gjx16@GJXAIOU",[[1,481,"赋值，部分赋值，统一赋值"]],[481,481],[493,493]]],[1536501949112,[null,[[-1,2221,"\n"],[1,2222,"i"],[1,2376,"\n"],[-1,2450,"\n"],[1,2462,"\n"],[-1,2467,"\n"],[-1,4318,")"],[1,4319," "],[1,4326,")"],[-1,4330,"\n"],[1,4398,"\n"],[-1,4403,"\n"],[1,4406,"r"],[-1,4423,"\n"],[1,4424,"*"],[-1,4431,"\n"],[-1,4867,"!"],[1,4868,"\n\n\n"]],[2221,2221],[4871,4871]]],[1536501949112,[null,[[1,2221,"\n"],[-1,2221,"i"],[-1,2376,"\n"],[1,2451,"\n"],[-1,2462,"\n"],[1,2468,"\n"],[1,4318,")"],[-1,4318," "],[-1,4326,")"],[1,4331,"\n"],[-1,4398,"\n"],[1,4404,"\n"],[-1,4406,"r"],[1,4424,"\n"],[-1,4424,"*"],[1,4432,"\n"],[1,4867,"!"],[-1,4867,"\n\n\n"]],[4871,4871],[2221,2221]]],[1536501910756,["gjx16@GJXAIOU",[[1,784," = %d"]],[784,784],[789,789]]],[1536502069115,[null,[[-1,2226,"\n"],[1,2227,"i"],[1,2381,"\n"],[-1,2455,"\n"],[1,2467,"\n"],[-1,2472,"\n"],[-1,4323,")"],[1,4324," "],[1,4331,")"],[-1,4335,"\n"],[1,4403,"\n"],[-1,4408,"\n"],[1,4411,"r"],[-1,4428,"\n"],[1,4429,"*"],[-1,4436,"\n"],[-1,4872,"!"],[1,4873,"\n\n\n"]],[2226,2226],[4876,4876]]],[1536502069115,[null,[[1,2226,"\n"],[-1,2226,"i"],[-1,2381,"\n"],[1,2456,"\n"],[-1,2467,"\n"],[1,2473,"\n"],[1,4323,")"],[-1,4323," "],[-1,4331,")"],[1,4336,"\n"],[-1,4403,"\n"],[1,4409,"\n"],[-1,4411,"r"],[1,4429,"\n"],[-1,4429,"*"],[1,4437,"\n"],[1,4872,"!"],[-1,4872,"\n\n\n"]],[4876,4876],[2226,2226]]],[1536502033790,["gjx16@GJXAIOU",[[1,436,"3."]],[436,436],[438,438]]],[1536502038331,["gjx16@GJXAIOU",[[1,837,"40"]],[837,837],[839,839]]],[1536502039525,["gjx16@GJXAIOU",[[-1,838,"0"]],[839,839],[838,838]]],[1536502039993,["gjx16@GJXAIOU",[[1,838,"."]],[838,838],[839,839]]],[1536502045095,["gjx16@GJXAIOU",[[1,1070,"5."]],[1070,1070],[1072,1072]]],[1536502053027,["gjx16@GJXAIOU",[[1,834,"----"]],[834,834],[838,838]]],[1536502056376,["gjx16@GJXAIOU",[[1,839,"\n"]],[838,838],[839,839]]],[1536502058229,["gjx16@GJXAIOU",[[1,834,"\n"]],[834,834],[835,835]]],[1536502066555,["gjx16@GJXAIOU",[[1,839,"9.9"]],[839,839],[842,842]]],[1536502068674,["gjx16@GJXAIOU",[[1,839," "]],[839,839],[840,840]]],[1536502129118,[null,[[-1,2242,"\n"],[1,2243,"i"],[1,2397,"\n"],[-1,2471,"\n"],[1,2483,"\n"],[-1,2488,"\n"],[-1,4339,")"],[1,4340," "],[1,4347,")"],[-1,4351,"\n"],[1,4419,"\n"],[-1,4424,"\n"],[1,4427,"r"],[-1,4444,"\n"],[1,4445,"*"],[-1,4452,"\n"],[-1,4888,"!"],[1,4889,"\n\n\n"]],[2242,2242],[4892,4892]]],[1536502129118,[null,[[1,2242,"\n"],[-1,2242,"i"],[-1,2397,"\n"],[1,2472,"\n"],[-1,2483,"\n"],[1,2489,"\n"],[1,4339,")"],[-1,4339," "],[-1,4347,")"],[1,4352,"\n"],[-1,4419,"\n"],[1,4425,"\n"],[-1,4427,"r"],[1,4445,"\n"],[-1,4445,"*"],[1,4453,"\n"],[1,4888,"!"],[-1,4888,"\n\n\n"]],[4892,4892],[2242,2242]]],[1536502071760,["gjx16@GJXAIOU",[[-1,839," 9.9"]],[843,843],[839,839]]],[1536502078511,["gjx16@GJXAIOU",[[1,1400,"6."]],[1400,1400],[1402,1402]]],[1536502082312,["gjx16@GJXAIOU",[[1,1610,"7."]],[1610,1610],[1612,1612]]],[1536502086247,["gjx16@GJXAIOU",[[1,1933,"8."]],[1933,1933],[1935,1935]]],[1536502094095,["gjx16@GJXAIOU",[[1,2495,"9."]],[2495,2495],[2497,2497]]],[1536502098488,["gjx16@GJXAIOU",[[1,2606,"10."]],[2606,2606],[2609,2609]]],[1536502102843,["gjx16@GJXAIOU",[[1,2887,"11."]],[2887,2887],[2890,2890]]],[1536502114536,["gjx16@GJXAIOU",[[-1,3163,"## 二维数组的定义"],[1,3173,"*"]],[3163,3163],[3164,3164]]],[1536502114713,["gjx16@GJXAIOU",[[1,3164,"***"]],[3164,3164],[3165,3165]]],[1536502116766,["gjx16@GJXAIOU",[[1,3165,"Erwin"]],[3165,3165],[3170,3170]]],[1536502117955,["gjx16@GJXAIOU",[[-1,3165,"Erwin"]],[3170,3170],[3165,3165]]],[1536502123737,["gjx16@GJXAIOU",[[1,3165,"二维数组的定义"]],[3165,3165],[3172,3172]]],[1536502127009,["gjx16@GJXAIOU",[[1,3165,"1."]],[3165,3165],[3167,3167]]],[1536502148493,[null,[[-1,2244,"\n"],[1,2245,"i"],[1,2399,"\n"],[-1,2473,"\n"],[1,2485,"\n"],[-1,2490,"\n"],[-1,4352,")"],[1,4353," "],[1,4360,")"],[-1,4364,"\n"],[1,4432,"\n"],[-1,4437,"\n"],[1,4440,"r"],[-1,4457,"\n"],[1,4458,"*"],[-1,4465,"\n"],[-1,4901,"!"],[1,4902,"\n\n\n"]],[2244,2244],[4905,4905]]],[1536502148493,[null,[[1,2244,"\n"],[-1,2244,"i"],[-1,2399,"\n"],[1,2474,"\n"],[-1,2485,"\n"],[1,2491,"\n"],[1,4352,")"],[-1,4352," "],[-1,4360,")"],[1,4365,"\n"],[-1,4432,"\n"],[1,4438,"\n"],[-1,4440,"r"],[1,4458,"\n"],[-1,4458,"*"],[1,4466,"\n"],[1,4901,"!"],[-1,4901,"\n\n\n"]],[4905,4905],[2244,2244]]],[1536502130791,["gjx16@GJXAIOU",[[1,3457,"2."]],[3457,3457],[3459,3459]]],[1536502133561,["gjx16@GJXAIOU",[[1,3696,"3."]],[3696,3696],[3698,3698]]],[1536502137316,["gjx16@GJXAIOU",[[1,3924,"4."]],[3924,3924],[3926,3926]]],[1536502141863,["gjx16@GJXAIOU",[[1,4466,"5."]],[4466,4466],[4468,4468]]]],null,"gjx16@GJXAIOU"],["d5e01757-2fa9-40dd-9f9e-17df323e0f9a",1536538134226,"---\ndate:'2018-9-9'\n---\n\n# day5\n\n\n## 一、一维数组\n\n**1.定义数组**\n\n```c\n#include<stdio.h>\n\nint main()\n{\n  int array[10];  //定义了一个数组，数组名为array，里面有十个元素,从0-9；\n\n  array[0] = 20;\n  array[9] = 100;\n\n  printf(\"%d\\n\",array[0]);\n  printf(\"%d\\n\",sizeof(array));//一个整数四个字节，所以这里显示是40\n  \n  return 0;\n}\n```\n\n数组本质就是：在内存中就是一个连续的空间；而且每个元素的类型是一样的；\n\n**2.连续的赋值操作**\n\n```c\nint main()\n{\n  int i;\n  for(i = 0;i < 10;i++)\n  {\n    array[i] = i;  \n  }\n  return 0;\n}\n```\n\n**3.数组的初始化**\n\n\n```c\nint main()\n{\n\n/*数组初始化的三种方式(挨个赋值，部分赋值，统一赋值)\n  int array[10] = {1,1,3,5,5,6,9,6,8,5};//全部进行赋值\n  \n  int array[10] = {100,2,3,3,4,9};//定义一个数组的同时进行赋值初始化,这是部分初始化\n \n  int array[10] = {0};  //将所有元素置为0\n  //另一种置为0 的方法\n  int i;\n  for(i = 0; i < 10; i++)\n {\n   array[i] = 0;\n }\n\n*/\n\n  int i;\n  for(i = 0;i < 10;i++)\n  {\n  \n    printf(\"array[%d] = %d\\n\",i,array[i]);\n  \n  }\n  return 0;\n}\n\n```\n\n----\n\n**4.求数组中最大元素的值**\n```c\nint main()\n{\n  int array[5] = {2,3,5,6,7};\n  int max = array[0];\n  int i;\n  for(i = 1;i < 5;i++) //想找最大的先遍历一遍\n  {\n    if(max < array[i])\n      max = array[i];\n  }\n\n  printf(\"max = %d\\n\",max);\n\nreturn 0;\n\n}\n```\n\n**5.求数组中的最小值，并求出最小值的编号**\n```c\nint main()\n{\n  int array[5] = {2,3,5,6,7};\n  int min = array[0];\n  int index = 0;//在没有遍历数组之前，默认数组的第0号元素就是最小的元素；\n  int i;\n  for(i = 1;i < 5;i++) //想找最小的先遍历一遍\n  {\n    if(min > array[i])\n      index = i;\n      min = array[i];\n  }\n\n  printf(\"min = %d,index = %d\\n\",min,index);\n\nreturn 0;\n\n}\n\n\n```\n\n**6.求数组元素和**\n\n```c\n\nint main()\n{\n  int array[10] = {1,2,3,4,5,6,7,8,9,0};\n  int i;\n  int sum = 0;\n  for(i = 0; i < 10; i++)\n  {\n    sum = sum + array[i];\n \n  }\n\n  printf(\"sum = %d\\n\",sum);\n\n  return 0;\n\n}\n```\n\n**7.打印数组中大于平均值的所有的值与其下标**\n这个程序未确定\n```c\n\nint main()\n{\n  int array[10] = {1 2 3 4 5 6 7 8 9 0};\n  int i;\n  int aver;\n  int sum = 0;\n  int index = 0;\n  for(i = 0; i < 10;i++)\n  {\n    sum += array[i];\n  }\n  aver = sum /10;\n  if(array[i] >aver)\n  {\n    index = i;\n    printf(\"%d\\n\",array);\n    printf(\"%d\\n\",index);\n  }\n\n}\n```\n\n**8.数组逆置**\n\n```c\nint main()\n{\n  int array[10] = {1,2,3,4,5,6,7,8,9,0};\n\n//部分交换\n  int tmp = array[0];\n  array[0] = array[1];\n  array[1] = tmp;\n\n\n//前半部分与后半部分交换（法一)\n  int i;\n  for(i = 0; i <= 4; i++)\n  {\n    int tmp = array[i];\n    array[i] = array[9-i];\n    array[9-i] = tmp;\n  }\n\n//方法二\n   int min = 0;//数组的最小下标\n   int max = 9;//数组的最大下标\n   while(min <max)\n   {\n     int tmp = array[min];\n     array[min] = array[max];\n     array[max] =tmp;\n     min++;\n     max--;\n   }\n\n\n  for(i = 0;i < 10;i++)\n  {\n    printf(\"array[%d]=%d\\n\",i,array[i]);\n\n  }\n  return 0;\n}\n```\n\n**9.水仙花数**\n```c\nint main()\n{\n  int i;\n\n\n\n\n}\n\n```\n![水仙花数]($resource/%E6%B0%B4%E4%BB%99%E8%8A%B1%E6%95%B0.png)\n\n\n**10.求一个数组中所有奇数元素之和**\n```c\n\nint main()\n{\n  int array[10] = {1,3,4,7,8,0,9};\n  int i;\n  int sum = 0;\n  for(i = 0; i < 10;i++)\n  {\n    if(array[i] % 2 != 0)\n    //if(array[i]% 2 == 1)\n    {\n      sum += array[i];\n    }\n    printf(\"array[%d] = \\n\",i,array[i]);\n  }\n  return 0;\n}\n```\n\n**11.求3-100中的素数**\n注：素数：除了1和本身均不能被任何数整除；\n```c\nint main()\n{\n  int i;\n  int j;\n  for(i = 3;i < 101;i++)\n  {\n    for(j < 2;j < i;j++)\n   {\n     if(i%j != 0;\n   }   \n    printf(\"%d\\n\",i);\n  }\n  return 0;\n}\n\n```\n![素数]($resource/%E7%B4%A0%E6%95%B0.png)\n\n\n\n\n\n\n\n\n\n\n\n\n\n# 二维数组\n可以近似理解为表格；\n\n**1.二维数组的定义**\n\n```c\n#include<stdio.h>\n\nint main()\n{\n\n//先定义后赋值\n  int array[2][3];//定义了一个二维数组，相当于有两个array[3] \n  array[0][0] = 0;//给第0行第0列赋值\n  array[1][2] = 0;//给第1行第2列赋值\n\n//定义的同时进行赋值\n  int a[3][4] = {{1,2,3,4,},{5,6,7,8},{9,10,11,12}};\n  int a[3][4] = {0};//将二维数组中所有值全部置0\n  \n  return 0;\n}\n```\n\n**2.数组大小**\n\n```c\nint main()\n{\n  int array[2][3] = {{1,2,3},{4,5,6}};\n  printf(\"%d\\n\",sizeof(array));//整个数组的大小为24\n  printf(\"%d\\n\",sizeof(array[0])); //相当于第0行的大小，为12\n  printf(\"%d\\n\",sizeof(array[0][0]));//相当于第0行第0列元素的大小，为4\n return 0;\n}\n```\n\n**3.数组的值输出**\n\n```c\nint main()\n{\n  int array[2][3] = {{1,2,3},{4,5,6}};\n\n  int i,j;\n  for(i = 0; i < 2;i++)\n  {\n    for(j = 0; j < 3;j++)\n    {\n    printf(\"array[%d][%d]= %d\\n\",i,j,array[i][j]);\n   \n    }\n  }\n  return 0;\n}\n```\n\n\n**4.求一个二维数组的每行每列的和**\n\n每行的和：\n```c\nint main()\n{\n  int array[3][5] = {{1,3,4,5,9},{4,9,5,0,8},{9,3,4,23,4}};\n  int i,j;\n  for(i = 0; i <3;i++)\n  {\n    int sum = 0;\n    for(j = 0;j < 5;j++)\n    {\n      sum += array[i][j];\n    }\n    printf(\"%d\\n\",sum);\n  }\n  return 0;\n}\n```\n\n每列的和：\n\n```c\nint main()\n{\n   int array[3][5] = {{1,3,4,5,9},{4,9,5,0,8},{9,3,4,23,4}};\n   int i,j;\n   for(j = 0; j < 5; j++);\n   {\n     int sum = 0;\n     for(i = 0; i < 3;i++)\n     {\n       sum +=array[i][j];\n     }\n   printf(\"%d\\n\",array[i][j]);\n   }\n  return 0;\n}\n```\n\n\n**5.冒泡排序**\n```c\nint main()\n{\n  int array[10] = {1,4,8,0,9,34,98,100,5,3};\n  int i;\n  int j;\n  for(i = 0;i < 10;i++)\n    {\n      for(j = 1; j < 10-i;j++)\n      {\n        if(array[j-1] >array[j])\n          {\n            int tmp;\n            tmp = array[j];\n            array[j] = array[j-1];\n            array[j-1] = tmp;\n          }\n      }\n    }\n    for(i = 0;i < 10;i++)\n    {\n    printf(\"array[%d] = %d\\n\",i,array[i]);\n    }\n  return 0;\n}\n```\n\n\n\n\n\n\n\n\n",[[1536538113614,["gjx16@GJXAIOU",[[1,858,"\n"]],[857,857],[858,858]]],[1536538113845,["gjx16@GJXAIOU",[[1,859,"\n"]],[858,858],[859,859]]],[1536538132801,["gjx16@GJXAIOU",[[1,859,"将数组中的第一个元素默认设置成最大的"]],[859,859],[877,877]]],[1536538143535,["gjx16@GJXAIOU",[[1,877,"元素，然后让哥哥元素"]],[877,877],[887,887]]],[1536538145480,["gjx16@GJXAIOU",[[-1,883,"哥哥元素"]],[887,887],[883,883]]],[1536538152472,["gjx16@GJXAIOU",[[1,883,"各个元素进行比较；"]],[883,883],[892,892]]],[1536538171854,["gjx16@GJXAIOU",[[1,20,"\n"]],[19,19],[20,20]]],[1536538189064,["gjx16@GJXAIOU",[[1,20,"nandian:数组的"]],[20,20],[31,31]]],[1536538190003,["gjx16@GJXAIOU",[[-1,28,"数组的"]],[31,31],[28,28]]],[1536538192405,["gjx16@GJXAIOU",[[1,28,"循环的"]],[28,28],[31,31]]],[1536538195908,["gjx16@GJXAIOU",[[1,31,"嵌套"]],[31,31],[33,33]]],[1536538201537,["gjx16@GJXAIOU",[[1,48,"\n"]],[45,45],[46,46]]],[1536538206967,["gjx16@GJXAIOU",[[1,46,"@toc"]],[46,46],[50,50]]],[1536538237751,["gjx16@GJXAIOU",[[1,1026,",ying"]],[1026,1026],[1031,1031]]],[1536538239142,["gjx16@GJXAIOU",[[-1,1027,"ying"]],[1031,1031],[1027,1027]]],[1536538306671,["gjx16@GJXAIOU",[[1,1027,"因为第一的元素默认设置成最大值，所以这里的循环从1开始；"]],[1027,1027],[1055,1055]]],[1536538407066,["gjx16@GJXAIOU",[[1,1298,"所以默认的地址也是0；"]],[1298,1298],[1309,1309]]],[1536538463957,["gjx16@GJXAIOU",[[-1,1628,"= sum + "]],[1636,1636],[1628,1628]]],[1536538467153,["gjx16@GJXAIOU",[[1,1628,"+= "]],[1628,1628],[1631,1631]]],[1536538481576,["gjx16@GJXAIOU",[[-1,1641," "]],[1642,1642],[1641,1641]]],[1536538481912,["gjx16@GJXAIOU",[[-1,1641,"\n"]],[1641,1641],[1640,1640]]],[1536538617883,["gjx16@GJXAIOU",[[-1,1897," aver = sum /10;\n  if(array[i] >aver)\n  {\n    index = i;\n    printf(\"%d\\n\",array);\n    printf(\"%d\\n\",index);\n  }\n"]],[1897,2010],[1897,1897]]],[1536538619864,["gjx16@GJXAIOU",[[1,1873,"\n  "]],[1870,1870],[1873,1873]]],[1536538622431,["gjx16@GJXAIOU",[[1,1873,"   aver = sum /10;\n  if(array[i] >aver)\n  {\n    index = i;\n    printf(\"%d\\n\",array);\n    printf(\"%d\\n\",index);\n  }\n"]],[1873,1873],[1988,1988]]],[1536538690757,["gjx16@GJXAIOU",[[-1,1992," sum += array[i];"]],[1992,2009],[1992,1992]]],[1536538693966,["gjx16@GJXAIOU",[[1,1936,"\n    "]],[1931,1931],[1936,1936]]],[1536538694577,["gjx16@GJXAIOU",[[1,1936," sum += array[i];"]],[1936,1936],[1953,1953]]],[1536538711101,["gjx16@GJXAIOU",[[-1,1936," "]],[1937,1937],[1936,1936]]],[1536538728991,["gjx16@GJXAIOU",[[1,1876,"\n     "]],[1876,1876],[1882,1882]]],[1536538750728,["gjx16@GJXAIOU",[[1,1876,"sum +=array[i];"]],[1876,1876],[1891,1891]]],[1536538781712,["gjx16@GJXAIOU",[[1,1897,"\n     "]],[1891,1891],[1897,1897]]],[1536538784193,["gjx16@GJXAIOU",[[-1,1895,"  "]],[1897,1897],[1895,1895]]],[1536538785434,["gjx16@GJXAIOU",[[1,1895,"}"]],[1895,1895],[1896,1896]]],[1536538787521,["gjx16@GJXAIOU",[[1,1900,"\n   "]],[1896,1896],[1900,1900]]],[1536538791576,["gjx16@GJXAIOU",[[1,1900,"for()"]],[1900,1900],[1905,1905]]],[1536538823233,["gjx16@GJXAIOU",[[1,1904,"i = 0;i<"]],[1904,1904],[1912,1912]]],[1536538823752,["gjx16@GJXAIOU",[[-1,1911,"<"]],[1912,1912],[1911,1911]]],[1536538831102,["gjx16@GJXAIOU",[[1,1911," < 10;i++"]],[1911,1911],[1920,1920]]],[1536538835694,["gjx16@GJXAIOU",[[-1,1899," "]],[1900,1900],[1899,1899]]],[1536538849955,["gjx16@GJXAIOU",[[-1,1923,"   aver = sum /10;"]],[1923,1941],[1923,1923]]],[1536538851621,["gjx16@GJXAIOU",[[1,1899," \n  "]],[1896,1896],[1900,1900]]],[1536538855865,["gjx16@GJXAIOU",[[1,1900,"   aver = sum /10;"]],[1900,1900],[1918,1918]]],[1536538862440,["gjx16@GJXAIOU",[[1,1945,"{"]],[1945,1945],[1946,1946]]],[1536538869497,["gjx16@GJXAIOU",[[1,2064,"}"]],[2064,2064],[2065,2065]]],[1536538872241,["gjx16@GJXAIOU",[[1,2064,"  "]],[2064,2064],[2066,2066]]],[1536538873895,["gjx16@GJXAIOU",[[1,1970,"  "]],[1970,1970],[1972,1972]]],[1536538874911,["gjx16@GJXAIOU",[[1,2064,"  "]],[2064,2064],[2066,2066]]],[1536538875812,["gjx16@GJXAIOU",[[1,1978,"  "]],[1978,1978],[1980,1980]]],[1536538876370,["gjx16@GJXAIOU",[[1,1995,"  "]],[1994,1994],[1996,1996]]],[1536538876964,["gjx16@GJXAIOU",[[1,2018,"  "]],[2017,2017],[2019,2019]]],[1536538877502,["gjx16@GJXAIOU",[[1,2046,"  "]],[2046,2046],[2048,2048]]],[1536538912394,["gjx16@GJXAIOU",[[-1,2084,"  }"]],[2087,2087],[2084,2084]]],[1536538912731,["gjx16@GJXAIOU",[[-1,2084,"\n"]],[2084,2084],[2083,2083]]],[1536538912944,["gjx16@GJXAIOU",[[-1,2082," "]],[2083,2083],[2082,2082]]],[1536538913559,["gjx16@GJXAIOU",[[-1,2080,"  "]],[2082,2082],[2080,2080]]],[1536538913752,["gjx16@GJXAIOU",[[-1,2080,"\n"]],[2080,2080],[2079,2079]]],[1536538914021,["gjx16@GJXAIOU",[[-1,2078,"}"]],[2079,2079],[2078,2078]]],[1536538916075,["gjx16@GJXAIOU",[[1,2078,"}"]],[2078,2078],[2079,2079]]],[1536538962741,["gjx16@GJXAIOU",[[-1,1991,"      sum += array[i];"]],[1996,2013],[1991,1991]]],[1536538963241,["gjx16@GJXAIOU",[[-1,1991,"\n"]],[1991,1991],[1990,1990]]],[1536539013436,["gjx16@GJXAIOU",[[1,2016,"[]"]],[2016,2016],[2018,2018]]],[1536539015177,["gjx16@GJXAIOU",[[1,2017,"i"]],[2017,2017],[2018,2018]]],[1536539046570,["gjx16@GJXAIOU",[[1,2005,"array["]],[2005,2005],[2011,2011]]],[1536539049682,["gjx16@GJXAIOU",[[1,2012,"%"]],[2011,2011],[2012,2012]]],[1536539055979,["gjx16@GJXAIOU",[[1,2012,"d] = "]],[2012,2012],[2017,2017]]],[1536539061581,["gjx16@GJXAIOU",[[1,2023,"i,"]],[2023,2023],[2025,2025]]],[1536539080280,["gjx16@GJXAIOU",[[1,2019,",n"]],[2019,2019],[2021,2021]]],[1536539080801,["gjx16@GJXAIOU",[[-1,2020,"n"]],[2021,2021],[2020,2020]]],[1536539088181,["gjx16@GJXAIOU",[[1,2020,"index = %d"]],[2020,2020],[2030,2030]]],[1536539092949,["gjx16@GJXAIOU",[[1,2044,","]],[2044,2044],[2045,2045]]],[1536539095781,["gjx16@GJXAIOU",[[1,2045,"index"]],[2045,2045],[2050,2050]]],[1536539104989,["gjx16@GJXAIOU",[[-1,2053,"      printf(\"%d\\n\",index);"]],[2080,2080],[2053,2053]]],[1536539105338,["gjx16@GJXAIOU",[[-1,2053,"\n"]],[2053,2053],[2052,2052]]],[1536539351637,["gjx16@GJXAIOU",[[1,1917,".0"]],[1917,1917],[1919,1919]]],[1536539358054,["gjx16@GJXAIOU",[[-1,1800,"int"]],[1803,1803],[1800,1800]]],[1536539362774,["gjx16@GJXAIOU",[[1,1800,"float"]],[1800,1800],[1805,1805]]],[1536539848325,["gjx16@GJXAIOU",[[1,1734,"#include<stdio.h>\n"],[1,1738," "],[1,1746,"\n"],[1,1747,"\n"],[1,1753," "],[1,1764," "],[1,1765," "],[-1,1768," 2 3 4 5 6 7 8 9 "],[1,1785,",2,3,4,5,6,7,8,9,"],[1,1788,"\n"],[1,1795," "],[1,1797,"\n"],[1,1806," "],[1,1811,"\n"],[1,1818," "],[1,1822," "],[1,1823," "],[1,1827,"\n"],[1,1832," "],[1,1839," "],[1,1840," "],[1,1844,"\n"],[1,1852," "],[1,1853," "],[1,1857," "],[1,1858," "],[1,1860," "],[1,1868,"\n"],[-1,1873,"   "],[1,1876,"\n"],[1,1882," "],[-1,1894," "],[1,1895,"\n"],[-1,1899,"   "],[1,1902,"\n"],[-1,1904," "],[1,1909," "],[1,1912," "],[1,1915," "],[1,1923,"\n  printf(\"The  following  elements  are  greater  than  the  average  value  of  the  array.  The  addresses  are:\\n\");\n\n"],[1,1930," "],[1,1932," "],[1,1937," "],[1,1938," "],[1,1947,"\n"],[1,1950,"\n"],[1,1965," "],[-1,1972,"  "],[1,1974,"\n"],[-1,1978,"    "],[1,1982,"\n"],[1,1989," "],[1,1992," "],[-1,1995,"    "],[1,1999,"\n"],[1,2018," "],[1,2021," "],[1,2030," "],[1,2031," "],[-1,2057,"  "],[1,2059,"\n"],[1,2062,"\n"],[-1,2067," "]],[1734,2070],[2239,2239]]],[1536540500575,["gjx16@GJXAIOU",[[1,2406,":zhijie"]],[2406,2406],[2413,2413]]],[1536540501786,["gjx16@GJXAIOU",[[-1,2407,"zhijie"]],[2413,2413],[2407,2407]]],[1536540520937,["gjx16@GJXAIOU",[[1,2407,"zhijie"]],[2407,2407],[2413,2413]]],[1536540521926,["gjx16@GJXAIOU",[[-1,2407,"zhijie"]],[2413,2413],[2407,2407]]],[1536540529223,["gjx16@GJXAIOU",[[1,2407,"直接换元素"]],[2407,2407],[2412,2412]]],[1536540606356,["gjx16@GJXAIOU",[[1,2535,"：通过换下标来实现"]],[2535,2535],[2544,2544]]],[1536540608226,["gjx16@GJXAIOU",[[1,2545,"\n"]],[2544,2544],[2545,2545]]],[1536541033003,["gjx16@GJXAIOU",[[1,2256,"- 实现部分"]],[2256,2256],[2262,2262]]],[1536541034806,["gjx16@GJXAIOU",[[-1,2260,"部分"]],[2262,2262],[2260,2260]]],[1536541036565,["gjx16@GJXAIOU",[[1,2260,"大哥"]],[2260,2260],[2262,2262]]],[1536541037611,["gjx16@GJXAIOU",[[-1,2260,"大哥"]],[2262,2262],[2260,2260]]],[1536541041462,["gjx16@GJXAIOU",[[1,2260,"单个袁苏苏"]],[2260,2260],[2265,2265]]],[1536541042231,["gjx16@GJXAIOU",[[-1,2262,"袁苏苏"]],[2265,2265],[2262,2262]]],[1536541061908,["gjx16@GJXAIOU",[[1,2262,"元素的互换"]],[2262,2262],[2267,2267]]],[1536541062991,["gjx16@GJXAIOU",[[1,2268,"- \n"]],[2267,2267],[2270,2270]]],[1536541064305,["gjx16@GJXAIOU",[[-1,2269," "]],[2270,2270],[2269,2269]]],[1536541064579,["gjx16@GJXAIOU",[[-1,2268,"-"]],[2269,2269],[2268,2268]]],[1536541066736,["gjx16@GJXAIOU",[[1,2268,"··"]],[2268,2268],[2270,2270]]],[1536541067459,["gjx16@GJXAIOU",[[-1,2268,"··"]],[2270,2270],[2268,2268]]],[1536541070313,["gjx16@GJXAIOU",[[1,2268,"```c"]],[2268,2268],[2272,2272]]],[1536541070735,["gjx16@GJXAIOU",[[1,2273,"\n"]],[2272,2272],[2273,2273]]],[1536541071114,["gjx16@GJXAIOU",[[1,2274,"\n"]],[2273,2273],[2274,2274]]],[1536541071350,["gjx16@GJXAIOU",[[1,2275,"\n"]],[2274,2274],[2275,2275]]],[1536541071565,["gjx16@GJXAIOU",[[1,2276,"\n"]],[2275,2275],[2276,2276]]],[1536541071731,["gjx16@GJXAIOU",[[1,2277,"\n"]],[2276,2276],[2277,2277]]],[1536541071941,["gjx16@GJXAIOU",[[1,2278,"\n"]],[2277,2277],[2278,2278]]],[1536541072806,["gjx16@GJXAIOU",[[1,2278,"```"]],[2278,2278],[2281,2281]]],[1536541074915,["gjx16@GJXAIOU",[[1,2282,"\n"]],[2281,2281],[2282,2282]]],[1536541078496,["gjx16@GJXAIOU",[[1,2273,"#include<stdio.h>\n\nint  main()\n\n{\n\n  int  array[10]  =  {1,2,3,4,5,6,7,8,9,0};\n\n//部分交换\n\n  int  i;\n\n  int  tmp  =  array[0];\n\n  array[0]  =  array[1];\n\n  array[1]  =  tmp;\n\n  for(i  =  0;i  <  10;i++)\n\n  {\n\n  printf(\"array[%d]=%d\\n\",i,array[i]);\n\n  }\n\n  return  0;\n\n}"]],[2273,2273],[2539,2539]]],[1536541082806,["gjx16@GJXAIOU",[[-1,2543,"\n"]],[2543,2543],[2542,2542]]],[1536541083731,["gjx16@GJXAIOU",[[-1,2542,"\n"]],[2542,2542],[2541,2541]]],[1536541084324,["gjx16@GJXAIOU",[[-1,2541,"\n"]],[2541,2541],[2540,2540]]],[1536541089340,["gjx16@GJXAIOU",[[-1,2606,"//部分交换\n  int tmp = array[0];\n  array[0] = array[1];\n  array[1] = tmp;\n\n"]],[2605,2676],[2605,2605]]],[1536541096069,["gjx16@GJXAIOU",[[1,2545,"- shiixan"]],[2545,2545],[2554,2554]]],[1536541097802,["gjx16@GJXAIOU",[[-1,2547,"shiixan"]],[2554,2554],[2547,2547]]],[1536541102187,["gjx16@GJXAIOU",[[1,2547,"实现"]],[2547,2547],[2549,2549]]],[1536541148687,["gjx16@GJXAIOU",[[1,2549,"数组的前半部分和后半部分的互换"]],[2549,2549],[2564,2564]]],[1536541149567,["gjx16@GJXAIOU",[[1,2565,"- \n"]],[2564,2564],[2567,2567]]],[1536541150967,["gjx16@GJXAIOU",[[-1,2565,"- "]],[2567,2567],[2565,2565]]],[1536541161025,["gjx16@GJXAIOU",[[-1,2768,"//方法二：通过换下标来实现\n\n   int min = 0;//数组的最小下标\n   int max = 9;//数组的最大下标\n   while(min <max)\n   {\n     int tmp = array[min];\n     array[min] = array[max];\n     array[max] =tmp;\n     min++;\n     max--;\n   }\n\n"]],[2768,2967],[2768,2768]]],[1536541164266,["gjx16@GJXAIOU",[[1,2862,"\n"]],[2861,2861],[2862,2862]]],[1536541164818,["gjx16@GJXAIOU",[[1,2862,"- "]],[2862,2862],[2864,2864]]],[1536541167159,["gjx16@GJXAIOU",[[-1,2862,"- "]],[2864,2864],[2862,2862]]],[1536541172168,["gjx16@GJXAIOU",[[1,2862,"```c"]],[2862,2862],[2866,2866]]],[1536541172426,["gjx16@GJXAIOU",[[1,2867,"\n"]],[2866,2866],[2867,2867]]],[1536541172848,["gjx16@GJXAIOU",[[1,2868,"\n"]],[2867,2867],[2868,2868]]],[1536541173030,["gjx16@GJXAIOU",[[1,2869,"\n"]],[2868,2868],[2869,2869]]],[1536541173208,["gjx16@GJXAIOU",[[1,2870,"\n"]],[2869,2869],[2870,2870]]],[1536541174025,["gjx16@GJXAIOU",[[1,2870,"```"]],[2870,2870],[2873,2873]]],[1536541177009,["gjx16@GJXAIOU",[[1,2867,"//方法二：通过换下标来实现\n\n   int min = 0;//数组的最小下标\n   int max = 9;//数组的最大下标\n   while(min <max)\n   {\n     int tmp = array[min];\n     array[min] = array[max];\n     array[max] =tmp;\n     min++;\n     max--;\n   }\n\n"]],[2867,2867],[3066,3066]]],[1536541179471,["gjx16@GJXAIOU",[[-1,2882,"\n"]],[2882,2882],[2881,2881]]],[1536541181424,["gjx16@GJXAIOU",[[-1,2867,"//方法二：通过换下标来实现"]],[2881,2881],[2867,2867]]],[1536541181480,["gjx16@GJXAIOU",[[-1,2867,"\n"]],[2867,2867],[2866,2866]]],[1536541181775,["gjx16@GJXAIOU",[[-1,2865,"c"]],[2866,2866],[2865,2865]]],[1536541183071,["gjx16@GJXAIOU",[[1,2865,"c"]],[2865,2865],[2866,2866]]],[1536541190461,["gjx16@GJXAIOU",[[1,2565,"  - fa"]],[2565,2565],[2571,2571]]],[1536541191454,["gjx16@GJXAIOU",[[-1,2569,"fa"]],[2571,2571],[2569,2569]]],[1536541193702,["gjx16@GJXAIOU",[[1,2569,"法一；"]],[2569,2569],[2572,2572]]],[1536541195895,["gjx16@GJXAIOU",[[-1,2571,"；"]],[2572,2572],[2571,2571]]],[1536541196839,["gjx16@GJXAIOU",[[1,2571,"："]],[2571,2571],[2572,2572]]],[1536541205532,["gjx16@GJXAIOU",[[-1,2634,"//前半部分与后半部分交换（法一):直接换元素"]],[2634,2657],[2634,2634]]],[1536541207264,["gjx16@GJXAIOU",[[1,2572,"//前半部分与后半部分交换（法一):直接换元素"]],[2572,2572],[2595,2595]]],[1536541210528,["gjx16@GJXAIOU",[[-1,2572,"//前半部分与后半部分交换（法一):"]],[2572,2590],[2572,2572]]],[1536541213457,["gjx16@GJXAIOU",[[-1,2639,"\n"]],[2639,2639],[2638,2638]]],[1536541213603,["gjx16@GJXAIOU",[[-1,2638,"\n"]],[2638,2638],[2637,2637]]],[1536541213851,["gjx16@GJXAIOU",[[-1,2637,"\n"]],[2637,2637],[2636,2636]]],[1536541223392,["gjx16@GJXAIOU",[[1,2856,"\n   "]],[2856,2856],[2860,2860]]],[1536541225718,["gjx16@GJXAIOU",[[1,2856,"int main()\n{\n  int array[10] = {1,2,3,4,5,6,7,8,9,0};\n  int i;"]],[2856,2856],[2918,2918]]],[1536541230659,["gjx16@GJXAIOU",[[1,2848,"\n"]],[2847,2847],[2848,2848]]],[1536541233178,["gjx16@GJXAIOU",[[1,2848,"·-"]],[2848,2848],[2850,2850]]],[1536541233929,["gjx16@GJXAIOU",[[-1,2848,"·-"]],[2850,2850],[2848,2848]]],[1536541236572,["gjx16@GJXAIOU",[[1,2848,"  - "]],[2848,2848],[2852,2852]]],[1536541238863,["gjx16@GJXAIOU",[[-1,2851," "]],[2852,2852],[2851,2851]]],[1536541243000,["gjx16@GJXAIOU",[[1,2851,"法"]],[2851,2851],[2852,2852]]],[1536541244368,["gjx16@GJXAIOU",[[-1,2851,"法"]],[2852,2852],[2851,2851]]],[1536541246594,["gjx16@GJXAIOU",[[1,2851," fa"]],[2851,2851],[2854,2854]]],[1536541247594,["gjx16@GJXAIOU",[[-1,2852,"fa"]],[2854,2854],[2852,2852]]],[1536541250529,["gjx16@GJXAIOU",[[1,2852,"法儿"]],[2852,2852],[2854,2854]]],[1536541251393,["gjx16@GJXAIOU",[[-1,2853,"儿"]],[2854,2854],[2853,2853]]],[1536541261850,["gjx16@GJXAIOU",[[1,2853,"二：通过换下标"]],[2853,2853],[2860,2860]]],[1536541266273,["gjx16@GJXAIOU",[[-1,2754,"\n"]],[2754,2754],[2753,2753]]],[1536541313023,["gjx16@GJXAIOU",[[1,2583,"#"],[1,2585,"clude<s"],[1,2586,"dio.h>\n\nint "],[1,2594,"\n"],[1,2595,"\n"],[1,2602," "],[1,2611," "],[1,2614," "],[1,2637,"\n"],[1,2643," "],[1,2645,"\n"],[1,2654," "],[1,2655," "],[1,2659," "],[1,2660," "],[1,2664," "],[1,2666," "],[1,2672,"\n"],[-1,2676,"  "],[1,2678,"\n"],[1,2684," "],[1,2687," "],[1,2690," "],[-1,2700,"  "],[1,2702,"\n"],[1,2713," "],[1,2714," "],[-1,2727," "],[1,2728,"\n"],[-1,2730," "],[1,2742," "],[1,2743," "],[1,2748,"\n"],[1,2762," "],[1,2763," "],[1,2768," "],[1,2769," "],[1,2778,"\n"],[-1,2782,"  "],[1,2784,"\n"],[1,2828,"\n"],[1,2837," "],[1,2839,"\n"]],[2583,2841],[2888,2888]]],[1536541411980,["gjx16@GJXAIOU",[[-1,2913,"  "],[1,2915,"#include<stdio.h>\n\n"],[1,2919," "],[1,2926,"\n"],[-1,2928,"  "],[1,2930,"\n"],[1,2933," "],[1,2944," "],[1,2945," "],[-1,2969,"  "],[1,2971,"\n"],[1,2975," "],[-1,2978," "],[1,2979,"\n"],[1,2985," "],[1,2988," "],[1,2991," "],[-1,3003," "],[1,3004,"\n"],[1,3010," "],[1,3013," "],[1,3016," "],[-1,3028," "],[1,3029,"\n"],[1,3041," "],[-1,3047," "],[1,3048,"\n"],[-1,3052,"   "],[1,3055,"\n"],[1,3060," "],[1,3065," "],[1,3066," "],[-1,3079,"   "],[1,3082,"\n"],[1,3095," "],[1,3096," "],[-1,3109,"   "],[1,3112,"\n"],[1,3125," "],[-1,3131,"  "],[1,3133,"\n"],[-1,3135," "],[-1,3143,"   "],[1,3146,"\n"],[1,3155,"\n"],[1,3156," }\n\n  for(i  =  0;i  <  10;i++)\n\n  {\n\n  printf(\"array[%d]=%d\\n\",i,array[i]);\n\n"],[1,3161,"  return  0;"],[1,3162,"\n}"]],[2913,3162],[3279,3279]]],[1536541482767,["gjx16@GJXAIOU",[[1,3285,"\n"]],[3285,3285],[3286,3286]]],[1536541494724,["gjx16@GJXAIOU",[[-1,854,"----"]],[858,858],[854,854]]],[1536541495091,["gjx16@GJXAIOU",[[-1,855,"\n"]],[854,854],[853,853]]],[1536541495837,["gjx16@GJXAIOU",[[-1,854,"\n"]],[853,853],[852,852]]],[1536541591330,["gjx16@GJXAIOU",[[1,3318,"  for()"]],[3318,3318],[3325,3325]]],[1536541593767,["gjx16@GJXAIOU",[[1,3324,"i"]],[3324,3324],[3325,3325]]],[1536541604182,["gjx16@GJXAIOU",[[1,3325," - "]],[3325,3325],[3328,3328]]],[1536541605469,["gjx16@GJXAIOU",[[-1,3326,"- "]],[3328,3328],[3326,3326]]],[1536541612438,["gjx16@GJXAIOU",[[1,3326,"= 100; ="]],[3326,3326],[3334,3334]]],[1536541613627,["gjx16@GJXAIOU",[[-1,3333,"="]],[3334,3334],[3333,3333]]],[1536541613975,["gjx16@GJXAIOU",[[1,3333,"="]],[3333,3333],[3334,3334]]],[1536541614739,["gjx16@GJXAIOU",[[-1,3333,"="]],[3334,3334],[3333,3333]]],[1536541619214,["gjx16@GJXAIOU",[[1,3333,"i M"]],[3333,3333],[3336,3336]]],[1536541620078,["gjx16@GJXAIOU",[[-1,3335,"M"]],[3336,3336],[3335,3335]]],[1536541623465,["gjx16@GJXAIOU",[[1,3335,"< 1000"]],[3335,3335],[3341,3341]]],[1536541627579,["gjx16@GJXAIOU",[[1,3291,"\n"]],[3290,3290],[3291,3291]]],[1536541629238,["gjx16@GJXAIOU",[[1,3291,"chah"]],[3291,3291],[3295,3295]]],[1536541630303,["gjx16@GJXAIOU",[[-1,3291,"chah"]],[3295,3295],[3291,3291]]],[1536541636197,["gjx16@GJXAIOU",[[1,3291,"查找1000"]],[3291,3291],[3297,3297]]],[1536541636838,["gjx16@GJXAIOU",[[-1,3296,"0"]],[3297,3297],[3296,3296]]],[1536541650822,["gjx16@GJXAIOU",[[1,3296,"都1000之间的水仙花数；"]],[3296,3296],[3309,3309]]],[1536541657859,["gjx16@GJXAIOU",[[1,3360,"；i++"]],[3360,3360],[3364,3364]]],[1536541660500,["gjx16@GJXAIOU",[[1,3366,"  \n"]],[3365,3365],[3368,3368]]],[1536541662925,["gjx16@GJXAIOU",[[1,3368,"{}"]],[3368,3368],[3370,3370]]],[1536541664712,["gjx16@GJXAIOU",[[1,3369,"\n  \n  \n  \n  "]],[3369,3369],[3381,3381]]],[1536541668906,["gjx16@GJXAIOU",[[-1,3385,"\n"]],[3385,3385],[3384,3384]]],[1536541669079,["gjx16@GJXAIOU",[[-1,3384,"\n"]],[3384,3384],[3383,3383]]],[1536541669409,["gjx16@GJXAIOU",[[-1,3383,"\n"]],[3383,3383],[3382,3382]]],[1536541697449,["gjx16@GJXAIOU",[[1,3372,"  int i1 = i%a"]],[3372,3372],[3386,3386]]],[1536541698096,["gjx16@GJXAIOU",[[-1,3385,"a"]],[3386,3386],[3385,3385]]],[1536541699548,["gjx16@GJXAIOU",[[1,3385,"10;"]],[3385,3385],[3388,3388]]],[1536541700171,["gjx16@GJXAIOU",[[1,3391,"  \n  "]],[3388,3388],[3393,3393]]],[1536541714536,["gjx16@GJXAIOU",[[1,3393,"int i2 = i/10%10;"]],[3393,3393],[3410,3410]]],[1536541715144,["gjx16@GJXAIOU",[[1,3413,"  \n  "]],[3410,3410],[3415,3415]]],[1536541716465,["gjx16@GJXAIOU",[[1,3415,"ing"]],[3415,3415],[3418,3418]]],[1536541717010,["gjx16@GJXAIOU",[[-1,3417,"g"]],[3418,3418],[3417,3417]]],[1536541717794,["gjx16@GJXAIOU",[[1,3417,"t "]],[3417,3417],[3419,3419]]],[1536541731938,["gjx16@GJXAIOU",[[1,3419,"i3 = i/100;"]],[3419,3419],[3430,3430]]],[1536541732541,["gjx16@GJXAIOU",[[1,3433,"  \n  "]],[3430,3430],[3435,3435]]],[1536541736506,["gjx16@GJXAIOU",[[-1,3431,"    "],[1,3435,"\n"]],[3435,3435],[3432,3432]]],[1536541741386,["gjx16@GJXAIOU",[[1,3432,"    if()"]],[3432,3432],[3440,3440]]],[1536541769887,["gjx16@GJXAIOU",[[1,3439,"i1*i1*i1 + i2*i2*2"]],[3439,3439],[3457,3457]]],[1536541770896,["gjx16@GJXAIOU",[[-1,3456,"2"]],[3457,3457],[3456,3456]]],[1536541775097,["gjx16@GJXAIOU",[[1,3456,"i2 _"]],[3456,3456],[3460,3460]]],[1536541775875,["gjx16@GJXAIOU",[[-1,3459,"_"]],[3460,3460],[3459,3459]]],[1536541776724,["gjx16@GJXAIOU",[[1,3459,"+"]],[3459,3459],[3460,3460]]],[1536541830237,["gjx16@GJXAIOU",[[1,3460," i3*i3*i3"]],[3460,3460],[3469,3469]]],[1536541832768,["gjx16@GJXAIOU",[[1,3473,"  \n  "]],[3470,3470],[3475,3475]]],[1536541837937,["gjx16@GJXAIOU",[[1,3475,"{}"]],[3475,3475],[3477,3477]]],[1536541840588,["gjx16@GJXAIOU",[[1,3476,"\n    \n    \n    "]],[3476,3476],[3491,3491]]],[1536541843366,["gjx16@GJXAIOU",[[1,3481,"  "]],[3481,3481],[3483,3483]]],[1536541913503,["gjx16@GJXAIOU",[[1,3483,"pringt"]],[3483,3483],[3489,3489]]],[1536541914222,["gjx16@GJXAIOU",[[-1,3487,"gt"]],[3489,3489],[3487,3487]]],[1536541918014,["gjx16@GJXAIOU",[[1,3487,"tf();"]],[3487,3487],[3492,3492]]],[1536541922453,["gjx16@GJXAIOU",[[1,3490,"\"\""]],[3490,3490],[3492,3492]]],[1536541927578,["gjx16@GJXAIOU",[[1,3491,"%d\\n"]],[3491,3491],[3495,3495]]],[1536541930524,["gjx16@GJXAIOU",[[1,3496,",i"]],[3496,3496],[3498,3498]]],[1536541934642,["gjx16@GJXAIOU",[[-1,3515,"  "]],[3517,3517],[3515,3515]]],[1536541934972,["gjx16@GJXAIOU",[[-1,3515,"\n"]],[3515,3515],[3514,3514]]],[1536541935701,["gjx16@GJXAIOU",[[-1,3512,"  "]],[3514,3514],[3512,3512]]],[1536541936041,["gjx16@GJXAIOU",[[-1,3512,"\n"]],[3512,3512],[3511,3511]]],[1536545658652,["gjx16@GJXAIOU",[[1,3315,"#"],[1,3317,"clude<s"],[1,3318,"dio.h>\n\nint "],[1,3326,"\n"],[1,3327,"\n"],[1,3334," "],[1,3336,"\n"],[1,3344," "],[1,3347," "],[1,3352," "],[1,3353," "],[1,3356," "],[-1,3360,"；"],[1,3361,";"],[1,3366,"\n"],[-1,3370,"  "],[1,3372,"\n"],[1,3377," "],[1,3381," "],[1,3382," "],[1,3388,"\n"],[-1,3391,"  "],[1,3396," "],[1,3400," "],[1,3401," "],[-1,3411,"  "],[1,3413,"\n"],[1,3419," "],[1,3421," "],[1,3423," "],[-1,3434,"  "],[1,3447," "],[1,3450," "],[1,3458," "],[1,3461," "],[-1,3469,")\n"],[1,3473,"=="],[-1,3475,"{\n    "],[1,3481,"i)\n\n  {\n\n"],[1,3501,"\n"],[1,3503,"}\n\n"],[1,3505,"}\n"],[1,3508,"return"],[-1,3510,"}\n  }"],[1,3515,"0;\n"],[-1,3517,"\n"]],[3315,3518],[3568,3568]]],[1536545670765,["gjx16@GJXAIOU",[[-1,3573,"![水仙花数]($resource/%E6%B0%B4%E4%BB%99%E8%8A%B1%E6%95%B0.png)"]],[3573,3632],[3573,3573]]],[1536546650857,["gjx16@GJXAIOU",[[1,3603,"#include<stdio.h>\n"],[1,3608," "],[1,3615,"\n"],[1,3616,"\n"],[1,3623," "],[1,3632," "],[1,3635," "],[1,3652,"\n"],[1,3657," "],[1,3661,"\n"],[1,3667," "],[1,3670," "],[1,3673," "],[1,3675,"\n\n  printf(\"The  odd  numbers  in  the  array  are  as  follows:\\n\");\n"],[1,3683," "],[1,3685," "],[1,3689," "],[1,3690," "],[1,3692," "],[1,3701,"\n"],[-1,3705," "],[1,3706,"\n"],[-1,3708," "],[1,3721," "],[1,3722," "],[1,3725," "],[1,3727," "],[-1,3731,"  "],[1,3733,"\n"],[1,3750," "],[1,3751," "],[1,3754," "],[-1,3758,"  "],[1,3760,"\n"],[-1,3764,"    "],[1,3768,"\n"],[1,3774," "],[1,3776," "],[-1,3787,"    }"],[-1,3793," "],[-1,3796," "],[1,3815," "],[1,3817," %d"],[1,3833,"\n"],[1,3837,"\n\n  }\n\n  printf(\"sum  =  %d\\n\",sum);\n"],[1,3847," "],[1,3849,"\n"]],[3603,3851],[3997,3997]]],[1536546700682,["gjx16@GJXAIOU",[[1,4042,"()"]],[4042,4042],[4044,4044]]],[1536546716845,["gjx16@GJXAIOU",[[1,4043,"也就是相当于不能呢个"]],[4043,4043],[4053,4053]]],[1536546718016,["gjx16@GJXAIOU",[[-1,4051,"呢个"]],[4053,4053],[4051,4051]]],[1536546719377,["gjx16@GJXAIOU",[[1,4051,"被"]],[4051,4051],[4052,4052]]],[1536546788800,["gjx16@GJXAIOU",[[1,4052,"2-"]],[4052,4052],[4054,4054]]],[1536546791592,["gjx16@GJXAIOU",[[-1,4053,"-"]],[4054,4054],[4053,4053]]],[1536546801487,["gjx16@GJXAIOU",[[1,4053,"到i-1之间的"]],[4053,4053],[4060,4060]]],[1536546807707,["gjx16@GJXAIOU",[[1,4060,"任何数整除"]],[4060,4060],[4065,4065]]],[1536548450439,["gjx16@GJXAIOU",[[1,4072,"#"],[1,4074,"clude<s"],[1,4075,"dio.h>\n\nint "],[1,4082,"\n"],[1,4085,"\n"],[1,4090," "],[1,4094,"\n"],[1,4099," "],[1,4103,"\n  int  status  =  0;\n\n"],[1,4111," "],[1,4112," "],[1,4117," "],[1,4118," "],[1,4128,"\n"],[-1,4132,"  "],[1,4134,"\n"],[-1,4142,"<"],[1,4143," = "],[1,4148," "],[1,4149," "],[-1,4157," "],[1,4158,"\n"],[-1,4162,"   "],[1,4165,"\n"],[1,4170,"("],[-1,4174,"!="],[1,4176," )== "],[1,4178,")\n\n  {\n\n  status  =  1"],[1,4179,"\n"],[1,4182,"break;\n\n "],[1,4184,"\n\n"],[1,4186,"}\n\n  if(status  =="],[1,4187," 0)\n"],[1,4190,"{\n\n"],[1,4210,"\n"],[1,4213,"\n\n  }\n"],[1,4223," "],[-1,4226,"}"],[1,4228,"}"]],[4072,4228],[4353,4353]]],[1536548455694,["gjx16@GJXAIOU",[[1,4021,"\n"]],[4020,4020],[4021,4021]]],[1536548457527,["gjx16@GJXAIOU",[[1,4021,"=="]],[4021,4021],[4023,4023]]],[1536548459381,["gjx16@GJXAIOU",[[-1,4021,"=="]],[4023,4023],[4021,4021]]],[1536548460259,["gjx16@GJXAIOU",[[1,4022,"\n"]],[4021,4021],[4022,4022]]],[1536548461664,["gjx16@GJXAIOU",[[1,4022,"===="]],[4022,4022],[4024,4024]]],[1536548465878,["gjx16@GJXAIOU",[[1,4024,"有问题"]],[4024,4024],[4027,4027]]],[1536548467734,["gjx16@GJXAIOU",[[-1,4024,"有问题"]],[4027,4027],[4024,4024]]],[1536548471006,["gjx16@GJXAIOU",[[-1,4022,"===="]],[4026,4026],[4022,4022]]],[1536548472697,["gjx16@GJXAIOU",[[1,4022,"·"]],[4022,4022],[4023,4023]]],[1536548473523,["gjx16@GJXAIOU",[[-1,4022,"·"]],[4023,4023],[4022,4022]]],[1536548475109,["gjx16@GJXAIOU",[[1,4022,"~~~~"]],[4022,4022],[4024,4024]]],[1536548480338,["gjx16@GJXAIOU",[[1,4024,"有问题"]],[4024,4024],[4027,4027]]],[1536548488496,["gjx16@GJXAIOU",[[1,4024,"程序"]],[4024,4024],[4026,4026]]],[1536548500443,["gjx16@GJXAIOU",[[1,4022,"===="]],[4022,4022],[4024,4024]]],[1536548503072,["gjx16@GJXAIOU",[[-1,4024,"=="]],[4026,4026],[4024,4024]]],[1536548506734,["gjx16@GJXAIOU",[[1,4033,"=="]],[4033,4033],[4035,4035]]],[1536549436961,["gjx16@GJXAIOU",[[1,4995,"#"],[1,4997,"clude<s"],[1,4998,"dio.h>\n\nint "],[1,5006,"\n"],[1,5007,"\n"],[1,5014," "],[1,5026," "],[1,5027," "],[1,5053," "],[1,5059,"\n"],[1,5067," "],[1,5068," "],[1,5072," "],[1,5073," "],[1,5075," "],[1,5082,"\n"],[-1,5087,"  "],[1,5089,"\n"],[1,5097," "],[1,5098," "],[1,5102," "],[1,5103," "],[1,5106," "],[-1,5113,"  "],[1,5115,"\n"],[-1,5119,"  "],[1,5121,"\n"],[1,5146," "],[-1,5170,"   "],[-1,5174," "],[-1,5177," "],[1,5179,"\n"],[1,5184,"\n"],[1,5193," "],[1,5195,"\n"]],[4995,5197],[5232,5232]]],[1536549542108,["gjx16@GJXAIOU",[[1,4990,"\n"]],[4988,4988],[4989,4989]]],[1536549545759,["gjx16@GJXAIOU",[[1,4989,"=="]],[4989,4989],[4991,4991]]],[1536549547071,["gjx16@GJXAIOU",[[-1,4989,"=="]],[4991,4991],[4989,4989]]],[1536549548074,["gjx16@GJXAIOU",[[1,4991,"\n"]],[4989,4989],[4990,4990]]],[1536549549719,["gjx16@GJXAIOU",[[1,4990,"===="]],[4990,4990],[4992,4992]]],[1536549556727,["gjx16@GJXAIOU",[[1,4992,"注意printf的位置"]],[4992,4992],[5003,5003]]],[1536549561757,["gjx16@GJXAIOU",[[1,5278,"\n"]],[5277,5277],[5278,5278]]],[1536549563484,["gjx16@GJXAIOU",[[1,5278,"===="]],[5278,5278],[5280,5280]]],[1536549571328,["gjx16@GJXAIOU",[[1,5280,"注意printf"]],[5280,5280],[5288,5288]]],[1536549575380,["gjx16@GJXAIOU",[[1,5288,"的位置"]],[5288,5288],[5291,5291]]]],null,"gjx16@GJXAIOU"],["111d52fd-c7ce-43ed-a8e5-544679d26cba",1538568246249,"---\ndate:'2018-9-9'\nnandian:循环的嵌套\n---\n\n# day5\n@toc\n\n\n## 一、一维数组\n\n**1.定义数组**\n\n```c\n#include<stdio.h>\n\nint main()\n{\n  int array[10];  //定义了一个数组，数组名为array，里面有十个元素,从0-9；\n\n  array[0] = 20;\n  array[9] = 100;\n\n  printf(\"%d\\n\",array[0]);\n  printf(\"%d\\n\",sizeof(array));//一个整数四个字节，所以这里显示是40\n  \n  return 0;\n}\n```\n\n数组本质就是：在内存中就是一个连续的空间；而且每个元素的类型是一样的；\n\n**2.连续的赋值操作**\n\n```c\nint main()\n{\n  int i;\n  for(i = 0;i < 10;i++)\n  {\n    array[i] = i;  \n  }\n  return 0;\n}\n```\n\n**3.数组的初始化**\n\n\n```c\nint main()\n{\n\n/*数组初始化的三种方式(挨个赋值，部分赋值，统一赋值)\n  int array[10] = {1,1,3,5,5,6,9,6,8,5};//全部进行赋值\n  \n  int array[10] = {100,2,3,3,4,9};//定义一个数组的同时进行赋值初始化,这是部分初始化\n \n  int array[10] = {0};  //将所有元素置为0\n  //另一种置为0 的方法\n  int i;\n  for(i = 0; i < 10; i++)\n {\n   array[i] = 0;\n }\n\n*/\n\n  int i;\n  for(i = 0;i < 10;i++)\n  {\n  \n    printf(\"array[%d] = %d\\n\",i,array[i]);\n  \n  }\n  return 0;\n}\n\n```\n\n**4.求数组中最大元素的值**\n\n将数组中的第一个元素默认设置成最大的元素，然后让各个元素进行比较；\n```c\nint main()\n{\n  int array[5] = {2,3,5,6,7};\n  int max = array[0];\n  int i;\n  for(i = 1;i < 5;i++) //想找最大的先遍历一遍,因为第一的元素默认设置成最大值，所以这里的循环从1开始；\n  {\n    if(max < array[i])\n      max = array[i];\n  }\n\n  printf(\"max = %d\\n\",max);\n\nreturn 0;\n\n}\n```\n\n**5.求数组中的最小值，并求出最小值的编号**\n```c\nint main()\n{\n  int array[5] = {2,3,5,6,7};\n  int min = array[0];\n  int index = 0;//在没有遍历数组之前，默认数组的第0号元素就是最小的元素；所以默认的地址也是0；\n  int i;\n  for(i = 1;i < 5;i++) //想找最小的先遍历一遍\n  {\n    if(min > array[i])\n      index = i;\n      min = array[i];\n  }\n\n  printf(\"min = %d,index = %d\\n\",min,index);\n\nreturn 0;\n\n}\n\n\n```\n\n**6.求数组元素和**\n\n```c\n\nint main()\n{\n  int array[10] = {1,2,3,4,5,6,7,8,9,0};\n  int i;\n  int sum = 0;\n  for(i = 0; i < 10; i++)\n  {\n    sum += array[i];\n  }\n\n  printf(\"sum = %d\\n\",sum);\n\n  return 0;\n\n}\n```\n\n**7.打印数组中大于平均值的所有的值与其下标**\n这个程序未确定\n```c\n#include<stdio.h>\n\nint  main()\n\n{\n\n  int  array[10]  =  {1,2,3,4,5,6,7,8,9,0};\n\n  int  i;\n\n  float  aver;\n\n  int  sum  =  0;\n\n  int  index  =  0;\n\n  for(i  =  0;  i  <  10;i++)\n\n  {\n\n  sum  +=array[i];\n\n  }\n\n  aver  =  sum  /10.0;\n\n  printf(\"The  following  elements  are  greater  than  the  average  value  of  the  array.  The  addresses  are:\\n\");\n\n  for(i  =  0;i  <  10;i++)\n\n  {\n\n  if(array[i]  >aver)\n\n  {\n\n  index  =  i;\n\n  printf(\"array[%d]  =  %d,index  =  %d\\n\",i,array[i],index);\n\n  }\n\n  }\n\n}\n```\n\n**8.数组逆置**\n- 实现单个元素的互换\n```c\n#include<stdio.h>\n\nint  main()\n\n{\n\n  int  array[10]  =  {1,2,3,4,5,6,7,8,9,0};\n\n//部分交换\n\n  int  i;\n\n  int  tmp  =  array[0];\n\n  array[0]  =  array[1];\n\n  array[1]  =  tmp;\n\n  for(i  =  0;i  <  10;i++)\n\n  {\n\n  printf(\"array[%d]=%d\\n\",i,array[i]);\n\n  }\n\n  return  0;\n\n}\n\n```\n- 实现数组的前半部分和后半部分的互换\n  - 法一：直接换元素\n```c\n#include<stdio.h>\n\nint  main()\n\n{\n\n  int  array[10]  =  {1,2,3,4,5,6,7,8,9,0};\n\n  int  i;\n\n  for(i  =  0;  i  <=  4;  i++)\n\n  {\n\n  int  tmp  =  array[i];\n\n  array[i]  =  array[9-i];\n\n  array[9-i]  =  tmp;\n\n  }\n\n  for(i  =  0;i  <  10;i++)\n\n  {\n\n  printf(\"array[%d]=%d\\n\",i,array[i]);\n\n  }\n\n  return  0;\n\n}\n```\n\n  - 法二：通过换下标\n```c\n #include<stdio.h>\n\nint  main()\n\n{\n\nint  array[10]  =  {1,2,3,4,5,6,7,8,9,0};\n\nint  i;\n\n  int  min  =  0;//数组的最小下标\n\n  int  max  =  9;//数组的最大下标\n\n  while(min  <max)\n\n  {\n\n  int  tmp  =  array[min];\n\n  array[min]  =  array[max];\n\n  array[max]  =tmp;\n\n  min++;\n\n  max--;\n\n  }\n\n  for(i  =  0;i  <  10;i++)\n\n  {\n\n  printf(\"array[%d]=%d\\n\",i,array[i]);\n\n  }\n\n  return  0;\n\n}\n\n```\n\n**9.水仙花数**\n查找100都1000之间的水仙花数；\n```c\n#include<stdio.h>\n\nint  main()\n\n{\n\n  int  i;\n\n  for(i  =  100;  i  <  1000;i++)\n\n  {\n\n  int  i1  =  i%10;\n\n  int  i2  =  i/10%10;\n\n  int  i3  =  i/100;\n\n  if(i1*i1*i1  +  i2*i2*i2  +  i3*i3*i3  ==  i)\n\n  {\n\n  printf(\"%d\\n\",i);\n\n  }\n\n  }\n\n  return  0;\n\n}\n```\n\n\n\n**10.求一个数组中所有奇数元素之和**\n```c\n#include<stdio.h>\n\nint  main()\n\n{\n\n  int  array[10]  =  {1,3,4,7,8,0,9};\n\n  int  i;\n\n  int  sum  =  0;\n\n  printf(\"The  odd  numbers  in  the  array  are  as  follows:\\n\");\n\n  for(i  =  0;  i  <  10;i++)\n\n  {\n\n  if(array[i]  %  2  !=  0)\n\n  //if(array[i]%  2  ==  1)\n\n  {\n\n  sum  +=  array[i];\n\n  printf(\"array[%d]  =  %d\\n\",i,array[i]);\n\n  }\n\n  }\n\n  printf(\"sum  =  %d\\n\",sum);\n\n  return  0;\n\n}\n```\n\n**11.求3-100中的素数**\n\n==~~程序有问题~~==\n注：素数：除了1和本身均不能被任何数整除；(也就是相当于不能被2到i-1之间的任何数整除)\n```c\n#include<stdio.h>\n\nint  main()\n\n{\n\n  int  i;\n\n  int  j;\n\n  int  status  =  0;\n\n  for(i  =  3;i  <  101;i++)\n\n  {\n\n  for(j  =  2;j  <  i;j++)\n\n  {\n\n  if((i%j  )==  0)\n\n  {\n\n  status  =  1;\n\n  break;\n\n  }\n\n  }\n\n  if(status  ==  0)\n\n  {\n\n  printf(\"%d\\n\",i);\n\n  }\n\n  }\n\n  return  0;\n\n}\n```\n![素数]($resource/%E7%B4%A0%E6%95%B0.png)\n\n\n\n\n\n\n\n\n\n\n\n\n\n# 二维数组\n可以近似理解为表格；\n\n**1.二维数组的定义**\n\n```c\n#include<stdio.h>\n\nint main()\n{\n\n//先定义后赋值\n  int array[2][3];//定义了一个二维数组，相当于有两个array[3] \n  array[0][0] = 0;//给第0行第0列赋值\n  array[1][2] = 0;//给第1行第2列赋值\n\n//定义的同时进行赋值\n  int a[3][4] = {{1,2,3,4,},{5,6,7,8},{9,10,11,12}};\n  int a[3][4] = {0};//将二维数组中所有值全部置0\n  \n  return 0;\n}\n```\n\n**2.数组大小**\n\n```c\nint main()\n{\n  int array[2][3] = {{1,2,3},{4,5,6}};\n  printf(\"%d\\n\",sizeof(array));//整个数组的大小为24\n  printf(\"%d\\n\",sizeof(array[0])); //相当于第0行的大小，为12\n  printf(\"%d\\n\",sizeof(array[0][0]));//相当于第0行第0列元素的大小，为4\n return 0;\n}\n```\n\n**3.数组的值输出**\n\n==注意printf的位置==\n\n```c\n#include<stdio.h>\n\nint  main()\n\n{\n\n  int  array[2][3]  =  {{1,2,3},{4,5,6}};\n\n  int  i,j;\n\n  for(i  =  0;  i  <  2;i++)\n\n  {\n\n  for(j  =  0;  j  <  3;j++)\n\n  {\n\n  printf(\"array[%d][%d]=  %d\\n\",i,j,array[i][j]);\n\n  }\n\n  }\n\n  return  0;\n\n}\n```\n\n\n**4.求一个二维数组的每行每列的和**\n\n==注意printf的位置==\n每行的和：\n```c\nint main()\n{\n  int array[3][5] = {{1,3,4,5,9},{4,9,5,0,8},{9,3,4,23,4}};\n  int i,j;\n  for(i = 0; i <3;i++)\n  {\n    int sum = 0;\n    for(j = 0;j < 5;j++)\n    {\n      sum += array[i][j];\n    }\n    printf(\"%d\\n\",sum);\n  }\n  return 0;\n}\n```\n\n每列的和：\n\n```c\nint main()\n{\n   int array[3][5] = {{1,3,4,5,9},{4,9,5,0,8},{9,3,4,23,4}};\n   int i,j;\n   for(j = 0; j < 5; j++);\n   {\n     int sum = 0;\n     for(i = 0; i < 3;i++)\n     {\n       sum +=array[i][j];\n     }\n   printf(\"%d\\n\",array[i][j]);\n   }\n  return 0;\n}\n```\n\n\n**5.冒泡排序**\n```c\nint main()\n{\n  int array[10] = {1,4,8,0,9,34,98,100,5,3};\n  int i;\n  int j;\n  for(i = 0;i < 10;i++)\n    {\n      for(j = 1; j < 10-i;j++)\n      {\n        if(array[j-1] >array[j])\n          {\n            int tmp;\n            tmp = array[j];\n            array[j] = array[j-1];\n            array[j-1] = tmp;\n          }\n      }\n    }\n    for(i = 0;i < 10;i++)\n    {\n    printf(\"array[%d] = %d\\n\",i,array[i]);\n    }\n  return 0;\n}\n```\n\n\n\n\n\n\n\n\n",[[1538568209213,["gjx16@GJXAIOU",[[1,51,"="]],[51,51],[52,52]]],[1538568210923,["gjx16@GJXAIOU",[[-1,51,"="]],[52,52],[51,51]]],[1538568211882,["gjx16@GJXAIOU",[[1,53,"\n"]],[51,51],[52,52]]],[1538568212810,["gjx16@GJXAIOU",[[1,52,"===="]],[52,52],[54,54]]],[1538568223093,["gjx16@GJXAIOU",[[1,54,"笔记的day3和day4 "]],[54,54],[67,67]]],[1538568225704,["gjx16@GJXAIOU",[[-1,66," "]],[67,67],[66,66]]],[1538568226910,["gjx16@GJXAIOU",[[1,66,"b"]],[66,66],[67,67]]],[1538568227853,["gjx16@GJXAIOU",[[-1,66,"b"]],[67,67],[66,66]]],[1538568235782,["gjx16@GJXAIOU",[[1,66,"本身即为孔雀"]],[66,66],[72,72]]],[1538568236898,["gjx16@GJXAIOU",[[-1,70,"孔雀"]],[72,72],[70,70]]],[1538568241671,["gjx16@GJXAIOU",[[1,70,"空缺"]],[70,70],[72,72]]],[1538568556184,["gjx16@GJXAIOU",[[1,325,"程序输出结果："]],[325,325],[332,332]]],[1538568557273,["gjx16@GJXAIOU",[[1,333,"\n"]],[332,332],[333,333]]],[1538568560494,["gjx16@GJXAIOU",[[1,333,"`#include<stdio.h>\n\nint main()\n{\n  int array[10];  //定义了一个数组，数组名为array，里面有十个元素,从0-9；\n\n  array[0] = 20;\n  array[9] = 100;\n\n  printf(\"%d\\n\",array[0]);\n  printf(\"%d\\n\",sizeof(array));//一个整数四个字节，所以这里显示是40\n  \n  return 0;\n}"]],[333,333],[550,550]]],[1538568570142,["gjx16@GJXAIOU",[[-1,333,"`#include<stdio.h>\n\nint main()\n{\n  int array[10];  //定义了一个数组，数组名为array，里面有十个元素,从0-9；\n\n  array[0] = 20;\n  array[9] = 100;\n\n  printf(\"%d\\n\",array[0]);\n  printf(\"%d\\n\",sizeof(array));//一个整数四个字节，所以这里显示是40\n  \n  return 0;\n}"]],[550,550],[333,333]]],[1538568583423,["gjx16@GJXAIOU",[[1,333,"`20\n40\n"]],[333,333],[340,340]]],[1538568585737,["gjx16@GJXAIOU",[[1,336,"`"]],[336,336],[337,337]]],[1538568587262,["gjx16@GJXAIOU",[[1,338,"`"]],[338,338],[339,339]]],[1538568587812,["gjx16@GJXAIOU",[[1,341,"`"]],[341,341],[342,342]]],[1538568622170,["gjx16@GJXAIOU",[[1,381,"\n"]],[380,380],[381,381]]],[1538568622950,["gjx16@GJXAIOU",[[1,381,"---"]],[381,381],[384,384]]],[1538568624383,["gjx16@GJXAIOU",[[1,385,"\n"]],[384,384],[385,385]]],[1538568647186,["gjx16@GJXAIOU",[[1,478,"  \n  "]],[475,475],[480,480]]],[1538568651952,["gjx16@GJXAIOU",[[1,480,"printf();"]],[480,480],[489,489]]],[1538568660592,["gjx16@GJXAIOU",[[1,487,"a"]],[487,487],[488,488]]],[1538568662116,["gjx16@GJXAIOU",[[-1,487,"a"]],[488,488],[487,487]]],[1538568665168,["gjx16@GJXAIOU",[[1,487,"\"\""]],[487,487],[489,489]]],[1538568672100,["gjx16@GJXAIOU",[[1,488,"array[i]"]],[488,488],[496,496]]],[1538568673468,["gjx16@GJXAIOU",[[-1,494,"i]"]],[496,496],[494,494]]],[1538568684010,["gjx16@GJXAIOU",[[1,494,"%d] = %d\\n"]],[494,494],[504,504]]],[1538568701110,["gjx16@GJXAIOU",[[1,505,",i,array[i]s"]],[505,505],[517,517]]],[1538568711167,["gjx16@GJXAIOU",[[1,406,"\n"]],[405,405],[406,406]]],[1538568711638,["gjx16@GJXAIOU",[[1,406,"#include<stdio.h>"]],[406,406],[423,423]]],[1538568741092,["gjx16@GJXAIOU",[[-1,534,"s"]],[535,535],[534,534]]],[1538568755026,["gjx16@GJXAIOU",[[1,448,"\n  "]],[445,445],[448,448]]],[1538568776126,["gjx16@GJXAIOU",[[1,448,"int array[] = {};"]],[448,448],[465,465]]],[1538568817018,["gjx16@GJXAIOU",[[1,458,"10"]],[458,458],[460,460]]],[1538568820604,["gjx16@GJXAIOU",[[-1,461," = {};"]],[467,467],[461,461]]],[1538568821856,["gjx16@GJXAIOU",[[1,461,";"]],[461,461],[462,462]]],[1538569327973,["gjx16@GJXAIOU",[[1,577,"\n"]],[575,575],[576,576]]],[1538569329378,["gjx16@GJXAIOU",[[1,578,"\n"]],[576,576],[577,577]]],[1538569331244,["gjx16@GJXAIOU",[[1,577,"chengxu"]],[577,577],[584,584]]],[1538569332992,["gjx16@GJXAIOU",[[-1,577,"chengxu"]],[584,584],[577,577]]],[1538569344745,["gjx16@GJXAIOU",[[1,577,"程序输出结果为：`"]],[577,577],[586,586]]],[1538569345993,["gjx16@GJXAIOU",[[-1,585,"`"]],[586,586],[585,585]]],[1538569346580,["gjx16@GJXAIOU",[[1,587,"\n"]],[585,585],[586,586]]],[1538569349526,["gjx16@GJXAIOU",[[1,586,"array[0] = 0\narray[1] = 1\narray[2] = 2\narray[3] = 3\narray[4] = 4\narray[5] = 5\narray[6] = 6\narray[7] = 7\narray[8] = 8\narray[9] = 9\n\n"]],[586,586],[717,717]]],[1538569354402,["gjx16@GJXAIOU",[[1,586,"`"]],[586,586],[587,587]]],[1538569355624,["gjx16@GJXAIOU",[[1,600,"`"]],[600,600],[601,601]]],[1538569356668,["gjx16@GJXAIOU",[[1,614,"`"]],[614,614],[615,615]]],[1538569357371,["gjx16@GJXAIOU",[[1,628,"`"]],[628,628],[629,629]]],[1538569358246,["gjx16@GJXAIOU",[[1,641,"`"]],[641,641],[642,642]]],[1538569360145,["gjx16@GJXAIOU",[[1,655,"`"]],[655,655],[656,656]]],[1538569367481,["gjx16@GJXAIOU",[[1,669,"`"]],[669,669],[670,670]]],[1538569368034,["gjx16@GJXAIOU",[[1,683,"`"]],[683,683],[684,684]]],[1538569368480,["gjx16@GJXAIOU",[[1,697,"`"]],[697,697],[698,698]]],[1538569368968,["gjx16@GJXAIOU",[[1,711,"`"]],[711,711],[712,712]]],[1538569369580,["gjx16@GJXAIOU",[[1,725,"`"]],[725,725],[726,726]]],[1538569372586,["gjx16@GJXAIOU",[[1,575,"`"]],[572,572],[573,573]]],[1538569374617,["gjx16@GJXAIOU",[[-1,577,"\n"]],[577,577],[576,576]]],[1538569377768,["gjx16@GJXAIOU",[[1,577,"\n"]],[576,576],[577,577]]],[1538569378408,["gjx16@GJXAIOU",[[1,578,"\n"]],[577,577],[578,578]]],[1538569380256,["gjx16@GJXAIOU",[[-1,578,"\n"]],[578,578],[577,577]]],[1538569380791,["gjx16@GJXAIOU",[[-1,577,"\n"]],[577,577],[576,576]]],[1538569381397,["gjx16@GJXAIOU",[[1,577,"\n"]],[576,576],[577,577]]],[1538569382040,["gjx16@GJXAIOU",[[-1,575,"`"]],[573,573],[572,572]]],[1538569385309,["gjx16@GJXAIOU",[[1,599,"`"]],[599,599],[600,600]]],[1538569386139,["gjx16@GJXAIOU",[[1,613,"`"]],[613,613],[614,614]]],[1538569388351,["gjx16@GJXAIOU",[[-1,613,"`"]],[614,614],[613,613]]],[1538569389405,["gjx16@GJXAIOU",[[1,614,"`"]],[614,614],[615,615]]],[1538569390433,["gjx16@GJXAIOU",[[1,629,"`"]],[629,629],[630,630]]],[1538569394453,["gjx16@GJXAIOU",[[1,646,"`"]],[646,646],[647,647]]],[1538569395331,["gjx16@GJXAIOU",[[1,661,"`"]],[661,661],[662,662]]],[1538569396119,["gjx16@GJXAIOU",[[1,676,"`"]],[676,676],[677,677]]],[1538569396983,["gjx16@GJXAIOU",[[1,691,"`"]],[691,691],[692,692]]],[1538569397704,["gjx16@GJXAIOU",[[1,706,"`"]],[706,706],[707,707]]],[1538569398262,["gjx16@GJXAIOU",[[1,721,"`"]],[721,721],[722,722]]],[1538569432504,["gjx16@GJXAIOU",[[1,737,"="]],[737,737],[738,738]]],[1538569433978,["gjx16@GJXAIOU",[[-1,737,"="]],[738,738],[737,737]]],[1538569435168,["gjx16@GJXAIOU",[[1,737,"---"]],[737,737],[740,740]]],[1538569578308,["gjx16@GJXAIOU",[[-1,845,"//全部进行赋值"]],[845,853],[845,845]]],[1538569581807,["gjx16@GJXAIOU",[[1,807,"\n  "]],[807,807],[810,810]]],[1538569583231,["gjx16@GJXAIOU",[[1,807,"//全部进行赋值"]],[807,807],[815,815]]],[1538569587167,["gjx16@GJXAIOU",[[1,807,"\n  "]],[807,807],[810,810]]],[1538569591112,["gjx16@GJXAIOU",[[1,812,"1."]],[812,812],[814,814]]],[1538569594743,["gjx16@GJXAIOU",[[-1,899,"//定义一个数组的同时进行赋值初始化,这是部分初始化"]],[899,925],[899,899]]],[1538569596757,["gjx16@GJXAIOU",[[-1,862,"  "],[1,864,"\n"]],[864,864],[863,863]]],[1538569597886,["gjx16@GJXAIOU",[[1,863,"//"]],[863,863],[865,865]]],[1538569600837,["gjx16@GJXAIOU",[[1,863,"  "]],[863,863],[865,865]]],[1538569603329,["gjx16@GJXAIOU",[[1,867,"2.//定义一个数组的同时进行赋值初始化,这是部分初始化"]],[867,867],[895,895]]],[1538569606395,["gjx16@GJXAIOU",[[-1,869,"//"]],[871,871],[869,869]]],[1538569613281,["gjx16@GJXAIOU",[[-1,955,"//将所有元素置为0"]],[955,965],[955,955]]],[1538569615470,["gjx16@GJXAIOU",[[-1,929," "],[1,930,"\n"]],[930,930],[930,930]]],[1538569617575,["gjx16@GJXAIOU",[[1,930,"  //将所有元素置为0"]],[930,930],[942,942]]],[1538569621823,["gjx16@GJXAIOU",[[1,934,"3."]],[934,934],[936,936]]],[1538569629185,["gjx16@GJXAIOU",[[1,935,"-1"]],[935,935],[937,937]]],[1538569632129,["gjx16@GJXAIOU",[[1,976,"3."]],[976,976],[978,978]]],[1538569634647,["gjx16@GJXAIOU",[[-1,977,"."]],[978,978],[977,977]]],[1538569638377,["gjx16@GJXAIOU",[[1,977,"-2."]],[977,977],[980,980]]],[1538569642447,["gjx16@GJXAIOU",[[1,974,"\n  "]],[971,971],[974,974]]],[1538569654290,["gjx16@GJXAIOU",[[-1,1053,"*/"]],[1055,1055],[1053,1053]]],[1538569658794,["gjx16@GJXAIOU",[[-1,776,"/*"]],[778,778],[776,776]]],[1538569659671,["gjx16@GJXAIOU",[[1,776,"//"]],[776,776],[778,778]]],[1538569679176,["gjx16@GJXAIOU",[[1,762,"\n"]],[761,761],[762,762]]],[1538569679713,["gjx16@GJXAIOU",[[1,762,"#include<stdio.h>"]],[762,762],[779,779]]],[1538569691140,["gjx16@GJXAIOU",[[-1,1156,"  "]],[1158,1158],[1156,1156]]],[1538569691480,["gjx16@GJXAIOU",[[-1,1156,"\n"]],[1156,1156],[1155,1155]]],[1538569695633,["gjx16@GJXAIOU",[[-1,1110,"  "]],[1112,1112],[1110,1110]]],[1538569696024,["gjx16@GJXAIOU",[[-1,1110,"\n"]],[1110,1110],[1109,1109]]],[1538569703401,["gjx16@GJXAIOU",[[1,1177,"\n"]],[1176,1176],[1177,1177]]],[1538569704294,["gjx16@GJXAIOU",[[1,1177,"---"]],[1177,1177],[1180,1180]]],[1538569772402,["gjx16@GJXAIOU",[[1,1409,"{\n     "]],[1409,1409],[1416,1416]]],[1538569775804,["gjx16@GJXAIOU",[[1,1417,"  "]],[1416,1416],[1418,1418]]],[1538569782192,["gjx16@GJXAIOU",[[1,1437,"      \n  "]],[1434,1434],[1443,1443]]],[1538569782954,["gjx16@GJXAIOU",[[1,1443,"}"]],[1443,1443],[1444,1444]]],[1538569788546,["gjx16@GJXAIOU",[[-1,1440,"   "]],[1443,1443],[1440,1440]]],[1538569801018,["gjx16@GJXAIOU",[[1,1305,"\n  \n  "]],[1305,1305],[1311,1311]]],[1538569808244,["gjx16@GJXAIOU",[[1,1238,"\n"]],[1237,1237],[1238,1238]]],[1538569814228,["gjx16@GJXAIOU",[[1,1238,"#include<>"]],[1238,1238],[1248,1248]]],[1538569817623,["gjx16@GJXAIOU",[[1,1247,"stf"]],[1247,1247],[1250,1250]]],[1538569818383,["gjx16@GJXAIOU",[[-1,1249,"f"]],[1250,1250],[1249,1249]]],[1538569821563,["gjx16@GJXAIOU",[[1,1249,"dio.h"]],[1249,1249],[1254,1254]]],[1538569841156,["gjx16@GJXAIOU",[[1,1518,"\n"]],[1516,1516],[1517,1517]]],[1538569863425,["gjx16@GJXAIOU",[[1,1517,"程序运行结果：`max = 7`"]],[1517,1517],[1533,1533]]],[1538569865698,["gjx16@GJXAIOU",[[1,1535,"\n"]],[1533,1533],[1534,1534]]],[1538569866481,["gjx16@GJXAIOU",[[1,1536,"\n"]],[1534,1534],[1535,1535]]],[1538569867473,["gjx16@GJXAIOU",[[1,1535,"---"]],[1535,1535],[1538,1538]]],[1538569893585,["gjx16@GJXAIOU",[[1,1695,"\n  "]],[1695,1695],[1698,1698]]]],null,"gjx16@GJXAIOU"],["ad1c9a7f-73e2-4522-b684-353dff660ae2",1538570034476,"---\ndate:'2018-9-9'\nnandian:循环的嵌套\n---\n\n# day5\n@toc\n\n==笔记的day3和day4本身即为空缺==\n\n## 一、一维数组\n\n**1.定义数组**\n\n```c\n#include<stdio.h>\n\nint main()\n{\n  int array[10];  //定义了一个数组，数组名为array，里面有十个元素,从0-9；\n\n  array[0] = 20;\n  array[9] = 100;\n\n  printf(\"%d\\n\",array[0]);\n  printf(\"%d\\n\",sizeof(array));//一个整数四个字节，所以这里显示是40\n  \n  return 0;\n}\n```\n程序输出结果：\n`20`\n`40`\n\n数组本质就是：在内存中就是一个连续的空间；而且每个元素的类型是一样的；\n\n---\n\n**2.连续的赋值操作**\n\n```c\n#include<stdio.h>\nint main()\n{\n  int i;\n  int array[10];\n  for(i = 0;i < 10;i++)\n  {\n    array[i] = i;  \n    printf(\"array[%d] = %d\\n\",i,array[i]);\n  }\n  return 0;\n}\n```\n\n程序输出结果为：\n`array[0] = 0`\n`array[1] = 1`\n`array[2] = 2`\n`array[3] = 3`\n`array[4] = 4`\n`array[5] = 5`\n`array[6] = 6`\n`array[7] = 7`\n`array[8] = 8`\n`array[9] = 9`\n\n---\n\n**3.数组的初始化**\n\n\n```c\n#include<stdio.h>\nint main()\n{\n\n//数组初始化的三种方式(挨个赋值，部分赋值，统一赋值)\n  \n  //1.全部进行赋值\n  int array[10] = {1,1,3,5,5,6,9,6,8,5};\n\n  //2.定义一个数组的同时进行赋值初始化,这是部分初始化\n  int array[10] = {100,2,3,3,4,9};\n\n  //3-1.将所有元素置为0\n  int array[10] = {0};  \n  \n  //3-2.另一种置为0 的方法\n  int i;\n  for(i = 0; i < 10; i++)\n {\n   array[i] = 0;\n }\n\n\n\n  int i;\n  for(i = 0;i < 10;i++)\n  {\n    printf(\"array[%d] = %d\\n\",i,array[i]);\n  }\n  return 0;\n}\n\n```\n\n---\n**4.求数组中最大元素的值**\n\n将数组中的第一个元素默认设置成最大的元素，然后让各个元素进行比较；\n```c\n#include<stdio.h>\nint main()\n{\n  int array[5] = {2,3,5,6,7};\n  int max = array[0];\n  \n  \n  int i;\n  for(i = 1;i < 5;i++) //想找最大的先遍历一遍,因为第一的元素默认设置成最大值，所以这里的循环从1开始；\n  {\n    if(max < array[i])\n     {\n        max = array[i];\n     }\n  }\n\n  printf(\"max = %d\\n\",max);\n\nreturn 0;\n\n}\n```\n程序运行结果：`max = 7`\n\n---\n\n**5.求数组中的最小值，并求出最小值的编号**\n```c\nint main()\n{\n  int array[5] = {2,3,5,6,7};\n  int min = array[0];\n  int index = 0;//在没有遍历数组之前，默认数组的第0号元素就是最小的元素；所以默认的地址也是0；\n  \n  int i;\n  for(i = 1;i < 5;i++) //想找最小的先遍历一遍\n  {\n    if(min > array[i])\n      index = i;\n      min = array[i];\n  }\n\n  printf(\"min = %d,index = %d\\n\",min,index);\n\nreturn 0;\n\n}\n\n\n```\n\n**6.求数组元素和**\n\n```c\n\nint main()\n{\n  int array[10] = {1,2,3,4,5,6,7,8,9,0};\n  int i;\n  int sum = 0;\n  for(i = 0; i < 10; i++)\n  {\n    sum += array[i];\n  }\n\n  printf(\"sum = %d\\n\",sum);\n\n  return 0;\n\n}\n```\n\n**7.打印数组中大于平均值的所有的值与其下标**\n这个程序未确定\n```c\n#include<stdio.h>\n\nint  main()\n\n{\n\n  int  array[10]  =  {1,2,3,4,5,6,7,8,9,0};\n\n  int  i;\n\n  float  aver;\n\n  int  sum  =  0;\n\n  int  index  =  0;\n\n  for(i  =  0;  i  <  10;i++)\n\n  {\n\n  sum  +=array[i];\n\n  }\n\n  aver  =  sum  /10.0;\n\n  printf(\"The  following  elements  are  greater  than  the  average  value  of  the  array.  The  addresses  are:\\n\");\n\n  for(i  =  0;i  <  10;i++)\n\n  {\n\n  if(array[i]  >aver)\n\n  {\n\n  index  =  i;\n\n  printf(\"array[%d]  =  %d,index  =  %d\\n\",i,array[i],index);\n\n  }\n\n  }\n\n}\n```\n\n**8.数组逆置**\n- 实现单个元素的互换\n```c\n#include<stdio.h>\n\nint  main()\n\n{\n\n  int  array[10]  =  {1,2,3,4,5,6,7,8,9,0};\n\n//部分交换\n\n  int  i;\n\n  int  tmp  =  array[0];\n\n  array[0]  =  array[1];\n\n  array[1]  =  tmp;\n\n  for(i  =  0;i  <  10;i++)\n\n  {\n\n  printf(\"array[%d]=%d\\n\",i,array[i]);\n\n  }\n\n  return  0;\n\n}\n\n```\n- 实现数组的前半部分和后半部分的互换\n  - 法一：直接换元素\n```c\n#include<stdio.h>\n\nint  main()\n\n{\n\n  int  array[10]  =  {1,2,3,4,5,6,7,8,9,0};\n\n  int  i;\n\n  for(i  =  0;  i  <=  4;  i++)\n\n  {\n\n  int  tmp  =  array[i];\n\n  array[i]  =  array[9-i];\n\n  array[9-i]  =  tmp;\n\n  }\n\n  for(i  =  0;i  <  10;i++)\n\n  {\n\n  printf(\"array[%d]=%d\\n\",i,array[i]);\n\n  }\n\n  return  0;\n\n}\n```\n\n  - 法二：通过换下标\n```c\n #include<stdio.h>\n\nint  main()\n\n{\n\nint  array[10]  =  {1,2,3,4,5,6,7,8,9,0};\n\nint  i;\n\n  int  min  =  0;//数组的最小下标\n\n  int  max  =  9;//数组的最大下标\n\n  while(min  <max)\n\n  {\n\n  int  tmp  =  array[min];\n\n  array[min]  =  array[max];\n\n  array[max]  =tmp;\n\n  min++;\n\n  max--;\n\n  }\n\n  for(i  =  0;i  <  10;i++)\n\n  {\n\n  printf(\"array[%d]=%d\\n\",i,array[i]);\n\n  }\n\n  return  0;\n\n}\n\n```\n\n**9.水仙花数**\n查找100都1000之间的水仙花数；\n```c\n#include<stdio.h>\n\nint  main()\n\n{\n\n  int  i;\n\n  for(i  =  100;  i  <  1000;i++)\n\n  {\n\n  int  i1  =  i%10;\n\n  int  i2  =  i/10%10;\n\n  int  i3  =  i/100;\n\n  if(i1*i1*i1  +  i2*i2*i2  +  i3*i3*i3  ==  i)\n\n  {\n\n  printf(\"%d\\n\",i);\n\n  }\n\n  }\n\n  return  0;\n\n}\n```\n\n\n\n**10.求一个数组中所有奇数元素之和**\n```c\n#include<stdio.h>\n\nint  main()\n\n{\n\n  int  array[10]  =  {1,3,4,7,8,0,9};\n\n  int  i;\n\n  int  sum  =  0;\n\n  printf(\"The  odd  numbers  in  the  array  are  as  follows:\\n\");\n\n  for(i  =  0;  i  <  10;i++)\n\n  {\n\n  if(array[i]  %  2  !=  0)\n\n  //if(array[i]%  2  ==  1)\n\n  {\n\n  sum  +=  array[i];\n\n  printf(\"array[%d]  =  %d\\n\",i,array[i]);\n\n  }\n\n  }\n\n  printf(\"sum  =  %d\\n\",sum);\n\n  return  0;\n\n}\n```\n\n**11.求3-100中的素数**\n\n==~~程序有问题~~==\n注：素数：除了1和本身均不能被任何数整除；(也就是相当于不能被2到i-1之间的任何数整除)\n```c\n#include<stdio.h>\n\nint  main()\n\n{\n\n  int  i;\n\n  int  j;\n\n  int  status  =  0;\n\n  for(i  =  3;i  <  101;i++)\n\n  {\n\n  for(j  =  2;j  <  i;j++)\n\n  {\n\n  if((i%j  )==  0)\n\n  {\n\n  status  =  1;\n\n  break;\n\n  }\n\n  }\n\n  if(status  ==  0)\n\n  {\n\n  printf(\"%d\\n\",i);\n\n  }\n\n  }\n\n  return  0;\n\n}\n```\n![素数]($resource/%E7%B4%A0%E6%95%B0.png)\n\n\n\n\n\n\n\n\n\n\n\n\n\n# 二维数组\n可以近似理解为表格；\n\n**1.二维数组的定义**\n\n```c\n#include<stdio.h>\n\nint main()\n{\n\n//先定义后赋值\n  int array[2][3];//定义了一个二维数组，相当于有两个array[3] \n  array[0][0] = 0;//给第0行第0列赋值\n  array[1][2] = 0;//给第1行第2列赋值\n\n//定义的同时进行赋值\n  int a[3][4] = {{1,2,3,4,},{5,6,7,8},{9,10,11,12}};\n  int a[3][4] = {0};//将二维数组中所有值全部置0\n  \n  return 0;\n}\n```\n\n**2.数组大小**\n\n```c\nint main()\n{\n  int array[2][3] = {{1,2,3},{4,5,6}};\n  printf(\"%d\\n\",sizeof(array));//整个数组的大小为24\n  printf(\"%d\\n\",sizeof(array[0])); //相当于第0行的大小，为12\n  printf(\"%d\\n\",sizeof(array[0][0]));//相当于第0行第0列元素的大小，为4\n return 0;\n}\n```\n\n**3.数组的值输出**\n\n==注意printf的位置==\n\n```c\n#include<stdio.h>\n\nint  main()\n\n{\n\n  int  array[2][3]  =  {{1,2,3},{4,5,6}};\n\n  int  i,j;\n\n  for(i  =  0;  i  <  2;i++)\n\n  {\n\n  for(j  =  0;  j  <  3;j++)\n\n  {\n\n  printf(\"array[%d][%d]=  %d\\n\",i,j,array[i][j]);\n\n  }\n\n  }\n\n  return  0;\n\n}\n```\n\n\n**4.求一个二维数组的每行每列的和**\n\n==注意printf的位置==\n每行的和：\n```c\nint main()\n{\n  int array[3][5] = {{1,3,4,5,9},{4,9,5,0,8},{9,3,4,23,4}};\n  int i,j;\n  for(i = 0; i <3;i++)\n  {\n    int sum = 0;\n    for(j = 0;j < 5;j++)\n    {\n      sum += array[i][j];\n    }\n    printf(\"%d\\n\",sum);\n  }\n  return 0;\n}\n```\n\n每列的和：\n\n```c\nint main()\n{\n   int array[3][5] = {{1,3,4,5,9},{4,9,5,0,8},{9,3,4,23,4}};\n   int i,j;\n   for(j = 0; j < 5; j++);\n   {\n     int sum = 0;\n     for(i = 0; i < 3;i++)\n     {\n       sum +=array[i][j];\n     }\n   printf(\"%d\\n\",array[i][j]);\n   }\n  return 0;\n}\n```\n\n\n**5.冒泡排序**\n```c\nint main()\n{\n  int array[10] = {1,4,8,0,9,34,98,100,5,3};\n  int i;\n  int j;\n  for(i = 0;i < 10;i++)\n    {\n      for(j = 1; j < 10-i;j++)\n      {\n        if(array[j-1] >array[j])\n          {\n            int tmp;\n            tmp = array[j];\n            array[j] = array[j-1];\n            array[j-1] = tmp;\n          }\n      }\n    }\n    for(i = 0;i < 10;i++)\n    {\n    printf(\"array[%d] = %d\\n\",i,array[i]);\n    }\n  return 0;\n}\n```\n\n\n\n\n\n\n\n\n",[[1538570024397,["gjx16@GJXAIOU",[[1,1743,"  "]],[1742,1742],[1744,1744]]],[1538570028140,["gjx16@GJXAIOU",[[1,1751,"  "]],[1751,1751],[1753,1753]]],[1538570030744,["gjx16@GJXAIOU",[[1,1813,"  "]],[1813,1813],[1815,1815]]],[1538570041268,["gjx16@GJXAIOU",[[1,1570,"\n"]],[1569,1569],[1570,1570]]],[1538570054393,["gjx16@GJXAIOU",[[1,1570,"#include<>"]],[1570,1570],[1580,1580]]],[1538570059266,["gjx16@GJXAIOU",[[1,1579,"stdio.h"]],[1579,1579],[1586,1586]]],[1538570079512,["gjx16@GJXAIOU",[[1,1902,"\n"]],[1900,1900],[1901,1901]]],[1538570081092,["gjx16@GJXAIOU",[[1,1901,"cheng"]],[1901,1901],[1906,1906]]],[1538570082252,["gjx16@GJXAIOU",[[-1,1901,"cheng"]],[1906,1906],[1901,1901]]],[1538570113746,["gjx16@GJXAIOU",[[1,1901,"程序输出结果：`min = 7,index = 0"]],[1901,1901],[1926,1926]]],[1538570160119,["gjx16@GJXAIOU",[[-1,1619,"2"]],[1620,1620],[1619,1619]]],[1538570160798,["gjx16@GJXAIOU",[[1,1619,"3"]],[1619,1619],[1620,1620]]],[1538570162181,["gjx16@GJXAIOU",[[-1,1619,"3"]],[1620,1620],[1619,1619]]],[1538570162889,["gjx16@GJXAIOU",[[1,1619,"6"]],[1619,1619],[1620,1620]]],[1538570209126,["gjx16@GJXAIOU",[[-1,1778,">"]],[1779,1779],[1778,1778]]],[1538570209902,["gjx16@GJXAIOU",[[1,1778,"<"]],[1778,1778],[1779,1779]]],[1538570232227,["gjx16@GJXAIOU",[[-1,1778,"<"]],[1779,1779],[1778,1778]]],[1538570232803,["gjx16@GJXAIOU",[[1,1778,">"]],[1778,1778],[1779,1779]]],[1538570244139,["gjx16@GJXAIOU",[[1,1796,"  "]],[1795,1795],[1797,1797]]],[1538570246408,["gjx16@GJXAIOU",[[1,1797,"{"]],[1797,1797],[1798,1798]]],[1538570249773,["gjx16@GJXAIOU",[[1,1816,"  "]],[1816,1816],[1818,1818]]],[1538570252747,["gjx16@GJXAIOU",[[1,1798,"\n       "]],[1798,1798],[1806,1806]]],[1538570254981,["gjx16@GJXAIOU",[[1,1807,"  "]],[1806,1806],[1808,1808]]],[1538570256010,["gjx16@GJXAIOU",[[1,1828,"  "]],[1828,1828],[1830,1830]]],[1538570260313,["gjx16@GJXAIOU",[[1,1850,"      \n    "]],[1845,1845],[1856,1856]]],[1538570261636,["gjx16@GJXAIOU",[[1,1856,"}"]],[1856,1856],[1857,1857]]],[1538570265457,["gjx16@GJXAIOU",[[-1,1853,"   "]],[1856,1856],[1853,1853]]],[1538570293845,["gjx16@GJXAIOU",[[-1,1941,"7"]],[1942,1942],[1941,1941]]],[1538570294372,["gjx16@GJXAIOU",[[1,1941,"3"]],[1941,1941],[1942,1942]]],[1538570296671,["gjx16@GJXAIOU",[[-1,1951,"0"]],[1952,1952],[1951,1951]]],[1538570298485,["gjx16@GJXAIOU",[[1,1951,"1`"]],[1951,1951],[1953,1953]]],[1538570301781,["gjx16@GJXAIOU",[[1,1955,"\n"]],[1953,1953],[1954,1954]]],[1538570301971,["gjx16@GJXAIOU",[[1,1956,"\n"]],[1954,1954],[1955,1955]]],[1538570302635,["gjx16@GJXAIOU",[[1,1955,"---"]],[1955,1955],[1958,1958]]],[1538570547716,["gjx16@GJXAIOU",[[1,1979,"3include《》"]],[1979,1979],[1989,1989]]],[1538570550244,["gjx16@GJXAIOU",[[-1,1979,"3include《》"]],[1989,1989],[1979,1979]]],[1538570555933,["gjx16@GJXAIOU",[[1,1979,"#include<."]],[1979,1979],[1989,1989]]],[1538570556875,["gjx16@GJXAIOU",[[-1,1988,"."]],[1989,1989],[1988,1988]]],[1538570557486,["gjx16@GJXAIOU",[[1,1988,">"]],[1988,1988],[1989,1989]]],[1538570562865,["gjx16@GJXAIOU",[[1,1988,"stdio.h"]],[1988,1988],[1995,1995]]],[1538570582429,["gjx16@GJXAIOU",[[1,2180,"\n"]],[2178,2178],[2179,2179]]],[1538570584574,["gjx16@GJXAIOU",[[1,2179,"chen"]],[2179,2179],[2183,2183]]],[1538570585414,["gjx16@GJXAIOU",[[-1,2179,"chen"]],[2183,2183],[2179,2179]]],[1538570600636,["gjx16@GJXAIOU",[[1,2179,"程序运行结果；`sum = 45`"]],[2179,2179],[2196,2196]]],[1538570607774,["gjx16@GJXAIOU",[[-1,2185,"；"]],[2186,2186],[2185,2185]]],[1538570608996,["gjx16@GJXAIOU",[[1,2185,":"]],[2185,2185],[2186,2186]]],[1538570611784,["gjx16@GJXAIOU",[[1,2198,"\n"]],[2196,2196],[2197,2197]]],[1538570611972,["gjx16@GJXAIOU",[[1,2199,"\n"]],[2197,2197],[2198,2198]]],[1538570612694,["gjx16@GJXAIOU",[[1,2198,"---"]],[2198,2198],[2201,2201]]],[1538570682352,["gjx16@GJXAIOU",[[-1,2276,"\n"]],[2276,2276],[2275,2275]]],[1538570684610,["gjx16@GJXAIOU",[[-1,2273,"\n"]],[2273,2273],[2272,2272]]],[1538570686777,["gjx16@GJXAIOU",[[-1,2319,"\n"]],[2319,2319],[2318,2318]]],[1538570689667,["gjx16@GJXAIOU",[[-1,2329,"\n"]],[2329,2329],[2328,2328]]],[1538570690496,["gjx16@GJXAIOU",[[-1,2344,"\n"]],[2344,2344],[2343,2343]]],[1538570691244,["gjx16@GJXAIOU",[[-1,2362,"\n"]],[2362,2362],[2361,2361]]],[1538570699123,["gjx16@GJXAIOU",[[1,2321,"\n  "]],[2321,2321],[2324,2324]]],[1538570701511,["gjx16@GJXAIOU",[[-1,2385,"\n"]],[2385,2385],[2384,2384]]],[1538570702653,["gjx16@GJXAIOU",[[-1,2415,"\n"]],[2415,2415],[2414,2414]]],[1538570705626,["gjx16@GJXAIOU",[[1,2417,"  "]],[2417,2417],[2419,2419]]],[1538570708205,["gjx16@GJXAIOU",[[-1,2421,"\n"]],[2421,2421],[2420,2420]]],[1538570710613,["gjx16@GJXAIOU",[[1,2423,"    "]],[2422,2422],[2426,2426]]],[1538570714002,["gjx16@GJXAIOU",[[-1,2444,"\n"]],[2444,2444],[2443,2443]]],[1538570716860,["gjx16@GJXAIOU",[[1,2446,"  "]],[2446,2446],[2448,2448]]],[1538570727774,["gjx16@GJXAIOU",[[-1,2624,"\n"]],[2624,2624],[2623,2623]]],[1538570728674,["gjx16@GJXAIOU",[[-1,2628,"\n"]],[2628,2628],[2627,2627]]],[1538570730454,["gjx16@GJXAIOU",[[1,2630,"  "]],[2629,2629],[2631,2631]]],[1538570732372,["gjx16@GJXAIOU",[[-1,2652,"\n"]],[2652,2652],[2651,2651]]],[1538570733596,["gjx16@GJXAIOU",[[-1,2656,"\n"]],[2656,2656],[2655,2655]]],[1538570734603,["gjx16@GJXAIOU",[[-1,2671,"\n"]],[2671,2671],[2670,2670]]],[1538570738904,["gjx16@GJXAIOU",[[1,2654,"    "]],[2653,2653],[2657,2657]]],[1538570742090,["gjx16@GJXAIOU",[[1,2662,"      "]],[2662,2662],[2668,2668]]],[1538570744012,["gjx16@GJXAIOU",[[1,2683,"      "]],[2683,2683],[2689,2689]]],[1538570746554,["gjx16@GJXAIOU",[[-1,2749,"\n"]],[2749,2749],[2748,2748]]],[1538570749794,["gjx16@GJXAIOU",[[1,2751,"    "]],[2749,2749],[2753,2753]]],[1538570752528,["gjx16@GJXAIOU",[[-1,2757,"\n"]],[2757,2757],[2756,2756]]],[1538570778713,["gjx16@GJXAIOU",[[-1,2465,"  "]],[2467,2467],[2465,2465]]],[1538570878501,["gjx16@GJXAIOU",[[1,2472,"  \n"]],[2471,2471],[2474,2474]]],[1538570880198,["gjx16@GJXAIOU",[[1,2474,"pritn"]],[2474,2474],[2479,2479]]],[1538570881013,["gjx16@GJXAIOU",[[-1,2478,"n"]],[2479,2479],[2478,2478]]],[1538570883451,["gjx16@GJXAIOU",[[1,2478,"f();"]],[2478,2478],[2482,2482]]],[1538570887109,["gjx16@GJXAIOU",[[1,2480,"\"\""]],[2480,2480],[2482,2482]]],[1538570908917,["gjx16@GJXAIOU",[[1,2481,"the aver of the array id"]],[2481,2481],[2505,2505]]],[1538570909830,["gjx16@GJXAIOU",[[-1,2504,"d"]],[2505,2505],[2504,2504]]],[1538570916281,["gjx16@GJXAIOU",[[1,2504,"s = %d\\n"]],[2504,2504],[2512,2512]]],[1538570922375,["gjx16@GJXAIOU",[[1,2513,",aver"]],[2513,2513],[2518,2518]]],[1538570927956,["gjx16@GJXAIOU",[[1,2521,"  \n"]],[2520,2520],[2523,2523]]],[1538570931870,["gjx16@GJXAIOU",[[1,2523,"return 0;"]],[2523,2523],[2532,2532]]],[1538571156482,["gjx16@GJXAIOU",[[-1,2509,"d"]],[2510,2510],[2509,2509]]],[1538571156845,["gjx16@GJXAIOU",[[1,2509,"f"]],[2509,2509],[2510,2510]]],[1538571171649,["gjx16@GJXAIOU",[[-1,2522," return 0;"]],[2522,2532],[2522,2522]]],[1538571175107,["gjx16@GJXAIOU",[[1,2645,"\n"]],[2644,2644],[2645,2645]]],[1538571213486,["gjx16@GJXAIOU",[[1,2812,"\n"]],[2811,2811],[2812,2812]]],[1538571219515,["gjx16@GJXAIOU",[[1,2812,"  return 0;"]],[2812,2812],[2823,2823]]],[1538571240034,["gjx16@GJXAIOU",[[1,2477,"n"]],[2477,2477],[2478,2478]]],[1538571273156,["gjx16@GJXAIOU",[[1,2832,"\n"]],[2830,2830],[2831,2831]]],[1538571274299,["gjx16@GJXAIOU",[[1,2833,"\n"]],[2831,2831],[2832,2832]]],[1538571275585,["gjx16@GJXAIOU",[[1,2832,"cheng"]],[2832,2832],[2837,2837]]],[1538571276936,["gjx16@GJXAIOU",[[-1,2832,"cheng"]],[2837,2837],[2832,2832]]],[1538571287283,["gjx16@GJXAIOU",[[1,2832,"程序输出的结果为："]],[2832,2832],[2841,2841]]],[1538571288910,["gjx16@GJXAIOU",[[1,2843,"\n"]],[2841,2841],[2842,2842]]],[1538571290140,["gjx16@GJXAIOU",[[1,2842,"the aver of the array is = 4.500000\nThe  following  elements  are  greater  than  the  average  value  of  the  array.  The  addresses  are:\narray[4]  =  5,index  =  4\narray[5]  =  6,index  =  5\narray[6]  =  7,index  =  6\narray[7]  =  8,index  =  7\narray[8]  =  9,index  =  8\n\n"]],[2842,2842],[3119,3119]]],[1538571294686,["gjx16@GJXAIOU",[[1,2842,"`"]],[2842,2842],[2843,2843]]],[1538571297428,["gjx16@GJXAIOU",[[1,2879,"`"]],[2879,2879],[2880,2880]]],[1538571299365,["gjx16@GJXAIOU",[[1,2985,"`"]],[2985,2985],[2986,2986]]],[1538571300426,["gjx16@GJXAIOU",[[1,3013,"`"]],[3013,3013],[3014,3014]]],[1538571301123,["gjx16@GJXAIOU",[[1,3041,"`"]],[3041,3041],[3042,3042]]],[1538571302325,["gjx16@GJXAIOU",[[1,3069,"`"]],[3069,3069],[3070,3070]]],[1538571303084,["gjx16@GJXAIOU",[[1,3097,"`"]],[3097,3097],[3098,3098]]],[1538571309786,["gjx16@GJXAIOU",[[1,3124,"`"]],[3124,3124],[3125,3125]]],[1538571310548,["gjx16@GJXAIOU",[[1,3096,"`"]],[3096,3096],[3097,3097]]],[1538571311202,["gjx16@GJXAIOU",[[1,3068,"`"]],[3068,3068],[3069,3069]]],[1538571311670,["gjx16@GJXAIOU",[[1,3040,"`"]],[3040,3040],[3041,3041]]],[1538571312331,["gjx16@GJXAIOU",[[1,3012,"`"]],[3012,3012],[3013,3013]]],[1538571313350,["gjx16@GJXAIOU",[[1,2984,"`"]],[2984,2984],[2985,2985]]],[1538571314752,["gjx16@GJXAIOU",[[1,2878,"`"]],[2878,2878],[2879,2879]]],[1538571323914,["gjx16@GJXAIOU",[[-1,2229,"这个程序未确定"]],[2236,2236],[2229,2229]]],[1538571324165,["gjx16@GJXAIOU",[[-1,2229,"\n"]],[2229,2229],[2228,2228]]],[1538571330316,["gjx16@GJXAIOU",[[1,3125,"---"]],[3125,3125],[3128,3128]]],[1538571341181,["gjx16@GJXAIOU",[[-1,3282,"\n"]],[3282,3282],[3281,3281]]],[1538571343772,["gjx16@GJXAIOU",[[-1,3256,"\n"]],[3256,3256],[3255,3255]]],[1538571343845,["gjx16@GJXAIOU",[[-1,3254,";"]],[3255,3255],[3254,3254]]],[1538571346525,["gjx16@GJXAIOU",[[-1,3305,"\n"]],[3305,3305],[3304,3304]]],[1538571348202,["gjx16@GJXAIOU",[[-1,3354,"\n"]],[3354,3354],[3353,3353]]],[1538571349146,["gjx16@GJXAIOU",[[-1,3358,"\n"]],[3358,3358],[3357,3357]]],[1538571351112,["gjx16@GJXAIOU",[[1,3360,"  "]],[3360,3360],[3362,3362]]],[1538571353326,["gjx16@GJXAIOU",[[-1,3399,"\n"]],[3399,3399],[3398,3398]]],[1538571362988,["gjx16@GJXAIOU",[[-1,3192,"\n"]],[3192,3192],[3191,3191]]],[1538571365763,["gjx16@GJXAIOU",[[-1,3189,"\n"]],[3189,3189],[3188,3188]]],[1538571372103,["gjx16@GJXAIOU",[[-1,3415,"\n"]],[3415,3415],[3414,3414]]],[1538571378699,["gjx16@GJXAIOU",[[-1,3204,"10"]],[3206,3206],[3204,3204]]],[1538571379058,["gjx16@GJXAIOU",[[1,3204,"5"]],[3204,3204],[3205,3205]]],[1538571383027,["gjx16@GJXAIOU",[[1,3222,","]],[3221,3222],[3222,3222]]],[1538571387195,["gjx16@GJXAIOU",[[-1,3221,",,6,7,8,9,0"]],[3221,3232],[3221,3221]]],[1538571391621,["gjx16@GJXAIOU",[[-1,3333,"10"]],[3335,3335],[3333,3333]]],[1538571391909,["gjx16@GJXAIOU",[[1,3333,"5"]],[3333,3333],[3334,3334]]],[1538571395720,["gjx16@GJXAIOU",[[-1,3332," "]],[3332,3332],[3331,3331]]],[1538571397900,["gjx16@GJXAIOU",[[-1,3329," "]],[3330,3330],[3329,3329]]],[1538571440043,["gjx16@GJXAIOU",[[1,3241,";"]],[3241,3241],[3242,3242]]],[1538571453621,["gjx16@GJXAIOU",[[1,3409,"\n"]],[3408,3408],[3409,3409]]],[1538571453769,["gjx16@GJXAIOU",[[1,3410,"\n"]],[3409,3409],[3410,3410]]],[1538571455162,["gjx16@GJXAIOU",[[-1,3410,"\n"]],[3410,3410],[3409,3409]]],[1538571457826,["gjx16@GJXAIOU",[[1,3409,"c"]],[3409,3409],[3410,3410]]],[1538571458401,["gjx16@GJXAIOU",[[-1,3409,"c"]],[3410,3410],[3409,3409]]],[1538571460982,["gjx16@GJXAIOU",[[1,3409,"程序"]],[3409,3409],[3411,3411]]],[1538571466093,["gjx16@GJXAIOU",[[1,3411,"运行结果为："]],[3411,3411],[3417,3417]]],[1538571467496,["gjx16@GJXAIOU",[[1,3418,"\n"]],[3417,3417],[3418,3418]]],[1538571468354,["gjx16@GJXAIOU",[[1,3418,"array[0]=2\narray[1]=1\narray[2]=3\narray[3]=4\narray[4]=5"]],[3418,3418],[3472,3472]]],[1538571472686,["gjx16@GJXAIOU",[[1,3418,"`"]],[3418,3418],[3419,3419]]],[1538571473781,["gjx16@GJXAIOU",[[1,3430,"`"]],[3430,3430],[3431,3431]]],[1538571474629,["gjx16@GJXAIOU",[[1,3442,"`"]],[3442,3442],[3443,3443]]],[1538571475450,["gjx16@GJXAIOU",[[1,3454,"`"]],[3454,3454],[3455,3455]]],[1538571476330,["gjx16@GJXAIOU",[[1,3466,"`"]],[3466,3466],[3467,3467]]],[1538571479637,["gjx16@GJXAIOU",[[1,3477,"`"]],[3477,3477],[3478,3478]]],[1538571480108,["gjx16@GJXAIOU",[[1,3465,"`"]],[3465,3465],[3466,3466]]],[1538571480688,["gjx16@GJXAIOU",[[1,3453,"`"]],[3453,3453],[3454,3454]]],[1538571481253,["gjx16@GJXAIOU",[[1,3441,"`"]],[3441,3441],[3442,3442]]],[1538571481815,["gjx16@GJXAIOU",[[1,3429,"`"]],[3429,3429],[3430,3430]]],[1538571484533,["gjx16@GJXAIOU",[[1,3483,"\n"]],[3482,3482],[3483,3483]]],[1538571495377,["gjx16@GJXAIOU",[[-1,3556,"\n"]],[3556,3556],[3555,3555]]],[1538571496172,["gjx16@GJXAIOU",[[-1,3600,"\n"]],[3600,3600],[3599,3599]]],[1538571497061,["gjx16@GJXAIOU",[[-1,3610,"\n"]],[3610,3610],[3609,3609]]],[1538571497902,["gjx16@GJXAIOU",[[-1,3642,"\n"]],[3642,3643],[3642,3642]]],[1538571498620,["gjx16@GJXAIOU",[[-1,3646,"\n"]],[3647,3647],[3646,3646]]],[1538571500517,["gjx16@GJXAIOU",[[1,3648,"  "]],[3646,3646],[3648,3648]]],[1538571501543,["gjx16@GJXAIOU",[[1,3676,"  "]],[3675,3675],[3677,3677]]],[1538571502595,["gjx16@GJXAIOU",[[1,3706,"  "]],[3705,3705],[3707,3707]]],[1538571504791,["gjx16@GJXAIOU",[[-1,3673,"\n"]],[3673,3673],[3672,3672]]],[1538571505806,["gjx16@GJXAIOU",[[-1,3702,"\n"]],[3702,3702],[3701,3701]]],[1538571506514,["gjx16@GJXAIOU",[[-1,3726,"\n"]],[3726,3726],[3725,3725]]],[1538571508102,["gjx16@GJXAIOU",[[-1,3759,"\n"]],[3759,3759],[3758,3758]]],[1538571510129,["gjx16@GJXAIOU",[[1,3761,"  "]],[3759,3759],[3761,3761]]],[1538571514964,["gjx16@GJXAIOU",[[-1,3765,"\n"]],[3765,3765],[3764,3764]]],[1538571518238,["gjx16@GJXAIOU",[[1,3767,"    "]],[3765,3765],[3769,3769]]],[1538571520400,["gjx16@GJXAIOU",[[-1,3808,"\n"]],[3808,3808],[3807,3807]]],[1538571522540,["gjx16@GJXAIOU",[[1,3810,"  "]],[3808,3808],[3810,3810]]],[1538571613520,["gjx16@GJXAIOU",[[1,3836,"\n"]],[3834,3834],[3835,3835]]],[1538571614582,["gjx16@GJXAIOU",[[1,3835,"cje"]],[3835,3835],[3838,3838]]],[1538571616414,["gjx16@GJXAIOU",[[-1,3835,"cje"]],[3838,3838],[3835,3835]]],[1538571624881,["gjx16@GJXAIOU",[[1,3835,"程序运行结果为："]],[3835,3835],[3843,3843]]],[1538571626829,["gjx16@GJXAIOU",[[1,3845,"\n"]],[3843,3843],[3844,3844]]],[1538571629024,["gjx16@GJXAIOU",[[1,3844,"`array[0]=0\narray[1]=9\narray[2]=8\narray[3]=7\narray[4]=6\narray[5]=5\narray[6]=4\narray[7]=3\narray[8]=2\narray[9]=1"]],[3844,3844],[3954,3954]]],[1538571643350,["gjx16@GJXAIOU",[[1,3856,"`"]],[3856,3856],[3857,3857]]],[1538571644441,["gjx16@GJXAIOU",[[1,3868,"`"]],[3868,3868],[3869,3869]]],[1538571645238,["gjx16@GJXAIOU",[[1,3880,"`"]],[3880,3880],[3881,3881]]],[1538571645966,["gjx16@GJXAIOU",[[1,3892,"`"]],[3892,3892],[3893,3893]]],[1538571646765,["gjx16@GJXAIOU",[[1,3904,"`"]],[3904,3904],[3905,3905]]],[1538571647641,["gjx16@GJXAIOU",[[1,3916,"`"]],[3916,3916],[3917,3917]]],[1538571648394,["gjx16@GJXAIOU",[[1,3928,"`"]],[3928,3928],[3929,3929]]],[1538571649463,["gjx16@GJXAIOU",[[1,3940,"`"]],[3940,3940],[3941,3941]]],[1538571650139,["gjx16@GJXAIOU",[[1,3952,"`"]],[3952,3952],[3953,3953]]],[1538571652708,["gjx16@GJXAIOU",[[1,3963,"`"]],[3963,3963],[3964,3964]]],[1538571653138,["gjx16@GJXAIOU",[[1,3951,"`"]],[3951,3951],[3952,3952]]],[1538571653730,["gjx16@GJXAIOU",[[1,3939,"`"]],[3939,3939],[3940,3940]]],[1538571654107,["gjx16@GJXAIOU",[[1,3927,"`"]],[3927,3927],[3928,3928]]],[1538571654480,["gjx16@GJXAIOU",[[1,3915,"`"]],[3915,3915],[3916,3916]]],[1538571654875,["gjx16@GJXAIOU",[[1,3903,"`"]],[3903,3903],[3904,3904]]],[1538571655217,["gjx16@GJXAIOU",[[1,3891,"`"]],[3891,3891],[3892,3892]]],[1538571655563,["gjx16@GJXAIOU",[[1,3879,"`"]],[3879,3879],[3880,3880]]],[1538571655950,["gjx16@GJXAIOU",[[1,3867,"`"]],[3867,3867],[3868,3868]]],[1538571658142,["gjx16@GJXAIOU",[[1,3855,"`"]],[3855,3855],[3856,3856]]],[1538571676735,["gjx16@GJXAIOU",[[-1,4025,"\n"]],[4025,4025],[4024,4024]]],[1538571680540,["gjx16@GJXAIOU",[[-1,3993," "]],[3994,3994],[3993,3993]]],[1538571680994,["gjx16@GJXAIOU",[[-1,3992,"\n"]],[3993,3993],[3992,3992]]],[1538571682259,["gjx16@GJXAIOU",[[1,3992,"\n"]],[3992,3992],[3993,3993]]],[1538571684792,["gjx16@GJXAIOU",[[-1,4026,"\n"]],[4026,4026],[4025,4025]]],[1538571686290,["gjx16@GJXAIOU",[[1,4026,"  "]],[4026,4026],[4028,4028]]],[1538571687298,["gjx16@GJXAIOU",[[1,4071,"  "]],[4071,4071],[4073,4073]]],[1538571688689,["gjx16@GJXAIOU",[[-1,4070,"\n"]],[4070,4070],[4069,4069]]],[1538571692477,["gjx16@GJXAIOU",[[-1,4108,"\n"]],[4108,4108],[4107,4107]]],[1538571694904,["gjx16@GJXAIOU",[[-1,4155,"\n"]],[4155,4155],[4154,4154]]],[1538571696545,["gjx16@GJXAIOU",[[1,4157," "]],[4155,4156],[4157,4157]]],[1538571697727,["gjx16@GJXAIOU",[[1,4163,"  "]],[4162,4162],[4164,4164]]],[1538571698493,["gjx16@GJXAIOU",[[1,4193,"  "]],[4192,4192],[4194,4194]]],[1538571699145,["gjx16@GJXAIOU",[[1,4165,"  "]],[4163,4163],[4165,4165]]],[1538571700323,["gjx16@GJXAIOU",[[1,4197,"  "]],[4196,4196],[4198,4198]]],[1538571702822,["gjx16@GJXAIOU",[[1,4229,"    "]],[4228,4228],[4232,4232]]],[1538571703627,["gjx16@GJXAIOU",[[1,4254,"  "]],[4253,4253],[4255,4255]]],[1538571705024,["gjx16@GJXAIOU",[[1,4251,"  "]],[4251,4251],[4253,4253]]],[1538571705932,["gjx16@GJXAIOU",[[1,4258,"  "]],[4256,4256],[4258,4258]]],[1538571707465,["gjx16@GJXAIOU",[[1,4270,"    "]],[4269,4269],[4273,4273]]],[1538571709391,["gjx16@GJXAIOU",[[-1,4281,"\n"]],[4281,4281],[4280,4280]]],[1538571711604,["gjx16@GJXAIOU",[[-1,4267,"\n"]],[4267,4267],[4266,4266]]],[1538571714218,["gjx16@GJXAIOU",[[-1,4251,"  "]],[4253,4253],[4251,4251]]],[1538571714637,["gjx16@GJXAIOU",[[-1,4251,"\n"]],[4251,4251],[4250,4250]]],[1538571719132,["gjx16@GJXAIOU",[[-1,4226,"\n"]],[4226,4226],[4225,4225]]],[1538571721275,["gjx16@GJXAIOU",[[-1,4192,"\n"]],[4192,4192],[4191,4191]]],[1538571724808,["gjx16@GJXAIOU",[[-1,4160,"\n"]],[4160,4160],[4159,4159]]],[1538571728812,["gjx16@GJXAIOU",[[1,4276,"  "]],[4276,4276],[4278,4278]]],[1538571730313,["gjx16@GJXAIOU",[[-1,4277," "]],[4278,4278],[4277,4277]]],[1538571735106,["gjx16@GJXAIOU",[[-1,4308,"\n"]],[4308,4308],[4307,4307]]],[1538571737260,["gjx16@GJXAIOU",[[-1,4312,"\n"]],[4312,4312],[4311,4311]]],[1538571738747,["gjx16@GJXAIOU",[[1,4314,"  "]],[4314,4314],[4316,4316]]],[1538571741415,["gjx16@GJXAIOU",[[-1,4353,"\n"]],[4353,4353],[4352,4352]]],[1538571751915,["gjx16@GJXAIOU",[[-1,4148," "]],[4149,4149],[4148,4148]]],[1538571753693,["gjx16@GJXAIOU",[[1,4149," "]],[4149,4149],[4150,4150]]],[1538571797452,["gjx16@GJXAIOU",[[1,4380,"\n"]],[4378,4378],[4379,4379]]],[1538571798337,["gjx16@GJXAIOU",[[1,4379,"程序运行结果为：\n`array[0]=0`\n`array[1]=9`\n`array[2]=8`\n`array[3]=7`\n`array[4]=6`\n`array[5]=5`\n`array[6]=4`\n`array[7]=3`\n`array[8]=2`\n`array[9]=1`"]],[4379,4379],[4517,4517]]],[1538571811227,["gjx16@GJXAIOU",[[1,4519,"\n"]],[4517,4517],[4518,4518]]],[1538571812990,["gjx16@GJXAIOU",[[1,4518,"---"]],[4518,4518],[4521,4521]]],[1538571816455,["gjx16@GJXAIOU",[[1,4518,"\n"]],[4518,4518],[4519,4519]]],[1538572407922,["gjx16@GJXAIOU",[[-1,4604,"\n"]],[4604,4604],[4603,4603]]],[1538572408879,["gjx16@GJXAIOU",[[-1,4590,"\n"]],[4590,4590],[4589,4589]]],[1538572410292,["gjx16@GJXAIOU",[[-1,4592,"\n"]],[4592,4592],[4591,4591]]],[1538572411243,["gjx16@GJXAIOU",[[-1,4636,"\n"]],[4636,4636],[4635,4635]]],[1538572413205,["gjx16@GJXAIOU",[[1,4638,"  "]],[4637,4637],[4639,4639]]],[1538572416578,["gjx16@GJXAIOU",[[1,4645,"  "]],[4644,4644],[4646,4646]]],[1538572418127,["gjx16@GJXAIOU",[[1,4668,"  "]],[4667,4667],[4669,4669]]],[1538572418746,["gjx16@GJXAIOU",[[1,4647,"  "]],[4646,4646],[4648,4648]]],[1538572419468,["gjx16@GJXAIOU",[[1,4672,"  "]],[4669,4669],[4671,4671]]],[1538572420698,["gjx16@GJXAIOU",[[1,4695,"  "]],[4695,4695],[4697,4697]]],[1538572422596,["gjx16@GJXAIOU",[[1,4700,"    "]],[4699,4699],[4703,4703]]],[1538572426305,["gjx16@GJXAIOU",[[-1,4642,"\n"]],[4642,4642],[4641,4641]]],[1538572428548,["gjx16@GJXAIOU",[[-1,4666,"\n"]],[4666,4666],[4665,4665]]],[1538572431076,["gjx16@GJXAIOU",[[-1,4693,"  "]],[4695,4695],[4693,4693]]],[1538572431471,["gjx16@GJXAIOU",[[-1,4693,"\n"]],[4693,4693],[4692,4692]]],[1538572435000,["gjx16@GJXAIOU",[[-1,4718,"\n"]],[4718,4718],[4717,4717]]],[1538572443651,["gjx16@GJXAIOU",[[1,4720,"    \n      "]],[4720,4720],[4724,4724]]],[1538572446265,["gjx16@GJXAIOU",[[-1,4777,"\n"]],[4777,4777],[4776,4776]]],[1538572449617,["gjx16@GJXAIOU",[[1,4779,"      "]],[4779,4779],[4785,4785]]],[1538572451006,["gjx16@GJXAIOU",[[1,4787,"  "]],[4787,4787],[4789,4789]]],[1538572453155,["gjx16@GJXAIOU",[[-1,4787,"  "]],[4789,4789],[4787,4787]]],[1538572453495,["gjx16@GJXAIOU",[[-1,4787,"\n"]],[4787,4787],[4786,4786]]],[1538572458442,["gjx16@GJXAIOU",[[1,4789,"        "]],[4789,4789],[4797,4797]]],[1538572460197,["gjx16@GJXAIOU",[[-1,4815,"\n"]],[4815,4815],[4814,4814]]],[1538572463542,["gjx16@GJXAIOU",[[1,4817,"      "]],[4817,4817],[4823,4823]]],[1538572465528,["gjx16@GJXAIOU",[[-1,4825,"\n"]],[4825,4825],[4824,4824]]],[1538572468089,["gjx16@GJXAIOU",[[1,4827,"  "]],[4827,4827],[4829,4829]]],[1538572470018,["gjx16@GJXAIOU",[[-1,4828," "]],[4829,4829],[4828,4828]]],[1538572500405,["gjx16@GJXAIOU",[[1,4665,"//求个位上的数字"]],[4665,4665],[4674,4674]]],[1538572503272,["gjx16@GJXAIOU",[[1,4701,"、、"]],[4701,4701],[4703,4703]]],[1538572504265,["gjx16@GJXAIOU",[[-1,4701,"、、"]],[4703,4703],[4701,4701]]],[1538572515551,["gjx16@GJXAIOU",[[1,4701,"//求十位上的数字"]],[4701,4701],[4710,4710]]],[1538572518126,["gjx16@GJXAIOU",[[1,4735,"、、"]],[4735,4735],[4737,4737]]],[1538572518984,["gjx16@GJXAIOU",[[-1,4735,"、、"]],[4737,4737],[4735,4735]]],[1538572525519,["gjx16@GJXAIOU",[[1,4735,"//求百威"]],[4735,4735],[4740,4740]]],[1538572526184,["gjx16@GJXAIOU",[[-1,4739,"威"]],[4740,4740],[4739,4739]]],[1538572533674,["gjx16@GJXAIOU",[[1,4739,"位上数字"]],[4739,4739],[4743,4743]]],[1538572634888,["gjx16@GJXAIOU",[[1,4880,"\n"]],[4876,4876],[4877,4877]]],[1538572640639,["gjx16@GJXAIOU",[[1,4877,"程序运行结果；"]],[4877,4877],[4884,4884]]],[1538572642916,["gjx16@GJXAIOU",[[1,4888,"\n"]],[4884,4884],[4885,4885]]],[1538572645446,["gjx16@GJXAIOU",[[1,4885,"`153\n370\n371\n407\n\n"]],[4885,4885],[4903,4903]]],[1538572647611,["gjx16@GJXAIOU",[[1,4889,"`"]],[4889,4889],[4890,4890]]],[1538572649094,["gjx16@GJXAIOU",[[1,4894,"`"]],[4894,4894],[4895,4895]]],[1538572651314,["gjx16@GJXAIOU",[[1,4899,"`"]],[4899,4899],[4900,4900]]],[1538572653008,["gjx16@GJXAIOU",[[1,4904,"`"]],[4904,4904],[4905,4905]]],[1538572654459,["gjx16@GJXAIOU",[[1,4901,"`"]],[4901,4901],[4902,4902]]],[1538572656673,["gjx16@GJXAIOU",[[1,4896,"`"]],[4896,4896],[4897,4897]]],[1538572657872,["gjx16@GJXAIOU",[[1,4891,"`"]],[4891,4891],[4892,4892]]],[1538572662910,["gjx16@GJXAIOU",[[1,4911,"---"]],[4911,4911],[4914,4914]]]],null,"gjx16@GJXAIOU"],["884e31a9-2ca1-4dd9-94b0-0f3078119f00",1543322081860,"---\ndate:'2018-9-9'\nnandian:循环的嵌套\n---\n\n# day5\n@toc\n\n==笔记的day3和day4本身即为空缺==\n\n## 一、一维数组\n\n**1.定义数组**\n\n```c\n#include<stdio.h>\n\nint main()\n{\n  int array[10];  //定义了一个数组，数组名为array，里面有十个元素,从0-9；\n\n  array[0] = 20;\n  array[9] = 100;\n\n  printf(\"%d\\n\",array[0]);\n  printf(\"%d\\n\",sizeof(array));//一个整数四个字节，所以这里显示是40\n  \n  return 0;\n}\n```\n程序输出结果：\n`20`\n`40`\n\n数组本质就是：在内存中就是一个连续的空间；而且每个元素的类型是一样的；\n\n---\n\n**2.连续的赋值操作**\n\n```c\n#include<stdio.h>\nint main()\n{\n  int i;\n  int array[10];\n  for(i = 0;i < 10;i++)\n  {\n    array[i] = i;  \n    printf(\"array[%d] = %d\\n\",i,array[i]);\n  }\n  return 0;\n}\n```\n\n程序输出结果为：\n`array[0] = 0`\n`array[1] = 1`\n`array[2] = 2`\n`array[3] = 3`\n`array[4] = 4`\n`array[5] = 5`\n`array[6] = 6`\n`array[7] = 7`\n`array[8] = 8`\n`array[9] = 9`\n\n---\n\n**3.数组的初始化**\n\n\n```c\n#include<stdio.h>\nint main()\n{\n\n//数组初始化的三种方式(挨个赋值，部分赋值，统一赋值)\n  \n  //1.全部进行赋值\n  int array[10] = {1,1,3,5,5,6,9,6,8,5};\n\n  //2.定义一个数组的同时进行赋值初始化,这是部分初始化\n  int array[10] = {100,2,3,3,4,9};\n\n  //3-1.将所有元素置为0\n  int array[10] = {0};  \n  \n  //3-2.另一种置为0 的方法\n  int i;\n  for(i = 0; i < 10; i++)\n {\n   array[i] = 0;\n }\n\n\n\n  int i;\n  for(i = 0;i < 10;i++)\n  {\n    printf(\"array[%d] = %d\\n\",i,array[i]);\n  }\n  return 0;\n}\n\n```\n\n---\n**4.求数组中最大元素的值**\n\n将数组中的第一个元素默认设置成最大的元素，然后让各个元素进行比较；\n```c\n#include<stdio.h>\nint main()\n{\n  int array[5] = {2,3,5,6,7};\n  int max = array[0];\n  \n  \n  int i;\n  for(i = 1;i < 5;i++) //想找最大的先遍历一遍,因为第一的元素默认设置成最大值，所以这里的循环从1开始；\n  {\n    if(max < array[i])\n     {\n        max = array[i];\n     }\n  }\n\n  printf(\"max = %d\\n\",max);\n\nreturn 0;\n\n}\n```\n程序运行结果：`max = 7`\n\n---\n\n**5.求数组中的最小值，并求出最小值的编号**\n```c\n#include<stdio.h>\nint main()\n{\n  int array[5] = {6,3,5,6,7};\n  int min = array[0];\n  int index = 0;//在没有遍历数组之前，默认数组的第0号元素就是最小的元素；所以默认的地址也是0；\n  \n  int i;\n  for(i = 1;i < 5;i++) //想找最小的先遍历一遍\n    {\n      if(min > array[i])\n       {\n          index = i;\n          min = array[i];\n       }\n    }\n\n  printf(\"min = %d,index = %d\\n\",min,index);\n\nreturn 0;\n\n}\n\n\n```\n程序输出结果：`min = 3,index = 1`\n\n---\n\n**6.求数组元素和**\n\n```c\n#include<stdio.h>\nint main()\n{\n  int array[10] = {1,2,3,4,5,6,7,8,9,0};\n  int i;\n  int sum = 0;\n  for(i = 0; i < 10; i++)\n  {\n    sum += array[i];\n  }\n\n  printf(\"sum = %d\\n\",sum);\n\n  return 0;\n\n}\n```\n程序运行结果:`sum = 45`\n\n---\n\n**7.打印数组中大于平均值的所有的值与其下标**\n```c\n#include<stdio.h>\n\nint  main()\n{\n  int  array[10]  =  {1,2,3,4,5,6,7,8,9,0};\n  \n  int  i;\n  float  aver;\n  int  sum  =  0;\n  int  index  =  0;\n  for(i  =  0;  i  <  10;i++)\n    {\n      sum  +=array[i];\n    }\n\n  aver  =  sum/10.0;\n  printf(\"the aver of the array is = %f\\n\",aver);\n \n\n  printf(\"The  following  elements  are  greater  than  the  average  value  of  the  array.  The  addresses  are:\\n\");\n\n\n  for(i  =  0;i  <  10;i++)\n  {\n    if(array[i]  >aver)\n      {\n        index  =  i;\n        printf(\"array[%d]  =  %d,index  =  %d\\n\",i,array[i],index);\n      }\n  }\n\n  return 0;\n}\n```\n\n程序输出的结果为：\n`the aver of the array is = 4.500000`\n`The  following  elements  are  greater  than  the  average  value  of  the  array.  The  addresses  are:`\n`array[4]  =  5,index  =  4`\n`array[5]  =  6,index  =  5`\n`array[6]  =  7,index  =  6`\n`array[7]  =  8,index  =  7`\n`array[8]  =  9,index  =  8`\n\n---\n\n**8.数组逆置**\n- 实现单个元素的互换\n```c\n#include<stdio.h>\n\nint  main()\n{\n  int  array[5]  =  {1,2,3,4,5};\n\n//部分交换\n\n  int  i;\n  int  tmp  =  array[0];\n  array[0]  =  array[1];\n  array[1]  =  tmp;\n\n  for(i  =  0;i < 5;i++)\n  {\n    printf(\"array[%d]=%d\\n\",i,array[i]);\n  }\n\n  return  0;\n}\n\n```\n程序运行结果为：\n`array[0]=2`\n`array[1]=1`\n`array[2]=3`\n`array[3]=4`\n`array[4]=5`\n\n- 实现数组的前半部分和后半部分的互换\n  - 法一：直接换元素\n```c\n#include<stdio.h>\n\nint  main()\n\n{\n  int  array[10]  =  {1,2,3,4,5,6,7,8,9,0};\n  int  i;\n  for(i  =  0;  i  <=  4;  i++)\n  {\n    int  tmp  =  array[i];\n    array[i]  =  array[9-i];\n    array[9-i]  =  tmp;\n  }\n\n  for(i  =  0;i  <  10;i++)\n    {\n      printf(\"array[%d]=%d\\n\",i,array[i]);\n    }\n\n  return  0;\n\n}\n```\n程序运行结果为：\n`array[0]=0`\n`array[1]=9`\n`array[2]=8`\n`array[3]=7`\n`array[4]=6`\n`array[5]=5`\n`array[6]=4`\n`array[7]=3`\n`array[8]=2`\n`array[9]=1`\n\n  - 法二：通过换下标\n```c\n#include<stdio.h>\n\nint  main()\n{\n  int  array[10]  =  {1,2,3,4,5,6,7,8,9,0};\n  int  i;\n\n  int  min  =  0;//数组的最小下标\n  int  max  =  9;//数组的最大下标\n\n  while(min < max)\n   {\n      int  tmp  =  array[min];\n      array[min]  =  array[max];\n      array[max]  =tmp;\n      min++;\n      max--;\n   }\n\n  for(i  =  0;i  <  10;i++)\n  {\n    printf(\"array[%d]=%d\\n\",i,array[i]);\n  }\n\n  return  0;\n\n}\n\n```\n程序运行结果为：\n`array[0]=0`\n`array[1]=9`\n`array[2]=8`\n`array[3]=7`\n`array[4]=6`\n`array[5]=5`\n`array[6]=4`\n`array[7]=3`\n`array[8]=2`\n`array[9]=1`\n\n---\n\n**9.水仙花数**\n查找100都1000之间的水仙花数；\n```c\n#include<stdio.h>\n\nint  main()\n{\n  int  i;\n  for(i  =  100;  i  <  1000;i++)\n    {\n      int  i1  =  i%10;//求个位上的数字\n      int  i2  =  i/10%10;//求十位上的数字\n      int  i3  =  i/100;//求百位上数字\n      \n      if(i1*i1*i1  +  i2*i2*i2  +  i3*i3*i3  ==  i)\n        {\n          printf(\"%d\\n\",i);\n        }\n   }\n\n  return  0;\n\n}\n```\n程序运行结果；\n`153`\n`370`\n`371`\n`407`\n\n\n---\n\n\n**10.求一个数组中所有奇数元素之和**\n```c\n#include<stdio.h>\n\nint  main()\n\n{\n\n  int  array[10]  =  {1,3,4,7,8,0,9};\n\n  int  i;\n\n  int  sum  =  0;\n\n  printf(\"The  odd  numbers  in  the  array  are  as  follows:\\n\");\n\n  for(i  =  0;  i  <  10;i++)\n\n  {\n\n  if(array[i]  %  2  !=  0)\n\n  //if(array[i]%  2  ==  1)\n\n  {\n\n  sum  +=  array[i];\n\n  printf(\"array[%d]  =  %d\\n\",i,array[i]);\n\n  }\n\n  }\n\n  printf(\"sum  =  %d\\n\",sum);\n\n  return  0;\n\n}\n```\n\n**11.求3-100中的素数**\n\n==~~程序有问题~~==\n注：素数：除了1和本身均不能被任何数整除；(也就是相当于不能被2到i-1之间的任何数整除)\n```c\n#include<stdio.h>\n\nint  main()\n\n{\n\n  int  i;\n\n  int  j;\n\n  int  status  =  0;\n\n  for(i  =  3;i  <  101;i++)\n\n  {\n\n  for(j  =  2;j  <  i;j++)\n\n  {\n\n  if((i%j  )==  0)\n\n  {\n\n  status  =  1;\n\n  break;\n\n  }\n\n  }\n\n  if(status  ==  0)\n\n  {\n\n  printf(\"%d\\n\",i);\n\n  }\n\n  }\n\n  return  0;\n\n}\n```\n![素数]($resource/%E7%B4%A0%E6%95%B0.png)\n\n\n\n\n\n\n\n\n\n\n\n\n\n# 二维数组\n可以近似理解为表格；\n\n**1.二维数组的定义**\n\n```c\n#include<stdio.h>\n\nint main()\n{\n\n//先定义后赋值\n  int array[2][3];//定义了一个二维数组，相当于有两个array[3] \n  array[0][0] = 0;//给第0行第0列赋值\n  array[1][2] = 0;//给第1行第2列赋值\n\n//定义的同时进行赋值\n  int a[3][4] = {{1,2,3,4,},{5,6,7,8},{9,10,11,12}};\n  int a[3][4] = {0};//将二维数组中所有值全部置0\n  \n  return 0;\n}\n```\n\n**2.数组大小**\n\n```c\nint main()\n{\n  int array[2][3] = {{1,2,3},{4,5,6}};\n  printf(\"%d\\n\",sizeof(array));//整个数组的大小为24\n  printf(\"%d\\n\",sizeof(array[0])); //相当于第0行的大小，为12\n  printf(\"%d\\n\",sizeof(array[0][0]));//相当于第0行第0列元素的大小，为4\n return 0;\n}\n```\n\n**3.数组的值输出**\n\n==注意printf的位置==\n\n```c\n#include<stdio.h>\n\nint  main()\n\n{\n\n  int  array[2][3]  =  {{1,2,3},{4,5,6}};\n\n  int  i,j;\n\n  for(i  =  0;  i  <  2;i++)\n\n  {\n\n  for(j  =  0;  j  <  3;j++)\n\n  {\n\n  printf(\"array[%d][%d]=  %d\\n\",i,j,array[i][j]);\n\n  }\n\n  }\n\n  return  0;\n\n}\n```\n\n\n**4.求一个二维数组的每行每列的和**\n\n==注意printf的位置==\n每行的和：\n```c\nint main()\n{\n  int array[3][5] = {{1,3,4,5,9},{4,9,5,0,8},{9,3,4,23,4}};\n  int i,j;\n  for(i = 0; i <3;i++)\n  {\n    int sum = 0;\n    for(j = 0;j < 5;j++)\n    {\n      sum += array[i][j];\n    }\n    printf(\"%d\\n\",sum);\n  }\n  return 0;\n}\n```\n\n每列的和：\n\n```c\nint main()\n{\n   int array[3][5] = {{1,3,4,5,9},{4,9,5,0,8},{9,3,4,23,4}};\n   int i,j;\n   for(j = 0; j < 5; j++);\n   {\n     int sum = 0;\n     for(i = 0; i < 3;i++)\n     {\n       sum +=array[i][j];\n     }\n   printf(\"%d\\n\",array[i][j]);\n   }\n  return 0;\n}\n```\n\n\n**5.冒泡排序**\n```c\nint main()\n{\n  int array[10] = {1,4,8,0,9,34,98,100,5,3};\n  int i;\n  int j;\n  for(i = 0;i < 10;i++)\n    {\n      for(j = 1; j < 10-i;j++)\n      {\n        if(array[j-1] >array[j])\n          {\n            int tmp;\n            tmp = array[j];\n            array[j] = array[j-1];\n            array[j-1] = tmp;\n          }\n      }\n    }\n    for(i = 0;i < 10;i++)\n    {\n    printf(\"array[%d] = %d\\n\",i,array[i]);\n    }\n  return 0;\n}\n```\n\n\n\n\n\n\n\n\n",[[1543322025202,["gjx16@GJXAIOU",[[-1,1352,"5"]],[1353,1353],[1352,1352]]],[1543322030873,["gjx16@GJXAIOU",[[1,1352,"5"]],[1352,1352],[1353,1353]]],[1543322037889,["gjx16@GJXAIOU",[[1,1359,"\n  、、"]],[1359,1359],[1364,1364]]],[1543322038945,["gjx16@GJXAIOU",[[-1,1362,"、、"]],[1364,1364],[1362,1362]]],[1543322039779,["gjx16@GJXAIOU",[[1,1364,"//"]],[1362,1362],[1364,1364]]],[1543322041090,["gjx16@GJXAIOU",[[1,1364,"deng"]],[1364,1364],[1368,1368]]],[1543322042500,["gjx16@GJXAIOU",[[-1,1364,"deng"]],[1368,1368],[1364,1364]]],[1543322047785,["gjx16@GJXAIOU",[[1,1364,"等效于：for()"]],[1364,1364],[1373,1373]]],[1543322056055,["gjx16@GJXAIOU",[[1,1372,"i = 1; i < sizoe"]],[1372,1372],[1388,1388]]],[1543322058073,["gjx16@GJXAIOU",[[-1,1385,"zoe"]],[1388,1388],[1385,1385]]],[1543322061224,["gjx16@GJXAIOU",[[1,1385,"zeof("]],[1385,1385],[1390,1390]]],[1543322061317,["gjx16@GJXAIOU",[[1,1391,")"]],[1390,1390],[1391,1391]]],[1543322063326,["gjx16@GJXAIOU",[[1,1390,"arrat"]],[1390,1390],[1395,1395]]],[1543322064175,["gjx16@GJXAIOU",[[-1,1394,"t"]],[1395,1395],[1394,1394]]],[1543322065019,["gjx16@GJXAIOU",[[1,1394,"y"]],[1394,1394],[1395,1395]]],[1543322075585,["gjx16@GJXAIOU",[[1,1396,"/sizeof("]],[1396,1396],[1404,1404]]],[1543322075684,["gjx16@GJXAIOU",[[1,1405,")"]],[1404,1404],[1405,1405]]],[1543322077463,["gjx16@GJXAIOU",[[1,1404,"int "]],[1404,1404],[1408,1408]]],[1543322078917,["gjx16@GJXAIOU",[[-1,1407," "]],[1408,1408],[1407,1407]]],[1543322081279,["gjx16@GJXAIOU",[[1,1408,";i "]],[1408,1408],[1411,1411]]],[1543322084016,["gjx16@GJXAIOU",[[-1,1410," "]],[1411,1411],[1410,1410]]],[1543322087345,["gjx16@GJXAIOU",[[1,1413,"\n  "]],[1413,1413],[1416,1416]]],[1543322381859,[null,[[1,1410,"++"],[-1,1411,"//"],[1,1416,"//"]],[1410,1410],[1418,1418]]],[1543322381859,[null,[[-1,1410,"++"],[1,1413,"//"],[-1,1416,"//"]],[1418,1418],[1410,1410]]],[1543322346791,["gjx16@GJXAIOU",[[1,3574,"  - \n"]],[3573,3573],[3578,3578]]],[1543322348477,["gjx16@GJXAIOU",[[-1,3576,"- "]],[3578,3578],[3576,3576]]],[1543322349930,["gjx16@GJXAIOU",[[1,3576,"_+"]],[3576,3576],[3578,3578]]],[1543322350064,["gjx16@GJXAIOU",[[-1,3577,"+"],[1,3578,"_"]],[3578,3578],[3577,3577]]],[1543322350741,["gjx16@GJXAIOU",[[-1,3577,"_"]],[3577,3577],[3576,3576]]],[1543322352080,["gjx16@GJXAIOU",[[-1,3576,"_"]],[3577,3577],[3576,3576]]],[1543322353187,["gjx16@GJXAIOU",[[1,3576,"+"]],[3576,3576],[3577,3577]]],[1543322354381,["gjx16@GJXAIOU",[[-1,3576,"+"]],[3577,3577],[3576,3576]]],[1543322355081,["gjx16@GJXAIOU",[[1,3576,"+"]],[3576,3576],[3577,3577]]],[1543322355765,["gjx16@GJXAIOU",[[-1,3575," +"]],[3577,3577],[3575,3575]]],[1543322357090,["gjx16@GJXAIOU",[[1,3575,"===="]],[3575,3575],[3577,3577]]],[1543322357997,["gjx16@GJXAIOU",[[1,3577,"zhu"]],[3577,3577],[3580,3580]]],[1543322359192,["gjx16@GJXAIOU",[[-1,3577,"zhu"]],[3580,3580],[3577,3577]]],[1543322364934,["gjx16@GJXAIOU",[[1,3577,"注意这里的是I"]],[3577,3577],[3584,3584]]],[1543322365645,["gjx16@GJXAIOU",[[-1,3583,"I"]],[3584,3584],[3583,3583]]],[1543322368497,["gjx16@GJXAIOU",[[1,3583,"i he "]],[3583,3583],[3588,3588]]],[1543322369427,["gjx16@GJXAIOU",[[-1,3585,"he "]],[3588,3588],[3585,3585]]],[1543322377406,["gjx16@GJXAIOU",[[1,3585,"和ge"]],[3585,3585],[3588,3588]]],[1543322378325,["gjx16@GJXAIOU",[[-1,3586,"ge"]],[3588,3588],[3586,3586]]],[1543322380650,["gjx16@GJXAIOU",[[1,3586," 个数"]],[3586,3586],[3589,3589]]],[1543322441856,[null,[[1,1410,"++"],[-1,1411,"//"],[1,1416,"//"],[-1,3572,"``"],[1,3592,"``"]],[1410,1410],[3594,3594]]],[1543322441856,[null,[[-1,1410,"++"],[1,1413,"//"],[-1,1416,"//"],[1,3574,"``"],[-1,3592,"``"]],[3594,3594],[1410,1410]]],[1543322384698,["gjx16@GJXAIOU",[[1,3589,"-1jin"]],[3589,3589],[3594,3594]]],[1543322385764,["gjx16@GJXAIOU",[[-1,3591,"jin"]],[3594,3594],[3591,3591]]],[1543322394968,["gjx16@GJXAIOU",[[1,3591,"-i进行交换"]],[3591,3591],[3597,3597]]],[1543322501860,[null,[[1,1410,"++"],[-1,1411,"//"],[1,1416,"//"],[-1,3572,"``"],[1,3600,"``"]],[1410,1410],[3602,3602]]],[1543322501860,[null,[[-1,1410,"++"],[1,1413,"//"],[-1,1416,"//"],[1,3574,"``"],[-1,3600,"``"]],[3602,3602],[1410,1410]]],[1543322464606,["gjx16@GJXAIOU",[[1,4062,"=="],[1,4070,"=="]],[4062,4070],[4062,4074]]],[1543322681863,[null,[[1,1410,"++"],[-1,1411,"//"],[1,1416,"//"],[-1,3572,"``"],[1,3600,"``"],[1,4060,"=="],[-1,4062,"=="],[1,4070,"=="],[-1,4072,"=="]],[1410,1410],[4072,4072]]],[1543322681863,[null,[[-1,1410,"++"],[1,1413,"//"],[-1,1416,"//"],[1,3574,"``"],[-1,3600,"``"],[-1,4062,"=="],[1,4066,"=="],[-1,4072,"=="],[1,4076,"=="]],[4072,4072],[1410,1410]]],[1543322653838,["gjx16@GJXAIOU",[[1,4611,"=="],[1,4621,"=="]],[4611,4621],[4611,4625]]],[1543322981873,[null,[[1,1410,"++"],[-1,1411,"//"],[1,1416,"//"],[-1,3572,"``"],[1,3600,"``"],[1,4060,"=="],[-1,4062,"=="],[1,4070,"=="],[-1,4072,"=="],[1,4609,"=="],[-1,4611,"=="],[1,4621,"=="],[-1,4623,"=="]],[1410,1410],[4623,4623]]],[1543322981873,[null,[[-1,1410,"++"],[1,1413,"//"],[-1,1416,"//"],[1,3574,"``"],[-1,3600,"``"],[-1,4062,"=="],[1,4066,"=="],[-1,4072,"=="],[1,4076,"=="],[-1,4611,"=="],[1,4615,"=="],[-1,4623,"=="],[1,4627,"=="]],[4623,4623],[1410,1410]]],[1543322964321,["gjx16@GJXAIOU",[[-1,5306,"\n"]],[5306,5306],[5305,5305]]],[1543323041876,[null,[[1,1410,"++"],[-1,1411,"//"],[1,1416,"//"],[-1,3572,"``"],[1,3600,"``"],[1,4060,"=="],[-1,4062,"=="],[1,4070,"=="],[-1,4072,"=="],[1,4609,"=="],[-1,4611,"=="],[1,4621,"=="],[-1,4623,"=="],[-1,5304,"\n"],[1,5305," "]],[1410,1410],[5306,5306]]],[1543323041876,[null,[[-1,1410,"++"],[1,1413,"//"],[-1,1416,"//"],[1,3574,"``"],[-1,3600,"``"],[-1,4062,"=="],[1,4066,"=="],[-1,4072,"=="],[1,4076,"=="],[-1,4611,"=="],[1,4615,"=="],[-1,4623,"=="],[1,4627,"=="],[1,5306,"\n"],[-1,5306," "]],[5306,5306],[1410,1410]]],[1543322992617,["gjx16@GJXAIOU",[[1,5035,"\n"],[-1,5070,"  "],[1,5072,"\t"],[-1,5087," "],[-1,5089," "],[1,5092," "],[1,5105," "],[-1,5109,"  "],[1,5111,"\t"],[-1,5120,"  "],[1,5122,"\t"],[-1,5130," "],[-1,5134," "],[-1,5139,"  "],[1,5141,"\t"],[-1,5208,"  "],[1,5210,"\t"],[1,5213," "],[-1,5215," "],[-1,5219," "],[-1,5222," "],[-1,5226," "],[-1,5228," "],[1,5233," "],[-1,5239,"  {\n\n  "],[1,5246,"\t{\n\n\t\t"],[1,5248," "],[-1,5258," "],[-1,5260," "],[-1,5263," "],[-1,5268," "],[-1,5273,"  "],[1,5275,"\t\t\t"],[-1,5302,"  {\n  "],[1,5308,"\t\t{\n\t\t\t"],[-1,5311," "],[-1,5315," "],[-1,5328,"  "],[1,5330,"\t\t\t"],[1,5358," "],[1,5360," "],[-1,5372,"  }\n\n  }\n\n  "],[1,5384,"\t\t}\n\n\t}\n\n\t"],[1,5406," "],[-1,5413,"  "],[1,5415,"\t"]],[5035,5428],[5416,5416]]],[1543323002567,["gjx16@GJXAIOU",[[-1,5054,"\n"]],[5054,5054],[5053,5053]]],[1543323004991,["gjx16@GJXAIOU",[[-1,5066,"\n"]],[5066,5066],[5065,5065]]],[1543323006133,["gjx16@GJXAIOU",[[-1,5068,"\n"]],[5068,5068],[5067,5067]]],[1543323008112,["gjx16@GJXAIOU",[[-1,5226,"\n"]],[5226,5226],[5225,5225]]],[1543323011571,["gjx16@GJXAIOU",[[-1,5362,"\n"]],[5362,5362],[5361,5361]]],[1543323012589,["gjx16@GJXAIOU",[[-1,5357,"\n"]],[5357,5357],[5356,5356]]],[1543323013639,["gjx16@GJXAIOU",[[-1,5285,"\n"]],[5285,5285],[5284,5284]]],[1543323016005,["gjx16@GJXAIOU",[[-1,5407,"\n"]],[5407,5407],[5406,5406]]],[1543324242094,[null,[[1,1410,"++"],[-1,1411,"//"],[1,1416,"//"],[-1,3572,"``"],[1,3600,"``"],[1,4060,"=="],[-1,4062,"=="],[1,4070,"=="],[-1,4072,"=="],[1,4609,"=="],[-1,4611,"=="],[1,4621,"=="],[-1,4623,"=="],[1,5033,"\n"],[-1,5035,"\n"],[-1,5051,"\n"],[1,5054,"n"],[-1,5064,"\n"],[-1,5067," "],[1,5069,"in"],[-1,5082," ="],[1,5084,"= {"],[-1,5087," "],[1,5099," "],[-1,5101," "],[-1,5104,"  "],[1,5107,"in"],[-1,5114,"  "],[1,5117,"in"],[-1,5124,"  "],[1,5126,"="],[1,5128,";"],[-1,5130,"  "],[1,5133,"pr"],[-1,5198,"  "],[1,5201,"fo"],[1,5202," "],[-1,5205,"    0   "],[1,5213,"= 0; i"],[1,5216,"1"],[1,5218," "],[-1,5220," "],[-1,5224,"\n "],[1,5232,"if "],[-1,5234," "],[-1,5243," "],[-1,5246,"  = "],[1,5250,"2 !="],[1,5252,")"],[-1,5254,"  "],[1,5259,"//"],[-1,5283,"\n "],[1,5292,"su"],[-1,5294," =  "],[1,5298,"+= a"],[-1,5308,"  "],[1,5313,"pr"],[1,5339," "],[-1,5344," "],[-1,5354,"\n "],[1,5365,"pr"],[1,5385," "],[-1,5387," "],[-1,5393,"  "],[1,5396,"re"],[-1,5405,"\n"],[1,5407,"\n"]],[1410,1410],[5408,5408]]],[1543324242094,[null,[[-1,1410,"++"],[1,1413,"//"],[-1,1416,"//"],[1,3574,"``"],[-1,3600,"``"],[-1,4062,"=="],[1,4066,"=="],[-1,4072,"=="],[1,4076,"=="],[-1,4611,"=="],[1,4615,"=="],[-1,4623,"=="],[1,4627,"=="],[-1,5035,"\n"],[1,5038,"\n"],[1,5053,"\n"],[-1,5055,"n"],[1,5066,"\n"],[1,5068," "],[-1,5069,"in"],[1,5084," ="],[-1,5084,"= {"],[1,5090," "],[-1,5101," "],[1,5104," "],[1,5106,"  "],[-1,5107,"in"],[1,5116,"  "],[-1,5117,"in"],[1,5126,"  "],[-1,5126,"="],[-1,5129,";"],[1,5132,"  "],[-1,5133,"pr"],[1,5200,"  "],[-1,5201,"fo"],[-1,5204," "],[1,5208,"    0   "],[-1,5208,"= 0; i"],[-1,5217,"1"],[-1,5220," "],[1,5223," "],[1,5226,"\n "],[-1,5232,"if "],[1,5237," "],[1,5245," "],[1,5247,"  = "],[-1,5247,"2 !="],[-1,5253,")"],[1,5256,"  "],[-1,5259,"//"],[1,5285,"\n "],[-1,5292,"su"],[1,5296," =  "],[-1,5296,"+= a"],[1,5310,"  "],[-1,5313,"pr"],[-1,5341," "],[1,5347," "],[1,5356,"\n "],[-1,5365,"pr"],[-1,5387," "],[1,5390," "],[1,5395,"  "],[-1,5396,"re"],[1,5407,"\n"],[-1,5408,"\n"]],[5408,5408],[1410,1410]]],[1543324216916,["gjx16@GJXAIOU",[[-1,5516,""],[1,5516,"#include\"stdlib.h\""],[-1,5529,"\n"],[-1,5532,"\n  "],[1,5535,"\t"],[-1,5543,"\n  "],[1,5546,"\t"],[-1,5555,"  int  status  =  0;\n\n  "],[1,5579,"\t"],[1,5582," "],[-1,5585," "],[-1,5587," "],[-1,5591,"i"],[1,5593,"i"],[-1,5595," "],[1,5601," "],[1,5606,"\t{"],[1,5607,"\t\tint"],[-1,5609,"{\n\n  "],[1,5614,"status = 0;\n\n\t\t"],[1,5617," "],[-1,5619," "],[-1,5623," "],[-1,5626,"j"],[1,5628,"j"],[-1,5630," "],[1,5634," "],[-1,5639,"\n  {\n\n  if("],[1,5650,"\t\t{\n\t\t\tif "],[-1,5655," )"],[-1,5660," "],[-1,5664,"\n  {\n\n  "],[1,5672,"\t\t\t{\n\t\t\t\t"],[-1,5679," "],[-1,5681," "],[-1,5686,"\n  "],[1,5689,"\t\t\t\t"],[1,5696,"\t\t\t}"],[1,5697,"\t"],[-1,5699,"}\n\n"],[-1,5707,"  "],[1,5709,"\t\t"],[1,5711," "],[-1,5719," "],[-1,5722," "],[-1,5727,"\n  {\n\n  "],[1,5735,"\t\t{\n\t\t\t"],[1,5749," "],[-1,5753,"\n  "],[1,5756,"\t\n\t\t"],[-1,5758,"\n  "],[-1,5764,"  "],[1,5766,"\tsystem(\"pause\");\n\t"]],[5498,5779],[5796,5796]]],[1543324226135,["gjx16@GJXAIOU",[[-1,5433,"==~~程序有问题~~=="]],[5433,5446],[5433,5433]]],[1543324227238,["gjx16@GJXAIOU",[[-1,5433,"\n"]],[5433,5433],[5432,5432]]],[1543324662097,[null,[[1,1410,"++"],[-1,1411,"//"],[1,1416,"//"],[-1,3572,"``"],[1,3600,"``"],[1,4060,"=="],[-1,4062,"=="],[1,4070,"=="],[-1,4072,"=="],[1,4609,"=="],[-1,4611,"=="],[1,4621,"=="],[-1,4623,"=="],[1,5033,"\n"],[-1,5035,"\n"],[-1,5052,"\n"],[1,5054,"n"],[-1,5064,"\n"],[-1,5067," "],[1,5069,"in"],[-1,5082," "],[1,5085,"{ "],[-1,5087," "],[1,5099," "],[-1,5101," "],[-1,5104,"  "],[1,5107,"in"],[-1,5114,"  "],[1,5117,"in"],[-1,5124,"  "],[1,5126,"="],[1,5128,";"],[-1,5130,"  "],[1,5133,"pr"],[-1,5198,"  "],[1,5201,"fo"],[1,5202," "],[-1,5205,"    0   "],[1,5213,"= 0; i"],[1,5216,"1"],[1,5218," "],[-1,5220," "],[-1,5224,"\n "],[1,5232,"if "],[-1,5234," "],[-1,5242," "],[-1,5246,"  "],[1,5248,"2 !"],[-1,5250," "],[1,5252,")"],[-1,5254,"  "],[1,5259,"//"],[-1,5283,"\n "],[1,5292,"su"],[-1,5294," =  "],[1,5298,"+= a"],[-1,5308,"  "],[1,5313,"pr"],[1,5339," "],[-1,5344," "],[-1,5354,"\n "],[1,5365,"pr"],[1,5385," "],[-1,5387," "],[-1,5393,"  "],[1,5396,"re"],[-1,5405,"\n"],[1,5407,"\n"],[-1,5431,"=="],[1,5433,"注："],[-1,5500,"\ni"],[1,5520,"\ni"],[-1,5531,"\n"],[-1,5534," "],[1,5536,"in"],[-1,5542,"\n "],[1,5545,"in"],[-1,5552,"  "],[1,5555,"fo"],[1,5556," "],[-1,5558,"  "],[1,5563,"3"],[-1,5564,"i"],[-1,5566,"<"],[1,5569,"<"],[1,5570,"1"],[1,5573," "],[-1,5575," "],[-1,5579,"\n "],[-1,5583," "],[1,5584,"\n"],[-1,5589,"{\n"],[1,5591,"  "],[1,5606,"fo"],[1,5607," "],[-1,5610,"    2j <"],[1,5618,"= 2; "],[1,5620,"<"],[1,5621,"i"],[1,5622," "],[-1,5624," "],[-1,5628,"\n "],[1,5640,"(i"],[-1,5643," ) "],[1,5646,"=="],[1,5648,")"],[-1,5649,"\n "],[1,5660,"st"],[-1,5665," "],[1,5668,"1"],[-1,5670,"\n "],[1,5676,"br"],[-1,5681,"\n "],[-1,5687," \t}\n"],[1,5691,"\n\t    "],[-1,5694,"  "],[1,5698,"if "],[-1,5700," "],[-1,5707," =  "],[1,5711,"== 0"],[-1,5713,"\n "],[1,5722,"pr"],[1,5734," "],[-1,5736," "],[-1,5739,"\n "],[-1,5745,"\n \n  "],[1,5750,"}\n}\n\n"],[1,5769,"re"]],[1410,1410],[5771,5771]]],[1543324662097,[null,[[-1,1410,"++"],[1,1413,"//"],[-1,1416,"//"],[1,3574,"``"],[-1,3600,"``"],[-1,4062,"=="],[1,4066,"=="],[-1,4072,"=="],[1,4076,"=="],[-1,4611,"=="],[1,4615,"=="],[-1,4623,"=="],[1,4627,"=="],[-1,5035,"\n"],[1,5038,"\n"],[1,5054,"\n"],[-1,5055,"n"],[1,5066,"\n"],[1,5068," "],[-1,5069,"in"],[1,5084," "],[-1,5086,"{ "],[1,5090," "],[-1,5101," "],[1,5104," "],[1,5106,"  "],[-1,5107,"in"],[1,5116,"  "],[-1,5117,"in"],[1,5126,"  "],[-1,5126,"="],[-1,5129,";"],[1,5132,"  "],[-1,5133,"pr"],[1,5200,"  "],[-1,5201,"fo"],[-1,5204," "],[1,5208,"    0   "],[-1,5208,"= 0; i"],[-1,5217,"1"],[-1,5220," "],[1,5223," "],[1,5226,"\n "],[-1,5232,"if "],[1,5237," "],[1,5244," "],[1,5247,"  "],[-1,5247,"2 !"],[1,5252," "],[-1,5253,")"],[1,5256,"  "],[-1,5259,"//"],[1,5285,"\n "],[-1,5292,"su"],[1,5296," =  "],[-1,5296,"+= a"],[1,5310,"  "],[-1,5313,"pr"],[-1,5341," "],[1,5347," "],[1,5356,"\n "],[-1,5365,"pr"],[-1,5387," "],[1,5390," "],[1,5395,"  "],[-1,5396,"re"],[1,5407,"\n"],[-1,5408,"\n"],[1,5433,"=="],[-1,5433,"注："],[1,5502,"\ni"],[-1,5520,"\ni"],[1,5533,"\n"],[1,5535," "],[-1,5536,"in"],[1,5544,"\n "],[-1,5545,"in"],[1,5554,"  "],[-1,5555,"fo"],[-1,5558," "],[1,5561,"  "],[-1,5564,"3"],[1,5566,"i"],[1,5567,"<"],[-1,5569,"<"],[-1,5571,"1"],[-1,5575," "],[1,5578," "],[1,5581,"\n "],[1,5583," "],[-1,5583,"\n"],[1,5589,"{\n"],[-1,5589,"  "],[-1,5606,"fo"],[-1,5609," "],[1,5613,"    2j <"],[-1,5613,"= 2; "],[-1,5620,"<"],[-1,5622,"i"],[-1,5624," "],[1,5627," "],[1,5630,"\n "],[-1,5640,"(i"],[1,5645," ) "],[-1,5645,"=="],[-1,5649,")"],[1,5651,"\n "],[-1,5660,"st"],[1,5667," "],[-1,5669,"1"],[1,5672,"\n "],[-1,5676,"br"],[1,5683,"\n "],[1,5687," \t}\n"],[-1,5687,"\n\t    "],[1,5696,"  "],[-1,5698,"if "],[1,5703," "],[1,5709," =  "],[-1,5709,"== 0"],[1,5715,"\n "],[-1,5722,"pr"],[-1,5736," "],[1,5739," "],[1,5741,"\n "],[1,5745,"\n \n  "],[-1,5745,"}\n}\n\n"],[-1,5769,"re"]],[5771,5771],[1410,1410]]],[1543324659542,["gjx16@GJXAIOU",[[-1,6404,"==注意printf的位置=="]],[6404,6419],[6404,6404]]],[1543324660182,["gjx16@GJXAIOU",[[-1,6405,"\n"]],[6404,6404],[6403,6403]]],[1543324722100,[null,[[1,1410,"++"],[-1,1411,"//"],[1,1416,"//"],[-1,3572,"``"],[1,3600,"``"],[1,4060,"=="],[-1,4062,"=="],[1,4070,"=="],[-1,4072,"=="],[1,4609,"=="],[-1,4611,"=="],[1,4621,"=="],[-1,4623,"=="],[1,5033,"\n"],[-1,5035,"\n"],[-1,5052,"\n"],[1,5054,"n"],[-1,5064,"\n"],[-1,5067," "],[1,5069,"in"],[-1,5082," "],[1,5085,"{ "],[-1,5087," "],[1,5099," "],[-1,5101," "],[-1,5104,"  "],[1,5107,"in"],[-1,5114,"  "],[1,5117,"in"],[-1,5124,"  "],[1,5126,"="],[1,5128,";"],[-1,5130,"  "],[1,5133,"pr"],[-1,5198,"  "],[1,5201,"fo"],[1,5202," "],[-1,5205,"    0   "],[1,5213,"= 0; i"],[1,5216,"1"],[1,5218," "],[-1,5220," "],[-1,5224,"\n "],[1,5232,"if "],[-1,5234," "],[-1,5242," "],[-1,5246,"  "],[1,5248,"2 !"],[-1,5250," "],[1,5252,")"],[-1,5254,"  "],[1,5259,"//"],[-1,5283,"\n "],[1,5292,"su"],[-1,5294," =  "],[1,5298,"+= a"],[-1,5308,"  "],[1,5313,"pr"],[1,5339," "],[-1,5344," "],[-1,5354,"\n "],[1,5365,"pr"],[1,5385," "],[-1,5387," "],[-1,5393,"  "],[1,5396,"re"],[-1,5405,"\n"],[1,5407,"\n"],[-1,5431,"=="],[1,5433,"注："],[-1,5500,"\ni"],[1,5520,"\ni"],[-1,5531,"\n"],[-1,5534," "],[1,5536,"in"],[-1,5542,"\n "],[1,5545,"in"],[-1,5552,"  "],[1,5555,"fo"],[1,5556," "],[-1,5558,"  "],[1,5563,"3"],[-1,5564,"i"],[-1,5566,"<"],[1,5569,"<"],[1,5570,"1"],[1,5573," "],[-1,5575," "],[-1,5579,"\n "],[-1,5583," "],[1,5584,"\n"],[-1,5589,"{\n"],[1,5591,"  "],[1,5606,"fo"],[1,5607," "],[-1,5610,"    2j <"],[1,5618,"= 2; "],[1,5620,"<"],[1,5621,"i"],[1,5622," "],[-1,5624," "],[-1,5628,"\n "],[1,5640,"(i"],[-1,5643," ) "],[1,5646,"=="],[1,5648,")"],[-1,5649,"\n "],[1,5660,"st"],[-1,5665," "],[1,5668,"1"],[-1,5670,"\n "],[1,5676,"br"],[-1,5681,"\n "],[-1,5687," \t}\n"],[1,5691,"\n\t    "],[-1,5694,"  "],[1,5698,"if "],[-1,5700," "],[-1,5707," =  "],[1,5711,"== 0"],[-1,5713,"\n "],[1,5722,"pr"],[1,5734," "],[-1,5736," "],[-1,5739,"\n "],[-1,5745,"\n \n  "],[1,5750,"}\n}\n\n"],[1,5769,"re"],[-1,6402,"=="],[1,6404,"\n`"]],[1410,1410],[6406,6406]]],[1543324722100,[null,[[-1,1410,"++"],[1,1413,"//"],[-1,1416,"//"],[1,3574,"``"],[-1,3600,"``"],[-1,4062,"=="],[1,4066,"=="],[-1,4072,"=="],[1,4076,"=="],[-1,4611,"=="],[1,4615,"=="],[-1,4623,"=="],[1,4627,"=="],[-1,5035,"\n"],[1,5038,"\n"],[1,5054,"\n"],[-1,5055,"n"],[1,5066,"\n"],[1,5068," "],[-1,5069,"in"],[1,5084," "],[-1,5086,"{ "],[1,5090," "],[-1,5101," "],[1,5104," "],[1,5106,"  "],[-1,5107,"in"],[1,5116,"  "],[-1,5117,"in"],[1,5126,"  "],[-1,5126,"="],[-1,5129,";"],[1,5132,"  "],[-1,5133,"pr"],[1,5200,"  "],[-1,5201,"fo"],[-1,5204," "],[1,5208,"    0   "],[-1,5208,"= 0; i"],[-1,5217,"1"],[-1,5220," "],[1,5223," "],[1,5226,"\n "],[-1,5232,"if "],[1,5237," "],[1,5244," "],[1,5247,"  "],[-1,5247,"2 !"],[1,5252," "],[-1,5253,")"],[1,5256,"  "],[-1,5259,"//"],[1,5285,"\n "],[-1,5292,"su"],[1,5296," =  "],[-1,5296,"+= a"],[1,5310,"  "],[-1,5313,"pr"],[-1,5341," "],[1,5347," "],[1,5356,"\n "],[-1,5365,"pr"],[-1,5387," "],[1,5390," "],[1,5395,"  "],[-1,5396,"re"],[1,5407,"\n"],[-1,5408,"\n"],[1,5433,"=="],[-1,5433,"注："],[1,5502,"\ni"],[-1,5520,"\ni"],[1,5533,"\n"],[1,5535," "],[-1,5536,"in"],[1,5544,"\n "],[-1,5545,"in"],[1,5554,"  "],[-1,5555,"fo"],[-1,5558," "],[1,5561,"  "],[-1,5564,"3"],[1,5566,"i"],[1,5567,"<"],[-1,5569,"<"],[-1,5571,"1"],[-1,5575," "],[1,5578," "],[1,5581,"\n "],[1,5583," "],[-1,5583,"\n"],[1,5589,"{\n"],[-1,5589,"  "],[-1,5606,"fo"],[-1,5609," "],[1,5613,"    2j <"],[-1,5613,"= 2; "],[-1,5620,"<"],[-1,5622,"i"],[-1,5624," "],[1,5627," "],[1,5630,"\n "],[-1,5640,"(i"],[1,5645," ) "],[-1,5645,"=="],[-1,5649,")"],[1,5651,"\n "],[-1,5660,"st"],[1,5667," "],[-1,5669,"1"],[1,5672,"\n "],[-1,5676,"br"],[1,5683,"\n "],[1,5687," \t}\n"],[-1,5687,"\n\t    "],[1,5696,"  "],[-1,5698,"if "],[1,5703," "],[1,5709," =  "],[-1,5709,"== 0"],[1,5715,"\n "],[-1,5722,"pr"],[-1,5736," "],[1,5739," "],[1,5741,"\n "],[1,5745,"\n \n  "],[-1,5745,"}\n}\n\n"],[-1,5769,"re"],[1,6404,"=="],[-1,6404,"\n`"]],[6406,6406],[1410,1410]]],[1543324711659,["gjx16@GJXAIOU",[[1,6428,"#include\"stdlib.h\"\n"],[-1,6441,"\n"],[-1,6444,"\n  "],[1,6447,"\t"],[-1,6463," "],[-1,6467," "],[1,6469," "],[1,6484," "],[-1,6487,"\n  "],[1,6490,"\t"],[1,6497," "],[-1,6500,"\n  "],[1,6503,"\t"],[1,6506," "],[-1,6509," "],[-1,6511," "],[-1,6516," "],[-1,6518," "],[-1,6522," "],[1,6525," "],[-1,6530,"\n  {\n\n  "],[1,6538,"\t{\n\t\t"],[1,6541," "],[-1,6544," "],[-1,6546," "],[-1,6550," "],[-1,6554," "],[-1,6556," "],[1,6560," "],[-1,6565,"\n  {\n\n  "],[1,6573,"\t\t{\n\t\t\t"],[1,6603," "],[1,6605," "],[1,6607," "],[-1,6621,"\n  }\n\n  }\n\n  "],[1,6634,"\t\t}\n\t}\n\t"],[-1,6644,"\n"]],[6410,6647],[6647,6647]]],[1543324717474,["gjx16@GJXAIOU",[[-1,6404,"\n"]],[6404,6404],[6403,6403]]],[1543324717814,["gjx16@GJXAIOU",[[-1,6403,"\n"]],[6403,6403],[6402,6402]]],[1543324842127,[null,[[1,1410,"++"],[-1,1411,"//"],[1,1416,"//"],[-1,3572,"``"],[1,3600,"``"],[1,4060,"=="],[-1,4062,"=="],[1,4070,"=="],[-1,4072,"=="],[1,4609,"=="],[-1,4611,"=="],[1,4621,"=="],[-1,4623,"=="],[1,5033,"\n"],[-1,5035,"\n"],[-1,5052,"\n"],[1,5054,"n"],[-1,5064,"\n"],[-1,5067," "],[1,5069,"in"],[-1,5082," "],[1,5085,"{ "],[-1,5087," "],[1,5099," "],[-1,5101," "],[-1,5104,"  "],[1,5107,"in"],[-1,5114,"  "],[1,5117,"in"],[-1,5124,"  "],[1,5126,"="],[1,5128,";"],[-1,5130,"  "],[1,5133,"pr"],[-1,5198,"  "],[1,5201,"fo"],[1,5202," "],[-1,5205,"    0   "],[1,5213,"= 0; i"],[1,5216,"1"],[1,5218," "],[-1,5220," "],[-1,5224,"\n "],[1,5232,"if "],[-1,5234," "],[-1,5242," "],[-1,5246,"  "],[1,5248,"2 !"],[-1,5250," "],[1,5252,")"],[-1,5254,"  "],[1,5259,"//"],[-1,5283,"\n "],[1,5292,"su"],[-1,5294," =  "],[1,5298,"+= a"],[-1,5308,"  "],[1,5313,"pr"],[1,5339," "],[-1,5344," "],[-1,5354,"\n "],[1,5365,"pr"],[1,5385," "],[-1,5387," "],[-1,5393,"  "],[1,5396,"re"],[-1,5405,"\n"],[1,5407,"\n"],[-1,5431,"=="],[1,5433,"注："],[-1,5500,"\ni"],[1,5520,"\ni"],[-1,5531,"\n"],[-1,5534," "],[1,5536,"in"],[-1,5542,"\n "],[1,5545,"in"],[-1,5552,"  "],[1,5555,"fo"],[1,5556," "],[-1,5558,"  "],[1,5563,"3"],[-1,5564,"i"],[-1,5566,"<"],[1,5569,"<"],[1,5570,"1"],[1,5573," "],[-1,5575," "],[-1,5579,"\n "],[-1,5583," "],[1,5584,"\n"],[-1,5589,"{\n"],[1,5591,"  "],[1,5606,"fo"],[1,5607," "],[-1,5610,"    2j <"],[1,5618,"= 2; "],[1,5620,"<"],[1,5621,"i"],[1,5622," "],[-1,5624," "],[-1,5628,"\n "],[1,5640,"(i"],[-1,5643," ) "],[1,5646,"=="],[1,5648,")"],[-1,5649,"\n "],[1,5660,"st"],[-1,5665," "],[1,5668,"1"],[-1,5670,"\n "],[1,5676,"br"],[-1,5681,"\n "],[-1,5687," \t}\n"],[1,5691,"\n\t    "],[-1,5694,"  "],[1,5698,"if "],[-1,5700," "],[-1,5707," =  "],[1,5711,"== 0"],[-1,5713,"\n "],[1,5722,"pr"],[1,5734," "],[-1,5736," "],[-1,5739,"\n "],[-1,5745,"\n \n  "],[1,5750,"}\n}\n\n"],[1,5769,"re"],[-1,6401,"\n="],[1,6403,"``"],[-1,6424,"\ni"],[1,6445,"\ni"],[-1,6456,"\n"],[-1,6459," "],[1,6461,"in"],[-1,6476,"  "],[1,6478,"= {"],[-1,6481," "],[1,6495," "],[-1,6497," \n"],[-1,6500," "],[1,6502,"in"],[1,6507," "],[-1,6509," \n"],[-1,6512," "],[1,6514,"fo"],[1,6515," "],[-1,6517,"  "],[1,6522,"0"],[-1,6523," "],[-1,6527," "],[1,6528,"<"],[1,6530,"; "],[-1,6532," "],[-1,6536,"\n "],[1,6543,"fo"],[1,6544," "],[-1,6547,"  "],[1,6551,"0"],[-1,6553,"  "],[1,6555,"j"],[1,6558,"3"],[1,6559," "],[-1,6561," "],[-1,6565,"\n "],[1,6574,"pr"],[1,6602," "],[-1,6610," "],[-1,6623,"\n "],[1,6633,"re"],[-1,6642,"\n"],[1,6643,"}"]],[1410,1410],[6644,6644]]],[1543324842127,[null,[[-1,1410,"++"],[1,1413,"//"],[-1,1416,"//"],[1,3574,"``"],[-1,3600,"``"],[-1,4062,"=="],[1,4066,"=="],[-1,4072,"=="],[1,4076,"=="],[-1,4611,"=="],[1,4615,"=="],[-1,4623,"=="],[1,4627,"=="],[-1,5035,"\n"],[1,5038,"\n"],[1,5054,"\n"],[-1,5055,"n"],[1,5066,"\n"],[1,5068," "],[-1,5069,"in"],[1,5084," "],[-1,5086,"{ "],[1,5090," "],[-1,5101," "],[1,5104," "],[1,5106,"  "],[-1,5107,"in"],[1,5116,"  "],[-1,5117,"in"],[1,5126,"  "],[-1,5126,"="],[-1,5129,";"],[1,5132,"  "],[-1,5133,"pr"],[1,5200,"  "],[-1,5201,"fo"],[-1,5204," "],[1,5208,"    0   "],[-1,5208,"= 0; i"],[-1,5217,"1"],[-1,5220," "],[1,5223," "],[1,5226,"\n "],[-1,5232,"if "],[1,5237," "],[1,5244," "],[1,5247,"  "],[-1,5247,"2 !"],[1,5252," "],[-1,5253,")"],[1,5256,"  "],[-1,5259,"//"],[1,5285,"\n "],[-1,5292,"su"],[1,5296," =  "],[-1,5296,"+= a"],[1,5310,"  "],[-1,5313,"pr"],[-1,5341," "],[1,5347," "],[1,5356,"\n "],[-1,5365,"pr"],[-1,5387," "],[1,5390," "],[1,5395,"  "],[-1,5396,"re"],[1,5407,"\n"],[-1,5408,"\n"],[1,5433,"=="],[-1,5433,"注："],[1,5502,"\ni"],[-1,5520,"\ni"],[1,5533,"\n"],[1,5535," "],[-1,5536,"in"],[1,5544,"\n "],[-1,5545,"in"],[1,5554,"  "],[-1,5555,"fo"],[-1,5558," "],[1,5561,"  "],[-1,5564,"3"],[1,5566,"i"],[1,5567,"<"],[-1,5569,"<"],[-1,5571,"1"],[-1,5575," "],[1,5578," "],[1,5581,"\n "],[1,5583," "],[-1,5583,"\n"],[1,5589,"{\n"],[-1,5589,"  "],[-1,5606,"fo"],[-1,5609," "],[1,5613,"    2j <"],[-1,5613,"= 2; "],[-1,5620,"<"],[-1,5622,"i"],[-1,5624," "],[1,5627," "],[1,5630,"\n "],[-1,5640,"(i"],[1,5645," ) "],[-1,5645,"=="],[-1,5649,")"],[1,5651,"\n "],[-1,5660,"st"],[1,5667," "],[-1,5669,"1"],[1,5672,"\n "],[-1,5676,"br"],[1,5683,"\n "],[1,5687," \t}\n"],[-1,5687,"\n\t    "],[1,5696,"  "],[-1,5698,"if "],[1,5703," "],[1,5709," =  "],[-1,5709,"== 0"],[1,5715,"\n "],[-1,5722,"pr"],[-1,5736," "],[1,5739," "],[1,5741,"\n "],[1,5745,"\n \n  "],[-1,5745,"}\n}\n\n"],[-1,5769,"re"],[1,6403,"\n="],[-1,6403,"``"],[1,6426,"\ni"],[-1,6445,"\ni"],[1,6458,"\n"],[1,6460," "],[-1,6461,"in"],[1,6478,"  "],[-1,6478,"= {"],[1,6484," "],[-1,6497," "],[1,6500," \n"],[1,6501," "],[-1,6502,"in"],[-1,6509," "],[1,6512," \n"],[1,6513," "],[-1,6514,"fo"],[-1,6517," "],[1,6520,"  "],[-1,6523,"0"],[1,6525," "],[1,6528," "],[-1,6528,"<"],[-1,6531,"; "],[1,6535," "],[1,6538,"\n "],[-1,6543,"fo"],[-1,6546," "],[1,6550,"  "],[-1,6552,"0"],[1,6555,"  "],[-1,6555,"j"],[-1,6559,"3"],[-1,6561," "],[1,6564," "],[1,6567,"\n "],[-1,6574,"pr"],[-1,6604," "],[1,6613," "],[1,6625,"\n "],[-1,6633,"re"],[1,6644,"\n"],[-1,6644,"}"]],[6644,6644],[1410,1410]]],[1543324817398,["gjx16@GJXAIOU",[[1,7560,"\n    "]],[7555,7555],[7560,7560]]],[1543324822700,["gjx16@GJXAIOU",[[1,7560,"//打印程序"]],[7560,7560],[7566,7566]]]],null,"gjx16@GJXAIOU"],["321dc8b0-290e-431b-a29a-2acc2ee3e94c",1545132634946,"---\ndate:'2018-9-9'\nnandian:循环的嵌套\n---\n\n# day5\n@toc\n\n==笔记的day3和day4本身即为空缺==\n\n## 一、一维数组\n\n**1.定义数组**\n\n```c\n#include<stdio.h>\n\nint main()\n{\n  int array[10];  //定义了一个数组，数组名为array，里面有十个元素,从0-9；\n\n  array[0] = 20;\n  array[9] = 100;\n\n  printf(\"%d\\n\",array[0]);\n  printf(\"%d\\n\",sizeof(array));//一个整数四个字节，所以这里显示是40\n  \n  return 0;\n}\n```\n程序输出结果：\n`20`\n`40`\n\n数组本质就是：在内存中就是一个连续的空间；而且每个元素的类型是一样的；\n\n---\n\n**2.连续的赋值操作**\n\n```c\n#include<stdio.h>\nint main()\n{\n  int i;\n  int array[10];\n  for(i = 0;i < 10;i++)\n  {\n    array[i] = i;  \n    printf(\"array[%d] = %d\\n\",i,array[i]);\n  }\n  return 0;\n}\n```\n\n程序输出结果为：\n`array[0] = 0`\n`array[1] = 1`\n`array[2] = 2`\n`array[3] = 3`\n`array[4] = 4`\n`array[5] = 5`\n`array[6] = 6`\n`array[7] = 7`\n`array[8] = 8`\n`array[9] = 9`\n\n---\n\n**3.数组的初始化**\n\n\n```c\n#include<stdio.h>\nint main()\n{\n\n//数组初始化的三种方式(挨个赋值，部分赋值，统一赋值)\n  \n  //1.全部进行赋值\n  int array[10] = {1,1,3,5,5,6,9,6,8,5};\n\n  //2.定义一个数组的同时进行赋值初始化,这是部分初始化\n  int array[10] = {100,2,3,3,4,9};\n\n  //3-1.将所有元素置为0\n  int array[10] = {0};  \n  \n  //3-2.另一种置为0 的方法\n  int i;\n  for(i = 0; i < 10; i++)\n {\n   array[i] = 0;\n }\n\n\n\n  int i;\n  for(i = 0;i < 10;i++)\n  {\n    printf(\"array[%d] = %d\\n\",i,array[i]);\n  }\n  return 0;\n}\n\n```\n\n---\n**4.求数组中最大元素的值**\n\n将数组中的第一个元素默认设置成最大的元素，然后让各个元素进行比较；\n```c\n#include<stdio.h>\nint main()\n{\n  int array[5] = {2,3,5,6,7};\n  int max = array[0];\n  \n  \n  int i;\n  for(i = 1;i < 5;i++) \n  //等效于：for(i = 1; i < sizeof(array)/sizeof(int);i++)\n  //想找最大的先遍历一遍,因为第一的元素默认设置成最大值，所以这里的循环从1开始；\n  {\n    if(max < array[i])\n     {\n        max = array[i];\n     }\n  }\n\n  printf(\"max = %d\\n\",max);\n\nreturn 0;\n\n}\n```\n程序运行结果：`max = 7`\n\n---\n\n**5.求数组中的最小值，并求出最小值的编号**\n```c\n#include<stdio.h>\nint main()\n{\n  int array[5] = {6,3,5,6,7};\n  int min = array[0];\n  int index = 0;//在没有遍历数组之前，默认数组的第0号元素就是最小的元素；所以默认的地址也是0；\n  \n  int i;\n  for(i = 1;i < 5;i++) //想找最小的先遍历一遍\n    {\n      if(min > array[i])\n       {\n          index = i;\n          min = array[i];\n       }\n    }\n\n  printf(\"min = %d,index = %d\\n\",min,index);\n\nreturn 0;\n\n}\n\n\n```\n程序输出结果：`min = 3,index = 1`\n\n---\n\n**6.求数组元素和**\n\n```c\n#include<stdio.h>\nint main()\n{\n  int array[10] = {1,2,3,4,5,6,7,8,9,0};\n  int i;\n  int sum = 0;\n  for(i = 0; i < 10; i++)\n  {\n    sum += array[i];\n  }\n\n  printf(\"sum = %d\\n\",sum);\n\n  return 0;\n\n}\n```\n程序运行结果:`sum = 45`\n\n---\n\n**7.打印数组中大于平均值的所有的值与其下标**\n```c\n#include<stdio.h>\n\nint  main()\n{\n  int  array[10]  =  {1,2,3,4,5,6,7,8,9,0};\n  \n  int  i;\n  float  aver;\n  int  sum  =  0;\n  int  index  =  0;\n  for(i  =  0;  i  <  10;i++)\n    {\n      sum  +=array[i];\n    }\n\n  aver  =  sum/10.0;\n  printf(\"the aver of the array is = %f\\n\",aver);\n \n\n  printf(\"The  following  elements  are  greater  than  the  average  value  of  the  array.  The  addresses  are:\\n\");\n\n\n  for(i  =  0;i  <  10;i++)\n  {\n    if(array[i]  >aver)\n      {\n        index  =  i;\n        printf(\"array[%d]  =  %d,index  =  %d\\n\",i,array[i],index);\n      }\n  }\n\n  return 0;\n}\n```\n\n程序输出的结果为：\n`the aver of the array is = 4.500000`\n`The  following  elements  are  greater  than  the  average  value  of  the  array.  The  addresses  are:`\n`array[4]  =  5,index  =  4`\n`array[5]  =  6,index  =  5`\n`array[6]  =  7,index  =  6`\n`array[7]  =  8,index  =  7`\n`array[8]  =  9,index  =  8`\n\n---\n\n**8.数组逆置**\n- 实现单个元素的互换\n```c\n#include<stdio.h>\n\nint  main()\n{\n  int  array[5]  =  {1,2,3,4,5};\n\n//部分交换\n\n  int  i;\n  int  tmp  =  array[0];\n  array[0]  =  array[1];\n  array[1]  =  tmp;\n\n  for(i  =  0;i < 5;i++)\n  {\n    printf(\"array[%d]=%d\\n\",i,array[i]);\n  }\n\n  return  0;\n}\n\n```\n程序运行结果为：\n`array[0]=2`\n`array[1]=1`\n`array[2]=3`\n`array[3]=4`\n`array[4]=5`\n\n- 实现数组的前半部分和后半部分的互换\n  - 法一：直接换元素\n ==注意这里的是i 和 个数-1-i进行交换==\n```c\n#include<stdio.h>\n\nint  main()\n\n{\n  int  array[10]  =  {1,2,3,4,5,6,7,8,9,0};\n  int  i;\n  for(i  =  0;  i  <=  4;  i++)\n  {\n    int  tmp  =  array[i];\n    array[i]  =  array[9-i];\n    array[9-i]  =  tmp;\n  }\n\n  for(i  =  0;i  <  10;i++)\n    {\n      printf(\"array[%d]=%d\\n\",i,array[i]);\n    }\n\n  return  0;\n\n}\n```\n程序运行结果为：\n`array[0]=0`\n`array[1]=9`\n`array[2]=8`\n`array[3]=7`\n`array[4]=6`\n`array[5]=5`\n`array[6]=4`\n`array[7]=3`\n`array[8]=2`\n`array[9]=1`\n\n  - ==法二：通过换下标==\n```c\n#include<stdio.h>\n\nint  main()\n{\n  int  array[10]  =  {1,2,3,4,5,6,7,8,9,0};\n  int  i;\n\n  int  min  =  0;//数组的最小下标\n  int  max  =  9;//数组的最大下标\n\n  while(min < max)\n   {\n      int  tmp  =  array[min];\n      array[min]  =  array[max];\n      array[max]  =tmp;\n      min++;\n      max--;\n   }\n\n  for(i  =  0;i  <  10;i++)\n  {\n    printf(\"array[%d]=%d\\n\",i,array[i]);\n  }\n\n  return  0;\n\n}\n\n```\n程序运行结果为：\n`array[0]=0`\n`array[1]=9`\n`array[2]=8`\n`array[3]=7`\n`array[4]=6`\n`array[5]=5`\n`array[6]=4`\n`array[7]=3`\n`array[8]=2`\n`array[9]=1`\n\n---\n\n==**9.水仙花数**==\n查找100都1000之间的水仙花数；\n```c\n#include<stdio.h>\n\nint  main()\n{\n  int  i;\n  for(i  =  100;  i  <  1000;i++)\n    {\n      int  i1  =  i%10;//求个位上的数字\n      int  i2  =  i/10%10;//求十位上的数字\n      int  i3  =  i/100;//求百位上数字\n      \n      if(i1*i1*i1  +  i2*i2*i2  +  i3*i3*i3  ==  i)\n        {\n          printf(\"%d\\n\",i);\n        }\n   }\n\n  return  0;\n\n}\n```\n程序运行结果；\n`153`\n`370`\n`371`\n`407`\n\n\n---\n\n\n**10.求一个数组中所有奇数元素之和**\n```c\n\n#include<stdio.h>\nint  main()\n{\n\tint  array[10] = { 1,3,4,7,8,0,9 };\n\n\tint  i;\n\n\tint  sum = 0;\n\n\tprintf(\"The  odd  numbers  in  the  array  are  as  follows:\\n\");\n\n\tfor (i = 0; i < 10; i++)\n\t{\n\n\t\tif (array[i] % 2 != 0)\n\n\t\t\t//if(array[i]%  2  ==  1)\n\t\t{\n\t\t\tsum += array[i];\n\n\t\t\tprintf(\"array[%d]  =  %d\\n\", i, array[i]);\n\t\t}\n\t}\n\n\tprintf(\"sum  =  %d\\n\", sum);\n\n\treturn  0;\n}\n```\n\n**11.求3-100中的素数**\n\n注：素数：除了1和本身均不能被任何数整除；(也就是相当于不能被2到i-1之间的任何数整除)\n```c\n#include<stdio.h>\n#include\"stdlib.h\"\nint  main()\n{\n\tint  i;\n\tint  j;\n\n\tfor (i = 3; i < 101; i++)\n\t{\n\t\tint  status = 0;\n\n\t\tfor (j = 2; j < i; j++)\n\t\t{\n\t\t\tif (i%j == 0)\n\t\t\t{\n\t\t\t\tstatus = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t    }\n\n\t\tif (status == 0)\n\t\t{\n\t\t\tprintf(\"%d\\n\", i);\n\t\n\t\t}\n}\n\n\tsystem(\"pause\");\n\treturn  0;\n\n}\n```\n![素数]($resource/%E7%B4%A0%E6%95%B0.png)\n\n\n\n\n\n\n\n\n\n\n\n\n\n# 二维数组\n可以近似理解为表格；\n\n**1.二维数组的定义**\n\n```c\n#include<stdio.h>\n\nint main()\n{\n\n//先定义后赋值\n  int array[2][3];//定义了一个二维数组，相当于有两个array[3] \n  array[0][0] = 0;//给第0行第0列赋值\n  array[1][2] = 0;//给第1行第2列赋值\n\n//定义的同时进行赋值\n  int a[3][4] = {{1,2,3,4,},{5,6,7,8},{9,10,11,12}};\n  int a[3][4] = {0};//将二维数组中所有值全部置0\n  \n  return 0;\n}\n```\n\n**2.数组大小**\n\n```c\nint main()\n{\n  int array[2][3] = {{1,2,3},{4,5,6}};\n  printf(\"%d\\n\",sizeof(array));//整个数组的大小为24\n  printf(\"%d\\n\",sizeof(array[0])); //相当于第0行的大小，为12\n  printf(\"%d\\n\",sizeof(array[0][0]));//相当于第0行第0列元素的大小，为4\n return 0;\n}\n```\n\n**3.数组的值输出**\n```c\n#include<stdio.h>\n#include\"stdlib.h\"\n\nint  main()\n{\n\tint  array[2][3] = { {1,2,3},{4,5,6} };\n\tint  i, j;\n\tfor (i = 0; i < 2; i++)\n\t{\n\t\tfor (j = 0; j < 3; j++)\n\t\t{\n\t\t\tprintf(\"array[%d][%d]=  %d\\n\", i, j, array[i][j]);\n\t\t}\n\t}\n\treturn  0;\n}\n```\n\n\n**4.求一个二维数组的每行每列的和**\n\n==注意printf的位置==\n每行的和：\n```c\nint main()\n{\n  int array[3][5] = {{1,3,4,5,9},{4,9,5,0,8},{9,3,4,23,4}};\n  int i,j;\n  for(i = 0; i <3;i++)\n  {\n    int sum = 0;\n    for(j = 0;j < 5;j++)\n    {\n      sum += array[i][j];\n    }\n    printf(\"%d\\n\",sum);\n  }\n  return 0;\n}\n```\n\n每列的和：\n\n```c\nint main()\n{\n   int array[3][5] = {{1,3,4,5,9},{4,9,5,0,8},{9,3,4,23,4}};\n   int i,j;\n   for(j = 0; j < 5; j++);\n   {\n     int sum = 0;\n     for(i = 0; i < 3;i++)\n     {\n       sum +=array[i][j];\n     }\n   printf(\"%d\\n\",array[i][j]);\n   }\n  return 0;\n}\n```\n\n\n**5.冒泡排序**\n```c\nint main()\n{\n  int array[10] = {1,4,8,0,9,34,98,100,5,3};\n  int i;\n  int j;\n  for(i = 0;i < 10;i++)\n    {\n      for(j = 1; j < 10-i;j++)\n      {\n        if(array[j-1] >array[j])\n          {\n            int tmp;\n            tmp = array[j];\n            array[j] = array[j-1];\n            array[j-1] = tmp;\n          }\n      }\n    }\n    //打印程序\n    for(i = 0;i < 10;i++)\n    {\n    printf(\"array[%d] = %d\\n\",i,array[i]);\n    }\n  return 0;\n}\n```\n\n\n\n\n\n\n\n\n",[[1545132616931,["gjx16@GJXAIOU",[[1,188," "]],[188,188],[189,189]]],[1545137021136,["gjx16@GJXAIOU",[[-1,2456," 10"]],[2459,2459],[2456,2456]]],[1545137024237,["gjx16@GJXAIOU",[[1,2456,"s"]],[2456,2456],[2457,2457]]],[1545137024433,["gjx16@GJXAIOU",[[-1,2456,"s"]],[2457,2457],[2456,2456]]],[1545137028116,["gjx16@GJXAIOU",[[1,2456,"sizeof()"]],[2456,2456],[2464,2464]]],[1545137033068,["gjx16@GJXAIOU",[[1,2463,"array"]],[2463,2463],[2468,2468]]],[1545137037858,["gjx16@GJXAIOU",[[1,2469,"/sie"]],[2469,2469],[2473,2473]]],[1545137038926,["gjx16@GJXAIOU",[[-1,2472,"e"]],[2473,2473],[2472,2472]]],[1545137041864,["gjx16@GJXAIOU",[[1,2472,"zeof()"]],[2472,2472],[2478,2478]]],[1545137043610,["gjx16@GJXAIOU",[[1,2477,"int"]],[2477,2477],[2480,2480]]],[1545137050028,["gjx16@GJXAIOU",[[-1,2456,"sizeof(array)/sizeof(int)"]],[2456,2481],[2456,2456]]],[1545137051807,["gjx16@GJXAIOU",[[1,2456,"sizeof(array)/sizeof(int)"]],[2456,2456],[2481,2481]]],[1545137056289,["gjx16@GJXAIOU",[[-1,2538,"10.0"]],[2542,2542],[2538,2538]]],[1545137057917,["gjx16@GJXAIOU",[[1,2538,"()"]],[2538,2538],[2540,2540]]],[1545137060123,["gjx16@GJXAIOU",[[1,2539,"("]],[2539,2539],[2540,2540]]],[1545137060225,["gjx16@GJXAIOU",[[1,2541,")"]],[2540,2540],[2541,2541]]],[1545137063310,["gjx16@GJXAIOU",[[1,2540,"douboe"]],[2540,2540],[2546,2546]]],[1545137065984,["gjx16@GJXAIOU",[[-1,2539,"(douboe"]],[2546,2546],[2539,2539]]],[1545137070637,["gjx16@GJXAIOU",[[1,2539,"(float"]],[2539,2539],[2545,2545]]],[1545137074453,["gjx16@GJXAIOU",[[1,2546,"sizeof(array)/sizeof(int)"]],[2546,2546],[2571,2571]]],[1545137081280,["gjx16@GJXAIOU",[[-1,2539,"("]],[2539,2539],[2538,2538]]],[1545137084440,["gjx16@GJXAIOU",[[1,2545,"("]],[2545,2545],[2546,2546]]],[1545140707010,["gjx16@GJXAIOU",[[1,4220,"  \n"]],[4219,4219],[4222,4222]]],[1545140708939,["gjx16@GJXAIOU",[[1,4222,"听"]],[4222,4222],[4223,4223]]],[1545140709491,["gjx16@GJXAIOU",[[-1,4222,"听"]],[4223,4223],[4222,4222]]],[1545140712248,["gjx16@GJXAIOU",[[1,4222,"int num "]],[4222,4222],[4230,4230]]],[1545140712976,["gjx16@GJXAIOU",[[-1,4229," "]],[4230,4230],[4229,4229]]],[1545140715318,["gjx16@GJXAIOU",[[1,4229," sizefo"]],[4229,4229],[4236,4236]]],[1545140716062,["gjx16@GJXAIOU",[[-1,4234,"fo"]],[4236,4236],[4234,4234]]],[1545140717530,["gjx16@GJXAIOU",[[1,4234,"of()"]],[4234,4234],[4238,4238]]],[1545140719592,["gjx16@GJXAIOU",[[1,4237,"array"]],[4237,4237],[4242,4242]]],[1545140721742,["gjx16@GJXAIOU",[[1,4243,"/"]],[4243,4243],[4244,4244]]],[1545140729440,["gjx16@GJXAIOU",[[1,4230,"= "]],[4230,4230],[4232,4232]]],[1545140734966,["gjx16@GJXAIOU",[[1,4246,"s"]],[4246,4246],[4247,4247]]],[1545140736172,["gjx16@GJXAIOU",[[1,4249,"efo"]],[4249,4249],[4252,4252]]],[1545140737177,["gjx16@GJXAIOU",[[-1,4250,"fo"]],[4252,4252],[4250,4250]]],[1545140739046,["gjx16@GJXAIOU",[[1,4250,"of()"]],[4250,4250],[4254,4254]]],[1545140739519,["gjx16@GJXAIOU",[[1,4253,"a"]],[4253,4253],[4254,4254]]],[1545140740905,["gjx16@GJXAIOU",[[-1,4253,"a"]],[4254,4254],[4253,4253]]],[1545140741617,["gjx16@GJXAIOU",[[1,4253,"int"]],[4253,4253],[4256,4256]]],[1545140743723,["gjx16@GJXAIOU",[[1,4257,";'"]],[4257,4257],[4259,4259]]],[1545140744384,["gjx16@GJXAIOU",[[-1,4258,"'"]],[4259,4259],[4258,4258]]],[1545140752993,["gjx16@GJXAIOU",[[-1,4302,"9"]],[4303,4303],[4302,4302]]],[1545140756950,["gjx16@GJXAIOU",[[1,4302,"num ="]],[4302,4302],[4307,4307]]],[1545140757356,["gjx16@GJXAIOU",[[-1,4306,"="]],[4307,4307],[4306,4306]]],[1545140758140,["gjx16@GJXAIOU",[[1,4306,"-1"]],[4306,4306],[4308,4308]]],[1545140764766,["gjx16@GJXAIOU",[[-1,4484,"10"]],[4486,4486],[4484,4484]]],[1545140766134,["gjx16@GJXAIOU",[[1,4484,"numn"]],[4484,4484],[4488,4488]]],[1545140767460,["gjx16@GJXAIOU",[[-1,4487,"n"]],[4488,4488],[4487,4487]]],[1545142190847,[null,[[-1,4247,"\n\n"],[1,4249,"iz"],[1,4258,"\n\n"],[-1,4300,"9;"],[1,4308,";/"],[-1,4482,"10"],[1,4487,";i"]],[4247,4247],[4489,4489]]],[1545142190847,[null,[[1,4247,"\n\n"],[-1,4247,"iz"],[-1,4258,"\n\n"],[1,4302,"9;"],[-1,4308,";/"],[1,4484,"10"],[-1,4487,";i"]],[4489,4489],[4247,4247]]],[1545142153846,["gjx16@GJXAIOU",[[1,4906,"\n      "]],[4899,4899],[4906,4906]]],[1545142173543,["gjx16@GJXAIOU",[[1,4906,"//或者为：int i2 = i%100/10"]],[4906,4906],[4929,4929]]]],null,"gjx16@GJXAIOU"],["5558e8b2-d2e3-46ef-8db8-9333e0568771",1545180621398,"---\ndate:'2018-9-9'\nnandian:循环的嵌套\n---\n\n# day5\n@toc\n\n==笔记的day3和day4本身即为空缺==\n\n## 一、一维数组\n\n**1.定义数组**\n\n```c\n#include<stdio.h>\n\nint main()\n{\n  int array[10];  //定义了一个数组，数组名为array，里面有十个元素,从0-9；\n \n  array[0] = 20;\n  array[9] = 100;\n\n  printf(\"%d\\n\",array[0]);\n  printf(\"%d\\n\",sizeof(array));//一个整数四个字节，所以这里显示是40\n  \n  return 0;\n}\n```\n程序输出结果：\n`20`\n`40`\n\n数组本质就是：在内存中就是一个连续的空间；而且每个元素的类型是一样的；\n\n---\n\n**2.连续的赋值操作**\n\n```c\n#include<stdio.h>\nint main()\n{\n  int i;\n  int array[10];\n  for(i = 0;i < 10;i++)\n  {\n    array[i] = i;  \n    printf(\"array[%d] = %d\\n\",i,array[i]);\n  }\n  return 0;\n}\n```\n\n程序输出结果为：\n`array[0] = 0`\n`array[1] = 1`\n`array[2] = 2`\n`array[3] = 3`\n`array[4] = 4`\n`array[5] = 5`\n`array[6] = 6`\n`array[7] = 7`\n`array[8] = 8`\n`array[9] = 9`\n\n---\n\n**3.数组的初始化**\n\n\n```c\n#include<stdio.h>\nint main()\n{\n\n//数组初始化的三种方式(挨个赋值，部分赋值，统一赋值)\n  \n  //1.全部进行赋值\n  int array[10] = {1,1,3,5,5,6,9,6,8,5};\n\n  //2.定义一个数组的同时进行赋值初始化,这是部分初始化\n  int array[10] = {100,2,3,3,4,9};\n\n  //3-1.将所有元素置为0\n  int array[10] = {0};  \n  \n  //3-2.另一种置为0 的方法\n  int i;\n  for(i = 0; i < 10; i++)\n {\n   array[i] = 0;\n }\n\n\n\n  int i;\n  for(i = 0;i < 10;i++)\n  {\n    printf(\"array[%d] = %d\\n\",i,array[i]);\n  }\n  return 0;\n}\n\n```\n\n---\n**4.求数组中最大元素的值**\n\n将数组中的第一个元素默认设置成最大的元素，然后让各个元素进行比较；\n```c\n#include<stdio.h>\nint main()\n{\n  int array[5] = {2,3,5,6,7};\n  int max = array[0];\n  \n  \n  int i;\n  for(i = 1;i < 5;i++) \n  //等效于：for(i = 1; i < sizeof(array)/sizeof(int);i++)\n  //想找最大的先遍历一遍,因为第一的元素默认设置成最大值，所以这里的循环从1开始；\n  {\n    if(max < array[i])\n     {\n        max = array[i];\n     }\n  }\n\n  printf(\"max = %d\\n\",max);\n\nreturn 0;\n\n}\n```\n程序运行结果：`max = 7`\n\n---\n\n**5.求数组中的最小值，并求出最小值的编号**\n```c\n#include<stdio.h>\nint main()\n{\n  int array[5] = {6,3,5,6,7};\n  int min = array[0];\n  int index = 0;//在没有遍历数组之前，默认数组的第0号元素就是最小的元素；所以默认的地址也是0；\n  \n  int i;\n  for(i = 1;i < 5;i++) //想找最小的先遍历一遍\n    {\n      if(min > array[i])\n       {\n          index = i;\n          min = array[i];\n       }\n    }\n\n  printf(\"min = %d,index = %d\\n\",min,index);\n\nreturn 0;\n\n}\n\n\n```\n程序输出结果：`min = 3,index = 1`\n\n---\n\n**6.求数组元素和**\n\n```c\n#include<stdio.h>\nint main()\n{\n  int array[10] = {1,2,3,4,5,6,7,8,9,0};\n  int i;\n  int sum = 0;\n  for(i = 0; i < 10; i++)\n  {\n    sum += array[i];\n  }\n\n  printf(\"sum = %d\\n\",sum);\n\n  return 0;\n\n}\n```\n程序运行结果:`sum = 45`\n\n---\n\n**7.打印数组中大于平均值的所有的值与其下标**\n```c\n#include<stdio.h>\n\nint  main()\n{\n  int  array[10]  =  {1,2,3,4,5,6,7,8,9,0};\n  \n  int  i;\n  float  aver;\n  int  sum  =  0;\n  int  index  =  0;\n  for(i  =  0;  i  < sizeof(array)/sizeof(int);i++)\n    {\n      sum  +=array[i];\n    }\n\n  aver  =  sum/(float)(sizeof(array)/sizeof(int));\n  printf(\"the aver of the array is = %f\\n\",aver);\n \n\n  printf(\"The  following  elements  are  greater  than  the  average  value  of  the  array.  The  addresses  are:\\n\");\n\n\n  for(i  =  0;i  <  10;i++)\n  {\n    if(array[i]  >aver)\n      {\n        index  =  i;\n        printf(\"array[%d]  =  %d,index  =  %d\\n\",i,array[i],index);\n      }\n  }\n\n  return 0;\n}\n```\n\n程序输出的结果为：\n`the aver of the array is = 4.500000`\n`The  following  elements  are  greater  than  the  average  value  of  the  array.  The  addresses  are:`\n`array[4]  =  5,index  =  4`\n`array[5]  =  6,index  =  5`\n`array[6]  =  7,index  =  6`\n`array[7]  =  8,index  =  7`\n`array[8]  =  9,index  =  8`\n\n---\n\n**8.数组逆置**\n- 实现单个元素的互换\n```c\n#include<stdio.h>\n\nint  main()\n{\n  int  array[5]  =  {1,2,3,4,5};\n\n//部分交换\n\n  int  i;\n  int  tmp  =  array[0];\n  array[0]  =  array[1];\n  array[1]  =  tmp;\n\n  for(i  =  0;i < 5;i++)\n  {\n    printf(\"array[%d]=%d\\n\",i,array[i]);\n  }\n\n  return  0;\n}\n\n```\n程序运行结果为：\n`array[0]=2`\n`array[1]=1`\n`array[2]=3`\n`array[3]=4`\n`array[4]=5`\n\n- 实现数组的前半部分和后半部分的互换\n  - 法一：直接换元素\n ==注意这里的是i 和 个数-1-i进行交换==\n```c\n#include<stdio.h>\n\nint  main()\n\n{\n  int  array[10]  =  {1,2,3,4,5,6,7,8,9,0};\n  int  i;\n  for(i  =  0;  i  <=  4;  i++)\n  {\n    int  tmp  =  array[i];\n    array[i]  =  array[9-i];\n    array[9-i]  =  tmp;\n  }\n\n  for(i  =  0;i  <  10;i++)\n    {\n      printf(\"array[%d]=%d\\n\",i,array[i]);\n    }\n\n  return  0;\n\n}\n```\n程序运行结果为：\n`array[0]=0`\n`array[1]=9`\n`array[2]=8`\n`array[3]=7`\n`array[4]=6`\n`array[5]=5`\n`array[6]=4`\n`array[7]=3`\n`array[8]=2`\n`array[9]=1`\n\n  - ==法二：通过换下标==\n```c\n#include<stdio.h>\n\nint  main()\n{\n  int  array[10]  =  {1,2,3,4,5,6,7,8,9,0};\n  int  i;\n  int num = sizeof(array)/sizeof(int);\n\n  int  min  =  0;//数组的最小下标\n  int  max  =  num -1;//数组的最大下标\n\n  while(min < max)\n   {\n      int  tmp  =  array[min];\n      array[min]  =  array[max];\n      array[max]  =tmp;\n      min++;\n      max--;\n   }\n\n  for(i  =  0;i  <  num;i++)\n  {\n    printf(\"array[%d]=%d\\n\",i,array[i]);\n  }\n\n  return  0;\n\n}\n\n```\n程序运行结果为：\n`array[0]=0`\n`array[1]=9`\n`array[2]=8`\n`array[3]=7`\n`array[4]=6`\n`array[5]=5`\n`array[6]=4`\n`array[7]=3`\n`array[8]=2`\n`array[9]=1`\n\n---\n\n==**9.水仙花数**==\n查找100都1000之间的水仙花数；\n```c\n#include<stdio.h>\n\nint  main()\n{\n  int  i;\n  for(i  =  100;  i  <  1000;i++)\n    {\n      int  i1  =  i%10;//求个位上的数字\n      int  i2  =  i/10%10;//求十位上的数字\n      //或者为：int i2 = i%100/10\n      int  i3  =  i/100;//求百位上数字\n      \n      if(i1*i1*i1  +  i2*i2*i2  +  i3*i3*i3  ==  i)\n        {\n          printf(\"%d\\n\",i);\n        }\n   }\n\n  return  0;\n\n}\n```\n程序运行结果；\n`153`\n`370`\n`371`\n`407`\n\n\n---\n\n\n**10.求一个数组中所有奇数元素之和**\n```c\n\n#include<stdio.h>\nint  main()\n{\n\tint  array[10] = { 1,3,4,7,8,0,9 };\n\n\tint  i;\n\n\tint  sum = 0;\n\n\tprintf(\"The  odd  numbers  in  the  array  are  as  follows:\\n\");\n\n\tfor (i = 0; i < 10; i++)\n\t{\n\n\t\tif (array[i] % 2 != 0)\n\n\t\t\t//if(array[i]%  2  ==  1)\n\t\t{\n\t\t\tsum += array[i];\n\n\t\t\tprintf(\"array[%d]  =  %d\\n\", i, array[i]);\n\t\t}\n\t}\n\n\tprintf(\"sum  =  %d\\n\", sum);\n\n\treturn  0;\n}\n```\n\n**11.求3-100中的素数**\n\n注：素数：除了1和本身均不能被任何数整除；(也就是相当于不能被2到i-1之间的任何数整除)\n```c\n#include<stdio.h>\n#include\"stdlib.h\"\nint  main()\n{\n\tint  i;\n\tint  j;\n\n\tfor (i = 3; i < 101; i++)\n\t{\n\t\tint  status = 0;\n\n\t\tfor (j = 2; j < i; j++)\n\t\t{\n\t\t\tif (i%j == 0)\n\t\t\t{\n\t\t\t\tstatus = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t    }\n\n\t\tif (status == 0)\n\t\t{\n\t\t\tprintf(\"%d\\n\", i);\n\t\n\t\t}\n}\n\n\tsystem(\"pause\");\n\treturn  0;\n\n}\n```\n![素数]($resource/%E7%B4%A0%E6%95%B0.png)\n\n\n\n\n\n\n\n\n\n\n\n\n\n# 二维数组\n可以近似理解为表格；\n\n**1.二维数组的定义**\n\n```c\n#include<stdio.h>\n\nint main()\n{\n\n//先定义后赋值\n  int array[2][3];//定义了一个二维数组，相当于有两个array[3] \n  array[0][0] = 0;//给第0行第0列赋值\n  array[1][2] = 0;//给第1行第2列赋值\n\n//定义的同时进行赋值\n  int a[3][4] = {{1,2,3,4,},{5,6,7,8},{9,10,11,12}};\n  int a[3][4] = {0};//将二维数组中所有值全部置0\n  \n  return 0;\n}\n```\n\n**2.数组大小**\n\n```c\nint main()\n{\n  int array[2][3] = {{1,2,3},{4,5,6}};\n  printf(\"%d\\n\",sizeof(array));//整个数组的大小为24\n  printf(\"%d\\n\",sizeof(array[0])); //相当于第0行的大小，为12\n  printf(\"%d\\n\",sizeof(array[0][0]));//相当于第0行第0列元素的大小，为4\n return 0;\n}\n```\n\n**3.数组的值输出**\n```c\n#include<stdio.h>\n#include\"stdlib.h\"\n\nint  main()\n{\n\tint  array[2][3] = { {1,2,3},{4,5,6} };\n\tint  i, j;\n\tfor (i = 0; i < 2; i++)\n\t{\n\t\tfor (j = 0; j < 3; j++)\n\t\t{\n\t\t\tprintf(\"array[%d][%d]=  %d\\n\", i, j, array[i][j]);\n\t\t}\n\t}\n\treturn  0;\n}\n```\n\n\n**4.求一个二维数组的每行每列的和**\n\n==注意printf的位置==\n每行的和：\n```c\nint main()\n{\n  int array[3][5] = {{1,3,4,5,9},{4,9,5,0,8},{9,3,4,23,4}};\n  int i,j;\n  for(i = 0; i <3;i++)\n  {\n    int sum = 0;\n    for(j = 0;j < 5;j++)\n    {\n      sum += array[i][j];\n    }\n    printf(\"%d\\n\",sum);\n  }\n  return 0;\n}\n```\n\n每列的和：\n\n```c\nint main()\n{\n   int array[3][5] = {{1,3,4,5,9},{4,9,5,0,8},{9,3,4,23,4}};\n   int i,j;\n   for(j = 0; j < 5; j++);\n   {\n     int sum = 0;\n     for(i = 0; i < 3;i++)\n     {\n       sum +=array[i][j];\n     }\n   printf(\"%d\\n\",array[i][j]);\n   }\n  return 0;\n}\n```\n\n\n**5.冒泡排序**\n```c\nint main()\n{\n  int array[10] = {1,4,8,0,9,34,98,100,5,3};\n  int i;\n  int j;\n  for(i = 0;i < 10;i++)\n    {\n      for(j = 1; j < 10-i;j++)\n      {\n        if(array[j-1] >array[j])\n          {\n            int tmp;\n            tmp = array[j];\n            array[j] = array[j-1];\n            array[j-1] = tmp;\n          }\n      }\n    }\n    //打印程序\n    for(i = 0;i < 10;i++)\n    {\n    printf(\"array[%d] = %d\\n\",i,array[i]);\n    }\n  return 0;\n}\n```\n\n\n\n\n\n\n\n\n",[[1545180614431,["gjx16@GJXAIOU",[[1,34,"\n"]],[33,33],[34,34]]],[1545180619093,["gjx16@GJXAIOU",[[1,34,"date"]],[34,34],[38,38]]],[1545180622540,["gjx16@GJXAIOU",[[-1,38,"："]],[39,39],[38,38]]],[1545180625765,["gjx16@GJXAIOU",[[1,38,":``"]],[38,38],[41,41]]],[1545180642672,["gjx16@GJXAIOU",[[1,40,"2018-12-18"]],[40,40],[50,50]]],[1545180647775,["gjx16@GJXAIOU",[[1,51,"fuji"]],[51,51],[55,55]]],[1545180648870,["gjx16@GJXAIOU",[[-1,51,"fuji"]],[55,55],[51,51]]],[1545180650989,["gjx16@GJXAIOU",[[1,51,"复习"]],[51,51],[53,53]]]],null,"gjx16@GJXAIOU"]]}