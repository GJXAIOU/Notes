{"compress":true,"commitItems":[["958169d6-96f4-484e-a375-710a3dc4fc03",1540042819530,"",[[1540042765018,["gjx16@GJXAIOU",[[1,0,"# day01\n\n\n\n"]],[0,0],[10,10]]],[1540042798416,["gjx16@GJXAIOU",[[1,9,"1.概述：学习要求，学习标准"]],[9,9],[23,23]]],[1540042798826,["gjx16@GJXAIOU",[[1,25,"\n"]],[23,23],[24,24]]],[1540042812813,["gjx16@GJXAIOU",[[1,24,"2.数据类型、变量"]],[24,24],[33,33]]],[1540042813211,["gjx16@GJXAIOU",[[1,35,"\n"]],[33,33],[34,34]]],[1540042814610,["gjx16@GJXAIOU",[[1,34,"3."]],[34,34],[36,36]]],[1540042835156,["gjx16@GJXAIOU",[[1,36,"内存四区（）"]],[36,36],[42,42]]],[1540042847844,["gjx16@GJXAIOU",[[1,41,"栈、堆、全局、代码区"]],[41,41],[51,51]]],[1540042851710,["gjx16@GJXAIOU",[[1,8,"---"]],[8,8],[11,11]]],[1540042854302,["gjx16@GJXAIOU",[[-1,56,"\n"],[1,57,"-"]],[56,56],[57,57]]],[1540042854603,["gjx16@GJXAIOU",[[1,57,"--"]],[57,57],[59,59]]],[1540042858001,["gjx16@GJXAIOU",[[-1,8,"---"],[-1,12,"1.概述：学习要求，学习标准\n2.数据类型、变量\n3.内存四区（栈、堆、全局、代码区）\n---"]],[8,59],[8,8]]],[1540042859523,["gjx16@GJXAIOU",[[1,0,"\n"]],[0,0],[1,1]]],[1540042859658,["gjx16@GJXAIOU",[[1,0,"\n"]],[1,1],[2,2]]],[1540042860834,["gjx16@GJXAIOU",[[1,0,"---\n1.概述：学习要求，学习标准\n2.数据类型、变量\n3.内存四区（栈、堆、全局、代码区）\n---"]],[0,0],[51,51]]],[1540042989214,["gjx16@GJXAIOU",[[1,61,"![学习历程]($resource/%E5%AD%A6%E4%B9%A0%E5%8E%86%E7%A8%8B.png)\n"]],[61,61],[121,121]]],[1540042990890,["gjx16@GJXAIOU",[[1,122,"\n"]],[121,121],[122,122]]],[1540042993365,["gjx16@GJXAIOU",[[1,61,"\n"]],[60,60],[61,61]]]],null,"gjx16@GJXAIOU"],["eb4ae8a9-109e-43c8-bcd3-35e0c42734bd",1540083458728,"---\n1.概述：学习要求，学习标准\n2.数据类型、变量\n3.内存四区（栈、堆、全局、代码区）\n---\n\n# day01\n\n![学习历程]($resource/%E5%AD%A6%E4%B9%A0%E5%8E%86%E7%A8%8B.png)\n\n\n",[[1540083443970,["gjx16@GJXAIOU",[[-1,123,"\n"],[1,124,"2"]],[123,123],[124,124]]],[1540083444353,["gjx16@GJXAIOU",[[1,124,"、"]],[124,124],[125,125]]],[1540083444992,["gjx16@GJXAIOU",[[-1,124,"、"]],[125,125],[124,124]]],[1540083445385,["gjx16@GJXAIOU",[[1,124,"。"]],[124,124],[125,125]]],[1540083446264,["gjx16@GJXAIOU",[[-1,124,"。"]],[125,125],[124,124]]],[1540083448240,["gjx16@GJXAIOU",[[1,124,".****"]],[124,124],[127,127]]],[1540083456579,["gjx16@GJXAIOU",[[1,127,"如何看懂带"]],[127,127],[132,132]]],[1540083460643,["gjx16@GJXAIOU",[[1,135,"程序"]],[135,135],[137,137]]],[1540083462257,["gjx16@GJXAIOU",[[1,139,"\n\n"]],[139,139],[140,140]]],[1540083462425,["gjx16@GJXAIOU",[[1,141,"\n"]],[140,140],[141,141]]],[1540083464201,["gjx16@GJXAIOU",[[-1,141,"\n"],[1,142,"-"]],[141,141],[142,142]]],[1540083516195,["gjx16@GJXAIOU",[[1,142," 看懂流程\n- 每个语句的功能\n- 试数\n- 调试"]],[142,142],[167,167]]],[1540083577663,[null,[[-1,132,"**程序\n"],[1,137,"算法的程序**"]],[132,132],[144,144]]],[1540083577663,[null,[[1,132,"**程序\n"],[-1,132,"算法的程序**"]],[144,144],[132,132]]],[1540083569468,["gjx16@GJXAIOU",[[1,167,"\n- 模仿改\n- 不看代码自己写"]],[167,167],[183,183]]],[1540083937665,[null,[[-1,132,"**程序\n"],[1,137,"算法的程序**"]],[132,132],[144,144]]],[1540083937665,[null,[[1,132,"**程序\n"],[-1,132,"算法的程序**"]],[144,144],[132,132]]],[1540083881982,["gjx16@GJXAIOU",[[1,183,"\n- "]],[183,183],[186,186]]],[1540083882162,["gjx16@GJXAIOU",[[-1,184,"- "],[1,186,"\n\n"]],[186,186],[185,185]]],[1540083885447,["gjx16@GJXAIOU",[[-1,185,"\n"],[1,186,"3"]],[185,185],[186,186]]],[1540083888262,["gjx16@GJXAIOU",[[1,186,".****"]],[186,186],[189,189]]],[1540083892625,["gjx16@GJXAIOU",[[1,189,"选择法排序"]],[189,189],[194,194]]],[1540083895079,["gjx16@GJXAIOU",[[1,196,"\n\n"]],[196,196],[197,197]]],[1540083895774,["gjx16@GJXAIOU",[[1,198,"\n"]],[197,197],[198,198]]],[1540083899457,["gjx16@GJXAIOU",[[-1,198,"\n"],[1,199,"`"]],[198,198],[199,199]]],[1540083899855,["gjx16@GJXAIOU",[[1,199,"``"]],[199,199],[201,201]]],[1540083899879,["gjx16@GJXAIOU",[[1,201,"language\n```\n"]],[201,201],[201,209]]],[1540083901192,["gjx16@GJXAIOU",[[-1,201,"language"],[1,209,"c"]],[201,209],[202,202]]],[1540083902087,["gjx16@GJXAIOU",[[1,202,"pp"]],[202,202],[204,204]]],[1540083903599,["gjx16@GJXAIOU",[[-1,202,"pp"]],[204,204],[202,202]]],[1540083904542,["gjx16@GJXAIOU",[[1,203,"\n"]],[202,202],[203,203]]],[1540083912976,["gjx16@GJXAIOU",[[1,203,"#include<>"]],[203,203],[213,213]]],[1540083918103,["gjx16@GJXAIOU",[[1,212,"str"]],[212,212],[215,215]]],[1540083918631,["gjx16@GJXAIOU",[[-1,214,"r"]],[215,215],[214,214]]],[1540083919527,["gjx16@GJXAIOU",[[1,214,"dl"]],[214,214],[216,216]]],[1540083920198,["gjx16@GJXAIOU",[[-1,215,"l"]],[216,216],[215,215]]],[1540083922375,["gjx16@GJXAIOU",[[1,215,"io.h"]],[215,215],[219,219]]],[1540083924494,["gjx16@GJXAIOU",[[1,221,"\n"]],[220,220],[221,221]]],[1540083929095,["gjx16@GJXAIOU",[[1,221,"#include<>"]],[221,221],[231,231]]],[1540083933840,["gjx16@GJXAIOU",[[1,230,"stdlib.hj"]],[230,230],[239,239]]],[1540083934552,["gjx16@GJXAIOU",[[-1,238,"j"]],[239,239],[238,238]]],[1540083936254,["gjx16@GJXAIOU",[[1,240,"\n"]],[239,239],[240,240]]],[1540083997668,[null,[[-1,132,"**程序\n"],[1,137,"算法的程序**"],[-1,182,"- "]],[132,132],[182,182]]],[1540083997668,[null,[[1,132,"**程序\n"],[-1,132,"算法的程序**"],[1,184,"- "]],[182,182],[132,132]]],[1540083941342,["gjx16@GJXAIOU",[[1,240,"#include<>"]],[240,240],[250,250]]],[1540083944919,["gjx16@GJXAIOU",[[1,249,"string.h"]],[249,249],[257,257]]],[1540083946662,["gjx16@GJXAIOU",[[1,259,"\n"]],[258,258],[259,259]]],[1540083946831,["gjx16@GJXAIOU",[[1,260,"\n"]],[259,259],[260,260]]],[1540083951312,["gjx16@GJXAIOU",[[1,260,"int main()"]],[260,260],[270,270]]],[1540083955438,["gjx16@GJXAIOU",[[1,269,"void"]],[269,269],[273,273]]],[1540083957382,["gjx16@GJXAIOU",[[1,275,"\n"]],[274,274],[275,275]]],[1540083959054,["gjx16@GJXAIOU",[[1,275,"{}"]],[275,275],[277,277]]],[1540083959991,["gjx16@GJXAIOU",[[1,276,"\n"]],[276,276],[277,277]]],[1540083960191,["gjx16@GJXAIOU",[[1,277,"\n"]],[277,277],[278,278]]],[1540083960390,["gjx16@GJXAIOU",[[1,278,"\n"]],[278,278],[279,279]]],[1540083963079,["gjx16@GJXAIOU",[[1,277,"    "]],[277,277],[281,281]]],[1540084117671,[null,[[-1,132,"**程序\n"],[1,137,"算法的程序**"],[-1,182,"- "]],[132,132],[182,182]]],[1540084117671,[null,[[1,132,"**程序\n"],[-1,132,"算法的程序**"],[1,184,"- "]],[182,182],[132,132]]],[1540084076944,["gjx16@GJXAIOU",[[1,281,"inr"]],[281,281],[284,284]]],[1540084100926,["gjx16@GJXAIOU",[[-1,283,"r"]],[284,284],[283,283]]],[1540084116039,["gjx16@GJXAIOU",[[1,283,"t array"]],[283,283],[290,290]]],[1540084177673,[null,[[-1,132,"**程序\n"],[1,137,"算法的程序**"],[-1,182,"- "]],[132,132],[182,182]]],[1540084177673,[null,[[1,132,"**程序\n"],[-1,132,"算法的程序**"],[1,184,"- "]],[182,182],[132,132]]],[1540084124775,["gjx16@GJXAIOU",[[1,290,"[] = {};"]],[290,290],[298,298]]],[1540084129209,["gjx16@GJXAIOU",[[1,296,"1.4.3"]],[296,296],[301,301]]],[1540084130685,["gjx16@GJXAIOU",[[-1,297,".4.3"]],[301,301],[297,297]]],[1540084141263,["gjx16@GJXAIOU",[[1,297,",4,6,9,0,4,3,5,2"]],[297,297],[313,313]]],[1540084143895,["gjx16@GJXAIOU",[[1,316,"    \n"]],[315,315],[320,320]]],[1540084150094,["gjx16@GJXAIOU",[[1,320,"p"]],[320,320],[321,321]]],[1540084151374,["gjx16@GJXAIOU",[[-1,320,"p"]],[321,321],[320,320]]],[1540084162008,["gjx16@GJXAIOU",[[1,320,"int num = 0;"]],[320,320],[332,332]]],[1540084162494,["gjx16@GJXAIOU",[[1,333,"    \n"]],[332,332],[337,337]]],[1540084164118,["gjx16@GJXAIOU",[[1,337,"mun"]],[337,337],[340,340]]],[1540084165270,["gjx16@GJXAIOU",[[-1,337,"mun"]],[340,340],[337,337]]],[1540084171367,["gjx16@GJXAIOU",[[1,337,"num = sizeof()"]],[337,337],[351,351]]],[1540084175119,["gjx16@GJXAIOU",[[1,350,"array"]],[350,350],[355,355]]],[1540084237674,[null,[[-1,132,"**程序\n"],[1,137,"算法的程序**"],[-1,182,"- "]],[132,132],[182,182]]],[1540084237674,[null,[[1,132,"**程序\n"],[-1,132,"算法的程序**"],[1,184,"- "]],[182,182],[132,132]]],[1540084185025,["gjx16@GJXAIOU",[[1,356,"/a"]],[356,356],[358,358]]],[1540084186182,["gjx16@GJXAIOU",[[-1,357,"a"]],[358,358],[357,357]]],[1540084189095,["gjx16@GJXAIOU",[[1,357,"sizeof()"]],[357,357],[365,365]]],[1540084194256,["gjx16@GJXAIOU",[[1,364,"array[0]"]],[364,364],[372,372]]],[1540084196575,["gjx16@GJXAIOU",[[1,373,";"]],[373,373],[374,374]]],[1540084196966,["gjx16@GJXAIOU",[[1,375,"    \n"]],[374,374],[379,379]]],[1540084197894,["gjx16@GJXAIOU",[[-1,375,"    "],[1,379,"\n"]],[379,379],[376,376]]],[1540084202639,["gjx16@GJXAIOU",[[1,376,"  printf();"]],[376,376],[387,387]]],[1540084205230,["gjx16@GJXAIOU",[[1,385,"\"\""]],[385,385],[387,387]]],[1540084212161,["gjx16@GJXAIOU",[[1,386,"befo"]],[386,386],[390,390]]],[1540084213175,["gjx16@GJXAIOU",[[-1,389,"o"]],[390,390],[389,389]]],[1540084228247,["gjx16@GJXAIOU",[[1,389,"ore = %d \\n"]],[389,389],[400,400]]],[1540084235521,["gjx16@GJXAIOU",[[1,401,","]],[401,401],[402,402]]],[1540084297674,[null,[[-1,132,"**程序\n"],[1,137,"算法的程序**"],[-1,182,"- "]],[132,132],[182,182]]],[1540084297674,[null,[[1,132,"**程序\n"],[-1,132,"算法的程序**"],[1,184,"- "]],[182,182],[132,132]]],[1540084239505,["gjx16@GJXAIOU",[[1,402,"srra"]],[402,402],[406,406]]],[1540084241054,["gjx16@GJXAIOU",[[-1,402,"srra"]],[406,406],[402,402]]],[1540084245742,["gjx16@GJXAIOU",[[1,402,"array[i]"]],[402,402],[410,410]]],[1540084254688,["gjx16@GJXAIOU",[[1,375,"  int i -"]],[375,375],[384,384]]],[1540084255126,["gjx16@GJXAIOU",[[-1,383,"-"]],[384,384],[383,383]]],[1540084255702,["gjx16@GJXAIOU",[[1,383,"- "]],[383,383],[385,385]]],[1540084256192,["gjx16@GJXAIOU",[[-1,384," "]],[385,385],[384,384]]],[1540084256663,["gjx16@GJXAIOU",[[1,384,"=-"]],[384,384],[386,386]]],[1540084257525,["gjx16@GJXAIOU",[[-1,383,"-=-"]],[386,386],[383,383]]],[1540084259071,["gjx16@GJXAIOU",[[1,383,"= 0 ;"]],[383,383],[388,388]]],[1540084260222,["gjx16@GJXAIOU",[[1,391,"\n  "]],[388,388],[391,391]]],[1540084262751,["gjx16@GJXAIOU",[[1,391,"for()"]],[391,391],[396,396]]],[1540084277606,["gjx16@GJXAIOU",[[1,395,"i = 0; i < num ; i++"]],[395,395],[415,415]]],[1540084286175,["gjx16@GJXAIOU",[[1,419,"{"]],[419,419],[420,420]]],[1540084289224,["gjx16@GJXAIOU",[[1,419,"  "]],[419,419],[421,421]]],[1540084296790,["gjx16@GJXAIOU",[[1,422,"\n        "]],[422,422],[431,431]]],[1540084357677,[null,[[-1,132,"**程序\n"],[1,137,"算法的程序**"],[-1,182,"- "]],[132,132],[182,182]]],[1540084357677,[null,[[1,132,"**程序\n"],[-1,132,"算法的程序**"],[1,184,"- "]],[182,182],[132,132]]],[1540084300990,["gjx16@GJXAIOU",[[1,466,"    }"]],[466,466],[471,471]]],[1540084303277,["gjx16@GJXAIOU",[[1,472,"    \n"]],[471,471],[476,476]]],[1540084312929,["gjx16@GJXAIOU",[[1,476,"printf();"]],[476,476],[485,485]]],[1540084315494,["gjx16@GJXAIOU",[[1,483,"\"\""]],[483,483],[485,485]]],[1540084323294,["gjx16@GJXAIOU",[[1,484,"------------------\\n"]],[484,484],[504,504]]],[1540084325437,["gjx16@GJXAIOU",[[1,508,"    \n"]],[507,507],[512,512]]],[1540084325590,["gjx16@GJXAIOU",[[-1,508,"    "],[1,512,"\n"]],[512,512],[509,509]]],[1540084325773,["gjx16@GJXAIOU",[[1,510,"\n"]],[509,509],[510,510]]],[1540084325990,["gjx16@GJXAIOU",[[1,511,"\n"]],[510,510],[511,511]]],[1540084335057,["gjx16@GJXAIOU",[[1,511,"  //选择法进行排序"]],[511,511],[522,522]]],[1540084335574,["gjx16@GJXAIOU",[[1,523,"  \n"]],[522,522],[525,525]]],[1540084335696,["gjx16@GJXAIOU",[[-1,523,"  "],[1,525,"\n"]],[525,525],[524,524]]],[1540084340975,["gjx16@GJXAIOU",[[1,524,"  int i;"]],[524,524],[532,532]]],[1540084342637,["gjx16@GJXAIOU",[[-1,526,"int i;"]],[532,532],[526,526]]],[1540084347382,["gjx16@GJXAIOU",[[1,526,"int j = 0;"]],[526,526],[536,536]]],[1540084348469,["gjx16@GJXAIOU",[[1,537,"  \n"]],[536,536],[539,539]]],[1540084355664,["gjx16@GJXAIOU",[[1,539,"int tmp= 0;"]],[539,539],[550,550]]],[1540084356256,["gjx16@GJXAIOU",[[1,551,"  \n"]],[550,550],[553,553]]],[1540084417681,[null,[[-1,132,"**程序\n"],[1,137,"算法的程序**"],[-1,182,"- "]],[132,132],[182,182]]],[1540084417681,[null,[[1,132,"**程序\n"],[-1,132,"算法的程序**"],[1,184,"- "]],[182,182],[132,132]]],[1540084361111,["gjx16@GJXAIOU",[[1,553,"for()"]],[553,553],[558,558]]],[1540084386486,["gjx16@GJXAIOU",[[1,557,"i = 0 ; i < n; i++"]],[557,557],[575,575]]],[1540084388470,["gjx16@GJXAIOU",[[1,577,"  \n"]],[576,576],[579,579]]],[1540084391143,["gjx16@GJXAIOU",[[1,579,"  {}"]],[579,579],[583,583]]],[1540084392397,["gjx16@GJXAIOU",[[1,582,"\n    \n    "]],[582,582],[592,592]]],[1540084397447,["gjx16@GJXAIOU",[[1,587,"    for()"]],[587,587],[596,596]]],[1540084406199,["gjx16@GJXAIOU",[[1,595,"j = 1"]],[595,595],[600,600]]],[1540084407144,["gjx16@GJXAIOU",[[-1,599,"1"]],[600,600],[599,599]]],[1540084410248,["gjx16@GJXAIOU",[[1,599,"i +"]],[599,599],[602,602]]],[1540084477681,[null,[[-1,132,"**程序\n"],[1,137,"算法的程序**"],[-1,182,"- "]],[132,132],[182,182]]],[1540084477681,[null,[[1,132,"**程序\n"],[-1,132,"算法的程序**"],[1,184,"- "]],[182,182],[132,132]]],[1540084433118,["gjx16@GJXAIOU",[[1,602,"1; j < n"]],[602,602],[610,610]]],[1540084441639,["gjx16@GJXAIOU",[[1,570," -1"]],[570,570],[573,573]]],[1540084449639,["gjx16@GJXAIOU",[[1,613," ; j++"]],[613,613],[619,619]]],[1540084452815,["gjx16@GJXAIOU",[[1,625,"    \n    "]],[620,620],[629,629]]],[1540084455193,["gjx16@GJXAIOU",[[1,629,"  {}"]],[629,629],[633,633]]],[1540084456648,["gjx16@GJXAIOU",[[1,632,"\n          \n          "]],[632,632],[654,654]]],[1540084467112,["gjx16@GJXAIOU",[[1,643,"    int tmp = a[i["]],[643,643],[661,661]]],[1540084473727,["gjx16@GJXAIOU",[[-1,647,"int tmp = a[i["]],[661,661],[647,647]]],[1540084476032,["gjx16@GJXAIOU",[[1,647,"if()"]],[647,647],[651,651]]],[1540084537683,[null,[[-1,132,"**程序\n"],[1,137,"算法的程序**"],[-1,182,"- "]],[132,132],[182,182]]],[1540084537683,[null,[[1,132,"**程序\n"],[-1,132,"算法的程序**"],[1,184,"- "]],[182,182],[132,132]]],[1540084483350,["gjx16@GJXAIOU",[[1,650,"a[i] <"]],[650,650],[656,656]]],[1540084487279,["gjx16@GJXAIOU",[[-1,655,"<"]],[656,656],[655,655]]],[1540084491279,["gjx16@GJXAIOU",[[1,655,"> a[j]"]],[655,655],[661,661]]],[1540084493522,["gjx16@GJXAIOU",[[1,662,"\\"]],[662,662],[663,663]]],[1540084494305,["gjx16@GJXAIOU",[[-1,662,"\\"]],[663,663],[662,662]]],[1540084494774,["gjx16@GJXAIOU",[[1,673,"    \n          "]],[662,662],[677,677]]],[1540084497184,["gjx16@GJXAIOU",[[1,677,"  {}"]],[677,677],[681,681]]],[1540084498552,["gjx16@GJXAIOU",[[1,680,"\n                \n                "]],[680,680],[714,714]]],[1540084502334,["gjx16@GJXAIOU",[[1,697,"  i"]],[697,697],[700,700]]],[1540084503197,["gjx16@GJXAIOU",[[-1,699,"i"]],[700,700],[699,699]]],[1540084508182,["gjx16@GJXAIOU",[[1,699,"tmp = api]"]],[699,699],[709,709]]],[1540084509197,["gjx16@GJXAIOU",[[-1,706,"pi]"]],[709,709],[706,706]]],[1540084513438,["gjx16@GJXAIOU",[[1,706,"[i];"]],[706,706],[710,710]]],[1540084513991,["gjx16@GJXAIOU",[[1,727,"  \n                "]],[710,710],[729,729]]],[1540084521102,["gjx16@GJXAIOU",[[1,729,"a[i] = a[j];"]],[729,729],[741,741]]],[1540084521647,["gjx16@GJXAIOU",[[1,758,"  \n                "]],[741,741],[760,760]]],[1540084527631,["gjx16@GJXAIOU",[[1,760,"a[j] = tmp;"]],[760,760],[771,771]]],[1540084597688,[null,[[-1,132,"**程序\n"],[1,137,"算法的程序**"],[-1,182,"- "]],[132,132],[182,182]]],[1540084597688,[null,[[1,132,"**程序\n"],[-1,132,"算法的程序**"],[1,184,"- "]],[182,182],[132,132]]],[1540084572309,["gjx16@GJXAIOU",[[1,808,"\n"]],[808,808],[809,809]]],[1540084578142,["gjx16@GJXAIOU",[[1,808,"    pritnf();"]],[808,808],[821,821]]],[1540084580726,["gjx16@GJXAIOU",[[1,819,"\"\""]],[819,819],[821,821]]],[1540084590526,["gjx16@GJXAIOU",[[1,820,"after = %d \\n"]],[820,820],[833,833]]],[1540084595814,["gjx16@GJXAIOU",[[1,834,",a["]],[834,834],[837,837]]],[1540084597021,["gjx16@GJXAIOU",[[-1,836,"["]],[837,837],[836,836]]],[1540084657686,[null,[[-1,132,"**程序\n"],[1,137,"算法的程序**"],[-1,182,"- "]],[132,132],[182,182]]],[1540084657686,[null,[[1,132,"**程序\n"],[-1,132,"算法的程序**"],[1,184,"- "]],[182,182],[132,132]]],[1540084598421,["gjx16@GJXAIOU",[[-1,835,"a"]],[836,836],[835,835]]],[1540084603838,["gjx16@GJXAIOU",[[1,835,"array[i]"]],[835,835],[843,843]]],[1540084608685,["gjx16@GJXAIOU",[[1,737,"a"]],[737,737],[738,738]]],[1540084609446,["gjx16@GJXAIOU",[[-1,737,"a"]],[738,738],[737,737]]],[1540084611166,["gjx16@GJXAIOU",[[1,737,"rray"]],[737,737],[741,741]]],[1540084615381,["gjx16@GJXAIOU",[[1,730,"a"]],[730,730],[731,731]]],[1540084616261,["gjx16@GJXAIOU",[[-1,730,"a"]],[731,731],[730,730]]],[1540084617510,["gjx16@GJXAIOU",[[1,730,"rray"]],[730,730],[734,734]]],[1540084625334,["gjx16@GJXAIOU",[[1,769,"rray"]],[769,769],[773,773]]],[1540084628881,["gjx16@GJXAIOU",[[1,706,"rray"]],[706,706],[710,710]]],[1540084634241,["gjx16@GJXAIOU",[[1,658,"rray"]],[658,658],[662,662]]],[1540084640711,["gjx16@GJXAIOU",[[1,651,"rray"]],[651,651],[655,655]]],[1540087262825,[null,[[-1,132,"**程序\n"],[1,137,"算法的程序**"],[-1,182,"- "]],[132,132],[182,182]]],[1540087262825,[null,[[1,132,"**程序\n"],[-1,132,"算法的程序**"],[1,184,"- "]],[182,182],[132,132]]],[1540087260976,["gjx16@GJXAIOU",[[1,836,"\n    "]],[831,831],[836,836]]],[1540087322829,[null,[[-1,132,"**程序\n"],[1,137,"算法的程序**"],[-1,182,"- "]],[132,132],[182,182]]],[1540087322829,[null,[[1,132,"**程序\n"],[-1,132,"算法的程序**"],[1,184,"- "]],[182,182],[132,132]]],[1540087265680,["gjx16@GJXAIOU",[[1,836,"for()"]],[836,836],[841,841]]],[1540087275445,["gjx16@GJXAIOU",[[1,840,"i = 0; i < num ; 9i"]],[840,840],[859,859]]],[1540087276296,["gjx16@GJXAIOU",[[-1,857,"9i"]],[859,859],[857,857]]],[1540087277545,["gjx16@GJXAIOU",[[1,857,"i++"]],[857,857],[860,860]]],[1540087297240,["gjx16@GJXAIOU",[[1,866,"    {\n            "]],[866,866],[884,884]]],[1540087300770,["gjx16@GJXAIOU",[[1,918,"            \n"]],[917,917],[930,930]]],[1540087303248,["gjx16@GJXAIOU",[[-1,926,"    "]],[930,930],[926,926]]],[1540087304188,["gjx16@GJXAIOU",[[1,926,"}"]],[926,926],[927,927]]],[1540087309395,["gjx16@GJXAIOU",[[-1,887,"tn"]],[889,889],[887,887]]],[1540087311700,["gjx16@GJXAIOU",[[1,887,"nt"]],[887,887],[889,889]]],[1540087354221,[null,[[-1,132,"**程序\n"],[1,137,"算法的程序**"],[-1,182,"- "]],[132,132],[182,182]]],[1540087354221,[null,[[1,132,"**程序\n"],[-1,132,"算法的程序**"],[1,184,"- "]],[182,182],[132,132]]],[1540087346913,["gjx16@GJXAIOU",[[1,570,"um"]],[570,570],[572,572]]],[1540087351546,["gjx16@GJXAIOU",[[1,615,"um"]],[615,615],[617,617]]],[1540087414238,[null,[[-1,132,"**程序\n"],[1,137,"算法的程序**"],[-1,182,"- "]],[132,132],[182,182]]],[1540087414238,[null,[[1,132,"**程序\n"],[-1,132,"算法的程序**"],[1,184,"- "]],[182,182],[132,132]]],[1540087407560,["gjx16@GJXAIOU",[[1,938,"\n"]],[937,937],[938,938]]],[1540087407712,["gjx16@GJXAIOU",[[1,939,"\n"]],[938,938],[939,939]]],[1540087474236,[null,[[-1,132,"**程序\n"],[1,137,"算法的程序**"],[-1,182,"- "]],[132,132],[182,182]]],[1540087474236,[null,[[1,132,"**程序\n"],[-1,132,"算法的程序**"],[1,184,"- "]],[182,182],[132,132]]],[1540087417964,["gjx16@GJXAIOU",[[1,938,"c"]],[938,938],[939,939]]],[1540087418537,["gjx16@GJXAIOU",[[-1,938,"c"]],[939,939],[938,938]]],[1540087423502,["gjx16@GJXAIOU",[[1,938,"程序运行结果；"]],[938,938],[945,945]]],[1540087424720,["gjx16@GJXAIOU",[[1,947,"\n"]],[945,945],[946,946]]],[1540087434061,["gjx16@GJXAIOU",[[1,946,"![排序]($resource/%E6%8E%92%E5%BA%8F.png)"]],[946,946],[986,986]]],[1540087437704,["gjx16@GJXAIOU",[[1,946,"\n"]],[945,945],[946,946]]],[1540087443536,["gjx16@GJXAIOU",[[1,988,"\n"]],[987,987],[988,988]]],[1540087954243,[null,[[-1,132,"**程序\n"],[1,137,"算法的程序**"],[-1,182,"- "]],[132,132],[182,182]]],[1540087954243,[null,[[1,132,"**程序\n"],[-1,132,"算法的程序**"],[1,184,"- "]],[182,182],[132,132]]],[1540087905759,["gjx16@GJXAIOU",[[1,989,"\n"]],[986,986],[987,987]]],[1540087905887,["gjx16@GJXAIOU",[[1,990,"\n"]],[987,987],[988,988]]],[1540087906559,["gjx16@GJXAIOU",[[1,991,"\n"]],[988,988],[989,989]]],[1540087918163,["gjx16@GJXAIOU",[[1,989,"4.****"]],[989,989],[993,993]]],[1540087930588,["gjx16@GJXAIOU",[[1,993,"将上面的程序进行函数封装"]],[993,993],[1005,1005]]],[1540087933130,["gjx16@GJXAIOU",[[1,1010,"\n"]],[1007,1007],[1008,1008]]],[1540087945664,["gjx16@GJXAIOU",[[1,1009,"```"]],[1009,1009],[1012,1012]]],[1540087945689,["gjx16@GJXAIOU",[[1,1012,"language\n```\n"]],[1012,1012],[1012,1020]]],[1540087946904,["gjx16@GJXAIOU",[[-1,1012,"language"],[1,1020,"c"]],[1012,1020],[1013,1013]]],[1540087947161,["gjx16@GJXAIOU",[[1,1014,"\n"]],[1013,1013],[1014,1014]]],[1540087948311,["gjx16@GJXAIOU",[[1,1014,"#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n\nint main(void)\n{\n    int array[] = {1,4,6,9,0,4,3,5,2};\n    int num = 0;\n    num = sizeof(array)/sizeof(array[0]);\n  int i = 0 ;\n  for(i = 0; i < num ; i++)\n    {\n        printf(\"before = %d \\n\",array[i]);\n    }\n    printf(\"------------------\\n\");\n\n\n\n  //选择法进行排序\n\n  int j = 0;\n  int tmp= 0;\n  for(i = 0 ; i < num -1; i++)\n    {\n        for(j = i +1; j < num ; j++)\n          {\n              if(array[i] > array[j])\n                {\n                  tmp = array[i];\n                  array[i] = array[j];\n                  array[j] = tmp;\n                }\n          }\n    }\n    for(i = 0; i < num ; i++)\n        {\n            printf(\"after = %d \\n\",array[i]);\n        }\n}"]],[1014,1014],[1744,1744]]],[1540088014245,[null,[[-1,132,"**程序\n"],[1,137,"算法的程序**"],[-1,182,"- "]],[132,132],[182,182]]],[1540088014245,[null,[[1,132,"**程序\n"],[-1,132,"算法的程序**"],[1,184,"- "]],[182,182],[132,132]]],[1540087957113,["gjx16@GJXAIOU",[[1,48,"\n"]],[47,47],[48,48]]],[1540087960553,["gjx16@GJXAIOU",[[1,48,"4.shuo"]],[48,48],[54,54]]],[1540087961751,["gjx16@GJXAIOU",[[-1,50,"shuo"]],[54,54],[50,50]]],[1540087990760,["gjx16@GJXAIOU",[[1,50,"说明：本系列代码使用VS2017进行测试运行，代码位置为："]],[50,50],[79,79]]],[1540087991318,["gjx16@GJXAIOU",[[1,80,"\n"]],[79,79],[80,80]]],[1540088074246,[null,[[-1,165,"**程序\n"],[1,170,"算法的程序**"],[-1,215,"- "]],[165,165],[215,215]]],[1540088074246,[null,[[1,165,"**程序\n"],[-1,165,"算法的程序**"],[1,217,"- "]],[215,215],[165,165]]],[1540088073527,["gjx16@GJXAIOU",[[1,80,"E:\\Program\\C++\\C++\\practice\\programs\\Cenhance\\Cenhance_1\\Cenhance_1"]],[80,80],[147,147]]],[1540088134250,[null,[[-1,232,"**程序\n"],[1,237,"算法的程序**"],[-1,282,"- "]],[232,232],[282,282]]],[1540088134250,[null,[[1,232,"**程序\n"],[-1,232,"算法的程序**"],[1,284,"- "]],[282,282],[232,232]]],[1540088087607,["gjx16@GJXAIOU",[[1,1288,"  "]],[1288,1288],[1290,1290]]],[1540088089056,["gjx16@GJXAIOU",[[1,1304,"  "]],[1304,1304],[1306,1306]]],[1540088094951,["gjx16@GJXAIOU",[[1,1171,"\n"]],[1170,1170],[1171,1171]]],[1540088095106,["gjx16@GJXAIOU",[[1,1172,"\n"]],[1171,1171],[1172,1172]]],[1540088101866,["gjx16@GJXAIOU",[[1,1172,"void ptint"]],[1172,1172],[1182,1182]]],[1540088104423,["gjx16@GJXAIOU",[[-1,1178,"tint"]],[1182,1182],[1178,1178]]],[1540088107368,["gjx16@GJXAIOU",[[1,1178,"rintf_)"]],[1178,1178],[1185,1185]]],[1540088108064,["gjx16@GJXAIOU",[[-1,1184,")"]],[1185,1185],[1184,1184]]],[1540088115808,["gjx16@GJXAIOU",[[1,1184,"array()"]],[1184,1184],[1191,1191]]],[1540088118904,["gjx16@GJXAIOU",[[1,1190,"int a"]],[1190,1190],[1195,1195]]],[1540088120543,["gjx16@GJXAIOU",[[-1,1194,"a"]],[1195,1195],[1194,1194]]],[1540088126179,["gjx16@GJXAIOU",[[1,1194,"*array,int n"]],[1194,1194],[1206,1206]]],[1540088127943,["gjx16@GJXAIOU",[[1,1208,"\n"]],[1207,1207],[1208,1208]]],[1540088130264,["gjx16@GJXAIOU",[[1,1208,"  {P}"]],[1208,1208],[1213,1213]]],[1540088131280,["gjx16@GJXAIOU",[[-1,1211,"P}"]],[1213,1213],[1211,1211]]],[1540088132097,["gjx16@GJXAIOU",[[1,1211,"}"]],[1211,1211],[1212,1212]]],[1540088133432,["gjx16@GJXAIOU",[[1,1211,"\n  \n  "]],[1211,1211],[1217,1217]]],[1540088194254,[null,[[-1,232,"**程序\n"],[1,237,"算法的程序**"],[-1,282,"- "]],[232,232],[282,282]]],[1540088194254,[null,[[1,232,"**程序\n"],[-1,232,"算法的程序**"],[1,284,"- "]],[282,282],[232,232]]],[1540088135543,["gjx16@GJXAIOU",[[1,1214,"  "]],[1214,1214],[1216,1216]]],[1540088148113,["gjx16@GJXAIOU",[[-1,1339," int i = 0 ;\n    for(i = 0; i < num ; i++)\n    {\n        printf(\"before = %d \\n\",array[i]);\n    }"]],[1339,1436],[1339,1339]]],[1540088149647,["gjx16@GJXAIOU",[[1,1216," int i = 0 ;\n    for(i = 0; i < num ; i++)\n    {\n        printf(\"before = %d \\n\",array[i]);\n    }"]],[1216,1216],[1313,1313]]],[1540088152366,["gjx16@GJXAIOU",[[-1,1216," "]],[1217,1217],[1216,1216]]],[1540088156209,["gjx16@GJXAIOU",[[1,1262,"  "]],[1262,1262],[1264,1264]]],[1540088157337,["gjx16@GJXAIOU",[[1,1313,"  "]],[1313,1313],[1315,1315]]],[1540088163247,["gjx16@GJXAIOU",[[1,1206,"um"]],[1206,1206],[1208,1208]]],[1540088169336,["gjx16@GJXAIOU",[[-1,1438,"   "],[1,1441,"\n"]],[1441,1441],[1439,1439]]],[1540088176409,["gjx16@GJXAIOU",[[1,1439,"    print"]],[1439,1439],[1448,1448]]],[1540088193598,["gjx16@GJXAIOU",[[-1,1284,"before = "]],[1293,1293],[1284,1284]]],[1540088254258,[null,[[-1,232,"**程序\n"],[1,237,"算法的程序**"],[-1,282,"- "]],[232,232],[282,282]]],[1540088254258,[null,[[1,232,"**程序\n"],[-1,232,"算法的程序**"],[1,284,"- "]],[282,282],[232,232]]],[1540088198259,["gjx16@GJXAIOU",[[1,1439,"f();"]],[1439,1439],[1443,1443]]],[1540088200584,["gjx16@GJXAIOU",[[1,1441,"\"\""]],[1441,1441],[1443,1443]]],[1540088204704,["gjx16@GJXAIOU",[[1,1442,"before -"]],[1442,1442],[1450,1450]]],[1540088205258,["gjx16@GJXAIOU",[[-1,1449,"-"]],[1450,1450],[1449,1449]]],[1540088212560,["gjx16@GJXAIOU",[[1,1449,"= \\n"]],[1449,1449],[1453,1453]]],[1540088215134,["gjx16@GJXAIOU",[[1,1461,"\n    "]],[1456,1456],[1461,1461]]],[1540088217247,["gjx16@GJXAIOU",[[1,1461,"pritnf"]],[1461,1461],[1467,1467]]],[1540088218438,["gjx16@GJXAIOU",[[-1,1464,"tnf"]],[1467,1467],[1464,1464]]],[1540088220807,["gjx16@GJXAIOU",[[1,1464,"ntf();'"]],[1464,1464],[1471,1471]]],[1540088222183,["gjx16@GJXAIOU",[[-1,1467,"();'"]],[1471,1471],[1467,1467]]],[1540088227474,["gjx16@GJXAIOU",[[1,1467,"_array();"]],[1467,1467],[1476,1476]]],[1540088245339,["gjx16@GJXAIOU",[[1,1474,"a,num"]],[1474,1474],[1479,1479]]],[1540088252944,["gjx16@GJXAIOU",[[1,1314,"  \n"]],[1313,1313],[1316,1316]]],[1540088253095,["gjx16@GJXAIOU",[[-1,1314,"  "],[1,1316,"\n"]],[1316,1316],[1315,1315]]],[1540088314258,[null,[[-1,232,"**程序\n"],[1,237,"算法的程序**"],[-1,282,"- "]],[232,232],[282,282]]],[1540088314258,[null,[[1,232,"**程序\n"],[-1,232,"算法的程序**"],[1,284,"- "]],[282,282],[232,232]]],[1540088255592,["gjx16@GJXAIOU",[[1,1315,"voif"]],[1315,1315],[1319,1319]]],[1540088256023,["gjx16@GJXAIOU",[[-1,1318,"f"]],[1319,1319],[1318,1318]]],[1540088263247,["gjx16@GJXAIOU",[[1,1318,"d sort_s"]],[1318,1318],[1326,1326]]],[1540088263959,["gjx16@GJXAIOU",[[-1,1325,"s"]],[1326,1326],[1325,1325]]],[1540088264929,["gjx16@GJXAIOU",[[1,1325,"at"]],[1325,1325],[1327,1327]]],[1540088265457,["gjx16@GJXAIOU",[[-1,1326,"t"]],[1327,1327],[1326,1326]]],[1540088265695,["gjx16@GJXAIOU",[[1,1326,"a"]],[1326,1326],[1327,1327]]],[1540088266383,["gjx16@GJXAIOU",[[-1,1326,"a"]],[1327,1327],[1326,1326]]],[1540088268791,["gjx16@GJXAIOU",[[1,1326,"rray()"]],[1326,1326],[1332,1332]]],[1540088277241,["gjx16@GJXAIOU",[[1,1331,"int *a,int num"]],[1331,1331],[1345,1345]]],[1540088282039,["gjx16@GJXAIOU",[[1,1337,"a"]],[1337,1337],[1338,1338]]],[1540088282758,["gjx16@GJXAIOU",[[-1,1337,"a"]],[1338,1338],[1337,1337]]],[1540088282976,["gjx16@GJXAIOU",[[1,1337,"s"]],[1337,1337],[1338,1338]]],[1540088283614,["gjx16@GJXAIOU",[[-1,1337,"s"]],[1338,1338],[1337,1337]]],[1540088284775,["gjx16@GJXAIOU",[[1,1337,"rray"]],[1337,1337],[1341,1341]]],[1540088288446,["gjx16@GJXAIOU",[[1,1351,"\n"]],[1350,1350],[1351,1351]]],[1540088289246,["gjx16@GJXAIOU",[[1,1352,"\n"]],[1351,1351],[1352,1352]]],[1540088289574,["gjx16@GJXAIOU",[[1,1352,"  "]],[1352,1352],[1354,1354]]],[1540088291030,["gjx16@GJXAIOU",[[-1,1352,"  "]],[1354,1354],[1352,1352]]],[1540088291385,["gjx16@GJXAIOU",[[-1,1352,"\n"]],[1352,1352],[1351,1351]]],[1540088294095,["gjx16@GJXAIOU",[[1,1351,"  {}"]],[1351,1351],[1355,1355]]],[1540088295575,["gjx16@GJXAIOU",[[1,1354,"\n  \n  \n  "]],[1354,1354],[1363,1363]]],[1540088302702,["gjx16@GJXAIOU",[[-1,1574,"//选择法进行排序\n\n  int j = 0;\n  int tmp= 0;\n  for(i = 0 ; i < num -1; i++)\n    {\n        for(j = i +1; j < num ; j++)\n          {\n              if(array[i] > array[j])\n                {\n                  tmp = array[i];\n                  array[i] = array[j];\n                  array[j] = tmp;\n                }\n          }\n    }"]],[1574,1896],[1574,1574]]],[1540088308152,["gjx16@GJXAIOU",[[1,1357,"  //选择法进行排序\n\n  int j = 0;\n  int tmp= 0;\n  for(i = 0 ; i < num -1; i++)\n    {\n        for(j = i +1; j < num ; j++)\n          {\n              if(array[i] > array[j])\n                {\n                  tmp = array[i];\n                  array[i] = array[j];\n                  array[j] = tmp;\n                }\n          }\n    }"]],[1357,1357],[1681,1681]]],[1540088311273,["gjx16@GJXAIOU",[[1,1315,"\n"]],[1314,1314],[1315,1315]]],[1540088311441,["gjx16@GJXAIOU",[[1,1316,"\n"]],[1315,1315],[1316,1316]]],[1540088374260,[null,[[-1,232,"**程序\n"],[1,237,"算法的程序**"],[-1,282,"- "]],[232,232],[282,282]]],[1540088374260,[null,[[1,232,"**程序\n"],[-1,232,"算法的程序**"],[1,284,"- "]],[282,282],[232,232]]],[1540088330458,["gjx16@GJXAIOU",[[1,1691,"  \n"]],[1690,1690],[1693,1693]]],[1540088330574,["gjx16@GJXAIOU",[[-1,1691,"  "],[1,1693,"\n"]],[1693,1693],[1692,1692]]],[1540088343879,["gjx16@GJXAIOU",[[1,1897,"    pritn"]],[1897,1897],[1906,1906]]],[1540088344710,["gjx16@GJXAIOU",[[-1,1905,"n"]],[1906,1906],[1905,1905]]],[1540088345803,["gjx16@GJXAIOU",[[1,1905,"ntf"]],[1905,1905],[1908,1908]]],[1540088347918,["gjx16@GJXAIOU",[[-1,1904,"tntf"]],[1908,1908],[1904,1904]]],[1540088351655,["gjx16@GJXAIOU",[[1,1904,"ntf();"]],[1904,1904],[1910,1910]]],[1540088353946,["gjx16@GJXAIOU",[[1,1908,"\"\""]],[1908,1908],[1910,1910]]],[1540088361759,["gjx16@GJXAIOU",[[1,1909,"after = \\m"]],[1909,1909],[1919,1919]]],[1540088362255,["gjx16@GJXAIOU",[[-1,1918,"m"]],[1919,1919],[1918,1918]]],[1540088363193,["gjx16@GJXAIOU",[[1,1918,"n"]],[1918,1918],[1919,1919]]],[1540088365638,["gjx16@GJXAIOU",[[1,1923,"    \n"]],[1922,1922],[1927,1927]]],[1540088373074,["gjx16@GJXAIOU",[[1,1927,"printf_"]],[1927,1927],[1934,1934]]],[1540088422151,[null,[[-1,232,"**程序\n"],[1,237,"算法的程序**"],[-1,282,"- "]],[232,232],[282,282]]],[1540088422151,[null,[[1,232,"**程序\n"],[-1,232,"算法的程序**"],[1,284,"- "]],[282,282],[232,232]]],[1540088379801,["gjx16@GJXAIOU",[[1,1934,"array()"]],[1934,1934],[1941,1941]]],[1540088384111,["gjx16@GJXAIOU",[[1,1940,"a,num"]],[1940,1940],[1945,1945]]],[1540088386408,["gjx16@GJXAIOU",[[1,1946,";"]],[1946,1946],[1947,1947]]],[1540088388665,["gjx16@GJXAIOU",[[1,1927,"\n    "]],[1922,1922],[1927,1927]]],[1540088396729,["gjx16@GJXAIOU",[[1,1927,"sort_array();"]],[1927,1927],[1940,1940]]],[1540088410216,["gjx16@GJXAIOU",[[1,1938,"a,num"]],[1938,1938],[1943,1943]]],[1540088417750,["gjx16@GJXAIOU",[[-1,1976,"    for(i = 0; i < num ; i++)\n        {\n            printf(\"after = %d \\n\",array[i]);\n        }"]],[1980,2071],[1976,1976]]],[1540088417944,["gjx16@GJXAIOU",[[-1,1976,"\n"]],[1976,1976],[1975,1975]]],[1540088418383,["gjx16@GJXAIOU",[[-1,1973,"  "]],[1975,1975],[1973,1973]]],[1540088418591,["gjx16@GJXAIOU",[[-1,1973,"\n"]],[1973,1973],[1972,1972]]],[1540088418774,["gjx16@GJXAIOU",[[-1,1972,"\n"]],[1972,1972],[1971,1971]]],[1540088418993,["gjx16@GJXAIOU",[[-1,1971,"\n"]],[1971,1971],[1970,1970]]],[1540088419246,["gjx16@GJXAIOU",[[-1,1969,";"]],[1970,1970],[1969,1969]]],[1540088420888,["gjx16@GJXAIOU",[[1,1969,";"]],[1969,1969],[1970,1970]]],[1540088602164,[null,[[-1,232,"**程序\n"],[1,237,"算法的程序**"],[-1,282,"- "]],[232,232],[282,282]]],[1540088602164,[null,[[1,232,"**程序\n"],[-1,232,"算法的程序**"],[1,284,"- "]],[282,282],[232,232]]],[1540088578587,["gjx16@GJXAIOU",[[1,1201," "],[-1,1210,"  "],[-1,1214,"    "],[1,1218,"\t"],[-1,1227," "],[-1,1230,"    "],[1,1234,"\t"],[1,1237," "],[-1,1252," "],[-1,1260,"      {\n        "],[1,1276,"\t{\n\t\t"],[1,1291," "],[-1,1302,"      "],[1,1308,"\t"],[-1,1310,"  "],[1,1344," "],[-1,1353,"  "],[-1,1357,"    "],[1,1361,"\t"],[-1,1371,"\n  "],[1,1374,"\tint i = 0;\n\t"],[-1,1385,"  "],[1,1387,"\t"],[1,1394," "],[-1,1399,"  "],[1,1401,"\t"],[1,1404," "],[-1,1410," "],[1,1422," "],[-1,1430,"    {\n        "],[1,1444,"\t{\n\t\t"],[1,1447," "],[1,1455," "],[-1,1465," "],[-1,1473,"          {\n              "],[1,1499,"\t\t{\n\t\t\t"],[1,1501," "],[-1,1523,"                {\n                  "],[1,1559,"\t\t\t{\n\t\t\t\t"],[-1,1575,"                  "],[1,1593,"\t\t\t\t"],[-1,1614,"                  "],[1,1632,"\t\t\t\t"],[-1,1648,"                }\n          }\n    "],[1,1682,"\t\t\t}\n\t\t}\n\t"],[-1,1684,"  "],[-1,1687,"  "],[-1,1710,"    "],[1,1714,"\t"],[1,1729," "],[1,1746," "],[-1,1749,"    "],[1,1753,"\t"],[-1,1766,"    "],[1,1770,"\t"],[1,1789," "],[1,1790," "],[-1,1809,"    "],[1,1813,"\t"],[-1,1836,"    "],[1,1840,"\t"],[1,1854,"rray"],[1,1855," "],[-1,1861,"    "],[1,1865,"\t"],[-1,1897,"    "],[1,1901,"\t"],[-1,1923,"    "],[1,1927,"\t"],[1,1939,"rray"],[1,1940," "],[-1,1946,"    "],[1,1950,"\t"],[1,1964,"rray"],[1,1965," "]],[1114,1972],[1836,1836]]],[1540088590496,["gjx16@GJXAIOU",[[1,1843,"\n"]],[1840,1840],[1841,1841]]],[1540088662166,[null,[[-1,232,"**程序\n"],[1,237,"算法的程序**"],[-1,282,"- "]],[232,232],[282,282]]],[1540088662166,[null,[[1,232,"**程序\n"],[-1,232,"算法的程序**"],[1,284,"- "]],[282,282],[232,232]]],[1540088626758,["gjx16@GJXAIOU",[[1,1841,"chen"]],[1841,1841],[1845,1845]]],[1540088627718,["gjx16@GJXAIOU",[[-1,1841,"chen"]],[1845,1845],[1841,1841]]],[1540088632587,["gjx16@GJXAIOU",[[1,1841,"程序运行结果；"]],[1841,1841],[1848,1848]]],[1540088633349,["gjx16@GJXAIOU",[[1,1851,"\n"]],[1848,1848],[1849,1849]]],[1540088643106,["gjx16@GJXAIOU",[[1,1849,"![函数封装之后排序]($resource/%E5%87%BD%E6%95%B0%E5%B0%81%E8%A3%85%E4%B9%8B%E5%90%8E%E6%8E%92%E5%BA%8F.png)"]],[1849,1849],[1949,1949]]],[1540088646349,["gjx16@GJXAIOU",[[1,1951,"\n"]],[1948,1948],[1949,1949]]],[1540088646488,["gjx16@GJXAIOU",[[1,1952,"\n"]],[1949,1949],[1950,1950]]],[1540088646637,["gjx16@GJXAIOU",[[1,1953,"\n"]],[1950,1950],[1951,1951]]],[1540088722166,[null,[[-1,232,"**程序\n"],[1,237,"算法的程序**"],[-1,282,"- "]],[232,232],[282,282]]],[1540088722166,[null,[[1,232,"**程序\n"],[-1,232,"算法的程序**"],[1,284,"- "]],[282,282],[232,232]]],[1540088666888,["gjx16@GJXAIOU",[[1,1291,"、、"]],[1291,1291],[1293,1293]]],[1540088667621,["gjx16@GJXAIOU",[[-1,1291,"、、"]],[1293,1293],[1291,1291]]],[1540088679299,["gjx16@GJXAIOU",[[1,1291,"//如果数组作为函数参数，在"]],[1291,1291],[1305,1305]]],[1540088680384,["gjx16@GJXAIOU",[[-1,1304,"在"]],[1305,1305],[1304,1304]]],[1540088692736,["gjx16@GJXAIOU",[[1,1304,"则数组形参退化为指针"]],[1304,1304],[1314,1314]]],[1540088694865,["gjx16@GJXAIOU",[[1,1315,"\n"]],[1314,1314],[1315,1315]]],[1540088696931,["gjx16@GJXAIOU",[[1,1315,"、、"]],[1315,1315],[1317,1317]]],[1540088697718,["gjx16@GJXAIOU",[[-1,1315,"、、"]],[1317,1317],[1315,1315]]],[1540088698200,["gjx16@GJXAIOU",[[1,1315,"、、"]],[1315,1315],[1317,1317]]],[1540088698805,["gjx16@GJXAIOU",[[-1,1315,"、、"]],[1317,1317],[1315,1315]]],[1540088722031,["gjx16@GJXAIOU",[[1,1315,"//下面的第一个参数可以是*array，或者为：ar"]],[1315,1315],[1341,1341]]],[1540088782169,[null,[[-1,232,"**程序\n"],[1,237,"算法的程序**"],[-1,282,"- "]],[232,232],[282,282]]],[1540088782169,[null,[[1,232,"**程序\n"],[-1,232,"算法的程序**"],[1,284,"- "]],[282,282],[232,232]]],[1540088742430,["gjx16@GJXAIOU",[[1,1341,"ray[],或者为：array【1"]],[1341,1341],[1358,1358]]],[1540088744927,["gjx16@GJXAIOU",[[-1,1356,"【1"]],[1358,1358],[1356,1356]]],[1540088764127,["gjx16@GJXAIOU",[[1,1356,"[1]，或者array[20"]],[1356,1356],[1370,1370]]],[1540088765092,["gjx16@GJXAIOU",[[-1,1368,"20"]],[1370,1370],[1368,1368]]],[1540088769333,["gjx16@GJXAIOU",[[1,1368,"10]等等"]],[1368,1368],[1373,1373]]],[1540089382180,[null,[[-1,232,"**程序\n"],[1,237,"算法的程序**"],[-1,282,"- "]],[232,232],[282,282]]],[1540089382180,[null,[[1,232,"**程序\n"],[-1,232,"算法的程序**"],[1,284,"- "]],[282,282],[232,232]]],[1540089322559,["gjx16@GJXAIOU",[[1,1931,"\n"]],[1930,1930],[1931,1931]]],[1540089324990,["gjx16@GJXAIOU",[[1,2037,"\n"]],[2032,2032],[2033,2033]]],[1540120359138,[null,[[-1,232,"**程序\n"],[1,237,"算法的程序**"],[-1,282,"- "]],[232,232],[282,282]]],[1540120359138,[null,[[1,232,"**程序\n"],[-1,232,"算法的程序**"],[1,284,"- "]],[282,282],[232,232]]],[1540120347110,["gjx16@GJXAIOU",[[1,2038,"\n"]],[2031,2031],[2032,2032]]],[1540120419136,[null,[[-1,232,"**程序\n"],[1,237,"算法的程序**"],[-1,282,"- "]],[232,232],[282,282]]],[1540120419136,[null,[[1,232,"**程序\n"],[-1,232,"算法的程序**"],[1,284,"- "]],[282,282],[232,232]]],[1540120374224,["gjx16@GJXAIOU",[[1,2039,"\n"]],[2032,2032],[2033,2033]]],[1540121019143,[null,[[-1,232,"**程序\n"],[1,237,"算法的程序**"],[-1,282,"- "]],[232,232],[282,282]]],[1540121019143,[null,[[1,232,"**程序\n"],[-1,232,"算法的程序**"],[1,284,"- "]],[282,282],[232,232]]],[1540120976734,["gjx16@GJXAIOU",[[1,2040,"\n"]],[2032,2032],[2033,2033]]],[1540120976888,["gjx16@GJXAIOU",[[1,2041,"\n"]],[2033,2033],[2034,2034]]],[1540121016587,["gjx16@GJXAIOU",[[1,2034,"5.****"]],[2034,2034],[2038,2038]]],[1540130979326,[null,[[-1,232,"**程序\n"],[1,237,"算法的程序**"],[-1,282,"- "]],[232,232],[282,282]]],[1540130979326,[null,[[1,232,"**程序\n"],[-1,232,"算法的程序**"],[1,284,"- "]],[282,282],[232,232]]],[1540130965333,["gjx16@GJXAIOU",[[1,2038,"void 无类型"]],[2038,2038],[2046,2046]]],[1540130967547,["gjx16@GJXAIOU",[[1,2056,"\n"]],[2048,2048],[2049,2049]]],[1540130974983,["gjx16@GJXAIOU",[[1,2049,"-0 "]],[2049,2049],[2052,2052]]],[1540130976253,["gjx16@GJXAIOU",[[-1,2049,"-0 "]],[2052,2052],[2049,2049]]],[1540130976923,["gjx16@GJXAIOU",[[1,2057,"\n"]],[2049,2049],[2050,2050]]],[1540130977741,["gjx16@GJXAIOU",[[1,2050,"- "]],[2050,2050],[2052,2052]]],[1540131039326,[null,[[-1,232,"**程序\n"],[1,237,"算法的程序**"],[-1,282,"- "]],[232,232],[282,282]]],[1540131039326,[null,[[1,232,"**程序\n"],[-1,232,"算法的程序**"],[1,284,"- "]],[282,282],[232,232]]],[1540131030509,["gjx16@GJXAIOU",[[1,2052,"函数参数为空，定义函数时，可以用void修饰：例如：``"]],[2052,2052],[2080,2080]]],[1540131035268,["gjx16@GJXAIOU",[[1,2079,"int fun()"]],[2079,2079],[2088,2088]]],[1540131038148,["gjx16@GJXAIOU",[[1,2087,"void"]],[2087,2087],[2091,2091]]],[1540131099329,[null,[[-1,232,"**程序\n"],[1,237,"算法的程序**"],[-1,282,"- "]],[232,232],[282,282]]],[1540131099329,[null,[[1,232,"**程序\n"],[-1,232,"算法的程序**"],[1,284,"- "]],[282,282],[232,232]]],[1540131040794,["gjx16@GJXAIOU",[[1,2094,"- \n"]],[2093,2093],[2096,2096]]],[1540131058886,["gjx16@GJXAIOU",[[1,2096,"函数没有返回值，："]],[2096,2096],[2105,2105]]],[1540131059706,["gjx16@GJXAIOU",[[-1,2103,"，："]],[2105,2105],[2103,2103]]],[1540131063348,["gjx16@GJXAIOU",[[1,2103,"：``"]],[2103,2103],[2106,2106]]],[1540131070527,["gjx16@GJXAIOU",[[1,2105,"void fun()"]],[2105,2105],[2115,2115]]],[1540131073014,["gjx16@GJXAIOU",[[1,2114,"void"]],[2114,2114],[2118,2118]]],[1540131074922,["gjx16@GJXAIOU",[[1,2121,"- \n"]],[2120,2120],[2123,2123]]],[1540131081920,["gjx16@GJXAIOU",[[1,2123,"不能是定义"]],[2123,2123],[2128,2128]]],[1540131082749,["gjx16@GJXAIOU",[[-1,2125,"是定义"]],[2128,2128],[2125,2125]]],[1540131095906,["gjx16@GJXAIOU",[[1,2125,"定义void类型的普通变量"]],[2125,2125],[2138,2138]]],[1540131159329,[null,[[-1,232,"**程序\n"],[1,237,"算法的程序**"],[-1,282,"- "]],[232,232],[282,282]]],[1540131159329,[null,[[1,232,"**程序\n"],[-1,232,"算法的程序**"],[1,284,"- "]],[282,282],[232,232]]],[1540131104116,["gjx16@GJXAIOU",[[1,2139,"- \n"]],[2138,2138],[2141,2141]]],[1540131112610,["gjx16@GJXAIOU",[[1,2141,"可以使用void"]],[2141,2141],[2149,2149]]],[1540131118457,["gjx16@GJXAIOU",[[1,2145,"定义"]],[2145,2145],[2147,2147]]],[1540131137830,["gjx16@GJXAIOU",[[1,2151," *变量 ："]],[2151,2151],[2157,2157]]],[1540131219332,[null,[[-1,232,"**程序\n"],[1,237,"算法的程序**"],[-1,282,"- "]],[232,232],[282,282]]],[1540131219332,[null,[[1,232,"**程序\n"],[-1,232,"算法的程序**"],[1,284,"- "]],[282,282],[232,232]]],[1540131187888,["gjx16@GJXAIOU",[[1,2157,"void *p"]],[2157,2157],[2164,2164]]],[1540131191701,["gjx16@GJXAIOU",[[1,2157," "]],[2157,2157],[2158,2158]]],[1540131279334,[null,[[-1,232,"**程序\n"],[1,237,"算法的程序**"],[-1,282,"- "]],[232,232],[282,282]]],[1540131279334,[null,[[1,232,"**程序\n"],[-1,232,"算法的程序**"],[1,284,"- "]],[282,282],[232,232]]],[1540131255335,["gjx16@GJXAIOU",[[1,2158,"`"]],[2158,2158],[2159,2159]]],[1540131273050,["gjx16@GJXAIOU",[[1,2166,"`,其中在32为"]],[2166,2166],[2174,2174]]],[1540131273643,["gjx16@GJXAIOU",[[-1,2173,"为"]],[2174,2174],[2173,2173]]],[1540131277119,["gjx16@GJXAIOU",[[1,2173,"位系统"]],[2173,2173],[2176,2176]]],[1540131339335,[null,[[-1,232,"**程序\n"],[1,237,"算法的程序**"],[-1,282,"- "]],[232,232],[282,282]]],[1540131339335,[null,[[1,232,"**程序\n"],[-1,232,"算法的程序**"],[1,284,"- "]],[282,282],[232,232]]],[1540131302065,["gjx16@GJXAIOU",[[1,2176,"中为4个字节，在64位系统中占64字节"]],[2176,2176],[2195,2195]]],[1540131303083,["gjx16@GJXAIOU",[[1,2196,"- \n"]],[2195,2195],[2198,2198]]],[1540131333269,["gjx16@GJXAIOU",[[1,2198,"数据类型本质：固定内存块大小别名"]],[2198,2198],[2214,2214]]],[1540131334162,["gjx16@GJXAIOU",[[1,2215,"- \n"]],[2214,2214],[2217,2217]]],[1540131338727,["gjx16@GJXAIOU",[[1,2217,"void "]],[2217,2217],[2222,2222]]],[1540131399338,[null,[[-1,232,"**程序\n"],[1,237,"算法的程序**"],[-1,282,"- "]],[232,232],[282,282]]],[1540131399338,[null,[[1,232,"**程序\n"],[-1,232,"算法的程序**"],[1,284,"- "]],[282,282],[232,232]]],[1540131357091,["gjx16@GJXAIOU",[[1,2222,"*p  wan"]],[2222,2222],[2229,2229]]],[1540131357700,["gjx16@GJXAIOU",[[-1,2226,"wan"]],[2229,2229],[2226,2226]]],[1540131371103,["gjx16@GJXAIOU",[[1,2226,"万能指针，哈数返回值"]],[2226,2226],[2236,2236]]],[1540131373762,["gjx16@GJXAIOU",[[-1,2231,"哈数"]],[2233,2233],[2231,2231]]],[1540131376286,["gjx16@GJXAIOU",[[1,2231,"函数"]],[2231,2231],[2233,2233]]],[1540131380358,["gjx16@GJXAIOU",[[1,2236,"，"]],[2236,2236],[2237,2237]]],[1540131387624,["gjx16@GJXAIOU",[[1,2231,"可以作为"]],[2231,2231],[2235,2235]]],[1540131394941,["gjx16@GJXAIOU",[[1,2241,"函数"]],[2241,2241],[2243,2243]]],[1540131459340,[null,[[-1,232,"**程序\n"],[1,237,"算法的程序**"],[-1,282,"- "]],[232,232],[282,282]]],[1540131459340,[null,[[1,232,"**程序\n"],[-1,232,"算法的程序**"],[1,284,"- "]],[282,282],[232,232]]],[1540131408754,["gjx16@GJXAIOU",[[1,2243,"参数"]],[2243,2243],[2245,2245]]]],null,"gjx16@GJXAIOU"],["6ba1b252-6a1f-4626-80dd-89debeb44e60",1540204455551,"---\n1.概述：学习要求，学习标准\n2.数据类型、变量\n3.内存四区（栈、堆、全局、代码区）\n4.说明：本系列代码使用VS2017进行测试运行，代码位置为：\nE:\\Program\\C++\\C++\\practice\\programs\\Cenhance\\Cenhance_1\\Cenhance_1\n---\n\n# day01\n\n![学习历程]($resource/%E5%AD%A6%E4%B9%A0%E5%8E%86%E7%A8%8B.png)\n\n2.**如何看懂带算法的程序**\n\n- 看懂流程\n- 每个语句的功能\n- 试数\n- 调试\n- 模仿改\n- 不看代码自己写\n\n3.**选择法排序**\n\n```c\n#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n\nint main(void)\n{\n    int array[] = {1,4,6,9,0,4,3,5,2};\n    int num = 0;\n    num = sizeof(array)/sizeof(array[0]);\n  int i = 0 ;\n  for(i = 0; i < num ; i++)\n    {\n        printf(\"before = %d \\n\",array[i]);\n    }\n    printf(\"------------------\\n\");\n\n\n\n  //选择法进行排序\n\n  int j = 0;\n  int tmp= 0;\n  for(i = 0 ; i < num -1; i++)\n    {\n        for(j = i +1; j < num ; j++)\n          {\n              if(array[i] > array[j])\n                {\n                  tmp = array[i];\n                  array[i] = array[j];\n                  array[j] = tmp;\n                }\n          }\n    }\n    for(i = 0; i < num ; i++)\n        {\n            printf(\"after = %d \\n\",array[i]);\n        }\n}\n```\n程序运行结果；\n\n![排序]($resource/%E6%8E%92%E5%BA%8F.png)\n\n\n4.**将上面的程序进行函数封装**\n\n```c\n#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n\n\nvoid printf_array(int *array, int num)\n{\n\tint i = 0;\n\tfor (i = 0; i < num; i++)\n\t{\n\t\tprintf(\"%d \\n\", array[i]);\n\t}\n}\n\n\n//如果数组作为函数参数，则数组形参退化为指针\n//下面的第一个参数可以是*array，或者为：array[],或者为：array[1]，或者array[10]等等\nvoid sort_array(int *array, int num)\n{\n\t//选择法进行排序\n\tint i = 0;\n\tint j = 0;\n\tint tmp = 0;\n\tfor (i = 0; i < num - 1; i++)\n\t{\n\t\tfor (j = i + 1; j < num; j++)\n\t\t{\n\t\t\tif (array[i] > array[j])\n\t\t\t{\n\t\t\t\ttmp = array[i];\n\t\t\t\tarray[i] = array[j];\n\t\t\t\tarray[j] = tmp;\n\t\t\t}\n\t\t}\n\t}\n\n}\n\n\nint main(void)\n{\n\tint array[] = { 1,4,6,9,0,4,3,5,2 };\n\tint num = 0;\n\tnum = sizeof(array) / sizeof(array[0]);\n\n\tprintf(\"before = \\n\");\n\tprintf_array(array, num);\n\tprintf(\"------------------\\n\");\n\tprintf(\"after = \\n\");\n\tsort_array(array, num);\n\tprintf_array(array, num);\n}\n```\n程序运行结果；\n\n![函数封装之后排序]($resource/%E5%87%BD%E6%95%B0%E5%B0%81%E8%A3%85%E4%B9%8B%E5%90%8E%E6%8E%92%E5%BA%8F.png)\n\n\n5.**void 无类型**\n\n- 函数参数为空，定义函数时，可以用void修饰：例如：`int fun(void)`\n- 函数没有返回值：`void fun(void)`\n- 不能定义void类型的普通变量\n- 可以使用定义void *变量 ： `void *p`,其中在32位系统中为4个字节，在64位系统中占64字节\n- 数据类型本质：固定内存块大小别名\n- void *p  万能指针，可以作为函数返回值，函数参数\n\n\n\n\n\n\n\n",[[1540204402566,["gjx16@GJXAIOU",[[1,2246,"- \n"]],[2245,2245],[2248,2248]]],[1540204402720,["gjx16@GJXAIOU",[[-1,2246,"- "]],[2248,2248],[2247,2247]]],[1540204402864,["gjx16@GJXAIOU",[[1,2254,"\n"]],[2247,2247],[2248,2248]]],[1540204407247,["gjx16@GJXAIOU",[[1,2034,"\n"]],[2032,2032],[2033,2033]]],[1540204407382,["gjx16@GJXAIOU",[[1,2035,"\n"]],[2033,2033],[2034,2034]]],[1540204408097,["gjx16@GJXAIOU",[[1,2034,"----"]],[2034,2034],[2038,2038]]],[1540204411950,["gjx16@GJXAIOU",[[1,1089,"\n"]],[1087,1087],[1088,1088]]],[1540204412633,["gjx16@GJXAIOU",[[1,1088,"---"]],[1088,1088],[1091,1091]]],[1540204416329,["gjx16@GJXAIOU",[[1,284,"- \n"]],[283,283],[286,286]]],[1540204417065,["gjx16@GJXAIOU",[[1,286,"----"]],[286,286],[290,290]]],[1540204419021,["gjx16@GJXAIOU",[[-1,284,"- ----"]],[290,290],[284,284]]],[1540204419408,["gjx16@GJXAIOU",[[1,286,"\n"]],[284,284],[285,285]]],[1540204419535,["gjx16@GJXAIOU",[[1,287,"\n"]],[285,285],[286,286]]],[1540204420267,["gjx16@GJXAIOU",[[1,286,"----"]],[286,286],[290,290]]],[1540204431084,["gjx16@GJXAIOU",[[1,161,"1.****"]],[161,161],[165,165]]],[1540204434961,["gjx16@GJXAIOU",[[1,165,"学习历程"]],[165,165],[169,169]]],[1540204437192,["gjx16@GJXAIOU",[[1,172,"\n"]],[171,171],[172,172]]],[1540204449575,["gjx16@GJXAIOU",[[1,2274,"- \n"]],[2273,2273],[2276,2276]]],[1540204449855,["gjx16@GJXAIOU",[[-1,2274,"- "]],[2276,2276],[2275,2275]]],[1540204934959,["gjx16@GJXAIOU",[[1,2276,"6.****"]],[2276,2276],[2280,2280]]],[1540204953115,["gjx16@GJXAIOU",[[1,2280,"程序分文件"]],[2280,2280],[2285,2285]]],[1540204955031,["gjx16@GJXAIOU",[[1,2295,"\n"]],[2287,2287],[2288,2288]]],[1540204956085,["gjx16@GJXAIOU",[[1,2296,"\n"]],[2288,2288],[2289,2289]]],[1540204960396,["gjx16@GJXAIOU",[[1,2289,"- ****"]],[2289,2289],[2293,2293]]],[1540204965025,["gjx16@GJXAIOU",[[1,2293,"要去："]],[2293,2293],[2296,2296]]],[1540204965934,["gjx16@GJXAIOU",[[-1,2293,"要去："]],[2296,2296],[2293,2293]]],[1540204969122,["gjx16@GJXAIOU",[[1,2293,"要求："]],[2293,2293],[2296,2296]]],[1540204983777,["gjx16@GJXAIOU",[[1,2298," 按照函数的功能分文件"]],[2298,2298],[2309,2309]]],[1540204984629,["gjx16@GJXAIOU",[[1,2310,"- \n"]],[2309,2309],[2312,2312]]],[1540204993659,["gjx16@GJXAIOU",[[1,2312,"分文件时候，"]],[2312,2312],[2318,2318]]],[1540204998146,["gjx16@GJXAIOU",[[1,2318,"头文件防止"]],[2318,2318],[2323,2323]]],[1540205004653,["gjx16@GJXAIOU",[[-1,2318,"头文件防止"]],[2323,2323],[2318,2318]]],[1540205015247,["gjx16@GJXAIOU",[[1,2318,"防止头文件重复包含：``"]],[2318,2318],[2330,2330]]],[1540205021198,["gjx16@GJXAIOU",[[1,2329,"# pr"]],[2329,2329],[2333,2333]]],[1540205023181,["gjx16@GJXAIOU",[[-1,2330," pr"]],[2333,2333],[2330,2330]]],[1540205027394,["gjx16@GJXAIOU",[[1,2330,"praga"]],[2330,2330],[2335,2335]]],[1540205027893,["gjx16@GJXAIOU",[[-1,2334,"a"]],[2335,2335],[2334,2334]]],[1540205032472,["gjx16@GJXAIOU",[[1,2334,"ma once"]],[2334,2334],[2341,2341]]],[1540205036397,["gjx16@GJXAIOU",[[1,2343,"- \n"]],[2342,2342],[2345,2345]]]],null,"gjx16@GJXAIOU"],["a1d8d8a4-6707-471e-a8f9-1f73b55e20d3",1540205374611,"---\n1.概述：学习要求，学习标准\n2.数据类型、变量\n3.内存四区（栈、堆、全局、代码区）\n4.说明：本系列代码使用VS2017进行测试运行，代码位置为：\nE:\\Program\\C++\\C++\\practice\\programs\\Cenhance\\Cenhance_1\\Cenhance_1\n---\n\n# day01\n1.**学习历程**\n\n![学习历程]($resource/%E5%AD%A6%E4%B9%A0%E5%8E%86%E7%A8%8B.png)\n\n2.**如何看懂带算法的程序**\n\n- 看懂流程\n- 每个语句的功能\n- 试数\n- 调试\n- 模仿改\n- 不看代码自己写\n\n\n----\n\n3.**选择法排序**\n\n```c\n#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n\nint main(void)\n{\n    int array[] = {1,4,6,9,0,4,3,5,2};\n    int num = 0;\n    num = sizeof(array)/sizeof(array[0]);\n  int i = 0 ;\n  for(i = 0; i < num ; i++)\n    {\n        printf(\"before = %d \\n\",array[i]);\n    }\n    printf(\"------------------\\n\");\n\n\n\n  //选择法进行排序\n\n  int j = 0;\n  int tmp= 0;\n  for(i = 0 ; i < num -1; i++)\n    {\n        for(j = i +1; j < num ; j++)\n          {\n              if(array[i] > array[j])\n                {\n                  tmp = array[i];\n                  array[i] = array[j];\n                  array[j] = tmp;\n                }\n          }\n    }\n    for(i = 0; i < num ; i++)\n        {\n            printf(\"after = %d \\n\",array[i]);\n        }\n}\n```\n程序运行结果；\n\n![排序]($resource/%E6%8E%92%E5%BA%8F.png)\n\n---\n\n4.**将上面的程序进行函数封装**\n\n```c\n#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n\n\nvoid printf_array(int *array, int num)\n{\n\tint i = 0;\n\tfor (i = 0; i < num; i++)\n\t{\n\t\tprintf(\"%d \\n\", array[i]);\n\t}\n}\n\n\n//如果数组作为函数参数，则数组形参退化为指针\n//下面的第一个参数可以是*array，或者为：array[],或者为：array[1]，或者array[10]等等\nvoid sort_array(int *array, int num)\n{\n\t//选择法进行排序\n\tint i = 0;\n\tint j = 0;\n\tint tmp = 0;\n\tfor (i = 0; i < num - 1; i++)\n\t{\n\t\tfor (j = i + 1; j < num; j++)\n\t\t{\n\t\t\tif (array[i] > array[j])\n\t\t\t{\n\t\t\t\ttmp = array[i];\n\t\t\t\tarray[i] = array[j];\n\t\t\t\tarray[j] = tmp;\n\t\t\t}\n\t\t}\n\t}\n\n}\n\n\nint main(void)\n{\n\tint array[] = { 1,4,6,9,0,4,3,5,2 };\n\tint num = 0;\n\tnum = sizeof(array) / sizeof(array[0]);\n\n\tprintf(\"before = \\n\");\n\tprintf_array(array, num);\n\tprintf(\"------------------\\n\");\n\tprintf(\"after = \\n\");\n\tsort_array(array, num);\n\tprintf_array(array, num);\n}\n```\n程序运行结果；\n\n![函数封装之后排序]($resource/%E5%87%BD%E6%95%B0%E5%B0%81%E8%A3%85%E4%B9%8B%E5%90%8E%E6%8E%92%E5%BA%8F.png)\n\n\n----\n\n5.**void 无类型**\n\n- 函数参数为空，定义函数时，可以用void修饰：例如：`int fun(void)`\n- 函数没有返回值：`void fun(void)`\n- 不能定义void类型的普通变量\n- 可以使用定义void *变量 ： `void *p`,其中在32位系统中为4个字节，在64位系统中占64字节\n- 数据类型本质：固定内存块大小别名\n- void *p  万能指针，可以作为函数返回值，函数参数\n\n\n6.**程序分文件**\n\n- **要求：** 按照函数的功能分文件\n- 分文件时候，防止头文件重复包含：`#pragma once`\n- \n\n\n\n\n\n\n\n",[[1540205372895,["gjx16@GJXAIOU",[[1,2345,"让C语言代码可以在C++的编译器中编译运行图"]],[2345,2345],[2367,2367]]],[1540205377105,["gjx16@GJXAIOU",[[1,2365,"行"]],[2365,2365],[2366,2366]]],[1540205381693,["gjx16@GJXAIOU",[[1,2367,"- \n"]],[2366,2366],[2369,2369]]],[1540205382787,["gjx16@GJXAIOU",[[-1,2367,"- "]],[2369,2369],[2367,2367]]],[1540205384527,["gjx16@GJXAIOU",[[1,2367,"```"]],[2367,2367],[2370,2370]]],[1540205384557,["gjx16@GJXAIOU",[[1,2370,"language\n```\n"]],[2370,2370],[2370,2378]]],[1540205385862,["gjx16@GJXAIOU",[[-1,2370,"language"],[1,2378,"c"]],[2370,2378],[2371,2371]]],[1540205386228,["gjx16@GJXAIOU",[[1,2372,"\n"]],[2371,2371],[2372,2372]]],[1540205392214,["gjx16@GJXAIOU",[[1,2372,"#infdef"]],[2372,2372],[2379,2379]]],[1540205396843,["gjx16@GJXAIOU",[[-1,2374,"nfdef"]],[2379,2379],[2374,2374]]],[1540205410373,["gjx16@GJXAIOU",[[1,2374,"fdef_cplud"]],[2374,2374],[2384,2384]]],[1540205411307,["gjx16@GJXAIOU",[[-1,2383,"d"]],[2384,2384],[2383,2383]]],[1540205413157,["gjx16@GJXAIOU",[[1,2383,"sl"]],[2383,2383],[2385,2385]]],[1540205414236,["gjx16@GJXAIOU",[[-1,2384,"l"]],[2385,2385],[2384,2384]]],[1540205416636,["gjx16@GJXAIOU",[[1,2384,"plud"]],[2384,2384],[2388,2388]]],[1540205417315,["gjx16@GJXAIOU",[[-1,2387,"d"]],[2388,2388],[2387,2387]]],[1540205417431,["gjx16@GJXAIOU",[[1,2387,"s"]],[2387,2387],[2388,2388]]],[1540205419316,["gjx16@GJXAIOU",[[1,2389,"\n"]],[2388,2388],[2389,2389]]],[1540205424324,["gjx16@GJXAIOU",[[1,2389,"extren"]],[2389,2389],[2395,2395]]],[1540205426907,["gjx16@GJXAIOU",[[-1,2392,"ren"]],[2395,2395],[2392,2392]]],[1540205431324,["gjx16@GJXAIOU",[[1,2392,"ern\"\""]],[2392,2392],[2397,2397]]],[1540205432213,["gjx16@GJXAIOU",[[-1,2395,"\"\""]],[2397,2397],[2395,2395]]],[1540205433423,["gjx16@GJXAIOU",[[1,2395," :"]],[2395,2395],[2397,2397]]],[1540205493541,[null,[[-1,2366,"行"],[1,2367,"\n"],[-1,2402,"\n图"]],[2366,2366],[2402,2402]]],[1540205493541,[null,[[1,2366,"行"],[-1,2366,"\n"],[1,2402,"\n图"]],[2402,2402],[2366,2366]]],[1540205433797,["gjx16@GJXAIOU",[[1,2397,"\"\""]],[2397,2397],[2399,2399]]],[1540205434515,["gjx16@GJXAIOU",[[-1,2396,":\"\""]],[2399,2399],[2396,2396]]],[1540205435301,["gjx16@GJXAIOU",[[1,2396,"::"]],[2396,2396],[2398,2398]]],[1540205435876,["gjx16@GJXAIOU",[[-1,2396,"::"]],[2398,2398],[2396,2396]]],[1540205437055,["gjx16@GJXAIOU",[[1,2396,"\"\""]],[2396,2396],[2398,2398]]],[1540205438950,["gjx16@GJXAIOU",[[1,2397,"C"]],[2397,2397],[2398,2398]]],[1540205442462,["gjx16@GJXAIOU",[[1,2399," {"]],[2399,2399],[2401,2401]]],[1540205443996,["gjx16@GJXAIOU",[[1,2402,"\n"]],[2401,2401],[2402,2402]]],[1540205449062,["gjx16@GJXAIOU",[[1,2402,"#endif"]],[2402,2402],[2408,2408]]],[1540205453028,["gjx16@GJXAIOU",[[1,2409,"\n"]],[2408,2408],[2409,2409]]],[1540205453243,["gjx16@GJXAIOU",[[1,2410,"\n"]],[2409,2409],[2410,2410]]],[1540205453452,["gjx16@GJXAIOU",[[1,2411,"\n"]],[2410,2410],[2411,2411]]],[1540205463069,["gjx16@GJXAIOU",[[1,2412,"\n"]],[2409,2409],[2410,2410]]],[1540205463243,["gjx16@GJXAIOU",[[1,2413,"\n"]],[2410,2410],[2411,2411]]],[1540205463413,["gjx16@GJXAIOU",[[1,2414,"\n"]],[2411,2411],[2412,2412]]],[1540205464326,["gjx16@GJXAIOU",[[1,2412,"\\"]],[2412,2412],[2413,2413]]],[1540205464350,["gjx16@GJXAIOU",[[-1,2412,"\\"]],[2413,2413],[2412,2412]]],[1540205465147,["gjx16@GJXAIOU",[[-1,2414,"\n"]],[2412,2412],[2411,2411]]],[1540205465314,["gjx16@GJXAIOU",[[-1,2413,"\n"]],[2411,2411],[2410,2410]]],[1540205474517,["gjx16@GJXAIOU",[[1,2410,"//函数的声明"]],[2410,2410],[2417,2417]]],[1540205475075,["gjx16@GJXAIOU",[[1,2420,"\n"]],[2417,2417],[2418,2418]]],[1540205475243,["gjx16@GJXAIOU",[[1,2421,"\n"]],[2418,2418],[2419,2419]]],[1540205487765,["gjx16@GJXAIOU",[[1,2419,"#ifdef_cplud"]],[2419,2419],[2431,2431]]],[1540205488531,["gjx16@GJXAIOU",[[-1,2430,"d"]],[2431,2431],[2430,2430]]],[1540205489516,["gjx16@GJXAIOU",[[1,2430,"sl"]],[2430,2430],[2432,2432]]],[1540205490092,["gjx16@GJXAIOU",[[-1,2431,"l"]],[2432,2432],[2431,2431]]],[1540205491996,["gjx16@GJXAIOU",[[1,2431,"plud"]],[2431,2431],[2435,2435]]],[1540205492763,["gjx16@GJXAIOU",[[-1,2434,"d"]],[2435,2435],[2434,2434]]],[1540205492852,["gjx16@GJXAIOU",[[1,2434,"s"]],[2434,2434],[2435,2435]]],[1540205553539,[null,[[-1,2366,"行"],[1,2367,"\n"],[-1,2442,"\n图"]],[2366,2366],[2442,2442]]],[1540205553539,[null,[[1,2366,"行"],[-1,2366,"\n"],[1,2442,"\n图"]],[2442,2442],[2366,2366]]],[1540205496397,["gjx16@GJXAIOU",[[1,2438,"\n"]],[2435,2435],[2436,2436]]],[1540205497532,["gjx16@GJXAIOU",[[1,2436,"}"]],[2436,2436],[2437,2437]]],[1540205497931,["gjx16@GJXAIOU",[[1,2440,"\n"]],[2437,2437],[2438,2438]]],[1540205504045,["gjx16@GJXAIOU",[[1,2438,"#endof"]],[2438,2438],[2444,2444]]],[1540205504747,["gjx16@GJXAIOU",[[-1,2442,"of"]],[2444,2444],[2442,2442]]],[1540205505572,["gjx16@GJXAIOU",[[1,2442,"if"]],[2442,2442],[2444,2444]]],[1540205514419,["gjx16@GJXAIOU",[[-1,2446,"\n"]],[2446,2446],[2445,2445]]],[1540205514589,["gjx16@GJXAIOU",[[-1,2445,"\n"]],[2445,2445],[2444,2444]]],[1540205521059,["gjx16@GJXAIOU",[[1,2457,"\n"]],[2448,2448],[2449,2449]]],[1540205521739,["gjx16@GJXAIOU",[[1,2458,"\n"]],[2449,2449],[2450,2450]]],[1540212121176,[null,[[-1,2366,"行"],[1,2367,"\n"],[-1,2449,"\n图"]],[2366,2366],[2449,2449]]],[1540212121176,[null,[[1,2366,"行"],[-1,2366,"\n"],[1,2449,"\n图"]],[2449,2449],[2366,2366]]],[1540212097570,["gjx16@GJXAIOU",[[1,2459,"\n"]],[2448,2448],[2449,2449]]],[1540212241182,[null,[[-1,2366,"行"],[1,2367,"\n"],[-1,2449,"\n图"]],[2366,2366],[2449,2449]]],[1540212241182,[null,[[1,2366,"行"],[-1,2366,"\n"],[1,2449,"\n图"]],[2449,2449],[2366,2366]]],[1540212194530,["gjx16@GJXAIOU",[[1,2460,"\n"]],[2448,2448],[2449,2449]]],[1540212195289,["gjx16@GJXAIOU",[[1,2461,"\n"]],[2449,2449],[2450,2450]]],[1540212198959,["gjx16@GJXAIOU",[[1,2450,"7.****"]],[2450,2450],[2454,2454]]],[1540212200479,["gjx16@GJXAIOU",[[1,2454,"shuju"]],[2454,2454],[2459,2459]]],[1540212201713,["gjx16@GJXAIOU",[[-1,2454,"shuju"]],[2459,2459],[2454,2454]]],[1540212205521,["gjx16@GJXAIOU",[[1,2454,"数据类型"]],[2454,2454],[2458,2458]]],[1540212207418,["gjx16@GJXAIOU",[[1,2472,"\n"]],[2460,2460],[2461,2461]]],[1540212210874,["gjx16@GJXAIOU",[[1,2461," "]],[2461,2461],[2462,2462]]],[1540212301177,[null,[[-1,2366,"行"],[1,2367,"\n"],[-1,2460,"图 \n\n"],[1,2464,"\n "]],[2366,2366],[2466,2466]]],[1540212301177,[null,[[1,2366,"行"],[-1,2366,"\n"],[1,2460,"图 \n\n"],[-1,2460,"\n "]],[2466,2466],[2366,2366]]],[1540212290382,["gjx16@GJXAIOU",[[1,2462,"- 类型的本质：固定内存代销的别名"]],[2462,2462],[2479,2479]]],[1540212290841,["gjx16@GJXAIOU",[[1,2480," - \n"]],[2479,2479],[2483,2483]]],[1540212295361,["gjx16@GJXAIOU",[[-1,2474,"代销"]],[2476,2476],[2474,2474]]],[1540212297360,["gjx16@GJXAIOU",[[1,2474,"大小"]],[2474,2474],[2476,2476]]],[1540212361183,[null,[[-1,2366,"行"],[1,2367,"\n"],[-1,2460,"图"],[1,2461,"\n"],[-1,2483,"\n\n"]],[2366,2366],[2483,2483]]],[1540212361183,[null,[[1,2366,"行"],[-1,2366,"\n"],[1,2460,"图"],[-1,2460,"\n"],[1,2483,"\n\n"]],[2483,2483],[2366,2366]]],[1540212312156,["gjx16@GJXAIOU",[[1,2483,"数据类型的作用：编译器语段"]],[2483,2483],[2496,2496]]],[1540212316729,["gjx16@GJXAIOU",[[-1,2494,"语段"]],[2496,2496],[2494,2494]]],[1540212323260,["gjx16@GJXAIOU",[[1,2494,"预算对象（）"]],[2494,2494],[2500,2500]]],[1540212326142,["gjx16@GJXAIOU",[[1,2499,"变量"]],[2499,2499],[2501,2501]]],[1540212335400,["gjx16@GJXAIOU",[[1,2502,"分配的内存空间大小"]],[2502,2502],[2511,2511]]],[1540212335931,["gjx16@GJXAIOU",[[1,2512," - \n"]],[2511,2511],[2515,2515]]],[1540212344520,["gjx16@GJXAIOU",[[-1,2512," - "]],[2515,2515],[2512,2512]]],[1540212344969,["gjx16@GJXAIOU",[[-1,2523,"\n"]],[2512,2512],[2511,2511]]],[1540212360828,["gjx16@GJXAIOU",[[1,2511,"，只有当变量定义的时候才真正的将这个"]],[2511,2511],[2529,2529]]],[1540212421183,[null,[[-1,2366,"行"],[1,2367,"\n"],[-1,2460,"图"],[1,2461,"\n"],[-1,2529,"\n\n"]],[2366,2366],[2529,2529]]],[1540212421183,[null,[[1,2366,"行"],[-1,2366,"\n"],[1,2460,"图"],[-1,2460,"\n"],[1,2529,"\n\n"]],[2529,2529],[2366,2366]]],[1540212366589,["gjx16@GJXAIOU",[[1,2529,"空间分配西湖区"]],[2529,2529],[2536,2536]]],[1540212367704,["gjx16@GJXAIOU",[[-1,2533,"西湖区"]],[2536,2536],[2533,2533]]],[1540212370023,["gjx16@GJXAIOU",[[1,2533,"出去；"]],[2533,2533],[2536,2536]]],[1540212370506,["gjx16@GJXAIOU",[[1,2537," - \n"]],[2536,2536],[2540,2540]]],[1540212391821,["gjx16@GJXAIOU",[[1,2540,"数据类型可以通过typedef其别名"]],[2540,2540],[2558,2558]]],[1540212392401,["gjx16@GJXAIOU",[[1,2559," - \n"]],[2558,2558],[2562,2562]]],[1540212541187,[null,[[-1,2366,"行"],[1,2367,"\n"],[-1,2460,"图"],[1,2461,"\n"],[-1,2562,"\n\n"]],[2366,2366],[2562,2562]]],[1540212541187,[null,[[1,2366,"行"],[-1,2366,"\n"],[1,2460,"图"],[-1,2460,"\n"],[1,2562,"\n\n"]],[2562,2562],[2366,2366]]],[1540212502867,["gjx16@GJXAIOU",[[-1,2559," - "]],[2562,2562],[2559,2559]]],[1540212503641,["gjx16@GJXAIOU",[[1,2571,"\n"]],[2559,2559],[2560,2560]]],[1540212503788,["gjx16@GJXAIOU",[[1,2572,"\n"]],[2560,2560],[2561,2561]]],[1540212503937,["gjx16@GJXAIOU",[[1,2573,"\n"]],[2561,2561],[2562,2562]]],[1540212504066,["gjx16@GJXAIOU",[[1,2574,"\n"]],[2562,2562],[2563,2563]]],[1540212510392,["gjx16@GJXAIOU",[[1,161,"\n"]],[160,160],[161,161]]],[1540212510554,["gjx16@GJXAIOU",[[1,162,"\n"]],[161,161],[162,162]]],[1540212510705,["gjx16@GJXAIOU",[[1,163,"\n"]],[162,162],[163,163]]],[1540212512610,["gjx16@GJXAIOU",[[1,163,"#3 "]],[163,163],[166,166]]],[1540212513281,["gjx16@GJXAIOU",[[-1,164,"3 "]],[166,166],[164,164]]],[1540212516845,["gjx16@GJXAIOU",[[1,164,"# 数据类型"]],[164,164],[170,170]]],[1540212517418,["gjx16@GJXAIOU",[[1,171,"\n"]],[170,170],[171,171]]],[1540212517561,["gjx16@GJXAIOU",[[1,172,"\n"]],[171,171],[172,172]]],[1540212521836,["gjx16@GJXAIOU",[[1,2587,"\n"]],[2573,2573],[2574,2574]]],[1540212526232,["gjx16@GJXAIOU",[[1,2574,"## 变量"]],[2574,2574],[2579,2579]]],[1540212526715,["gjx16@GJXAIOU",[[1,2593,"\n"]],[2579,2579],[2580,2580]]],[1540212526841,["gjx16@GJXAIOU",[[1,2594,"\n"]],[2580,2580],[2581,2581]]],[1540212601187,[null,[[-1,2378,"行"],[1,2379,"\n"],[-1,2472,"图"],[1,2473,"\n"],[-1,2579,"\n\n"]],[2378,2378],[2579,2579]]],[1540212601187,[null,[[1,2378,"行"],[-1,2378,"\n"],[1,2472,"图"],[-1,2472,"\n"],[1,2579,"\n\n"]],[2579,2579],[2378,2378]]],[1540212594987,["gjx16@GJXAIOU",[[1,2581,"1.****"]],[2581,2581],[2585,2585]]],[1540213321199,[null,[[-1,2378,"行"],[1,2379,"\n"],[-1,2472,"图"],[1,2473,"\n"],[-1,2587,"\n\n"]],[2378,2378],[2587,2587]]],[1540213321199,[null,[[1,2378,"行"],[-1,2378,"\n"],[1,2472,"图"],[-1,2472,"\n"],[1,2587,"\n\n"]],[2587,2587],[2378,2378]]],[1540213284206,["gjx16@GJXAIOU",[[1,2585," "]],[2585,2585],[2586,2586]]],[1540214581219,[null,[[-1,2378,"行"],[1,2379,"\n"],[-1,2472,"图"],[1,2473,"\n"],[-1,2588,"\n\n"]],[2378,2378],[2588,2588]]],[1540214581219,[null,[[1,2378,"行"],[-1,2378,"\n"],[1,2472,"图"],[-1,2472,"\n"],[1,2588,"\n\n"]],[2588,2588],[2378,2378]]],[1540214580319,["gjx16@GJXAIOU",[[1,2581,"\n"]],[2579,2579],[2580,2580]]],[1540214580773,["gjx16@GJXAIOU",[[1,2582,"\n"]],[2580,2580],[2581,2581]]],[1540214581125,["gjx16@GJXAIOU",[[1,2583,"\n"]],[2581,2581],[2582,2582]]],[1540214641224,[null,[[-1,2378,"行"],[1,2379,"\n"],[-1,2472,"图"],[1,2473,"\n"],[-1,2591,"\n\n"]],[2378,2378],[2591,2591]]],[1540214641224,[null,[[1,2378,"行"],[-1,2378,"\n"],[1,2472,"图"],[-1,2472,"\n"],[1,2591,"\n\n"]],[2591,2591],[2378,2378]]],[1540214582744,["gjx16@GJXAIOU",[[1,2582,"###"]],[2582,2582],[2585,2585]]],[1540214583319,["gjx16@GJXAIOU",[[-1,2584,"#"]],[2585,2585],[2584,2584]]],[1540214585441,["gjx16@GJXAIOU",[[1,2584," 内存"]],[2584,2584],[2587,2587]]],[1540214586141,["gjx16@GJXAIOU",[[-1,2586,"存"]],[2587,2587],[2586,2586]]],[1540214589544,["gjx16@GJXAIOU",[[1,2586,"存四区"]],[2586,2586],[2589,2589]]],[1540214596093,["gjx16@GJXAIOU",[[-1,2591,"1.** **"]],[2598,2598],[2591,2591]]],[1540214609009,["gjx16@GJXAIOU",[[1,2591,"此程序说明内存四区划分"]],[2591,2591],[2602,2602]]],[1540214609469,["gjx16@GJXAIOU",[[1,2616,"\n"]],[2602,2602],[2603,2603]]],[1540214609621,["gjx16@GJXAIOU",[[1,2617,"\n"]],[2603,2603],[2604,2604]]],[1540214611952,["gjx16@GJXAIOU",[[1,2604,"```"]],[2604,2604],[2607,2607]]],[1540214611981,["gjx16@GJXAIOU",[[1,2607,"language\n```\n"]],[2607,2607],[2607,2615]]],[1540214613943,["gjx16@GJXAIOU",[[-1,2607,"language"],[1,2615,"c"]],[2607,2615],[2608,2608]]],[1540214614157,["gjx16@GJXAIOU",[[1,2609,"\n"]],[2608,2608],[2609,2609]]],[1540214621112,["gjx16@GJXAIOU",[[1,2609,"#include<>"]],[2609,2609],[2619,2619]]],[1540214624728,["gjx16@GJXAIOU",[[1,2618,"stdio.h"]],[2618,2618],[2625,2625]]],[1540214626367,["gjx16@GJXAIOU",[[1,2627,"\n"]],[2626,2626],[2627,2627]]],[1540214630479,["gjx16@GJXAIOU",[[1,2627,"#include<>"]],[2627,2627],[2637,2637]]],[1540214634678,["gjx16@GJXAIOU",[[1,2636,"stdlib.j"]],[2636,2636],[2644,2644]]],[1540214635565,["gjx16@GJXAIOU",[[-1,2643,"j"]],[2644,2644],[2643,2643]]],[1540214636246,["gjx16@GJXAIOU",[[1,2643,"h"]],[2643,2643],[2644,2644]]],[1540214637861,["gjx16@GJXAIOU",[[1,2646,"\n"]],[2645,2645],[2646,2646]]],[1540214638221,["gjx16@GJXAIOU",[[1,2647,"\n"]],[2646,2646],[2647,2647]]],[1540214761230,[null,[[-1,2378,"行"],[1,2379,"\n"],[-1,2472,"图"],[1,2473,"\n"],[-1,2651,"\n\n"]],[2378,2378],[2651,2651]]],[1540214761230,[null,[[1,2378,"行"],[-1,2378,"\n"],[1,2472,"图"],[-1,2472,"\n"],[1,2651,"\n\n"]],[2651,2651],[2378,2378]]],[1540214703765,["gjx16@GJXAIOU",[[1,2648,"\n"]],[2646,2646],[2647,2647]]],[1540214703965,["gjx16@GJXAIOU",[[1,2649,"\n"]],[2647,2647],[2648,2648]]],[1540214705836,["gjx16@GJXAIOU",[[1,2650,"\n"]],[2648,2648],[2649,2649]]],[1540214708566,["gjx16@GJXAIOU",[[1,2649,"int main()"]],[2649,2649],[2659,2659]]],[1540214713375,["gjx16@GJXAIOU",[[1,2658,"void"]],[2658,2658],[2662,2662]]],[1540214715253,["gjx16@GJXAIOU",[[1,2665,"\n"]],[2663,2663],[2664,2664]]],[1540214716279,["gjx16@GJXAIOU",[[1,2664,"{}"]],[2664,2664],[2666,2666]]],[1540214717093,["gjx16@GJXAIOU",[[1,2665,"\n"]],[2665,2665],[2666,2666]]],[1540214717270,["gjx16@GJXAIOU",[[1,2666,"\n"]],[2666,2666],[2667,2667]]],[1540214717445,["gjx16@GJXAIOU",[[1,2667,"\n"]],[2667,2667],[2668,2668]]],[1540214739792,["gjx16@GJXAIOU",[[1,2666,"  int *p "]],[2666,2666],[2675,2675]]],[1540214752681,["gjx16@GJXAIOU",[[1,2647,"void *p"]],[2647,2647],[2654,2654]]],[1540214760320,["gjx16@GJXAIOU",[[-1,2653,"p"]],[2654,2654],[2653,2653]]],[1540214821230,[null,[[-1,2378,"行"],[1,2379,"\n"],[-1,2472,"图"],[1,2473,"\n"],[-1,2689,"\n\n"]],[2378,2378],[2689,2689]]],[1540214821230,[null,[[1,2378,"行"],[-1,2378,"\n"],[1,2472,"图"],[-1,2472,"\n"],[1,2689,"\n\n"]],[2689,2689],[2378,2378]]],[1540214762860,["gjx16@GJXAIOU",[[-1,2652,"*"]],[2653,2653],[2652,2652]]],[1540214773471,["gjx16@GJXAIOU",[[1,2652,"get_str1()"]],[2652,2652],[2662,2662]]],[1540214781109,["gjx16@GJXAIOU",[[1,2664,"\n"]],[2662,2662],[2663,2663]]],[1540214782584,["gjx16@GJXAIOU",[[1,2663,"{}"]],[2663,2663],[2665,2665]]],[1540214783701,["gjx16@GJXAIOU",[[1,2664,"\n"]],[2664,2664],[2665,2665]]],[1540214783876,["gjx16@GJXAIOU",[[1,2665,"\n"]],[2665,2665],[2666,2666]]],[1540214795790,["gjx16@GJXAIOU",[[1,2665,"  int *p "]],[2665,2665],[2674,2674]]],[1540214797012,["gjx16@GJXAIOU",[[-1,2671,"*p "]],[2674,2674],[2671,2671]]],[1540214806337,["gjx16@GJXAIOU",[[1,2671,"str1 = \"\""]],[2671,2671],[2680,2680]]],[1540214810367,["gjx16@GJXAIOU",[[1,2679,"abd"]],[2679,2679],[2682,2682]]],[1540214812934,["gjx16@GJXAIOU",[[1,2683,";"]],[2683,2683],[2684,2684]]],[1540214817246,["gjx16@GJXAIOU",[[1,2685,"  \n"]],[2684,2684],[2687,2687]]],[1540214820374,["gjx16@GJXAIOU",[[1,2687,"return "]],[2687,2687],[2694,2694]]],[1540214881230,[null,[[-1,2378,"行"],[1,2379,"\n"],[-1,2472,"图"],[1,2473,"\n"],[-1,2732,"\n\n"]],[2378,2378],[2732,2732]]],[1540214881230,[null,[[1,2378,"行"],[-1,2378,"\n"],[1,2472,"图"],[-1,2472,"\n"],[1,2732,"\n\n"]],[2732,2732],[2378,2378]]],[1540214824062,["gjx16@GJXAIOU",[[1,2694,"str1"]],[2694,2694],[2698,2698]]],[1540214830359,["gjx16@GJXAIOU",[[1,2671,"*"]],[2671,2671],[2672,2672]]],[1540214870468,["gjx16@GJXAIOU",[[-1,2647,"void"]],[2651,2651],[2647,2647]]],[1540214872254,["gjx16@GJXAIOU",[[1,2647,"char"]],[2647,2647],[2651,2651]]],[1540214875479,["gjx16@GJXAIOU",[[1,2652,"*"]],[2652,2652],[2653,2653]]],[1540214941236,[null,[[-1,2378,"行"],[1,2379,"\n"],[-1,2472,"图"],[1,2473,"\n"],[-1,2738,"\n\n"]],[2378,2378],[2738,2738]]],[1540214941236,[null,[[1,2378,"行"],[-1,2378,"\n"],[1,2472,"图"],[-1,2472,"\n"],[1,2738,"\n\n"]],[2738,2738],[2378,2378]]],[1540214890295,["gjx16@GJXAIOU",[[1,2700,";"]],[2700,2700],[2701,2701]]],[1540214892949,["gjx16@GJXAIOU",[[1,2705,"\n"]],[2703,2703],[2704,2704]]],[1540214894173,["gjx16@GJXAIOU",[[1,2706,"\n"]],[2704,2704],[2705,2705]]],[1540214903816,["gjx16@GJXAIOU",[[1,2705,"char *get_str2()"]],[2705,2705],[2721,2721]]],[1540214904245,["gjx16@GJXAIOU",[[1,2723,"\n"]],[2721,2721],[2722,2722]]],[1540214905543,["gjx16@GJXAIOU",[[1,2722,"{}"]],[2722,2722],[2724,2724]]],[1540214906374,["gjx16@GJXAIOU",[[1,2723,"\n"]],[2723,2723],[2724,2724]]],[1540214906549,["gjx16@GJXAIOU",[[1,2724,"\n"]],[2724,2724],[2725,2725]]],[1540214918698,["gjx16@GJXAIOU",[[1,2724,"  int *str2 = :"]],[2724,2724],[2739,2739]]],[1540214919463,["gjx16@GJXAIOU",[[-1,2738,":"]],[2739,2739],[2738,2738]]],[1540214920487,["gjx16@GJXAIOU",[[1,2738,"\"\""]],[2738,2738],[2740,2740]]],[1540214923106,["gjx16@GJXAIOU",[[1,2739,"abed"]],[2739,2739],[2743,2743]]],[1540214924766,["gjx16@GJXAIOU",[[-1,2741,"ed"]],[2743,2743],[2741,2741]]],[1540214924926,["gjx16@GJXAIOU",[[1,2741,"d"]],[2741,2741],[2742,2742]]],[1540214929375,["gjx16@GJXAIOU",[[1,2743,";"]],[2743,2743],[2744,2744]]],[1540214929822,["gjx16@GJXAIOU",[[1,2745,"  \n"]],[2744,2744],[2747,2747]]],[1540214934649,["gjx16@GJXAIOU",[[1,2747,"return str2;"]],[2747,2747],[2759,2759]]],[1540215001235,[null,[[-1,2378,"行"],[1,2379,"\n"],[-1,2472,"图"],[1,2473,"\n"],[-1,2797,"\n\n"]],[2378,2378],[2797,2797]]],[1540215001235,[null,[[1,2378,"行"],[-1,2378,"\n"],[1,2472,"图"],[-1,2472,"\n"],[1,2797,"\n\n"]],[2797,2797],[2378,2378]]],[1540214943781,["gjx16@GJXAIOU",[[-1,2782,"int*p "]],[2788,2788],[2782,2782]]],[1540214945440,["gjx16@GJXAIOU",[[1,2782,"char"]],[2782,2782],[2786,2786]]],[1540214945600,["gjx16@GJXAIOU",[[1,2787," "]],[2786,2786],[2787,2787]]],[1540214946734,["gjx16@GJXAIOU",[[1,2787,"*p"]],[2787,2787],[2789,2789]]],[1540214947079,["gjx16@GJXAIOU",[[1,2790," "]],[2789,2789],[2790,2790]]],[1540214949431,["gjx16@GJXAIOU",[[1,2790,"="]],[2790,2790],[2791,2791]]],[1540214949593,["gjx16@GJXAIOU",[[1,2792," "]],[2791,2791],[2792,2792]]],[1540214951439,["gjx16@GJXAIOU",[[1,2792,"NULOL"]],[2792,2792],[2797,2797]]],[1540214952749,["gjx16@GJXAIOU",[[-1,2795,"OL"]],[2797,2797],[2795,2795]]],[1540214953374,["gjx16@GJXAIOU",[[1,2795,";"]],[2795,2795],[2796,2796]]],[1540214954069,["gjx16@GJXAIOU",[[-1,2795,";"]],[2796,2796],[2795,2795]]],[1540214962293,["gjx16@GJXAIOU",[[1,2795,"L;\n  char"]],[2795,2795],[2804,2804]]],[1540214962839,["gjx16@GJXAIOU",[[1,2805," "]],[2804,2804],[2805,2805]]],[1540214964870,["gjx16@GJXAIOU",[[1,2805,"*1"]],[2805,2805],[2807,2807]]],[1540214965695,["gjx16@GJXAIOU",[[-1,2806,"1"]],[2807,2807],[2806,2806]]],[1540214966009,["gjx16@GJXAIOU",[[1,2806,"q"]],[2806,2806],[2807,2807]]],[1540214966670,["gjx16@GJXAIOU",[[1,2808," "]],[2807,2807],[2808,2808]]],[1540214967222,["gjx16@GJXAIOU",[[1,2808,"="]],[2808,2808],[2809,2809]]],[1540214967449,["gjx16@GJXAIOU",[[1,2810," "]],[2809,2809],[2810,2810]]],[1540214973844,["gjx16@GJXAIOU",[[1,2810,"NULL;\n  "]],[2810,2810],[2818,2818]]],[1540214974727,["gjx16@GJXAIOU",[[-1,2816,"   "],[1,2819,"\n"]],[2818,2818],[2817,2817]]],[1540215001056,["gjx16@GJXAIOU",[[1,2817,"  p = get_s"]],[2817,2817],[2828,2828]]],[1540215061236,[null,[[-1,2378,"行"],[1,2379,"\n"],[-1,2472,"图"],[1,2473,"\n"],[-1,2836,"\n\n"]],[2378,2378],[2836,2836]]],[1540215061236,[null,[[1,2378,"行"],[-1,2378,"\n"],[1,2472,"图"],[-1,2472,"\n"],[1,2836,"\n\n"]],[2836,2836],[2378,2378]]],[1540215006798,["gjx16@GJXAIOU",[[1,2828,"tr1();"]],[2828,2828],[2834,2834]]],[1540215007398,["gjx16@GJXAIOU",[[1,2835,"  \n"]],[2834,2834],[2837,2837]]],[1540215018599,["gjx16@GJXAIOU",[[1,2837,"q = get_str2();"]],[2837,2837],[2852,2852]]],[1540215019557,["gjx16@GJXAIOU",[[1,2853,"  \n"]],[2852,2852],[2855,2855]]],[1540215020383,["gjx16@GJXAIOU",[[-1,2853,"  "],[1,2855,"\n"]],[2855,2855],[2854,2854]]],[1540215024369,["gjx16@GJXAIOU",[[1,2854,"  printf();"]],[2854,2854],[2865,2865]]],[1540215027623,["gjx16@GJXAIOU",[[1,2863,"\"\""]],[2863,2863],[2865,2865]]],[1540215054074,["gjx16@GJXAIOU",[[1,2864,"p = %s,&p = %d\\n"]],[2864,2864],[2880,2880]]],[1540215056823,["gjx16@GJXAIOU",[[1,2881,","]],[2881,2881],[2882,2882]]],[1540215121239,[null,[[-1,2378,"行"],[1,2379,"\n"],[-1,2472,"图"],[1,2473,"\n"],[-1,2892,"\n\n"]],[2378,2378],[2892,2892]]],[1540215121239,[null,[[1,2378,"行"],[-1,2378,"\n"],[1,2472,"图"],[-1,2472,"\n"],[1,2892,"\n\n"]],[2892,2892],[2378,2378]]],[1540215090598,["gjx16@GJXAIOU",[[1,2882,"p ,p"]],[2882,2882],[2886,2886]]],[1540215099284,["gjx16@GJXAIOU",[[1,2889,"  \n"]],[2888,2888],[2891,2891]]],[1540215102885,["gjx16@GJXAIOU",[[1,2891,"printf();"]],[2891,2891],[2900,2900]]],[1540215105910,["gjx16@GJXAIOU",[[1,2898,"\"\""]],[2898,2898],[2900,2900]]],[1540215113150,["gjx16@GJXAIOU",[[1,2899,"q = %d"]],[2899,2899],[2905,2905]]],[1540215113628,["gjx16@GJXAIOU",[[-1,2904,"d"]],[2905,2905],[2904,2904]]],[1540215120214,["gjx16@GJXAIOU",[[1,2904,"s ,&q = "]],[2904,2904],[2912,2912]]],[1540215181242,[null,[[-1,2378,"行"],[1,2379,"\n"],[-1,2472,"图"],[1,2473,"\n"],[-1,2923,"\n\n"]],[2378,2378],[2923,2923]]],[1540215181242,[null,[[1,2378,"行"],[-1,2378,"\n"],[1,2472,"图"],[-1,2472,"\n"],[1,2923,"\n\n"]],[2923,2923],[2378,2378]]],[1540215124093,["gjx16@GJXAIOU",[[1,2912,"%d\\n"]],[2912,2912],[2916,2916]]],[1540215128278,["gjx16@GJXAIOU",[[1,2917,",1"]],[2917,2917],[2919,2919]]],[1540215129204,["gjx16@GJXAIOU",[[-1,2918,"1"]],[2919,2919],[2918,2918]]],[1540215132014,["gjx16@GJXAIOU",[[1,2918,"q,q"]],[2918,2918],[2921,2921]]],[1540215136636,["gjx16@GJXAIOU",[[1,2924,"  \n"]],[2923,2923],[2926,2926]]],[1540215140992,["gjx16@GJXAIOU",[[1,2926,"rer"]],[2926,2926],[2929,2929]]],[1540215141556,["gjx16@GJXAIOU",[[-1,2928,"r"]],[2929,2929],[2928,2928]]],[1540215142041,["gjx16@GJXAIOU",[[1,2928,"e"]],[2928,2928],[2929,2929]]],[1540215142636,["gjx16@GJXAIOU",[[-1,2928,"e"]],[2929,2929],[2928,2928]]],[1540215145597,["gjx16@GJXAIOU",[[1,2928,"turn 0;"]],[2928,2928],[2935,2935]]],[1540215148932,["gjx16@GJXAIOU",[[1,2763,"\n"]],[2762,2762],[2763,2763]]],[1540215149108,["gjx16@GJXAIOU",[[1,2764,"\n"]],[2763,2763],[2764,2764]]],[1540215361244,[null,[[-1,2378,"行"],[1,2379,"\n"],[-1,2472,"图"],[1,2473,"\n"],[-1,2945,"\n\n"]],[2378,2378],[2945,2945]]],[1540215361244,[null,[[1,2378,"行"],[-1,2378,"\n"],[1,2472,"图"],[-1,2472,"\n"],[1,2945,"\n\n"]],[2945,2945],[2378,2378]]],[1540215320796,["gjx16@GJXAIOU",[[1,2960,"\n"]],[2945,2945],[2946,2946]]],[1540215322541,["gjx16@GJXAIOU",[[1,2946,"c"]],[2946,2946],[2947,2947]]],[1540215323044,["gjx16@GJXAIOU",[[-1,2946,"c"]],[2947,2947],[2946,2946]]],[1540215329343,["gjx16@GJXAIOU",[[1,2946,"程序运行结果："]],[2946,2946],[2953,2953]]],[1540215330388,["gjx16@GJXAIOU",[[1,2968,"\n"]],[2953,2953],[2954,2954]]],[1540215338701,["gjx16@GJXAIOU",[[1,2954,"![内存四区调试结果]($resource/%E5%86%85%E5%AD%98%E5%9B%9B%E5%8C%BA%E8%B0%83%E8%AF%95%E7%BB%93%E6%9E%9C.png)"]],[2954,2954],[3054,3054]]],[1540215343748,["gjx16@GJXAIOU",[[1,2954,"\n"]],[2953,2953],[2954,2954]]],[1540215354645,["gjx16@GJXAIOU",[[1,3056,"虽然p和qfen"]],[3056,3056],[3064,3064]]],[1540215355964,["gjx16@GJXAIOU",[[-1,3061,"fen"]],[3064,3064],[3061,3061]]],[1540215360289,["gjx16@GJXAIOU",[[1,3061,"分别是两个"]],[3061,3061],[3066,3066]]],[1540215421253,[null,[[-1,2378,"行"],[1,2379,"\n"],[-1,2472,"图"],[1,2473,"\n"],[-1,3066,"\n\n"]],[2378,2378],[3066,3066]]],[1540215421253,[null,[[1,2378,"行"],[-1,2378,"\n"],[1,2472,"图"],[-1,2472,"\n"],[1,3066,"\n\n"]],[3066,3066],[2378,2378]]],[1540215365887,["gjx16@GJXAIOU",[[1,3066,"函数的返回值，"]],[3066,3066],[3073,3073]]],[1540215481248,[null,[[-1,2378,"行"],[1,2379,"\n"],[-1,2472,"图"],[1,2473,"\n"],[-1,3073,"\n\n"]],[2378,2378],[3073,3073]]],[1540215481248,[null,[[1,2378,"行"],[-1,2378,"\n"],[1,2472,"图"],[-1,2472,"\n"],[1,3073,"\n\n"]],[3073,3073],[2378,2378]]],[1540215440370,["gjx16@GJXAIOU",[[1,3073,"但是从结果"]],[3073,3073],[3078,3078]]],[1540215601253,[null,[[-1,2378,"行"],[1,2379,"\n"],[-1,2472,"图"],[1,2473,"\n"],[-1,3078,"\n\n"]],[2378,2378],[3078,3078]]],[1540215601253,[null,[[1,2378,"行"],[-1,2378,"\n"],[1,2472,"图"],[-1,2472,"\n"],[1,3078,"\n\n"]],[3078,3078],[2378,2378]]],[1540215575338,["gjx16@GJXAIOU",[[1,3078,"可以看出他们指向的地址都是同一个"]],[3078,3078],[3094,3094]]],[1540215577468,["gjx16@GJXAIOU",[[1,3107,"\n"]],[3094,3094],[3095,3095]]],[1540215579846,["gjx16@GJXAIOU",[[1,3095,"解析："]],[3095,3095],[3098,3098]]],[1540215591634,["gjx16@GJXAIOU",[[-1,3095,"解析："]],[3098,3098],[3095,3095]]],[1540215593438,["gjx16@GJXAIOU",[[1,3095,"****"]],[3095,3095],[3097,3097]]],[1540215600407,["gjx16@GJXAIOU",[[1,3097,"解析本函数的内存"]],[3097,3097],[3105,3105]]],[1540215661253,[null,[[-1,2378,"行"],[1,2379,"\n"],[-1,2472,"图"],[1,2473,"\n"],[-1,3107,"\n\n"]],[2378,2378],[3107,3107]]],[1540215661253,[null,[[1,2378,"行"],[-1,2378,"\n"],[1,2472,"图"],[-1,2472,"\n"],[1,3107,"\n\n"]],[3107,3107],[2378,2378]]],[1540215601639,["gjx16@GJXAIOU",[[1,3105,"地区"]],[3105,3105],[3107,3107]]],[1540215603203,["gjx16@GJXAIOU",[[-1,3105,"地区"]],[3107,3107],[3105,3105]]],[1540215609367,["gjx16@GJXAIOU",[[1,3105,"四区图："]],[3105,3105],[3109,3109]]],[1540215611365,["gjx16@GJXAIOU",[[1,3124,"\n"]],[3111,3111],[3112,3112]]],[1540215619488,["gjx16@GJXAIOU",[[1,3112,"![程序内存四区分析]($resource/%E7%A8%8B%E5%BA%8F%E5%86%85%E5%AD%98%E5%9B%9B%E5%8C%BA%E5%88%86%E6%9E%90.png)"]],[3112,3112],[3212,3212]]],[1540215624021,["gjx16@GJXAIOU",[[1,3112,"\n"]],[3111,3111],[3112,3112]]],[1540215655455,["gjx16@GJXAIOU",[[1,3214,"首先在栈中划定四个字节的区域"]],[3214,3214],[3228,3228]]],[1540215781256,[null,[[-1,2378,"行"],[1,2379,"\n"],[-1,2472,"图"],[1,2473,"\n"],[-1,3228,"\n\n"]],[2378,2378],[3228,3228]]],[1540215781256,[null,[[1,2378,"行"],[-1,2378,"\n"],[1,2472,"图"],[-1,2472,"\n"],[1,3228,"\n\n"]],[3228,3228],[2378,2378]]],[1540215735512,["gjx16@GJXAIOU",[[1,3228,"防止"]],[3228,3228],[3230,3230]]],[1540215736203,["gjx16@GJXAIOU",[[-1,3228,"防止"]],[3230,3230],[3228,3228]]],[1540215744949,["gjx16@GJXAIOU",[[1,3228,"放置指针p()"]],[3228,3228],[3235,3235]]],[1540215748111,["gjx16@GJXAIOU",[[1,3234,"因为"]],[3234,3234],[3236,3236]]],[1540215841258,[null,[[-1,2378,"行"],[1,2379,"\n"],[-1,2472,"图"],[1,2473,"\n"],[-1,3237,"\n\n"]],[2378,2378],[3237,3237]]],[1540215841258,[null,[[1,2378,"行"],[-1,2378,"\n"],[1,2472,"图"],[-1,2472,"\n"],[1,3237,"\n\n"]],[3237,3237],[2378,2378]]],[1540215813951,["gjx16@GJXAIOU",[[1,3236,"指针在32位中都是四个字节"]],[3236,3236],[3249,3249]]],[1540215830497,["gjx16@GJXAIOU",[[1,3250,"，因为值为NULL,D"]],[3250,3250],[3261,3261]]],[1540215831148,["gjx16@GJXAIOU",[[-1,3260,"D"]],[3261,3261],[3260,3260]]],[1540215833197,["gjx16@GJXAIOU",[[1,3260,"D"]],[3260,3260],[3261,3261]]],[1540215833762,["gjx16@GJXAIOU",[[-1,3260,"D"]],[3261,3261],[3260,3260]]],[1540215836624,["gjx16@GJXAIOU",[[1,3260,"所以"]],[3260,3260],[3262,3262]]],[1540215901257,[null,[[-1,2378,"行"],[1,2379,"\n"],[-1,2472,"图"],[1,2473,"\n"],[-1,3262,"\n\n"]],[2378,2378],[3262,3262]]],[1540215901257,[null,[[1,2378,"行"],[-1,2378,"\n"],[1,2472,"图"],[-1,2472,"\n"],[1,3262,"\n\n"]],[3262,3262],[2378,2378]]],[1540215843831,["gjx16@GJXAIOU",[[1,3262,"并没有值；"]],[3262,3262],[3267,3267]]],[1540215844251,["gjx16@GJXAIOU",[[1,3278,"\n"]],[3267,3267],[3268,3268]]],[1540215852362,["gjx16@GJXAIOU",[[-1,3278,"\n"]],[3268,3268],[3267,3267]]],[1540215867752,["gjx16@GJXAIOU",[[1,3267,"同时指针q也是这样；"]],[3267,3267],[3277,3277]]],[1540215868308,["gjx16@GJXAIOU",[[1,3288,"\n"]],[3277,3277],[3278,3278]]],[1540215890434,["gjx16@GJXAIOU",[[1,3278,"然后调用~get_"]],[3278,3278],[3287,3287]]],[1540215892187,["gjx16@GJXAIOU",[[-1,3282,"~get_"]],[3287,3287],[3282,3282]]],[1540215899447,["gjx16@GJXAIOU",[[1,3282,"`get_str1`"]],[3282,3282],[3292,3292]]],[1540215961261,[null,[[-1,2378,"行"],[1,2379,"\n"],[-1,2472,"图"],[1,2473,"\n"],[-1,3292,"\n\n"]],[2378,2378],[3292,3292]]],[1540215961261,[null,[[1,2378,"行"],[-1,2378,"\n"],[1,2472,"图"],[-1,2472,"\n"],[1,3292,"\n\n"]],[3292,3292],[2378,2378]]],[1540215960816,["gjx16@GJXAIOU",[[1,3292,"函数，在函数中定义的指针指向字符串"]],[3292,3292],[3309,3309]]],[1540216021262,[null,[[-1,2378,"行"],[1,2379,"\n"],[-1,2472,"图"],[1,2473,"\n"],[-1,3309,"\n\n"]],[2378,2378],[3309,3309]]],[1540216021262,[null,[[1,2378,"行"],[-1,2378,"\n"],[1,2472,"图"],[-1,2472,"\n"],[1,3309,"\n\n"]],[3309,3309],[2378,2378]]],[1540215961366,["gjx16@GJXAIOU",[[1,3309,"  "]],[3309,3309],[3311,3311]]],[1540215971478,["gjx16@GJXAIOU",[[1,3304,"`sr"]],[3304,3304],[3307,3307]]],[1540215972100,["gjx16@GJXAIOU",[[-1,3306,"r"]],[3307,3307],[3306,3306]]],[1540215979303,["gjx16@GJXAIOU",[[1,3306,"tr1`（）"]],[3306,3306],[3312,3312]]],[1540215985575,["gjx16@GJXAIOU",[[1,3311,"在连一块"]],[3311,3311],[3315,3315]]],[1540215988251,["gjx16@GJXAIOU",[[-1,3312,"连"]],[3313,3313],[3312,3312]]],[1540215990624,["gjx16@GJXAIOU",[[1,3312,"另"]],[3312,3312],[3313,3313]]],[1540215994486,["gjx16@GJXAIOU",[[1,3315,"栈区"]],[3315,3315],[3317,3317]]],[1540216003429,["gjx16@GJXAIOU",[[1,3323,"'"]],[3323,3323],[3324,3324]]],[1540216003461,["gjx16@GJXAIOU",[[-1,3323,"'"],[1,3324,"‘"]],[3324,3324],[3324,3324]]],[1540216003792,["gjx16@GJXAIOU",[[1,3324,"'"]],[3324,3324],[3325,3325]]],[1540216003823,["gjx16@GJXAIOU",[[-1,3324,"'"],[1,3325,"’"]],[3325,3325],[3325,3325]]],[1540216004610,["gjx16@GJXAIOU",[[-1,3323,"‘’"]],[3325,3325],[3323,3323]]],[1540216005597,["gjx16@GJXAIOU",[[1,3323,"\""]],[3323,3323],[3324,3324]]],[1540216005629,["gjx16@GJXAIOU",[[-1,3323,"\""],[1,3324,"“"]],[3324,3324],[3324,3324]]],[1540216005742,["gjx16@GJXAIOU",[[1,3324,"\""]],[3324,3324],[3325,3325]]],[1540216005774,["gjx16@GJXAIOU",[[-1,3324,"\""],[1,3325,"”"]],[3325,3325],[3325,3325]]],[1540216008204,["gjx16@GJXAIOU",[[1,3324,"abs"]],[3324,3324],[3327,3327]]],[1540216009034,["gjx16@GJXAIOU",[[-1,3326,"s"]],[3327,3327],[3326,3326]]],[1540216009204,["gjx16@GJXAIOU",[[1,3326,"d"]],[3326,3326],[3327,3327]]],[1540216011436,["gjx16@GJXAIOU",[[1,3328,","]],[3328,3328],[3329,3329]]],[1540216081273,[null,[[-1,2378,"行"],[1,2379,"\n"],[-1,2472,"图"],[1,2473,"\n"],[-1,3331,"\n\n"]],[2378,2378],[3331,3331]]],[1540216081273,[null,[[1,2378,"行"],[-1,2378,"\n"],[1,2472,"图"],[-1,2472,"\n"],[1,3331,"\n\n"]],[3331,3331],[2378,2378]]],[1540216022852,["gjx16@GJXAIOU",[[1,3329,"y"]],[3329,3329],[3330,3330]]],[1540216023626,["gjx16@GJXAIOU",[[-1,3329,"y"]],[3330,3330],[3329,3329]]],[1540216036543,["gjx16@GJXAIOU",[[1,3329,"函数返回值为str1，即为该"]],[3329,3329],[3343,3343]]],[1540216038218,["gjx16@GJXAIOU",[[-1,3341,"为该"]],[3343,3343],[3341,3341]]],[1540216046485,["gjx16@GJXAIOU",[[1,3341,"为改字符串的地址"]],[3341,3341],[3349,3349]]],[1540216049370,["gjx16@GJXAIOU",[[-1,3342,"改"]],[3343,3343],[3342,3342]]],[1540216051711,["gjx16@GJXAIOU",[[1,3342,"该"]],[3342,3342],[3343,3343]]],[1540216055008,["gjx16@GJXAIOU",[[1,3349,"，"]],[3349,3349],[3350,3350]]],[1540216063213,["gjx16@GJXAIOU",[[1,3328,"（）"]],[3328,3328],[3330,3330]]],[1540216072863,["gjx16@GJXAIOU",[[1,3329,"存在全局区"]],[3329,3329],[3334,3334]]],[1540216080314,["gjx16@GJXAIOU",[[-1,3357,"  "]],[3359,3359],[3357,3357]]],[1540216141267,[null,[[-1,2378,"行"],[1,2379,"\n"],[-1,2472,"图"],[1,2473,"\n"],[-1,3357,"\n\n"]],[2378,2378],[3357,3357]]],[1540216141267,[null,[[1,2378,"行"],[-1,2378,"\n"],[1,2472,"图"],[-1,2472,"\n"],[1,3357,"\n\n"]],[3357,3357],[2378,2378]]],[1540216081503,["gjx16@GJXAIOU",[[1,3357,"二"]],[3357,3357],[3358,3358]]],[1540216082290,["gjx16@GJXAIOU",[[-1,3357,"二"]],[3358,3358],[3357,3357]]],[1540216091702,["gjx16@GJXAIOU",[[1,3357,"而再main函数中"]],[3357,3357],[3366,3366]]],[1540216094563,["gjx16@GJXAIOU",[[-1,3358,"再"]],[3359,3359],[3358,3358]]],[1540216095966,["gjx16@GJXAIOU",[[1,3358,"在"]],[3358,3358],[3359,3359]]],[1540216104062,["gjx16@GJXAIOU",[[1,3366,"该地址复制"]],[3366,3366],[3371,3371]]],[1540216104666,["gjx16@GJXAIOU",[[-1,3369,"复制"]],[3371,3371],[3369,3369]]],[1540216115813,["gjx16@GJXAIOU",[[1,3369,"赋值给了指针p,yin"]],[3369,3369],[3380,3380]]],[1540216117149,["gjx16@GJXAIOU",[[-1,3377,"yin"]],[3380,3380],[3377,3377]]],[1540216127462,["gjx16@GJXAIOU",[[1,3377,"因此指针pzhi"]],[3377,3377],[3385,3385]]],[1540216128434,["gjx16@GJXAIOU",[[-1,3382,"zhi"]],[3385,3385],[3382,3382]]],[1540216140911,["gjx16@GJXAIOU",[[1,3382,"指向了该字符串，最后打印"]],[3382,3382],[3394,3394]]],[1540216201268,[null,[[-1,2378,"行"],[1,2379,"\n"],[-1,2472,"图"],[1,2473,"\n"],[-1,3394,"\n\n"]],[2378,2378],[3394,3394]]],[1540216201268,[null,[[1,2378,"行"],[-1,2378,"\n"],[1,2472,"图"],[-1,2472,"\n"],[1,3394,"\n\n"]],[3394,3394],[2378,2378]]],[1540216143207,["gjx16@GJXAIOU",[[1,3394,"输出"]],[3394,3394],[3396,3396]]],[1540216144282,["gjx16@GJXAIOU",[[1,3407,"\n"]],[3396,3396],[3397,3397]]],[1540216144819,["gjx16@GJXAIOU",[[1,3408,"\n"]],[3397,3397],[3398,3398]]],[1540216145698,["gjx16@GJXAIOU",[[-1,3408,"\n"]],[3398,3398],[3397,3397]]],[1540216164762,["gjx16@GJXAIOU",[[1,3397,"同样因为该字符串并没有改变，因此"]],[3397,3397],[3413,3413]]],[1540216172574,["gjx16@GJXAIOU",[[1,3376,"（）"]],[3376,3376],[3378,3378]]],[1540216197343,["gjx16@GJXAIOU",[[1,3377,"调用完之后指针str1就消失了"]],[3377,3377],[3392,3392]]],[1540216261270,[null,[[-1,2378,"行"],[1,2379,"\n"],[-1,2472,"图"],[1,2473,"\n"],[-1,3430,"\n\n"]],[2378,2378],[3430,3430]]],[1540216261270,[null,[[1,2378,"行"],[-1,2378,"\n"],[1,2472,"图"],[-1,2472,"\n"],[1,3430,"\n\n"]],[3430,3430],[2378,2378]]],[1540216206519,["gjx16@GJXAIOU",[[1,3430,"地址"]],[3430,3430],[3432,3432]]],[1540216208085,["gjx16@GJXAIOU",[[-1,3430,"地址"]],[3432,3432],[3430,3430]]],[1540216210296,["gjx16@GJXAIOU",[[1,3430,"紫铜"]],[3430,3430],[3432,3432]]],[1540216211805,["gjx16@GJXAIOU",[[-1,3430,"紫铜"]],[3432,3432],[3430,3430]]],[1540216225077,["gjx16@GJXAIOU",[[1,3430,"系统不会将他存储两边，"]],[3430,3430],[3441,3441]]],[1540216227315,["gjx16@GJXAIOU",[[-1,3438,"两边，"]],[3441,3441],[3438,3438]]],[1540216239815,["gjx16@GJXAIOU",[[1,3438,"两遍，所以地址是一样的；"]],[3438,3438],[3450,3450]]],[1540216240627,["gjx16@GJXAIOU",[[1,3461,"\n"]],[3450,3450],[3451,3451]]],[1540216240794,["gjx16@GJXAIOU",[[1,3462,"\n"]],[3451,3451],[3452,3452]]],[1540216241042,["gjx16@GJXAIOU",[[1,3463,"\n"]],[3452,3452],[3453,3453]]],[1540216381274,[null,[[-1,2378,"行"],[1,2379,"\n"],[-1,2472,"图"],[1,2473,"\n"],[-1,3450,"\n\n"]],[2378,2378],[3450,3450]]],[1540216381274,[null,[[1,2378,"行"],[-1,2378,"\n"],[1,2472,"图"],[-1,2472,"\n"],[1,3450,"\n\n"]],[3450,3450],[2378,2378]]],[1540216330025,["gjx16@GJXAIOU",[[1,3464,"\n"]],[3452,3452],[3453,3453]]],[1540216330194,["gjx16@GJXAIOU",[[1,3465,"\n"]],[3453,3453],[3454,3454]]],[1540216331982,["gjx16@GJXAIOU",[[1,3454,"****"]],[3454,3454],[3456,3456]]],[1540216335400,["gjx16@GJXAIOU",[[1,3456,"分析栈区"]],[3456,3456],[3460,3460]]],[1540216337730,["gjx16@GJXAIOU",[[1,3474,"\n"]],[3462,3462],[3463,3463]]],[1540216501274,[null,[[-1,2378,"行"],[1,2379,"\n"],[-1,2472,"图"],[1,2473,"\n"],[-1,3462,"\n\n"]],[2378,2378],[3462,3462]]],[1540216501274,[null,[[1,2378,"行"],[-1,2378,"\n"],[1,2472,"图"],[-1,2472,"\n"],[1,3462,"\n\n"]],[3462,3462],[2378,2378]]],[1540216457242,["gjx16@GJXAIOU",[[1,2928,"\n  "]],[2925,2925],[2928,2928]]],[1540216457586,["gjx16@GJXAIOU",[[1,2928,"system(\"pause\");"]],[2928,2928],[2944,2944]]],[1540216464106,["gjx16@GJXAIOU",[[1,1951,"\t\n"]],[1950,1950],[1952,1952]]],[1540216464857,["gjx16@GJXAIOU",[[1,1952,"system(\"pause\");"]],[1952,1952],[1968,1968]]],[1540216465730,["gjx16@GJXAIOU",[[1,1969,"\t\n"]],[1968,1968],[1970,1970]]],[1540216470789,["gjx16@GJXAIOU",[[1,1970,"return 0;"]],[1970,1970],[1979,1979]]],[1540216475970,["gjx16@GJXAIOU",[[1,1062,"        \n"]],[1061,1061],[1070,1070]]],[1540216476460,["gjx16@GJXAIOU",[[1,1070,"system(\"pause\");"]],[1070,1070],[1086,1086]]],[1540216484225,["gjx16@GJXAIOU",[[-1,1066,"    "]],[1070,1070],[1066,1066]]],[1540216485202,["gjx16@GJXAIOU",[[1,1066,"\n    "]],[1066,1066],[1071,1071]]],[1540216490602,["gjx16@GJXAIOU",[[1,1088,"    \n"]],[1087,1087],[1092,1092]]],[1540216495187,["gjx16@GJXAIOU",[[1,1092,"return 0;"]],[1092,1092],[1101,1101]]]],null,"gjx16@GJXAIOU"],["410a1122-2e1f-4f8d-9906-660897a3ae45",1540275076407,"---\n1.概述：学习要求，学习标准\n2.数据类型、变量\n3.内存四区（栈、堆、全局、代码区）\n4.说明：本系列代码使用VS2017进行测试运行，代码位置为：\nE:\\Program\\C++\\C++\\practice\\programs\\Cenhance\\Cenhance_1\\Cenhance_1\n---\n\n# day01\n\n\n## 数据类型\n\n\n1.**学习历程**\n\n![学习历程]($resource/%E5%AD%A6%E4%B9%A0%E5%8E%86%E7%A8%8B.png)\n\n2.**如何看懂带算法的程序**\n\n- 看懂流程\n- 每个语句的功能\n- 试数\n- 调试\n- 模仿改\n- 不看代码自己写\n\n\n----\n\n3.**选择法排序**\n\n```c\n#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n\nint main(void)\n{\n    int array[] = {1,4,6,9,0,4,3,5,2};\n    int num = 0;\n    num = sizeof(array)/sizeof(array[0]);\n  int i = 0 ;\n  for(i = 0; i < num ; i++)\n    {\n        printf(\"before = %d \\n\",array[i]);\n    }\n    printf(\"------------------\\n\");\n\n\n\n  //选择法进行排序\n\n  int j = 0;\n  int tmp= 0;\n  for(i = 0 ; i < num -1; i++)\n    {\n        for(j = i +1; j < num ; j++)\n          {\n              if(array[i] > array[j])\n                {\n                  tmp = array[i];\n                  array[i] = array[j];\n                  array[j] = tmp;\n                }\n          }\n    }\n    for(i = 0; i < num ; i++)\n        {\n            printf(\"after = %d \\n\",array[i]);\n        }\n    \n    system(\"pause\");\n    return 0;\n}\n```\n程序运行结果；\n\n![排序]($resource/%E6%8E%92%E5%BA%8F.png)\n\n---\n\n4.**将上面的程序进行函数封装**\n\n```c\n#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n\n\nvoid printf_array(int *array, int num)\n{\n\tint i = 0;\n\tfor (i = 0; i < num; i++)\n\t{\n\t\tprintf(\"%d \\n\", array[i]);\n\t}\n}\n\n\n//如果数组作为函数参数，则数组形参退化为指针\n//下面的第一个参数可以是*array，或者为：array[],或者为：array[1]，或者array[10]等等\nvoid sort_array(int *array, int num)\n{\n\t//选择法进行排序\n\tint i = 0;\n\tint j = 0;\n\tint tmp = 0;\n\tfor (i = 0; i < num - 1; i++)\n\t{\n\t\tfor (j = i + 1; j < num; j++)\n\t\t{\n\t\t\tif (array[i] > array[j])\n\t\t\t{\n\t\t\t\ttmp = array[i];\n\t\t\t\tarray[i] = array[j];\n\t\t\t\tarray[j] = tmp;\n\t\t\t}\n\t\t}\n\t}\n\n}\n\n\nint main(void)\n{\n\tint array[] = { 1,4,6,9,0,4,3,5,2 };\n\tint num = 0;\n\tnum = sizeof(array) / sizeof(array[0]);\n\n\tprintf(\"before = \\n\");\n\tprintf_array(array, num);\n\tprintf(\"------------------\\n\");\n\tprintf(\"after = \\n\");\n\tsort_array(array, num);\n\tprintf_array(array, num);\n\tsystem(\"pause\");\n\treturn 0;\n}\n```\n程序运行结果；\n\n![函数封装之后排序]($resource/%E5%87%BD%E6%95%B0%E5%B0%81%E8%A3%85%E4%B9%8B%E5%90%8E%E6%8E%92%E5%BA%8F.png)\n\n\n----\n\n5.**void 无类型**\n\n- 函数参数为空，定义函数时，可以用void修饰：例如：`int fun(void)`\n- 函数没有返回值：`void fun(void)`\n- 不能定义void类型的普通变量\n- 可以使用定义void *变量 ： `void *p`,其中在32位系统中为4个字节，在64位系统中占64字节\n- 数据类型本质：固定内存块大小别名\n- void *p  万能指针，可以作为函数返回值，函数参数\n\n\n6.**程序分文件**\n\n- **要求：** 按照函数的功能分文件\n- 分文件时候，防止头文件重复包含：`#pragma once`\n- 让C语言代码可以在C++的编译器中编译运行\n```c\n#ifdef_cplusplus\nextern \"C\" {\n#endif\n\n//函数的声明\n\n#ifdef_cplusplus\n}\n#endif\n```\n\n7.**数据类型**\n - 类型的本质：固定内存大小的别名\n - 数据类型的作用：编译器预算对象（变量）分配的内存空间大小，只有当变量定义的时候才真正的将这个空间分配出去；\n - 数据类型可以通过typedef其别名\n\n\n\n## 变量\n\n\n## 内存四区\n\n此程序说明内存四区划分\n\n```c\n#include<stdio.h>\n#include<stdlib.h>\n\nchar *get_str1()\n{\n  int *str1 = \"abd\";\n  return str1;\n}\n\nchar *get_str2()\n{\n  int *str2 = \"abd\";\n  return str2;\n}\n\n\n\nint main(void)\n{\n  char *p = NULL;\n  char *q = NULL;\n\n  p = get_str1();\n  q = get_str2();\n\n  printf(\"p = %s,&p = %d\\n\",p ,p);\n  printf(\"q = %s ,&q = %d\\n\",q,q);\n  system(\"pause\");\n  return 0;\n\n}\n\n```\n程序运行结果：\n\n![内存四区调试结果]($resource/%E5%86%85%E5%AD%98%E5%9B%9B%E5%8C%BA%E8%B0%83%E8%AF%95%E7%BB%93%E6%9E%9C.png)\n\n虽然p和q分别是两个函数的返回值，但是从结果可以看出他们指向的地址都是同一个\n**解析本函数的内存四区图：**\n\n![程序内存四区分析]($resource/%E7%A8%8B%E5%BA%8F%E5%86%85%E5%AD%98%E5%9B%9B%E5%8C%BA%E5%88%86%E6%9E%90.png)\n\n首先在栈中划定四个字节的区域放置指针p(因为指针在32位中都是四个字节)，因为值为NULL,所以并没有值；同时指针q也是这样；\n然后调用`get_str1`函数，在函数中定义的指针`str1`（在另一块栈区）指向字符串“abd”（存在全局区）,函数返回值为str1，即为该字符串的地址，而在main函数中该地址赋值给了指针p（调用完之后指针str1就消失了）,因此指针p指向了该字符串，最后打印输出\n同样因为该字符串并没有改变，因此系统不会将他存储两遍，所以地址是一样的；\n\n\n\n**分析栈区**\n\n\n\n\n\n\n\n\n\n\n\n\n",[[1540275033075,["gjx16@GJXAIOU",[[1,3551,"以上的程序泳衣"]],[3551,3551],[3558,3558]]],[1540275034425,["gjx16@GJXAIOU",[[-1,3556,"泳衣"]],[3558,3558],[3556,3556]]],[1540275061296,["gjx16@GJXAIOU",[[1,3556,"容易出现乱码的情况，因为栈中使用结束之后就会自定"]],[3556,3556],[3580,3580]]],[1540275062425,["gjx16@GJXAIOU",[[-1,3578,"自定"]],[3580,3580],[3578,3578]]],[1540275068653,["gjx16@GJXAIOU",[[1,3578,"自动释放，"]],[3578,3578],[3583,3583]]],[1540275083422,["gjx16@GJXAIOU",[[1,3585,"之后无法确sing"]],[3585,3585],[3594,3594]]],[1540275086586,["gjx16@GJXAIOU",[[-1,3590,"sing"]],[3594,3594],[3590,3590]]],[1540275107501,["gjx16@GJXAIOU",[[1,3590,"定系统中存储的是什么元素"]],[3590,3590],[3602,3602]]],[1540275108492,["gjx16@GJXAIOU",[[1,3614,"\n"]],[3602,3602],[3603,3603]]],[1540275108658,["gjx16@GJXAIOU",[[1,3615,"\n"]],[3603,3603],[3604,3604]]],[1540275108813,["gjx16@GJXAIOU",[[1,3604,"、、"]],[3604,3604],[3606,3606]]],[1540275108847,["gjx16@GJXAIOU",[[1,3618,"\n"]],[3606,3606],[3607,3607]]],[1540275109593,["gjx16@GJXAIOU",[[-1,3618,"\n"]],[3607,3607],[3606,3606]]],[1540275109929,["gjx16@GJXAIOU",[[-1,3604,"、、"]],[3606,3606],[3604,3604]]],[1540275110226,["gjx16@GJXAIOU",[[-1,3615,"\n"]],[3604,3604],[3603,3603]]],[1540275110625,["gjx16@GJXAIOU",[[1,3615,"\n"]],[3603,3603],[3604,3604]]],[1540275110794,["gjx16@GJXAIOU",[[1,3616,"\n"]],[3604,3604],[3605,3605]]],[1540275112086,["gjx16@GJXAIOU",[[1,3605,"****"]],[3605,3605],[3607,3607]]],[1540275116420,["gjx16@GJXAIOU",[[1,3607,"分析堆区："]],[3607,3607],[3612,3612]]],[1540275117858,["gjx16@GJXAIOU",[[1,3626,"\n"]],[3614,3614],[3615,3615]]],[1540275435326,[null,[[-1,3583,"\n\n"],[1,3585,"释放"]],[3583,3583],[3587,3587]]],[1540275435326,[null,[[1,3583,"\n\n"],[-1,3583,"释放"]],[3587,3587],[3583,3583]]],[1540275402553,["gjx16@GJXAIOU",[[-1,3626,"\n"]],[3616,3616],[3615,3615]]],[1540275404109,["gjx16@GJXAIOU",[[1,3615,"将"]],[3615,3615],[3616,3616]]],[1540275405985,["gjx16@GJXAIOU",[[-1,3615,"将"]],[3616,3616],[3615,3615]]],[1540275406104,["gjx16@GJXAIOU",[[-1,3625,"\n"]],[3615,3615],[3614,3614]]],[1540275407194,["gjx16@GJXAIOU",[[1,3625,"\n"]],[3614,3614],[3615,3615]]],[1540275407625,["gjx16@GJXAIOU",[[1,3626,"\n"]],[3615,3615],[3616,3616]]],[1540275409035,["gjx16@GJXAIOU",[[1,3616,"```"]],[3616,3616],[3619,3619]]],[1540275409065,["gjx16@GJXAIOU",[[1,3619,"language\n```\n"]],[3619,3619],[3619,3627]]],[1540275410251,["gjx16@GJXAIOU",[[-1,3619,"language"],[1,3627,"c"]],[3619,3627],[3620,3620]]],[1540275411540,["gjx16@GJXAIOU",[[1,3621,"\n"]],[3620,3620],[3621,3621]]],[1540275419116,["gjx16@GJXAIOU",[[1,3621,"#include<>"]],[3621,3621],[3631,3631]]],[1540275421523,["gjx16@GJXAIOU",[[1,3630,"stdil"]],[3630,3630],[3635,3635]]],[1540275422072,["gjx16@GJXAIOU",[[-1,3634,"l"]],[3635,3635],[3634,3634]]],[1540275423891,["gjx16@GJXAIOU",[[1,3634,"o.h"]],[3634,3634],[3637,3637]]],[1540275425817,["gjx16@GJXAIOU",[[1,3639,"\n"]],[3638,3638],[3639,3639]]],[1540275430106,["gjx16@GJXAIOU",[[1,3639,"#include<>"]],[3639,3639],[3649,3649]]],[1540275432714,["gjx16@GJXAIOU",[[1,3648,"strinhg"]],[3648,3648],[3655,3655]]],[1540275433592,["gjx16@GJXAIOU",[[-1,3653,"hg"]],[3655,3655],[3653,3653]]],[1540275435114,["gjx16@GJXAIOU",[[1,3653,"g.h"]],[3653,3653],[3656,3656]]],[1540275495329,[null,[[-1,3583,"\n\n"],[1,3585,"释放"]],[3583,3583],[3587,3587]]],[1540275495329,[null,[[1,3583,"\n\n"],[-1,3583,"释放"]],[3587,3587],[3583,3583]]],[1540275437874,["gjx16@GJXAIOU",[[1,3658,"\n"]],[3657,3657],[3658,3658]]],[1540275438937,["gjx16@GJXAIOU",[[1,3659,"\n"]],[3658,3658],[3659,3659]]],[1540275451292,["gjx16@GJXAIOU",[[1,3659,"char *get_str()"]],[3659,3659],[3674,3674]]],[1540275454001,["gjx16@GJXAIOU",[[1,3675,"\n"]],[3674,3674],[3675,3675]]],[1540275455466,["gjx16@GJXAIOU",[[1,3675,"{}"]],[3675,3675],[3677,3677]]],[1540275456178,["gjx16@GJXAIOU",[[1,3676,"\n"]],[3676,3676],[3677,3677]]],[1540275456361,["gjx16@GJXAIOU",[[1,3677,"\n"]],[3677,3677],[3678,3678]]],[1540275460698,["gjx16@GJXAIOU",[[1,3677,"  cjat"]],[3677,3677],[3683,3683]]],[1540275461184,["gjx16@GJXAIOU",[[-1,3682,"t"]],[3683,3683],[3682,3682]]],[1540275461338,["gjx16@GJXAIOU",[[1,3682,"r"]],[3682,3682],[3683,3683]]],[1540275462162,["gjx16@GJXAIOU",[[-1,3680,"jar"]],[3683,3683],[3680,3680]]],[1540275471451,["gjx16@GJXAIOU",[[1,3680,"har *tmp = ()"]],[3680,3680],[3693,3693]]],[1540275477698,["gjx16@GJXAIOU",[[1,3692,"char *"]],[3692,3692],[3698,3698]]],[1540275487820,["gjx16@GJXAIOU",[[1,3699,"malloc();"]],[3699,3699],[3708,3708]]],[1540275490386,["gjx16@GJXAIOU",[[1,3706,"100"]],[3706,3706],[3709,3709]]],[1540275493097,["gjx16@GJXAIOU",[[1,3712,"  \n"]],[3711,3711],[3714,3714]]],[1540275494346,["gjx16@GJXAIOU",[[1,3714,"if"]],[3714,3714],[3716,3716]]],[1540275555328,[null,[[-1,3583,"\n\n"],[1,3585,"释放"]],[3583,3583],[3587,3587]]],[1540275555328,[null,[[1,3583,"\n\n"],[-1,3583,"释放"]],[3587,3587],[3583,3583]]],[1540275495412,["gjx16@GJXAIOU",[[1,3717,")"]],[3717,3717],[3718,3718]]],[1540275499763,["gjx16@GJXAIOU",[[1,3717,"tmp = ma"]],[3717,3717],[3725,3725]]],[1540275501480,["gjx16@GJXAIOU",[[-1,3723,"ma"]],[3725,3725],[3723,3723]]],[1540275505884,["gjx16@GJXAIOU",[[1,3723,"NULL"]],[3723,3723],[3727,3727]]],[1540275507577,["gjx16@GJXAIOU",[[1,3729,"  \n"]],[3728,3728],[3731,3731]]],[1540275510642,["gjx16@GJXAIOU",[[1,3731,"  {}"]],[3731,3731],[3735,3735]]],[1540275511755,["gjx16@GJXAIOU",[[1,3734,"\n    \n    "]],[3734,3734],[3744,3744]]],[1540275515378,["gjx16@GJXAIOU",[[1,3739,"  tr"]],[3739,3739],[3743,3743]]],[1540275515936,["gjx16@GJXAIOU",[[-1,3741,"tr"]],[3743,3743],[3741,3741]]],[1540275521234,["gjx16@GJXAIOU",[[1,3741,"return NULL;"]],[3741,3741],[3753,3753]]],[1540275524953,["gjx16@GJXAIOU",[[1,3760,"    \n"]],[3759,3759],[3764,3764]]],[1540275525624,["gjx16@GJXAIOU",[[-1,3760,"    "],[1,3764,"\n"]],[3764,3764],[3761,3761]]],[1540275531266,["gjx16@GJXAIOU",[[1,3761,"  strcmp"]],[3761,3761],[3769,3769]]],[1540275533227,["gjx16@GJXAIOU",[[-1,3767,"mp"]],[3769,3769],[3767,3767]]],[1540275536810,["gjx16@GJXAIOU",[[1,3767,"py();"]],[3767,3767],[3772,3772]]],[1540275542058,["gjx16@GJXAIOU",[[1,3770,"tmp ,\"\""]],[3770,3770],[3777,3777]]],[1540275544530,["gjx16@GJXAIOU",[[1,3776,"abs"]],[3776,3776],[3779,3779]]],[1540275545064,["gjx16@GJXAIOU",[[-1,3778,"s"]],[3779,3779],[3778,3778]]],[1540275554586,["gjx16@GJXAIOU",[[1,3778,"cdefghijkl"]],[3778,3778],[3788,3788]]],[1540275615331,[null,[[-1,3583,"\n\n"],[1,3585,"释放"],[-1,3716,"\n"],[1,3717,"("],[-1,3728,"}"],[1,3729,"\n"],[1,3792,"}"]],[3583,3583],[3793,3793]]],[1540275615331,[null,[[1,3583,"\n\n"],[-1,3583,"释放"],[1,3716,"\n"],[-1,3716,"("],[1,3728,"}"],[-1,3728,"\n"],[-1,3792,"}"]],[3793,3793],[3583,3583]]],[1540275562955,["gjx16@GJXAIOU",[[1,3788,"mnopqrst"]],[3788,3788],[3796,3796]]],[1540275565953,["gjx16@GJXAIOU",[[1,3800,"  \n"]],[3799,3799],[3802,3802]]],[1540275579907,["gjx16@GJXAIOU",[[1,3802,"retutn "]],[3802,3802],[3809,3809]]],[1540275581608,["gjx16@GJXAIOU",[[-1,3806,"tn "]],[3809,3809],[3806,3806]]],[1540275585370,["gjx16@GJXAIOU",[[1,3806,"rn tmp;"]],[3806,3806],[3813,3813]]],[1540275587432,["gjx16@GJXAIOU",[[1,3816,"\n"]],[3815,3815],[3816,3816]]],[1540275587617,["gjx16@GJXAIOU",[[1,3817,"\n"]],[3816,3816],[3817,3817]]],[1540275590915,["gjx16@GJXAIOU",[[1,3817,"int main()"]],[3817,3817],[3827,3827]]],[1540275591634,["gjx16@GJXAIOU",[[1,3828,"\n"]],[3827,3827],[3828,3828]]],[1540275592954,["gjx16@GJXAIOU",[[1,3828,"{}"]],[3828,3828],[3830,3830]]],[1540275594040,["gjx16@GJXAIOU",[[1,3829,"\n"]],[3829,3829],[3830,3830]]],[1540275594208,["gjx16@GJXAIOU",[[1,3830,"\n"]],[3830,3830],[3831,3831]]],[1540275594376,["gjx16@GJXAIOU",[[1,3831,"\n"]],[3831,3831],[3832,3832]]],[1540275605242,["gjx16@GJXAIOU",[[1,3830,"    char buf[100] -"]],[3830,3830],[3849,3849]]],[1540275605793,["gjx16@GJXAIOU",[[-1,3848,"-"]],[3849,3849],[3848,3848]]],[1540275607908,["gjx16@GJXAIOU",[[1,3848,"= {}"]],[3848,3848],[3852,3852]]],[1540275610508,["gjx16@GJXAIOU",[[1,3851,"0"]],[3851,3851],[3852,3852]]],[1540275614043,["gjx16@GJXAIOU",[[1,3853,";"]],[3853,3853],[3854,3854]]],[1540275614432,["gjx16@GJXAIOU",[[1,3855,"    \n"]],[3854,3854],[3859,3859]]],[1540275675331,[null,[[-1,3583,"\n\n"],[1,3585,"释放"],[-1,3716,"\n"],[1,3717,"("],[-1,3728,"}"],[1,3729,"\n"],[1,3814,"}"],[-1,3815,"`"],[1,3863,"`"]],[3583,3583],[3864,3864]]],[1540275675331,[null,[[1,3583,"\n\n"],[-1,3583,"释放"],[1,3716,"\n"],[-1,3716,"("],[1,3728,"}"],[-1,3728,"\n"],[-1,3814,"}"],[1,3816,"`"],[-1,3863,"`"]],[3864,3864],[3583,3583]]],[1540275626562,["gjx16@GJXAIOU",[[1,3826,"void"]],[3826,3826],[3830,3830]]],[1540275638401,["gjx16@GJXAIOU",[[1,3864,"    \n"]],[3858,3858],[3863,3863]]],[1540275735333,[null,[[-1,3583,"\n\n"],[1,3585,"释放"],[-1,3716,"\n"],[1,3717,"("],[-1,3728,"}"],[1,3729,"\n"],[1,3814,"}"],[-1,3815,"`"],[1,3872,"`"]],[3583,3583],[3873,3873]]],[1540275735333,[null,[[1,3583,"\n\n"],[-1,3583,"释放"],[1,3716,"\n"],[-1,3716,"("],[1,3728,"}"],[-1,3728,"\n"],[-1,3814,"}"],[1,3816,"`"],[-1,3872,"`"]],[3873,3873],[3583,3583]]],[1540275707268,["gjx16@GJXAIOU",[[1,3863,"char *p = NULL;"]],[3863,3863],[3878,3878]]],[1540275707808,["gjx16@GJXAIOU",[[1,3884,"    \n"]],[3878,3878],[3883,3883]]],[1540275713466,["gjx16@GJXAIOU",[[1,3883,"p = str_"]],[3883,3883],[3891,3891]]],[1540275714851,["gjx16@GJXAIOU",[[-1,3887,"str_"]],[3891,3891],[3887,3887]]],[1540275717998,["gjx16@GJXAIOU",[[1,3887,"get——"]],[3887,3887],[3892,3892]]],[1540275718968,["gjx16@GJXAIOU",[[-1,3890,"——"]],[3892,3892],[3890,3890]]],[1540275724074,["gjx16@GJXAIOU",[[1,3890,"_str();"]],[3890,3890],[3897,3897]]],[1540275724523,["gjx16@GJXAIOU",[[1,3903,"    \n"]],[3897,3897],[3902,3902]]],[1540275726804,["gjx16@GJXAIOU",[[1,3902,"ig"]],[3902,3902],[3904,3904]]],[1540275727242,["gjx16@GJXAIOU",[[-1,3903,"g"]],[3904,3904],[3903,3903]]],[1540275728482,["gjx16@GJXAIOU",[[1,3903,"f()"]],[3903,3903],[3906,3906]]],[1540275733876,["gjx16@GJXAIOU",[[1,3905,"p != "]],[3905,3905],[3910,3910]]],[1540275795333,[null,[[-1,3583,"\n\n"],[1,3585,"释放"],[-1,3716,"\n"],[1,3717,"("],[-1,3728,"}"],[1,3729,"\n"],[1,3814,"}"],[-1,3815,"`"],[1,3920,"`"]],[3583,3583],[3921,3921]]],[1540275795333,[null,[[1,3583,"\n\n"],[-1,3583,"释放"],[1,3716,"\n"],[-1,3716,"("],[1,3728,"}"],[-1,3728,"\n"],[-1,3814,"}"],[1,3816,"`"],[-1,3920,"`"]],[3921,3921],[3583,3583]]],[1540275736066,["gjx16@GJXAIOU",[[1,3910,"NULL"]],[3910,3910],[3914,3914]]],[1540275738216,["gjx16@GJXAIOU",[[1,3921,"    \n"]],[3915,3915],[3920,3920]]],[1540275741106,["gjx16@GJXAIOU",[[1,3920,"  {}"]],[3920,3920],[3924,3924]]],[1540275742178,["gjx16@GJXAIOU",[[1,3923,"\n      \n      "]],[3923,3923],[3937,3937]]],[1540275747978,["gjx16@GJXAIOU",[[1,3930,"  printf();"]],[3930,3930],[3941,3941]]],[1540275751018,["gjx16@GJXAIOU",[[1,3939,"\"\""]],[3939,3939],[3941,3941]]],[1540275763609,["gjx16@GJXAIOU",[[1,3940,"p = %s\\n"]],[3940,3940],[3948,3948]]],[1540275767306,["gjx16@GJXAIOU",[[1,3949,",["]],[3949,3949],[3951,3951]]],[1540275768008,["gjx16@GJXAIOU",[[-1,3950,"["]],[3951,3951],[3950,3950]]],[1540275769305,["gjx16@GJXAIOU",[[1,3950,"p"]],[3950,3950],[3951,3951]]],[1540275777640,["gjx16@GJXAIOU",[[1,3960,"  \n      "]],[3953,3953],[3962,3962]]],[1540275781090,["gjx16@GJXAIOU",[[1,3962,"free()"]],[3962,3962],[3968,3968]]],[1540275782842,["gjx16@GJXAIOU",[[1,3967,"p"]],[3967,3967],[3968,3968]]],[1540275784354,["gjx16@GJXAIOU",[[1,3969,";"]],[3969,3969],[3970,3970]]],[1540275785313,["gjx16@GJXAIOU",[[1,3977,"  \n      "]],[3970,3970],[3979,3979]]],[1540275792482,["gjx16@GJXAIOU",[[1,3979,"p =NULL;"]],[3979,3979],[3987,3987]]],[1540275855339,[null,[[-1,3583,"\n\n"],[1,3585,"释放"],[-1,3716,"\n"],[1,3717,"("],[-1,3728,"}"],[1,3729,"\n"],[1,3814,"}"],[-1,3815,"`"],[1,4004,"`"]],[3583,3583],[4005,4005]]],[1540275855339,[null,[[1,3583,"\n\n"],[-1,3583,"释放"],[1,3716,"\n"],[-1,3716,"("],[1,3728,"}"],[-1,3728,"\n"],[-1,3814,"}"],[1,3816,"`"],[-1,4004,"`"]],[4005,4005],[3583,3583]]],[1540275795587,["gjx16@GJXAIOU",[[1,4000,"  \n    "]],[3995,3995],[4002,4002]]],[1540275796657,["gjx16@GJXAIOU",[[-1,3996,"      "],[1,4002,"\n"]],[4002,4002],[3997,3997]]],[1540275801802,["gjx16@GJXAIOU",[[1,3997,"return 0 ;"]],[3997,3997],[4007,4007]]],[1540275975338,[null,[[-1,3583,"\n\n"],[1,3585,"释放"],[-1,3716,"\n"],[1,3717,"("],[-1,3728,"}"],[1,3729,"\n"],[1,3814,"}"],[-1,3815,"`"],[1,4016,"`"]],[3583,3583],[4017,4017]]],[1540275975338,[null,[[1,3583,"\n\n"],[-1,3583,"释放"],[1,3716,"\n"],[-1,3716,"("],[1,3728,"}"],[-1,3728,"\n"],[-1,3814,"}"],[1,3816,"`"],[-1,4016,"`"]],[4017,4017],[3583,3583]]],[1540275956121,["gjx16@GJXAIOU",[[1,3970,"//shi"]],[3970,3970],[3975,3975]]],[1540275956687,["gjx16@GJXAIOU",[[-1,3972,"shi"]],[3975,3975],[3972,3972]]],[1540275973692,["gjx16@GJXAIOU",[[1,3972,"释放掉这个堆区，但是释放本质上并不是清空"]],[3972,3972],[3992,3992]]],[1540276035342,[null,[[-1,3583,"\n\n"],[1,3585,"释放"],[-1,3716,"\n"],[1,3717,"("],[-1,3728,"}"],[1,3729,"\n"],[1,3814,"}"],[-1,3815,"`"],[1,4038,"`"]],[3583,3583],[4039,4039]]],[1540276035342,[null,[[1,3583,"\n\n"],[-1,3583,"释放"],[1,3716,"\n"],[-1,3716,"("],[1,3728,"}"],[-1,3728,"\n"],[-1,3814,"}"],[1,3816,"`"],[-1,4038,"`"]],[4039,4039],[3583,3583]]],[1540275982580,["gjx16@GJXAIOU",[[1,3992,"堆区中的内容，二"]],[3992,3992],[4000,4000]]],[1540275983264,["gjx16@GJXAIOU",[[-1,3999,"二"]],[4000,4000],[3999,3999]]],[1540276030778,["gjx16@GJXAIOU",[[1,3999,"而只是取消p对于这个内存区域的使用权，本质上这个字符串仍然存储在堆区中；"]],[3999,3999],[4035,4035]]],[1540276035153,["gjx16@GJXAIOU",[[1,4052,"、、"]],[4052,4052],[4054,4054]]],[1540276095387,[null,[[-1,3583,"\n\n"],[1,3585,"释放"],[-1,3716,"\n"],[1,3717,"("],[-1,3728,"}"],[1,3729,"\n"],[1,3814,"}"],[-1,3815,"`"],[1,4083,"`"]],[3583,3583],[4084,4084]]],[1540276095387,[null,[[1,3583,"\n\n"],[-1,3583,"释放"],[1,3716,"\n"],[-1,3716,"("],[1,3728,"}"],[-1,3728,"\n"],[-1,3814,"}"],[1,3816,"`"],[-1,4083,"`"]],[4084,4084],[3583,3583]]],[1540276035966,["gjx16@GJXAIOU",[[-1,4052,"、、"]],[4054,4054],[4052,4052]]],[1540276036720,["gjx16@GJXAIOU",[[1,4052,"./"]],[4052,4052],[4054,4054]]],[1540276037670,["gjx16@GJXAIOU",[[-1,4052,"./"]],[4054,4054],[4052,4052]]],[1540276045759,["gjx16@GJXAIOU",[[1,4052,"//将这个"]],[4052,4052],[4057,4057]]],[1540276046502,["gjx16@GJXAIOU",[[-1,4056,"个"]],[4057,4057],[4056,4056]]],[1540276056387,["gjx16@GJXAIOU",[[1,4056,"块堆区指令"]],[4056,4056],[4061,4061]]],[1540276057670,["gjx16@GJXAIOU",[[-1,4059,"指令"]],[4061,4061],[4059,4059]]],[1540276086722,["gjx16@GJXAIOU",[[1,4059,"置零，，防止下次使用的时候数据有问题；"]],[4059,4059],[4078,4078]]],[1540276089366,["gjx16@GJXAIOU",[[-1,4062,"，"]],[4063,4063],[4062,4062]]],[1540276095279,["gjx16@GJXAIOU",[[1,4121,"\n"]],[4109,4109],[4110,4110]]],[1540276275386,[null,[[-1,3583,"\n\n"],[1,3585,"释放"],[-1,3716,"\n"],[1,3717,"("],[-1,3728,"}"],[1,3729,"\n"],[1,3814,"}"],[-1,3815,"`"],[1,4106,"`"]],[3583,3583],[4107,4107]]],[1540276275386,[null,[[1,3583,"\n\n"],[-1,3583,"释放"],[1,3716,"\n"],[-1,3716,"("],[1,3728,"}"],[-1,3728,"\n"],[-1,3814,"}"],[1,3816,"`"],[-1,4106,"`"]],[4107,4107],[3583,3583]]],[1540276224129,["gjx16@GJXAIOU",[[1,4110,"![本程序对应内存四区示意图]($resource/%E6%9C%AC%E7%A8%8B%E5%BA%8F%E5%AF%B9%E5%BA%94%E5%86%85%E5%AD%98%E5%9B%9B%E5%8C%BA%E7%A4%BA%E6%84%8F%E5%9B%BE.png)"]],[4110,4110],[4250,4250]]],[1540276575399,[null,[[-1,3583,"\n\n"],[1,3585,"释放"],[-1,3716,"\n"],[1,3717,"("],[-1,3728,"}"],[1,3729,"\n"],[1,3814,"}"],[-1,3815,"`"],[-1,4108,"\n"],[1,4109,"`"],[1,4249,"\n"]],[3583,3583],[4250,4250]]],[1540276575399,[null,[[1,3583,"\n\n"],[-1,3583,"释放"],[1,3716,"\n"],[-1,3716,"("],[1,3728,"}"],[-1,3728,"\n"],[-1,3814,"}"],[1,3816,"`"],[1,4108,"\n"],[-1,4108,"`"],[-1,4249,"\n"]],[4250,4250],[3583,3583]]],[1540276567135,["gjx16@GJXAIOU",[[-1,4110,"![本程序对应内存四区示意图]($resource/%E6%9C%AC%E7%A8%8B%E5%BA%8F%E5%AF%B9%E5%BA%94%E5%86%85%E5%AD%98%E5%9B%9B%E5%8C%BA%E7%A4%BA%E6%84%8F%E5%9B%BE.png)"]],[4110,4249],[4110,4110]]],[1540276586793,[null,[[-1,3583,"\n\n"],[1,3585,"释放"],[-1,3716,"\n"],[1,3717,"("],[-1,3728,"}"],[1,3729,"\n"],[1,3814,"}"],[-1,3815,"`"],[1,4106,"`"]],[3583,3583],[4107,4107]]],[1540276586793,[null,[[1,3583,"\n\n"],[-1,3583,"释放"],[1,3716,"\n"],[-1,3716,"("],[1,3728,"}"],[-1,3728,"\n"],[-1,3814,"}"],[1,3816,"`"],[-1,4106,"`"]],[4107,4107],[3583,3583]]],[1540276576624,["gjx16@GJXAIOU",[[1,4110,"![本程序对应内存四区示意图 2]($resource/%E6%9C%AC%E7%A8%8B%E5%BA%8F%E5%AF%B9%E5%BA%94%E5%86%85%E5%AD%98%E5%9B%9B%E5%8C%BA%E7%A4%BA%E6%84%8F%E5%9B%BE%202.png)\n![本程序对应内存四区示意图]($resource/%E6%9C%AC%E7%A8%8B%E5%BA%8F%E5%AF%B9%E5%BA%94%E5%86%85%E5%AD%98%E5%9B%9B%E5%8C%BA%E7%A4%BA%E6%84%8F%E5%9B%BE.png)"]],[4110,4110],[4396,4396]]],[1540276580463,["gjx16@GJXAIOU",[[-1,4256,"![本程序对应内存四区示意图]($resource/%E6%9C%AC%E7%A8%8B%E5%BA%8F%E5%AF%B9%E5%BA%94%E5%86%85%E5%AD%98%E5%9B%9B%E5%8C%BA%E7%A4%BA%E6%84%8F%E5%9B%BE.png)\n"]],[4256,4396],[4256,4256]]],[1540276646804,[null,[[-1,3583,"\n\n"],[1,3585,"释放"],[-1,3716,"\n"],[1,3717,"("],[-1,3728,"}"],[1,3729,"\n"],[1,3814,"}"],[-1,3815,"`"],[-1,4108,"\n"],[1,4109,"`"],[1,4255,"\n"]],[3583,3583],[4256,4256]]],[1540276646804,[null,[[1,3583,"\n\n"],[-1,3583,"释放"],[1,3716,"\n"],[-1,3716,"("],[1,3728,"}"],[-1,3728,"\n"],[-1,3814,"}"],[1,3816,"`"],[1,4108,"\n"],[-1,4108,"`"],[-1,4255,"\n"]],[4256,4256],[3583,3583]]],[1540276595639,["gjx16@GJXAIOU",[[1,4267,"\n"]],[4258,4258],[4259,4259]]],[1540276597163,["gjx16@GJXAIOU",[[1,4259,"****"]],[4259,4259],[4261,4261]]],[1540276603915,["gjx16@GJXAIOU",[[1,4261,"函数调用模型："]],[4261,4261],[4268,4268]]],[1540276605959,["gjx16@GJXAIOU",[[1,4279,"\n"]],[4270,4270],[4271,4271]]],[1540277006809,[null,[[-1,3583,"\n\n"],[1,3585,"释放"],[-1,3716,"\n"],[1,3717,"("],[-1,3728,"}"],[1,3729,"\n"],[1,3814,"}"],[-1,3815,"`"],[-1,4108,"\n"],[1,4109,"`"],[-1,4270,""],[1,4270,"\n"]],[3583,3583],[4271,4271]]],[1540277006809,[null,[[1,3583,"\n\n"],[-1,3583,"释放"],[1,3716,"\n"],[-1,3716,"("],[1,3728,"}"],[-1,3728,"\n"],[-1,3814,"}"],[1,3816,"`"],[1,4108,"\n"],[-1,4108,"`"],[1,4270,""],[-1,4270,"\n"]],[4271,4271],[3583,3583]]],[1540276968803,["gjx16@GJXAIOU",[[1,4271,"![函数调用模型]($resource/%E5%87%BD%E6%95%B0%E8%B0%83%E7%94%A8%E6%A8%A1%E5%9E%8B.png)"]],[4271,4271],[4351,4351]]],[1540276973198,["gjx16@GJXAIOU",[[1,4271,"\n"]],[4271,4271],[4272,4272]]],[1540276974878,["gjx16@GJXAIOU",[[1,4360,"\n"]],[4352,4352],[4353,4353]]],[1540278326836,[null,[[-1,3583,"\n\n"],[1,3585,"释放"],[-1,3716,"\n"],[1,3717,"("],[-1,3728,"}"],[1,3729,"\n"],[1,3814,"}"],[-1,3815,"`"],[-1,4108,"\n"],[1,4109,"`"],[-1,4351,""],[1,4351,"\n"]],[3583,3583],[4352,4352]]],[1540278326836,[null,[[1,3583,"\n\n"],[-1,3583,"释放"],[1,3716,"\n"],[-1,3716,"("],[1,3728,"}"],[-1,3728,"\n"],[-1,3814,"}"],[1,3816,"`"],[1,4108,"\n"],[-1,4108,"`"],[1,4351,""],[-1,4351,"\n"]],[4352,4352],[3583,3583]]],[1540278316404,["gjx16@GJXAIOU",[[1,4361,"\n"]],[4353,4353],[4354,4354]]],[1540278317470,["gjx16@GJXAIOU",[[1,4354,"****"]],[4354,4354],[4356,4356]]],[1540278320121,["gjx16@GJXAIOU",[[1,4356,"站的"]],[4356,4356],[4358,4358]]],[1540278322146,["gjx16@GJXAIOU",[[-1,4356,"站的"]],[4358,4358],[4356,4356]]],[1540278326527,["gjx16@GJXAIOU",[[1,4356,"栈的生长"]],[4356,4356],[4360,4360]]],[1540278386841,[null,[[-1,3583,"\n\n"],[1,3585,"释放"],[-1,3716,"\n"],[1,3717,"("],[-1,3728,"}"],[1,3729,"\n"],[1,3814,"}"],[-1,3815,"`"],[-1,4108,"\n"],[1,4109,"`"],[-1,4362,""],[1,4362,"\n"]],[3583,3583],[4363,4363]]],[1540278386841,[null,[[1,3583,"\n\n"],[-1,3583,"释放"],[1,3716,"\n"],[-1,3716,"("],[1,3728,"}"],[-1,3728,"\n"],[-1,3814,"}"],[1,3816,"`"],[1,4108,"\n"],[-1,4108,"`"],[1,4362,""],[-1,4362,"\n"]],[4363,4363],[3583,3583]]],[1540278328432,["gjx16@GJXAIOU",[[1,4360,"方向："]],[4360,4360],[4363,4363]]],[1540278330494,["gjx16@GJXAIOU",[[1,4373,"\n"]],[4365,4365],[4366,4366]]],[1540278331998,["gjx16@GJXAIOU",[[1,4374,"\n"]],[4366,4366],[4367,4367]]],[1540278340061,["gjx16@GJXAIOU",[[1,4367,"![栈的生长方向]($resource/%E6%A0%88%E7%9A%84%E7%94%9F%E9%95%BF%E6%96%B9%E5%90%91.png)"]],[4367,4367],[4447,4447]]],[1540278343972,["gjx16@GJXAIOU",[[1,4454,"\n"]],[4447,4447],[4448,4448]]],[1540292150264,[null,[[-1,3583,"\n\n"],[1,3585,"释放"],[-1,3716,"\n"],[1,3717,"("],[-1,3728,"}"],[1,3729,"\n"],[1,3814,"}"],[-1,3815,"`"],[-1,4108,"\n"],[1,4109,"`"],[-1,4446,""],[1,4446,"\n"]],[3583,3583],[4447,4447]]],[1540292150264,[null,[[1,3583,"\n\n"],[-1,3583,"释放"],[1,3716,"\n"],[-1,3716,"("],[1,3728,"}"],[-1,3728,"\n"],[-1,3814,"}"],[1,3816,"`"],[1,4108,"\n"],[-1,4108,"`"],[1,4446,""],[-1,4446,"\n"]],[4447,4447],[3583,3583]]],[1540292146260,["gjx16@GJXAIOU",[[1,160," 数据类型和内存四区"]],[160,160],[170,170]]]],null,"gjx16@GJXAIOU"],["ccb539c6-cd47-4552-8715-8c32d3e5912b",1540364378990,"---\n1.概述：学习要求，学习标准\n2.数据类型、变量\n3.内存四区（栈、堆、全局、代码区）\n4.说明：本系列代码使用VS2017进行测试运行，代码位置为：\nE:\\Program\\C++\\C++\\practice\\programs\\Cenhance\\Cenhance_1\\Cenhance_1\n---\n\n# day01 数据类型和内存四区\n\n\n## 数据类型\n\n\n1.**学习历程**\n\n![学习历程]($resource/%E5%AD%A6%E4%B9%A0%E5%8E%86%E7%A8%8B.png)\n\n2.**如何看懂带算法的程序**\n\n- 看懂流程\n- 每个语句的功能\n- 试数\n- 调试\n- 模仿改\n- 不看代码自己写\n\n\n----\n\n3.**选择法排序**\n\n```c\n#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n\nint main(void)\n{\n    int array[] = {1,4,6,9,0,4,3,5,2};\n    int num = 0;\n    num = sizeof(array)/sizeof(array[0]);\n  int i = 0 ;\n  for(i = 0; i < num ; i++)\n    {\n        printf(\"before = %d \\n\",array[i]);\n    }\n    printf(\"------------------\\n\");\n\n\n\n  //选择法进行排序\n\n  int j = 0;\n  int tmp= 0;\n  for(i = 0 ; i < num -1; i++)\n    {\n        for(j = i +1; j < num ; j++)\n          {\n              if(array[i] > array[j])\n                {\n                  tmp = array[i];\n                  array[i] = array[j];\n                  array[j] = tmp;\n                }\n          }\n    }\n    for(i = 0; i < num ; i++)\n        {\n            printf(\"after = %d \\n\",array[i]);\n        }\n    \n    system(\"pause\");\n    return 0;\n}\n```\n程序运行结果；\n\n![排序]($resource/%E6%8E%92%E5%BA%8F.png)\n\n---\n\n4.**将上面的程序进行函数封装**\n\n```c\n#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n\n\nvoid printf_array(int *array, int num)\n{\n\tint i = 0;\n\tfor (i = 0; i < num; i++)\n\t{\n\t\tprintf(\"%d \\n\", array[i]);\n\t}\n}\n\n\n//如果数组作为函数参数，则数组形参退化为指针\n//下面的第一个参数可以是*array，或者为：array[],或者为：array[1]，或者array[10]等等\nvoid sort_array(int *array, int num)\n{\n\t//选择法进行排序\n\tint i = 0;\n\tint j = 0;\n\tint tmp = 0;\n\tfor (i = 0; i < num - 1; i++)\n\t{\n\t\tfor (j = i + 1; j < num; j++)\n\t\t{\n\t\t\tif (array[i] > array[j])\n\t\t\t{\n\t\t\t\ttmp = array[i];\n\t\t\t\tarray[i] = array[j];\n\t\t\t\tarray[j] = tmp;\n\t\t\t}\n\t\t}\n\t}\n\n}\n\n\nint main(void)\n{\n\tint array[] = { 1,4,6,9,0,4,3,5,2 };\n\tint num = 0;\n\tnum = sizeof(array) / sizeof(array[0]);\n\n\tprintf(\"before = \\n\");\n\tprintf_array(array, num);\n\tprintf(\"------------------\\n\");\n\tprintf(\"after = \\n\");\n\tsort_array(array, num);\n\tprintf_array(array, num);\n\tsystem(\"pause\");\n\treturn 0;\n}\n```\n程序运行结果；\n\n![函数封装之后排序]($resource/%E5%87%BD%E6%95%B0%E5%B0%81%E8%A3%85%E4%B9%8B%E5%90%8E%E6%8E%92%E5%BA%8F.png)\n\n\n----\n\n5.**void 无类型**\n\n- 函数参数为空，定义函数时，可以用void修饰：例如：`int fun(void)`\n- 函数没有返回值：`void fun(void)`\n- 不能定义void类型的普通变量\n- 可以使用定义void *变量 ： `void *p`,其中在32位系统中为4个字节，在64位系统中占64字节\n- 数据类型本质：固定内存块大小别名\n- void *p  万能指针，可以作为函数返回值，函数参数\n\n\n6.**程序分文件**\n\n- **要求：** 按照函数的功能分文件\n- 分文件时候，防止头文件重复包含：`#pragma once`\n- 让C语言代码可以在C++的编译器中编译运行\n```c\n#ifdef_cplusplus\nextern \"C\" {\n#endif\n\n//函数的声明\n\n#ifdef_cplusplus\n}\n#endif\n```\n\n7.**数据类型**\n - 类型的本质：固定内存大小的别名\n - 数据类型的作用：编译器预算对象（变量）分配的内存空间大小，只有当变量定义的时候才真正的将这个空间分配出去；\n - 数据类型可以通过typedef其别名\n\n\n\n## 变量\n\n\n## 内存四区\n\n此程序说明内存四区划分\n\n```c\n#include<stdio.h>\n#include<stdlib.h>\n\nchar *get_str1()\n{\n  int *str1 = \"abd\";\n  return str1;\n}\n\nchar *get_str2()\n{\n  int *str2 = \"abd\";\n  return str2;\n}\n\n\n\nint main(void)\n{\n  char *p = NULL;\n  char *q = NULL;\n\n  p = get_str1();\n  q = get_str2();\n\n  printf(\"p = %s,&p = %d\\n\",p ,p);\n  printf(\"q = %s ,&q = %d\\n\",q,q);\n  system(\"pause\");\n  return 0;\n\n}\n\n```\n程序运行结果：\n\n![内存四区调试结果]($resource/%E5%86%85%E5%AD%98%E5%9B%9B%E5%8C%BA%E8%B0%83%E8%AF%95%E7%BB%93%E6%9E%9C.png)\n\n虽然p和q分别是两个函数的返回值，但是从结果可以看出他们指向的地址都是同一个\n**解析本函数的内存四区图：**\n\n![程序内存四区分析]($resource/%E7%A8%8B%E5%BA%8F%E5%86%85%E5%AD%98%E5%9B%9B%E5%8C%BA%E5%88%86%E6%9E%90.png)\n\n首先在栈中划定四个字节的区域放置指针p(因为指针在32位中都是四个字节)，因为值为NULL,所以并没有值；同时指针q也是这样；\n然后调用`get_str1`函数，在函数中定义的指针`str1`（在另一块栈区）指向字符串“abd”（存在全局区）,函数返回值为str1，即为该字符串的地址，而在main函数中该地址赋值给了指针p（调用完之后指针str1就消失了）,因此指针p指向了该字符串，最后打印输出\n同样因为该字符串并没有改变，因此系统不会将他存储两遍，所以地址是一样的；\n\n\n\n**分析栈区**\n以上的程序容易出现乱码的情况，因为栈中使用结束之后就会自动释放，释放之后无法确定系统中存储的是什么元素\n\n\n**分析堆区：**\n\n```c\n#include<stdio.h>\n#include<string.h>\n\nchar *get_str()\n{\n  char *tmp = (char *)malloc(100);\n  if(tmp = NULL)\n    {\n      return NULL;\n    }\n\n  strcpy(tmp ,\"abcdefghijklmnopqrst\");\n  return tmp;\n}\n\nint main(void)\n{\n    char buf[100] = {0};\n    char *p = NULL;\n    p = get_str();\n    if(p != NULL)\n      {\n        printf(\"p = %s\\n\",p);\n        free(p);//释放掉这个堆区，但是释放本质上并不是清空堆区中的内容，而只是取消p对于这个内存区域的使用权，本质上这个字符串仍然存储在堆区中；\n        p =NULL;//将这块堆区置零，防止下次使用的时候数据有问题；\n      }\n\nreturn 0 ;\n    \n\n}\n```\n![本程序对应内存四区示意图 2]($resource/%E6%9C%AC%E7%A8%8B%E5%BA%8F%E5%AF%B9%E5%BA%94%E5%86%85%E5%AD%98%E5%9B%9B%E5%8C%BA%E7%A4%BA%E6%84%8F%E5%9B%BE%202.png)\n\n\n\n**函数调用模型：**\n\n![函数调用模型]($resource/%E5%87%BD%E6%95%B0%E8%B0%83%E7%94%A8%E6%A8%A1%E5%9E%8B.png)\n\n\n**栈的生长方向：**\n\n![栈的生长方向]($resource/%E6%A0%88%E7%9A%84%E7%94%9F%E9%95%BF%E6%96%B9%E5%90%91.png)\n\n\n\n\n\n\n\n\n",[[1540364367707,["gjx16@GJXAIOU",[[1,2365,"- \n"]],[2364,2364],[2367,2367]]],[1540364367852,["gjx16@GJXAIOU",[[-1,2365,"- "]],[2367,2367],[2366,2366]]],[1540364372609,["gjx16@GJXAIOU",[[1,2366,"****"]],[2366,2366],[2368,2368]]],[1540364376187,["gjx16@GJXAIOU",[[1,2368,"例子程序："]],[2368,2368],[2373,2373]]],[1540364381402,["gjx16@GJXAIOU",[[1,2375,"void zhizhe"]],[2375,2375],[2386,2386]]],[1540364382560,["gjx16@GJXAIOU",[[-1,2380,"zhizhe"]],[2386,2386],[2380,2380]]],[1540364413371,["gjx16@GJXAIOU",[[1,2380,"*p的万能指针，在实际使用中一定要变换成实际类型的指针"]],[2380,2380],[2407,2407]]],[1540364413937,["gjx16@GJXAIOU",[[1,2409,"\n"]],[2407,2407],[2408,2408]]],[1540364414148,["gjx16@GJXAIOU",[[1,2410,"\n"]],[2408,2408],[2409,2409]]],[1540364416307,["gjx16@GJXAIOU",[[1,2409,"````"]],[2409,2409],[2413,2413]]],[1540364417523,["gjx16@GJXAIOU",[[-1,2412,"`"]],[2413,2413],[2412,2412]]],[1540364417637,["gjx16@GJXAIOU",[[1,2412,"c"]],[2412,2412],[2413,2413]]],[1540364418697,["gjx16@GJXAIOU",[[1,2415,"\n"]],[2413,2413],[2414,2414]]],[1540364418836,["gjx16@GJXAIOU",[[1,2416,"\n"]],[2414,2414],[2415,2415]]],[1540364418978,["gjx16@GJXAIOU",[[1,2417,"\n"]],[2415,2415],[2416,2416]]],[1540364419116,["gjx16@GJXAIOU",[[1,2418,"\n"]],[2416,2416],[2417,2417]]],[1540364419258,["gjx16@GJXAIOU",[[1,2419,"\n"]],[2417,2417],[2418,2418]]],[1540364419394,["gjx16@GJXAIOU",[[1,2420,"\n"]],[2418,2418],[2419,2419]]],[1540364420082,["gjx16@GJXAIOU",[[1,2419,"````"]],[2419,2419],[2423,2423]]],[1540364421009,["gjx16@GJXAIOU",[[-1,2422,"`"]],[2423,2423],[2422,2422]]],[1540364424713,["gjx16@GJXAIOU",[[1,2414,"#inclued"]],[2414,2414],[2422,2422]]],[1540364426105,["gjx16@GJXAIOU",[[-1,2420,"ed"]],[2422,2422],[2420,2420]]],[1540364427363,["gjx16@GJXAIOU",[[1,2420,"de<>"]],[2420,2420],[2424,2424]]],[1540364431666,["gjx16@GJXAIOU",[[1,2423,"stdio.h"]],[2423,2423],[2430,2430]]],[1540364433588,["gjx16@GJXAIOU",[[1,2436,"\n"]],[2431,2431],[2432,2432]]],[1540364437387,["gjx16@GJXAIOU",[[1,2432,"#include<>"]],[2432,2432],[2442,2442]]],[1540364440151,["gjx16@GJXAIOU",[[1,2441,"string.h"]],[2441,2441],[2449,2449]]],[1540364441698,["gjx16@GJXAIOU",[[1,2455,"\n"]],[2450,2450],[2451,2451]]],[1540364441836,["gjx16@GJXAIOU",[[1,2456,"\n"]],[2451,2451],[2452,2452]]],[1540364444062,["gjx16@GJXAIOU",[[1,2452,"int mian"]],[2452,2452],[2460,2460]]],[1540364445842,["gjx16@GJXAIOU",[[-1,2456,"mian"]],[2460,2460],[2456,2456]]],[1540364449220,["gjx16@GJXAIOU",[[1,2456,"main()"]],[2456,2456],[2462,2462]]],[1540364452182,["gjx16@GJXAIOU",[[1,2461,"void"]],[2461,2461],[2465,2465]]],[1540364453962,["gjx16@GJXAIOU",[[1,2471,"\n"]],[2466,2466],[2467,2467]]],[1540364455051,["gjx16@GJXAIOU",[[1,2467,"{}"]],[2467,2467],[2469,2469]]],[1540364455705,["gjx16@GJXAIOU",[[1,2468,"\n"]],[2468,2468],[2469,2469]]],[1540364455857,["gjx16@GJXAIOU",[[1,2469,"\n"]],[2469,2469],[2470,2470]]],[1540364456041,["gjx16@GJXAIOU",[[1,2470,"\n"]],[2470,2470],[2471,2471]]],[1540364469403,["gjx16@GJXAIOU",[[1,2469,"  void *p = 0x1222;"]],[2469,2469],[2488,2488]]],[1540364469819,["gjx16@GJXAIOU",[[1,2489,"  \n"]],[2488,2488],[2491,2491]]],[1540364476809,["gjx16@GJXAIOU",[[1,2491,"char buf[100-"]],[2491,2491],[2504,2504]]],[1540364478265,["gjx16@GJXAIOU",[[-1,2503,"-"]],[2504,2504],[2503,2503]]],[1540364482365,["gjx16@GJXAIOU",[[1,2503,"] = \"\""]],[2503,2503],[2509,2509]]],[1540364484321,["gjx16@GJXAIOU",[[1,2508,"djfkdjhf"]],[2508,2508],[2516,2516]]],[1540364486611,["gjx16@GJXAIOU",[[1,2517,";"]],[2517,2517],[2518,2518]]],[1540364488074,["gjx16@GJXAIOU",[[1,2519,"  \n"]],[2518,2518],[2521,2521]]],[1540364490089,["gjx16@GJXAIOU",[[1,2521,"篇"]],[2521,2521],[2522,2522]]],[1540364490666,["gjx16@GJXAIOU",[[-1,2521,"篇"]],[2522,2522],[2521,2521]]],[1540364492290,["gjx16@GJXAIOU",[[1,2521,"p -="]],[2521,2521],[2525,2525]]],[1540364493065,["gjx16@GJXAIOU",[[-1,2523,"-="]],[2525,2525],[2523,2523]]],[1540364493344,["gjx16@GJXAIOU",[[1,2523,"-="]],[2523,2523],[2525,2525]]],[1540364494115,["gjx16@GJXAIOU",[[-1,2523,"-="]],[2525,2525],[2523,2523]]],[1540364496235,["gjx16@GJXAIOU",[[1,2523,"= buf;"]],[2523,2523],[2529,2529]]],[1540364496866,["gjx16@GJXAIOU",[[1,2530,"  \n"]],[2529,2529],[2532,2532]]],[1540364503842,["gjx16@GJXAIOU",[[1,2532,"printf();"]],[2532,2532],[2541,2541]]],[1540364505987,["gjx16@GJXAIOU",[[1,2539,"\"\""]],[2539,2539],[2541,2541]]],[1540364511102,["gjx16@GJXAIOU",[[1,2540," [ "]],[2540,2540],[2543,2543]]],[1540364512169,["gjx16@GJXAIOU",[[-1,2541,"[ "]],[2543,2543],[2541,2541]]],[1540364520386,["gjx16@GJXAIOU",[[1,2541,"p = %s\\n"]],[2541,2541],[2549,2549]]],[1540364526059,["gjx16@GJXAIOU",[[1,2550,",("]],[2550,2550],[2552,2552]]],[1540364526187,["gjx16@GJXAIOU",[[1,2553,")"]],[2552,2552],[2553,2553]]],[1540364529293,["gjx16@GJXAIOU",[[1,2552,"char *"]],[2552,2552],[2558,2558]]],[1540364531610,["gjx16@GJXAIOU",[[1,2559,"p"]],[2559,2559],[2560,2560]]],[1540364549635,["gjx16@GJXAIOU",[[1,2562,"//实际使用时候转换成需要=的"]],[2562,2562],[2577,2577]]],[1540364550008,["gjx16@GJXAIOU",[[-1,2575,"=的"]],[2577,2577],[2575,2575]]],[1540364554884,["gjx16@GJXAIOU",[[1,2575,"的类型的指针"]],[2575,2575],[2581,2581]]],[1540364555345,["gjx16@GJXAIOU",[[1,2582,"  \n"]],[2581,2581],[2584,2584]]],[1540364555492,["gjx16@GJXAIOU",[[-1,2582,"  "],[1,2584,"\n"]],[2584,2584],[2583,2583]]],[1540364555920,["gjx16@GJXAIOU",[[1,2585,"\n"]],[2583,2583],[2584,2584]]],[1540364556928,["gjx16@GJXAIOU",[[1,2584,"  "]],[2584,2584],[2586,2586]]],[1540364574987,["gjx16@GJXAIOU",[[1,2586,"int a[100] = {};"]],[2586,2586],[2602,2602]]],[1540364579994,["gjx16@GJXAIOU",[[1,2600,"1,2,3,4"]],[2600,2600],[2607,2607]]],[1540364581792,["gjx16@GJXAIOU",[[1,2610,"  \n"]],[2609,2609],[2612,2612]]],[1540364585738,["gjx16@GJXAIOU",[[1,2612,"int i = ;"]],[2612,2612],[2621,2621]]],[1540364586448,["gjx16@GJXAIOU",[[-1,2620,";"]],[2621,2621],[2620,2620]]],[1540364587362,["gjx16@GJXAIOU",[[1,2620,"9;"]],[2620,2620],[2622,2622]]],[1540364587952,["gjx16@GJXAIOU",[[-1,2620,"9;"]],[2622,2622],[2620,2620]]],[1540364589154,["gjx16@GJXAIOU",[[1,2620,"0;"]],[2620,2620],[2622,2622]]],[1540364589640,["gjx16@GJXAIOU",[[1,2623,"  \n"]],[2622,2622],[2625,2625]]],[1540364592251,["gjx16@GJXAIOU",[[1,2625,"for()"]],[2625,2625],[2630,2630]]],[1540364599793,["gjx16@GJXAIOU",[[1,2629,"i = 0; i++;"]],[2629,2629],[2640,2640]]],[1540364600946,["gjx16@GJXAIOU",[[-1,2637,"++;"]],[2640,2640],[2637,2637]]],[1540364606683,["gjx16@GJXAIOU",[[1,2637," < 4; i++"]],[2637,2637],[2646,2646]]],[1540364608768,["gjx16@GJXAIOU",[[1,2648,"  \n"]],[2647,2647],[2650,2650]]],[1540364611105,["gjx16@GJXAIOU",[[1,2650,"  {}"]],[2650,2650],[2654,2654]]],[1540364612507,["gjx16@GJXAIOU",[[1,2653,"\n    \n    \n    "]],[2653,2653],[2668,2668]]],[1540364617682,["gjx16@GJXAIOU",[[1,2658,"    prin"]],[2658,2658],[2666,2666]]],[1540364619610,["gjx16@GJXAIOU",[[1,2667,"f();"]],[2667,2667],[2671,2671]]],[1540364623361,["gjx16@GJXAIOU",[[1,2669,"\"\""]],[2669,2669],[2671,2671]]],[1540364634857,["gjx16@GJXAIOU",[[1,2670,"%d\\n"]],[2670,2670],[2674,2674]]],[1540364649169,["gjx16@GJXAIOU",[[1,2675,",("]],[2675,2675],[2677,2677]]],[1540364649265,["gjx16@GJXAIOU",[[1,2678,")"]],[2677,2677],[2678,2678]]],[1540364652524,["gjx16@GJXAIOU",[[1,2677,"int *"]],[2677,2677],[2682,2682]]],[1540364658953,["gjx16@GJXAIOU",[[1,2683,"p + 1"]],[2683,2683],[2688,2688]]],[1540364660976,["gjx16@GJXAIOU",[[-1,2687,"1"]],[2688,2688],[2687,2687]]],[1540364662010,["gjx16@GJXAIOU",[[1,2687,"i"]],[2687,2687],[2688,2688]]],[1540364663169,["gjx16@GJXAIOU",[[1,2689,")"]],[2688,2688],[2689,2689]]],[1540364666587,["gjx16@GJXAIOU",[[1,2677,"("]],[2676,2676],[2677,2677]]],[1540364672768,["gjx16@GJXAIOU",[[-1,2692,"\n"]],[2693,2693],[2692,2692]]],[1540364737890,[null,[[-1,2666,"\n"],[1,2667,"t"],[1,2692," "]],[2666,2666],[2693,2693]]],[1540364737891,[null,[[1,2666,"\n"],[-1,2666,"t"],[-1,2692," "]],[2693,2693],[2666,2666]]],[1540364680995,["gjx16@GJXAIOU",[[1,2703,"  return 0;"]],[2703,2703],[2714,2714]]],[1540364687444,["gjx16@GJXAIOU",[[-1,2720,"\n"]],[2720,2720],[2719,2719]]],[1540364687560,["gjx16@GJXAIOU",[[-1,2719,"\n"]],[2719,2719],[2718,2718]]],[1540364687736,["gjx16@GJXAIOU",[[-1,2718,"\n"]],[2718,2718],[2717,2717]]],[1540364727344,["gjx16@GJXAIOU",[[-1,2372,"："]],[2373,2373],[2372,2372]]],[1540364729373,["gjx16@GJXAIOU",[[1,2372,":"]],[2372,2372],[2373,2373]]],[1540364734250,["gjx16@GJXAIOU",[[1,2375,"  "]],[2375,2375],[2377,2377]]],[1540364977891,[null,[[-1,2668,"\n"],[1,2669,"t"],[1,2697," "],[-1,2703,"\n"],[1,2716,"\n"],[-1,2719,"\n"],[1,2720,"`"]],[2668,2668],[2721,2721]]],[1540364977891,[null,[[1,2668,"\n"],[-1,2668,"t"],[-1,2697," "],[1,2704,"\n"],[-1,2716,"\n"],[1,2720,"\n"],[-1,2720,"`"]],[2721,2721],[2668,2668]]],[1540364924518,["gjx16@GJXAIOU",[[1,2434,"\n"],[1,2458," "],[1,2469,"\n"],[1,2470,"\n"],[1,2478," "],[1,2480," "],[1,2483," "],[1,2490,"\n"],[1,2498," "],[1,2506," "],[1,2509," "],[1,2521,"\n"],[1,2524," "],[1,2527," "],[1,2531,"\n"],[1,2543," "],[1,2544," "],[1,2546," "],[1,2558," "],[-1,2585,"\n"],[1,2591," "],[1,2598," "],[1,2601," "],[1,2611,"\n\n  p  =  a;\n"],[1,2618," "],[1,2619," "],[1,2621," "],[1,2625,"\n"],[1,2632," "],[1,2635," "],[1,2637," "],[1,2640," "],[1,2641," "],[1,2645," "],[-1,2650,"  "],[1,2652,"\n"],[-1,2656,"      "],[1,2662,"\n"],[1,2678,"*"],[1,2683," "],[1,2688," "],[1,2689," "],[-1,2694,"    \n "],[1,2700,"\n\n"],[-1,2702," "],[1,2704,"\n"],[1,2714," "],[1,2716,"\n"]],[2416,2718],[2758,2758]]],[1540364927736,["gjx16@GJXAIOU",[[-1,2434,"\n"]],[2434,2434],[2433,2433]]],[1540364929312,["gjx16@GJXAIOU",[[-1,2470,"\n"]],[2470,2470],[2469,2469]]],[1540364930265,["gjx16@GJXAIOU",[[-1,2472,"\n"]],[2472,2472],[2471,2471]]],[1540364930937,["gjx16@GJXAIOU",[[-1,2495,"\n"]],[2495,2495],[2494,2494]]],[1540364931633,["gjx16@GJXAIOU",[[-1,2528,"\n"]],[2528,2528],[2527,2527]]],[1540364932248,["gjx16@GJXAIOU",[[-1,2541,"\n"]],[2541,2541],[2540,2540]]],[1540364933033,["gjx16@GJXAIOU",[[-1,2597,"\n"]],[2597,2597],[2596,2596]]],[1540364937169,["gjx16@GJXAIOU",[[1,2598,"\n  \n   "]],[2598,2598],[2605,2605]]],[1540364938992,["gjx16@GJXAIOU",[[-1,2604,"  "]],[2606,2606],[2604,2604]]],[1540364939679,["gjx16@GJXAIOU",[[-1,2636," "]],[2636,2636],[2635,2635]]],[1540364940984,["gjx16@GJXAIOU",[[-1,2631,"\n"]],[2631,2631],[2630,2630]]],[1540364942442,["gjx16@GJXAIOU",[[-1,2641,"\n"]],[2641,2641],[2640,2640]]],[1540364943376,["gjx16@GJXAIOU",[[-1,2657,"\n"]],[2657,2657],[2656,2656]]],[1540364944320,["gjx16@GJXAIOU",[[-1,2688,"\n"]],[2688,2688],[2687,2687]]],[1540364946306,["gjx16@GJXAIOU",[[1,2690,"  "]],[2689,2689],[2691,2691]]],[1540364948368,["gjx16@GJXAIOU",[[-1,2694,"\n"]],[2694,2694],[2693,2693]]],[1540364951657,["gjx16@GJXAIOU",[[1,2696,"    "]],[2696,2696],[2700,2700]]],[1540364953545,["gjx16@GJXAIOU",[[-1,2735,"\n"]],[2735,2735],[2734,2734]]],[1540364956625,["gjx16@GJXAIOU",[[1,2737,"  "]],[2737,2737],[2739,2739]]],[1540364965634,["gjx16@GJXAIOU",[[1,2764,"\n"]],[2762,2762],[2763,2763]]],[1540364967842,["gjx16@GJXAIOU",[[1,2763,"chenxu"]],[2763,2763],[2769,2769]]],[1540364969352,["gjx16@GJXAIOU",[[-1,2763,"chenxu"]],[2769,2769],[2763,2763]]],[1540364977252,["gjx16@GJXAIOU",[[1,2763,"程序运行结果："]],[2763,2763],[2770,2770]]],[1540365037892,[null,[[-1,2704,"\n"],[1,2705,"t"],[-1,2739,"\n"],[1,2740,"}"],[1,2755,"\n"],[-1,2758,"\n"],[1,2759,"`"],[-1,2761,"\n"],[1,2770,"\n\n"],[-1,2771,"\n"]],[2704,2704],[2771,2771]]],[1540365037892,[null,[[1,2704,"\n"],[-1,2704,"t"],[1,2739,"\n"],[-1,2739,"}"],[-1,2755,"\n"],[1,2759,"\n"],[-1,2759,"`"],[1,2762,"\n"],[-1,2770,"\n\n"],[1,2773,"\n"]],[2771,2771],[2704,2704]]],[1540364978328,["gjx16@GJXAIOU",[[1,2772,"\n"]],[2770,2770],[2771,2771]]],[1540364987737,["gjx16@GJXAIOU",[[1,2771," p = djfkdjhf\n1\n2\n3\n4\n"]],[2771,2771],[2793,2793]]],[1540364992100,["gjx16@GJXAIOU",[[1,2771,"·"]],[2771,2771],[2772,2772]]],[1540364993853,["gjx16@GJXAIOU",[[1,2786,"·"]],[2786,2786],[2787,2787]]],[1540364997512,["gjx16@GJXAIOU",[[-1,2786,"·"]],[2787,2787],[2786,2786]]],[1540364997640,["gjx16@GJXAIOU",[[-1,2785,"\n"]],[2786,2786],[2785,2785]]],[1540365000262,["gjx16@GJXAIOU",[[1,2785,"\n"]],[2785,2785],[2786,2786]]],[1540365002491,["gjx16@GJXAIOU",[[-1,2771,"·"]],[2772,2772],[2771,2771]]],[1540365003342,["gjx16@GJXAIOU",[[1,2771,"`1"]],[2771,2771],[2773,2773]]],[1540365004729,["gjx16@GJXAIOU",[[-1,2772,"1"]],[2773,2773],[2772,2772]]],[1540365006954,["gjx16@GJXAIOU",[[1,2786,"`"]],[2786,2786],[2787,2787]]],[1540365007810,["gjx16@GJXAIOU",[[1,2789,"`"]],[2789,2789],[2790,2790]]],[1540365008418,["gjx16@GJXAIOU",[[1,2792,"`"]],[2792,2792],[2793,2793]]],[1540365009098,["gjx16@GJXAIOU",[[1,2795,"`"]],[2795,2795],[2796,2796]]],[1540365009890,["gjx16@GJXAIOU",[[1,2797,"`"]],[2797,2797],[2798,2798]]],[1540365010554,["gjx16@GJXAIOU",[[1,2794,"`"]],[2794,2794],[2795,2795]]],[1540365011091,["gjx16@GJXAIOU",[[1,2791,"`"]],[2791,2791],[2792,2792]]],[1540365011962,["gjx16@GJXAIOU",[[1,2788,"`"]],[2788,2788],[2789,2789]]],[1540365015450,["gjx16@GJXAIOU",[[1,2785,"`"]],[2785,2785],[2786,2786]]],[1540365022042,["gjx16@GJXAIOU",[[-1,2772," "]],[2773,2773],[2772,2772]]]],null,"gjx16@GJXAIOU"],["a28bb166-aaa6-4cd7-995c-31cfc7d6d862",1540370601254,"---\n1.概述：学习要求，学习标准\n2.数据类型、变量\n3.内存四区（栈、堆、全局、代码区）\n4.说明：本系列代码使用VS2017进行测试运行，代码位置为：\nE:\\Program\\C++\\C++\\practice\\programs\\Cenhance\\Cenhance_1\\Cenhance_1\n---\n\n# day01 数据类型和内存四区\n\n\n## 数据类型\n\n\n1.**学习历程**\n\n![学习历程]($resource/%E5%AD%A6%E4%B9%A0%E5%8E%86%E7%A8%8B.png)\n\n2.**如何看懂带算法的程序**\n\n- 看懂流程\n- 每个语句的功能\n- 试数\n- 调试\n- 模仿改\n- 不看代码自己写\n\n\n----\n\n3.**选择法排序**\n\n```c\n#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n\nint main(void)\n{\n    int array[] = {1,4,6,9,0,4,3,5,2};\n    int num = 0;\n    num = sizeof(array)/sizeof(array[0]);\n  int i = 0 ;\n  for(i = 0; i < num ; i++)\n    {\n        printf(\"before = %d \\n\",array[i]);\n    }\n    printf(\"------------------\\n\");\n\n\n\n  //选择法进行排序\n\n  int j = 0;\n  int tmp= 0;\n  for(i = 0 ; i < num -1; i++)\n    {\n        for(j = i +1; j < num ; j++)\n          {\n              if(array[i] > array[j])\n                {\n                  tmp = array[i];\n                  array[i] = array[j];\n                  array[j] = tmp;\n                }\n          }\n    }\n    for(i = 0; i < num ; i++)\n        {\n            printf(\"after = %d \\n\",array[i]);\n        }\n    \n    system(\"pause\");\n    return 0;\n}\n```\n程序运行结果；\n\n![排序]($resource/%E6%8E%92%E5%BA%8F.png)\n\n---\n\n4.**将上面的程序进行函数封装**\n\n```c\n#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n\n\nvoid printf_array(int *array, int num)\n{\n\tint i = 0;\n\tfor (i = 0; i < num; i++)\n\t{\n\t\tprintf(\"%d \\n\", array[i]);\n\t}\n}\n\n\n//如果数组作为函数参数，则数组形参退化为指针\n//下面的第一个参数可以是*array，或者为：array[],或者为：array[1]，或者array[10]等等\nvoid sort_array(int *array, int num)\n{\n\t//选择法进行排序\n\tint i = 0;\n\tint j = 0;\n\tint tmp = 0;\n\tfor (i = 0; i < num - 1; i++)\n\t{\n\t\tfor (j = i + 1; j < num; j++)\n\t\t{\n\t\t\tif (array[i] > array[j])\n\t\t\t{\n\t\t\t\ttmp = array[i];\n\t\t\t\tarray[i] = array[j];\n\t\t\t\tarray[j] = tmp;\n\t\t\t}\n\t\t}\n\t}\n\n}\n\n\nint main(void)\n{\n\tint array[] = { 1,4,6,9,0,4,3,5,2 };\n\tint num = 0;\n\tnum = sizeof(array) / sizeof(array[0]);\n\n\tprintf(\"before = \\n\");\n\tprintf_array(array, num);\n\tprintf(\"------------------\\n\");\n\tprintf(\"after = \\n\");\n\tsort_array(array, num);\n\tprintf_array(array, num);\n\tsystem(\"pause\");\n\treturn 0;\n}\n```\n程序运行结果；\n\n![函数封装之后排序]($resource/%E5%87%BD%E6%95%B0%E5%B0%81%E8%A3%85%E4%B9%8B%E5%90%8E%E6%8E%92%E5%BA%8F.png)\n\n\n----\n\n5.**void 无类型**\n\n- 函数参数为空，定义函数时，可以用void修饰：例如：`int fun(void)`\n- 函数没有返回值：`void fun(void)`\n- 不能定义void类型的普通变量\n- 可以使用定义void *变量 ： `void *p`,其中在32位系统中为4个字节，在64位系统中占64字节\n- 数据类型本质：固定内存块大小别名\n- void *p  万能指针，可以作为函数返回值，函数参数\n\n**例子程序:**  void *p的万能指针，在实际使用中一定要变换成实际类型的指针\n\n```c\n#include<stdio.h>\n#include<string.h>\n\nint  main(void)\n{\n  void  *p  =  0x1222;\n  char  buf[100]  =  \"djfkdjhf\";\n  p  =  buf;\n  printf(\"  p  =  %s\\n\",(char  *)p);//实际使用时候转换成需要的类型的指针\n \n  \n  int  a[100]  =  {1,2,3,4};\n  p =  a;\n  int  i  =  0;\n  for(i  =  0;  i  <  4;  i++)\n    {\n      printf(\"%d\\n\",*((int  *)p  +  i));\n    }\n\n  return  0;\n\n}\n\n```\n程序运行结果：\n`p = djfkdjhf`\n`1`\n`2`\n`3`\n`4`\n\n\n6.**程序分文件**\n\n- **要求：** 按照函数的功能分文件\n- 分文件时候，防止头文件重复包含：`#pragma once`\n- 让C语言代码可以在C++的编译器中编译运行\n```c\n#ifdef_cplusplus\nextern \"C\" {\n#endif\n\n//函数的声明\n\n#ifdef_cplusplus\n}\n#endif\n```\n\n7.**数据类型**\n - 类型的本质：固定内存大小的别名\n - 数据类型的作用：编译器预算对象（变量）分配的内存空间大小，只有当变量定义的时候才真正的将这个空间分配出去；\n - 数据类型可以通过typedef其别名\n\n\n\n## 变量\n\n\n## 内存四区\n\n此程序说明内存四区划分\n\n```c\n#include<stdio.h>\n#include<stdlib.h>\n\nchar *get_str1()\n{\n  int *str1 = \"abd\";\n  return str1;\n}\n\nchar *get_str2()\n{\n  int *str2 = \"abd\";\n  return str2;\n}\n\n\n\nint main(void)\n{\n  char *p = NULL;\n  char *q = NULL;\n\n  p = get_str1();\n  q = get_str2();\n\n  printf(\"p = %s,&p = %d\\n\",p ,p);\n  printf(\"q = %s ,&q = %d\\n\",q,q);\n  system(\"pause\");\n  return 0;\n\n}\n\n```\n程序运行结果：\n\n![内存四区调试结果]($resource/%E5%86%85%E5%AD%98%E5%9B%9B%E5%8C%BA%E8%B0%83%E8%AF%95%E7%BB%93%E6%9E%9C.png)\n\n虽然p和q分别是两个函数的返回值，但是从结果可以看出他们指向的地址都是同一个\n**解析本函数的内存四区图：**\n\n![程序内存四区分析]($resource/%E7%A8%8B%E5%BA%8F%E5%86%85%E5%AD%98%E5%9B%9B%E5%8C%BA%E5%88%86%E6%9E%90.png)\n\n首先在栈中划定四个字节的区域放置指针p(因为指针在32位中都是四个字节)，因为值为NULL,所以并没有值；同时指针q也是这样；\n然后调用`get_str1`函数，在函数中定义的指针`str1`（在另一块栈区）指向字符串“abd”（存在全局区）,函数返回值为str1，即为该字符串的地址，而在main函数中该地址赋值给了指针p（调用完之后指针str1就消失了）,因此指针p指向了该字符串，最后打印输出\n同样因为该字符串并没有改变，因此系统不会将他存储两遍，所以地址是一样的；\n\n\n\n**分析栈区**\n以上的程序容易出现乱码的情况，因为栈中使用结束之后就会自动释放，释放之后无法确定系统中存储的是什么元素\n\n\n**分析堆区：**\n\n```c\n#include<stdio.h>\n#include<string.h>\n\nchar *get_str()\n{\n  char *tmp = (char *)malloc(100);\n  if(tmp = NULL)\n    {\n      return NULL;\n    }\n\n  strcpy(tmp ,\"abcdefghijklmnopqrst\");\n  return tmp;\n}\n\nint main(void)\n{\n    char buf[100] = {0};\n    char *p = NULL;\n    p = get_str();\n    if(p != NULL)\n      {\n        printf(\"p = %s\\n\",p);\n        free(p);//释放掉这个堆区，但是释放本质上并不是清空堆区中的内容，而只是取消p对于这个内存区域的使用权，本质上这个字符串仍然存储在堆区中；\n        p =NULL;//将这块堆区置零，防止下次使用的时候数据有问题；\n      }\n\nreturn 0 ;\n    \n\n}\n```\n![本程序对应内存四区示意图 2]($resource/%E6%9C%AC%E7%A8%8B%E5%BA%8F%E5%AF%B9%E5%BA%94%E5%86%85%E5%AD%98%E5%9B%9B%E5%8C%BA%E7%A4%BA%E6%84%8F%E5%9B%BE%202.png)\n\n\n\n**函数调用模型：**\n\n![函数调用模型]($resource/%E5%87%BD%E6%95%B0%E8%B0%83%E7%94%A8%E6%A8%A1%E5%9E%8B.png)\n\n\n**栈的生长方向：**\n\n![栈的生长方向]($resource/%E6%A0%88%E7%9A%84%E7%94%9F%E9%95%BF%E6%96%B9%E5%90%91.png)\n\n\n\n\n\n\n\n\n",[[1540370571807,["gjx16@GJXAIOU",[[1,514,"、、、"]],[514,514],[517,517]]],[1540370573289,["gjx16@GJXAIOU",[[-1,514,"、、、"]],[517,517],[514,514]]],[1540370581364,["gjx16@GJXAIOU",[[1,514,"//求数组元素个数"]],[514,514],[523,523]]]],null,"gjx16@GJXAIOU"],["20f68b9f-baf4-4514-a057-fd518d9e72c4",1540376854813,"---\n1.概述：学习要求，学习标准\n2.数据类型、变量\n3.内存四区（栈、堆、全局、代码区）\n4.说明：本系列代码使用VS2017进行测试运行，代码位置为：\nE:\\Program\\C++\\C++\\practice\\programs\\Cenhance\\Cenhance_1\\Cenhance_1\n---\n\n# day01 数据类型和内存四区\n\n\n## 数据类型\n\n\n1.**学习历程**\n\n![学习历程]($resource/%E5%AD%A6%E4%B9%A0%E5%8E%86%E7%A8%8B.png)\n\n2.**如何看懂带算法的程序**\n\n- 看懂流程\n- 每个语句的功能\n- 试数\n- 调试\n- 模仿改\n- 不看代码自己写\n\n\n----\n\n3.**选择法排序**\n\n```c\n#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n\nint main(void)\n{\n    int array[] = {1,4,6,9,0,4,3,5,2};\n    int num = 0;\n    num = sizeof(array)/sizeof(array[0]);//求数组元素个数\n  int i = 0 ;\n  for(i = 0; i < num ; i++)\n    {\n        printf(\"before = %d \\n\",array[i]);\n    }\n    printf(\"------------------\\n\");\n\n\n\n  //选择法进行排序\n\n  int j = 0;\n  int tmp= 0;\n  for(i = 0 ; i < num -1; i++)\n    {\n        for(j = i +1; j < num ; j++)\n          {\n              if(array[i] > array[j])\n                {\n                  tmp = array[i];\n                  array[i] = array[j];\n                  array[j] = tmp;\n                }\n          }\n    }\n    for(i = 0; i < num ; i++)\n        {\n            printf(\"after = %d \\n\",array[i]);\n        }\n    \n    system(\"pause\");\n    return 0;\n}\n```\n程序运行结果；\n\n![排序]($resource/%E6%8E%92%E5%BA%8F.png)\n\n---\n\n4.**将上面的程序进行函数封装**\n\n```c\n#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n\n\nvoid printf_array(int *array, int num)\n{\n\tint i = 0;\n\tfor (i = 0; i < num; i++)\n\t{\n\t\tprintf(\"%d \\n\", array[i]);\n\t}\n}\n\n\n//如果数组作为函数参数，则数组形参退化为指针\n//下面的第一个参数可以是*array，或者为：array[],或者为：array[1]，或者array[10]等等\nvoid sort_array(int *array, int num)\n{\n\t//选择法进行排序\n\tint i = 0;\n\tint j = 0;\n\tint tmp = 0;\n\tfor (i = 0; i < num - 1; i++)\n\t{\n\t\tfor (j = i + 1; j < num; j++)\n\t\t{\n\t\t\tif (array[i] > array[j])\n\t\t\t{\n\t\t\t\ttmp = array[i];\n\t\t\t\tarray[i] = array[j];\n\t\t\t\tarray[j] = tmp;\n\t\t\t}\n\t\t}\n\t}\n\n}\n\n\nint main(void)\n{\n\tint array[] = { 1,4,6,9,0,4,3,5,2 };\n\tint num = 0;\n\tnum = sizeof(array) / sizeof(array[0]);\n\n\tprintf(\"before = \\n\");\n\tprintf_array(array, num);\n\tprintf(\"------------------\\n\");\n\tprintf(\"after = \\n\");\n\tsort_array(array, num);\n\tprintf_array(array, num);\n\tsystem(\"pause\");\n\treturn 0;\n}\n```\n程序运行结果；\n\n![函数封装之后排序]($resource/%E5%87%BD%E6%95%B0%E5%B0%81%E8%A3%85%E4%B9%8B%E5%90%8E%E6%8E%92%E5%BA%8F.png)\n\n\n----\n\n5.**void 无类型**\n\n- 函数参数为空，定义函数时，可以用void修饰：例如：`int fun(void)`\n- 函数没有返回值：`void fun(void)`\n- 不能定义void类型的普通变量\n- 可以使用定义void *变量 ： `void *p`,其中在32位系统中为4个字节，在64位系统中占64字节\n- 数据类型本质：固定内存块大小别名\n- void *p  万能指针，可以作为函数返回值，函数参数\n\n**例子程序:**  void *p的万能指针，在实际使用中一定要变换成实际类型的指针\n\n```c\n#include<stdio.h>\n#include<string.h>\n\nint  main(void)\n{\n  void  *p  =  0x1222;\n  char  buf[100]  =  \"djfkdjhf\";\n  p  =  buf;\n  printf(\"  p  =  %s\\n\",(char  *)p);//实际使用时候转换成需要的类型的指针\n \n  \n  int  a[100]  =  {1,2,3,4};\n  p =  a;\n  int  i  =  0;\n  for(i  =  0;  i  <  4;  i++)\n    {\n      printf(\"%d\\n\",*((int  *)p  +  i));\n    }\n\n  return  0;\n\n}\n\n```\n程序运行结果：\n`p = djfkdjhf`\n`1`\n`2`\n`3`\n`4`\n\n\n6.**程序分文件**\n\n- **要求：** 按照函数的功能分文件\n- 分文件时候，防止头文件重复包含：`#pragma once`\n- 让C语言代码可以在C++的编译器中编译运行\n```c\n#ifdef_cplusplus\nextern \"C\" {\n#endif\n\n//函数的声明\n\n#ifdef_cplusplus\n}\n#endif\n```\n\n7.**数据类型**\n - 类型的本质：固定内存大小的别名\n - 数据类型的作用：编译器预算对象（变量）分配的内存空间大小，只有当变量定义的时候才真正的将这个空间分配出去；\n - 数据类型可以通过typedef其别名\n\n\n\n## 变量\n\n\n## 内存四区\n\n此程序说明内存四区划分\n\n```c\n#include<stdio.h>\n#include<stdlib.h>\n\nchar *get_str1()\n{\n  int *str1 = \"abd\";\n  return str1;\n}\n\nchar *get_str2()\n{\n  int *str2 = \"abd\";\n  return str2;\n}\n\n\n\nint main(void)\n{\n  char *p = NULL;\n  char *q = NULL;\n\n  p = get_str1();\n  q = get_str2();\n\n  printf(\"p = %s,&p = %d\\n\",p ,p);\n  printf(\"q = %s ,&q = %d\\n\",q,q);\n  system(\"pause\");\n  return 0;\n\n}\n\n```\n程序运行结果：\n\n![内存四区调试结果]($resource/%E5%86%85%E5%AD%98%E5%9B%9B%E5%8C%BA%E8%B0%83%E8%AF%95%E7%BB%93%E6%9E%9C.png)\n\n虽然p和q分别是两个函数的返回值，但是从结果可以看出他们指向的地址都是同一个\n**解析本函数的内存四区图：**\n\n![程序内存四区分析]($resource/%E7%A8%8B%E5%BA%8F%E5%86%85%E5%AD%98%E5%9B%9B%E5%8C%BA%E5%88%86%E6%9E%90.png)\n\n首先在栈中划定四个字节的区域放置指针p(因为指针在32位中都是四个字节)，因为值为NULL,所以并没有值；同时指针q也是这样；\n然后调用`get_str1`函数，在函数中定义的指针`str1`（在另一块栈区）指向字符串“abd”（存在全局区）,函数返回值为str1，即为该字符串的地址，而在main函数中该地址赋值给了指针p（调用完之后指针str1就消失了）,因此指针p指向了该字符串，最后打印输出\n同样因为该字符串并没有改变，因此系统不会将他存储两遍，所以地址是一样的；\n\n\n\n**分析栈区**\n以上的程序容易出现乱码的情况，因为栈中使用结束之后就会自动释放，释放之后无法确定系统中存储的是什么元素\n\n\n**分析堆区：**\n\n```c\n#include<stdio.h>\n#include<string.h>\n\nchar *get_str()\n{\n  char *tmp = (char *)malloc(100);\n  if(tmp = NULL)\n    {\n      return NULL;\n    }\n\n  strcpy(tmp ,\"abcdefghijklmnopqrst\");\n  return tmp;\n}\n\nint main(void)\n{\n    char buf[100] = {0};\n    char *p = NULL;\n    p = get_str();\n    if(p != NULL)\n      {\n        printf(\"p = %s\\n\",p);\n        free(p);//释放掉这个堆区，但是释放本质上并不是清空堆区中的内容，而只是取消p对于这个内存区域的使用权，本质上这个字符串仍然存储在堆区中；\n        p =NULL;//将这块堆区置零，防止下次使用的时候数据有问题；\n      }\n\nreturn 0 ;\n    \n\n}\n```\n![本程序对应内存四区示意图 2]($resource/%E6%9C%AC%E7%A8%8B%E5%BA%8F%E5%AF%B9%E5%BA%94%E5%86%85%E5%AD%98%E5%9B%9B%E5%8C%BA%E7%A4%BA%E6%84%8F%E5%9B%BE%202.png)\n\n\n\n**函数调用模型：**\n\n![函数调用模型]($resource/%E5%87%BD%E6%95%B0%E8%B0%83%E7%94%A8%E6%A8%A1%E5%9E%8B.png)\n\n\n**栈的生长方向：**\n\n![栈的生长方向]($resource/%E6%A0%88%E7%9A%84%E7%94%9F%E9%95%BF%E6%96%B9%E5%90%91.png)\n\n\n\n\n\n\n\n\n",[[1540376832510,["gjx16@GJXAIOU",[[1,2813,"\n"]],[2811,2811],[2812,2812]]],[1540376833105,["gjx16@GJXAIOU",[[1,2812,"---"]],[2812,2812],[2815,2815]]],[1540377414825,["gjx16@GJXAIOU",[[1,2743,"、、"]],[2743,2743],[2745,2745]]],[1540377415997,["gjx16@GJXAIOU",[[-1,2743,"、、"]],[2745,2745],[2743,2743]]],[1540377416873,["gjx16@GJXAIOU",[[1,2743,"、、"]],[2743,2743],[2745,2745]]],[1540377417820,["gjx16@GJXAIOU",[[-1,2743,"、、"]],[2745,2745],[2743,2743]]],[1540377438292,["gjx16@GJXAIOU",[[1,2743,"//实际使用的时候还是转换成需要的类型的指针"]],[2743,2743],[2765,2765]]],[1540377821140,["gjx16@GJXAIOU",[[1,2834,"\n"]],[2833,2833],[2834,2834]]],[1540377821285,["gjx16@GJXAIOU",[[1,2835,"\n"]],[2834,2834],[2835,2835]]],[1540377821414,["gjx16@GJXAIOU",[[1,2836,"\n"]],[2835,2835],[2836,2836]]],[1540377826687,["gjx16@GJXAIOU",[[1,2836,"- z"]],[2836,2836],[2839,2839]]],[1540377827228,["gjx16@GJXAIOU",[[-1,2838,"z"]],[2839,2839],[2838,2838]]],[1540377828791,["gjx16@GJXAIOU",[[1,2838,"ZHI"]],[2838,2838],[2841,2841]]],[1540377829515,["gjx16@GJXAIOU",[[-1,2838,"ZHI"]],[2841,2841],[2838,2838]]],[1540377865144,["gjx16@GJXAIOU",[[1,2838,"指针没有指向变量的话会造成没法分配内存空间"]],[2838,2838],[2859,2859]]],[1540377865716,["gjx16@GJXAIOU",[[1,2861," \n-"]],[2859,2859],[2862,2862]]],[1540377867356,["gjx16@GJXAIOU",[[-1,2860,"- "]],[2862,2862],[2860,2860]]],[1540377870390,["gjx16@GJXAIOU",[[1,2860,"```c"]],[2860,2860],[2864,2864]]],[1540377870644,["gjx16@GJXAIOU",[[1,2865,"\n"]],[2864,2864],[2865,2865]]],[1540377871012,["gjx16@GJXAIOU",[[1,2866,"\n"]],[2865,2865],[2866,2866]]],[1540377871187,["gjx16@GJXAIOU",[[1,2867,"\n"]],[2866,2866],[2867,2867]]],[1540377871365,["gjx16@GJXAIOU",[[1,2868,"\n"]],[2867,2867],[2868,2868]]],[1540377871540,["gjx16@GJXAIOU",[[1,2869,"\n"]],[2868,2868],[2869,2869]]],[1540377872373,["gjx16@GJXAIOU",[[1,2869,"```"]],[2869,2869],[2872,2872]]],[1540377879311,["gjx16@GJXAIOU",[[1,2865,"#include<>"]],[2865,2865],[2875,2875]]],[1540377882541,["gjx16@GJXAIOU",[[1,2874,"stdio.h"]],[2874,2874],[2881,2881]]],[1540377884317,["gjx16@GJXAIOU",[[1,2886,"\n"]],[2882,2882],[2883,2883]]],[1540377888397,["gjx16@GJXAIOU",[[1,2883,"#includeM<<>"]],[2883,2883],[2895,2895]]],[1540377890007,["gjx16@GJXAIOU",[[-1,2891,"M<<>"]],[2895,2895],[2891,2891]]],[1540377891190,["gjx16@GJXAIOU",[[1,2891,"<>"]],[2891,2891],[2893,2893]]],[1540377894685,["gjx16@GJXAIOU",[[1,2892,"string.h"]],[2892,2892],[2900,2900]]],[1540377896462,["gjx16@GJXAIOU",[[1,2905,"\n"]],[2901,2901],[2902,2902]]],[1540377896636,["gjx16@GJXAIOU",[[1,2906,"\n"]],[2902,2902],[2903,2903]]],[1540377899886,["gjx16@GJXAIOU",[[1,2903,"int main()"]],[2903,2903],[2913,2913]]],[1540377900429,["gjx16@GJXAIOU",[[1,2917,"\n"]],[2913,2913],[2914,2914]]],[1540377904181,["gjx16@GJXAIOU",[[1,2912,"void"]],[2912,2912],[2916,2916]]],[1540377905974,["gjx16@GJXAIOU",[[1,2922,"\n"]],[2917,2917],[2918,2918]]],[1540377907062,["gjx16@GJXAIOU",[[1,2918,"{}"]],[2918,2918],[2920,2920]]],[1540377908556,["gjx16@GJXAIOU",[[1,2919,"\n"]],[2919,2919],[2920,2920]]],[1540377908885,["gjx16@GJXAIOU",[[1,2920,"\n"]],[2920,2920],[2921,2921]]],[1540377909059,["gjx16@GJXAIOU",[[1,2921,"\n"]],[2921,2921],[2922,2922]]],[1540377928888,["gjx16@GJXAIOU",[[1,2920,"  char *p = NULL;"]],[2920,2920],[2937,2937]]],[1540377929452,["gjx16@GJXAIOU",[[1,2938,"  \n"]],[2937,2937],[2940,2940]]],[1540377945253,["gjx16@GJXAIOU",[[1,2940,"srecpy"]],[2940,2940],[2946,2946]]],[1540377947115,["gjx16@GJXAIOU",[[-1,2941,"recpy"]],[2946,2946],[2941,2941]]],[1540377953197,["gjx16@GJXAIOU",[[1,2941,"trcpy();"]],[2941,2941],[2949,2949]]],[1540377983182,["gjx16@GJXAIOU",[[1,2947,"\"\""]],[2947,2947],[2949,2949]]],[1540377987351,["gjx16@GJXAIOU",[[1,2948,"%s"]],[2948,2948],[2950,2950]]],[1540377995037,["gjx16@GJXAIOU",[[-1,2947,"\"%s\""]],[2951,2951],[2947,2947]]],[1540377997885,["gjx16@GJXAIOU",[[1,2947,"p ,\"\""]],[2947,2947],[2952,2952]]],[1540378002090,["gjx16@GJXAIOU",[[1,2951,"nihyoa"]],[2951,2951],[2957,2957]]],[1540378002981,["gjx16@GJXAIOU",[[-1,2954,"yoa"]],[2957,2957],[2954,2954]]],[1540378003830,["gjx16@GJXAIOU",[[1,2954,"ao"]],[2954,2954],[2956,2956]]],[1540378006382,["gjx16@GJXAIOU",[[1,2960,"  \n"]],[2959,2959],[2962,2962]]],[1540378010493,["gjx16@GJXAIOU",[[1,2962,"pritnf"]],[2962,2962],[2968,2968]]],[1540378011259,["gjx16@GJXAIOU",[[-1,2965,"tnf"]],[2968,2968],[2965,2965]]],[1540378015861,["gjx16@GJXAIOU",[[1,2965,"ntf();"]],[2965,2965],[2971,2971]]],[1540378018357,["gjx16@GJXAIOU",[[1,2969,"\"\""]],[2969,2969],[2971,2971]]],[1540378021109,["gjx16@GJXAIOU",[[1,2970,"%s"]],[2970,2970],[2972,2972]]],[1540378033949,["gjx16@GJXAIOU",[[1,2973,",p"]],[2973,2973],[2975,2975]]],[1540378049611,["gjx16@GJXAIOU",[[1,2978,"  \n"]],[2977,2977],[2980,2980]]],[1540378052034,["gjx16@GJXAIOU",[[1,2980,"reru"]],[2980,2980],[2984,2984]]],[1540378053131,["gjx16@GJXAIOU",[[-1,2982,"ru"]],[2984,2984],[2982,2982]]],[1540378053717,["gjx16@GJXAIOU",[[1,2982,"r"]],[2982,2982],[2983,2983]]],[1540378054547,["gjx16@GJXAIOU",[[-1,2982,"ru"]],[2984,2984],[2982,2982]]],[1540378057597,["gjx16@GJXAIOU",[[1,2982,"turn 0;"]],[2982,2982],[2989,2989]]],[1540378593828,[null,[[1,2990,"\n"]],[2990,2990],[2991,2991]]],[1540378593829,[null,[[-1,2990,"\n"]],[2991,2991],[2990,2990]]],[1540378559617,["gjx16@GJXAIOU",[[1,2883,"\n"],[1,2907," "],[1,2917,"\n"],[1,2920,"\n"],[1,2926," "],[1,2930," "],[1,2931," "],[1,2938,"\n  char  str[100]  =  {0};\n\n  p  =  str;\n\n"],[-1,2948," "],[1,2959,"\n"],[1,2978,"\n"],[1,2986," "]],[2865,2992],[3043,3043]]],[1540378561515,["gjx16@GJXAIOU",[[-1,2883,"\n"]],[2883,2883],[2882,2882]]],[1540378564149,["gjx16@GJXAIOU",[[-1,2919,"\n"]],[2919,2919],[2918,2918]]],[1540378565882,["gjx16@GJXAIOU",[[-1,2921,"\n"]],[2921,2921],[2920,2920]]],[1540378567602,["gjx16@GJXAIOU",[[-1,2942,"\n"]],[2942,2942],[2941,2941]]],[1540378569434,["gjx16@GJXAIOU",[[-1,2968,"\n"]],[2968,2968],[2967,2967]]],[1540378571107,["gjx16@GJXAIOU",[[-1,2981,"\n"]],[2981,2981],[2980,2980]]],[1540378573635,["gjx16@GJXAIOU",[[-1,3002,"\n"]],[3002,3002],[3001,3001]]],[1540378583227,["gjx16@GJXAIOU",[[-1,3040,"\n"]],[3040,3040],[3039,3039]]],[1540378583386,["gjx16@GJXAIOU",[[-1,3039,"\n"]],[3039,3039],[3038,3038]]],[1540378583858,["gjx16@GJXAIOU",[[-1,3038,"\n"]],[3038,3038],[3037,3037]]],[1540378587620,["gjx16@GJXAIOU",[[1,3042,"\n"]],[3041,3041],[3042,3042]]],[1540378589645,["gjx16@GJXAIOU",[[1,3042,"rug"]],[3042,3042],[3045,3045]]],[1540378590499,["gjx16@GJXAIOU",[[-1,3042,"rug"]],[3045,3045],[3042,3042]]],[1540378592862,["gjx16@GJXAIOU",[[1,3042,"如果"]],[3042,3042],[3044,3044]]],[1540378653829,[null,[[1,3034,"\n"],[-1,3037,"\n"],[1,3038,"`"],[-1,3041,"-"],[1,3045,"-"]],[3034,3034],[3046,3046]]],[1540378653829,[null,[[-1,3034,"\n"],[1,3038,"\n"],[-1,3038,"`"],[1,3042,"-"],[-1,3045,"-"]],[3046,3046],[3034,3034]]],[1540378594935,["gjx16@GJXAIOU",[[1,3044,"直接使用"]],[3044,3044],[3048,3048]]],[1540378599186,["gjx16@GJXAIOU",[[1,3042,"\n"]],[3042,3042],[3043,3043]]],[1540378600650,["gjx16@GJXAIOU",[[1,3050,"\n"]],[3050,3050],[3051,3051]]],[1540378600789,["gjx16@GJXAIOU",[[1,3051,"\n"]],[3051,3051],[3052,3052]]],[1540378612498,["gjx16@GJXAIOU",[[-1,3045,"直接使用"]],[3049,3049],[3045,3045]]],[1540378620852,["gjx16@GJXAIOU",[[1,3045,"没有定义`CHAR"]],[3045,3045],[3054,3054]]],[1540378622524,["gjx16@GJXAIOU",[[-1,3050,"CHAR"]],[3054,3054],[3050,3050]]],[1540378628204,["gjx16@GJXAIOU",[[1,3050,"chaR"]],[3050,3050],[3054,3054]]],[1540378629074,["gjx16@GJXAIOU",[[-1,3053,"R"]],[3054,3054],[3053,3053]]],[1540378629339,["gjx16@GJXAIOU",[[1,3053,"  "]],[3053,3053],[3055,3055]]],[1540378630938,["gjx16@GJXAIOU",[[-1,3054," "]],[3055,3055],[3054,3054]]],[1540378631093,["gjx16@GJXAIOU",[[1,3054,"R"]],[3054,3054],[3055,3055]]],[1540378631780,["gjx16@GJXAIOU",[[-1,3053," R"]],[3055,3055],[3053,3053]]],[1540378649514,["gjx16@GJXAIOU",[[1,3053,"r str[100]`就会导致指针篇"]],[3053,3053],[3071,3071]]],[1540378650202,["gjx16@GJXAIOU",[[-1,3070,"篇"]],[3071,3071],[3070,3070]]],[1540378653701,["gjx16@GJXAIOU",[[1,3070,"P没有 "]],[3070,3070],[3074,3074]]],[1540378713834,[null,[[-1,3034,"}"],[1,3036,"}"],[1,3040,"`"],[-1,3041,"-"],[1,3077,"-"]],[3034,3034],[3078,3078]]],[1540378713834,[null,[[1,3034,"}"],[-1,3035,"}"],[-1,3040,"`"],[1,3042,"-"],[-1,3077,"-"]],[3078,3078],[3034,3034]]],[1540378654486,["gjx16@GJXAIOU",[[1,3074,"被"]],[3074,3074],[3075,3075]]],[1540378656100,["gjx16@GJXAIOU",[[-1,3073," 被"]],[3075,3075],[3073,3073]]],[1540378670621,["gjx16@GJXAIOU",[[1,3073,"被分配空间，造成程序错误"]],[3073,3073],[3085,3085]]],[1540378953841,[null,[[-1,3034,"}"],[1,3036,"}"],[1,3040,"`"],[-1,3041,"-"],[1,3088,"-"]],[3034,3034],[3089,3089]]],[1540378953841,[null,[[1,3034,"}"],[-1,3035,"}"],[-1,3040,"`"],[1,3042,"-"],[-1,3088,"-"]],[3089,3089],[3034,3034]]],[1540378933332,["gjx16@GJXAIOU",[[1,3144,"，I"]],[3144,3144],[3146,3146]]],[1540378936165,["gjx16@GJXAIOU",[[-1,3143,"含，I"]],[3146,3146],[3143,3143]]],[1540378937844,["gjx16@GJXAIOU",[[1,3143,"H"]],[3143,3143],[3144,3144]]],[1540378939449,["gjx16@GJXAIOU",[[-1,3143,"H"]],[3144,3144],[3143,3143]]],[1540378942984,["gjx16@GJXAIOU",[[1,3143,"HAN"]],[3143,3143],[3146,3146]]],[1540378943835,["gjx16@GJXAIOU",[[-1,3143,"HAN"]],[3146,3146],[3143,3143]]],[1540378953298,["gjx16@GJXAIOU",[[1,3143,"含，只需要在所有的"]],[3143,3143],[3152,3152]]],[1540379013844,[null,[[1,3034,"\n"],[-1,3037,"\n"],[1,3038,"`"],[-1,3041,"-"],[-1,3090,""],[1,3090,"-"],[-1,3143,"含"],[1,3152,"："]],[3034,3034],[3153,3153]]],[1540379013844,[null,[[-1,3034,"\n"],[1,3038,"\n"],[-1,3038,"`"],[1,3042,"-"],[1,3090,""],[-1,3090,"-"],[1,3144,"含"],[-1,3152,"："]],[3153,3153],[3034,3034]]],[1540378966103,["gjx16@GJXAIOU",[[1,3152,"头文件（）"]],[3152,3152],[3157,3157]]],[1540378967948,["gjx16@GJXAIOU",[[1,3156,"。"]],[3156,3156],[3157,3157]]],[1540378969362,["gjx16@GJXAIOU",[[-1,3156,"。"]],[3157,3157],[3156,3156]]],[1540378973965,["gjx16@GJXAIOU",[[1,3156,".h文件"]],[3156,3156],[3160,3160]]],[1540378977164,["gjx16@GJXAIOU",[[1,3161,"最强"]],[3161,3161],[3163,3163]]],[1540378978001,["gjx16@GJXAIOU",[[-1,3161,"最强"]],[3163,3163],[3161,3161]]],[1540378987790,["gjx16@GJXAIOU",[[1,3161,"里面最前面加上"]],[3161,3161],[3168,3168]]],[1540378988157,["gjx16@GJXAIOU",[[1,3169,"："]],[3168,3168],[3169,3169]]],[1540378988842,["gjx16@GJXAIOU",[[-1,3169,"："]],[3169,3169],[3168,3168]]],[1540380153861,[null,[[1,3034,"\n"],[-1,3037,"\n"],[1,3038,"`"],[-1,3041,"-"],[-1,3090,""],[1,3090,"-"],[-1,3143,"含"],[1,3168,"："]],[3034,3034],[3169,3169]]],[1540380153861,[null,[[-1,3034,"\n"],[1,3038,"\n"],[-1,3038,"`"],[1,3042,"-"],[1,3090,""],[-1,3090,"-"],[1,3144,"含"],[-1,3168,"："]],[3169,3169],[3034,3034]]],[1540380126805,["gjx16@GJXAIOU",[[1,3001,"、、"]],[3001,3001],[3003,3003]]],[1540380127856,["gjx16@GJXAIOU",[[-1,3001,"、、"]],[3003,3003],[3001,3001]]],[1540380128674,["gjx16@GJXAIOU",[[1,3001,"."]],[3001,3001],[3002,3002]]],[1540380129136,["gjx16@GJXAIOU",[[-1,3001,"."]],[3002,3002],[3001,3001]]],[1540380150188,["gjx16@GJXAIOU",[[1,3001,"//拷贝是将这个字符串拷贝到该指针指向的"]],[3001,3001],[3021,3021]]],[1540380213864,[null,[[1,3054,"\n"],[-1,3057,"\n"],[1,3058,"`"],[-1,3061,"-"],[-1,3110,""],[1,3110,"-"],[-1,3163,"含"],[1,3188,"："]],[3054,3054],[3189,3189]]],[1540380213864,[null,[[-1,3054,"\n"],[1,3058,"\n"],[-1,3058,"`"],[1,3062,"-"],[1,3110,""],[-1,3110,"-"],[1,3164,"含"],[-1,3188,"："]],[3189,3189],[3054,3054]]],[1540380162557,["gjx16@GJXAIOU",[[1,3021,"内存区域，而不是给这个指针"]],[3021,3021],[3034,3034]]]],null,"gjx16@GJXAIOU"],["0e946e9f-9d7f-4c46-8abc-b2b494a711d3",1540624532927,"---\n1.概述：学习要求，学习标准\n2.数据类型、变量\n3.内存四区（栈、堆、全局、代码区）\n4.说明：本系列代码使用VS2017进行测试运行，代码位置为：\nE:\\Program\\C++\\C++\\practice\\programs\\Cenhance\\Cenhance_1\\Cenhance_1\n---\n\n# day01 数据类型和内存四区\n\n\n## 数据类型\n\n\n1.**学习历程**\n\n![学习历程]($resource/%E5%AD%A6%E4%B9%A0%E5%8E%86%E7%A8%8B.png)\n\n2.**如何看懂带算法的程序**\n\n- 看懂流程\n- 每个语句的功能\n- 试数\n- 调试\n- 模仿改\n- 不看代码自己写\n\n\n----\n\n3.**选择法排序**\n\n```c\n#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n\nint main(void)\n{\n    int array[] = {1,4,6,9,0,4,3,5,2};\n    int num = 0;\n    num = sizeof(array)/sizeof(array[0]);//求数组元素个数\n  int i = 0 ;\n  for(i = 0; i < num ; i++)\n    {\n        printf(\"before = %d \\n\",array[i]);\n    }\n    printf(\"------------------\\n\");\n\n\n\n  //选择法进行排序\n\n  int j = 0;\n  int tmp= 0;\n  for(i = 0 ; i < num -1; i++)\n    {\n        for(j = i +1; j < num ; j++)\n          {\n              if(array[i] > array[j])\n                {\n                  tmp = array[i];\n                  array[i] = array[j];\n                  array[j] = tmp;\n                }\n          }\n    }\n    for(i = 0; i < num ; i++)\n        {\n            printf(\"after = %d \\n\",array[i]);\n        }\n    \n    system(\"pause\");\n    return 0;\n}\n```\n程序运行结果；\n\n![排序]($resource/%E6%8E%92%E5%BA%8F.png)\n\n---\n\n4.**将上面的程序进行函数封装**\n\n```c\n#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n\n\nvoid printf_array(int *array, int num)\n{\n\tint i = 0;\n\tfor (i = 0; i < num; i++)\n\t{\n\t\tprintf(\"%d \\n\", array[i]);\n\t}\n}\n\n\n//如果数组作为函数参数，则数组形参退化为指针\n//下面的第一个参数可以是*array，或者为：array[],或者为：array[1]，或者array[10]等等\nvoid sort_array(int *array, int num)\n{\n\t//选择法进行排序\n\tint i = 0;\n\tint j = 0;\n\tint tmp = 0;\n\tfor (i = 0; i < num - 1; i++)\n\t{\n\t\tfor (j = i + 1; j < num; j++)\n\t\t{\n\t\t\tif (array[i] > array[j])\n\t\t\t{\n\t\t\t\ttmp = array[i];\n\t\t\t\tarray[i] = array[j];\n\t\t\t\tarray[j] = tmp;\n\t\t\t}\n\t\t}\n\t}\n\n}\n\n\nint main(void)\n{\n\tint array[] = { 1,4,6,9,0,4,3,5,2 };\n\tint num = 0;\n\tnum = sizeof(array) / sizeof(array[0]);\n\n\tprintf(\"before = \\n\");\n\tprintf_array(array, num);\n\tprintf(\"------------------\\n\");\n\tprintf(\"after = \\n\");\n\tsort_array(array, num);\n\tprintf_array(array, num);\n\tsystem(\"pause\");\n\treturn 0;\n}\n```\n程序运行结果；\n\n![函数封装之后排序]($resource/%E5%87%BD%E6%95%B0%E5%B0%81%E8%A3%85%E4%B9%8B%E5%90%8E%E6%8E%92%E5%BA%8F.png)\n\n\n----\n\n5.**void 无类型**\n\n- 函数参数为空，定义函数时，可以用void修饰：例如：`int fun(void)`\n- 函数没有返回值：`void fun(void)`\n- 不能定义void类型的普通变量\n- 可以使用定义void *变量 ： `void *p`,其中在32位系统中为4个字节，在64位系统中占64字节\n- 数据类型本质：固定内存块大小别名\n- void *p  万能指针，可以作为函数返回值，函数参数\n\n**例子程序:**  void *p的万能指针，在实际使用中一定要变换成实际类型的指针\n\n```c\n#include<stdio.h>\n#include<string.h>\n\nint  main(void)\n{\n  void  *p  =  0x1222;\n  char  buf[100]  =  \"djfkdjhf\";\n  p  =  buf;\n  printf(\"  p  =  %s\\n\",(char  *)p);//实际使用时候转换成需要的类型的指针\n \n  \n  int  a[100]  =  {1,2,3,4};\n  p =  a;\n  int  i  =  0;\n  for(i  =  0;  i  <  4;  i++)\n    {\n      printf(\"%d\\n\",*((int  *)p  +  i));//实际使用的时候还是转换成需要的类型的指针\n    }\n\n  return  0;\n\n}\n\n```\n程序运行结果：\n`p = djfkdjhf`\n`1`\n`2`\n`3`\n`4`\n\n\n\n- 指针没有指向变量的话会造成没法分配内存空间\n```c\n#include<stdio.h>\n#include<string.h>\n\nint  main(void)\n{\n  char  *p  =  NULL;\n  char  str[100]  =  {0};\n  p  =  str;\n  strcpy(p,\"nihao\");//拷贝是将这个字符串拷贝到该指针指向的内存区域，而不是给这个指针\n  printf(\"%s\",p);\n\n  return  0;\n\n}\n\n```\n\n如果没有定义`char str[100]`就会导致指针P没有被分配空间，造成程序错误\n\n\n---\n\n6.**程序分文件**\n\n- **要求：** 按照函数的功能分文件\n- 分文件时候，防止头文件重复包含，只需要在所有的头文件（.h文件）里面最前面加上：`#pragma once`\n- 让C语言代码可以在C++的编译器中编译运行\n```c\n#ifdef_cplusplus\nextern \"C\" {\n#endif\n\n//函数的声明\n\n#ifdef_cplusplus\n}\n#endif\n```\n\n7.**数据类型**\n - 类型的本质：固定内存大小的别名\n - 数据类型的作用：编译器预算对象（变量）分配的内存空间大小，只有当变量定义的时候才真正的将这个空间分配出去；\n - 数据类型可以通过typedef其别名\n\n\n\n## 变量\n\n\n## 内存四区\n\n此程序说明内存四区划分\n\n```c\n#include<stdio.h>\n#include<stdlib.h>\n\nchar *get_str1()\n{\n  int *str1 = \"abd\";\n  return str1;\n}\n\nchar *get_str2()\n{\n  int *str2 = \"abd\";\n  return str2;\n}\n\n\n\nint main(void)\n{\n  char *p = NULL;\n  char *q = NULL;\n\n  p = get_str1();\n  q = get_str2();\n\n  printf(\"p = %s,&p = %d\\n\",p ,p);\n  printf(\"q = %s ,&q = %d\\n\",q,q);\n  system(\"pause\");\n  return 0;\n\n}\n\n```\n程序运行结果：\n\n![内存四区调试结果]($resource/%E5%86%85%E5%AD%98%E5%9B%9B%E5%8C%BA%E8%B0%83%E8%AF%95%E7%BB%93%E6%9E%9C.png)\n\n虽然p和q分别是两个函数的返回值，但是从结果可以看出他们指向的地址都是同一个\n**解析本函数的内存四区图：**\n\n![程序内存四区分析]($resource/%E7%A8%8B%E5%BA%8F%E5%86%85%E5%AD%98%E5%9B%9B%E5%8C%BA%E5%88%86%E6%9E%90.png)\n\n首先在栈中划定四个字节的区域放置指针p(因为指针在32位中都是四个字节)，因为值为NULL,所以并没有值；同时指针q也是这样；\n然后调用`get_str1`函数，在函数中定义的指针`str1`（在另一块栈区）指向字符串“abd”（存在全局区）,函数返回值为str1，即为该字符串的地址，而在main函数中该地址赋值给了指针p（调用完之后指针str1就消失了）,因此指针p指向了该字符串，最后打印输出\n同样因为该字符串并没有改变，因此系统不会将他存储两遍，所以地址是一样的；\n\n\n\n**分析栈区**\n以上的程序容易出现乱码的情况，因为栈中使用结束之后就会自动释放，释放之后无法确定系统中存储的是什么元素\n\n\n**分析堆区：**\n\n```c\n#include<stdio.h>\n#include<string.h>\n\nchar *get_str()\n{\n  char *tmp = (char *)malloc(100);\n  if(tmp = NULL)\n    {\n      return NULL;\n    }\n\n  strcpy(tmp ,\"abcdefghijklmnopqrst\");\n  return tmp;\n}\n\nint main(void)\n{\n    char buf[100] = {0};\n    char *p = NULL;\n    p = get_str();\n    if(p != NULL)\n      {\n        printf(\"p = %s\\n\",p);\n        free(p);//释放掉这个堆区，但是释放本质上并不是清空堆区中的内容，而只是取消p对于这个内存区域的使用权，本质上这个字符串仍然存储在堆区中；\n        p =NULL;//将这块堆区置零，防止下次使用的时候数据有问题；\n      }\n\nreturn 0 ;\n    \n\n}\n```\n![本程序对应内存四区示意图 2]($resource/%E6%9C%AC%E7%A8%8B%E5%BA%8F%E5%AF%B9%E5%BA%94%E5%86%85%E5%AD%98%E5%9B%9B%E5%8C%BA%E7%A4%BA%E6%84%8F%E5%9B%BE%202.png)\n\n\n\n**函数调用模型：**\n\n![函数调用模型]($resource/%E5%87%BD%E6%95%B0%E8%B0%83%E7%94%A8%E6%A8%A1%E5%9E%8B.png)\n\n\n**栈的生长方向：**\n\n![栈的生长方向]($resource/%E6%A0%88%E7%9A%84%E7%94%9F%E9%95%BF%E6%96%B9%E5%90%91.png)\n\n\n\n\n\n\n\n\n",[[1540624492128,["gjx16@GJXAIOU",[[1,176,"yi"]],[176,176],[178,178]]],[1540624493273,["gjx16@GJXAIOU",[[-1,176,"yi"]],[178,178],[176,176]]],[1540624495213,["gjx16@GJXAIOU",[[1,176,"一、"]],[176,176],[178,178]]],[1540624761110,["gjx16@GJXAIOU",[[1,327,"\n"]],[326,326],[327,327]]],[1540624761934,["gjx16@GJXAIOU",[[1,327,"**5.冒泡排序**\n```c\nint main()\n{\n  int array[10] = {1,4,8,0,9,34,98,100,5,3};\n  int i;\n  int j;\n  for(i = 0;i < 10;i++)\n    {\n      for(j = 1; j < 10-i;j++)\n      {\n        if(array[j-1] >array[j])\n          {\n            int tmp;\n            tmp = array[j];\n            array[j] = array[j-1];\n            array[j-1] = tmp;\n          }\n      }\n    }\n    for(i = 0;i < 10;i++)\n    {\n    printf(\"array[%d] = %d\\n\",i,array[i]);\n    }\n  return 0;\n}\n```"]],[327,327],[771,771]]],[1540624766947,["gjx16@GJXAIOU",[[1,326,"3、"]],[326,326],[328,328]]],[1540624768177,["gjx16@GJXAIOU",[[-1,327,"、"]],[328,328],[327,327]]],[1540624768868,["gjx16@GJXAIOU",[[1,327,"。"]],[327,327],[328,328]]],[1540624769790,["gjx16@GJXAIOU",[[-1,327,"。"]],[328,328],[327,327]]],[1540624771700,["gjx16@GJXAIOU",[[1,327,".****"]],[327,327],[330,330]]],[1540624776917,["gjx16@GJXAIOU",[[1,330,"排序方法："]],[330,330],[335,335]]],[1540624780837,["gjx16@GJXAIOU",[[-1,340,"5."]],[342,342],[340,340]]],[1540624783404,["gjx16@GJXAIOU",[[1,338,"- "]],[338,338],[340,340]]],[1540624788077,["gjx16@GJXAIOU",[[-1,783,"3."]],[785,785],[783,783]]],[1540624788745,["gjx16@GJXAIOU",[[1,783,"- "]],[783,783],[785,785]]],[1540625196905,["gjx16@GJXAIOU",[[-1,875,"    "],[1,879,"\t"],[1,894," "],[1,911," "],[-1,914,"    "],[1,918,"\t"],[-1,931,"    "],[1,935,"\t"],[1,954," "],[1,955," "],[-1,981,"\n  "],[1,984,",只能使用在定义的时候没有确定数组长度的情况\n\n\n\n\n\t//将排序前的数组打印出来进行对比\n\t"],[-1,993," "],[-1,996,"  "],[1,998,"\t"],[1,1001," "],[-1,1016," "],[-1,1024,"    {\n        "],[1,1038,"\t{\n\t\t"],[1,1062," "],[-1,1073,"    }\n    "],[1,1083,"\t}\n\t"],[-1,1118,"  "],[1,1120,"\t"],[-1,1131,"  "],[1,1133,"\t"],[-1,1144,"  "],[1,1146,"\t"],[1,1153," "],[-1,1158,"  "],[1,1160,"\t"],[1,1163," "],[-1,1169," "],[1,1181," "],[-1,1189,"    {\n        "],[1,1203,"\t{\n\t\t"],[1,1206," "],[1,1214," "],[-1,1224," "],[-1,1232,"          {\n              "],[1,1258,"\t\t{\n\t\t\t"],[1,1260," "],[-1,1282,"                {\n                  "],[1,1318,"\t\t\t{\n\t\t\t\t"],[-1,1334,"                  "],[1,1352,"\t\t\t\t"],[-1,1373,"                  "],[1,1391,"\t\t\t\t"],[-1,1407,"                }\n          }\n    }\n    "],[1,1447,"\t\t\t}\n\t\t}\n\t}\n\t"],[1,1450," "],[-1,1465," "],[-1,1473,"        {\n            "],[1,1495,"\t{\n\t\t"],[1,1518," "],[-1,1529,"        }\n    \n    "],[1,1548,"\t}\n\n\t"],[-1,1565,"    "],[1,1569,"\t"]],[801,1580],[1460,1460]]],[1540625740287,["gjx16@GJXAIOU",[[1,354,"#"],[-1,356,"t main()\n{\n  "],[1,369,"clude<stdio.h>\n#include<string.h>\n#include<stdlib.h>\n\n\n//将数组中的元素进行排序\nvoid sort_array("],[-1,379,"10] = {1,4,8,0,9,34,98,100,5,3};\n  "],[1,414,"], int num)\n{\n\t"],[-1,421,"  "],[1,423,"\t"],[-1,430,"  "],[1,432,"\t"],[1,435," "],[1,442," "],[-1,446,"10;"],[1,449,"num; "],[-1,454,"    {\n      "],[1,466,"\t{\n\t\t"],[1,469," "],[-1,481,"10-"],[1,484,"num - "],[1,486," "],[-1,491,"      {\n        "],[1,507,"\t\t{\n\t\t\t"],[1,509," "],[1,517," "],[1,518," "],[1,522," "],[-1,532,"          {\n            "],[1,556,"\t\t\t{\n\t\t\t\t"],[-1,565,"            "],[1,577,"\t\t\t\t"],[-1,593,"            "],[1,605,"\t\t\t\t"],[1,623," "],[1,624," "],[-1,628,"            "],[1,640,"\t\t\t\t"],[1,647," "],[1,648," "],[-1,658,"          }\n      }\n    }\n    "],[1,688,"\t\t\t}\n\t\t}\n\t}\n\n}\n\n//将排序之后的数组打印出来\n\nvoid print_array(int array[], int num)\n{\n\tint i = 0;\n\t"],[1,691," "],[1,698," "],[-1,702,"10;"],[1,705,"num; "],[-1,710,"    {\n    "],[1,720,"\t{\n\t\t"],[1,746," "],[1,748," "],[1,759,"\t}\n\n}\n\n\nint"],[1,760,"main()\n{\n\tint"],[1,761,"array[]"],[1,762,"= { 1,4,8,0,9,34,98,100,5,3"],[1,764,";"],[1,765,"\tint"],[1,766,"num ="],[1,767,"sizeof(array) / sizeof(int);//求出数组元素的长度\n\n\tsort_array(array, num);\n\tprint_array(array, num);\n\t\n\tsystem(\"pause\");\n\t"]],[354,778],[1029,1029]]],[1540625746652,["gjx16@GJXAIOU",[[1,687,"\n"]],[686,686],[687,687]]],[1540625746768,["gjx16@GJXAIOU",[[1,688,"\n"]],[687,687],[688,688]]],[1540625750487,["gjx16@GJXAIOU",[[-1,683,"\n"]],[683,683],[682,682]]],[1540626592369,["gjx16@GJXAIOU",[[1,508,"、、"]],[508,508],[510,510]]],[1540626593522,["gjx16@GJXAIOU",[[-1,508,"、、"]],[510,510],[508,508]]],[1540626594000,["gjx16@GJXAIOU",[[1,508,"？、"]],[508,508],[510,510]]],[1540626595359,["gjx16@GJXAIOU",[[-1,508,"？、"]],[510,510],[508,508]]],[1540626604313,["gjx16@GJXAIOU",[[1,508,"//这里等价于：fp"]],[508,508],[518,518]]],[1540626605511,["gjx16@GJXAIOU",[[-1,517,"p"]],[518,518],[517,517]]],[1540626607953,["gjx16@GJXAIOU",[[1,517,"or()"]],[517,517],[521,521]]],[1540626613995,["gjx16@GJXAIOU",[[1,520,"i = o;"]],[520,520],[526,526]]],[1540626615588,["gjx16@GJXAIOU",[[-1,524,"o;"]],[526,526],[524,524]]],[1540626626202,["gjx16@GJXAIOU",[[1,524,"0; i < num -1; i++"]],[524,524],[542,542]]],[1540626639348,["gjx16@GJXAIOU",[[1,578,"//这里"]],[578,578],[582,582]]],[1540626641885,["gjx16@GJXAIOU",[[1,582,"等价于；"]],[582,582],[586,586]]],[1540626643103,["gjx16@GJXAIOU",[[-1,585,"；"]],[586,586],[585,585]]],[1540626647769,["gjx16@GJXAIOU",[[1,585,"：for()"]],[585,585],[591,591]]],[1540626651313,["gjx16@GJXAIOU",[[1,590,"i "]],[590,590],[592,592]]],[1540626654448,["gjx16@GJXAIOU",[[-1,590,"i "]],[592,592],[590,590]]],[1540626663443,["gjx16@GJXAIOU",[[1,590,"j = 0; i < num =i"]],[590,590],[607,607]]],[1540626664112,["gjx16@GJXAIOU",[[-1,605,"=i"]],[607,607],[605,605]]],[1540626671574,["gjx16@GJXAIOU",[[1,605,"- i -1; j++"]],[605,605],[616,616]]],[1540627233127,["gjx16@GJXAIOU",[[1,1109,"\n"]],[1108,1108],[1109,1109]]],[1540627233808,["gjx16@GJXAIOU",[[1,1109,"程序运行结果：\n`array[0] = 0`\n`array[1] = 1`\n`array[2] = 3`\n`array[3] = 4`\n`array[4] = 5`\n`array[5] = 8`\n`array[6] = 9`\n`array[7] = 34`\n`array[8] = 98`\n`array[9] = 100`"]],[1109,1109],[1270,1270]]],[1540627236882,["gjx16@GJXAIOU",[[1,1271,"\n"]],[1270,1270],[1271,1271]]],[1540627237017,["gjx16@GJXAIOU",[[1,1272,"\n"]],[1271,1271],[1272,1272]]],[1540641764075,["gjx16@GJXAIOU",[[-1,1963,"\n![排序]($resource/%E6%8E%92%E5%BA%8F.png)"],[1,2003,"before = 1\nbefore = 4\nbefore = 6\nbefore = 9\nbefore = 0\nbefore = 4\nbefore = 3\nbefore = 5\nbefore = 2\n------------------\nafter = 0\nafter = 1\nafter = 2\nafter = 3\nafter = 4\nafter = 4\nafter = 5\nafter = 6\nafter = 9"]],[1963,2003],[2170,2170]]],[1540641767414,["gjx16@GJXAIOU",[[1,2062,"\n"]],[2061,2061],[2062,2062]]],[1540641770450,["gjx16@GJXAIOU",[[1,1963,"`"]],[1963,1963],[1964,1964]]],[1540641774176,["gjx16@GJXAIOU",[[1,1975,"`"]],[1975,1975],[1976,1976]]],[1540641774876,["gjx16@GJXAIOU",[[1,1987,"`"]],[1987,1987],[1988,1988]]],[1540641775489,["gjx16@GJXAIOU",[[1,1999,"`"]],[1999,1999],[2000,2000]]],[1540641776079,["gjx16@GJXAIOU",[[1,2011,"`"]],[2011,2011],[2012,2012]]],[1540641776714,["gjx16@GJXAIOU",[[1,2023,"`"]],[2023,2023],[2024,2024]]],[1540641777276,["gjx16@GJXAIOU",[[1,2035,"`"]],[2035,2035],[2036,2036]]],[1540641778227,["gjx16@GJXAIOU",[[1,2047,"`"]],[2047,2047],[2048,2048]]],[1540641778800,["gjx16@GJXAIOU",[[1,2059,"`"]],[2059,2059],[2060,2060]]],[1540641782340,["gjx16@GJXAIOU",[[1,2091,"`"]],[2091,2091],[2092,2092]]],[1540641783048,["gjx16@GJXAIOU",[[1,2102,"`"]],[2102,2102],[2103,2103]]],[1540641783529,["gjx16@GJXAIOU",[[1,2113,"`"]],[2113,2113],[2114,2114]]],[1540641783964,["gjx16@GJXAIOU",[[1,2124,"`"]],[2124,2124],[2125,2125]]],[1540641784372,["gjx16@GJXAIOU",[[1,2135,"`"]],[2135,2135],[2136,2136]]],[1540641784842,["gjx16@GJXAIOU",[[1,2146,"`"]],[2146,2146],[2147,2147]]],[1540641785306,["gjx16@GJXAIOU",[[1,2167,"`"]],[2167,2167],[2168,2168]]],[1540641785687,["gjx16@GJXAIOU",[[1,2178,"`"]],[2178,2178],[2179,2179]]],[1540641787504,["gjx16@GJXAIOU",[[1,2157,"`"]],[2157,2157],[2158,2158]]],[1540641791588,["gjx16@GJXAIOU",[[1,2189,"`"]],[2189,2189],[2190,2190]]],[1540641792049,["gjx16@GJXAIOU",[[1,2178,"`"]],[2178,2178],[2179,2179]]],[1540641792376,["gjx16@GJXAIOU",[[1,2167,"`"]],[2167,2167],[2168,2168]]],[1540641792714,["gjx16@GJXAIOU",[[1,2156,"`"]],[2156,2156],[2157,2157]]],[1540641793044,["gjx16@GJXAIOU",[[1,2145,"`"]],[2145,2145],[2146,2146]]],[1540641793361,["gjx16@GJXAIOU",[[1,2134,"`"]],[2134,2134],[2135,2135]]],[1540641793721,["gjx16@GJXAIOU",[[1,2112,"`"]],[2112,2112],[2113,2113]]],[1540641794144,["gjx16@GJXAIOU",[[1,2101,"`"]],[2101,2101],[2102,2102]]],[1540641795216,["gjx16@GJXAIOU",[[1,2125,"`"]],[2125,2125],[2126,2126]]],[1540641797472,["gjx16@GJXAIOU",[[1,2070,"`"]],[2070,2070],[2071,2071]]],[1540641797916,["gjx16@GJXAIOU",[[1,2058,"`"]],[2058,2058],[2059,2059]]],[1540641798309,["gjx16@GJXAIOU",[[1,2046,"`"]],[2046,2046],[2047,2047]]],[1540641798688,["gjx16@GJXAIOU",[[1,2034,"`"]],[2034,2034],[2035,2035]]],[1540641799064,["gjx16@GJXAIOU",[[1,2022,"`"]],[2022,2022],[2023,2023]]],[1540641799418,["gjx16@GJXAIOU",[[1,2010,"`"]],[2010,2010],[2011,2011]]],[1540641799760,["gjx16@GJXAIOU",[[1,1998,"`"]],[1998,1998],[1999,1999]]],[1540641800065,["gjx16@GJXAIOU",[[1,1986,"`"]],[1986,1986],[1987,1987]]],[1540641800576,["gjx16@GJXAIOU",[[1,1974,"`"]],[1974,1974],[1975,1975]]],[1540641822534,["gjx16@GJXAIOU",[[-1,3086,"![函数封装之后排序]($resource/%E5%87%BD%E6%95%B0%E5%B0%81%E8%A3%85%E4%B9%8B%E5%90%8E%E6%8E%92%E5%BA%8F.png)\n"]],[3085,3185],[3085,3085]]],[1540641822686,["gjx16@GJXAIOU",[[-1,3087,"\n"]],[3085,3085],[3084,3084]]],[1540641823190,["gjx16@GJXAIOU",[[-1,3083,"；"]],[3084,3084],[3083,3083]]],[1540641824788,["gjx16@GJXAIOU",[[1,3083,"tong"]],[3083,3083],[3087,3087]]],[1540641825998,["gjx16@GJXAIOU",[[-1,3083,"tong"]],[3087,3087],[3083,3083]]],[1540641829643,["gjx16@GJXAIOU",[[1,3083,"同上；"]],[3083,3083],[3086,3086]]],[1540641879326,["gjx16@GJXAIOU",[[-1,3174,"(void"]],[3179,3179],[3174,3174]]],[1540641887033,["gjx16@GJXAIOU",[[1,3174,"（int a ,"]],[3174,3174],[3182,3182]]],[1540641888110,["gjx16@GJXAIOU",[[-1,3181,","]],[3182,3182],[3181,3181]]],[1540642014972,["gjx16@GJXAIOU",[[1,3438,"//yinwei"]],[3438,3438],[3446,3446]]],[1540642016039,["gjx16@GJXAIOU",[[-1,3439,"/yinwei"]],[3446,3446],[3439,3439]]],[1540642017557,["gjx16@GJXAIOU",[[1,3439,"/"]],[3439,3439],[3440,3440]]],[1540642062892,["gjx16@GJXAIOU",[[1,3440,"因为指针固定占4个字节，所以定义的时候什么数据类型都行；"]],[3440,3440],[3468,3468]]],[1540642063634,["gjx16@GJXAIOU",[[-1,3467,"；"]],[3468,3468],[3467,3467]]],[1540642136319,["gjx16@GJXAIOU",[[1,4204,"，需要加上以下代码"]],[4204,4204],[4213,4213]]],[1540642142034,["gjx16@GJXAIOU",[[1,4213,"："]],[4213,4213],[4214,4214]]],[1540642205391,["gjx16@GJXAIOU",[[-1,4600,"\n"]],[4600,4600],[4599,4599]]],[1540642205702,["gjx16@GJXAIOU",[[-1,4599,"\n"]],[4599,4599],[4598,4598]]],[1540642206850,["gjx16@GJXAIOU",[[1,4599,"\n"]],[4598,4598],[4599,4599]]],[1540642206983,["gjx16@GJXAIOU",[[1,4600,"\n"]],[4599,4599],[4600,4600]]]],null,"gjx16@GJXAIOU"]]}