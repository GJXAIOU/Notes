{"compress":true,"commitItems":[["f4752ba6-c3c9-4534-9171-7a6118f881ee",1542264189538,"",[[1542264139884,["gjx16@GJXAIOU",[[1,0,"# 第3章 函数\n\n\n\n"]],[0,0],[11,11]]],[1542264236541,["gjx16@GJXAIOU",[[1,10,"## 3、"]],[10,10],[15,15]]],[1542264237034,["gjx16@GJXAIOU",[[-1,14,"、"]],[15,15],[14,14]]],[1542264238124,["gjx16@GJXAIOU",[[1,14,"。1 "]],[14,14],[17,17]]],[1542264239970,["gjx16@GJXAIOU",[[-1,14,"。1 "]],[17,17],[14,14]]],[1542264246656,["gjx16@GJXAIOU",[[1,14,".1函数的基本概念"]],[14,14],[23,23]]],[1542264247028,["gjx16@GJXAIOU",[[1,25,"\n"]],[23,23],[24,24]]],[1542264247745,["gjx16@GJXAIOU",[[1,26,"\n"]],[24,24],[25,25]]],[1542264253284,["gjx16@GJXAIOU",[[1,25,"## 3.1.3"]],[25,25],[33,33]]],[1542264253921,["gjx16@GJXAIOU",[[-1,32,"3"]],[33,33],[32,32]]],[1542264254446,["gjx16@GJXAIOU",[[1,32,"2"]],[32,32],[33,33]]],[1542264254900,["gjx16@GJXAIOU",[[-1,32,"2"]],[33,33],[32,32]]],[1542264259080,["gjx16@GJXAIOU",[[1,32,"1 理解函数"]],[32,32],[38,38]]],[1542264259593,["gjx16@GJXAIOU",[[1,40,"\n"]],[38,38],[39,39]]],[1542264259932,["gjx16@GJXAIOU",[[1,41,"\n"]],[39,39],[40,40]]],[1542264306519,["gjx16@GJXAIOU",[[1,40,"- 变量本质上时占位符，"]],[40,40],[52,52]]],[1542264357142,["gjx16@GJXAIOU",[[1,52,"变量名通常使用小写字母进行命名，可以使用下划线连接多个单词"]],[52,52],[81,81]]],[1542264361202,["gjx16@GJXAIOU",[[1,10,"\n"]],[9,9],[10,10]]],[1542264363169,["gjx16@GJXAIOU",[[1,0,"\n"]],[0,0],[1,1]]],[1542264366133,["gjx16@GJXAIOU",[[1,0,"·"]],[0,0],[1,1]]],[1542264366681,["gjx16@GJXAIOU",[[-1,0,"·"]],[1,1],[0,0]]],[1542264367422,["gjx16@GJXAIOU",[[1,0,"-"]],[0,0],[1,1]]],[1542264367565,["gjx16@GJXAIOU",[[1,0,"-"]],[1,1],[2,2]]],[1542264367700,["gjx16@GJXAIOU",[[1,2,"-"]],[2,2],[3,3]]],[1542264367726,["gjx16@GJXAIOU",[[1,4,"\n---\n\n"]],[3,3],[4,4]]],[1542264384060,["gjx16@GJXAIOU",[[1,4,"date：2018-11-15·"]],[4,4],[20,20]]],[1542264385140,["gjx16@GJXAIOU",[[-1,19,"·"]],[20,20],[19,19]]],[1542264385542,["gjx16@GJXAIOU",[[1,19,"`"]],[19,19],[20,20]]],[1542264387922,["gjx16@GJXAIOU",[[1,9,"`"]],[9,9],[10,10]]],[1542264444397,["gjx16@GJXAIOU",[[1,111,"\n"]],[110,110],[111,111]]],[1542264444529,["gjx16@GJXAIOU",[[1,112,"\n"]],[111,111],[112,112]]],[1542264444657,["gjx16@GJXAIOU",[[1,113,"\n"]],[112,112],[113,113]]],[1542264447874,["gjx16@GJXAIOU",[[-1,113,"\n"],[1,114,"#"]],[113,113],[114,114]]],[1542264453610,["gjx16@GJXAIOU",[[1,114,"## 3.1.2 dingy"]],[114,114],[128,128]]],[1542264454498,["gjx16@GJXAIOU",[[-1,123,"dingy"]],[128,128],[123,123]]],[1542264457203,["gjx16@GJXAIOU",[[1,123,"定义函数"]],[123,123],[127,127]]],[1542264457823,["gjx16@GJXAIOU",[[1,127,"\n\n"]],[127,127],[128,128]]],[1542264457932,["gjx16@GJXAIOU",[[1,129,"\n"]],[128,128],[129,129]]],[1542264465560,["gjx16@GJXAIOU",[[1,55,"#"]],[53,53],[54,54]]],[1542264476685,["gjx16@GJXAIOU",[[1,129,"标准格式"]],[129,129],[133,133]]],[1542264477281,["gjx16@GJXAIOU",[[1,135,"\n"]],[133,133],[134,134]]],[1542264480179,["gjx16@GJXAIOU",[[1,134,"```"]],[134,134],[137,137]]],[1542264480203,["gjx16@GJXAIOU",[[1,137,"language\n```\n"]],[137,137],[137,145]]],[1542264481414,["gjx16@GJXAIOU",[[-1,137,"language"],[1,145,"p"]],[137,145],[138,138]]],[1542264482101,["gjx16@GJXAIOU",[[1,138,"ython"]],[138,138],[143,143]]],[1542264482674,["gjx16@GJXAIOU",[[1,144,"\n"]],[143,143],[144,144]]],[1542265768208,["gjx16@GJXAIOU",[[1,144,"#!/usr/bin/env python # -*- coding:utf-8 -*- #@Time :2018/11/15 14:49 #Author:GJXAIOU   def add_function(a,b):  #定义一个函数使用 ：  def   函数名（参数）:    其中：表示函数头的结束\n # 函数名的命名；小写字母或者单下划线或者数字 #这里x,y作为形参，也可以认为是变量，而变量无类型，所以并没有规定其所引用的对象的类型，意义取决于对象的类型，称为多态  c = a + b   # 函数体必须缩进4个空格\n  return c  #return语句执行的时候，python会跳出当前的函数并且返回到调用这个函数的地方     if __name__ == \"__main__\":\n    result = add_function(2,3)  #调用函数并且将实参传递给函数\n  print(result)\n\n# 下面为函数的其他使用方法   # 只写函数名会得到该函数在内存中的存储信息 print(add_function)\n\n# 赋值语句可以实现变量和函数对象建立应用关系， c= add_function\nresult1 = c(3,4)\nprint(result1)"]],[144,144],[697,697]]],[1542265769942,["gjx16@GJXAIOU",[[-1,144,"#!/usr/bin/env python # -*- coding:utf-8 -*- #@Time :2018/11/15 14:49 #Author:GJXAIOU   def add_function(a,b):  #定义一个函数使用 ：  def   函数名（参数）:    其中：表示函数头的结束\n # 函数名的命名；小写字母或者单下划线或者数字 #这里x,y作为形参，也可以认为是变量，而变量无类型，所以并没有规定其所引用的对象的类型，意义取决于对象的类型，称为多态  c = a + b   # 函数体必须缩进4个空格\n  return c  #return语句执行的时候，python会跳出当前的函数并且返回到调用这个函数的地方     if __name__ == \"__main__\":\n    result = add_function(2,3)  #调用函数并且将实参传递给函数\n  print(result)\n\n# 下面为函数的其他使用方法   # 只写函数名会得到该函数在内存中的存储信息 print(add_function)\n\n# 赋值语句可以实现变量和函数对象建立应用关系， c= add_function\nresult1 = c(3,4)\nprint(result1)"]],[697,697],[144,144]]],[1542265772118,["gjx16@GJXAIOU",[[1,148,"#!/usr/bin/env python\n# -*- coding:utf-8 -*-\n#@Time :2018/11/15 14:49\n#Author:GJXAIOU\n\ndef add_function(a,b):  #定义一个函数使用 ：  def   函数名（参数）:    其中：表示函数头的结束\n    # 函数名的命名；小写字母或者单下划线或者数字\n    #这里x,y作为形参，也可以认为是变量，而变量无类型，所以并没有规定其所引用的对象的类型，意义取决于对象的类型，称为多态\n    c = a + b   # 函数体必须缩进4个空格\n    return c  #return语句执行的时候，python会跳出当前的函数并且返回到调用这个函数的地方\n\n\nif __name__ == \"__main__\":\n    result = add_function(2,3)  #调用函数并且将实参传递给函数\n    print(result)\n\n\n# 下面为函数的其他使用方法\n\n# 只写函数名会得到该函数在内存中的存储信息\nprint(add_function)\n\n# 赋值语句可以实现变量和函数对象建立应用关系，\nc= add_function\nresult1 = c(3,4)\nprint(result1)"]],[148,148],[712,712]]],[1542265774373,["gjx16@GJXAIOU",[[-1,148,"#!/usr/bin/env python\n# -*- coding:utf-8 -*-\n#@Time :2018/11/15 14:49\n#Author:GJXAIOU\n\ndef add_function(a,b):  #定义一个函数使用 ：  def   函数名（参数）:    其中：表示函数头的结束\n    # 函数名的命名；小写字母或者单下划线或者数字\n    #这里x,y作为形参，也可以认为是变量，而变量无类型，所以并没有规定其所引用的对象的类型，意义取决于对象的类型，称为多态\n    c = a + b   # 函数体必须缩进4个空格\n    return c  #return语句执行的时候，python会跳出当前的函数并且返回到调用这个函数的地方\n\n\nif __name__ == \"__main__\":\n    result = add_function(2,3)  #调用函数并且将实参传递给函数\n    print(result)\n\n\n# 下面为函数的其他使用方法\n\n# 只写函数名会得到该函数在内存中的存储信息\nprint(add_function)\n\n# 赋值语句可以实现变量和函数对象建立应用关系，\nc= add_function\nresult1 = c(3,4)\nprint(result1)"]],[712,712],[148,148]]],[1542265776777,["gjx16@GJXAIOU",[[1,144,"#!/usr/bin/env python\n# -*- coding:utf-8 -*-\n#@Time :2018/11/15 14:49\n#Author:GJXAIOU\n\ndef add_function(a,b):  #定义一个函数使用 ：  def   函数名（参数）:    其中：表示函数头的结束\n    # 函数名的命名；小写字母或者单下划线或者数字\n    #这里x,y作为形参，也可以认为是变量，而变量无类型，所以并没有规定其所引用的对象的类型，意义取决于对象的类型，称为多态\n    c = a + b   # 函数体必须缩进4个空格\n    return c  #return语句执行的时候，python会跳出当前的函数并且返回到调用这个函数的地方\n\n\nif __name__ == \"__main__\":\n    result = add_function(2,3)  #调用函数并且将实参传递给函数\n    print(result)\n\n\n# 下面为函数的其他使用方法\n\n# 只写函数名会得到该函数在内存中的存储信息\nprint(add_function)\n\n# 赋值语句可以实现变量和函数对象建立应用关系，\nc= add_function\nresult1 = c(3,4)\nprint(result1)"]],[144,144],[708,708]]],[1542265783825,["gjx16@GJXAIOU",[[1,254,"\n"]],[254,254],[255,255]]],[1542265785826,["gjx16@GJXAIOU",[[1,256,"   "]],[255,255],[258,258]]],[1542265792281,["gjx16@GJXAIOU",[[1,719,"\n"]],[716,716],[717,717]]],[1542265792425,["gjx16@GJXAIOU",[[1,720,"\n"]],[717,717],[718,718]]],[1542265793032,["gjx16@GJXAIOU",[[1,721,"\n"]],[718,718],[719,719]]],[1542265803329,["gjx16@GJXAIOU",[[1,129,"1."]],[129,129],[131,131]]],[1542265806513,["gjx16@GJXAIOU",[[1,724,"\n"]],[719,719],[720,720]]],[1542265812242,["gjx16@GJXAIOU",[[1,720,"### 3,"]],[720,720],[726,726]]],[1542265812804,["gjx16@GJXAIOU",[[-1,725,","]],[726,726],[725,725]]],[1542265819548,["gjx16@GJXAIOU",[[1,725,".1.3 函数的命名"]],[725,725],[735,735]]],[1542265819969,["gjx16@GJXAIOU",[[1,740,"\n"]],[735,735],[736,736]]],[1542265830496,["gjx16@GJXAIOU",[[1,736,"-变量名全部小写"]],[736,736],[744,744]]],[1542265832698,["gjx16@GJXAIOU",[[1,737," "]],[737,737],[738,738]]],[1542265848388,["gjx16@GJXAIOU",[[1,745,"，使用下划线连接各个单词"]],[745,745],[757,757]]],[1542265848915,["gjx16@GJXAIOU",[[1,758,"- \n"]],[757,757],[760,760]]],[1542265854812,["gjx16@GJXAIOU",[[1,760,"文件名："]],[760,760],[764,764]]],[1542265857716,["gjx16@GJXAIOU",[[1,741,"："]],[741,741],[742,742]]],[1542265868252,["gjx16@GJXAIOU",[[1,765,"全部小写："]],[765,765],[770,770]]],[1542265868857,["gjx16@GJXAIOU",[[-1,769,"："]],[770,770],[769,769]]],[1542265874135,["gjx16@GJXAIOU",[[1,769,"，可以使用下划线"]],[769,769],[777,777]]],[1542265881674,["gjx16@GJXAIOU",[[1,738,"**"],[1,742,"**"]],[738,742],[738,746]]],[1542265884420,["gjx16@GJXAIOU",[[1,765,"**"],[1,769,"**"]],[765,769],[765,773]]],[1542265886322,["gjx16@GJXAIOU",[[1,774," "]],[774,774],[775,775]]],[1542265887737,["gjx16@GJXAIOU",[[-1,774," "]],[775,775],[774,774]]],[1542265888812,["gjx16@GJXAIOU",[[1,773," "]],[773,773],[774,774]]],[1542265889515,["gjx16@GJXAIOU",[[1,746," "]],[746,746],[747,747]]],[1542265892841,["gjx16@GJXAIOU",[[1,788,"- \n"]],[787,787],[790,790]]],[1542265895220,["gjx16@GJXAIOU",[[1,790,"****"]],[790,790],[792,792]]],[1542265899510,["gjx16@GJXAIOU",[[1,792,"函数名："]],[792,792],[796,796]]],[1542265900497,["gjx16@GJXAIOU",[[1,788,"  "]],[796,796],[798,798]]],[1542265903912,["gjx16@GJXAIOU",[[-1,788,"  "]],[798,798],[796,796]]],[1542265920221,["gjx16@GJXAIOU",[[1,798," 小写，可以使用下划线"]],[798,798],[809,809]]],[1542265928641,["gjx16@GJXAIOU",[[1,810,"- \n"]],[809,809],[812,812]]],[1542265930189,["gjx16@GJXAIOU",[[1,812,"****"]],[812,812],[814,814]]],[1542265934262,["gjx16@GJXAIOU",[[1,814,"函数的参数："]],[814,814],[820,820]]],[1542265953483,["gjx16@GJXAIOU",[[1,822," 同变量，本质上就是变量"]],[822,822],[834,834]]],[1542265957904,["gjx16@GJXAIOU",[[1,835,"- \n"]],[834,834],[837,837]]],[1542265958128,["gjx16@GJXAIOU",[[-1,835,"- "]],[837,837],[836,836]]],[1542265958304,["gjx16@GJXAIOU",[[1,840,"\n"]],[836,836],[837,837]]],[1542265958483,["gjx16@GJXAIOU",[[1,841,"\n"]],[837,837],[838,838]]],[1542265958656,["gjx16@GJXAIOU",[[1,842,"\n"]],[838,838],[839,839]]],[1542265958785,["gjx16@GJXAIOU",[[1,843,"\n"]],[839,839],[840,840]]],[1542265958952,["gjx16@GJXAIOU",[[1,844,"\n"]],[840,840],[841,841]]],[1542265962260,["gjx16@GJXAIOU",[[1,841,"### 3,"]],[841,841],[847,847]]],[1542265962964,["gjx16@GJXAIOU",[[-1,846,","]],[847,847],[846,846]]],[1542265966370,["gjx16@GJXAIOU",[[1,846,".1.4 "]],[846,846],[851,851]]],[1542266010313,["gjx16@GJXAIOU",[[1,851,"dioyn"]],[851,851],[856,856]]],[1542266011232,["gjx16@GJXAIOU",[[-1,851,"dioyn"]],[856,856],[851,851]]],[1542266014030,["gjx16@GJXAIOU",[[1,851,"调用函数"]],[851,851],[855,855]]],[1542266014512,["gjx16@GJXAIOU",[[1,859,"\n"]],[855,855],[856,856]]],[1542266015011,["gjx16@GJXAIOU",[[1,860,"\n"]],[856,856],[857,857]]],[1542266613835,["gjx16@GJXAIOU",[[1,857,"```"]],[857,857],[860,860]]],[1542266613862,["gjx16@GJXAIOU",[[1,860,"language\n```\n"]],[860,860],[860,868]]],[1542266615165,["gjx16@GJXAIOU",[[-1,860,"language"],[1,868,"y"]],[860,868],[861,861]]],[1542266615667,["gjx16@GJXAIOU",[[1,861,"hton"]],[861,861],[865,865]]],[1542266616688,["gjx16@GJXAIOU",[[-1,860,"yhton"]],[865,865],[860,860]]],[1542266618853,["gjx16@GJXAIOU",[[1,860,"pyh"]],[860,860],[863,863]]],[1542266619338,["gjx16@GJXAIOU",[[-1,862,"h"]],[863,863],[862,862]]],[1542266620018,["gjx16@GJXAIOU",[[1,862,"thon"]],[862,862],[866,866]]],[1542266620721,["gjx16@GJXAIOU",[[1,867,"\n"]],[866,866],[867,867]]],[1542266624236,["gjx16@GJXAIOU",[[1,867,"'''\n调用函数\n'''\ndef add(x,y):\n    print(\"x = {}\".format(x))\n    print(\"y = {}\".format(y))\n    return x +y\n\n#参数赋值方法一：\nans1 = add(2,3) #这里传递参数默认按照次序依次赋值\nprint(\"ans = \",ans1)\n\n#参数赋值方法二：\n\nans2 = add(y = 4,x = 5) #直接使用变量= 变量值进行赋值，这就不用理会什么顺序\nprint(ans2)\n"]],[867,867],[1112,1112]]],[1542266629386,["gjx16@GJXAIOU",[[1,720,"\n"]],[718,718],[719,719]]],[1542266632217,["gjx16@GJXAIOU",[[1,719,"han"]],[719,719],[722,722]]],[1542266632936,["gjx16@GJXAIOU",[[-1,719,"han"]],[722,722],[719,719]]],[1542266634044,["gjx16@GJXAIOU",[[1,721,"\n"]],[719,719],[720,720]]],[1542266637958,["gjx16@GJXAIOU",[[1,720,"定义方法为"]],[720,720],[725,725]]],[1542266640360,["gjx16@GJXAIOU",[[-1,720,"定义方法为"]],[725,725],[720,720]]],[1542266640704,["gjx16@GJXAIOU",[[-1,721,"\n"]],[720,720],[719,719]]],[1542266654460,["gjx16@GJXAIOU",[[1,857,"****"]],[857,857],[859,859]]],[1542266657018,["gjx16@GJXAIOU",[[1,859,"函数电泳"]],[859,859],[863,863]]],[1542266657785,["gjx16@GJXAIOU",[[-1,861,"电泳"]],[863,863],[861,861]]],[1542266668174,["gjx16@GJXAIOU",[[1,861,"调用的时候参数赋值"]],[861,861],[870,870]]],[1542266671513,["gjx16@GJXAIOU",[[1,1137,"\n"]],[1133,1133],[1134,1134]]],[1542266672837,["gjx16@GJXAIOU",[[1,1134,"****"]],[1134,1134],[1136,1136]]],[1542266678141,["gjx16@GJXAIOU",[[1,870,"单发"]],[870,870],[872,872]]],[1542266678850,["gjx16@GJXAIOU",[[-1,870,"单发"]],[872,872],[870,870]]],[1542266680723,["gjx16@GJXAIOU",[[1,870,"方法"]],[870,870],[872,872]]],[1542266683465,["gjx16@GJXAIOU",[[1,1136,"\n"]],[1134,1134],[1135,1135]]],[1542266687427,["gjx16@GJXAIOU",[[1,1135,"程序运行结果："]],[1135,1135],[1142,1142]]],[1542266688139,["gjx16@GJXAIOU",[[1,1144,"\n"]],[1142,1142],[1143,1143]]],[1542266706010,["gjx16@GJXAIOU",[[1,1143,"x = 2\ny = 3\nans =  5\nx = 5\ny = 4\n9"]],[1143,1143],[1177,1177]]],[1542266708228,["gjx16@GJXAIOU",[[1,1143,"·"]],[1143,1143],[1144,1144]]],[1542266709265,["gjx16@GJXAIOU",[[-1,1143,"·"]],[1144,1144],[1143,1143]]],[1542266709702,["gjx16@GJXAIOU",[[1,1143,"`"]],[1143,1143],[1144,1144]]],[1542266712625,["gjx16@GJXAIOU",[[1,1150,"`"]],[1150,1150],[1151,1151]]],[1542266713378,["gjx16@GJXAIOU",[[1,1157,"`"]],[1157,1157],[1158,1158]]],[1542266713809,["gjx16@GJXAIOU",[[1,1167,"`"]],[1167,1167],[1168,1168]]],[1542266714402,["gjx16@GJXAIOU",[[1,1174,"`"]],[1174,1174],[1175,1175]]],[1542266715245,["gjx16@GJXAIOU",[[1,1181,"`"]],[1181,1181],[1182,1182]]],[1542266716202,["gjx16@GJXAIOU",[[1,1183,"`"]],[1183,1183],[1184,1184]]],[1542266717585,["gjx16@GJXAIOU",[[1,1180,"`"]],[1180,1180],[1181,1181]]],[1542266717985,["gjx16@GJXAIOU",[[1,1173,"`"]],[1173,1173],[1174,1174]]],[1542266719033,["gjx16@GJXAIOU",[[1,1166,"`"]],[1166,1166],[1167,1167]]],[1542266719478,["gjx16@GJXAIOU",[[1,1156,"`"]],[1156,1156],[1157,1157]]],[1542266720001,["gjx16@GJXAIOU",[[1,1149,"`"]],[1149,1149],[1150,1150]]],[1542266723753,["gjx16@GJXAIOU",[[1,721,"\n"]],[718,718],[719,719]]],[1542266725839,["gjx16@GJXAIOU",[[1,719,"程勋"]],[719,719],[721,721]]],[1542266727473,["gjx16@GJXAIOU",[[-1,719,"程勋"]],[721,721],[719,719]]],[1542266729031,["gjx16@GJXAIOU",[[1,719,"西横须"]],[719,719],[722,722]]],[1542266729764,["gjx16@GJXAIOU",[[-1,719,"西横须"]],[722,722],[719,719]]],[1542266733267,["gjx16@GJXAIOU",[[1,719,"程勋"]],[719,719],[721,721]]],[1542266734523,["gjx16@GJXAIOU",[[-1,719,"程勋"]],[721,721],[719,719]]],[1542266739046,["gjx16@GJXAIOU",[[1,719,"程序运行结果："]],[719,719],[726,726]]],[1542266739524,["gjx16@GJXAIOU",[[1,729,"\n"]],[726,726],[727,727]]],[1542266768861,["gjx16@GJXAIOU",[[1,727,"5\n<function add_function at 0x000001E65BA4D2F0>\n7"]],[727,727],[776,776]]],[1542266770869,["gjx16@GJXAIOU",[[1,727,"`"]],[727,727],[728,728]]],[1542266772643,["gjx16@GJXAIOU",[[1,730,"`"]],[730,730],[731,731]]],[1542266773283,["gjx16@GJXAIOU",[[1,777,"`"]],[777,777],[778,778]]],[1542266775262,["gjx16@GJXAIOU",[[1,729,"`"]],[729,729],[730,730]]],[1542266779458,["gjx16@GJXAIOU",[[1,777,"`"]],[777,777],[778,778]]],[1542266780213,["gjx16@GJXAIOU",[[1,780,"`"]],[779,779],[780,780]]],[1542266781246,["gjx16@GJXAIOU",[[-1,780,"`"]],[780,780],[779,779]]],[1542266782262,["gjx16@GJXAIOU",[[1,781,"`"]],[781,781],[782,782]]],[1542266794157,["gjx16@GJXAIOU",[[1,1257,"特殊：当哈数"]],[1257,1257],[1263,1263]]],[1542266795361,["gjx16@GJXAIOU",[[-1,1261,"哈数"]],[1263,1263],[1261,1261]]],[1542266813054,["gjx16@GJXAIOU",[[1,1261,"函数在定义的时候，部分参数赋值"]],[1261,1261],[1276,1276]]],[1542267631621,["gjx16@GJXAIOU",[[1,1279,"```"]],[1279,1279],[1282,1282]]],[1542267631648,["gjx16@GJXAIOU",[[1,1282,"language\n```\n"]],[1282,1282],[1282,1290]]],[1542267633013,["gjx16@GJXAIOU",[[-1,1282,"language"],[1,1290,"p"]],[1282,1290],[1283,1283]]],[1542267633728,["gjx16@GJXAIOU",[[-1,1282,"p"]],[1283,1283],[1282,1282]]],[1542267635197,["gjx16@GJXAIOU",[[1,1282,"python"]],[1282,1282],[1288,1288]]],[1542267635720,["gjx16@GJXAIOU",[[1,1289,"\n"]],[1288,1288],[1289,1289]]],[1542267638657,["gjx16@GJXAIOU",[[1,1289,"'''\n当定义函数的时候进行部分参数赋值\n'''\n\n #def acfun(x = 1,y,z = 4 ): 这种定义方法是错误的，因为有默认值的参数必须都在没有默认值参数后面\ndef acfun(x,y,z= 1):\n    acans = x +y +z\n    return acans\n\nans1 = acfun(1,2) #可以不给z赋值，则使用默认值\nans2 = acfun(2,3,2)#如果赋值，则使用这个值\nprint(\"ans1 = \",ans1)\nprint(\"ans2 = \",ans2)\n\n\n"]],[1289,1289],[1549,1549]]],[1542267642112,["gjx16@GJXAIOU",[[-1,1549,"\n"]],[1549,1549],[1548,1548]]],[1542267642809,["gjx16@GJXAIOU",[[-1,1548,"\n"]],[1548,1548],[1547,1547]]],[1542267645185,["gjx16@GJXAIOU",[[1,1552,"c"]],[1552,1552],[1553,1553]]],[1542267645752,["gjx16@GJXAIOU",[[-1,1552,"c"]],[1553,1553],[1552,1552]]],[1542267654395,["gjx16@GJXAIOU",[[1,1552,"程序运行结果："]],[1552,1552],[1559,1559]]],[1542267654856,["gjx16@GJXAIOU",[[1,1562,"\n"]],[1559,1559],[1560,1560]]],[1542267667258,["gjx16@GJXAIOU",[[1,1560,"ans1 =  4\nans2 =  7"]],[1560,1560],[1579,1579]]],[1542267670284,["gjx16@GJXAIOU",[[1,1560,"·"]],[1560,1560],[1561,1561]]],[1542267671352,["gjx16@GJXAIOU",[[-1,1560,"·"]],[1561,1561],[1560,1560]]],[1542267671785,["gjx16@GJXAIOU",[[1,1560,"`"]],[1560,1560],[1561,1561]]],[1542267672817,["gjx16@GJXAIOU",[[1,1571,"`"]],[1571,1571],[1572,1572]]],[1542267675001,["gjx16@GJXAIOU",[[1,1581,"`"]],[1581,1581],[1582,1582]]],[1542267675489,["gjx16@GJXAIOU",[[1,1570,"`"]],[1570,1570],[1571,1571]]],[1542267678032,["gjx16@GJXAIOU",[[1,1586,"\n"]],[1583,1583],[1584,1584]]],[1542267678492,["gjx16@GJXAIOU",[[1,1587,"\n"]],[1584,1584],[1585,1585]]],[1542267688329,["gjx16@GJXAIOU",[[1,1588,"\n"]],[1585,1585],[1586,1586]]],[1542267688497,["gjx16@GJXAIOU",[[1,1589,"\n"]],[1586,1586],[1587,1587]]],[1542267688688,["gjx16@GJXAIOU",[[1,1590,"\n"]],[1587,1587],[1588,1588]]],[1542267688866,["gjx16@GJXAIOU",[[1,1591,"\n"]],[1588,1588],[1589,1589]]],[1542267693785,["gjx16@GJXAIOU",[[1,1589,"## 3.2 hashu"]],[1589,1589],[1601,1601]]],[1542267694904,["gjx16@GJXAIOU",[[-1,1595," hashu"]],[1601,1601],[1595,1595]]],[1542267695738,["gjx16@GJXAIOU",[[1,1595,"shen"]],[1595,1595],[1599,1599]]],[1542267696728,["gjx16@GJXAIOU",[[-1,1595,"shen"]],[1599,1599],[1595,1595]]],[1542267700839,["gjx16@GJXAIOU",[[1,1595," 深入探究函数"]],[1595,1595],[1602,1602]]],[1542267701833,["gjx16@GJXAIOU",[[1,1605,"\n"]],[1602,1602],[1603,1603]]],[1542267701986,["gjx16@GJXAIOU",[[1,1606,"\n"]],[1603,1603],[1604,1604]]],[1542267702136,["gjx16@GJXAIOU",[[1,1607,"\n"]],[1604,1604],[1605,1605]]],[1542267711128,["gjx16@GJXAIOU",[[1,1605,"### 3.2.1 函数返回值"]],[1605,1605],[1620,1620]]],[1542267711840,["gjx16@GJXAIOU",[[1,1623,"\n"]],[1620,1620],[1621,1621]]],[1542267711994,["gjx16@GJXAIOU",[[1,1624,"\n"]],[1621,1621],[1622,1622]]],[1542267719199,["gjx16@GJXAIOU",[[1,1622,"****"]],[1622,1622],[1624,1624]]],[1542267724183,["gjx16@GJXAIOU",[[1,1624,"示例程序：实现"]],[1624,1624],[1631,1631]]],[1542267732606,["gjx16@GJXAIOU",[[1,1631,"Fibonaccis"]],[1631,1631],[1641,1641]]],[1542267733105,["gjx16@GJXAIOU",[[-1,1640,"s"]],[1641,1641],[1640,1640]]],[1542267734687,["gjx16@GJXAIOU",[[1,1640,"数列"]],[1640,1640],[1642,1642]]],[1542267736807,["gjx16@GJXAIOU",[[1,1647,"\n"]],[1644,1644],[1645,1645]]],[1542267738482,["gjx16@GJXAIOU",[[1,1645,"```"]],[1645,1645],[1648,1648]]],[1542267738508,["gjx16@GJXAIOU",[[1,1648,"language\n```\n"]],[1648,1648],[1648,1656]]],[1542267739705,["gjx16@GJXAIOU",[[-1,1648,"language"],[1,1656,"p"]],[1648,1656],[1649,1649]]],[1542267740346,["gjx16@GJXAIOU",[[1,1649,"ython"]],[1649,1649],[1654,1654]]],[1542267741013,["gjx16@GJXAIOU",[[1,1655,"\n"]],[1654,1654],[1655,1655]]],[1542268027953,["gjx16@GJXAIOU",[[1,957," p151"]],[957,957],[962,962]]],[1542268306829,["gjx16@GJXAIOU",[[1,1661,"'''\n\n实现Fibonacci数列：P153\n'''\n\n\n# 此函数只有一个返回值（一个列表）\n\ndef fib(n):\n    result = [0,1]  # 以列表形式返回\n    for i in range(n-2):\n        result.append(result[-2] + result[-1])\n    return result\n\nif __name__ == \"__main__\":\n    haha = fib(10)\n    print(haha)\n\n\n# 但函数的返回值有多个时候，返回值类型为元组\n\ndef bilibili():\n    return 1,2,3\n\n##接受返回值的方法一；\nans = bilibili()\nprint(\"ans = \" ,ans)\n\n##接受函数返回值的方法二：\nx,y,z = bilibili()\nprint(x,y,z)\n\n\n# 如果函数没有return，则返回值为None\n"]],[1660,1660],[2092,2092]]],[1542268312151,["gjx16@GJXAIOU",[[1,2100,"\n"]],[2096,2096],[2097,2097]]],[1542268312306,["gjx16@GJXAIOU",[[1,2101,"\n"]],[2097,2097],[2098,2098]]],[1542268316206,["gjx16@GJXAIOU",[[1,2098,"****"]],[2098,2098],[2100,2100]]],[1542268319473,["gjx16@GJXAIOU",[[1,2100,"return zuo"]],[2100,2100],[2110,2110]]],[1542268320522,["gjx16@GJXAIOU",[[-1,2106," zuo"]],[2110,2110],[2106,2106]]],[1542268322532,["gjx16@GJXAIOU",[[1,2106," 偶用"]],[2106,2106],[2109,2109]]],[1542268323506,["gjx16@GJXAIOU",[[-1,2106," 偶用"]],[2109,2109],[2106,2106]]],[1542268325854,["gjx16@GJXAIOU",[[1,2106," 作用"]],[2106,2106],[2109,2109]]],[1542268328064,["gjx16@GJXAIOU",[[1,2115,"\n"]],[2111,2111],[2112,2112]]],[1542268336663,["gjx16@GJXAIOU",[[1,2112,"- 返回翻书的"]],[2112,2112],[2119,2119]]],[1542268337695,["gjx16@GJXAIOU",[[-1,2116,"翻书的"]],[2119,2119],[2116,2116]]],[1542268342842,["gjx16@GJXAIOU",[[1,2116,"函数的结果："]],[2116,2116],[2122,2122]]],[1542268343289,["gjx16@GJXAIOU",[[1,2123,"- \n"]],[2122,2122],[2125,2125]]],[1542268352862,["gjx16@GJXAIOU",[[1,2125,"终端函数体的"]],[2125,2125],[2131,2131]]],[1542268357423,["gjx16@GJXAIOU",[[-1,2125,"终端"]],[2127,2127],[2125,2125]]],[1542268360527,["gjx16@GJXAIOU",[[1,2125,"中断"]],[2125,2125],[2127,2127]]],[1542268367780,["gjx16@GJXAIOU",[[-1,2130,"的"]],[2131,2131],[2130,2130]]],[1542268378893,["gjx16@GJXAIOU",[[1,2130,"内的流程，离开这个函数"]],[2130,2130],[2141,2141]]],[1542268710170,["gjx16@GJXAIOU",[[1,2141,"，即结束正在执行的函数"]],[2141,2141],[2152,2152]]],[1542268711274,["gjx16@GJXAIOU",[[-1,2150,"函数"]],[2152,2152],[2150,2150]]],[1542268741430,["gjx16@GJXAIOU",[[1,2150,"这个函数，并离开函数体返回到调用位置"]],[2150,2150],[2168,2168]]],[1542268743464,["gjx16@GJXAIOU",[[1,2169,"- \n"]],[2168,2168],[2171,2171]]],[1542268744937,["gjx16@GJXAIOU",[[-1,2169,"- "]],[2171,2171],[2169,2169]]],[1542268748459,["gjx16@GJXAIOU",[[1,2169,"示例"]],[2169,2169],[2171,2171]]],[1542268750868,["gjx16@GJXAIOU",[[1,2171,"程序；"]],[2171,2171],[2174,2174]]],[1542268751465,["gjx16@GJXAIOU",[[1,2178,"\n"]],[2174,2174],[2175,2175]]],[1542268753231,["gjx16@GJXAIOU",[[1,2175,"```"]],[2175,2175],[2178,2178]]],[1542268753260,["gjx16@GJXAIOU",[[1,2178,"language\n```\n"]],[2178,2178],[2178,2186]]],[1542268753917,["gjx16@GJXAIOU",[[-1,2178,"language"],[1,2186,"p"]],[2178,2186],[2179,2179]]],[1542268754862,["gjx16@GJXAIOU",[[1,2179,"ython"]],[2179,2179],[2184,2184]]],[1542268756807,["gjx16@GJXAIOU",[[1,2185,"\n"]],[2184,2184],[2185,2185]]],[1542268945689,["gjx16@GJXAIOU",[[1,2185,"'''\n验证return的作用：p155\n'''\n\ndef dilidili():\n    print(\"hello\")\n    return\n    print(\"world\")\n\nans = dilidili()\nprint(ans)"]],[2185,2185],[2304,2304]]],[1542268950392,["gjx16@GJXAIOU",[[1,2313,"\n"]],[2308,2308],[2309,2309]]],[1542268951572,["gjx16@GJXAIOU",[[1,2309,"c"]],[2309,2309],[2310,2310]]],[1542268952249,["gjx16@GJXAIOU",[[-1,2309,"c"]],[2310,2310],[2309,2309]]],[1542268956735,["gjx16@GJXAIOU",[[1,2309,"chegn"]],[2309,2309],[2314,2314]]],[1542268958032,["gjx16@GJXAIOU",[[-1,2309,"chegn"]],[2314,2314],[2309,2309]]],[1542268960261,["gjx16@GJXAIOU",[[1,2309,"程勋"]],[2309,2309],[2311,2311]]],[1542268960994,["gjx16@GJXAIOU",[[-1,2309,"程勋"]],[2311,2311],[2309,2309]]],[1542268962574,["gjx16@GJXAIOU",[[1,2309,"西横须"]],[2309,2309],[2312,2312]]],[1542268963512,["gjx16@GJXAIOU",[[-1,2309,"西横须"]],[2312,2312],[2309,2309]]],[1542268967452,["gjx16@GJXAIOU",[[1,2309,"程序运行结果；"]],[2309,2309],[2316,2316]]],[1542268968362,["gjx16@GJXAIOU",[[-1,2315,"；"]],[2316,2316],[2315,2315]]],[1542268968822,["gjx16@GJXAIOU",[[1,2315,"："]],[2315,2315],[2316,2316]]],[1542268973664,["gjx16@GJXAIOU",[[1,2321,"\n"]],[2316,2316],[2317,2317]]],[1542268980440,["gjx16@GJXAIOU",[[1,2317,"hello\nNone"]],[2317,2317],[2327,2327]]],[1542268983517,["gjx16@GJXAIOU",[[1,2317,"·"]],[2317,2317],[2318,2318]]],[1542268984641,["gjx16@GJXAIOU",[[-1,2317,"·"]],[2318,2318],[2317,2317]]],[1542268985042,["gjx16@GJXAIOU",[[1,2317,"`"]],[2317,2317],[2318,2318]]],[1542268987042,["gjx16@GJXAIOU",[[1,2323,"`"]],[2323,2323],[2324,2324]]],[1542268988410,["gjx16@GJXAIOU",[[1,2329,"`"]],[2329,2329],[2330,2330]]],[1542268991934,["gjx16@GJXAIOU",[[1,2325,"`"]],[2325,2325],[2326,2326]]],[1542269040971,["gjx16@GJXAIOU",[[1,2333,"cong"]],[2333,2333],[2337,2337]]],[1542269041778,["gjx16@GJXAIOU",[[-1,2333,"cong"]],[2337,2337],[2333,2333]]],[1542269042259,["gjx16@GJXAIOU",[[-1,2335,"\n"]],[2333,2333],[2332,2332]]],[1542269048090,["gjx16@GJXAIOU",[[1,2332,"从输出结果可以"]],[2332,2332],[2339,2339]]],[1542269080430,["gjx16@GJXAIOU",[[1,2339,"看出，第二个print实际上并没有执行，遇到return就跳到调用的地方的"]],[2339,2339],[2376,2376]]],[1542269082391,["gjx16@GJXAIOU",[[-1,2375,"的"]],[2376,2376],[2375,2375]]],[1542269083816,["gjx16@GJXAIOU",[[1,2375,"；额"]],[2375,2375],[2377,2377]]],[1542269084440,["gjx16@GJXAIOU",[[-1,2375,"；额"]],[2377,2377],[2375,2375]]],[1542269085415,["gjx16@GJXAIOU",[[1,2375,"了"]],[2375,2375],[2376,2376]]],[1542269086536,["gjx16@GJXAIOU",[[1,2379,"\n"]],[2376,2376],[2377,2377]]],[1542269086672,["gjx16@GJXAIOU",[[1,2380,"\n"]],[2377,2377],[2378,2378]]],[1542271089650,["gjx16@GJXAIOU",[[1,2381,"\n"]],[2378,2378],[2379,2379]]],[1542271089806,["gjx16@GJXAIOU",[[1,2382,"\n"]],[2379,2379],[2380,2380]]],[1542271098621,["gjx16@GJXAIOU",[[1,2380,"### 。3"]],[2380,2380],[2386,2386]]],[1542271099446,["gjx16@GJXAIOU",[[-1,2384,"。3"]],[2386,2386],[2384,2384]]],[1542271101155,["gjx16@GJXAIOU",[[1,2384,"3，"]],[2384,2384],[2386,2386]]],[1542271102000,["gjx16@GJXAIOU",[[-1,2385,"，"]],[2386,2386],[2385,2385]]],[1542271104621,["gjx16@GJXAIOU",[[1,2385,",.2.2"]],[2385,2385],[2390,2390]]],[1542271108133,["gjx16@GJXAIOU",[[-1,2385,","]],[2386,2386],[2385,2385]]],[1542271111264,["gjx16@GJXAIOU",[[1,2389,"  h"]],[2389,2389],[2392,2392]]],[1542271111782,["gjx16@GJXAIOU",[[-1,2391,"h"]],[2392,2392],[2391,2391]]],[1542271123639,["gjx16@GJXAIOU",[[1,2391,"函数中的文档"]],[2391,2391],[2397,2397]]],[1542271124359,["gjx16@GJXAIOU",[[1,2400,"\n"]],[2397,2397],[2398,2398]]],[1542271128864,["gjx16@GJXAIOU",[[1,2398,"```"]],[2398,2398],[2401,2401]]],[1542271128895,["gjx16@GJXAIOU",[[1,2401,"language\n```\n"]],[2401,2401],[2401,2409]]],[1542271130202,["gjx16@GJXAIOU",[[-1,2401,"language"],[1,2409,"p"]],[2401,2409],[2402,2402]]],[1542271130833,["gjx16@GJXAIOU",[[1,2402,"ython"]],[2402,2402],[2407,2407]]],[1542271131606,["gjx16@GJXAIOU",[[1,2408,"\n"]],[2407,2407],[2408,2408]]],[1542271135245,["gjx16@GJXAIOU",[[1,2408,"'''\n函数文档注释；p156\n'''\n\ndef eilieili():\n    \"\"\"\n    this is a function,haha\n\n    \"\"\"\n    print(\"lalala\")\n    \nprint(eilieili.__doc__)  # 参数含义：函数名.__doc__  \n#打印函数功能注释：首先注释必须在函数内部"]],[2408,2408],[2582,2582]]],[1542271183402,["gjx16@GJXAIOU",[[1,2590,"\n"]],[2586,2586],[2587,2587]]],[1542271183535,["gjx16@GJXAIOU",[[1,2591,"\n"]],[2587,2587],[2588,2588]]],[1542271183683,["gjx16@GJXAIOU",[[1,2592,"\n"]],[2588,2588],[2589,2589]]],[1542271183794,["gjx16@GJXAIOU",[[1,2593,"\n"]],[2589,2589],[2590,2590]]],[1542271188057,["gjx16@GJXAIOU",[[1,2590,"### 4"]],[2590,2590],[2595,2595]]],[1542271188573,["gjx16@GJXAIOU",[[-1,2594,"4"]],[2595,2595],[2594,2594]]],[1542271192800,["gjx16@GJXAIOU",[[1,2594,"3.2.3 hanshu"]],[2594,2594],[2606,2606]]],[1542271193846,["gjx16@GJXAIOU",[[-1,2600,"hanshu"]],[2606,2606],[2600,2600]]],[1542271197617,["gjx16@GJXAIOU",[[1,2600,"函数的属性"]],[2600,2600],[2605,2605]]],[1542271292980,["gjx16@GJXAIOU",[[1,2606,"因为函数也是对此案"]],[2606,2606],[2615,2615]]],[1542271293862,["gjx16@GJXAIOU",[[-1,2612,"对此案"]],[2615,2615],[2612,2612]]],[1542271302722,["gjx16@GJXAIOU",[[1,2612,"对象，所以函数也有属性"]],[2612,2612],[2623,2623]]],[1542271303450,["gjx16@GJXAIOU",[[1,2626,"\n"]],[2623,2623],[2624,2624]]],[1542271303902,["gjx16@GJXAIOU",[[1,2627,"\n"]],[2624,2624],[2625,2625]]],[1542271320688,["gjx16@GJXAIOU",[[1,2625,"- 使用：``"]],[2625,2625],[2632,2632]]],[1542271324381,["gjx16@GJXAIOU",[[1,2631,"dir()"]],[2631,2631],[2636,2636]]],[1542271329359,["gjx16@GJXAIOU",[[1,2635,"函数名"]],[2635,2635],[2638,2638]]],[1542271332279,["gjx16@GJXAIOU",[[1,2640," k"]],[2640,2640],[2642,2642]]],[1542271333094,["gjx16@GJXAIOU",[[-1,2641,"k"]],[2642,2642],[2641,2641]]],[1542271344829,["gjx16@GJXAIOU",[[1,2641,"，可以得到该函数所有的顺序"]],[2641,2641],[2654,2654]]],[1542271345560,["gjx16@GJXAIOU",[[-1,2652,"顺序"]],[2654,2654],[2652,2652]]],[1542271377419,["gjx16@GJXAIOU",[[1,2652,"属性和方法，其中一双下划线开始的是特殊属性，都可以使用据点"]],[2652,2652],[2681,2681]]],[1542271378062,["gjx16@GJXAIOU",[[-1,2679,"据点"]],[2681,2681],[2679,2679]]],[1542271386654,["gjx16@GJXAIOU",[[1,2679,"句点的方式调用"]],[2679,2679],[2686,2686]]],[1542271387047,["gjx16@GJXAIOU",[[1,2687,"- \n"]],[2686,2686],[2689,2689]]],[1542271388367,["gjx16@GJXAIOU",[[-1,2688," "]],[2689,2689],[2688,2688]]],[1542271388862,["gjx16@GJXAIOU",[[-1,2687,"-"]],[2688,2688],[2687,2687]]],[1542271502906,["gjx16@GJXAIOU",[[1,2687,"```"]],[2687,2687],[2690,2690]]],[1542271502940,["gjx16@GJXAIOU",[[1,2690,"language\n```\n"]],[2690,2690],[2690,2698]]],[1542271504066,["gjx16@GJXAIOU",[[-1,2690,"language"],[1,2698,"p"]],[2690,2698],[2691,2691]]],[1542271504713,["gjx16@GJXAIOU",[[1,2691,"ython"]],[2691,2691],[2696,2696]]],[1542271505671,["gjx16@GJXAIOU",[[1,2697,"\n"]],[2696,2696],[2697,2697]]],[1542271508552,["gjx16@GJXAIOU",[[1,2697,"\"\"\"\n\n函数的属性：P156\n\"\"\"\n\ndef filifili():\n    print(\"hahha\")\n\nprint(dir(filifili))"]],[2697,2697],[2774,2774]]],[1542271513265,["gjx16@GJXAIOU",[[1,2782,"\n"]],[2778,2778],[2779,2779]]],[1542271514441,["gjx16@GJXAIOU",[[1,2783,"\n"]],[2779,2779],[2780,2780]]],[1542271515075,["gjx16@GJXAIOU",[[1,2780,"c"]],[2780,2780],[2781,2781]]],[1542271515722,["gjx16@GJXAIOU",[[-1,2780,"c"]],[2781,2781],[2780,2780]]],[1542271520240,["gjx16@GJXAIOU",[[1,2780,"程序运行结果："]],[2780,2780],[2787,2787]]],[1542271520696,["gjx16@GJXAIOU",[[1,2791,"\n"]],[2787,2787],[2788,2788]]],[1542271558535,["gjx16@GJXAIOU",[[1,2788,"['__annotations__', '__call__', '__class__', '__closure__', '__code__', '__defaults__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__get__', '__getattribute__', '__globals__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__kwdefaults__', '__le__', '__lt__', '__module__', '__name__', '__ne__', '__new__', '__qualname__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__']"]],[2788,2788],[3263,3263]]],[1542271566165,["gjx16@GJXAIOU",[[1,2788,"·"]],[2788,2788],[2789,2789]]],[1542271567734,["gjx16@GJXAIOU",[[-1,2788,"·"]],[2789,2789],[2788,2788]]],[1542271568202,["gjx16@GJXAIOU",[[1,2788,"`"]],[2788,2788],[2789,2789]]],[1542271569875,["gjx16@GJXAIOU",[[1,3264,"`"]],[3264,3264],[3265,3265]]],[1542271574032,["gjx16@GJXAIOU",[[1,3269,"\n"]],[3265,3265],[3266,3266]]],[1542271574168,["gjx16@GJXAIOU",[[1,3270,"\n"]],[3266,3266],[3267,3267]]],[1542271574296,["gjx16@GJXAIOU",[[1,3271,"\n"]],[3267,3267],[3268,3268]]],[1542271617769,["gjx16@GJXAIOU",[[1,3268,"### 3,2,4"]],[3268,3268],[3277,3277]]],[1542271619014,["gjx16@GJXAIOU",[[-1,3273,",2,4"]],[3277,3277],[3273,3273]]],[1542271622851,["gjx16@GJXAIOU",[[1,3273,".2.4 cna"]],[3273,3273],[3281,3281]]],[1542271623543,["gjx16@GJXAIOU",[[-1,3278,"cna"]],[3281,3281],[3278,3278]]],[1542271627542,["gjx16@GJXAIOU",[[1,3278,"参数和"]],[3278,3278],[3281,3281]]],[1542271628734,["gjx16@GJXAIOU",[[1,3281,"变拉近"]],[3281,3281],[3284,3284]]],[1542271629478,["gjx16@GJXAIOU",[[-1,3281,"变拉近"]],[3284,3284],[3281,3281]]],[1542271631333,["gjx16@GJXAIOU",[[1,3281,"变量"]],[3281,3281],[3283,3283]]],[1542272070879,["gjx16@GJXAIOU",[[1,3287,"\n"]],[3283,3283],[3284,3284]]],[1542272105233,["gjx16@GJXAIOU",[[1,3284,"==函数参数传递的是对象的应用=="]],[3284,3284],[3301,3301]]],[1542272106920,["gjx16@GJXAIOU",[[1,3305,"\n"]],[3301,3301],[3302,3302]]],[1542272132121,["gjx16@GJXAIOU",[[1,3302,"```"]],[3302,3302],[3305,3305]]],[1542272132155,["gjx16@GJXAIOU",[[1,3305,"language\n```\n"]],[3305,3305],[3305,3313]]],[1542272133634,["gjx16@GJXAIOU",[[-1,3305,"language"],[1,3313,"p"]],[3305,3313],[3306,3306]]],[1542272134424,["gjx16@GJXAIOU",[[1,3306,"ython"]],[3306,3306],[3311,3311]]],[1542272135152,["gjx16@GJXAIOU",[[1,3312,"\n"]],[3311,3311],[3312,3312]]],[1542272393031,["gjx16@GJXAIOU",[[1,3313,"\"\"\"\n参数与变量 ：p159\n\"\"\"\n\ndef giligili(lst):\n    lst.append(0)\n    return lst\n\nx = [1,2,3]\ny = giligili(x)\nprint(y)\n\n#这里实现的是原地修改\nprint(id(x))\nprint(id(y))\n"]],[3312,3312],[3462,3462]]],[1542272398232,["gjx16@GJXAIOU",[[1,3471,"\n"]],[3466,3466],[3467,3467]]],[1542272399716,["gjx16@GJXAIOU",[[1,3467,"c"]],[3467,3467],[3468,3468]]],[1542272400359,["gjx16@GJXAIOU",[[-1,3467,"c"]],[3468,3468],[3467,3467]]],[1542272404982,["gjx16@GJXAIOU",[[1,3467,"程序运行结果；"]],[3467,3467],[3474,3474]]],[1542272405903,["gjx16@GJXAIOU",[[1,3479,"\n"]],[3474,3474],[3475,3475]]],[1542272414607,["gjx16@GJXAIOU",[[1,3475,"[1, 2, 3, 0]\n1887845442120\n1887845442120"]],[3475,3475],[3515,3515]]],[1542272417500,["gjx16@GJXAIOU",[[1,3475,"·"]],[3475,3475],[3476,3476]]],[1542272418530,["gjx16@GJXAIOU",[[-1,3475,"·"]],[3476,3476],[3475,3475]]],[1542272418898,["gjx16@GJXAIOU",[[1,3475,"`"]],[3475,3475],[3476,3476]]],[1542272420082,["gjx16@GJXAIOU",[[1,3489,"`"]],[3489,3489],[3490,3490]]],[1542272420537,["gjx16@GJXAIOU",[[1,3504,"`"]],[3504,3504],[3505,3505]]],[1542272423032,["gjx16@GJXAIOU",[[1,3518,"`"]],[3518,3518],[3519,3519]]],[1542272423404,["gjx16@GJXAIOU",[[1,3503,"`"]],[3503,3503],[3504,3504]]],[1542272423980,["gjx16@GJXAIOU",[[1,3488,"`"]],[3488,3488],[3489,3489]]],[1542284016901,["gjx16@GJXAIOU",[[1,3302,"\n"]],[3301,3301],[3302,3302]]]],null,"gjx16@GJXAIOU"],["2f7e060a-8545-4b52-a052-124cfa480b24",1542284337581,"---\ndate：`2018-11-15`\n---\n\n# 第3章 函数\n\n\n## 3.1函数的基本概念\n\n### 3.1.1 理解函数\n\n- 变量本质上时占位符，变量名通常使用小写字母进行命名，可以使用下划线连接多个单词\n\n\n\n### 3.1.2 定义函数\n1.标准格式\n```python\n#!/usr/bin/env python\n# -*- coding:utf-8 -*-\n#@Time :2018/11/15 14:49\n#Author:GJXAIOU\n\ndef add_function(a,b): \n    #定义一个函数使用 ：  def   函数名（参数）:    其中：表示函数头的结束\n    # 函数名的命名；小写字母或者单下划线或者数字\n    #这里x,y作为形参，也可以认为是变量，而变量无类型，所以并没有规定其所引用的对象的类型，意义取决于对象的类型，称为多态\n    c = a + b   # 函数体必须缩进4个空格\n    return c  #return语句执行的时候，python会跳出当前的函数并且返回到调用这个函数的地方\n\n\nif __name__ == \"__main__\":\n    result = add_function(2,3)  #调用函数并且将实参传递给函数\n    print(result)\n\n\n# 下面为函数的其他使用方法\n\n# 只写函数名会得到该函数在内存中的存储信息\nprint(add_function)\n\n# 赋值语句可以实现变量和函数对象建立应用关系，\nc= add_function\nresult1 = c(3,4)\nprint(result1)\n```\n程序运行结果：\n`5`\n`<function add_function at 0x000001E65BA4D2F0>`\n`7`\n\n\n### 3.1.3 函数的命名\n- **变量名：** 全部小写，使用下划线连接各个单词\n- **文件名：** 全部小写，可以使用下划线\n- **函数名：** 小写，可以使用下划线\n- **函数的参数：** 同变量，本质上就是变量\n\n\n\n\n\n\n### 3.1.4 调用函数\n**函数调用的时候参数赋值方法**\n```python\n'''\n调用函数 p151\n'''\ndef add(x,y):\n    print(\"x = {}\".format(x))\n    print(\"y = {}\".format(y))\n    return x +y\n\n#参数赋值方法一：\nans1 = add(2,3) #这里传递参数默认按照次序依次赋值\nprint(\"ans = \",ans1)\n\n#参数赋值方法二：\n\nans2 = add(y = 4,x = 5) #直接使用变量= 变量值进行赋值，这就不用理会什么顺序\nprint(ans2)\n\n```\n程序运行结果：\n`x = 2`\n`y = 3`\n`ans =  5`\n`x = 5`\n`y = 4`\n`9`\n\n**特殊：当函数在定义的时候，部分参数赋值**\n```python\n'''\n当定义函数的时候进行部分参数赋值\n'''\n\n #def acfun(x = 1,y,z = 4 ): 这种定义方法是错误的，因为有默认值的参数必须都在没有默认值参数后面\ndef acfun(x,y,z= 1):\n    acans = x +y +z\n    return acans\n\nans1 = acfun(1,2) #可以不给z赋值，则使用默认值\nans2 = acfun(2,3,2)#如果赋值，则使用这个值\nprint(\"ans1 = \",ans1)\nprint(\"ans2 = \",ans2)\n\n```\n程序运行结果：\n`ans1 =  4`\n`ans2 =  7`\n\n\n\n\n\n## 3.2 深入探究函数\n\n\n### 3.2.1 函数返回值\n\n**示例程序：实现Fibonacci数列**\n```python\n\n'''\n\n实现Fibonacci数列：P153\n'''\n\n\n# 此函数只有一个返回值（一个列表）\n\ndef fib(n):\n    result = [0,1]  # 以列表形式返回\n    for i in range(n-2):\n        result.append(result[-2] + result[-1])\n    return result\n\nif __name__ == \"__main__\":\n    haha = fib(10)\n    print(haha)\n\n\n# 但函数的返回值有多个时候，返回值类型为元组\n\ndef bilibili():\n    return 1,2,3\n\n##接受返回值的方法一；\nans = bilibili()\nprint(\"ans = \" ,ans)\n\n##接受函数返回值的方法二：\nx,y,z = bilibili()\nprint(x,y,z)\n\n\n# 如果函数没有return，则返回值为None\n```\n\n**return 作用**\n- 返回函数的结果：\n- 中断函数体内的流程，离开这个函数，即结束正在执行的这个函数，并离开函数体返回到调用位置\n示例程序；\n```python\n'''\n验证return的作用：p155\n'''\n\ndef dilidili():\n    print(\"hello\")\n    return\n    print(\"world\")\n\nans = dilidili()\nprint(ans)\n```\n程序运行结果：\n`hello`\n`None`\n从输出结果可以看出，第二个print实际上并没有执行，遇到return就跳到调用的地方了\n\n\n\n### 3.2.2  函数中的文档\n```python\n'''\n函数文档注释；p156\n'''\n\ndef eilieili():\n    \"\"\"\n    this is a function,haha\n\n    \"\"\"\n    print(\"lalala\")\n    \nprint(eilieili.__doc__)  # 参数含义：函数名.__doc__  \n#打印函数功能注释：首先注释必须在函数内部\n```\n\n\n\n### 3.2.3 函数的属性\n因为函数也是对象，所以函数也有属性\n\n- 使用：`dir(函数名)` ，可以得到该函数所有的属性和方法，其中一双下划线开始的是特殊属性，都可以使用句点的方式调用\n```python\n\"\"\"\n\n函数的属性：P156\n\"\"\"\n\ndef filifili():\n    print(\"hahha\")\n\nprint(dir(filifili))\n```\n\n程序运行结果：\n`['__annotations__', '__call__', '__class__', '__closure__', '__code__', '__defaults__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__get__', '__getattribute__', '__globals__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__kwdefaults__', '__le__', '__lt__', '__module__', '__name__', '__ne__', '__new__', '__qualname__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__']`\n\n\n### 3.2.4 参数和变量\n==函数参数传递的是对象的应用==\n\n```python\n\n\"\"\"\n参数与变量 ：p159\n\"\"\"\n\ndef giligili(lst):\n    lst.append(0)\n    return lst\n\nx = [1,2,3]\ny = giligili(x)\nprint(y)\n\n#这里实现的是原地修改\nprint(id(x))\nprint(id(y))\n```\n程序运行结果；\n`[1, 2, 3, 0]`\n`1887845442120`\n`1887845442120`\n\n\n\n\n",[[1542284290158,["gjx16@GJXAIOU",[[1,3302,"【"]],[3302,3302],[3303,3303]]],[1542284291131,["gjx16@GJXAIOU",[[-1,3302,"【"]],[3303,3303],[3302,3302]]],[1542284292470,["gjx16@GJXAIOU",[[1,3302,"[]"]],[3302,3302],[3304,3304]]],[1542284296549,["gjx16@GJXAIOU",[[1,3303,"han"]],[3303,3303],[3306,3306]]],[1542284297156,["gjx16@GJXAIOU",[[-1,3303,"han"]],[3306,3306],[3303,3303]]],[1542284306731,["gjx16@GJXAIOU",[[1,3303,"函数参数与变量的关系"]],[3303,3303],[3313,3313]]],[1542284308823,["gjx16@GJXAIOU",[[1,3314,"（）"]],[3314,3314],[3316,3316]]],[1542284310577,["gjx16@GJXAIOU",[[-1,3314,"（）"]],[3316,3316],[3314,3314]]],[1542284311654,["gjx16@GJXAIOU",[[1,3314,"("]],[3314,3314],[3315,3315]]],[1542284311687,["gjx16@GJXAIOU",[[1,3315,"https://)"]],[3315,3315],[3315,3323]]],[1542284311736,["gjx16@GJXAIOU",[[-1,3315,"https://"],[1,3323,")"]],[3315,3323],[3316,3316]]],[1542284317923,["gjx16@GJXAIOU",[[1,3315,"https://foofish.net/python-function-args.html"]],[3315,3315],[3360,3360]]],[1542284320265,["gjx16@GJXAIOU",[[-1,3361,")"]],[3362,3362],[3361,3361]]],[1542284330821,["gjx16@GJXAIOU",[[1,3586,"\n"]],[3583,3583],[3584,3584]]],[1542284330972,["gjx16@GJXAIOU",[[1,3587,"\n"]],[3584,3584],[3585,3585]]],[1542284332619,["gjx16@GJXAIOU",[[1,3588,"\n"]],[3585,3585],[3586,3586]]],[1542284336155,["gjx16@GJXAIOU",[[1,3586,"### 3.2.5 "]],[3586,3586],[3596,3596]]],[1542284340582,["gjx16@GJXAIOU",[[1,3596,"参数手机"]],[3596,3596],[3600,3600]]],[1542284341218,["gjx16@GJXAIOU",[[-1,3598,"手机"]],[3600,3600],[3598,3598]]],[1542284343457,["gjx16@GJXAIOU",[[1,3598,"收集"]],[3598,3598],[3600,3600]]],[1542284343749,["gjx16@GJXAIOU",[[1,3603,"\n"]],[3600,3600],[3601,3601]]],[1542284344922,["gjx16@GJXAIOU",[[1,3604,"\n"]],[3601,3601],[3602,3602]]],[1542284395582,["gjx16@GJXAIOU",[[1,3602,"- 输入参数个数不确定"]],[3602,3602],[3613,3613]]],[1542284396197,["gjx16@GJXAIOU",[[1,3614,"- \n"]],[3613,3613],[3616,3616]]],[1542284397282,["gjx16@GJXAIOU",[[-1,3614,"- "]],[3616,3616],[3614,3614]]],[1542284405796,["gjx16@GJXAIOU",[[1,3614,"```"]],[3614,3614],[3617,3617]]],[1542284405829,["gjx16@GJXAIOU",[[1,3617,"language\n```\n"]],[3617,3617],[3617,3625]]],[1542284406635,["gjx16@GJXAIOU",[[-1,3617,"language"],[1,3625,"p"]],[3617,3625],[3618,3618]]],[1542284407732,["gjx16@GJXAIOU",[[1,3618,"ython"]],[3618,3618],[3623,3623]]],[1542284408482,["gjx16@GJXAIOU",[[1,3624,"\n"]],[3623,3623],[3624,3624]]],[1542285716279,["gjx16@GJXAIOU",[[1,3624,"\"\"\"\n参数收集：p160\n\"\"\"\n\ndef foo(x,*arg):\n    print(arg)\n\nfoo(1,2,3,4,5,6,7)  #将第一个赋值给x之后，其余后面的所有的都以元组的形式赋值给*arg\n\nfoo(1,3)  # 当只有3赋值给*arg时候，结果相当于元组中只有一个元素，这时候结果应该是：（3，），元组中单个元素后面要加上逗号\n\n\ndef foobar(x,y,z,*arg,**args):\n    print(\"x = \",x,\"\\n y = \",y,\"\\n z = \",z,\"\\n *arg = \",arg,\"\\n **args = \",args)\n\nfoobar(1,2,3,4,5,6,7,name = \"gaojixu\",age = 23)   #**args得到的值为字典类型，注意赋值方式"]],[3624,3624],[3990,3990]]],[1542285719652,["gjx16@GJXAIOU",[[1,3998,"\n"]],[3994,3994],[3995,3995]]],[1542285721036,["gjx16@GJXAIOU",[[1,3995,"c"]],[3995,3995],[3996,3996]]],[1542285721476,["gjx16@GJXAIOU",[[-1,3995,"c"]],[3996,3996],[3995,3995]]],[1542285725844,["gjx16@GJXAIOU",[[1,3995,"程序运行方式："]],[3995,3995],[4002,4002]]],[1542285726377,["gjx16@GJXAIOU",[[1,4006,"\n"]],[4002,4002],[4003,4003]]],[1542285742043,["gjx16@GJXAIOU",[[1,4004,"(2, 3, 4, 5, 6, 7)\n(3,)\nx =  1 \n y =  2 \n z =  3 \n *arg =  (4, 5, 6, 7) \n **args =  {'name': 'gaojixu', 'age': 23}"]],[4004,4004],[4118,4118]]],[1542285745566,["gjx16@GJXAIOU",[[1,4004,"·"]],[4004,4004],[4005,4005]]],[1542285746737,["gjx16@GJXAIOU",[[-1,4004,"·"]],[4005,4005],[4004,4004]]],[1542285747171,["gjx16@GJXAIOU",[[1,4004,"`"]],[4004,4004],[4005,4005]]],[1542285748494,["gjx16@GJXAIOU",[[1,4024,"`"]],[4024,4024],[4025,4025]]],[1542285749187,["gjx16@GJXAIOU",[[1,4030,"`"]],[4030,4030],[4031,4031]]],[1542285749715,["gjx16@GJXAIOU",[[1,4040,"`"]],[4040,4040],[4041,4041]]],[1542285750230,["gjx16@GJXAIOU",[[1,4050,"`"]],[4050,4050],[4051,4051]]],[1542285750838,["gjx16@GJXAIOU",[[1,4060,"`"]],[4060,4060],[4061,4061]]],[1542285751428,["gjx16@GJXAIOU",[[1,4084,"`"]],[4084,4084],[4085,4085]]],[1542285754891,["gjx16@GJXAIOU",[[1,4125,"`"]],[4125,4125],[4126,4126]]],[1542285755285,["gjx16@GJXAIOU",[[1,4082,"`"]],[4082,4082],[4083,4083]]],[1542285755692,["gjx16@GJXAIOU",[[1,4058,"`"]],[4058,4058],[4059,4059]]],[1542285756091,["gjx16@GJXAIOU",[[1,4048,"`"]],[4048,4048],[4049,4049]]],[1542285756395,["gjx16@GJXAIOU",[[1,4038,"`"]],[4038,4038],[4039,4039]]],[1542285757015,["gjx16@GJXAIOU",[[1,4029,"`"]],[4029,4029],[4030,4030]]],[1542285759803,["gjx16@GJXAIOU",[[1,4023,"`"]],[4023,4023],[4024,4024]]],[1542285770673,["gjx16@GJXAIOU",[[1,3915," #zhu"]],[3915,3915],[3920,3920]]],[1542285771528,["gjx16@GJXAIOU",[[-1,3917,"zhu"]],[3920,3920],[3917,3917]]],[1542285778303,["gjx16@GJXAIOU",[[1,3917,"注意这里打印输出"]],[3917,3917],[3925,3925]]],[1542285786125,["gjx16@GJXAIOU",[[1,3925,"只需要写arg,v"]],[3925,3925],[3934,3934]]],[1542285786469,["gjx16@GJXAIOU",[[-1,3933,"v"]],[3934,3934],[3933,3933]]],[1542285791266,["gjx16@GJXAIOU",[[1,3933,"不需要写*"]],[3933,3933],[3938,3938]]],[1542285800003,["gjx16@GJXAIOU",[[1,3916,"\n    "]],[3916,3916],[3921,3921]]],[1542285803422,["gjx16@GJXAIOU",[[1,4161," \n"]],[4160,4160],[4162,4162]]],[1542285803559,["gjx16@GJXAIOU",[[-1,4161," "],[1,4162,"\n"]],[4162,4162],[4162,4162]]],[1542285804075,["gjx16@GJXAIOU",[[1,4165,"\n"]],[4162,4162],[4163,4163]]],[1542285804229,["gjx16@GJXAIOU",[[1,4166,"\n"]],[4163,4163],[4164,4164]]],[1542285813888,["gjx16@GJXAIOU",[[1,4164,"## 3.3 函数对象"]],[4164,4164],[4175,4175]]],[1542285814379,["gjx16@GJXAIOU",[[1,4178,"\n"]],[4175,4175],[4176,4176]]],[1542285814921,["gjx16@GJXAIOU",[[1,4179,"\n"]],[4176,4176],[4177,4177]]],[1542285866217,["gjx16@GJXAIOU",[[1,4177,"### 3.3.1递归"]],[4177,4177],[4188,4188]]],[1542285866820,["gjx16@GJXAIOU",[[1,4191,"\n"]],[4188,4188],[4189,4189]]],[1542285867509,["gjx16@GJXAIOU",[[1,4192,"\n"]],[4189,4189],[4190,4190]]],[1542285885468,["gjx16@GJXAIOU",[[1,4190,"- 使用递归的方法实现费伯纳西"]],[4190,4190],[4205,4205]]],[1542285886393,["gjx16@GJXAIOU",[[-1,4201,"费伯纳西"]],[4205,4205],[4201,4201]]],[1542285903106,["gjx16@GJXAIOU",[[1,4201,"Fibonacci数列"]],[4201,4201],[4212,4212]]],[1542285903648,["gjx16@GJXAIOU",[[1,4213,"- \n"]],[4212,4212],[4215,4215]]],[1542285904633,["gjx16@GJXAIOU",[[-1,4213,"- "]],[4215,4215],[4213,4213]]],[1542285906525,["gjx16@GJXAIOU",[[1,4213,"```"]],[4213,4213],[4216,4216]]],[1542285906560,["gjx16@GJXAIOU",[[1,4216,"language\n```\n"]],[4216,4216],[4216,4224]]],[1542285907405,["gjx16@GJXAIOU",[[-1,4216,"language"],[1,4224,"p"]],[4216,4224],[4217,4217]]],[1542285908141,["gjx16@GJXAIOU",[[1,4217,"yhton"]],[4217,4217],[4222,4222]]],[1542285908539,["gjx16@GJXAIOU",[[1,4223,"\n"]],[4222,4222],[4223,4223]]],[1542285909576,["gjx16@GJXAIOU",[[-1,4223,"\n"]],[4223,4223],[4222,4222]]],[1542285910560,["gjx16@GJXAIOU",[[-1,4218,"hton"]],[4222,4222],[4218,4218]]],[1542285911924,["gjx16@GJXAIOU",[[1,4218,"thon"]],[4218,4218],[4222,4222]]],[1542285912482,["gjx16@GJXAIOU",[[1,4223,"\n"]],[4222,4222],[4223,4223]]],[1542285913244,["gjx16@GJXAIOU",[[1,4224,"\n"]],[4223,4223],[4224,4224]]],[1542286835481,["gjx16@GJXAIOU",[[1,4190,"\n"]],[4189,4189],[4190,4190]]],[1542286838886,["gjx16@GJXAIOU",[[1,4190,"[li"]],[4190,4190],[4193,4193]]],[1542286839319,["gjx16@GJXAIOU",[[-1,4191,"li"]],[4193,4193],[4191,4191]]],[1542286841943,["gjx16@GJXAIOU",[[1,4191,"]("]],[4191,4191],[4193,4193]]],[1542286841987,["gjx16@GJXAIOU",[[1,4193,"https://)"]],[4193,4193],[4193,4201]]],[1542286842063,["gjx16@GJXAIOU",[[-1,4193,"https://"],[1,4201,")"]],[4193,4201],[4194,4194]]],[1542286844010,["gjx16@GJXAIOU",[[-1,4194,")"]],[4195,4195],[4194,4194]]],[1542286856981,["gjx16@GJXAIOU",[[1,4191,"理解python函数入口"]],[4191,4191],[4203,4203]]],[1542286859173,["gjx16@GJXAIOU",[[1,4205,"https://blog.csdn.net/gaojixu/article/details/84110883"]],[4205,4205],[4259,4259]]],[1542286930153,["gjx16@GJXAIOU",[[1,4295,"\"\"\"\n函数递归：使用递归的方法实现Fibonacci数列值\n\"\"\"\n\ndef fib(n):\n    \"\"\"\n    This is a Fibonacci by Recursion\n\n    \"\"\"\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return fib(n-1) +fib(n-2)\n\n\nif __name__ == \"__main__\":\n    f = fib(10)\n    print(f)\n\n"]],[4294,4294],[4565,4565]]],[1542286942794,["gjx16@GJXAIOU",[[1,4188," ==谨慎使用++++"]],[4188,4188],[4197,4197]]],[1542286943906,["gjx16@GJXAIOU",[[-1,4197,"++"]],[4197,4197],[4195,4195]]],[1542286945353,["gjx16@GJXAIOU",[[-1,4195,"++"]],[4197,4197],[4195,4195]]],[1542286945713,["gjx16@GJXAIOU",[[1,4195,"=="]],[4195,4195],[4197,4197]]],[1542286950409,["gjx16@GJXAIOU",[[1,4583,"\n"]],[4579,4579],[4580,4580]]],[1542286955352,["gjx16@GJXAIOU",[[1,4580,"程序运行结果："]],[4580,4580],[4587,4587]]],[1542286956091,["gjx16@GJXAIOU",[[1,4591,"\n"]],[4587,4587],[4588,4588]]],[1542286961952,["gjx16@GJXAIOU",[[1,4588,"55"]],[4588,4588],[4590,4590]]],[1542286963941,["gjx16@GJXAIOU",[[1,4588,"`"]],[4588,4588],[4589,4589]]],[1542286965595,["gjx16@GJXAIOU",[[1,4591,"`"]],[4591,4591],[4592,4592]]],[1542286971200,["gjx16@GJXAIOU",[[1,4596,"\n"]],[4592,4592],[4593,4593]]],[1542286971320,["gjx16@GJXAIOU",[[1,4597,"\n"]],[4593,4593],[4594,4594]]],[1542287149169,["gjx16@GJXAIOU",[[1,4594,"###"]],[4594,4594],[4597,4597]]],[1542287152106,["gjx16@GJXAIOU",[[1,4594,"\n"]],[4593,4593],[4594,4594]]],[1542287152228,["gjx16@GJXAIOU",[[1,4595,"\n"]],[4594,4594],[4595,4595]]],[1542287158691,["gjx16@GJXAIOU",[[1,4599," chuand"]],[4599,4599],[4606,4606]]],[1542287159762,["gjx16@GJXAIOU",[[-1,4600,"chuand"]],[4606,4606],[4600,4600]]],[1542287163400,["gjx16@GJXAIOU",[[1,4600,"传递函数（0"]],[4600,4600],[4606,4606]]],[1542287165248,["gjx16@GJXAIOU",[[-1,4604,"（0"]],[4606,4606],[4604,4604]]],[1542287166348,["gjx16@GJXAIOU",[[1,4604,"（）"]],[4604,4604],[4606,4606]]],[1542287170859,["gjx16@GJXAIOU",[[1,4605,"函数做参数"]],[4605,4605],[4610,4610]]],[1542287173080,["gjx16@GJXAIOU",[[1,4615,"\n"]],[4611,4611],[4612,4612]]],[1542287243341,["gjx16@GJXAIOU",[[1,4334," p163"]],[4334,4334],[4339,4339]]],[1542287896479,["gjx16@GJXAIOU",[[1,4617,"···"]],[4617,4617],[4620,4620]]],[1542287897496,["gjx16@GJXAIOU",[[-1,4617,"···"]],[4620,4620],[4617,4617]]],[1542287898794,["gjx16@GJXAIOU",[[1,4617,"```"]],[4617,4617],[4620,4620]]],[1542287898830,["gjx16@GJXAIOU",[[1,4620,"language\n```\n"]],[4620,4620],[4620,4628]]],[1542287899901,["gjx16@GJXAIOU",[[-1,4620,"language"],[1,4628,"p"]],[4620,4628],[4621,4621]]],[1542287900595,["gjx16@GJXAIOU",[[1,4621,"ython"]],[4621,4621],[4626,4626]]],[1542287901183,["gjx16@GJXAIOU",[[1,4627,"\n"]],[4626,4626],[4627,4627]]],[1542287905697,["gjx16@GJXAIOU",[[1,4628,"\"\"\"\n传递函数：函数做参数 P164\n\"\"\"\n\ndef power_seq(func,seq):\n    #因为pingfang也是一个函数名，可以这样理解：func = pingfang ,\n    #后面一个参数seq 接受num_seq中的列表\n    return [func(i) for i in seq]\n    #因为func = pingfang ,所以func(i)，其实本质上为pingfang(i ),相当于在调用函数\n\"\"\"\n上面的语句等价为：\nfor i in seq\n    return fun(i)\n\"\"\"\n\ndef pingfang(x):\n    return x **2\n\nif __name__ == \"__main__\":\n    num_seq = [111,3.14,8,44]\n    r = power_seq(pingfang,num_seq) #调用函数，传递参数\n    print(num_seq)\n    print(r)\n\n\n"]],[4627,4627],[5073,5073]]],[1542287915135,["gjx16@GJXAIOU",[[1,5078,"程勋"]],[5078,5078],[5080,5080]]],[1542287915729,["gjx16@GJXAIOU",[[-1,5078,"程勋"]],[5080,5080],[5078,5078]]],[1542287921494,["gjx16@GJXAIOU",[[1,5078,"程序运行结果："]],[5078,5078],[5085,5085]]],[1542287922016,["gjx16@GJXAIOU",[[1,5089,"\n"]],[5085,5085],[5086,5086]]],[1542287928936,["gjx16@GJXAIOU",[[1,5086,"[111, 3.14, 8, 44]\n[12321, 9.8596, 64, 1936]"]],[5086,5086],[5130,5130]]],[1542287931151,["gjx16@GJXAIOU",[[1,5086,"`"]],[5086,5086],[5087,5087]]],[1542287933450,["gjx16@GJXAIOU",[[1,5106,"`"]],[5106,5106],[5107,5107]]],[1542287936266,["gjx16@GJXAIOU",[[1,5132,"`"]],[5132,5132],[5133,5133]]],[1542287936642,["gjx16@GJXAIOU",[[1,5105,"`"]],[5105,5105],[5106,5106]]],[1542287939652,["gjx16@GJXAIOU",[[1,5138,"\n"]],[5134,5134],[5135,5135]]],[1542287939811,["gjx16@GJXAIOU",[[1,5139,"\n"]],[5135,5135],[5136,5136]]],[1542287940392,["gjx16@GJXAIOU",[[1,5140,"\n"]],[5136,5136],[5137,5137]]],[1542288835372,["gjx16@GJXAIOU",[[1,4605,"3.3.2"]],[4605,4605],[4610,4610]]],[1542288839744,["gjx16@GJXAIOU",[[1,5146,"\n"]],[5140,5140],[5141,5141]]],[1542288839871,["gjx16@GJXAIOU",[[1,5147,"\n"]],[5141,5141],[5142,5142]]],[1542288842106,["gjx16@GJXAIOU",[[1,5142,"### "]],[5142,5142],[5146,5146]]],[1542288843362,["gjx16@GJXAIOU",[[1,5147,","]],[5147,5147],[5148,5148]]],[1542288844064,["gjx16@GJXAIOU",[[-1,5147,","]],[5148,5148],[5147,5147]]],[1542288847454,["gjx16@GJXAIOU",[[1,5147,".3.3 qian"]],[5147,5147],[5156,5156]]],[1542288848730,["gjx16@GJXAIOU",[[-1,5152,"qian"]],[5156,5156],[5152,5152]]],[1542288853097,["gjx16@GJXAIOU",[[1,5152,"嵌套函数"]],[5152,5152],[5156,5156]]],[1542288854559,["gjx16@GJXAIOU",[[1,5162,"\n"]],[5156,5156],[5157,5157]]],[1542288964119,[null,[[-1,5146,"\n"],[1,5147,"3"],[1,5156,"\n"]],[5146,5146],[5157,5157]]],[1542288964119,[null,[[1,5146,"\n"],[-1,5146,"3"],[-1,5156,"\n"]],[5157,5157],[5146,5146]]],[1542288910883,["gjx16@GJXAIOU",[[1,5163,"\n"]],[5156,5156],[5157,5157]]],[1542289444132,[null,[[-1,5146,"\n"],[1,5147,"3"],[1,5156,"\n"]],[5146,5146],[5157,5157]]],[1542289444132,[null,[[1,5146,"\n"],[-1,5146,"3"],[-1,5156,"\n"]],[5157,5157],[5146,5146]]],[1542289429149,["gjx16@GJXAIOU",[[1,4870,"def power_seq(func,seq):\n    ans = []\n    "],[1,4882,":\n        ans.append(func(i))"],[-1,4894,"fun(i)"],[1,4900,"ans"]],[4870,4900],[4968,4968]]],[1542289441118,["gjx16@GJXAIOU",[[1,4907,"   #新建一个空列表"]],[4907,4907],[4918,4918]]],[1542289504131,[null,[[-1,5225,"\n"],[1,5226,"3"],[1,5235,"\n"]],[5225,5225],[5236,5236]]],[1542289504131,[null,[[1,5225,"\n"],[-1,5225,"3"],[-1,5235,"\n"]],[5236,5236],[5225,5225]]],[1542289460184,["gjx16@GJXAIOU",[[1,4964," #列表中加元素使用追加"]],[4964,4964],[4976,4976]]],[1542289744139,[null,[[-1,5237,"\n"],[1,5238,"3"],[1,5247,"\n"]],[5237,5237],[5248,5248]]],[1542289744139,[null,[[1,5237,"\n"],[-1,5237,"3"],[-1,5247,"\n"]],[5248,5248],[5237,5237]]],[1542289735737,["gjx16@GJXAIOU",[[1,5249,"```"]],[5249,5249],[5252,5252]]],[1542289735770,["gjx16@GJXAIOU",[[1,5252,"language\n```\n"]],[5252,5252],[5252,5260]]],[1542289736833,["gjx16@GJXAIOU",[[-1,5252,"language"],[1,5260,"p"]],[5252,5260],[5253,5253]]],[1542289737522,["gjx16@GJXAIOU",[[1,5253,"ython"]],[5253,5253],[5258,5258]]],[1542289738160,["gjx16@GJXAIOU",[[1,5259,"\n"]],[5258,5258],[5259,5259]]],[1542289739361,["gjx16@GJXAIOU",[[1,5259,"\"\"\" 嵌套函数：P164 \"\"\"   def foo():\n    def bar():\n        print(\"bar() is running\")\n    #bar()  可以在这里进行调用执行\n  print(\"foo() is running \")\n\nprint(foo()) #调用执行foo()函数,注意这里并没有调用bar()函数，所以bar()函数不执行 #print(bar()) #在函数外部不能调用里面定义的函数，这能在函数内部调用"]],[5259,5259],[5490,5490]]],[1542289741168,["gjx16@GJXAIOU",[[-1,5259,"\"\"\" 嵌套函数：P164 \"\"\"   def foo():\n    def bar():\n        print(\"bar() is running\")\n    #bar()  可以在这里进行调用执行\n  print(\"foo() is running \")\n\nprint(foo()) #调用执行foo()函数,注意这里并没有调用bar()函数，所以bar()函数不执行 #print(bar()) #在函数外部不能调用里面定义的函数，这能在函数内部调用"]],[5490,5490],[5259,5259]]],[1542289743209,["gjx16@GJXAIOU",[[1,5259,"\"\"\"\n嵌套函数：P164\n\"\"\"\n\ndef foo():\n    def bar():\n        print(\"bar() is running\")\n    #bar()  可以在这里进行调用执行\n    print(\"foo() is running \")\n\nprint(foo()) #调用执行foo()函数,注意这里并没有调用bar()函数，所以bar()函数不执行\n#print(bar()) #在函数外部不能调用里面定义的函数，这能在函数内部调用"]],[5259,5259],[5491,5491]]],[1542289804168,[null,[[-1,5237,"\n"],[1,5238,"3"],[1,5495,"\n"]],[5237,5237],[5496,5496]]],[1542289804168,[null,[[1,5237,"\n"],[-1,5237,"3"],[-1,5495,"\n"]],[5496,5496],[5237,5237]]],[1542289747041,["gjx16@GJXAIOU",[[1,5502,"\n"]],[5495,5495],[5496,5496]]],[1542289747737,["gjx16@GJXAIOU",[[1,5496,"c"]],[5496,5496],[5497,5497]]],[1542289748560,["gjx16@GJXAIOU",[[-1,5496,"c"]],[5497,5497],[5496,5496]]],[1542289753621,["gjx16@GJXAIOU",[[1,5496,"程序运行结果："]],[5496,5496],[5503,5503]]],[1542289753967,["gjx16@GJXAIOU",[[1,5510,"\n"]],[5503,5503],[5504,5504]]],[1542289759167,["gjx16@GJXAIOU",[[1,5504,"foo() is running \nNone"]],[5504,5504],[5526,5526]]],[1542289761094,["gjx16@GJXAIOU",[[1,5504,"·"]],[5504,5504],[5505,5505]]],[1542289763368,["gjx16@GJXAIOU",[[-1,5504,"·"]],[5505,5505],[5504,5504]]],[1542289763771,["gjx16@GJXAIOU",[[1,5504,"`"]],[5504,5504],[5505,5505]]],[1542289764969,["gjx16@GJXAIOU",[[1,5523,"`"]],[5523,5523],[5524,5524]]],[1542289766145,["gjx16@GJXAIOU",[[1,5528,"`"]],[5528,5528],[5529,5529]]],[1542289768329,["gjx16@GJXAIOU",[[1,5521,"`"]],[5521,5521],[5522,5522]]],[1542289770961,["gjx16@GJXAIOU",[[1,5537,"\n"]],[5531,5531],[5532,5532]]],[1542289771081,["gjx16@GJXAIOU",[[1,5538,"\n"]],[5532,5532],[5533,5533]]],[1542289787535,["gjx16@GJXAIOU",[[1,5539,"\n"]],[5533,5533],[5534,5534]]],[1542289788861,["gjx16@GJXAIOU",[[1,5534,"("]],[5534,5534],[5535,5535]]],[1542289789289,["gjx16@GJXAIOU",[[-1,5534,"("]],[5535,5535],[5534,5534]]],[1542289790565,["gjx16@GJXAIOU",[[1,5534,"****"]],[5534,5534],[5536,5536]]],[1542289791769,["gjx16@GJXAIOU",[[1,5536,"lijie"]],[5536,5536],[5541,5541]]],[1542289792639,["gjx16@GJXAIOU",[[-1,5536,"lijie"]],[5541,5541],[5536,5536]]],[1542289804062,["gjx16@GJXAIOU",[[1,5536,"理解下面的嵌套"]],[5536,5536],[5543,5543]]],[1542289864156,[null,[[-1,5237,"\n"],[1,5238,"3"],[1,5545,"\n"]],[5237,5237],[5546,5546]]],[1542289864156,[null,[[1,5237,"\n"],[-1,5237,"3"],[-1,5545,"\n"]],[5546,5546],[5237,5237]]],[1542289806046,["gjx16@GJXAIOU",[[1,5543,"程序："]],[5543,5543],[5546,5546]]],[1542289807815,["gjx16@GJXAIOU",[[1,5554,"\n"]],[5548,5548],[5549,5549]]],[1542289816229,["gjx16@GJXAIOU",[[1,5549,"```"]],[5549,5549],[5552,5552]]],[1542289816264,["gjx16@GJXAIOU",[[1,5552,"language\n```\n"]],[5552,5552],[5552,5560]]],[1542289817689,["gjx16@GJXAIOU",[[-1,5552,"language"],[1,5560,"p"]],[5552,5560],[5553,5553]]],[1542289818361,["gjx16@GJXAIOU",[[1,5553,"ython"]],[5553,5553],[5558,5558]]],[1542289819176,["gjx16@GJXAIOU",[[1,5559,"\n"]],[5558,5558],[5559,5559]]],[1542290284173,[null,[[-1,5237,"\n"],[1,5238,"3"],[1,5563,"\n"]],[5237,5237],[5564,5564]]],[1542290284173,[null,[[1,5237,"\n"],[-1,5237,"3"],[-1,5563,"\n"]],[5564,5564],[5237,5237]]],[1542290229769,["gjx16@GJXAIOU",[[1,5560,"\"\"\"\n嵌套函数练习：P166\n\"\"\"\n\ndef weight(g):       #第二步：接受值：g = 10\n    def cal_mg(m): #第七步，***\n        return m*g\n    return cal_mg   #第三步：返回cal_mg\n\nw = weight(10)       #第一步：传值，g= 10   #第四步：接受值，w = cal_mg\nmg = w(10)           #第五步：w(10) 相当于：cal_mg(10),调用cal_mg函数\nprint(mg)\n"]],[5559,5559],[5824,5824]]],[1542290232258,["gjx16@GJXAIOU",[[1,5835,"\n"]],[5828,5828],[5829,5829]]],[1542290233561,["gjx16@GJXAIOU",[[1,5829,"c"]],[5829,5829],[5830,5830]]],[1542290234210,["gjx16@GJXAIOU",[[-1,5829,"c"]],[5830,5830],[5829,5829]]],[1542290236774,["gjx16@GJXAIOU",[[1,5829,"长须"]],[5829,5829],[5831,5831]]],[1542290237353,["gjx16@GJXAIOU",[[-1,5829,"长须"]],[5831,5831],[5829,5829]]],[1542290246658,["gjx16@GJXAIOU",[[1,5829,"程序运行结果：``"]],[5829,5829],[5838,5838]]],[1542290248505,["gjx16@GJXAIOU",[[1,5837,"100"]],[5837,5837],[5840,5840]]],[1542290257730,["gjx16@GJXAIOU",[[1,5848,"\n"]],[5843,5843],[5844,5844]]],[1542290259471,["gjx16@GJXAIOU",[[1,5844,"~~~~"]],[5844,5844],[5846,5846]]],[1542290262965,["gjx16@GJXAIOU",[[1,5846,"biji"]],[5846,5846],[5850,5850]]],[1542290264207,["gjx16@GJXAIOU",[[-1,5846,"biji"]],[5850,5850],[5846,5846]]],[1542290269954,["gjx16@GJXAIOU",[[1,5846,"笔记到P166"]],[5846,5846],[5853,5853]]]],null,"gjx16@GJXAIOU"],["ddf46fb7-7dd4-4911-b218-d357601f09c1",1542890756118,"---\ndate：`2018-11-15`\n---\n\n# 第3章 函数\n\n\n## 3.1函数的基本概念\n\n### 3.1.1 理解函数\n\n- 变量本质上时占位符，变量名通常使用小写字母进行命名，可以使用下划线连接多个单词\n\n\n\n### 3.1.2 定义函数\n1.标准格式\n```python\n#!/usr/bin/env python\n# -*- coding:utf-8 -*-\n#@Time :2018/11/15 14:49\n#Author:GJXAIOU\n\ndef add_function(a,b): \n    #定义一个函数使用 ：  def   函数名（参数）:    其中：表示函数头的结束\n    # 函数名的命名；小写字母或者单下划线或者数字\n    #这里x,y作为形参，也可以认为是变量，而变量无类型，所以并没有规定其所引用的对象的类型，意义取决于对象的类型，称为多态\n    c = a + b   # 函数体必须缩进4个空格\n    return c  #return语句执行的时候，python会跳出当前的函数并且返回到调用这个函数的地方\n\n\nif __name__ == \"__main__\":\n    result = add_function(2,3)  #调用函数并且将实参传递给函数\n    print(result)\n\n\n# 下面为函数的其他使用方法\n\n# 只写函数名会得到该函数在内存中的存储信息\nprint(add_function)\n\n# 赋值语句可以实现变量和函数对象建立应用关系，\nc= add_function\nresult1 = c(3,4)\nprint(result1)\n```\n程序运行结果：\n`5`\n`<function add_function at 0x000001E65BA4D2F0>`\n`7`\n\n\n### 3.1.3 函数的命名\n- **变量名：** 全部小写，使用下划线连接各个单词\n- **文件名：** 全部小写，可以使用下划线\n- **函数名：** 小写，可以使用下划线\n- **函数的参数：** 同变量，本质上就是变量\n\n\n\n\n\n\n### 3.1.4 调用函数\n**函数调用的时候参数赋值方法**\n```python\n'''\n调用函数 p151\n'''\ndef add(x,y):\n    print(\"x = {}\".format(x))\n    print(\"y = {}\".format(y))\n    return x +y\n\n#参数赋值方法一：\nans1 = add(2,3) #这里传递参数默认按照次序依次赋值\nprint(\"ans = \",ans1)\n\n#参数赋值方法二：\n\nans2 = add(y = 4,x = 5) #直接使用变量= 变量值进行赋值，这就不用理会什么顺序\nprint(ans2)\n\n```\n程序运行结果：\n`x = 2`\n`y = 3`\n`ans =  5`\n`x = 5`\n`y = 4`\n`9`\n\n**特殊：当函数在定义的时候，部分参数赋值**\n```python\n'''\n当定义函数的时候进行部分参数赋值\n'''\n\n #def acfun(x = 1,y,z = 4 ): 这种定义方法是错误的，因为有默认值的参数必须都在没有默认值参数后面\ndef acfun(x,y,z= 1):\n    acans = x +y +z\n    return acans\n\nans1 = acfun(1,2) #可以不给z赋值，则使用默认值\nans2 = acfun(2,3,2)#如果赋值，则使用这个值\nprint(\"ans1 = \",ans1)\nprint(\"ans2 = \",ans2)\n\n```\n程序运行结果：\n`ans1 =  4`\n`ans2 =  7`\n\n\n\n\n\n## 3.2 深入探究函数\n\n\n### 3.2.1 函数返回值\n\n**示例程序：实现Fibonacci数列**\n```python\n\n'''\n\n实现Fibonacci数列：P153\n'''\n\n\n# 此函数只有一个返回值（一个列表）\n\ndef fib(n):\n    result = [0,1]  # 以列表形式返回\n    for i in range(n-2):\n        result.append(result[-2] + result[-1])\n    return result\n\nif __name__ == \"__main__\":\n    haha = fib(10)\n    print(haha)\n\n\n# 但函数的返回值有多个时候，返回值类型为元组\n\ndef bilibili():\n    return 1,2,3\n\n##接受返回值的方法一；\nans = bilibili()\nprint(\"ans = \" ,ans)\n\n##接受函数返回值的方法二：\nx,y,z = bilibili()\nprint(x,y,z)\n\n\n# 如果函数没有return，则返回值为None\n```\n\n**return 作用**\n- 返回函数的结果：\n- 中断函数体内的流程，离开这个函数，即结束正在执行的这个函数，并离开函数体返回到调用位置\n示例程序；\n```python\n'''\n验证return的作用：p155\n'''\n\ndef dilidili():\n    print(\"hello\")\n    return\n    print(\"world\")\n\nans = dilidili()\nprint(ans)\n```\n程序运行结果：\n`hello`\n`None`\n从输出结果可以看出，第二个print实际上并没有执行，遇到return就跳到调用的地方了\n\n\n\n### 3.2.2  函数中的文档\n```python\n'''\n函数文档注释；p156\n'''\n\ndef eilieili():\n    \"\"\"\n    this is a function,haha\n\n    \"\"\"\n    print(\"lalala\")\n    \nprint(eilieili.__doc__)  # 参数含义：函数名.__doc__  \n#打印函数功能注释：首先注释必须在函数内部\n```\n\n\n\n### 3.2.3 函数的属性\n因为函数也是对象，所以函数也有属性\n\n- 使用：`dir(函数名)` ，可以得到该函数所有的属性和方法，其中一双下划线开始的是特殊属性，都可以使用句点的方式调用\n```python\n\"\"\"\n\n函数的属性：P156\n\"\"\"\n\ndef filifili():\n    print(\"hahha\")\n\nprint(dir(filifili))\n```\n\n程序运行结果：\n`['__annotations__', '__call__', '__class__', '__closure__', '__code__', '__defaults__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__get__', '__getattribute__', '__globals__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__kwdefaults__', '__le__', '__lt__', '__module__', '__name__', '__ne__', '__new__', '__qualname__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__']`\n\n\n### 3.2.4 参数和变量\n==函数参数传递的是对象的应用==\n[函数参数与变量的关系](https://foofish.net/python-function-args.html)\n```python\n\n\"\"\"\n参数与变量 ：p159\n\"\"\"\n\ndef giligili(lst):\n    lst.append(0)\n    return lst\n\nx = [1,2,3]\ny = giligili(x)\nprint(y)\n\n#这里实现的是原地修改\nprint(id(x))\nprint(id(y))\n```\n程序运行结果；\n`[1, 2, 3, 0]`\n`1887845442120`\n`1887845442120`\n\n\n\n\n### 3.2.5 参数收集\n\n- 输入参数个数不确定\n```python\n\"\"\"\n参数收集：p160\n\"\"\"\n\ndef foo(x,*arg):\n    print(arg)\n\nfoo(1,2,3,4,5,6,7)  #将第一个赋值给x之后，其余后面的所有的都以元组的形式赋值给*arg\n\nfoo(1,3)  # 当只有3赋值给*arg时候，结果相当于元组中只有一个元素，这时候结果应该是：（3，），元组中单个元素后面要加上逗号\n\n\ndef foobar(x,y,z,*arg,**args):\n    print(\"x = \",x,\"\\n y = \",y,\"\\n z = \",z,\"\\n *arg = \",arg,\"\\n **args = \",args) \n    #注意这里打印输出只需要写arg,不需要写*\n\nfoobar(1,2,3,4,5,6,7,name = \"gaojixu\",age = 23)   #**args得到的值为字典类型，注意赋值方式\n```\n程序运行方式：\n\n`(2, 3, 4, 5, 6, 7)`\n`(3,)`\n`x =  1 `\n `y =  2 `\n `z =  3 `\n `*arg =  (4, 5, 6, 7) `\n `**args =  {'name': 'gaojixu', 'age': 23}`\n\n\n\n## 3.3 函数对象\n\n### 3.3.1递归 ==谨慎使用==\n\n[理解python函数入口](https://blog.csdn.net/gaojixu/article/details/84110883)\n- 使用递归的方法实现Fibonacci数列\n```python\n\n\"\"\"\n函数递归：使用递归的方法实现Fibonacci数列值 p163\n\"\"\"\n\ndef fib(n):\n    \"\"\"\n    This is a Fibonacci by Recursion\n\n    \"\"\"\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return fib(n-1) +fib(n-2)\n\n\nif __name__ == \"__main__\":\n    f = fib(10)\n    print(f)\n\n\n```\n程序运行结果：\n`55`\n\n\n\n### 3.3.2传递函数（函数做参数）\n```python\n\n\"\"\"\n传递函数：函数做参数 P164\n\"\"\"\n\ndef power_seq(func,seq):\n    #因为pingfang也是一个函数名，可以这样理解：func = pingfang ,\n    #后面一个参数seq 接受num_seq中的列表\n    return [func(i) for i in seq]\n    #因为func = pingfang ,所以func(i)，其实本质上为pingfang(i ),相当于在调用函数\n\"\"\"\n上面的语句等价为：\ndef power_seq(func,seq):\n    ans = []   #新建一个空列表\n    for i in seq:\n        ans.append(func(i)) #列表中加元素使用追加\n    return ans\n\"\"\"\n\ndef pingfang(x):\n    return x **2\n\nif __name__ == \"__main__\":\n    num_seq = [111,3.14,8,44]\n    r = power_seq(pingfang,num_seq) #调用函数，传递参数\n    print(num_seq)\n    print(r)\n\n\n```\n程序运行结果：\n`[111, 3.14, 8, 44]`\n`[12321, 9.8596, 64, 1936]`\n\n\n### 3.3.3 嵌套函数\n\n```python\n\"\"\"\n嵌套函数：P164\n\"\"\"\n\ndef foo():\n    def bar():\n        print(\"bar() is running\")\n    #bar()  可以在这里进行调用执行\n    print(\"foo() is running \")\n\nprint(foo()) #调用执行foo()函数,注意这里并没有调用bar()函数，所以bar()函数不执行\n#print(bar()) #在函数外部不能调用里面定义的函数，这能在函数内部调用\n```\n程序运行结果：\n`foo() is running` \n`None`\n\n\n\n**理解下面的嵌套程序：**\n```python\n\n\"\"\"\n嵌套函数练习：P166\n\"\"\"\n\ndef weight(g):       #第二步：接受值：g = 10\n    def cal_mg(m): #第七步，***\n        return m*g\n    return cal_mg   #第三步：返回cal_mg\n\nw = weight(10)       #第一步：传值，g= 10   #第四步：接受值，w = cal_mg\nmg = w(10)           #第五步：w(10) 相当于：cal_mg(10),调用cal_mg函数\nprint(mg)\n```\n程序运行结果：`100`\n\n\n~~笔记到P166~~\n\n\n\n\n",[[1542890707453,["gjx16@GJXAIOU",[[-1,5844,"~~笔记到P166~~"],[1,5855,"#"]],[5844,5855],[5845,5845]]],[1542890711908,["gjx16@GJXAIOU",[[1,5845,"## 3.3.4 chus"]],[5845,5845],[5858,5858]]],[1542890712721,["gjx16@GJXAIOU",[[-1,5854,"chus"]],[5858,5858],[5854,5854]]],[1542890717810,["gjx16@GJXAIOU",[[1,5854,"初始装饰器"]],[5854,5854],[5859,5859]]],[1542890718519,["gjx16@GJXAIOU",[[1,5864,"\n"]],[5859,5859],[5860,5860]]],[1542890720230,["gjx16@GJXAIOU",[[1,5860,"[查看原文点击这里:](https://foofish.net/python-decorator.html)"]],[5860,5860],[5914,5914]]],[1542890755507,["gjx16@GJXAIOU",[[1,5916,"### "]],[5916,5916],[5920,5920]]],[1542890760687,["gjx16@GJXAIOU",[[1,5920,"3.3.5 必报"]],[5920,5920],[5928,5928]]],[1542890761271,["gjx16@GJXAIOU",[[-1,5926,"必报"]],[5928,5928],[5926,5926]]],[1542890763662,["gjx16@GJXAIOU",[[1,5926,"闭包"]],[5926,5926],[5928,5928]]],[1542890764231,["gjx16@GJXAIOU",[[1,5931,"\n"]],[5928,5928],[5929,5929]]],[1542890813837,["gjx16@GJXAIOU",[[1,5929,"- 闭包是一个函数，"]],[5929,5929],[5939,5939]]],[1542890820963,["gjx16@GJXAIOU",[[1,5939,"特点如下；"]],[5939,5939],[5944,5944]]],[1542890821320,["gjx16@GJXAIOU",[[1,5945,"- \n"]],[5944,5944],[5947,5947]]],[1542890823367,["gjx16@GJXAIOU",[[1,5945,"  "]],[5947,5947],[5949,5949]]],[1542890824226,["gjx16@GJXAIOU",[[1,5949," "]],[5949,5949],[5950,5950]]],[1542890825254,["gjx16@GJXAIOU",[[-1,5949," "]],[5950,5950],[5949,5949]]],[1542890835979,["gjx16@GJXAIOU",[[1,5949,"定义在另一个函数里面；"]],[5949,5949],[5960,5960]]],[1542890836426,["gjx16@GJXAIOU",[[1,5961,"  - \n"]],[5960,5960],[5965,5965]]],[1542890844979,["gjx16@GJXAIOU",[[1,5965,"引用其所有"]],[5965,5965],[5970,5970]]],[1542890846687,["gjx16@GJXAIOU",[[-1,5969,"有"]],[5970,5970],[5969,5969]]],[1542890849276,["gjx16@GJXAIOU",[[1,5969,"在汉化"]],[5969,5969],[5972,5972]]],[1542890850334,["gjx16@GJXAIOU",[[-1,5970,"汉化"]],[5972,5972],[5970,5970]]],[1542890857466,["gjx16@GJXAIOU",[[1,5970,"函数环境的自由便令"]],[5970,5970],[5979,5979]]],[1542890858182,["gjx16@GJXAIOU",[[-1,5977,"便令"]],[5979,5979],[5977,5977]]],[1542890865989,["gjx16@GJXAIOU",[[1,5977,"变量；"]],[5977,5977],[5980,5980]]],[1542890882644,["gjx16@GJXAIOU",[[1,5981,"  - \n"]],[5980,5980],[5985,5985]]],[1542890899795,["gjx16@GJXAIOU",[[1,5985,"装饰器本质上是闭包的一种应用；"]],[5985,5985],[6000,6000]]],[1542890954081,["gjx16@GJXAIOU",[[1,6001,"  - \n"]],[6000,6000],[6005,6005]]],[1542890956190,["gjx16@GJXAIOU",[[-1,6002," - "]],[6005,6005],[6002,6002]]],[1542890957906,["gjx16@GJXAIOU",[[1,6002,"1"]],[6002,6002],[6003,6003]]],[1542890958426,["gjx16@GJXAIOU",[[-1,6002,"1"]],[6003,6003],[6002,6002]]],[1542890959112,["gjx16@GJXAIOU",[[1,6002,"·"]],[6002,6002],[6003,6003]]],[1542890959673,["gjx16@GJXAIOU",[[-1,6002,"·"]],[6003,6003],[6002,6002]]],[1542890962466,["gjx16@GJXAIOU",[[1,6002,"```python"]],[6002,6002],[6011,6011]]],[1542890968710,["gjx16@GJXAIOU",[[-1,6001," "]],[6002,6002],[6001,6001]]],[1542890969607,["gjx16@GJXAIOU",[[-1,6000,"\n"]],[6001,6001],[6000,6000]]],[1542890970955,["gjx16@GJXAIOU",[[1,6000,"\n  "]],[6000,6000],[6003,6003]]],[1542890971822,["gjx16@GJXAIOU",[[-1,6002," "]],[6003,6003],[6002,6002]]],[1542890975368,["gjx16@GJXAIOU",[[1,6012," \n"]],[6011,6011],[6013,6013]]],[1542890975823,["gjx16@GJXAIOU",[[-1,6012," "],[1,6013,"\n"]],[6013,6013],[6013,6013]]],[1542890976480,["gjx16@GJXAIOU",[[1,6013,"```"]],[6013,6013],[6016,6016]]],[1542890976525,["gjx16@GJXAIOU",[[1,6016,"language\n```\n"]],[6016,6016],[6016,6024]]],[1542890982676,["gjx16@GJXAIOU",[[-1,6002,"```python\n"]],[6002,6012],[6002,6002]]],[1542890986446,["gjx16@GJXAIOU",[[-1,6006,"language"]],[6007,6014],[6006,6006]]],[1542890987970,["gjx16@GJXAIOU",[[1,6006,"python"]],[6006,6006],[6012,6012]]],[1542890988696,["gjx16@GJXAIOU",[[1,6013,"\n"]],[6012,6012],[6013,6013]]],[1542890995524,["gjx16@GJXAIOU",[[1,6013,"def foo();"]],[6013,6013],[6023,6023]]],[1542890996383,["gjx16@GJXAIOU",[[-1,6022,";"]],[6023,6023],[6022,6022]]],[1542890997402,["gjx16@GJXAIOU",[[1,6022,";"]],[6022,6022],[6023,6023]]],[1542890998002,["gjx16@GJXAIOU",[[1,6024,"\n"]],[6023,6023],[6024,6024]]],[1542890998463,["gjx16@GJXAIOU",[[-1,6024,"\n"]],[6024,6024],[6023,6023]]],[1542890998785,["gjx16@GJXAIOU",[[-1,6022,";"]],[6023,6023],[6022,6022]]],[1542890999338,["gjx16@GJXAIOU",[[1,6022,":"]],[6022,6022],[6023,6023]]],[1542890999955,["gjx16@GJXAIOU",[[1,6024,"\n"]],[6023,6023],[6024,6024]]],[1542891165245,["gjx16@GJXAIOU",[[1,6013,"''' 闭包：p168 ''' "],[1,6023,"\n    a = 3\n  def bar():\n        return a\n    return bar\n\nf = foo()\nprint(f())"]],[6013,6023],[6116,6116]]],[1542891167512,["gjx16@GJXAIOU",[[-1,6013,"''' 闭包：p168 ''' "],[-1,6039,"\n    a = 3\n  def bar():\n        return a\n    return bar\n\nf = foo()\nprint(f())"]],[6116,6116],[6013,6023]]],[1542891170659,["gjx16@GJXAIOU",[[1,6013,"'''\n闭包：p168\n'''\n"],[1,6023,"\n    a = 3\n    def bar():\n        return a\n    return bar\n\nf = foo()\nprint(f())\n\n"]],[6013,6023],[6120,6120]]],[1542891174051,["gjx16@GJXAIOU",[[-1,6121,"\n"]],[6121,6121],[6120,6120]]],[1542891174208,["gjx16@GJXAIOU",[[-1,6120,"\n"]],[6120,6120],[6119,6119]]],[1542891176867,["gjx16@GJXAIOU",[[1,6127,"\n"]],[6123,6123],[6124,6124]]],[1542891178176,["gjx16@GJXAIOU",[[1,6124,"cheng"]],[6124,6124],[6129,6129]]],[1542891179513,["gjx16@GJXAIOU",[[-1,6124,"cheng"]],[6129,6129],[6124,6124]]],[1542891183910,["gjx16@GJXAIOU",[[1,6124,"程序运行结果；"]],[6124,6124],[6131,6131]]],[1542891184643,["gjx16@GJXAIOU",[[-1,6130,"；"]],[6131,6131],[6130,6130]]],[1542891188054,["gjx16@GJXAIOU",[[1,6130,"： ``"]],[6130,6130],[6134,6134]]],[1542891190963,["gjx16@GJXAIOU",[[1,6133,"a = 3"]],[6133,6133],[6138,6138]]],[1542891203275,["gjx16@GJXAIOU",[[1,6064," #benzh"]],[6064,6064],[6071,6071]]],[1542891204243,["gjx16@GJXAIOU",[[-1,6066,"benzh"]],[6071,6071],[6066,6066]]],[1542891209890,["gjx16@GJXAIOU",[[1,6066,"本质上ahe"]],[6066,6066],[6072,6072]]],[1542891210320,["gjx16@GJXAIOU",[[-1,6070,"he"]],[6072,6072],[6070,6070]]],[1542891213020,["gjx16@GJXAIOU",[[1,6070,"和bai"]],[6070,6070],[6074,6074]]],[1542891213512,["gjx16@GJXAIOU",[[-1,6073,"i"]],[6074,6074],[6073,6073]]],[1542891229620,["gjx16@GJXAIOU",[[1,6073,"r()互不统属，所有"]],[6073,6073],[6083,6083]]],[1542891230919,["gjx16@GJXAIOU",[[-1,6081,"所有"]],[6083,6083],[6081,6081]]],[1542891234219,["gjx16@GJXAIOU",[[1,6081,"所以a "]],[6081,6081],[6085,6085]]],[1542891295796,["gjx16@GJXAIOU",[[1,6085,"相对于bar()是自由变量，"]],[6085,6085],[6099,6099]]],[1542891307487,["gjx16@GJXAIOU",[[1,6099,"但是在bar()中却可以使用as"]],[6099,6099],[6115,6115]]],[1542891308643,["gjx16@GJXAIOU",[[-1,6114,"s"]],[6115,6115],[6114,6114]]],[1542891311789,["gjx16@GJXAIOU",[[1,6114,"变量，"]],[6114,6114],[6117,6117]]],[1542891316385,["gjx16@GJXAIOU",[[-1,6116,"，"]],[6117,6117],[6116,6116]]],[1542891317102,["gjx16@GJXAIOU",[[1,6116,"；"]],[6116,6116],[6117,6117]]],[1542891321745,["gjx16@GJXAIOU",[[1,6002,"线面"]],[6002,6002],[6004,6004]]],[1542891322545,["gjx16@GJXAIOU",[[-1,6002,"线面"]],[6004,6004],[6002,6002]]],[1542891328942,["gjx16@GJXAIOU",[[1,6002,"下面程序中··"]],[6002,6002],[6009,6009]]],[1542891330217,["gjx16@GJXAIOU",[[-1,6007,"··"]],[6009,6009],[6007,6007]]],[1542891331301,["gjx16@GJXAIOU",[[1,6007,"``"]],[6007,6007],[6009,6009]]],[1542891334115,["gjx16@GJXAIOU",[[1,6008,"bar()"]],[6008,6008],[6013,6013]]],[1542891342977,["gjx16@GJXAIOU",[[1,6014,"函数就是一个闭包"]],[6014,6014],[6022,6022]]],[1542891414076,["gjx16@GJXAIOU",[[1,6216,"\n"]],[6212,6212],[6213,6213]]],[1542891414218,["gjx16@GJXAIOU",[[1,6217,"\n"]],[6213,6213],[6214,6214]]],[1542891414450,["gjx16@GJXAIOU",[[1,6218,"\n"]],[6214,6214],[6215,6215]]],[1542891414613,["gjx16@GJXAIOU",[[1,6219,"\n"]],[6215,6215],[6216,6216]]],[1542891415837,["gjx16@GJXAIOU",[[1,6216,"##"]],[6216,6216],[6218,6218]]],[1542891417029,["gjx16@GJXAIOU",[[1,6219,"3，"]],[6219,6219],[6221,6221]]],[1542891417383,["gjx16@GJXAIOU",[[-1,6220,"，"]],[6221,6221],[6220,6220]]],[1542891417493,["gjx16@GJXAIOU",[[1,6220,",4"]],[6220,6220],[6222,6222]]],[1542891418348,["gjx16@GJXAIOU",[[-1,6220,",4"]],[6222,6222],[6220,6220]]],[1542891419439,["gjx16@GJXAIOU",[[1,6220,"。3 "]],[6220,6220],[6223,6223]]],[1542891420216,["gjx16@GJXAIOU",[[-1,6220,"。3 "]],[6223,6223],[6220,6220]]],[1542891421375,["gjx16@GJXAIOU",[[1,6220,"。"]],[6220,6220],[6221,6221]]],[1542891422051,["gjx16@GJXAIOU",[[-1,6220,"。"]],[6221,6221],[6220,6220]]],[1542891426398,["gjx16@GJXAIOU",[[1,6220,".4特殊哈数"]],[6220,6220],[6226,6226]]],[1542891427233,["gjx16@GJXAIOU",[[-1,6224,"哈数"]],[6226,6226],[6224,6224]]],[1542891428733,["gjx16@GJXAIOU",[[1,6224,"函数"]],[6224,6224],[6226,6226]]],[1542891429338,["gjx16@GJXAIOU",[[1,6230,"\n"]],[6226,6226],[6227,6227]]],[1542891430122,["gjx16@GJXAIOU",[[1,6231,"\n"]],[6227,6227],[6228,6228]]],[1542891433540,["gjx16@GJXAIOU",[[1,6228,"### 3.4.4"]],[6228,6228],[6237,6237]]],[1542891434136,["gjx16@GJXAIOU",[[-1,6236,"4"]],[6237,6237],[6236,6236]]],[1542891444039,["gjx16@GJXAIOU",[[1,6236,"1 lambdahanh"]],[6236,6236],[6248,6248]]],[1542891444760,["gjx16@GJXAIOU",[[-1,6244,"hanh"]],[6248,6248],[6244,6244]]],[1542891446232,["gjx16@GJXAIOU",[[1,6244,"函数"]],[6244,6244],[6246,6246]]],[1542891447250,["gjx16@GJXAIOU",[[1,6250,"\n"]],[6246,6246],[6247,6247]]],[1542891457408,["gjx16@GJXAIOU",[[1,6247,"****"]],[6247,6247],[6249,6249]]],[1542891463404,["gjx16@GJXAIOU",[[1,6249,"使用方法："]],[6249,6249],[6254,6254]]],[1542891465435,["gjx16@GJXAIOU",[[1,6260,"\n"]],[6256,6256],[6257,6257]]],[1542891836164,[null,[[-1,6218,"\n"],[1,6219," "],[1,6256,"\n"]],[6218,6218],[6257,6257]]],[1542891836164,[null,[[1,6218,"\n"],[-1,6218," "],[-1,6256,"\n"]],[6257,6257],[6218,6218]]],[1542891805015,["gjx16@GJXAIOU",[[1,6257,"- 在lanbda后面直接跟变量；"]],[6257,6257],[6274,6274]]],[1542891805286,["gjx16@GJXAIOU",[[1,6275,"- \n"]],[6274,6274],[6277,6277]]],[1542891810750,["gjx16@GJXAIOU",[[1,6277,"变量后面第"]],[6277,6277],[6282,6282]]],[1542891811186,["gjx16@GJXAIOU",[[-1,6281,"第"]],[6282,6282],[6281,6281]]],[1542891815789,["gjx16@GJXAIOU",[[1,6281,"是冒号；"]],[6281,6281],[6285,6285]]],[1542891816114,["gjx16@GJXAIOU",[[1,6286,"- \n"]],[6285,6285],[6288,6288]]],[1542891833571,["gjx16@GJXAIOU",[[1,6288,"冒号后面是表达式，表达式的"]],[6288,6288],[6301,6301]]],[1542891896154,[null,[[-1,6218,"\n"],[1,6219," "],[1,6301,"\n"]],[6218,6218],[6302,6302]]],[1542891896154,[null,[[1,6218,"\n"],[-1,6218," "],[-1,6301,"\n"]],[6302,6302],[6218,6218]]],[1542891841321,["gjx16@GJXAIOU",[[1,6301,"计算记过"]],[6301,6301],[6305,6305]]],[1542891843106,["gjx16@GJXAIOU",[[-1,6303,"记过"]],[6305,6305],[6303,6303]]],[1542891852536,["gjx16@GJXAIOU",[[1,6303,"结果就是本函数的返回值"]],[6303,6303],[6314,6314]]],[1542891853074,["gjx16@GJXAIOU",[[1,6315,"- \n"]],[6314,6314],[6317,6317]]],[1542891854153,["gjx16@GJXAIOU",[[-1,6315,"- "]],[6317,6317],[6315,6315]]],[1542891854859,["gjx16@GJXAIOU",[[1,6319,"\n"]],[6315,6315],[6316,6316]]],[1542891856491,["gjx16@GJXAIOU",[[1,6316,"****"]],[6316,6316],[6318,6318]]],[1542891859052,["gjx16@GJXAIOU",[[1,6318,"示例："]],[6318,6318],[6321,6321]]],[1542891860429,["gjx16@GJXAIOU",[[1,6327,"\n"]],[6323,6323],[6324,6324]]],[1542891865182,["gjx16@GJXAIOU",[[1,6324,"```"]],[6324,6324],[6327,6327]]],[1542891865219,["gjx16@GJXAIOU",[[1,6327,"language\n```\n"]],[6327,6327],[6327,6335]]],[1542891866540,["gjx16@GJXAIOU",[[-1,6327,"language"],[1,6335,"p"]],[6327,6335],[6328,6328]]],[1542891867308,["gjx16@GJXAIOU",[[1,6328,"ython"]],[6328,6328],[6333,6333]]],[1542891867905,["gjx16@GJXAIOU",[[1,6334,"\n"]],[6333,6333],[6334,6334]]],[1542892196154,[null,[[-1,6218,"\n"],[1,6219," "],[1,6338,"\n"]],[6218,6218],[6339,6339]]],[1542892196154,[null,[[1,6218,"\n"],[-1,6218," "],[-1,6338,"\n"]],[6339,6339],[6218,6218]]],[1542892148941,["gjx16@GJXAIOU",[[1,6334,"''' lambda的使用： ''' lam = lambda x,y :x + y\nbuf = []\nfor i in range(10):\n    buf.append(lam(i,i+1))\n\nprint(buf)"]],[6334,6334],[6444,6444]]],[1542892150219,["gjx16@GJXAIOU",[[-1,6334,"''' lambda的使用： ''' lam = lambda x,y :x + y\nbuf = []\nfor i in range(10):\n    buf.append(lam(i,i+1))\n\nprint(buf)"]],[6444,6444],[6334,6334]]],[1542892151724,["gjx16@GJXAIOU",[[1,6334,"'''\nlambda的使用：\n'''\nlam = lambda x,y :x + y\nbuf = []\nfor i in range(10):\n    buf.append(lam(i,i+1))\n\nprint(buf)"]],[6334,6334],[6444,6444]]],[1542892171667,["gjx16@GJXAIOU",[[1,6453,"\n"]],[6448,6448],[6449,6449]]],[1542892172277,["gjx16@GJXAIOU",[[1,6449,"c"]],[6449,6449],[6450,6450]]],[1542892172763,["gjx16@GJXAIOU",[[-1,6449,"c"]],[6450,6450],[6449,6449]]],[1542892177551,["gjx16@GJXAIOU",[[1,6449,"程序运行结果："]],[6449,6449],[6456,6456]]],[1542892179895,["gjx16@GJXAIOU",[[1,6461,"\n"]],[6456,6456],[6457,6457]]],[1542892256157,[null,[[-1,6218,"\n"],[1,6219," "],[1,6456,"\n"]],[6218,6218],[6457,6457]]],[1542892256157,[null,[[1,6218,"\n"],[-1,6218," "],[-1,6456,"\n"]],[6457,6457],[6218,6218]]],[1542892197761,["gjx16@GJXAIOU",[[1,6457,"``"]],[6457,6457],[6459,6459]]],[1542892199317,["gjx16@GJXAIOU",[[1,6458,"[1, 3, 5, 7, 9, 11, 13, 15, 17, 19]"]],[6458,6458],[6493,6493]]],[1542892204644,["gjx16@GJXAIOU",[[1,6499,"\n"]],[6494,6494],[6495,6495]]],[1542892205131,["gjx16@GJXAIOU",[[1,6500,"\n"]],[6495,6495],[6496,6496]]],[1542892215395,["gjx16@GJXAIOU",[[1,6316,"\n"]],[6315,6315],[6316,6316]]],[1542892216965,["gjx16@GJXAIOU",[[1,6316,"===="]],[6316,6316],[6318,6318]]],[1542892220271,["gjx16@GJXAIOU",[[1,6318,"lambs"]],[6318,6318],[6323,6323]]],[1542892221011,["gjx16@GJXAIOU",[[-1,6322,"s"]],[6323,6323],[6322,6322]]],[1542892252752,["gjx16@GJXAIOU",[[1,6322,"da函数不能包含命名，包含的表达式不能超过一个"]],[6322,6322],[6345,6345]]],[1542892316157,[null,[[-1,6218,"\n"],[1,6219," "],[1,6526,"\n"]],[6218,6218],[6527,6527]]],[1542892316157,[null,[[1,6218,"\n"],[-1,6218," "],[-1,6526,"\n"]],[6527,6527],[6218,6218]]],[1542892261732,["gjx16@GJXAIOU",[[1,6533,"\n"]],[6526,6526],[6527,6527]]],[1542892261863,["gjx16@GJXAIOU",[[1,6534,"\n"]],[6527,6527],[6528,6528]]],[1542892262340,["gjx16@GJXAIOU",[[1,6535,"\n"]],[6528,6528],[6529,6529]]],[1542892496165,[null,[[-1,6218,"\n"],[1,6219," "],[1,6526,"\n"]],[6218,6218],[6527,6527]]],[1542892496165,[null,[[1,6218,"\n"],[-1,6218," "],[-1,6526,"\n"]],[6527,6527],[6218,6218]]],[1542892446007,["gjx16@GJXAIOU",[[1,6536,"\n"]],[6528,6528],[6529,6529]]],[1542892458584,["gjx16@GJXAIOU",[[1,6529,"### 3.4.2 maphan"]],[6529,6529],[6545,6545]]],[1542892459254,["gjx16@GJXAIOU",[[-1,6542,"han"]],[6545,6545],[6542,6542]]],[1542892460544,["gjx16@GJXAIOU",[[1,6542,"函数"]],[6542,6542],[6544,6544]]],[1542892461132,["gjx16@GJXAIOU",[[1,6552,"\n"]],[6544,6544],[6545,6545]]],[1542892472526,["gjx16@GJXAIOU",[[1,6545,"函数形式：``"]],[6545,6545],[6552,6552]]],[1542892476078,["gjx16@GJXAIOU",[[1,6551,"map*("]],[6551,6551],[6556,6556]]],[1542892478173,["gjx16@GJXAIOU",[[-1,6554,"*("]],[6556,6556],[6554,6554]]],[1542892479192,["gjx16@GJXAIOU",[[1,6554,"()"]],[6554,6554],[6556,6556]]],[1542892485166,["gjx16@GJXAIOU",[[1,6555,"func,qe"]],[6555,6555],[6562,6562]]],[1542892486130,["gjx16@GJXAIOU",[[-1,6560,"qe"]],[6562,6562],[6560,6560]]],[1542892487337,["gjx16@GJXAIOU",[[1,6560,"seq"]],[6560,6560],[6563,6563]]],[1542892492094,["gjx16@GJXAIOU",[[1,6565," ,y"]],[6565,6565],[6568,6568]]],[1542892492419,["gjx16@GJXAIOU",[[-1,6567,"y"]],[6568,6568],[6567,6567]]],[1542892495528,["gjx16@GJXAIOU",[[1,6567,"一次"]],[6567,6567],[6569,6569]]],[1542892496051,["gjx16@GJXAIOU",[[-1,6568,"次"]],[6569,6569],[6568,6568]]],[1542892556168,[null,[[-1,6218,"\n"],[1,6219," "],[1,6568,"\n"]],[6218,6218],[6569,6569]]],[1542892556168,[null,[[1,6218,"\n"],[-1,6218," "],[-1,6568,"\n"]],[6569,6569],[6218,6218]]],[1542892504240,["gjx16@GJXAIOU",[[1,6567,"依次将序列deq"]],[6567,6567],[6575,6575]]],[1542892505139,["gjx16@GJXAIOU",[[-1,6572,"deq"]],[6575,6575],[6572,6572]]],[1542892506061,["gjx16@GJXAIOU",[[1,6572,"seq"]],[6572,6572],[6575,6575]]],[1542892519527,["gjx16@GJXAIOU",[[1,6572,"对此案"]],[6572,6572],[6575,6575]]],[1542892520317,["gjx16@GJXAIOU",[[-1,6572,"对此案"]],[6575,6575],[6572,6572]]],[1542892523009,["gjx16@GJXAIOU",[[1,6572,"对象"]],[6572,6572],[6574,6574]]],[1542892555267,["gjx16@GJXAIOU",[[1,6577,"中的每一个元素，按照从左到右的顺序，依次取出来放在"]],[6577,6577],[6602,6602]]],[1542892616172,[null,[[-1,6218,"\n"],[1,6219," "],[-1,6602,"一"],[1,6603,"\n"]],[6218,6218],[6604,6604]]],[1542892616172,[null,[[1,6218,"\n"],[-1,6218," "],[1,6602,"一"],[-1,6602,"\n"]],[6604,6604],[6218,6218]]],[1542892564510,["gjx16@GJXAIOU",[[1,6602,"func函数中；"]],[6602,6602],[6610,6610]]],[1542892568487,["gjx16@GJXAIOU",[[1,6618,"\n"]],[6610,6610],[6611,6611]]],[1542892609478,["gjx16@GJXAIOU",[[1,6611,"```"]],[6611,6611],[6614,6614]]],[1542892609517,["gjx16@GJXAIOU",[[1,6614,"language\n```\n"]],[6614,6614],[6614,6622]]],[1542892610015,["gjx16@GJXAIOU",[[-1,6614,"language"],[1,6622,"p"]],[6614,6622],[6615,6615]]],[1542892610751,["gjx16@GJXAIOU",[[1,6615,"ython"]],[6615,6615],[6620,6620]]],[1542892611308,["gjx16@GJXAIOU",[[1,6621,"\n"]],[6620,6620],[6621,6621]]],[1542892856175,[null,[[-1,6218,"\n"],[1,6219," "],[-1,6610,"一"],[1,6611,"\n"]],[6218,6218],[6612,6612]]],[1542892856175,[null,[[1,6218,"\n"],[-1,6218," "],[1,6610,"一"],[-1,6610,"\n"]],[6612,6612],[6218,6218]]],[1542892830575,["gjx16@GJXAIOU",[[1,6610,"===="]],[6610,6610],[6612,6612]]],[1542892845340,["gjx16@GJXAIOU",[[1,6612,"func的返回值依次存在一个列表中"]],[6612,6612],[6629,6629]]],[1542893036181,[null,[[-1,6218,"\n"],[1,6219," "],[-1,6631,"一"],[1,6632,"\n"]],[6218,6218],[6633,6633]]],[1542893036181,[null,[[1,6218,"\n"],[-1,6218," "],[1,6631,"一"],[-1,6631,"\n"]],[6633,6633],[6218,6218]]],[1542893032759,["gjx16@GJXAIOU",[[1,6642,"''' map使用 ''' numbers1 = [1,2,3,4,5,6,7,8,9]\nnumbers2 = [1,2,3,4,5,6,7,8,9]\nnumbers3 = [1,2]\n\na =list(map(lambda x,y: x+y ,numbers1,numbers2))\nb =list(map(lambda x,y: x+y ,numbers1,numbers3))\nprint(a)\nprint(b)"]],[6642,6642],[6851,6851]]],[1542893034410,["gjx16@GJXAIOU",[[-1,6642,"''' map使用 ''' numbers1 = [1,2,3,4,5,6,7,8,9]\nnumbers2 = [1,2,3,4,5,6,7,8,9]\nnumbers3 = [1,2]\n\na =list(map(lambda x,y: x+y ,numbers1,numbers2))\nb =list(map(lambda x,y: x+y ,numbers1,numbers3))\nprint(a)\nprint(b)"]],[6851,6851],[6642,6642]]],[1542893096224,[null,[[-1,6218,"\n"],[1,6219," "],[-1,6631,"一"],[1,6632,"\n"]],[6218,6218],[6633,6633]]],[1542893096224,[null,[[1,6218,"\n"],[-1,6218," "],[1,6631,"一"],[-1,6631,"\n"]],[6633,6633],[6218,6218]]],[1542893037886,["gjx16@GJXAIOU",[[1,6642,"'''\nmap使用\n'''\nnumbers1 = [1,2,3,4,5,6,7,8,9]\nnumbers2 = [1,2,3,4,5,6,7,8,9]\nnumbers3 = [1,2]\n\na =list(map(lambda x,y: x+y ,numbers1,numbers2))\nb =list(map(lambda x,y: x+y ,numbers1,numbers3))\nprint(a)\nprint(b)\n"]],[6642,6642],[6852,6852]]],[1542893041044,["gjx16@GJXAIOU",[[1,6865,"\n"]],[6856,6856],[6857,6857]]],[1542893045512,["gjx16@GJXAIOU",[[1,6857,"程序运行结果："]],[6857,6857],[6864,6864]]],[1542893046956,["gjx16@GJXAIOU",[[1,6873,"\n"]],[6864,6864],[6865,6865]]],[1542893052293,["gjx16@GJXAIOU",[[1,6865,"[2, 4, 6, 8, 10, 12, 14, 16, 18]\n[2, 4]"]],[6865,6865],[6904,6904]]],[1542893055615,["gjx16@GJXAIOU",[[1,6865,"·"]],[6865,6865],[6866,6866]]],[1542893056692,["gjx16@GJXAIOU",[[-1,6865,"·"]],[6866,6866],[6865,6865]]],[1542893057080,["gjx16@GJXAIOU",[[1,6865,"`"]],[6865,6865],[6866,6866]]],[1542893058951,["gjx16@GJXAIOU",[[1,6899,"`"]],[6899,6899],[6900,6900]]],[1542893060791,["gjx16@GJXAIOU",[[1,6906,"`"]],[6906,6906],[6907,6907]]],[1542893061639,["gjx16@GJXAIOU",[[1,6898,"`"]],[6898,6898],[6899,6899]]],[1542893068100,["gjx16@GJXAIOU",[[1,6917,"\n"]],[6908,6908],[6909,6909]]],[1542893068244,["gjx16@GJXAIOU",[[1,6918,"\n"]],[6909,6909],[6910,6910]]],[1542893069645,["gjx16@GJXAIOU",[[1,6910,"****"]],[6910,6910],[6912,6912]]],[1542893070519,["gjx16@GJXAIOU",[[1,6912,"shuo"]],[6912,6912],[6916,6916]]],[1542893071340,["gjx16@GJXAIOU",[[-1,6912,"shuo"]],[6916,6916],[6912,6912]]],[1542893073489,["gjx16@GJXAIOU",[[1,6912,"说明："]],[6912,6912],[6915,6915]]],[1542893075072,["gjx16@GJXAIOU",[[1,6926,"\n"]],[6917,6917],[6918,6918]]],[1542893096118,["gjx16@GJXAIOU",[[1,6918,"- map相当于对可迭代对象中"]],[6918,6918],[6933,6933]]],[1542893156221,[null,[[-1,6218,"\n"],[1,6219," "],[-1,6631,"一"],[1,6632,"\n"]],[6218,6218],[6633,6633]]],[1542893156221,[null,[[1,6218,"\n"],[-1,6218," "],[1,6631,"一"],[-1,6631,"\n"]],[6633,6633],[6218,6218]]],[1542893116707,["gjx16@GJXAIOU",[[1,6933,"的每个元素依次使用function方法，就相当于for循环"]],[6933,6933],[6962,6962]]],[1542893117241,["gjx16@GJXAIOU",[[1,6963,"- \n"]],[6962,6962],[6965,6965]]],[1542893148963,["gjx16@GJXAIOU",[[1,6965,"将所有的结果返回一个map对象，这个对象是迭代器；】"]],[6965,6965],[6991,6991]]],[1542893149805,["gjx16@GJXAIOU",[[-1,6990,"】"]],[6991,6991],[6990,6990]]],[1542893150854,["gjx16@GJXAIOU",[[1,6991,"- \n"]],[6990,6990],[6993,6993]]],[1542893155831,["gjx16@GJXAIOU",[[1,6993,"如果参数"]],[6993,6993],[6997,6997]]],[1542893216221,[null,[[-1,6218,"\n"],[1,6219," "],[-1,6631,"一"],[1,6632,"\n"]],[6218,6218],[6633,6633]]],[1542893216221,[null,[[1,6218,"\n"],[-1,6218," "],[1,6631,"一"],[-1,6631,"\n"]],[6633,6633],[6218,6218]]],[1542893179962,["gjx16@GJXAIOU",[[1,6997,"很多，则参数是并行执行function函数，运行速度想要"]],[6997,6997],[7025,7025]]],[1542893180927,["gjx16@GJXAIOU",[[-1,7023,"想要"]],[7025,7025],[7023,7023]]],[1542893187211,["gjx16@GJXAIOU",[[1,7023,"相应的就提升了；"]],[7023,7023],[7031,7031]]],[1542893276220,[null,[[-1,6218,"\n"],[1,6219," "],[-1,6631,"一"],[1,6632,"\n"]],[6218,6218],[6633,6633]]],[1542893276220,[null,[[1,6218,"\n"],[-1,6218," "],[1,6631,"一"],[-1,6631,"\n"]],[6633,6633],[6218,6218]]],[1542893240461,["gjx16@GJXAIOU",[[1,7040,"\n"]],[7032,7032],[7033,7033]]],[1542893240606,["gjx16@GJXAIOU",[[1,7041,"\n"]],[7033,7033],[7034,7034]]],[1542893245685,["gjx16@GJXAIOU",[[1,7034,"### 。、"]],[7034,7034],[7040,7040]]],[1542893246620,["gjx16@GJXAIOU",[[-1,7038,"。、"]],[7040,7040],[7038,7038]]],[1542893248592,["gjx16@GJXAIOU",[[1,7038,"3.3"]],[7038,7038],[7041,7041]]],[1542893249519,["gjx16@GJXAIOU",[[-1,7040,"3"]],[7041,7041],[7040,7040]]],[1542893257321,["gjx16@GJXAIOU",[[1,7040,"4.3 reduce函数"]],[7040,7040],[7052,7052]]],[1542893257785,["gjx16@GJXAIOU",[[1,7060,"\n"]],[7052,7052],[7053,7053]]],[1542893456221,[null,[[-1,6218,"\n"],[1,6219," "],[-1,6631,"一"],[1,6632,"\n"]],[6218,6218],[6633,6633]]],[1542893456221,[null,[[1,6218,"\n"],[-1,6218," "],[1,6631,"一"],[-1,6631,"\n"]],[6633,6633],[6218,6218]]],[1542893428776,["gjx16@GJXAIOU",[[1,7053,"```"]],[7053,7053],[7056,7056]]],[1542893428825,["gjx16@GJXAIOU",[[1,7056,"language\n```\n"]],[7056,7056],[7056,7064]]],[1542893430016,["gjx16@GJXAIOU",[[-1,7056,"language"],[1,7064,"p"]],[7056,7064],[7057,7057]]],[1542893430682,["gjx16@GJXAIOU",[[1,7057,"ython"]],[7057,7057],[7062,7062]]],[1542893431068,["gjx16@GJXAIOU",[[1,7063,"\n"]],[7062,7062],[7063,7063]]],[1542893434784,["gjx16@GJXAIOU",[[1,7063,"'''\nreduce p173\n'''\nfrom functools import reduce\na = reduce(lambda x,y:x+y,[1,2,3,4,5])\nprint(a)\n"]],[7063,7063],[7160,7160]]],[1542893437080,["gjx16@GJXAIOU",[[1,7173,"\n"]],[7164,7164],[7165,7165]]],[1542893438498,["gjx16@GJXAIOU",[[1,7165,"chengxu"]],[7165,7165],[7172,7172]]],[1542893439630,["gjx16@GJXAIOU",[[-1,7165,"chengxu"]],[7172,7172],[7165,7165]]],[1542893445561,["gjx16@GJXAIOU",[[1,7165,"程序运行结果；"]],[7165,7165],[7172,7172]]],[1542893446406,["gjx16@GJXAIOU",[[-1,7171,"；"]],[7172,7172],[7171,7171]]],[1542893446789,["gjx16@GJXAIOU",[[1,7171,"；"]],[7171,7171],[7172,7172]]],[1542893447821,["gjx16@GJXAIOU",[[-1,7171,"；"]],[7172,7172],[7171,7171]]],[1542893449970,["gjx16@GJXAIOU",[[1,7171,"：``"]],[7171,7171],[7174,7174]]],[1542893451447,["gjx16@GJXAIOU",[[1,7173,"15"]],[7173,7173],[7175,7175]]],[1542893816232,[null,[[-1,6218,"\n"],[1,6219," "],[-1,6631,"一"],[1,6632,"\n"]],[6218,6218],[6633,6633]]],[1542893816232,[null,[[1,6218,"\n"],[-1,6218," "],[1,6631,"一"],[-1,6631,"\n"]],[6633,6633],[6218,6218]]],[1542893787862,["gjx16@GJXAIOU",[[-1,7184,"\n"]],[7178,7178],[7177,7177]]],[1542893790192,["gjx16@GJXAIOU",[[1,7177,"****"]],[7177,7177],[7179,7179]]],[1542893792364,["gjx16@GJXAIOU",[[1,7179,"mao"]],[7179,7179],[7182,7182]]],[1542893793025,["gjx16@GJXAIOU",[[-1,7181,"o"]],[7182,7182],[7181,7181]]],[1542893809663,["gjx16@GJXAIOU",[[1,7181,"p()函数是上下运算，而reduce()函数老师"]],[7181,7181],[7205,7205]]],[1542893810409,["gjx16@GJXAIOU",[[-1,7203,"老师"]],[7205,7205],[7203,7203]]],[1542893811964,["gjx16@GJXAIOU",[[1,7203,"是"]],[7203,7203],[7204,7204]]],[1542893876229,[null,[[-1,6218,"\n"],[1,6219," "],[-1,6631,"一"],[1,6632,"\n"]],[6218,6218],[6633,6633]]],[1542893876229,[null,[[1,6218,"\n"],[-1,6218," "],[1,6631,"一"],[-1,6631,"\n"]],[6633,6633],[6218,6218]]],[1542893824619,["gjx16@GJXAIOU",[[1,7204,"横着逐个元素进行运算"]],[7204,7204],[7214,7214]]],[1542893835058,["gjx16@GJXAIOU",[[1,7223,"\n"]],[7216,7216],[7217,7217]]],[1542893848131,["gjx16@GJXAIOU",[[1,7219,"~~~~~"]],[7219,7219],[7222,7222]]],[1542893849182,["gjx16@GJXAIOU",[[-1,7223,"~"]],[7222,7222],[7221,7221]]],[1542893853099,["gjx16@GJXAIOU",[[1,7221,"篇74"]],[7221,7221],[7224,7224]]],[1542893855070,["gjx16@GJXAIOU",[[-1,7221,"篇"]],[7222,7222],[7221,7221]]],[1542893857450,["gjx16@GJXAIOU",[[1,7221,"p1"]],[7221,7221],[7223,7223]]]],null,"gjx16@GJXAIOU"],["1de46183-9ca8-46e8-a14e-419b724603c3",1548136953833,"---\ndate：`2018-11-15`\n---\n\n# 第3章 函数\n\n\n## 3.1函数的基本概念\n\n### 3.1.1 理解函数\n\n- 变量本质上时占位符，变量名通常使用小写字母进行命名，可以使用下划线连接多个单词\n\n\n\n### 3.1.2 定义函数\n1.标准格式\n```python\n#!/usr/bin/env python\n# -*- coding:utf-8 -*-\n#@Time :2018/11/15 14:49\n#Author:GJXAIOU\n\ndef add_function(a,b): \n    #定义一个函数使用 ：  def   函数名（参数）:    其中：表示函数头的结束\n    # 函数名的命名；小写字母或者单下划线或者数字\n    #这里x,y作为形参，也可以认为是变量，而变量无类型，所以并没有规定其所引用的对象的类型，意义取决于对象的类型，称为多态\n    c = a + b   # 函数体必须缩进4个空格\n    return c  #return语句执行的时候，python会跳出当前的函数并且返回到调用这个函数的地方\n\n\nif __name__ == \"__main__\":\n    result = add_function(2,3)  #调用函数并且将实参传递给函数\n    print(result)\n\n\n# 下面为函数的其他使用方法\n\n# 只写函数名会得到该函数在内存中的存储信息\nprint(add_function)\n\n# 赋值语句可以实现变量和函数对象建立应用关系，\nc= add_function\nresult1 = c(3,4)\nprint(result1)\n```\n程序运行结果：\n`5`\n`<function add_function at 0x000001E65BA4D2F0>`\n`7`\n\n\n### 3.1.3 函数的命名\n- **变量名：** 全部小写，使用下划线连接各个单词\n- **文件名：** 全部小写，可以使用下划线\n- **函数名：** 小写，可以使用下划线\n- **函数的参数：** 同变量，本质上就是变量\n\n\n\n\n\n\n### 3.1.4 调用函数\n**函数调用的时候参数赋值方法**\n```python\n'''\n调用函数 p151\n'''\ndef add(x,y):\n    print(\"x = {}\".format(x))\n    print(\"y = {}\".format(y))\n    return x +y\n\n#参数赋值方法一：\nans1 = add(2,3) #这里传递参数默认按照次序依次赋值\nprint(\"ans = \",ans1)\n\n#参数赋值方法二：\n\nans2 = add(y = 4,x = 5) #直接使用变量= 变量值进行赋值，这就不用理会什么顺序\nprint(ans2)\n\n```\n程序运行结果：\n`x = 2`\n`y = 3`\n`ans =  5`\n`x = 5`\n`y = 4`\n`9`\n\n**特殊：当函数在定义的时候，部分参数赋值**\n```python\n'''\n当定义函数的时候进行部分参数赋值\n'''\n\n #def acfun(x = 1,y,z = 4 ): 这种定义方法是错误的，因为有默认值的参数必须都在没有默认值参数后面\ndef acfun(x,y,z= 1):\n    acans = x +y +z\n    return acans\n\nans1 = acfun(1,2) #可以不给z赋值，则使用默认值\nans2 = acfun(2,3,2)#如果赋值，则使用这个值\nprint(\"ans1 = \",ans1)\nprint(\"ans2 = \",ans2)\n\n```\n程序运行结果：\n`ans1 =  4`\n`ans2 =  7`\n\n\n\n\n\n## 3.2 深入探究函数\n\n\n### 3.2.1 函数返回值\n\n**示例程序：实现Fibonacci数列**\n```python\n\n'''\n\n实现Fibonacci数列：P153\n'''\n\n\n# 此函数只有一个返回值（一个列表）\n\ndef fib(n):\n    result = [0,1]  # 以列表形式返回\n    for i in range(n-2):\n        result.append(result[-2] + result[-1])\n    return result\n\nif __name__ == \"__main__\":\n    haha = fib(10)\n    print(haha)\n\n\n# 但函数的返回值有多个时候，返回值类型为元组\n\ndef bilibili():\n    return 1,2,3\n\n##接受返回值的方法一；\nans = bilibili()\nprint(\"ans = \" ,ans)\n\n##接受函数返回值的方法二：\nx,y,z = bilibili()\nprint(x,y,z)\n\n\n# 如果函数没有return，则返回值为None\n```\n\n**return 作用**\n- 返回函数的结果：\n- 中断函数体内的流程，离开这个函数，即结束正在执行的这个函数，并离开函数体返回到调用位置\n示例程序；\n```python\n'''\n验证return的作用：p155\n'''\n\ndef dilidili():\n    print(\"hello\")\n    return\n    print(\"world\")\n\nans = dilidili()\nprint(ans)\n```\n程序运行结果：\n`hello`\n`None`\n从输出结果可以看出，第二个print实际上并没有执行，遇到return就跳到调用的地方了\n\n\n\n### 3.2.2  函数中的文档\n```python\n'''\n函数文档注释；p156\n'''\n\ndef eilieili():\n    \"\"\"\n    this is a function,haha\n\n    \"\"\"\n    print(\"lalala\")\n    \nprint(eilieili.__doc__)  # 参数含义：函数名.__doc__  \n#打印函数功能注释：首先注释必须在函数内部\n```\n\n\n\n### 3.2.3 函数的属性\n因为函数也是对象，所以函数也有属性\n\n- 使用：`dir(函数名)` ，可以得到该函数所有的属性和方法，其中一双下划线开始的是特殊属性，都可以使用句点的方式调用\n```python\n\"\"\"\n\n函数的属性：P156\n\"\"\"\n\ndef filifili():\n    print(\"hahha\")\n\nprint(dir(filifili))\n```\n\n程序运行结果：\n`['__annotations__', '__call__', '__class__', '__closure__', '__code__', '__defaults__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__get__', '__getattribute__', '__globals__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__kwdefaults__', '__le__', '__lt__', '__module__', '__name__', '__ne__', '__new__', '__qualname__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__']`\n\n\n### 3.2.4 参数和变量\n==函数参数传递的是对象的应用==\n[函数参数与变量的关系](https://foofish.net/python-function-args.html)\n```python\n\n\"\"\"\n参数与变量 ：p159\n\"\"\"\n\ndef giligili(lst):\n    lst.append(0)\n    return lst\n\nx = [1,2,3]\ny = giligili(x)\nprint(y)\n\n#这里实现的是原地修改\nprint(id(x))\nprint(id(y))\n```\n程序运行结果；\n`[1, 2, 3, 0]`\n`1887845442120`\n`1887845442120`\n\n\n\n\n### 3.2.5 参数收集\n\n- 输入参数个数不确定\n```python\n\"\"\"\n参数收集：p160\n\"\"\"\n\ndef foo(x,*arg):\n    print(arg)\n\nfoo(1,2,3,4,5,6,7)  #将第一个赋值给x之后，其余后面的所有的都以元组的形式赋值给*arg\n\nfoo(1,3)  # 当只有3赋值给*arg时候，结果相当于元组中只有一个元素，这时候结果应该是：（3，），元组中单个元素后面要加上逗号\n\n\ndef foobar(x,y,z,*arg,**args):\n    print(\"x = \",x,\"\\n y = \",y,\"\\n z = \",z,\"\\n *arg = \",arg,\"\\n **args = \",args) \n    #注意这里打印输出只需要写arg,不需要写*\n\nfoobar(1,2,3,4,5,6,7,name = \"gaojixu\",age = 23)   #**args得到的值为字典类型，注意赋值方式\n```\n程序运行方式：\n\n`(2, 3, 4, 5, 6, 7)`\n`(3,)`\n`x =  1 `\n `y =  2 `\n `z =  3 `\n `*arg =  (4, 5, 6, 7) `\n `**args =  {'name': 'gaojixu', 'age': 23}`\n\n\n\n## 3.3 函数对象\n\n### 3.3.1递归 ==谨慎使用==\n\n[理解python函数入口](https://blog.csdn.net/gaojixu/article/details/84110883)\n- 使用递归的方法实现Fibonacci数列\n```python\n\n\"\"\"\n函数递归：使用递归的方法实现Fibonacci数列值 p163\n\"\"\"\n\ndef fib(n):\n    \"\"\"\n    This is a Fibonacci by Recursion\n\n    \"\"\"\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return fib(n-1) +fib(n-2)\n\n\nif __name__ == \"__main__\":\n    f = fib(10)\n    print(f)\n\n\n```\n程序运行结果：\n`55`\n\n\n\n### 3.3.2传递函数（函数做参数）\n```python\n\n\"\"\"\n传递函数：函数做参数 P164\n\"\"\"\n\ndef power_seq(func,seq):\n    #因为pingfang也是一个函数名，可以这样理解：func = pingfang ,\n    #后面一个参数seq 接受num_seq中的列表\n    return [func(i) for i in seq]\n    #因为func = pingfang ,所以func(i)，其实本质上为pingfang(i ),相当于在调用函数\n\"\"\"\n上面的语句等价为：\ndef power_seq(func,seq):\n    ans = []   #新建一个空列表\n    for i in seq:\n        ans.append(func(i)) #列表中加元素使用追加\n    return ans\n\"\"\"\n\ndef pingfang(x):\n    return x **2\n\nif __name__ == \"__main__\":\n    num_seq = [111,3.14,8,44]\n    r = power_seq(pingfang,num_seq) #调用函数，传递参数\n    print(num_seq)\n    print(r)\n\n\n```\n程序运行结果：\n`[111, 3.14, 8, 44]`\n`[12321, 9.8596, 64, 1936]`\n\n\n### 3.3.3 嵌套函数\n\n```python\n\"\"\"\n嵌套函数：P164\n\"\"\"\n\ndef foo():\n    def bar():\n        print(\"bar() is running\")\n    #bar()  可以在这里进行调用执行\n    print(\"foo() is running \")\n\nprint(foo()) #调用执行foo()函数,注意这里并没有调用bar()函数，所以bar()函数不执行\n#print(bar()) #在函数外部不能调用里面定义的函数，这能在函数内部调用\n```\n程序运行结果：\n`foo() is running` \n`None`\n\n\n\n**理解下面的嵌套程序：**\n```python\n\n\"\"\"\n嵌套函数练习：P166\n\"\"\"\n\ndef weight(g):       #第二步：接受值：g = 10\n    def cal_mg(m): #第七步，***\n        return m*g\n    return cal_mg   #第三步：返回cal_mg\n\nw = weight(10)       #第一步：传值，g= 10   #第四步：接受值，w = cal_mg\nmg = w(10)           #第五步：w(10) 相当于：cal_mg(10),调用cal_mg函数\nprint(mg)\n```\n程序运行结果：`100`\n\n\n### 3.3.4 初始装饰器\n[查看原文点击这里:](https://foofish.net/python-decorator.html)\n\n### 3.3.5 闭包\n- 闭包是一个函数，特点如下；\n  - 定义在另一个函数里面；\n  - 引用其所在函数环境的自由变量；\n  - 装饰器本质上是闭包的一种应用；\n 下面程序中`bar()`函数就是一个闭包\n```python\n'''\n闭包：p168\n'''\ndef foo():\n    a = 3\n    def bar(): #本质上a和bar()互不统属，所以a 相对于bar()是自由变量，但是在bar()中却可以使用a变量；\n        return a\n    return bar\n\nf = foo()\nprint(f())\n\n```\n程序运行结果： `a = 3`\n\n\n\n## 3.4特殊函数\n\n### 3.4.1 lambda函数\n**使用方法：**\n- 在lanbda后面直接跟变量；\n- 变量后面是冒号；\n- 冒号后面是表达式，表达式的计算结果就是本函数的返回值\n\n==lambda函数不能包含命名，包含的表达式不能超过一个==\n**示例：**\n```python\n'''\nlambda的使用：\n'''\nlam = lambda x,y :x + y\nbuf = []\nfor i in range(10):\n    buf.append(lam(i,i+1))\n\nprint(buf)\n```\n程序运行结果：\n`[1, 3, 5, 7, 9, 11, 13, 15, 17, 19]`\n\n\n### 3.4.2 map函数\n函数形式：`map(func,seq)` ,依次将序列对象seq中的每一个元素，按照从左到右的顺序，依次取出来放在func函数中；==func的返回值依次存在一个列表中==\n```python\n'''\nmap使用\n'''\nnumbers1 = [1,2,3,4,5,6,7,8,9]\nnumbers2 = [1,2,3,4,5,6,7,8,9]\nnumbers3 = [1,2]\n\na =list(map(lambda x,y: x+y ,numbers1,numbers2))\nb =list(map(lambda x,y: x+y ,numbers1,numbers3))\nprint(a)\nprint(b)\n\n```\n程序运行结果：\n`[2, 4, 6, 8, 10, 12, 14, 16, 18]`\n`[2, 4]`\n\n**说明：**\n- map相当于对可迭代对象中的每个元素依次使用function方法，就相当于for循环\n- 将所有的结果返回一个map对象，这个对象是迭代器；\n- 如果参数很多，则参数是并行执行function函数，运行速度相应的就提升了；\n\n\n### 3.4.3 reduce函数\n```python\n'''\nreduce p173\n'''\nfrom functools import reduce\na = reduce(lambda x,y:x+y,[1,2,3,4,5])\nprint(a)\n\n```\n程序运行结果：`15`\n**map()函数是上下运算，而reduce()函数是横着逐个元素进行运算**\n\n\n~~p174~~\n\n\n\n\n",[[1548136899351,["gjx16@GJXAIOU",[[-1,339,"x"]],[340,340],[339,339]]],[1548136900996,["gjx16@GJXAIOU",[[1,339,"a"]],[339,339],[340,340]]],[1548136903015,["gjx16@GJXAIOU",[[-1,341,"y"]],[342,342],[341,341]]],[1548136903602,["gjx16@GJXAIOU",[[1,341,"b"]],[341,341],[342,342]]],[1548147235380,["gjx16@GJXAIOU",[[-1,6330,"命名"]],[6332,6332],[6330,6330]]],[1548147240773,["gjx16@GJXAIOU",[[1,6330,"命令"]],[6330,6330],[6332,6332]]],[1548147320637,["gjx16@GJXAIOU",[[1,6380,"p171"]],[6380,6380],[6384,6384]]],[1548147670709,["gjx16@GJXAIOU",[[-1,7223,"~~p174~~"]],[7223,7231],[7223,7223]]],[1548147677355,["gjx16@GJXAIOU",[[1,7223,"### 3.4.4"]],[7223,7223],[7232,7232]]],[1548148137597,["gjx16@GJXAIOU",[[1,7232," filterhan"]],[7232,7232],[7242,7242]]],[1548148138371,["gjx16@GJXAIOU",[[-1,7239,"han"]],[7242,7242],[7239,7239]]],[1548148140403,["gjx16@GJXAIOU",[[1,7239,"函数"]],[7239,7239],[7241,7241]]],[1548148140844,["gjx16@GJXAIOU",[[1,7246,"\n"]],[7241,7241],[7242,7242]]],[1548149236578,["gjx16@GJXAIOU",[[-1,7246,"\n"]],[7243,7243],[7242,7242]]],[1548149239633,["gjx16@GJXAIOU",[[1,7242,"```"]],[7242,7242],[7245,7245]]],[1548149239679,["gjx16@GJXAIOU",[[1,7245,"language\n```\n"]],[7245,7245],[7245,7253]]],[1548149240760,["gjx16@GJXAIOU",[[-1,7245,"language"],[1,7253,"p"]],[7245,7253],[7246,7246]]],[1548149241711,["gjx16@GJXAIOU",[[1,7246,"ython "]],[7246,7246],[7252,7252]]],[1548149243415,["gjx16@GJXAIOU",[[1,7253,"\n"]],[7252,7252],[7253,7253]]],[1548149246345,["gjx16@GJXAIOU",[[-1,7253,"\n"]],[7253,7253],[7252,7252]]],[1548149247185,["gjx16@GJXAIOU",[[-1,7250,"n "]],[7252,7252],[7250,7250]]],[1548149248843,["gjx16@GJXAIOU",[[1,7250,"n"]],[7250,7250],[7251,7251]]],[1548149249663,["gjx16@GJXAIOU",[[1,7252,"\n"]],[7251,7251],[7252,7252]]],[1548155493631,["gjx16@GJXAIOU",[[1,7252,"151.101.13.194 github.global.ssl.fastly.net \n192.30.253.112 github.com "]],[7252,7252],[7323,7323]]],[1548155499093,["gjx16@GJXAIOU",[[-1,7252,"151.101.13.194 github.global.ssl.fastly.net \n192.30.253.112 github.com "]],[7253,7323],[7252,7252]]],[1548155518314,["gjx16@GJXAIOU",[[1,7252,"151.101.13.194 github.global.ssl.fastly.net \n192.30.253.112 github.com "]],[7252,7252],[7323,7323]]],[1548155521272,["gjx16@GJXAIOU",[[-1,7252,"151.101.13.194 github.global.ssl.fastly.net \n192.30.253.112 github.com "]],[7252,7323],[7252,7252]]],[1548155535801,["gjx16@GJXAIOU",[[1,7252,"nums = range(-5,5)deng\nprint(list(filter(lambda x: x>0,nums)))"]],[7252,7252],[7314,7314]]],[1548155558027,["gjx16@GJXAIOU",[[-1,7270,"deng"]],[7274,7274],[7270,7270]]],[1548155561534,["gjx16@GJXAIOU",[[1,7311,"\n"]],[7310,7310],[7311,7311]]],[1548155567665,["gjx16@GJXAIOU",[[1,7311,"su =-"]],[7311,7311],[7316,7316]]],[1548155622132,["gjx16@GJXAIOU",[[-1,7311,"su =-"]],[7316,7316],[7311,7311]]],[1548155631036,["gjx16@GJXAIOU",[[1,7311,"#xiang"]],[7311,7311],[7317,7317]]],[1548155632646,["gjx16@GJXAIOU",[[-1,7312,"xiang"]],[7317,7317],[7312,7312]]],[1548155637623,["gjx16@GJXAIOU",[[1,7312,"以上相当于："]],[7312,7312],[7318,7318]]],[1548155638025,["gjx16@GJXAIOU",[[1,7319,"\n"]],[7318,7318],[7319,7319]]],[1548155661087,["gjx16@GJXAIOU",[[1,7319,"[x for x in nums ifr"]],[7319,7319],[7339,7339]]],[1548155661821,["gjx16@GJXAIOU",[[-1,7338,"r"]],[7339,7339],[7338,7338]]],[1548155663962,["gjx16@GJXAIOU",[[1,7338," x"]],[7338,7338],[7340,7340]]],[1548155668127,["gjx16@GJXAIOU",[[1,7340,">0]"]],[7340,7340],[7343,7343]]],[1548157435438,["gjx16@GJXAIOU",[[1,7252,"\"\"\" # filter练习 p174 filter(function, iterable)# 判别函数  可迭代函数 filter() 函数用于过滤序列，过滤掉不符合条件的元素，返回一个迭代器对象， 如果要转换为列表，可以使用 list() 来转换。   该接收两个参数，第一个为函数，第二个为序列，序列的每个元素作为参数传递给函数进行判， 然后返回 True 或 False，最后将返回 True 的元素放到新列表中 \"\"\" "],[-1,7318,"\n"],[1,7319," "]],[7252,7343],[7558,7558]]],[1548157439292,["gjx16@GJXAIOU",[[1,7272,"\n"]],[7272,7272],[7273,7273]]],[1548157443509,["gjx16@GJXAIOU",[[1,7256,"\n"]],[7256,7256],[7257,7257]]],[1548157446515,["gjx16@GJXAIOU",[[-1,7257,"#"]],[7258,7258],[7257,7257]]],[1548157447002,["gjx16@GJXAIOU",[[-1,7256,"\n"]],[7257,7257],[7256,7256]]],[1548157451700,["gjx16@GJXAIOU",[[1,7256,"\n"]],[7256,7256],[7257,7257]]],[1548157456931,["gjx16@GJXAIOU",[[1,7313,"\n"]],[7313,7313],[7314,7314]]],[1548157460131,["gjx16@GJXAIOU",[[1,7383,"\n"]],[7383,7383],[7384,7384]]],[1548157465040,["gjx16@GJXAIOU",[[1,7466,"\n"]],[7466,7466],[7467,7467]]],[1548157467299,["gjx16@GJXAIOU",[[1,7471,"\n"]],[7471,7471],[7472,7472]]],[1548157470699,["gjx16@GJXAIOU",[[1,7538,"\n"]],[7538,7538],[7539,7539]]],[1548157472450,["gjx16@GJXAIOU",[[-1,7539," "]],[7540,7540],[7539,7539]]],[1548157519789,["gjx16@GJXAIOU",[[1,7572,"\n"]],[7567,7567],[7568,7568]]],[1548157519940,["gjx16@GJXAIOU",[[1,7573,"\n"]],[7568,7568],[7569,7569]]],[1548157525356,["gjx16@GJXAIOU",[[1,7569,"### 3.4."]],[7569,7569],[7577,7577]]],[1548157527224,["gjx16@GJXAIOU",[[1,7578,"zip"]],[7578,7578],[7581,7581]]],[1548157530482,["gjx16@GJXAIOU",[[1,7578," "]],[7578,7578],[7579,7579]]],[1548157645612,[null,[[-1,7577,"\n"],[1,7578,"5"],[1,7582,"\n"]],[7577,7577],[7583,7583]]],[1548157645612,[null,[[1,7577,"\n"],[-1,7577,"5"],[-1,7582,"\n"]],[7583,7583],[7577,7577]]],[1548157625302,["gjx16@GJXAIOU",[[1,7582,"()hansh"]],[7582,7582],[7589,7589]]],[1548157626841,["gjx16@GJXAIOU",[[-1,7584,"hansh"]],[7589,7589],[7584,7584]]],[1548157628952,["gjx16@GJXAIOU",[[1,7584,"函数"]],[7584,7584],[7586,7586]]],[1548157629960,["gjx16@GJXAIOU",[[1,7591,"\n"]],[7586,7586],[7587,7587]]],[1548157644526,["gjx16@GJXAIOU",[[1,7587,"- 是内建函数，但是参数是"]],[7587,7587],[7600,7600]]],[1548157705608,[null,[[-1,7577,"\n"],[1,7578,"5"],[1,7600,"\n"]],[7577,7577],[7601,7601]]],[1548157705608,[null,[[1,7577,"\n"],[-1,7577,"5"],[-1,7600,"\n"]],[7601,7601],[7577,7577]]],[1548157663878,["gjx16@GJXAIOU",[[1,7600,"可迭代对象，返回值为zip对象，可以使用lise"]],[7600,7600],[7624,7624]]],[1548157664873,["gjx16@GJXAIOU",[[-1,7623,"e"]],[7624,7624],[7623,7623]]],[1548157673110,["gjx16@GJXAIOU",[[1,7623,"t()进行查看内容"]],[7623,7623],[7632,7632]]],[1548157673573,["gjx16@GJXAIOU",[[1,7633,"- \n"]],[7632,7632],[7635,7635]]],[1548157675875,["gjx16@GJXAIOU",[[-1,7633,"- "]],[7635,7635],[7633,7633]]],[1548157765609,[null,[[-1,7577,"\n"],[1,7578,"5"],[1,7632,"\n"]],[7577,7577],[7633,7633]]],[1548157765609,[null,[[1,7577,"\n"],[-1,7577,"5"],[-1,7632,"\n"]],[7633,7633],[7577,7577]]],[1548157724375,["gjx16@GJXAIOU",[[1,7633,"具体事例见：p175，这里没有认真看"]],[7633,7633],[7651,7651]]],[1548157724841,["gjx16@GJXAIOU",[[1,7656,"\n"]],[7651,7651],[7652,7652]]],[1548157724989,["gjx16@GJXAIOU",[[1,7657,"\n"]],[7652,7652],[7653,7653]]],[1548157725111,["gjx16@GJXAIOU",[[1,7658,"\n"]],[7653,7653],[7654,7654]]],[1548157725273,["gjx16@GJXAIOU",[[1,7659,"\n"]],[7654,7654],[7655,7655]]],[1548157729476,["gjx16@GJXAIOU",[[1,7655,"  "]],[7655,7655],[7657,7657]]],[1548157885613,[null,[[-1,7577,"\n"],[1,7578,"5"],[1,7657,"\n"]],[7577,7577],[7658,7658]]],[1548157885613,[null,[[1,7577,"\n"],[-1,7577,"5"],[-1,7657,"\n"]],[7658,7658],[7577,7577]]],[1548157866564,["gjx16@GJXAIOU",[[1,7655,"\n"]],[7653,7653],[7654,7654]]],[1548157866702,["gjx16@GJXAIOU",[[1,7656,"\n"]],[7654,7654],[7655,7655]]],[1548157866845,["gjx16@GJXAIOU",[[1,7657,"\n"]],[7655,7655],[7656,7656]]],[1548157866954,["gjx16@GJXAIOU",[[1,7658,"\n"]],[7656,7656],[7657,7657]]],[1548157867162,["gjx16@GJXAIOU",[[1,7659,"\n"]],[7657,7657],[7658,7658]]],[1548157867290,["gjx16@GJXAIOU",[[1,7660,"\n"]],[7658,7658],[7659,7659]]],[1548157882095,["gjx16@GJXAIOU",[[1,7659,"## 3.5 "]],[7659,7659],[7666,7666]]],[1548157945687,[null,[[-1,7577,"\n"],[1,7578,"5"],[1,7670,"\n"]],[7577,7577],[7671,7671]]],[1548157945687,[null,[[1,7577,"\n"],[-1,7577,"5"],[-1,7670,"\n"]],[7671,7671],[7577,7577]]],[1548157887524,["gjx16@GJXAIOU",[[1,7666,"命名空间"]],[7666,7666],[7670,7670]]],[1548157888759,["gjx16@GJXAIOU",[[1,7672,"\n"]],[7670,7670],[7671,7671]]],[1548158005622,[null,[[-1,7577,"\n"],[1,7578,"5"],[1,7675,"\n"]],[7577,7577],[7676,7676]]],[1548158005622,[null,[[1,7577,"\n"],[-1,7577,"5"],[-1,7675,"\n"]],[7676,7676],[7577,7577]]],[1548157969605,["gjx16@GJXAIOU",[[1,7671,"  ###"]],[7671,7671],[7676,7676]]],[1548157971150,["gjx16@GJXAIOU",[[-1,7672," ###"]],[7676,7676],[7672,7672]]],[1548157972022,["gjx16@GJXAIOU",[[-1,7671," "],[1,7672,"\n"]],[7672,7672],[7672,7672]]],[1548157981184,["gjx16@GJXAIOU",[[1,7672,"### 3.5.1全局几遍脸和"]],[7672,7672],[7687,7687]]],[1548157982354,["gjx16@GJXAIOU",[[-1,7683,"几遍脸和"]],[7687,7687],[7683,7683]]],[1548157987625,["gjx16@GJXAIOU",[[1,7683,"变量和局部变量"]],[7683,7683],[7690,7690]]],[1548157988110,["gjx16@GJXAIOU",[[1,7692,"\n"]],[7690,7690],[7691,7691]]],[1548157990533,["gjx16@GJXAIOU",[[1,7691,"'"]],[7691,7691],[7692,7692]]],[1548157990580,["gjx16@GJXAIOU",[[-1,7691,"'"],[1,7692,"‘"]],[7692,7692],[7692,7692]]],[1548157990705,["gjx16@GJXAIOU",[[1,7692,"'"]],[7692,7692],[7693,7693]]],[1548157990753,["gjx16@GJXAIOU",[[-1,7692,"'"],[1,7693,"’"]],[7693,7693],[7693,7693]]],[1548157990842,["gjx16@GJXAIOU",[[1,7693,"'"]],[7693,7693],[7694,7694]]],[1548157990935,["gjx16@GJXAIOU",[[-1,7693,"'"],[1,7694,"‘"]],[7694,7694],[7694,7694]]],[1548157992510,["gjx16@GJXAIOU",[[-1,7691,"‘’‘"]],[7694,7694],[7691,7691]]],[1548157993368,["gjx16@GJXAIOU",[[1,7691,"‘’‘"]],[7691,7691],[7694,7694]]],[1548157994445,["gjx16@GJXAIOU",[[-1,7691,"‘’‘"]],[7694,7694],[7691,7691]]],[1548157996287,["gjx16@GJXAIOU",[[1,7691,"’"]],[7691,7691],[7692,7692]]],[1548157996897,["gjx16@GJXAIOU",[[-1,7691,"’"]],[7692,7692],[7691,7691]]],[1548157998457,["gjx16@GJXAIOU",[[1,7691,"'"]],[7691,7691],[7692,7692]]],[1548157998502,["gjx16@GJXAIOU",[[-1,7691,"'"],[1,7692,"‘"]],[7692,7692],[7692,7692]]],[1548157998682,["gjx16@GJXAIOU",[[1,7692,"'"]],[7692,7692],[7693,7693]]],[1548157998736,["gjx16@GJXAIOU",[[-1,7692,"'"],[1,7693,"’"]],[7693,7693],[7693,7693]]],[1548157999108,["gjx16@GJXAIOU",[[1,7693,"'"]],[7693,7693],[7694,7694]]],[1548157999153,["gjx16@GJXAIOU",[[-1,7693,"'"],[1,7694,"‘"]],[7694,7694],[7694,7694]]],[1548158000891,["gjx16@GJXAIOU",[[-1,7691,"‘’‘"]],[7694,7694],[7691,7691]]],[1548158003342,["gjx16@GJXAIOU",[[1,7691,"‘’‘’"]],[7691,7691],[7695,7695]]],[1548158004460,["gjx16@GJXAIOU",[[-1,7691,"‘’‘’"]],[7695,7695],[7691,7691]]],[1548158065624,[null,[[-1,7577,"\n"],[1,7578,"5"],[1,7695,"\n"]],[7577,7577],[7696,7696]]],[1548158065624,[null,[[1,7577,"\n"],[-1,7577,"5"],[-1,7695,"\n"]],[7696,7696],[7577,7577]]],[1548158008048,["gjx16@GJXAIOU",[[1,7691,"'"]],[7691,7691],[7692,7692]]],[1548158008122,["gjx16@GJXAIOU",[[-1,7691,"'"],[1,7692,"‘"]],[7692,7692],[7692,7692]]],[1548158008482,["gjx16@GJXAIOU",[[1,7692,"'"]],[7692,7692],[7693,7693]]],[1548158008526,["gjx16@GJXAIOU",[[-1,7692,"'"],[1,7693,"’"]],[7693,7693],[7693,7693]]],[1548158009047,["gjx16@GJXAIOU",[[1,7693,"'"]],[7693,7693],[7694,7694]]],[1548158009102,["gjx16@GJXAIOU",[[-1,7693,"'"],[1,7694,"‘"]],[7694,7694],[7694,7694]]],[1548158009861,["gjx16@GJXAIOU",[[1,7696,"\n"]],[7694,7694],[7695,7695]]],[1548158011334,["gjx16@GJXAIOU",[[-1,7696,"\n"]],[7695,7695],[7694,7694]]],[1548158012037,["gjx16@GJXAIOU",[[-1,7691,"‘’‘"]],[7694,7694],[7691,7691]]],[1548158016967,["gjx16@GJXAIOU",[[1,7691,"‘’‘’‘’‘’‘’"]],[7691,7691],[7701,7701]]],[1548158019442,["gjx16@GJXAIOU",[[-1,7691,"‘’‘’‘’‘’‘’"]],[7701,7701],[7691,7691]]],[1548158021856,["gjx16@GJXAIOU",[[1,7691,"‘’‘"]],[7691,7691],[7694,7694]]],[1548158023309,["gjx16@GJXAIOU",[[-1,7691,"‘’‘"]],[7694,7694],[7691,7691]]],[1548158026223,["gjx16@GJXAIOU",[[1,7691,"“”“"]],[7691,7691],[7694,7694]]],[1548158027186,["gjx16@GJXAIOU",[[-1,7691,"“”“"]],[7694,7694],[7691,7691]]],[1548158365617,[null,[[-1,7577,"\n"],[1,7578,"5"],[1,7695,"\n"]],[7577,7577],[7696,7696]]],[1548158365617,[null,[[1,7577,"\n"],[-1,7577,"5"],[-1,7695,"\n"]],[7696,7696],[7577,7577]]],[1548158349144,["gjx16@GJXAIOU",[[1,7691,"···"]],[7691,7691],[7694,7694]]],[1548158350462,["gjx16@GJXAIOU",[[-1,7691,"···"]],[7694,7694],[7691,7691]]],[1548158351844,["gjx16@GJXAIOU",[[1,7691,"```"]],[7691,7691],[7694,7694]]],[1548158351900,["gjx16@GJXAIOU",[[1,7694,"language\n```\n"]],[7694,7694],[7694,7702]]],[1548158353126,["gjx16@GJXAIOU",[[-1,7694,"language"],[1,7702,"p"]],[7694,7702],[7695,7695]]],[1548158353909,["gjx16@GJXAIOU",[[1,7695,"ython"]],[7695,7695],[7700,7700]]],[1548158354700,["gjx16@GJXAIOU",[[1,7701,"\n"]],[7700,7700],[7701,7701]]],[1548158355693,["gjx16@GJXAIOU",[[1,7701,"''' 3.5.1全局变量和局部变量;p176 ''' x = 10 def funs():\n    global x  # 作用：将x声明称为全局变量，这样in的输出值也为22，同时out输出值为22\n  x = 22\n  print(\"in : \",x)\n\nfuns()\nprint(\"out : \",x)"]],[7701,7701],[7856,7856]]],[1548158358066,["gjx16@GJXAIOU",[[-1,7701,"''' 3.5.1全局变量和局部变量;p176 ''' x = 10 def funs():\n    global x  # 作用：将x声明称为全局变量，这样in的输出值也为22，同时out输出值为22\n  x = 22\n  print(\"in : \",x)\n\nfuns()\nprint(\"out : \",x)"]],[7856,7856],[7701,7701]]],[1548158360275,["gjx16@GJXAIOU",[[1,7701,"'''\n3.5.1全局变量和局部变量;p176\n'''\nx = 10\ndef funs():\n    global x  # 作用：将x声明称为全局变量，这样in的输出值也为22，同时out输出值为22\n    x = 22\n    print(\"in : \",x)\n\nfuns()\nprint(\"out : \",x)"]],[7701,7701],[7860,7860]]],[1548158425624,[null,[[-1,7577,"\n"],[1,7578,"5"],[1,7869,"\n"]],[7577,7577],[7870,7870]]],[1548158425624,[null,[[1,7577,"\n"],[-1,7577,"5"],[-1,7869,"\n"]],[7870,7870],[7577,7577]]],[1548158365669,["gjx16@GJXAIOU",[[1,7867,"\n"]],[7864,7864],[7865,7865]]],[1548158366347,["gjx16@GJXAIOU",[[1,7865,"c"]],[7865,7865],[7866,7866]]],[1548158366811,["gjx16@GJXAIOU",[[-1,7865,"c"]],[7866,7866],[7865,7865]]],[1548158370969,["gjx16@GJXAIOU",[[1,7865,"程序运行解雇哟"]],[7865,7865],[7872,7872]]],[1548158371827,["gjx16@GJXAIOU",[[-1,7869,"解雇哟"]],[7872,7872],[7869,7869]]],[1548158374014,["gjx16@GJXAIOU",[[1,7869,"结果："]],[7869,7869],[7872,7872]]],[1548158380083,["gjx16@GJXAIOU",[[1,7875,"\n"]],[7872,7872],[7873,7873]]],[1548158381087,["gjx16@GJXAIOU",[[1,7873,"``"]],[7873,7873],[7875,7875]]],[1548158383494,["gjx16@GJXAIOU",[[1,7874,"in :  22\nout :  22"]],[7874,7874],[7892,7892]]],[1548158385221,["gjx16@GJXAIOU",[[1,7882,"`"]],[7882,7882],[7883,7883]]],[1548158388107,["gjx16@GJXAIOU",[[1,7884,"`"]],[7884,7884],[7885,7885]]],[1548158392262,["gjx16@GJXAIOU",[[1,7569,"\n"]],[7567,7567],[7568,7568]]],[1548158399033,["gjx16@GJXAIOU",[[1,7568,"程序运行结果："]],[7568,7568],[7575,7575]]],[1548158399659,["gjx16@GJXAIOU",[[1,7577,"\n"]],[7575,7575],[7576,7576]]],[1548158401321,["gjx16@GJXAIOU",[[-1,7577,"\n"]],[7576,7576],[7575,7575]]],[1548158408011,["gjx16@GJXAIOU",[[1,7575,"·"]],[7575,7575],[7576,7576]]],[1548158409021,["gjx16@GJXAIOU",[[-1,7575,"·"]],[7576,7576],[7575,7575]]],[1548158409761,["gjx16@GJXAIOU",[[1,7575,"``"]],[7575,7575],[7577,7577]]],[1548158411305,["gjx16@GJXAIOU",[[1,7576,"[1, 2, 3, 4]"]],[7576,7576],[7588,7588]]],[1548158414012,["gjx16@GJXAIOU",[[1,7591,"\n"]],[7590,7590],[7591,7591]]],[1548158414140,["gjx16@GJXAIOU",[[1,7592,"\n"]],[7591,7591],[7592,7592]]],[1548158485756,[null,[[-1,7601,"\n"],[1,7602,"5"],[1,7924,"\n"]],[7601,7601],[7925,7925]]],[1548158485756,[null,[[1,7601,"\n"],[-1,7601,"5"],[-1,7924,"\n"]],[7925,7925],[7601,7601]]],[1548158435798,["gjx16@GJXAIOU",[[1,7921," "]],[7921,7921],[7922,7922]]],[1548158436968,["gjx16@GJXAIOU",[[-1,7921," "],[1,7922,"\n"]],[7922,7922],[7922,7922]]],[1548158439498,["gjx16@GJXAIOU",[[1,7922,"### 3.53"]],[7922,7922],[7930,7930]]],[1548158440137,["gjx16@GJXAIOU",[[-1,7929,"3"]],[7930,7930],[7929,7929]]],[1548158443326,["gjx16@GJXAIOU",[[1,7929,".2 zuoy"]],[7929,7929],[7936,7936]]],[1548158444491,["gjx16@GJXAIOU",[[-1,7932,"zuoy"]],[7936,7936],[7932,7932]]],[1548158446765,["gjx16@GJXAIOU",[[1,7932,"作用域"]],[7932,7932],[7935,7935]]],[1548158447268,["gjx16@GJXAIOU",[[1,7936,"\n"]],[7935,7935],[7936,7936]]],[1548158475857,["gjx16@GJXAIOU",[[1,7936,"python属于动态语言，但是作用域属于境外"]],[7936,7936],[7958,7958]]],[1548158476465,["gjx16@GJXAIOU",[[-1,7956,"境外"]],[7958,7958],[7956,7956]]],[1548158482791,["gjx16@GJXAIOU",[[1,7956,"静态作用域"]],[7956,7956],[7961,7961]]],[1548158545630,[null,[[-1,7601,"\n"],[1,7602,"5"],[1,7964,"\n"]],[7601,7601],[7965,7965]]],[1548158545630,[null,[[1,7601,"\n"],[-1,7601,"5"],[-1,7964,"\n"]],[7965,7965],[7601,7601]]],[1548158513097,["gjx16@GJXAIOU",[[1,7961,"：python中变量的作用域是由它在程序中的位置决定"]],[7961,7961],[7987,7987]]],[1548158528140,["gjx16@GJXAIOU",[[1,7988,"\n"]],[7987,7987],[7988,7988]]],[1548158531147,["gjx16@GJXAIOU",[[1,7936,"- "]],[7936,7936],[7938,7938]]],[1548158540064,["gjx16@GJXAIOU",[[1,7990,"- 作用域分类："]],[7990,7990],[7998,7998]]],[1548158541124,["gjx16@GJXAIOU",[[1,7999,"- \n"]],[7998,7998],[8001,8001]]],[1548158542594,["gjx16@GJXAIOU",[[1,7999,"  "]],[8001,8001],[8003,8003]]],[1548158605637,[null,[[-1,7601,"\n"],[1,7602,"5"],[1,8006,"\n"]],[7601,7601],[8007,8007]]],[1548158605637,[null,[[1,7601,"\n"],[-1,7601,"5"],[-1,8006,"\n"]],[8007,8007],[7601,7601]]],[1548158553034,["gjx16@GJXAIOU",[[1,8003,"local：局部作用域："]],[8003,8003],[8015,8015]]],[1548158554545,["gjx16@GJXAIOU",[[-1,8014,"："]],[8015,8015],[8014,8014]]],[1548158568434,["gjx16@GJXAIOU",[[1,8014,"或称本地作用域"]],[8014,8014],[8021,8021]]],[1548158568711,["gjx16@GJXAIOU",[[1,8024,"- \n  "]],[8021,8021],[8026,8026]]],[1548158585078,["gjx16@GJXAIOU",[[1,8026,"Enclosing:嵌套作用域"]],[8026,8026],[8041,8041]]],[1548158585668,["gjx16@GJXAIOU",[[1,8044,"- \n  "]],[8041,8041],[8046,8046]]],[1548158593683,["gjx16@GJXAIOU",[[1,8046,"Global:quanj"]],[8046,8046],[8058,8058]]],[1548158594842,["gjx16@GJXAIOU",[[-1,8053,"quanj"]],[8058,8058],[8053,8053]]],[1548158598326,["gjx16@GJXAIOU",[[1,8053,"全局作用域"]],[8053,8053],[8058,8058]]],[1548158598710,["gjx16@GJXAIOU",[[1,8061,"- \n  "]],[8058,8058],[8063,8063]]],[1548158605392,["gjx16@GJXAIOU",[[1,8063,"Built-in"]],[8063,8063],[8071,8071]]],[1548158665640,[null,[[-1,7601,"\n"],[1,7602,"5"],[1,8074,"\n"]],[7601,7601],[8075,8075]]],[1548158665640,[null,[[1,7601,"\n"],[-1,7601,"5"],[-1,8074,"\n"]],[8075,8075],[7601,7601]]],[1548158610700,["gjx16@GJXAIOU",[[1,8071,":内建作用域"]],[8071,8071],[8077,8077]]],[1548158643556,["gjx16@GJXAIOU",[[1,8080,"- \n  "]],[8077,8077],[8082,8082]]],[1548158643708,["gjx16@GJXAIOU",[[-1,8078,"  - "]],[8082,8082],[8079,8079]]],[1548158643863,["gjx16@GJXAIOU",[[-1,8079,"  "],[1,8081,"\n"]],[8079,8079],[8080,8080]]],[1548158645372,["gjx16@GJXAIOU",[[1,8085,"\n"]],[8080,8080],[8081,8081]]],[1548158655765,["gjx16@GJXAIOU",[[1,8081,"### 3.5.3 命名空间"]],[8081,8081],[8095,8095]]],[1548158656282,["gjx16@GJXAIOU",[[1,8100,"\n"]],[8095,8095],[8096,8096]]],[1548158663273,["gjx16@GJXAIOU",[[1,8096,"- 定义："]],[8096,8096],[8101,8101]]],[1548158725641,[null,[[-1,7601,"\n"],[1,7602,"5"],[1,8101,"\n"]],[7601,7601],[8102,8102]]],[1548158725641,[null,[[1,7601,"\n"],[-1,7601,"5"],[-1,8101,"\n"]],[8102,8102],[7601,7601]]],[1548158680528,["gjx16@GJXAIOU",[[1,8101,"命名空间表示标识符的课件范围"]],[8101,8101],[8115,8115]]],[1548158681454,["gjx16@GJXAIOU",[[-1,8111,"课件范围"]],[8115,8115],[8111,8111]]],[1548158724065,["gjx16@GJXAIOU",[[1,8111,"可见范围，同一个标识符可以在多个命名空间中定义，但是不同命名空间中的"]],[8111,8111],[8145,8145]]],[1548158785643,[null,[[-1,7601,"\n"],[1,7602,"5"],[1,8145,"\n"]],[7601,7601],[8146,8146]]],[1548158785643,[null,[[1,7601,"\n"],[-1,7601,"5"],[-1,8145,"\n"]],[8146,8146],[7601,7601]]],[1548158737168,["gjx16@GJXAIOU",[[1,8145,"定义是互不相干的。"]],[8145,8145],[8154,8154]]],[1548158845644,[null,[[-1,7601,"\n"],[1,7602,"5"],[1,8154,"\n"]],[7601,7601],[8155,8155]]],[1548158845644,[null,[[1,7601,"\n"],[-1,7601,"5"],[-1,8154,"\n"]],[8155,8155],[7601,7601]]],[1548158792206,["gjx16@GJXAIOU",[[1,8155,"- \n"]],[8154,8154],[8157,8157]]],[1548158824865,["gjx16@GJXAIOU",[[1,8157,"命名空间是对作用域的特殊抽象，包含了处于该作用于"]],[8157,8157],[8181,8181]]],[1548158826116,["gjx16@GJXAIOU",[[-1,8178,"作用于"]],[8181,8181],[8178,8178]]],[1548158829754,["gjx16@GJXAIOU",[[1,8178,"作用域内的"]],[8178,8178],[8183,8183]]],[1548158905642,[null,[[-1,7601,"\n"],[1,7602,"5"],[1,8183,"\n"]],[7601,7601],[8184,8184]]],[1548158905642,[null,[[1,7601,"\n"],[-1,7601,"5"],[-1,8183,"\n"]],[8184,8184],[7601,7601]]],[1548158869434,["gjx16@GJXAIOU",[[1,8183,"标识符，且本身也为一种标识符。"]],[8183,8183],[8198,8198]]],[1548158897367,["gjx16@GJXAIOU",[[1,8199,"- \n"]],[8198,8198],[8201,8201]]],[1548158900287,["gjx16@GJXAIOU",[[1,8201,"分类："]],[8201,8201],[8204,8204]]],[1548158902187,["gjx16@GJXAIOU",[[1,8205,"- \n"]],[8204,8204],[8207,8207]]],[1548158903143,["gjx16@GJXAIOU",[[1,8205,"  "]],[8207,8207],[8209,8209]]],[1548158965645,[null,[[-1,7601,"\n"],[1,7602,"5"],[1,8209,"\n"]],[7601,7601],[8210,8210]]],[1548158965645,[null,[[1,7601,"\n"],[-1,7601,"5"],[-1,8209,"\n"]],[8210,8210],[7601,7601]]],[1548158909720,["gjx16@GJXAIOU",[[1,8209,"本地命名空间"]],[8209,8209],[8215,8215]]],[1548158910038,["gjx16@GJXAIOU",[[1,8216,"  - \n"]],[8215,8215],[8220,8220]]],[1548158915116,["gjx16@GJXAIOU",[[-1,8216,"  - "]],[8220,8220],[8216,8216]]],[1548158915757,["gjx16@GJXAIOU",[[-1,8220,"\n"]],[8216,8216],[8215,8215]]],[1548158965440,["gjx16@GJXAIOU",[[1,8215,"：每个模块中的类和函数，他们定义的命名空间即为本地命名监控机"]],[8215,8215],[8245,8245]]],[1548159025659,[null,[[-1,7601,"\n"],[1,7602,"5"]],[7601,7601],[7603,7603]]],[1548159025659,[null,[[1,7601,"\n"],[-1,7601,"5"]],[7603,7603],[7601,7601]]],[1548158966314,["gjx16@GJXAIOU",[[-1,8242,"监控机"]],[8245,8245],[8242,8242]]],[1548158977083,["gjx16@GJXAIOU",[[1,8242,"空间，当函数返回劫夺"]],[8242,8242],[8252,8252]]],[1548158978569,["gjx16@GJXAIOU",[[-1,8250,"劫夺"]],[8252,8252],[8250,8250]]],[1548158997887,["gjx16@GJXAIOU",[[1,8250,"结果或者抛出异常则本地明明框架"]],[8250,8250],[8265,8265]]],[1548158999596,["gjx16@GJXAIOU",[[-1,8261,"明明框架"]],[8265,8265],[8261,8261]]],[1548159007286,["gjx16@GJXAIOU",[[1,8261,"命名空间结束。"]],[8261,8261],[8268,8268]]],[1548159007931,["gjx16@GJXAIOU",[[1,8269,"  - \n"]],[8268,8268],[8273,8273]]],[1548159015441,["gjx16@GJXAIOU",[[1,8273,"全居民们"]],[8273,8273],[8277,8277]]],[1548159016519,["gjx16@GJXAIOU",[[-1,8273,"全居民们"]],[8277,8277],[8273,8273]]],[1548159023100,["gjx16@GJXAIOU",[[1,8273,"全局命名空间："]],[8273,8273],[8280,8280]]],[1548159385658,[null,[[-1,7601,"\n"],[1,7602,"5"]],[7601,7601],[7603,7603]]],[1548159385659,[null,[[1,7601,"\n"],[-1,7601,"5"]],[7603,7603],[7601,7601]]],[1548159381844,["gjx16@GJXAIOU",[[1,8280,"每个模块创建的子集的"]],[8280,8280],[8290,8290]]],[1548159384120,["gjx16@GJXAIOU",[[-1,8287,"子集的"]],[8290,8290],[8287,8287]]],[1548159385371,["gjx16@GJXAIOU",[[1,8287,"子集"]],[8287,8287],[8289,8289]]],[1548159445647,[null,[[-1,7601,"\n"],[1,7602,"5"]],[7601,7601],[7603,7603]]],[1548159445647,[null,[[1,7601,"\n"],[-1,7601,"5"]],[7603,7603],[7601,7601]]],[1548159385974,["gjx16@GJXAIOU",[[-1,8287,"子集"]],[8289,8289],[8287,8287]]],[1548159412640,["gjx16@GJXAIOU",[[1,8287,"自己的命名空间，各个模块间命名空间相互独立"]],[8287,8287],[8308,8308]]],[1548159505648,[null,[[-1,7601,"\n"],[1,7602,"5"]],[7601,7601],[7603,7603]]],[1548159505648,[null,[[1,7601,"\n"],[-1,7601,"5"]],[7603,7603],[7601,7601]]],[1548159477673,["gjx16@GJXAIOU",[[1,8309,"  - \n"]],[8308,8308],[8313,8313]]],[1548159490385,["gjx16@GJXAIOU",[[1,8313,"内置命名空间："]],[8313,8313],[8320,8320]]],[1548159565658,[null,[[-1,7601,"\n"],[1,7602,"5"]],[7601,7601],[7603,7603]]],[1548159565658,[null,[[1,7601,"\n"],[-1,7601,"5"]],[7603,7603],[7601,7601]]],[1548159554687,["gjx16@GJXAIOU",[[1,8320,"python运行起来就存在了，内置函数的命名空间就是"]],[8320,8320],[8346,8346]]],[1548159557692,["gjx16@GJXAIOU",[[-1,8344,"就是"]],[8346,8346],[8344,8344]]],[1548159565162,["gjx16@GJXAIOU",[[1,8344,"均属于内置命名空间"]],[8344,8344],[8353,8353]]],[1548159625665,[null,[[-1,7601,"\n"],[1,7602,"5"]],[7601,7601],[7603,7603]]],[1548159625665,[null,[[1,7601,"\n"],[-1,7601,"5"]],[7603,7603],[7601,7601]]],[1548159569125,["gjx16@GJXAIOU",[[1,8353," "]],[8353,8353],[8354,8354]]],[1548159685725,[null,[[-1,7601,"\n"],[1,7602,"5"]],[7601,7601],[7603,7603]]],[1548159685725,[null,[[1,7601,"\n"],[-1,7601,"5"]],[7603,7603],[7601,7601]]],[1548159634509,["gjx16@GJXAIOU",[[1,8355,"  - \n"]],[8354,8354],[8359,8359]]],[1548159635140,["gjx16@GJXAIOU",[[-1,8355,"  - "]],[8359,8359],[8356,8356]]],[1548159656836,["gjx16@GJXAIOU",[[1,8356,"- 访问本地命名空间：locals()"]],[8356,8356],[8375,8375]]],[1548159658307,["gjx16@GJXAIOU",[[1,8376,"- \n"]],[8375,8375],[8378,8378]]],[1548159659475,["gjx16@GJXAIOU",[[1,8378,"fa"]],[8378,8378],[8380,8380]]],[1548159659954,["gjx16@GJXAIOU",[[-1,8378,"fa"]],[8380,8380],[8378,8378]]],[1548159671156,["gjx16@GJXAIOU",[[1,8378,"访问全局命名空间：gl"]],[8378,8378],[8389,8389]]],[1548159672248,["gjx16@GJXAIOU",[[-1,8388,"l"]],[8389,8389],[8388,8388]]],[1548159678747,["gjx16@GJXAIOU",[[1,8388,"lobals()"]],[8388,8388],[8396,8396]]],[1548159745655,[null,[[-1,7601,"\n"],[1,7602,"5"]],[7601,7601],[7603,7603]]],[1548159745655,[null,[[1,7601,"\n"],[-1,7601,"5"]],[7603,7603],[7601,7601]]],[1548159693028,["gjx16@GJXAIOU",[[1,8400,"\n"]],[8398,8398],[8399,8399]]],[1548159693200,["gjx16@GJXAIOU",[[1,8401,"\n"]],[8399,8399],[8400,8400]]],[1548159693354,["gjx16@GJXAIOU",[[1,8402,"\n"]],[8400,8400],[8401,8401]]],[1548159697351,["gjx16@GJXAIOU",[[1,8401,"## disan"]],[8401,8401],[8409,8409]]],[1548159698680,["gjx16@GJXAIOU",[[-1,8404,"disan"]],[8409,8409],[8404,8404]]],[1548159702098,["gjx16@GJXAIOU",[[1,8404,"第三种"]],[8404,8404],[8407,8407]]],[1548159702872,["gjx16@GJXAIOU",[[-1,8406,"种"]],[8407,8407],[8406,8406]]],[1548159710530,["gjx16@GJXAIOU",[[1,8406,"章示例代码"]],[8406,8406],[8411,8411]]],[1548159711111,["gjx16@GJXAIOU",[[1,8413,"\n"]],[8411,8411],[8412,8412]]],[1548159713031,["gjx16@GJXAIOU",[[1,8412,"···"]],[8412,8412],[8415,8415]]],[1548159714278,["gjx16@GJXAIOU",[[-1,8412,"···"]],[8415,8415],[8412,8412]]],[1548159715607,["gjx16@GJXAIOU",[[1,8412,"```"]],[8412,8412],[8415,8415]]],[1548159715653,["gjx16@GJXAIOU",[[1,8415,"language\n```\n"]],[8415,8415],[8415,8423]]],[1548159717322,["gjx16@GJXAIOU",[[-1,8415,"language"],[1,8423,"p"]],[8415,8423],[8416,8416]]],[1548159718118,["gjx16@GJXAIOU",[[1,8416,"ython"]],[8416,8416],[8421,8421]]],[1548159718742,["gjx16@GJXAIOU",[[1,8422,"\n"]],[8421,8421],[8422,8422]]],[1548159722869,["gjx16@GJXAIOU",[[1,8422,"#!/usr/bin/env python\n# -*- coding:utf-8 -*-\n#@Time :2018/11/15 14:49\n#Author:GJXAIOU\n\n\n'''\n定义函数   P147\n'''\n\n\n# def add_function(a,b):  #定义一个函数使用 ：  def   函数名（参数）:    其中：表示函数头的结束\n#     # 函数名的命名；小写字母或者单下划线或者数字\n#     #这里x,y作为形参，也可以认为是变量，而变量无类型，所以并没有规定其所引用的对象的类型，意义取决于对象的类型，称为多态\n#     c = a + b   # 函数体必须缩进4个空格\n#     return c  #return语句执行的时候，python会跳出当前的函数并且返回到调用这个函数的地方\n#\n#\n# if __name__ == \"__main__\":\n#     result = add_function(2,3)  #调用函数并且将实参传递给函数\n#     print(result)\n#\n#\n# # 下面为函数的其他使用方法\n#\n# # 只写函数名会得到该函数在内存中的存储信息\n# print(add_function)\n#\n# # 赋值语句可以实现变量和函数对象建立应用关系，\n# c= add_function\n# result1 = c(3,4)\n# print(result1)\n\n\n\n\n\n # '''\n # 调用函数 P151\n # '''\n# def add(x,y):\n#     print(\"x = {}\".format(x))\n#     print(\"y = {}\".format(y))\n#     return x +y\n#\n# #参数赋值方法一：\n# ans1 = add(2,3) #这里传递参数默认按照次序依次赋值\n# print(\"ans = \",ans1)\n#\n# #参数赋值方法二：\n#\n# ans2 = add(y = 4,x = 5) #直接使用变量= 变量值进行赋值，这就不用理会什么顺序\n# print(ans2)\n\n#\n# '''\n# 当定义函数的时候进行部分参数赋值 P151\n# '''\n#\n#  #def acfun(x = 1,y,z = 4 ): 这种定义方法是错误的，因为有默认值的参数必须都在没有默认值参数后面\n# def acfun(x,y,z= 1):\n#     acans = x +y +z\n#     return acans\n#\n# ans1 = acfun(1,2) #可以不给z赋值，则使用默认值\n# ans2 = acfun(2,3,2)#如果赋值，则使用这个值\n# print(\"ans1 = \",ans1)\n# print(\"ans2 = \",ans2)\n#\n#\n\n\n\n\n\n# '''\n#\n# 实现Fibonacci数列：P153\n# '''\n#\n#\n# # 此函数只有一个返回值（一个列表）\n#\n# def fib(n):\n#     result = [0,1]  # 以列表形式返回\n#     for i in range(n-2):\n#         result.append(result[-2] + result[-1])\n#     return result\n#\n# if __name__ == \"__main__\":\n#     haha = fib(10)\n#     print(haha)\n#\n#\n# # 但函数的返回值有多个时候，返回值类型为元组\n#\n# def bilibili():\n#     return 1,2,3\n#\n# ##接受返回值的方法一；\n# ans = bilibili()\n# print(\"ans = \" ,ans)\n#\n# ##接受函数返回值的方法二：\n# x,y,z = bilibili()\n# print(x,y,z)\n#\n#\n# # 如果函数没有return，则返回值为None\n\n\n\n\n\n#\n# '''\n#   验证return的作用：p155\n#   '''\n# def dilidili():\n#\n#     print(\"hello\")\n#     return\n#     print(\"world\")\n#\n# ans = dilidili()\n# print(ans)\n#\n\n#\n# '''\n# 函数文档注释；p156\n# '''\n#\n# def eilieili():\n#     \"\"\"\n#     this is a function,haha\n#\n#     \"\"\"\n#     print(\"lalala\")\n#\n# print(eilieili.__doc__)  # 参数含义：函数名.__doc__\n# #打印函数功能注释：首先注释必须在函数内部\n#\n#\n\n\n#\n# \"\"\"\n#\n# 函数的属性：P156\n# \"\"\"\n#\n# def filifili():\n#     print(\"hahha\")\n#\n# print(dir(filifili))\n#\n#\n\n#\n# \"\"\"\n# 参数与变量 ：p159\n# \"\"\"\n#\n# def giligili(lst):\n#     lst.append(0)\n#     return lst\n#\n# x = [1,2,3]\n# y = giligili(x)\n# print(y)\n#\n# #这里实现的是原地修改\n# print(id(x))\n# print(id(y))\n\n\n\n\n#\n# \"\"\"\n# 参数收集：p160\n# \"\"\"\n#\n# def foo(x,*arg):\n#     print(arg)\n#\n# foo(1,2,3,4,5,6,7)  #将第一个赋值给x之后，其余后面的所有的都以元组的形式赋值给*arg\n#\n# foo(1,3)  # 当只有3赋值给*arg时候，结果相当于元组中只有一个元素，这时候结果应该是：（3，），元组中单个元素后面要加上逗号\n#\n#\n# def foobar(x,y,z,*arg,**args):\n#     print(\"x = \",x,\"\\n y = \",y,\"\\n z = \",z,\"\\n *arg = \",arg,\"\\n **args = \",args)\n#\n# foobar(1,2,3,4,5,6,7,name = \"gaojixu\",age = 23)   #**args得到的值为字典类型，注意赋值方式\n\n\n#\n# \"\"\"\n# 函数递归：使用递归的方法实现Fibonacci数列值P163\n# \"\"\"\n#\n# def fib(n):\n#     \"\"\"\n#     This is a Fibonacci by Recursion\n#\n#     \"\"\"\n#     if n == 0:\n#         return 0\n#     elif n == 1:\n#         return 1\n#     else:\n#         return fib(n-1) +fib(n-2)\n#\n#\n# if __name__ == \"__main__\":\n#     f = fib(10)\n#     print(f)\n#\n#\n\n\n\n# \"\"\"\n# 传递函数：函数做参数 P164\n# \"\"\"\n#\n# def power_seq(func,seq):\n#     #因为pingfang也是一个函数名，可以这样理解：func = pingfang ,\n#     #后面一个参数seq 接受num_seq中的列表\n#     return [func(i) for i in seq]\n#     #因为func = pingfang ,所以func(i)，其实本质上为pingfang(i ),相当于在调用函数\n# \"\"\"\n# 上面的语句等价为：\n# def power_seq(func,seq):\n#     ans = []\n#     for i in seq:\n#         ans.append(func(i))\n#     return ans\n# \"\"\"\n#\n# def pingfang(x):\n#     return x **2\n#\n# if __name__ == \"__main__\":\n#     num_seq = [111,3.14,8,44]\n#     r = power_seq(pingfang,num_seq) #调用函数，传递参数\n#     print(num_seq)\n#     print(r)\n#\n\n\n\n\n\n# \"\"\"\n# 嵌套函数：P164\n# \"\"\"\n#\n# def foo():\n#     def bar():\n#         print(\"bar() is running\")\n#     #bar()  可以在这里进行调用执行\n#     print(\"foo() is running \")\n#\n# print(foo()) #调用执行foo()函数,注意这里并没有调用bar()函数，所以bar()函数不执行\n# #print(bar()) #在函数外部不能调用里面定义的函数，这能在函数内部调用\n\n\n\n\n\n\n# \"\"\"\n# 嵌套函数练习：P166\n# \"\"\"\n#\n# def weight(g):       #第二步：接受值：g = 10\n#     def cal_mg(m): #第七步，***\n#         return m*g\n#     return cal_mg   #第三步：返回cal_mg\n#\n# w = weight(10)       #第一步：传值，g= 10   #第四步：接受值，w = cal_mg\n# mg = w(10)           #第五步：w(10) 相当于：cal_mg(10),调用cal_mg函数\n# print(mg)\n\n\n\n\"\"\"\n# filter练习 p174\nfilter(function, iterable)# 判别函数  可迭代函数\nfilter() 函数用于过滤序列，过滤掉不符合条件的元素，返回一个迭代器对象，\n如果要转换为列表，可以使用 list() 来转换。\n\n该接收两个参数，第一个为函数，第二个为序列，序列的每个元素作为参数传递给函数进行判，\n然后返回 True 或 False，最后将返回 True 的元素放到新列表中\n\"\"\"\nnums = range(-5,5)\nprint(list(filter(lambda x: x>0,nums)))\n#以上相当于：\n[x for x in nums if x>0]\n\n\n\n'''\n3.5 命名空间：p 176\n'''\n\n\n'''\n3.5.1全局变量和局部变量;p176\n'''\nx = 10\ndef funs():\n    global x  # 作用：将x声明称为全局变量，这样in的输出值也为22，同时out输出值为22\n    x = 22\n    print(\"in : \",x)\n\nfuns()\nprint(\"out : \",x)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"]],[8422,8422],[13393,13393]]],[1548159745115,["gjx16@GJXAIOU",[[-1,13377,"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"]],[13376,13393],[13376,13376]]],[1548159796490,[null,[[-1,7601,"\n"],[1,7602,"5"]],[7601,7601],[7603,7603]]],[1548159796490,[null,[[1,7601,"\n"],[-1,7601,"5"]],[7603,7603],[7601,7601]]],[1548159746212,["gjx16@GJXAIOU",[[-1,13376,"\n"]],[13376,13376],[13375,13375]]],[1548159746487,["gjx16@GJXAIOU",[[-1,13375,"\n"]],[13375,13375],[13374,13374]]],[1548159746777,["gjx16@GJXAIOU",[[-1,13374,"\n"]],[13374,13374],[13373,13373]]],[1548159747005,["gjx16@GJXAIOU",[[-1,13373,"\n"]],[13373,13373],[13372,13372]]],[1548159747242,["gjx16@GJXAIOU",[[-1,13372,"\n"]],[13372,13372],[13371,13371]]],[1548159747742,["gjx16@GJXAIOU",[[-1,13371,"\n"]],[13371,13371],[13370,13370]]],[1548159747891,["gjx16@GJXAIOU",[[-1,13370,"\n"]],[13370,13370],[13369,13369]]],[1548159748036,["gjx16@GJXAIOU",[[-1,13369,"\n"]],[13369,13369],[13368,13368]]],[1548159748184,["gjx16@GJXAIOU",[[-1,13368,"\n"]],[13368,13368],[13367,13367]]],[1548159748316,["gjx16@GJXAIOU",[[-1,13367,"\n"]],[13367,13367],[13366,13366]]],[1548159748523,["gjx16@GJXAIOU",[[-1,13366,"\n"]],[13366,13366],[13365,13365]]],[1548159748699,["gjx16@GJXAIOU",[[-1,13365,"\n"]],[13365,13365],[13364,13364]]],[1548159748861,["gjx16@GJXAIOU",[[-1,13364,"\n"]],[13364,13364],[13363,13363]]],[1548159749070,["gjx16@GJXAIOU",[[-1,13363,"\n"]],[13363,13363],[13362,13362]]],[1548159749213,["gjx16@GJXAIOU",[[-1,13362,"\n"]],[13362,13362],[13361,13361]]],[1548159749396,["gjx16@GJXAIOU",[[-1,13361,"\n"]],[13361,13361],[13360,13360]]],[1548159749549,["gjx16@GJXAIOU",[[-1,13360,"\n"]],[13360,13360],[13359,13359]]],[1548159749691,["gjx16@GJXAIOU",[[-1,13359,"\n"]],[13359,13359],[13358,13358]]],[1548159749892,["gjx16@GJXAIOU",[[-1,13358,"\n"]],[13358,13358],[13357,13357]]],[1548159750036,["gjx16@GJXAIOU",[[-1,13357,"\n"]],[13357,13357],[13356,13356]]],[1548159750174,["gjx16@GJXAIOU",[[-1,13356,"\n"]],[13356,13356],[13355,13355]]],[1548159750326,["gjx16@GJXAIOU",[[-1,13355,"\n"]],[13355,13355],[13354,13354]]],[1548159750483,["gjx16@GJXAIOU",[[-1,13354,"\n"]],[13354,13354],[13353,13353]]],[1548159750658,["gjx16@GJXAIOU",[[-1,13353,"\n"]],[13353,13353],[13352,13352]]],[1548159750874,["gjx16@GJXAIOU",[[-1,13352,"\n"]],[13352,13352],[13351,13351]]],[1548159751035,["gjx16@GJXAIOU",[[-1,13351,"\n"]],[13351,13351],[13350,13350]]],[1548159751187,["gjx16@GJXAIOU",[[-1,13350,"\n"]],[13350,13350],[13349,13349]]],[1548159751353,["gjx16@GJXAIOU",[[-1,13349,"\n"]],[13349,13349],[13348,13348]]],[1548159751509,["gjx16@GJXAIOU",[[-1,13348,"\n"]],[13348,13348],[13347,13347]]],[1548159751947,["gjx16@GJXAIOU",[[-1,13347,"\n"]],[13347,13347],[13346,13346]]],[1548159752125,["gjx16@GJXAIOU",[[-1,13346,"\n"]],[13346,13346],[13345,13345]]],[1548159752323,["gjx16@GJXAIOU",[[-1,13345,"\n"]],[13345,13345],[13344,13344]]],[1548159752487,["gjx16@GJXAIOU",[[-1,13344,"\n"]],[13344,13344],[13343,13343]]],[1548159752671,["gjx16@GJXAIOU",[[-1,13343,"\n"]],[13343,13343],[13342,13342]]],[1548159752887,["gjx16@GJXAIOU",[[-1,13342,"\n"]],[13342,13342],[13341,13341]]],[1548159753064,["gjx16@GJXAIOU",[[-1,13341,"\n"]],[13341,13341],[13340,13340]]],[1548159753226,["gjx16@GJXAIOU",[[-1,13340,"\n"]],[13340,13340],[13339,13339]]],[1548159753402,["gjx16@GJXAIOU",[[-1,13339,"\n"]],[13339,13339],[13338,13338]]],[1548159753590,["gjx16@GJXAIOU",[[-1,13338,"\n"]],[13338,13338],[13337,13337]]],[1548159753778,["gjx16@GJXAIOU",[[-1,13337,"\n"]],[13337,13337],[13336,13336]]],[1548159754038,["gjx16@GJXAIOU",[[-1,13336,"\n"]],[13336,13336],[13335,13335]]],[1548159754212,["gjx16@GJXAIOU",[[-1,13335,"\n"]],[13335,13335],[13334,13334]]],[1548159754417,["gjx16@GJXAIOU",[[-1,13334,"\n"]],[13334,13334],[13333,13333]]],[1548159754606,["gjx16@GJXAIOU",[[-1,13333,"\n"]],[13333,13333],[13332,13332]]],[1548159754773,["gjx16@GJXAIOU",[[-1,13332,"\n"]],[13332,13332],[13331,13331]]],[1548159754937,["gjx16@GJXAIOU",[[-1,13331,"\n"]],[13331,13331],[13330,13330]]],[1548159755123,["gjx16@GJXAIOU",[[-1,13330,"\n"]],[13330,13330],[13329,13329]]],[1548159755294,["gjx16@GJXAIOU",[[-1,13329,"\n"]],[13329,13329],[13328,13328]]],[1548159755461,["gjx16@GJXAIOU",[[-1,13328,"\n"]],[13328,13328],[13327,13327]]],[1548159755732,["gjx16@GJXAIOU",[[-1,13327,"\n"]],[13327,13327],[13326,13326]]],[1548159756085,["gjx16@GJXAIOU",[[-1,13326,"\n"]],[13326,13326],[13325,13325]]],[1548159756302,["gjx16@GJXAIOU",[[-1,13325,"\n"]],[13325,13325],[13324,13324]]],[1548159756495,["gjx16@GJXAIOU",[[-1,13324,"\n"]],[13324,13324],[13323,13323]]],[1548159756685,["gjx16@GJXAIOU",[[-1,13323,"\n"]],[13323,13323],[13322,13322]]],[1548159756912,["gjx16@GJXAIOU",[[-1,13322,"\n"]],[13322,13322],[13321,13321]]],[1548159757116,["gjx16@GJXAIOU",[[-1,13321,"\n"]],[13321,13321],[13320,13320]]],[1548159757310,["gjx16@GJXAIOU",[[-1,13320,"\n"]],[13320,13320],[13319,13319]]],[1548159757540,["gjx16@GJXAIOU",[[-1,13319,"\n"]],[13319,13319],[13318,13318]]],[1548159757754,["gjx16@GJXAIOU",[[-1,13318,"\n"]],[13318,13318],[13317,13317]]],[1548159757908,["gjx16@GJXAIOU",[[-1,13317,"\n"]],[13317,13317],[13316,13316]]],[1548159758141,["gjx16@GJXAIOU",[[-1,13316,"\n"]],[13316,13316],[13315,13315]]],[1548159758320,["gjx16@GJXAIOU",[[-1,13315,"\n"]],[13315,13315],[13314,13314]]],[1548159758459,["gjx16@GJXAIOU",[[-1,13314,"\n"]],[13314,13314],[13313,13313]]],[1548159758593,["gjx16@GJXAIOU",[[-1,13313,"\n"]],[13313,13313],[13312,13312]]],[1548159758725,["gjx16@GJXAIOU",[[-1,13312,"\n"]],[13312,13312],[13311,13311]]],[1548159758884,["gjx16@GJXAIOU",[[-1,13311,"\n"]],[13311,13311],[13310,13310]]],[1548159759024,["gjx16@GJXAIOU",[[-1,13310,"\n"]],[13310,13310],[13309,13309]]],[1548159759165,["gjx16@GJXAIOU",[[-1,13309,"\n"]],[13309,13309],[13308,13308]]],[1548159759313,["gjx16@GJXAIOU",[[-1,13308,"\n"]],[13308,13308],[13307,13307]]],[1548159759482,["gjx16@GJXAIOU",[[-1,13307,"\n"]],[13307,13307],[13306,13306]]],[1548159759623,["gjx16@GJXAIOU",[[-1,13306,"\n"]],[13306,13306],[13305,13305]]],[1548159760552,["gjx16@GJXAIOU",[[-1,13305,"\n"]],[13305,13305],[13304,13304]]],[1548159760676,["gjx16@GJXAIOU",[[-1,13304,"\n"]],[13304,13304],[13303,13303]]],[1548159760806,["gjx16@GJXAIOU",[[-1,13303,"\n"]],[13303,13303],[13302,13302]]],[1548159760931,["gjx16@GJXAIOU",[[-1,13302,"\n"]],[13302,13302],[13301,13301]]],[1548159761060,["gjx16@GJXAIOU",[[-1,13301,"\n"]],[13301,13301],[13300,13300]]],[1548159761197,["gjx16@GJXAIOU",[[-1,13300,"\n"]],[13300,13300],[13299,13299]]],[1548159761324,["gjx16@GJXAIOU",[[-1,13299,"\n"]],[13299,13299],[13298,13298]]],[1548159761456,["gjx16@GJXAIOU",[[-1,13298,"\n"]],[13298,13298],[13297,13297]]],[1548159761600,["gjx16@GJXAIOU",[[-1,13297,"\n"]],[13297,13297],[13296,13296]]],[1548159761731,["gjx16@GJXAIOU",[[-1,13296,"\n"]],[13296,13296],[13295,13295]]],[1548159761858,["gjx16@GJXAIOU",[[-1,13295,"\n"]],[13295,13295],[13294,13294]]],[1548159762047,["gjx16@GJXAIOU",[[-1,13294,"\n"]],[13294,13294],[13293,13293]]],[1548159762188,["gjx16@GJXAIOU",[[-1,13293,"\n"]],[13293,13293],[13292,13292]]],[1548159762311,["gjx16@GJXAIOU",[[-1,13292,"\n"]],[13292,13292],[13291,13291]]],[1548159762451,["gjx16@GJXAIOU",[[-1,13291,"\n"]],[13291,13291],[13290,13290]]],[1548159762582,["gjx16@GJXAIOU",[[-1,13290,"\n"]],[13290,13290],[13289,13289]]],[1548159762705,["gjx16@GJXAIOU",[[-1,13289,"\n"]],[13289,13289],[13288,13288]]],[1548159762839,["gjx16@GJXAIOU",[[-1,13288,"\n"]],[13288,13288],[13287,13287]]],[1548159762969,["gjx16@GJXAIOU",[[-1,13287,"\n"]],[13287,13287],[13286,13286]]],[1548159763092,["gjx16@GJXAIOU",[[-1,13286,"\n"]],[13286,13286],[13285,13285]]],[1548159763220,["gjx16@GJXAIOU",[[-1,13285,"\n"]],[13285,13285],[13284,13284]]],[1548159763365,["gjx16@GJXAIOU",[[-1,13284,"\n"]],[13284,13284],[13283,13283]]],[1548159763509,["gjx16@GJXAIOU",[[-1,13283,"\n"]],[13283,13283],[13282,13282]]],[1548159763689,["gjx16@GJXAIOU",[[-1,13282,"\n"]],[13282,13282],[13281,13281]]],[1548159763811,["gjx16@GJXAIOU",[[-1,13281,"\n"]],[13281,13281],[13280,13280]]],[1548159763929,["gjx16@GJXAIOU",[[-1,13280,"\n"]],[13280,13280],[13279,13279]]],[1548159764083,["gjx16@GJXAIOU",[[-1,13279,"\n"]],[13279,13279],[13278,13278]]],[1548159764199,["gjx16@GJXAIOU",[[-1,13278,"\n"]],[13278,13278],[13277,13277]]],[1548159764313,["gjx16@GJXAIOU",[[-1,13277,"\n"]],[13277,13277],[13276,13276]]],[1548159764441,["gjx16@GJXAIOU",[[-1,13276,"\n"]],[13276,13276],[13275,13275]]],[1548159764560,["gjx16@GJXAIOU",[[-1,13275,"\n"]],[13275,13275],[13274,13274]]],[1548159764678,["gjx16@GJXAIOU",[[-1,13274,"\n"]],[13274,13274],[13273,13273]]],[1548159764804,["gjx16@GJXAIOU",[[-1,13273,"\n"]],[13273,13273],[13272,13272]]],[1548159764928,["gjx16@GJXAIOU",[[-1,13272,"\n"]],[13272,13272],[13271,13271]]],[1548159765053,["gjx16@GJXAIOU",[[-1,13271,"\n"]],[13271,13271],[13270,13270]]],[1548159765223,["gjx16@GJXAIOU",[[-1,13270,"\n"]],[13270,13270],[13269,13269]]],[1548159765380,["gjx16@GJXAIOU",[[-1,13269,"\n"]],[13269,13269],[13268,13268]]],[1548159765507,["gjx16@GJXAIOU",[[-1,13268,"\n"]],[13268,13268],[13267,13267]]],[1548159765623,["gjx16@GJXAIOU",[[-1,13267,"\n"]],[13267,13267],[13266,13266]]],[1548159765761,["gjx16@GJXAIOU",[[-1,13266,"\n"]],[13266,13266],[13265,13265]]],[1548159765888,["gjx16@GJXAIOU",[[-1,13265,"\n"]],[13265,13265],[13264,13264]]],[1548159766004,["gjx16@GJXAIOU",[[-1,13264,"\n"]],[13264,13264],[13263,13263]]],[1548159766137,["gjx16@GJXAIOU",[[-1,13263,"\n"]],[13263,13263],[13262,13262]]],[1548159766263,["gjx16@GJXAIOU",[[-1,13262,"\n"]],[13262,13262],[13261,13261]]],[1548159766387,["gjx16@GJXAIOU",[[-1,13261,"\n"]],[13261,13261],[13260,13260]]],[1548159766519,["gjx16@GJXAIOU",[[-1,13260,"\n"]],[13260,13260],[13259,13259]]],[1548159766678,["gjx16@GJXAIOU",[[-1,13259,"\n"]],[13259,13259],[13258,13258]]],[1548159766802,["gjx16@GJXAIOU",[[-1,13258,"\n"]],[13258,13258],[13257,13257]]],[1548159766944,["gjx16@GJXAIOU",[[-1,13257,"\n"]],[13257,13257],[13256,13256]]],[1548159767059,["gjx16@GJXAIOU",[[-1,13256,"\n"]],[13256,13256],[13255,13255]]],[1548159767176,["gjx16@GJXAIOU",[[-1,13255,"\n"]],[13255,13255],[13254,13254]]],[1548159767302,["gjx16@GJXAIOU",[[-1,13254,"\n"]],[13254,13254],[13253,13253]]],[1548159767499,["gjx16@GJXAIOU",[[-1,13253,"\n"]],[13253,13253],[13252,13252]]],[1548159767651,["gjx16@GJXAIOU",[[-1,13252,"\n"]],[13252,13252],[13251,13251]]],[1548159767778,["gjx16@GJXAIOU",[[-1,13251,"\n"]],[13251,13251],[13250,13250]]],[1548159767916,["gjx16@GJXAIOU",[[-1,13250,"\n"]],[13250,13250],[13249,13249]]],[1548159770835,["gjx16@GJXAIOU",[[-1,13249,"\n"]],[13241,13241],[13240,13240]]],[1548159771062,["gjx16@GJXAIOU",[[-1,13248,"\n"]],[13240,13240],[13239,13239]]],[1548159771436,["gjx16@GJXAIOU",[[-1,13247,"\n"]],[13239,13239],[13238,13238]]],[1548159771576,["gjx16@GJXAIOU",[[-1,13246,"\n"]],[13238,13238],[13237,13237]]],[1548159771744,["gjx16@GJXAIOU",[[-1,13245,"\n"]],[13237,13237],[13236,13236]]],[1548159771879,["gjx16@GJXAIOU",[[-1,13244,"\n"]],[13236,13236],[13235,13235]]],[1548159772013,["gjx16@GJXAIOU",[[-1,13243,"\n"]],[13235,13235],[13234,13234]]],[1548159772152,["gjx16@GJXAIOU",[[-1,13242,"\n"]],[13234,13234],[13233,13233]]],[1548159772436,["gjx16@GJXAIOU",[[-1,13241,"\n"]],[13233,13233],[13232,13232]]],[1548159772584,["gjx16@GJXAIOU",[[-1,13240,"\n"]],[13232,13232],[13231,13231]]],[1548159772710,["gjx16@GJXAIOU",[[-1,13239,"\n"]],[13231,13231],[13230,13230]]],[1548159772836,["gjx16@GJXAIOU",[[-1,13238,"\n"]],[13230,13230],[13229,13229]]],[1548159772977,["gjx16@GJXAIOU",[[-1,13237,"\n"]],[13229,13229],[13228,13228]]],[1548159773136,["gjx16@GJXAIOU",[[-1,13236,"\n"]],[13228,13228],[13227,13227]]],[1548159773263,["gjx16@GJXAIOU",[[-1,13235,"\n"]],[13227,13227],[13226,13226]]],[1548159773397,["gjx16@GJXAIOU",[[-1,13234,"\n"]],[13226,13226],[13225,13225]]],[1548159773518,["gjx16@GJXAIOU",[[-1,13233,"\n"]],[13225,13225],[13224,13224]]],[1548159773633,["gjx16@GJXAIOU",[[-1,13232,"\n"]],[13224,13224],[13223,13223]]],[1548159773913,["gjx16@GJXAIOU",[[-1,13231,"\n"]],[13223,13223],[13222,13222]]],[1548159774049,["gjx16@GJXAIOU",[[-1,13230,"\n"]],[13222,13222],[13221,13221]]],[1548159774190,["gjx16@GJXAIOU",[[-1,13229,"\n"]],[13221,13221],[13220,13220]]],[1548159774319,["gjx16@GJXAIOU",[[-1,13228,"\n"]],[13220,13220],[13219,13219]]],[1548159777346,["gjx16@GJXAIOU",[[-1,13227,"\n"]],[13219,13219],[13218,13218]]],[1548159777520,["gjx16@GJXAIOU",[[-1,13226,"\n"]],[13218,13218],[13217,13217]]],[1548159777713,["gjx16@GJXAIOU",[[-1,13225,"\n"]],[13217,13217],[13216,13216]]],[1548159777889,["gjx16@GJXAIOU",[[-1,13224,"\n"]],[13216,13216],[13215,13215]]],[1548159778053,["gjx16@GJXAIOU",[[-1,13223,"\n"]],[13215,13215],[13214,13214]]],[1548159778244,["gjx16@GJXAIOU",[[-1,13222,"\n"]],[13214,13214],[13213,13213]]],[1548159778387,["gjx16@GJXAIOU",[[-1,13221,"\n"]],[13213,13213],[13212,13212]]],[1548159778559,["gjx16@GJXAIOU",[[-1,13220,"\n"]],[13212,13212],[13211,13211]]],[1548159778746,["gjx16@GJXAIOU",[[-1,13219,"\n"]],[13211,13211],[13210,13210]]],[1548159778878,["gjx16@GJXAIOU",[[-1,13218,"\n"]],[13210,13210],[13209,13209]]],[1548159779128,["gjx16@GJXAIOU",[[-1,13217,"\n"]],[13209,13209],[13208,13208]]],[1548159779262,["gjx16@GJXAIOU",[[-1,13216,"\n"]],[13208,13208],[13207,13207]]],[1548159779398,["gjx16@GJXAIOU",[[-1,13215,"\n"]],[13207,13207],[13206,13206]]],[1548159779529,["gjx16@GJXAIOU",[[-1,13214,"\n"]],[13206,13206],[13205,13205]]],[1548159779755,["gjx16@GJXAIOU",[[-1,13213,"\n"]],[13205,13205],[13204,13204]]],[1548159779870,["gjx16@GJXAIOU",[[-1,13212,"\n"]],[13204,13204],[13203,13203]]],[1548159779998,["gjx16@GJXAIOU",[[-1,13211,"\n"]],[13203,13203],[13202,13202]]],[1548159780144,["gjx16@GJXAIOU",[[-1,13210,"\n"]],[13202,13202],[13201,13201]]],[1548159780494,["gjx16@GJXAIOU",[[-1,13209,"\n"]],[13201,13201],[13200,13200]]],[1548159780629,["gjx16@GJXAIOU",[[-1,13208,"\n"]],[13200,13200],[13199,13199]]],[1548159780813,["gjx16@GJXAIOU",[[-1,13207,"\n"]],[13199,13199],[13198,13198]]],[1548159780942,["gjx16@GJXAIOU",[[-1,13206,"\n"]],[13198,13198],[13197,13197]]],[1548159781061,["gjx16@GJXAIOU",[[-1,13205,"\n"]],[13197,13197],[13196,13196]]],[1548159781217,["gjx16@GJXAIOU",[[-1,13204,"\n"]],[13196,13196],[13195,13195]]],[1548159781545,["gjx16@GJXAIOU",[[-1,13203,"\n"]],[13195,13195],[13194,13194]]],[1548159781675,["gjx16@GJXAIOU",[[-1,13202,"\n"]],[13194,13194],[13193,13193]]],[1548159781789,["gjx16@GJXAIOU",[[-1,13201,"\n"]],[13193,13193],[13192,13192]]],[1548159781906,["gjx16@GJXAIOU",[[-1,13200,"\n"]],[13192,13192],[13191,13191]]],[1548159782048,["gjx16@GJXAIOU",[[-1,13199,"\n"]],[13191,13191],[13190,13190]]],[1548159782167,["gjx16@GJXAIOU",[[-1,13198,"\n"]],[13190,13190],[13189,13189]]],[1548159782528,["gjx16@GJXAIOU",[[-1,13197,"\n"]],[13189,13189],[13188,13188]]],[1548159785514,["gjx16@GJXAIOU",[[-1,13197,"```"]],[13197,13200],[13197,13197]]],[1548159791089,["gjx16@GJXAIOU",[[1,13087,"```"]],[13087,13087],[13090,13090]]]],null,"gjx16@GJXAIOU"]]}