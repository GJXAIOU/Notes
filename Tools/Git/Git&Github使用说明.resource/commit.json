{"compress":true,"commitItems":[["51b1943f-cf3c-4e8a-a4b2-d3c38b05057e",1551182219230,"",[[1551182159942,["gjx16@GJXAIOU",[[1,0,"# Git\n\n\n\n"]],[0,0],[8,8]]],[1551182315882,["gjx16@GJXAIOU",[[1,7,"、"]],[7,7],[8,8]]],[1551182315896,["gjx16@GJXAIOU",[[1,10,"\n"]],[8,8],[9,9]]],[1551182317063,["gjx16@GJXAIOU",[[-1,10,"\n"]],[9,9],[8,8]]],[1551182317174,["gjx16@GJXAIOU",[[-1,7,"、"]],[8,8],[7,7]]],[1551182321267,["gjx16@GJXAIOU",[[1,7,"@童女"]],[7,7],[10,10]]],[1551182321807,["gjx16@GJXAIOU",[[-1,8,"童女"]],[10,10],[8,8]]],[1551182323098,["gjx16@GJXAIOU",[[1,8,"toc"]],[8,8],[11,11]]],[1551182326220,["gjx16@GJXAIOU",[[1,6,"---"]],[6,6],[9,9]]],[1551182326743,["gjx16@GJXAIOU",[[1,10,"\n"]],[9,9],[10,10]]],[1551182328122,["gjx16@GJXAIOU",[[1,11,"\n"]],[10,10],[11,11]]],[1551182328696,["gjx16@GJXAIOU",[[1,11,"---"]],[11,11],[14,14]]],[1551182332378,["gjx16@GJXAIOU",[[1,15,"\n"]],[14,14],[15,15]]],[1551182337742,["gjx16@GJXAIOU",[[-1,0,"# Git"]],[5,5],[0,0]]],[1551182341118,["gjx16@GJXAIOU",[[-1,6,"---"]],[9,9],[6,6]]],[1551182341270,["gjx16@GJXAIOU",[[-1,7,"\n"]],[6,6],[5,5]]],[1551182344375,["gjx16@GJXAIOU",[[1,0,"Ti"]],[0,0],[2,2]]],[1551182345186,["gjx16@GJXAIOU",[[-1,1,"i"]],[2,2],[1,1]]],[1551182351116,["gjx16@GJXAIOU",[[1,1,"ime:209-"]],[1,1],[9,9]]],[1551182352189,["gjx16@GJXAIOU",[[-1,7,"9-"]],[9,9],[7,7]]],[1551182368188,["gjx16@GJXAIOU",[[1,7,"19-2-26"]],[7,7],[14,14]]],[1551182370578,["gjx16@GJXAIOU",[[1,15,"\n"]],[14,14],[15,15]]],[1551182376826,["gjx16@GJXAIOU",[[1,5,"`"]],[5,5],[6,6]]],[1551182378624,["gjx16@GJXAIOU",[[1,15,"`"]],[15,15],[16,16]]],[1551182380039,["gjx16@GJXAIOU",[[1,18,"\n"]],[16,16],[17,17]]],[1551182389048,["gjx16@GJXAIOU",[[1,17,"Theme: Git shi"]],[17,17],[31,31]]],[1551182389873,["gjx16@GJXAIOU",[[-1,27," shi"]],[31,31],[27,27]]],[1551182393566,["gjx16@GJXAIOU",[[1,27,"使用说明"]],[27,27],[31,31]]],[1551182394711,["gjx16@GJXAIOU",[[1,33,"\n"]],[31,31],[32,32]]],[1551182399103,["gjx16@GJXAIOU",[[-1,33,"\n"]],[33,33],[32,32]]],[1551182399238,["gjx16@GJXAIOU",[[-1,32,"\n"]],[32,32],[31,31]]],[1551182401663,["gjx16@GJXAIOU",[[1,32,"\n"]],[31,31],[32,32]]],[1551182410829,["gjx16@GJXAIOU",[[1,37,"# Git使用说明"]],[37,37],[46,46]]],[1551182413727,["gjx16@GJXAIOU",[[1,54,"\n"]],[53,53],[54,54]]],[1551182413831,["gjx16@GJXAIOU",[[1,55,"\n"]],[54,54],[55,55]]],[1551182414385,["gjx16@GJXAIOU",[[-1,55,"\n"],[1,56,"#"]],[55,55],[56,56]]],[1551182414924,["gjx16@GJXAIOU",[[1,56," "]],[56,56],[57,57]]],[1551182415582,["gjx16@GJXAIOU",[[-1,56," "]],[57,57],[56,56]]],[1551182422849,["gjx16@GJXAIOU",[[1,56,"# 一、下载暗转"]],[56,56],[64,64]]],[1551182423366,["gjx16@GJXAIOU",[[-1,62,"暗转"]],[64,64],[62,62]]],[1551182425456,["gjx16@GJXAIOU",[[1,62,"安装"]],[62,62],[64,64]]],[1551182425843,["gjx16@GJXAIOU",[[1,64,"\n\n"]],[64,64],[65,65]]],[1551182426142,["gjx16@GJXAIOU",[[1,66,"\n"]],[65,65],[66,66]]],[1551182797549,["gjx16@GJXAIOU",[[1,67,"\n"]],[65,65],[66,66]]],[1551182798818,["gjx16@GJXAIOU",[[1,66,"首先在本地安装git，地址：[https://git-scm.com/downloads](https://git-scm.com/downloads)。下载安装好git工具。"]],[66,66],[154,154]]],[1551182877070,["gjx16@GJXAIOU",[[1,156,"\n"]],[154,154],[155,155]]],[1551182877206,["gjx16@GJXAIOU",[[1,157,"\n"]],[155,155],[156,156]]],[1551182877351,["gjx16@GJXAIOU",[[1,158,"\n"]],[156,156],[157,157]]],[1551182879958,["gjx16@GJXAIOU",[[1,157,"#"]],[157,157],[158,158]]],[1551182882629,["gjx16@GJXAIOU",[[1,158,"# 片"]],[158,158],[161,161]]],[1551182884271,["gjx16@GJXAIOU",[[-1,160,"片"]],[161,161],[160,160]]],[1551182887517,["gjx16@GJXAIOU",[[1,160,"配置Git"]],[160,160],[165,165]]],[1551182898858,["gjx16@GJXAIOU",[[1,66,"1."]],[66,66],[68,68]]],[1551182902138,["gjx16@GJXAIOU",[[1,159,"\n"]],[156,156],[157,157]]],[1551182904351,["gjx16@GJXAIOU",[[1,160,"\n"]],[157,157],[158,158]]],[1551182935056,["gjx16@GJXAIOU",[[1,158,"2.an"]],[158,158],[162,162]]],[1551182935623,["gjx16@GJXAIOU",[[-1,160,"an"]],[162,162],[160,160]]],[1551182939656,["gjx16@GJXAIOU",[[1,160,"安装好Git "]],[160,160],[167,167]]],[1551182961932,["gjx16@GJXAIOU",[[1,167,"之后，两个快捷方式：GIT"]],[167,167],[180,180]]],[1551182962536,["gjx16@GJXAIOU",[[-1,178,"IT"]],[180,180],[178,178]]],[1551182963250,["gjx16@GJXAIOU",[[1,178,"it"]],[178,178],[180,180]]],[1551183048003,["gjx16@GJXAIOU",[[1,180," Bash   ：这是命令行模式（）"]],[180,180],[198,198]]],[1551183056439,["gjx16@GJXAIOU",[[1,197,"类似LinUC"]],[197,197],[204,204]]],[1551183057626,["gjx16@GJXAIOU",[[-1,202,"UC"]],[204,204],[202,202]]],[1551183059852,["gjx16@GJXAIOU",[[1,202,"ux"]],[202,202],[204,204]]],[1551183065793,["gjx16@GJXAIOU",[[1,177,"\n"]],[177,177],[178,178]]],[1551183066299,["gjx16@GJXAIOU",[[1,178,"- "]],[178,178],[180,180]]],[1551183140522,["gjx16@GJXAIOU",[[1,209,"- Git UI      ：这是有界面的模式"]],[209,209],[232,232]]],[1551183146287,["gjx16@GJXAIOU",[[1,234,"\n"]],[233,233],[234,234]]],[1551183148679,["gjx16@GJXAIOU",[[1,245,"\n"]],[244,244],[245,245]]],[1551183149473,["gjx16@GJXAIOU",[[-1,245,"\n"],[1,246,"1"]],[245,245],[246,246]]],[1551183157992,["gjx16@GJXAIOU",[[1,246,".打开Git Bash :"]],[246,246],[259,259]]],[1551183185859,["gjx16@GJXAIOU",[[1,245,"\n"]],[244,244],[245,245]]],[1551183188048,["gjx16@GJXAIOU",[[1,246,"\n"]],[244,244],[245,245]]],[1551183189392,["gjx16@GJXAIOU",[[1,245,"shuom"]],[245,245],[250,250]]],[1551183190759,["gjx16@GJXAIOU",[[-1,245,"shuom"]],[250,250],[245,245]]],[1551183208849,["gjx16@GJXAIOU",[[1,245,"说明：默认文件地址为：E:/"]],[245,245],[259,259]]],[1551183209686,["gjx16@GJXAIOU",[[-1,258,"/"]],[259,259],[258,258]]],[1551183235691,["gjx16@GJXAIOU",[[1,258,"\\Program\\Githu"]],[258,258],[272,272]]],[1551183236529,["gjx16@GJXAIOU",[[-1,270,"hu"]],[272,272],[270,270]]],[1551183239600,["gjx16@GJXAIOU",[[1,270,"Hub\\"]],[270,270],[274,274]]],[1551183252626,["gjx16@GJXAIOU",[[1,274,"Git"]],[274,274],[277,277]]],[1551183253579,["gjx16@GJXAIOU",[[-1,274,"Git"]],[277,277],[274,274]]],[1551183266207,["gjx16@GJXAIOU",[[1,290,"jin"]],[290,290],[293,293]]],[1551183267023,["gjx16@GJXAIOU",[[-1,290,"jin"]],[293,293],[290,290]]],[1551183272922,["gjx16@GJXAIOU",[[1,290,"进入上文"]],[290,290],[294,294]]],[1551183273598,["gjx16@GJXAIOU",[[-1,292,"上文"]],[294,294],[292,292]]],[1551183288490,["gjx16@GJXAIOU",[[1,292,"上面文件目录下；（）"]],[292,292],[302,302]]],[1551183295318,["gjx16@GJXAIOU",[[1,301,"或者在文件资源期"]],[301,301],[309,309]]],[1551183296703,["gjx16@GJXAIOU",[[-1,308,"期"]],[309,309],[308,308]]],[1551183299786,["gjx16@GJXAIOU",[[1,308,"器"]],[308,308],[309,309]]],[1551183314708,["gjx16@GJXAIOU",[[1,309,"中进入该目录，然后右键：GitBash"]],[309,309],[328,328]]],[1551183316926,["gjx16@GJXAIOU",[[1,324," "]],[324,324],[325,325]]],[1551183321742,["gjx16@GJXAIOU",[[1,329," Here"]],[329,329],[334,334]]],[1551183461467,["gjx16@GJXAIOU",[[1,335,"\n\n"]],[335,335],[336,336]]],[1551183462842,["gjx16@GJXAIOU",[[-1,336,"\n"],[1,337,"2"]],[336,336],[337,337]]],[1551183469862,["gjx16@GJXAIOU",[[1,337,".输入：``"]],[337,337],[343,343]]],[1551183480735,["gjx16@GJXAIOU",[[1,342,"git config --global user.name '用户名'"]],[342,342],[377,377]]],[1551183486552,["gjx16@GJXAIOU",[[1,373,"GitHub"]],[373,373],[379,379]]],[1551183489755,["gjx16@GJXAIOU",[[1,243,"()"]],[243,243],[245,245]]],[1551183491351,["gjx16@GJXAIOU",[[1,244,"lain"]],[244,244],[248,248]]],[1551183492710,["gjx16@GJXAIOU",[[-1,244,"lain"]],[248,248],[244,244]]],[1551183500424,["gjx16@GJXAIOU",[[1,244,"连接到GitHub"]],[244,244],[253,253]]],[1551183508318,["gjx16@GJXAIOU",[[1,347,"\n"]],[347,347],[348,348]]],[1551183511727,["gjx16@GJXAIOU",[[1,396,"\n\n"]],[396,396],[397,397]]],[1551183512303,["gjx16@GJXAIOU",[[1,398,"\n"]],[397,397],[398,398]]],[1551183513744,["gjx16@GJXAIOU",[[-1,398,"\n"],[1,399,"3"]],[398,398],[399,399]]],[1551183517910,["gjx16@GJXAIOU",[[1,399,".输入：``"]],[399,399],[405,405]]],[1551183525095,["gjx16@GJXAIOU",[[1,404,"git config --global user.email '邮箱'"]],[404,404],[439,439]]],[1551183527880,["gjx16@GJXAIOU",[[1,436,"Gith"]],[436,436],[440,440]]],[1551183528399,["gjx16@GJXAIOU",[[-1,439,"h"]],[440,440],[439,439]]],[1551183529336,["gjx16@GJXAIOU",[[1,439,"Hub"]],[439,439],[442,442]]],[1551183551794,["gjx16@GJXAIOU",[[1,446,"\n\n"]],[446,446],[447,447]]],[1551183551926,["gjx16@GJXAIOU",[[1,448,"\n"]],[447,447],[448,448]]],[1551183554080,["gjx16@GJXAIOU",[[-1,448,"\n"],[1,449,"4"]],[448,448],[449,449]]],[1551183555776,["gjx16@GJXAIOU",[[1,449,".jiang="]],[449,449],[456,456]]],[1551183557087,["gjx16@GJXAIOU",[[-1,450,"jiang="]],[456,456],[450,450]]],[1551183572337,["gjx16@GJXAIOU",[[1,450,"将GitHub上已有的仓库下载到本地（）"]],[450,450],[470,470]]],[1551183576154,["gjx16@GJXAIOU",[[1,469,"这样可以砸"]],[469,469],[474,474]]],[1551183577825,["gjx16@GJXAIOU",[[-1,473,"砸"]],[474,474],[473,473]]],[1551183581864,["gjx16@GJXAIOU",[[1,473,"在本地编辑"]],[473,473],[478,478]]],[1551183583506,["gjx16@GJXAIOU",[[1,479,"\n\n"]],[479,479],[480,480]]],[1551183585330,["gjx16@GJXAIOU",[[-1,480,"\n"],[1,481,"-"]],[480,480],[481,481]]],[1551183585506,["gjx16@GJXAIOU",[[1,481," "]],[481,481],[482,482]]],[1551184450041,["gjx16@GJXAIOU",[[1,287,"\n"]],[285,285],[286,286]]],[1551184455099,["gjx16@GJXAIOU",[[1,286,"距离"]],[286,286],[288,288]]],[1551184456516,["gjx16@GJXAIOU",[[-1,286,"距离"]],[288,288],[286,286]]],[1551184479067,["gjx16@GJXAIOU",[[1,286,"         GitHub上库：Notes"]],[286,286],[309,309]]],[1551184483523,["gjx16@GJXAIOU",[[1,302,"的"]],[302,302],[303,303]]],[1551184485540,["gjx16@GJXAIOU",[[1,304,"为"]],[304,304],[305,305]]],[1551184499950,["gjx16@GJXAIOU",[[1,508,"进入"]],[508,508],[510,510]]],[1551184526828,["gjx16@GJXAIOU",[[1,510,"GitHub中所要同步的库页面，选择：``"]],[510,510],[531,531]]],[1551184532909,["gjx16@GJXAIOU",[[1,530,"clone or df"]],[530,530],[541,541]]],[1551184533912,["gjx16@GJXAIOU",[[-1,540,"f"]],[541,541],[540,540]]],[1551184537505,["gjx16@GJXAIOU",[[1,540,"ownload"]],[540,540],[547,547]]],[1551184551556,["gjx16@GJXAIOU",[[1,548,"，然后将URL赋值"]],[548,548],[557,557]]],[1551184552415,["gjx16@GJXAIOU",[[-1,555,"赋值"]],[557,557],[555,555]]],[1551184558290,["gjx16@GJXAIOU",[[1,555,"复制下来："]],[555,555],[560,560]]],[1551184578475,["gjx16@GJXAIOU",[[1,560,"本人为：https://github.com/GJXAIOU/Notes.git·"]],[560,560],[601,601]]],[1551184579336,["gjx16@GJXAIOU",[[-1,600,"·"]],[601,601],[600,600]]],[1551184579594,["gjx16@GJXAIOU",[[1,600,"\n\n"]],[600,600],[601,601]]],[1551184579733,["gjx16@GJXAIOU",[[-1,601,"\n"],[1,602,"·"]],[601,601],[602,602]]],[1551184581073,["gjx16@GJXAIOU",[[-1,601,"·"],[1,602,"\n"]],[602,602],[601,601]]],[1551184583088,["gjx16@GJXAIOU",[[-1,601,"\n"]],[601,601],[600,600]]],[1551184584093,["gjx16@GJXAIOU",[[1,600,"`"]],[600,600],[601,601]]],[1551184587192,["gjx16@GJXAIOU",[[1,564,"`"]],[564,564],[565,565]]],[1551184602674,["gjx16@GJXAIOU",[[1,603,"- \n"]],[602,602],[605,605]]],[1551184604515,["gjx16@GJXAIOU",[[-1,603,"- "]],[605,605],[603,603]]],[1551184739862,["gjx16@GJXAIOU",[[1,603,"![URL]($resource/URL.jpg)\n"]],[603,603],[629,629]]],[1551184745327,["gjx16@GJXAIOU",[[1,630,"\n"]],[629,629],[630,630]]],[1551184839336,["gjx16@GJXAIOU",[[1,631,"\n"]],[628,628],[629,629]]],[1551184840697,["gjx16@GJXAIOU",[[1,632,"\n"]],[629,629],[630,630]]],[1551184845583,["gjx16@GJXAIOU",[[1,630,"- zai"]],[630,630],[635,635]]],[1551184846382,["gjx16@GJXAIOU",[[-1,632,"zai"]],[635,635],[632,632]]],[1551184851270,["gjx16@GJXAIOU",[[1,632,"在GitBash"]],[632,632],[640,640]]],[1551184854112,["gjx16@GJXAIOU",[[1,636," "]],[636,636],[637,637]]],[1551184859718,["gjx16@GJXAIOU",[[1,641," 中首先将"]],[641,641],[646,646]]],[1551184887315,["gjx16@GJXAIOU",[[1,646,"目录切换到想要保存该库的目录下：然后输入"]],[646,646],[666,666]]],[1551184887747,["gjx16@GJXAIOU",[[1,667,"- \n"]],[666,666],[669,669]]],[1551184889030,["gjx16@GJXAIOU",[[-1,667,"- "]],[669,669],[667,667]]],[1551184890432,["gjx16@GJXAIOU",[[1,667,"``"]],[667,667],[669,669]]],[1551184900681,["gjx16@GJXAIOU",[[1,668,"git clone \n\n       https://github.com/用户名/仓库名.git"]],[668,668],[717,717]]],[1551184904467,["gjx16@GJXAIOU",[[-1,680,"       "]],[687,687],[680,680]]],[1551184904657,["gjx16@GJXAIOU",[[-1,679,"\n"]],[680,680],[679,679]]],[1551184904843,["gjx16@GJXAIOU",[[-1,678,"\n"]],[679,679],[678,678]]],[1551184913234,["gjx16@GJXAIOU",[[-1,697,"用户名"]],[700,700],[697,697]]],[1551184915939,["gjx16@GJXAIOU",[[-1,677," "],[1,678," "],[1,697,"GJXAIOU"]],[697,697],[704,704]]],[1551184919407,["gjx16@GJXAIOU",[[-1,705,"仓库名"]],[708,708],[705,705]]],[1551184923320,["gjx16@GJXAIOU",[[1,705,"Notes"]],[705,705],[710,710]]],[1551184926994,["gjx16@GJXAIOU",[[1,715," ()"]],[715,715],[718,718]]],[1551184928828,["gjx16@GJXAIOU",[[1,717,"hou"]],[717,717],[720,720]]],[1551184929455,["gjx16@GJXAIOU",[[-1,717,"hou"]],[720,720],[717,717]]],[1551184938946,["gjx16@GJXAIOU",[[1,717,"后面的网址就是刚才赋值的"]],[717,717],[729,729]]],[1551184939664,["gjx16@GJXAIOU",[[-1,726,"赋值的"]],[729,729],[726,726]]],[1551184943131,["gjx16@GJXAIOU",[[1,726,"复制的"]],[726,726],[729,729]]],[1551184977436,["gjx16@GJXAIOU",[[1,733,"\n"]],[731,731],[732,732]]],[1551184977581,["gjx16@GJXAIOU",[[1,734,"\n"]],[732,732],[733,733]]],[1551184978782,["gjx16@GJXAIOU",[[1,733,"- "]],[733,733],[735,735]]],[1551184988068,["gjx16@GJXAIOU",[[1,735,"将本地文件"]],[735,735],[740,740]]],[1551184990551,["gjx16@GJXAIOU",[[-1,735,"将本地文件"]],[740,740],[735,735]]],[1551185003523,["gjx16@GJXAIOU",[[1,735,"连接本地仓库与GitHub："]],[735,735],[749,749]]],[1551185010435,["gjx16@GJXAIOU",[[1,256,"\n"]],[255,255],[256,256]]],[1551185011204,["gjx16@GJXAIOU",[[1,257,"\n"]],[256,256],[257,257]]],[1551185016580,["gjx16@GJXAIOU",[[1,256,"### 1."]],[256,256],[262,262]]],[1551185020388,["gjx16@GJXAIOU",[[1,238,"二、"]],[238,238],[240,240]]],[1551185022891,["gjx16@GJXAIOU",[[-1,262,"1."]],[264,264],[262,262]]],[1551185025677,["gjx16@GJXAIOU",[[1,262,"（）"]],[262,262],[264,264]]],[1551185027164,["gjx16@GJXAIOU",[[1,263,"一"]],[263,263],[264,264]]],[1551185038116,["gjx16@GJXAIOU",[[1,265,"将GitHub上的库"]],[265,265],[275,275]]],[1551185048280,["gjx16@GJXAIOU",[[1,275,"科伦坡那个"]],[275,275],[280,280]]],[1551185051919,["gjx16@GJXAIOU",[[-1,274,"库科伦坡那个"]],[280,280],[274,274]]],[1551185058582,["gjx16@GJXAIOU",[[1,274,"库克隆岛"]],[274,274],[278,278]]],[1551185059154,["gjx16@GJXAIOU",[[-1,277,"岛"]],[278,278],[277,277]]],[1551185062301,["gjx16@GJXAIOU",[[1,277,"到本地"]],[277,277],[280,280]]],[1551185080486,["gjx16@GJXAIOU",[[-1,759,"- "]],[761,761],[759,759]]],[1551185087596,["gjx16@GJXAIOU",[[1,759,"### （）"]],[759,759],[765,765]]],[1551185089013,["gjx16@GJXAIOU",[[1,764,"二"]],[764,764],[765,765]]],[1551185092298,["gjx16@GJXAIOU",[[1,782,"\n"]],[780,780],[781,781]]],[1551185093071,["gjx16@GJXAIOU",[[1,783,"\n"]],[781,781],[782,782]]],[1551185097556,["gjx16@GJXAIOU",[[1,782,"1.在笨死"]],[782,782],[787,787]]],[1551185098176,["gjx16@GJXAIOU",[[-1,785,"笨死"]],[787,787],[785,785]]],[1551185103565,["gjx16@GJXAIOU",[[1,785,"本地生成FFH"]],[785,785],[792,792]]],[1551185104466,["gjx16@GJXAIOU",[[-1,789,"FFH"]],[792,792],[789,789]]],[1551185117101,["gjx16@GJXAIOU",[[1,789,"SSH Key:在"]],[789,789],[798,798]]],[1551185118785,["gjx16@GJXAIOU",[[1,796," "]],[796,796],[797,797]]],[1551185120089,["gjx16@GJXAIOU",[[1,798,"  "]],[798,798],[800,800]]],[1551185126112,["gjx16@GJXAIOU",[[1,801,"Git Bs"]],[801,801],[807,807]]],[1551185126912,["gjx16@GJXAIOU",[[-1,806,"s"]],[807,807],[806,806]]],[1551185132089,["gjx16@GJXAIOU",[[1,806,"ash中输入：``"]],[806,806],[815,815]]],[1551185139582,["gjx16@GJXAIOU",[[1,814,"ssh-keygen -t rsa -C \"邮箱\""]],[814,814],[839,839]]],[1551185144361,["gjx16@GJXAIOU",[[1,836,"GitHub"]],[836,836],[842,842]]],[1551185154144,["gjx16@GJXAIOU",[[1,846,"，接下来全部"]],[846,846],[852,852]]],[1551185156881,["gjx16@GJXAIOU",[[-1,850,"全部"]],[852,852],[850,850]]],[1551185157958,["gjx16@GJXAIOU",[[1,850,"****"]],[850,850],[852,852]]],[1551185164135,["gjx16@GJXAIOU",[[1,852,"全部回车却"]],[852,852],[857,857]]],[1551185165240,["gjx16@GJXAIOU",[[-1,856,"却"]],[857,857],[856,856]]],[1551185186153,["gjx16@GJXAIOU",[[1,858,"确认，这样在电脑C盘"]],[858,858],[868,868]]],[1551185187696,["gjx16@GJXAIOU",[[-1,866,"C盘"]],[868,868],[866,866]]],[1551185197661,["gjx16@GJXAIOU",[[1,866,"C盘用户名"]],[866,866],[871,871]]],[1551185206800,["gjx16@GJXAIOU",[[1,868,"本人"]],[868,868],[870,870]]],[1551185212571,["gjx16@GJXAIOU",[[1,873,"目录先 "]],[873,873],[877,877]]],[1551185213828,["gjx16@GJXAIOU",[[-1,875,"先 "]],[877,877],[875,875]]],[1551185216001,["gjx16@GJXAIOU",[[1,875,"下就会"]],[875,875],[878,878]]],[1551185227670,["gjx16@GJXAIOU",[[1,878,"出现一个文件：、"]],[878,878],[886,886]]],[1551185229110,["gjx16@GJXAIOU",[[-1,885,"、"]],[886,886],[885,885]]],[1551185230171,["gjx16@GJXAIOU",[[1,885,"``"]],[885,885],[887,887]]],[1551185234828,["gjx16@GJXAIOU",[[1,886,".ssh"]],[886,886],[890,890]]],[1551185240731,["gjx16@GJXAIOU",[[1,893,"\n"]],[891,891],[892,892]]],[1551185251674,["gjx16@GJXAIOU",[[1,892,"2.将上面文件中的··"]],[892,892],[903,903]]],[1551185253072,["gjx16@GJXAIOU",[[-1,901,"··"]],[903,903],[901,901]]],[1551185253749,["gjx16@GJXAIOU",[[1,901,"``"]],[901,901],[903,903]]],[1551185257241,["gjx16@GJXAIOU",[[1,902,"is_"]],[902,902],[905,905]]],[1551185258382,["gjx16@GJXAIOU",[[-1,903,"s_"]],[905,905],[903,903]]],[1551185263220,["gjx16@GJXAIOU",[[1,903,"d_rsa"]],[903,903],[908,908]]],[1551185277349,["gjx16@GJXAIOU",[[1,909,"使用记事本打开，然后全选复制；"]],[909,909],[924,924]]],[1551185278019,["gjx16@GJXAIOU",[[1,926,"\n"]],[924,924],[925,925]]],[1551185279664,["gjx16@GJXAIOU",[[1,925,"3."]],[925,925],[927,927]]],[1551185302393,["gjx16@GJXAIOU",[[1,927,"将上面复制的秘钥，黏贴到GitHub中"]],[927,927],[946,946]]],[1551185581001,["gjx16@GJXAIOU",[[1,947,"![搜狗截图20190226204854]($resource/%E6%90%9C%E7%8B%97%E6%88%AA%E5%9B%BE20190226204854.png)\n"]],[947,947],[1035,1035]]],[1551185815970,["gjx16@GJXAIOU",[[1,1036,"\n"]],[1034,1034],[1035,1035]]],[1551185827687,["gjx16@GJXAIOU",[[1,1035,"![搜狗截图20190226205651]($resource/%E6%90%9C%E7%8B%97%E6%88%AA%E5%9B%BE20190226205651.png)"]],[1035,1035],[1123,1123]]],[1551186344405,["gjx16@GJXAIOU",[[1,1124,"\n"]],[1123,1123],[1124,1124]]],[1551186344536,["gjx16@GJXAIOU",[[1,1125,"\n"]],[1124,1124],[1125,1125]]],[1551186344635,["gjx16@GJXAIOU",[[1,1126,"\n"]],[1125,1125],[1126,1126]]],[1551186345236,["gjx16@GJXAIOU",[[-1,1126,"\n"],[1,1127,"#"]],[1126,1126],[1127,1127]]],[1551186347002,["gjx16@GJXAIOU",[[1,1127,"## *（"]],[1127,1127],[1132,1132]]],[1551186347937,["gjx16@GJXAIOU",[[-1,1130,"*（"]],[1132,1132],[1130,1130]]],[1551186348459,["gjx16@GJXAIOU",[[1,1130,"（）"]],[1130,1130],[1132,1132]]],[1551186350657,["gjx16@GJXAIOU",[[1,1131,"三"]],[1131,1131],[1132,1132]]],[1551186358801,["gjx16@GJXAIOU",[[1,1133,"上传同步本地文件"]],[1133,1133],[1141,1141]]],[1551186359404,["gjx16@GJXAIOU",[[1,1141,"\n\n"]],[1141,1141],[1142,1142]]],[1551186362057,["gjx16@GJXAIOU",[[-1,1142,"\n"],[1,1143,"1"]],[1142,1142],[1143,1143]]],[1551186396445,["gjx16@GJXAIOU",[[1,1143,".在本地目录"]],[1143,1143],[1149,1149]]],[1551186403100,["gjx16@GJXAIOU",[[1,1145,"刚才的"]],[1145,1145],[1148,1148]]],[1551186414504,["gjx16@GJXAIOU",[[1,1152,"下，使用Git Bash :"]],[1152,1152],[1166,1166]]],[1551186415616,["gjx16@GJXAIOU",[[-1,1165,":"]],[1166,1166],[1165,1165]]],[1551186417489,["gjx16@GJXAIOU",[[1,1165,",shu"]],[1165,1165],[1169,1169]]],[1551186418779,["gjx16@GJXAIOU",[[-1,1166,"shu"]],[1169,1169],[1166,1166]]],[1551186422281,["gjx16@GJXAIOU",[[1,1166,"输入：``"]],[1166,1166],[1171,1171]]],[1551186425876,["gjx16@GJXAIOU",[[1,1170,"Git init"]],[1170,1170],[1178,1178]]],[1551186431531,["gjx16@GJXAIOU",[[1,1179," chuahsih"]],[1179,1179],[1188,1188]]],[1551186433107,["gjx16@GJXAIOU",[[-1,1180,"chuahsih"]],[1188,1188],[1180,1180]]],[1551186447314,["gjx16@GJXAIOU",[[1,1180,"初始化本地git仓库；"]],[1180,1180],[1191,1191]]],[1551186479648,["gjx16@GJXAIOU",[[1,1191,"\n\n"]],[1191,1191],[1192,1192]]],[1551186481693,["gjx16@GJXAIOU",[[-1,1192,"\n"],[1,1193,"然后"]],[1192,1192],[1194,1194]]],[1551186490330,["gjx16@GJXAIOU",[[1,1194,"在改目录下会出现：``"]],[1194,1194],[1205,1205]]],[1551186495659,["gjx16@GJXAIOU",[[1,1204,".git文件"]],[1204,1204],[1210,1210]]],[1551186498379,["gjx16@GJXAIOU",[[-1,1208,"文件"]],[1210,1210],[1208,1208]]],[1551186501510,["gjx16@GJXAIOU",[[1,1209,"这个文件"]],[1209,1209],[1213,1213]]],[1551186502275,["gjx16@GJXAIOU",[[1,1213,"\n\n"]],[1213,1213],[1214,1214]]],[1551186503081,["gjx16@GJXAIOU",[[1,1215,"\n"]],[1214,1214],[1215,1215]]],[1551186509977,["gjx16@GJXAIOU",[[-1,1215,"\n"],[1,1216,"进入"]],[1215,1215],[1217,1217]]],[1551186511437,["gjx16@GJXAIOU",[[-1,1216,"入"]],[1217,1217],[1216,1216]]],[1551186511557,["gjx16@GJXAIOU",[[-1,1215,"进"],[1,1216,"\n"]],[1216,1216],[1215,1215]]],[1551186512522,["gjx16@GJXAIOU",[[-1,1215,"\n"],[1,1216,"2"]],[1215,1215],[1216,1216]]],[1551186516193,["gjx16@GJXAIOU",[[1,1216,".进入刚在"]],[1216,1216],[1221,1221]]],[1551186519650,["gjx16@GJXAIOU",[[1,1141,"（）"]],[1141,1141],[1143,1143]]],[1551186525256,["gjx16@GJXAIOU",[[1,1142,"刚才"]],[1142,1142],[1144,1144]]],[1551186527945,["gjx16@GJXAIOU",[[-1,1142,"刚才"]],[1144,1144],[1142,1142]]],[1551186537901,["gjx16@GJXAIOU",[[1,1142,"本地目录下文件有修改"]],[1142,1142],[1152,1152]]],[1551186546601,["gjx16@GJXAIOU",[[1,1152,"想同步到GitHub时候"]],[1152,1152],[1164,1164]]],[1551186551471,["gjx16@GJXAIOU",[[1,1237,"  （）"]],[1237,1237],[1241,1241]]],[1551186560135,["gjx16@GJXAIOU",[[1,1240,"只需要一次，以后不需要"]],[1240,1240],[1251,1251]]],[1551186563336,["gjx16@GJXAIOU",[[-1,1258,"刚在"]],[1260,1260],[1258,1258]]],[1551186573566,["gjx16@GJXAIOU",[[1,1258,"修改目录下；输入："]],[1258,1258],[1267,1267]]],[1551186573864,["gjx16@GJXAIOU",[[1,1267,"\n\n"]],[1267,1267],[1268,1268]]],[1551186574426,["gjx16@GJXAIOU",[[-1,1268,"\n"],[1,1269,"1"]],[1268,1268],[1269,1269]]],[1551186575280,["gjx16@GJXAIOU",[[-1,1268,"1"],[1,1269,"\n"]],[1269,1269],[1268,1268]]],[1551186575400,["gjx16@GJXAIOU",[[-1,1268,"\n"]],[1268,1268],[1267,1267]]],[1551186576730,["gjx16@GJXAIOU",[[1,1267,"``"]],[1267,1267],[1269,1269]]],[1551186579076,["gjx16@GJXAIOU",[[1,1268,"Git"]],[1268,1268],[1271,1271]]],[1551186580288,["gjx16@GJXAIOU",[[-1,1268,"Git"]],[1271,1271],[1268,1268]]],[1551186583177,["gjx16@GJXAIOU",[[1,1268,"git status"]],[1268,1268],[1278,1278]]],[1551186587738,["gjx16@GJXAIOU",[[1,1279," :chakan"]],[1279,1279],[1287,1287]]],[1551186589139,["gjx16@GJXAIOU",[[-1,1281,"chakan"]],[1287,1287],[1281,1281]]],[1551186599821,["gjx16@GJXAIOU",[[1,1281,"查看多少文件未提交到仓库中"]],[1281,1281],[1294,1294]]],[1551186638991,["gjx16@GJXAIOU",[[1,1294,"（）"]],[1294,1294],[1296,1296]]],[1551186641132,["gjx16@GJXAIOU",[[1,1295,"先"]],[1295,1295],[1296,1296]]],[1551186643129,["gjx16@GJXAIOU",[[-1,1295,"先"]],[1296,1296],[1295,1295]]],[1551186653429,["gjx16@GJXAIOU",[[1,1295,"显示为红色的为未提交的"]],[1295,1295],[1306,1306]]],[1551186655452,["gjx16@GJXAIOU",[[1,1308,"\n"]],[1307,1307],[1308,1308]]],[1551186656390,["gjx16@GJXAIOU",[[-1,1308,"\n"],[1,1309,"3"]],[1308,1308],[1309,1309]]],[1551186656522,["gjx16@GJXAIOU",[[1,1309,"."]],[1309,1309],[1310,1310]]],[1551186657577,["gjx16@GJXAIOU",[[-1,1309,"."]],[1310,1310],[1309,1309]]],[1551186657717,["gjx16@GJXAIOU",[[-1,1308,"3"],[1,1309,"\n"]],[1309,1309],[1308,1308]]],[1551186657961,["gjx16@GJXAIOU",[[1,1309,"\n"]],[1308,1308],[1309,1309]]],[1551186659194,["gjx16@GJXAIOU",[[-1,1309,"\n"],[1,1310,"3"]],[1309,1309],[1310,1310]]],[1551186659338,["gjx16@GJXAIOU",[[1,1310,"."]],[1310,1310],[1311,1311]]],[1551186681850,["gjx16@GJXAIOU",[[1,1311,"将上述所有文件提交到缓存区：``"]],[1311,1311],[1327,1327]]],[1551186684913,["gjx16@GJXAIOU",[[1,1326,"git ass"]],[1326,1326],[1333,1333]]],[1551186685456,["gjx16@GJXAIOU",[[-1,1331,"ss"]],[1333,1333],[1331,1331]]],[1551186687423,["gjx16@GJXAIOU",[[1,1331,"dd . "]],[1331,1331],[1336,1336]]],[1551186693717,["gjx16@GJXAIOU",[[1,1337,"\n\n"]],[1337,1337],[1338,1338]]],[1551186694389,["gjx16@GJXAIOU",[[1,1339,"\n"]],[1338,1338],[1339,1339]]],[1551186695438,["gjx16@GJXAIOU",[[-1,1339,"\n"],[1,1340,"4"]],[1339,1339],[1340,1340]]],[1551186696210,["gjx16@GJXAIOU",[[1,1340,".z"]],[1340,1340],[1342,1342]]],[1551186696848,["gjx16@GJXAIOU",[[-1,1341,"z"]],[1342,1342],[1341,1341]]],[1551186703714,["gjx16@GJXAIOU",[[1,1341,"在使用命名11"]],[1341,1341],[1348,1348]]],[1551186704721,["gjx16@GJXAIOU",[[-1,1346,"11"]],[1348,1348],[1346,1346]]],[1551186705338,["gjx16@GJXAIOU",[[1,1346,"``"]],[1346,1346],[1348,1348]]],[1551186710394,["gjx16@GJXAIOU",[[1,1347,"git atatus"]],[1347,1347],[1357,1357]]],[1551186712002,["gjx16@GJXAIOU",[[-1,1351,"atatus"]],[1357,1357],[1351,1351]]],[1551186713835,["gjx16@GJXAIOU",[[1,1351,"status"]],[1351,1351],[1357,1357]]],[1551186717875,["gjx16@GJXAIOU",[[-1,1344,"命名"]],[1346,1346],[1344,1344]]],[1551186719806,["gjx16@GJXAIOU",[[1,1344,"命令"]],[1344,1344],[1346,1346]]],[1551186723848,["gjx16@GJXAIOU",[[1,1358," "]],[1358,1358],[1359,1359]]],[1551186729953,["gjx16@GJXAIOU",[[-1,1341,"在"]],[1342,1342],[1341,1341]]],[1551186731867,["gjx16@GJXAIOU",[[1,1341,"再"]],[1341,1341],[1342,1342]]],[1551186756684,["gjx16@GJXAIOU",[[1,1358,"查看是不是搜题OA叫"]],[1358,1358],[1368,1368]]],[1551186757752,["gjx16@GJXAIOU",[[-1,1363,"搜题OA叫"]],[1368,1368],[1363,1363]]],[1551186765868,["gjx16@GJXAIOU",[[1,1363,"都提交到了缓冲区（）"]],[1363,1363],[1373,1373]]],[1551186773556,["gjx16@GJXAIOU",[[1,1372,"显示为绿色的是的"]],[1372,1372],[1380,1380]]],[1551186775282,["gjx16@GJXAIOU",[[1,1381,"\n"]],[1381,1381],[1382,1382]]],[1551186775955,["gjx16@GJXAIOU",[[-1,1382," "],[1,1383,"\n"]],[1382,1382],[1383,1383]]],[1551186782829,["gjx16@GJXAIOU",[[1,1383,"\n"]],[1383,1383],[1384,1384]]],[1551186782945,["gjx16@GJXAIOU",[[1,1384,"\n"]],[1384,1384],[1385,1385]]],[1551186784490,["gjx16@GJXAIOU",[[-1,1384,"\n"],[1,1385,"5"]],[1384,1384],[1385,1385]]],[1551186785108,["gjx16@GJXAIOU",[[-1,1384,"5"],[1,1385,"\n"]],[1385,1385],[1384,1384]]],[1551186785224,["gjx16@GJXAIOU",[[-1,1384,"\n"]],[1384,1384],[1383,1383]]],[1551186785698,["gjx16@GJXAIOU",[[-1,1383,"\n"],[1,1384,"5"]],[1383,1383],[1384,1384]]],[1551186790048,["gjx16@GJXAIOU",[[1,1384,".将缓冲的"]],[1384,1384],[1389,1389]]],[1551186791032,["gjx16@GJXAIOU",[[-1,1386,"缓冲的"]],[1389,1389],[1386,1386]]],[1551186806830,["gjx16@GJXAIOU",[[1,1386,"缓冲区的文件提交到GitHub仓库中：``"]],[1386,1386],[1407,1407]]],[1551186808643,["gjx16@GJXAIOU",[[1,1406,"gie"]],[1406,1406],[1409,1409]]],[1551186809500,["gjx16@GJXAIOU",[[-1,1408,"e"]],[1409,1409],[1408,1408]]],[1551186811782,["gjx16@GJXAIOU",[[1,1408,"t con"]],[1408,1408],[1413,1413]]],[1551186812515,["gjx16@GJXAIOU",[[-1,1412,"n"]],[1413,1413],[1412,1412]]],[1551186819316,["gjx16@GJXAIOU",[[1,1412,"mmit - "]],[1412,1412],[1419,1419]]],[1551186819890,["gjx16@GJXAIOU",[[-1,1418," "]],[1419,1419],[1418,1418]]],[1551186823485,["gjx16@GJXAIOU",[[1,1418,"m \"\""]],[1418,1418],[1422,1422]]],[1551186828099,["gjx16@GJXAIOU",[[1,1421,"zai "]],[1421,1421],[1425,1425]]],[1551186829140,["gjx16@GJXAIOU",[[-1,1421,"zai "]],[1425,1425],[1421,1421]]],[1551186835165,["gjx16@GJXAIOU",[[1,1421,"文件的描述"]],[1421,1421],[1426,1426]]],[1551186838461,["gjx16@GJXAIOU",[[1,1421,"显示"]],[1421,1421],[1423,1423]]],[1551186841598,["gjx16@GJXAIOU",[[1,1421,"想"]],[1421,1421],[1422,1422]]],[1551186847720,["gjx16@GJXAIOU",[[1,1426,"后面"]],[1426,1426],[1428,1428]]],[1551186848036,["gjx16@GJXAIOU",[[1,1429,"的"]],[1428,1428],[1429,1429]]],[1551187102328,["gjx16@GJXAIOU",[[1,1434,"\n\n"]],[1434,1434],[1435,1435]]],[1551187102483,["gjx16@GJXAIOU",[[1,1436,"\n"]],[1435,1435],[1436,1436]]],[1551187103813,["gjx16@GJXAIOU",[[-1,1436,"\n"],[1,1437,"6"]],[1436,1436],[1437,1437]]],[1551187109226,["gjx16@GJXAIOU",[[1,1437,".最后一步：``"]],[1437,1437],[1445,1445]]],[1551187111754,["gjx16@GJXAIOU",[[1,1444,"git push"]],[1444,1444],[1452,1452]]],[1551188360268,["gjx16@GJXAIOU",[[1,235,"\n"]],[233,233],[234,234]]],[1551188361379,["gjx16@GJXAIOU",[[1,234,"3.,"]],[234,234],[237,237]]],[1551188362173,["gjx16@GJXAIOU",[[-1,236,","]],[237,237],[236,236]]],[1551188363362,["gjx16@GJXAIOU",[[1,236,"juti "]],[236,236],[241,241]]],[1551188364362,["gjx16@GJXAIOU",[[-1,236,"juti "]],[241,241],[236,236]]],[1551188366178,["gjx16@GJXAIOU",[[1,236,"集体"]],[236,236],[238,238]]],[1551188367204,["gjx16@GJXAIOU",[[-1,236,"集体"]],[238,238],[236,236]]],[1551188385882,["gjx16@GJXAIOU",[[1,236,"具体的安装过程详见文档Git&GitHub笔记（）"]],[236,236],[261,261]]],[1551188401113,["gjx16@GJXAIOU",[[1,260,"E:\\File\\书籍\\Git"]],[260,260],[274,274]]],[1551188443125,["gjx16@GJXAIOU",[[1,277,"\n"]],[275,275],[276,276]]],[1551188443673,["gjx16@GJXAIOU",[[1,278,"\n"]],[276,276],[277,277]]],[1551188448633,["gjx16@GJXAIOU",[[1,277,"4.Git机构"]],[277,277],[284,284]]],[1551188449515,["gjx16@GJXAIOU",[[-1,282,"机构"]],[284,284],[282,282]]],[1551188451477,["gjx16@GJXAIOU",[[1,282,"结构"]],[282,282],[284,284]]],[1551188451798,["gjx16@GJXAIOU",[[1,286,"\n"]],[284,284],[285,285]]],[1551188643531,["gjx16@GJXAIOU",[[1,285,"![Git结构]($resource/Git%E7%BB%93%E6%9E%84.png)"]],[285,285],[331,331]]]],null,"gjx16@GJXAIOU"],["42bc46f0-b339-4a60-a3de-e3aaebfaf621",1552740640934,"Time:`2019-2-26`\nTheme: Git使用说明\n\n---\n# Git使用说明\n\n@toc\n\n\n## 一、下载安装\n\n1.首先在本地安装git，地址：[https://git-scm.com/downloads](https://git-scm.com/downloads)。下载安装好git工具。\n\n2.安装好Git 之后，两个快捷方式：\n- Git Bash   ：这是命令行模式（类似Linux）\n- Git UI      ：这是有界面的模式\n\n3.具体的安装过程详见文档Git&GitHub笔记（E:\\File\\书籍\\Git）\n\n4.Git结构\n![Git结构]($resource/Git%E7%BB%93%E6%9E%84.png)\n\n## 二、配置Git(连接到GitHub)\n\n### （一）将GitHub上的库克隆到本地\n\n说明：默认文件地址为：E:\\Program\\GitHub\\\n         GitHub上的库为：Notes\n\n1.打开Git Bash :进入上面文件目录下；（或者在文件资源器中进入该目录，然后右键：Git Bash Here）\n\n2.输入：`git config --global user.name 'GitHub用户名'`\n\n3.输入：`git config --global user.email 'GitHub邮箱'`\n\n4.将GitHub上已有的仓库下载到本地（这样可以在本地编辑）\n- 进入GitHub中所要同步的库页面，选择：`clone or download`，然后将URL复制下来：本人为：`https://github.com/GJXAIOU/Notes.git`\n![URL]($resource/URL.jpg)\n\n- 在Git Bash 中首先将目录切换到想要保存该库的目录下：然后输入\n`git clone https://github.com/GJXAIOU/Notes.git` (后面的网址就是刚才复制的)\n\n\n### （二）连接本地仓库与GitHub：\n\n1.在本地生成SSH Key :  在Git Bash中输入：`ssh-keygen -t rsa -C \"GitHub邮箱\"`，接下来**全部回车**确认，这样在电脑C盘本人用户名目录下就会出现一个文件：`.ssh`\n2.将上面文件中的`id_rsa`使用记事本打开，然后全选复制；\n3.将上面复制的秘钥，黏贴到GitHub中\n![搜狗截图20190226204854]($resource/%E6%90%9C%E7%8B%97%E6%88%AA%E5%9B%BE20190226204854.png)\n![搜狗截图20190226205651]($resource/%E6%90%9C%E7%8B%97%E6%88%AA%E5%9B%BE20190226205651.png)\n\n\n\n### （三）上传同步本地文件（本地目录下文件有修改想同步到GitHub时候）\n1.在刚才的本地目录下，使用Git Bash ,输入：`Git init` 初始化本地git仓库；\n然后在改目录下会出现：`.git`这个文件  （只需要一次，以后不需要）\n\n2.进入修改目录下；输入：`git status` :查看多少文件未提交到仓库中（显示为红色的为未提交的）\n\n3.将上述所有文件提交到缓存区：`git add . `\n\n4.再使用命令`git status`查看是不是都提交到了缓冲区（显示为绿色的是的）\n\n5.将缓冲区的文件提交到GitHub仓库中：`git commit -m \"想显示文件后面的的描述\"`\n\n6.最后一步：`git push`",[[1552740635791,["GJX@GJXAIOU",[[1,1550,"\n\n"]],[1550,1550],[1551,1551]]],[1552740637263,["GJX@GJXAIOU",[[1,1552,"\n"]],[1551,1551],[1552,1552]]],[1552740641810,["GJX@GJXAIOU",[[-1,1552,"\n"],[1,1553,"补充"]],[1552,1552],[1554,1554]]],[1552740646152,["GJX@GJXAIOU",[[1,1554,"：giy"]],[1554,1554],[1558,1558]]],[1552740646602,["GJX@GJXAIOU",[[-1,1557,"y"]],[1558,1558],[1557,1557]]],[1552740650081,["GJX@GJXAIOU",[[1,1557,"thubshang "]],[1557,1557],[1567,1567]]],[1552740651615,["GJX@GJXAIOU",[[-1,1561,"shang "]],[1567,1567],[1561,1561]]],[1552740662346,["GJX@GJXAIOU",[[1,1561,"上新建仓库：迷们分析"]],[1561,1561],[1571,1571]]],[1552740664147,["GJX@GJXAIOU",[[-1,1567,"迷们分析"]],[1571,1571],[1567,1567]]],[1552740672083,["GJX@GJXAIOU",[[1,1567,"··"]],[1567,1567],[1569,1569]]],[1552740673399,["GJX@GJXAIOU",[[-1,1567,"··"]],[1569,1569],[1567,1567]]],[1552740674107,["GJX@GJXAIOU",[[1,1567,"``"]],[1567,1567],[1569,1569]]],[1552740678129,["GJX@GJXAIOU",[[1,1568,"mimmegn"]],[1568,1568],[1575,1575]]],[1552740678888,["GJX@GJXAIOU",[[-1,1571,"megn"]],[1575,1575],[1571,1571]]],[1552740681425,["GJX@GJXAIOU",[[1,1571,"engfenxi"]],[1571,1571],[1579,1579]]],[1552740683560,["GJX@GJXAIOU",[[1,1580,"\n\n"]],[1580,1580],[1581,1581]]],[1552740684776,["GJX@GJXAIOU",[[-1,1581,"\n"],[1,1582,"s"]],[1581,1581],[1582,1582]]],[1552740685105,["GJX@GJXAIOU",[[-1,1581,"s"],[1,1582,"\n"]],[1582,1582],[1581,1581]]],[1552740686580,["GJX@GJXAIOU",[[-1,1581,"\n"],[1,1582,"使用"]],[1581,1581],[1583,1583]]],[1552740686933,["GJX@GJXAIOU",[[1,1583,"："]],[1583,1583],[1584,1584]]],[1552740691664,["GJX@GJXAIOU",[[1,1584,"\n\n"]],[1584,1584],[1585,1585]]],[1552740693223,["GJX@GJXAIOU",[[-1,1585,"\n"],[1,1586,"·"]],[1585,1585],[1586,1586]]],[1552740693530,["GJX@GJXAIOU",[[1,1586,"··"]],[1586,1586],[1588,1588]]],[1552740694183,["GJX@GJXAIOU",[[-1,1586,"··"]],[1588,1588],[1586,1586]]],[1552740694585,["GJX@GJXAIOU",[[-1,1585,"·"],[1,1586,"\n"]],[1586,1586],[1585,1585]]],[1552740695259,["GJX@GJXAIOU",[[-1,1585,"\n"],[1,1586,"`"]],[1585,1585],[1586,1586]]],[1552740695618,["GJX@GJXAIOU",[[1,1586,"``"]],[1586,1586],[1588,1588]]],[1552740695646,["GJX@GJXAIOU",[[1,1588,"language\n```\n"]],[1588,1588],[1588,1596]]],[1552740699370,["GJX@GJXAIOU",[[-1,1588,"lan"],[-1,1592,"uage"]],[1588,1596],[1589,1589]]],[1552740699618,["GJX@GJXAIOU",[[1,1589,"it"]],[1589,1589],[1591,1591]]],[1552740700183,["GJX@GJXAIOU",[[1,1592,"\n"]],[1591,1591],[1592,1592]]],[1552740701355,["GJX@GJXAIOU",[[1,1592,"git remote add origin https://github.com/GJXAIOU/mimengfenxi.git\ngit push -u origin master"]],[1592,1592],[1682,1682]]]],null,"GJX@GJXAIOU"],["f42f8e32-3ee2-41d0-9d8e-18bb191872ef",1552890994594,"Time:`2019-2-26`\nTheme: Git使用说明\n\n---\n# Git使用说明\n\n@toc\n\n\n## 一、下载安装\n\n1.首先在本地安装git，地址：[https://git-scm.com/downloads](https://git-scm.com/downloads)。下载安装好git工具。\n\n2.安装好Git 之后，两个快捷方式：\n- Git Bash   ：这是命令行模式（类似Linux）\n- Git UI      ：这是有界面的模式\n\n3.具体的安装过程详见文档Git&GitHub笔记（E:\\File\\书籍\\Git）\n\n4.Git结构\n![Git结构]($resource/Git%E7%BB%93%E6%9E%84.png)\n\n## 二、配置Git(连接到GitHub)\n\n### （一）将GitHub上的库克隆到本地\n\n说明：默认文件地址为：E:\\Program\\GitHub\\\n         GitHub上的库为：Notes\n\n1.打开Git Bash :进入上面文件目录下；（或者在文件资源器中进入该目录，然后右键：Git Bash Here）\n\n2.输入：`git config --global user.name 'GitHub用户名'`\n\n3.输入：`git config --global user.email 'GitHub邮箱'`\n\n4.将GitHub上已有的仓库下载到本地（这样可以在本地编辑）\n- 进入GitHub中所要同步的库页面，选择：`clone or download`，然后将URL复制下来：本人为：`https://github.com/GJXAIOU/Notes.git`\n![URL]($resource/URL.jpg)\n\n- 在Git Bash 中首先将目录切换到想要保存该库的目录下：然后输入\n`git clone https://github.com/GJXAIOU/Notes.git` (后面的网址就是刚才复制的)\n\n\n### （二）连接本地仓库与GitHub：\n\n1.在本地生成SSH Key :  在Git Bash中输入：`ssh-keygen -t rsa -C \"GitHub邮箱\"`，接下来**全部回车**确认，这样在电脑C盘本人用户名目录下就会出现一个文件：`.ssh`\n2.将上面文件中的`id_rsa`使用记事本打开，然后全选复制；\n3.将上面复制的秘钥，黏贴到GitHub中\n![搜狗截图20190226204854]($resource/%E6%90%9C%E7%8B%97%E6%88%AA%E5%9B%BE20190226204854.png)\n![搜狗截图20190226205651]($resource/%E6%90%9C%E7%8B%97%E6%88%AA%E5%9B%BE20190226205651.png)\n\n\n\n### （三）上传同步本地文件（本地目录下文件有修改想同步到GitHub时候）\n1.在刚才的本地目录下，使用Git Bash ,输入：`Git init` 初始化本地git仓库；\n然后在改目录下会出现：`.git`这个文件  （只需要一次，以后不需要）\n\n2.进入修改目录下；输入：`git status` :查看多少文件未提交到仓库中（显示为红色的为未提交的）\n\n3.将上述所有文件提交到缓存区：`git add . `\n\n4.再使用命令`git status`查看是不是都提交到了缓冲区（显示为绿色的是的）\n\n5.将缓冲区的文件提交到GitHub仓库中：`git commit -m \"想显示文件后面的的描述\"`\n\n6.最后一步：`git push`\n\n补充：github上新建仓库：`mimengfenxi`\n使用：\n```git\ngit remote add origin https://github.com/GJXAIOU/mimengfenxi.git\ngit push -u origin master\n```\n",[[1552890977046,["GJX@GJXAIOU",[[1,332,"\n"]],[331,331],[332,332]]],[1552890979619,["GJX@GJXAIOU",[[1,332,"5.cha"]],[332,332],[337,337]]],[1552890980649,["GJX@GJXAIOU",[[-1,334,"cha"]],[337,337],[334,334]]],[1552890987573,["GJX@GJXAIOU",[[1,334,"查看git】"]],[334,334],[340,340]]],[1552890988574,["GJX@GJXAIOU",[[-1,339,"】"]],[340,340],[339,339]]],[1552890990750,["GJX@GJXAIOU",[[1,339,"配置"]],[339,339],[341,341]]],[1552890991571,["GJX@GJXAIOU",[[1,342,"\n"]],[341,341],[342,342]]],[1552890994511,["GJX@GJXAIOU",[[1,342,"g"]],[342,342],[343,343]]],[1552891000213,["GJX@GJXAIOU",[[1,343,"it bash:··"]],[343,343],[353,353]]],[1552891002472,["GJX@GJXAIOU",[[-1,351,"··"]],[353,353],[351,351]]],[1552891004128,["GJX@GJXAIOU",[[1,351,"``"]],[351,351],[353,353]]],[1552891007368,["GJX@GJXAIOU",[[1,352,"git con"]],[352,352],[359,359]]],[1552891010554,["GJX@GJXAIOU",[[-1,358,"n"]],[359,359],[358,358]]],[1552891015203,["GJX@GJXAIOU",[[1,358,"nfig --lise"]],[358,358],[369,369]]],[1552891016042,["GJX@GJXAIOU",[[-1,368,"e"]],[369,369],[368,368]]],[1552891016435,["GJX@GJXAIOU",[[1,368,"t"]],[368,368],[369,369]]],[1552891265215,["GJX@GJXAIOU",[[1,371,"\n"]],[370,370],[371,371]]],[1552891265375,["GJX@GJXAIOU",[[1,372,"\n"]],[371,371],[372,372]]],[1552891265562,["GJX@GJXAIOU",[[1,373,"\n"]],[372,372],[373,373]]],[1552891265735,["GJX@GJXAIOU",[[1,374,"\n"]],[373,373],[374,374]]],[1552891265897,["GJX@GJXAIOU",[[1,375,"\n"]],[374,374],[375,375]]],[1552891266048,["GJX@GJXAIOU",[[1,376,"\n"]],[375,375],[376,376]]],[1552891266178,["GJX@GJXAIOU",[[1,377,"\n"]],[376,376],[377,377]]],[1552891266297,["GJX@GJXAIOU",[[1,378,"\n"]],[377,377],[378,378]]],[1552891271819,["GJX@GJXAIOU",[[1,374,"## zai"]],[374,374],[380,380]]],[1552891272521,["GJX@GJXAIOU",[[-1,377,"zai"]],[380,380],[377,377]]],[1552891276343,["GJX@GJXAIOU",[[1,377,"zai"]],[377,377],[380,380]]],[1552891277142,["GJX@GJXAIOU",[[-1,377,"zai"]],[380,380],[377,377]]],[1552891288092,["GJX@GJXAIOU",[[1,377,"在本地建立一个仓库"]],[377,377],[386,386]]],[1552891288609,["GJX@GJXAIOU",[[1,391,"\n"]],[386,386],[387,387]]],[1552891294531,["GJX@GJXAIOU",[[1,387,"~"]],[387,387],[388,388]]],[1552891295150,["GJX@GJXAIOU",[[1,388,"~~~"]],[388,388],[389,389]]],[1552891298905,["GJX@GJXAIOU",[[1,389,"例如：在"]],[389,389],[393,393]]],[1552891301635,["GJX@GJXAIOU",[[-1,389,"~~例如：在"]],[393,393],[387,387]]],[1552891303327,["GJX@GJXAIOU",[[-1,387,"~~"]],[389,389],[387,387]]],[1552891312188,["GJX@GJXAIOU",[[1,387,"- 例如在E："]],[387,387],[394,394]]],[1552891314406,["GJX@GJXAIOU",[[-1,393,"："]],[394,394],[393,393]]],[1552891326142,["GJX@GJXAIOU",[[1,393,"盘下建立一个名为··"]],[393,393],[403,403]]],[1552891327679,["GJX@GJXAIOU",[[-1,401,"··"]],[403,403],[401,401]]],[1552891327838,["GJX@GJXAIOU",[[1,401,"·"]],[401,401],[402,402]]],[1552891328751,["GJX@GJXAIOU",[[-1,401,"·"]],[402,402],[401,401]]],[1552891329388,["GJX@GJXAIOU",[[1,401,"``"]],[401,401],[403,403]]],[1552891332441,["GJX@GJXAIOU",[[1,402,"practio"]],[402,402],[409,409]]],[1552891332898,["GJX@GJXAIOU",[[-1,408,"o"]],[409,409],[408,408]]],[1552891333591,["GJX@GJXAIOU",[[1,408,"ce"]],[408,408],[410,410]]],[1552891337121,["GJX@GJXAIOU",[[1,393,"`"]],[393,393],[394,394]]],[1552891338457,["GJX@GJXAIOU",[[1,392,"`"]],[392,392],[393,393]]],[1552891594311,["GJX@GJXAIOU",[[1,413,"de "]],[413,413],[416,416]]],[1552891595274,["GJX@GJXAIOU",[[-1,413,"de "]],[416,416],[413,413]]],[1552891597998,["GJX@GJXAIOU",[[1,413,"的仓库"]],[413,413],[416,416]]],[1552891598406,["GJX@GJXAIOU",[[1,417,"- \n"]],[416,416],[419,419]]],[1552891613109,["GJX@GJXAIOU",[[1,419,"使用Git Bash"]],[419,419],[429,429]]],[1552891613727,["GJX@GJXAIOU",[[1,430,"- \n"]],[429,429],[432,432]]],[1552891615055,["GJX@GJXAIOU",[[-1,430,"- "]],[432,432],[430,430]]],[1552891640835,["GJX@GJXAIOU",[[1,430,"```git"]],[430,430],[436,436]]],[1552891641258,["GJX@GJXAIOU",[[1,441,"\n"]],[436,436],[437,437]]],[1552891641758,["GJX@GJXAIOU",[[1,442,"\n"]],[437,437],[438,438]]],[1552891643012,["GJX@GJXAIOU",[[1,438,"```"]],[438,438],[441,441]]],[1552891648603,["GJX@GJXAIOU",[[1,437,"cd d:"]],[437,437],[442,442]]],[1552891648960,["GJX@GJXAIOU",[[1,443,"\n"]],[442,442],[443,443]]],[1552891649481,["GJX@GJXAIOU",[[-1,443,"\n"]],[443,443],[442,442]]],[1552891650009,["GJX@GJXAIOU",[[-1,440,"d:"]],[442,442],[440,440]]],[1552891651659,["GJX@GJXAIOU",[[1,440,"e:"]],[440,440],[442,442]]],[1552891651961,["GJX@GJXAIOU",[[1,443,"\n"]],[442,442],[443,443]]],[1552891657619,["GJX@GJXAIOU",[[1,443,"mkdir pa"]],[443,443],[451,451]]],[1552891658086,["GJX@GJXAIOU",[[-1,450,"a"]],[451,451],[450,450]]],[1552891660421,["GJX@GJXAIOU",[[1,450,"ractice"]],[450,450],[457,457]]],[1552891661744,["GJX@GJXAIOU",[[1,458,"\n"]],[457,457],[458,458]]],[1552891667560,["GJX@GJXAIOU",[[1,458,"xs p"]],[458,458],[462,462]]],[1552891668634,["GJX@GJXAIOU",[[-1,458,"xs p"]],[462,462],[458,458]]],[1552891671359,["GJX@GJXAIOU",[[1,458,"cd praci"]],[458,458],[466,466]]],[1552891672592,["GJX@GJXAIOU",[[-1,465,"i"]],[466,466],[465,465]]],[1552891674227,["GJX@GJXAIOU",[[1,465,"tice"]],[465,465],[469,469]]],[1552891674993,["GJX@GJXAIOU",[[1,470,"\n"]],[469,469],[470,470]]],[1552891679938,["GJX@GJXAIOU",[[1,470,"ls --"]],[470,470],[475,475]]],[1552891680887,["GJX@GJXAIOU",[[-1,474,"-"]],[475,475],[474,474]]],[1552891684467,["GJX@GJXAIOU",[[1,474,"la #lan"]],[474,474],[481,481]]],[1552891685215,["GJX@GJXAIOU",[[-1,478,"lan"]],[481,481],[478,478]]],[1552891688906,["GJX@GJXAIOU",[[1,478,"看现在理由"]],[478,478],[483,483]]],[1552891689654,["GJX@GJXAIOU",[[-1,481,"理由"]],[483,483],[481,481]]],[1552891695235,["GJX@GJXAIOU",[[1,481,"里面有多少文件"]],[481,481],[488,488]]],[1552891695605,["GJX@GJXAIOU",[[1,489,"\n"]],[488,488],[489,489]]],[1552891702245,["GJX@GJXAIOU",[[1,489,"git init "]],[489,489],[498,498]]],[1552891748440,["GJX@GJXAIOU",[[1,498," #c"]],[498,498],[501,501]]],[1552891748833,["GJX@GJXAIOU",[[-1,500,"c"]],[501,501],[500,500]]],[1552891755775,["GJX@GJXAIOU",[[1,500,"完成初始化，家里"]],[500,500],[508,508]]],[1552891757105,["GJX@GJXAIOU",[[-1,506,"家里"]],[508,508],[506,506]]],[1552891761985,["GJX@GJXAIOU",[[1,506,"建立了一个空仓库"]],[506,506],[514,514]]],[1552892494542,["GJX@GJXAIOU",[[1,520,"## 工作区和版本库区别"]],[520,520],[532,532]]],[1552892495090,["GJX@GJXAIOU",[[1,532,"："]],[532,532],[533,533]]],[1552892495559,["GJX@GJXAIOU",[[1,536,"\n"]],[533,533],[534,534]]],[1552892546550,["GJX@GJXAIOU",[[1,535,"![工作区与版本库的区别]($resource/%E5%B7%A5%E4%BD%9C%E5%8C%BA%E4%B8%8E%E7%89%88%E6%9C%AC%E5%BA%93%E7%9A%84%E5%8C%BA%E5%88%AB.png)"]],[535,535],[655,655]]],[1552892586808,["GJX@GJXAIOU",[[1,1760,"\n"]],[1758,1758],[1759,1759]]],[1552892598587,["GJX@GJXAIOU",[[1,1759,"将特定文件提交大缓冲区：``"]],[1759,1759],[1773,1773]]],[1552892605765,["GJX@GJXAIOU",[[1,1772,"git add hello.txt"]],[1772,1772],[1789,1789]]],[1552892618391,["GJX@GJXAIOU",[[1,2043,"\n"]],[2042,2042],[2043,2043]]],[1552892618546,["GJX@GJXAIOU",[[1,2044,"\n"]],[2043,2043],[2044,2044]]],[1552892618714,["GJX@GJXAIOU",[[1,2045,"\n"]],[2044,2044],[2045,2045]]],[1552892618883,["GJX@GJXAIOU",[[1,2046,"\n"]],[2045,2045],[2046,2046]]],[1552892620096,["GJX@GJXAIOU",[[-1,2046,"\n"],[1,2047,"#"]],[2046,2046],[2047,2047]]],[1552892621968,["GJX@GJXAIOU",[[1,2047,"# banben"]],[2047,2047],[2055,2055]]],[1552892623261,["GJX@GJXAIOU",[[-1,2049,"banben"]],[2055,2055],[2049,2049]]],[1552892627268,["GJX@GJXAIOU",[[1,2049,"版本回退"]],[2049,2049],[2053,2053]]],[1552892893244,["GJX@GJXAIOU",[[1,2053,"\n\n"]],[2053,2053],[2054,2054]]],[1552892893430,["GJX@GJXAIOU",[[1,2055,"\n"]],[2054,2054],[2055,2055]]],[1552892893607,["GJX@GJXAIOU",[[1,2056,"\n"]],[2055,2055],[2056,2056]]],[1552892896168,["GJX@GJXAIOU",[[1,2055,"分别修改几次hello.txt，并分别提交。\n**版本1：**\nhello\n\n**版本2：**\nhello\n\nworld\n**版本3：**\nhello\n\nworld\n\nthird\n**版本4：**\nhello\n\nworld\n\nthird\n\nlast\n版本4提交之前，输入`git status`\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20181028233812515.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NjbnVhY21oZHU=,size_27,color_FFFFFF,t_70)\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20181028234106489.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NjbnVhY21oZHU=,size_27,color_FFFFFF,t_70)\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20181028234356533.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NjbnVhY21oZHU=,size_27,color_FFFFFF,t_70)"]],[2055,2055],[2819,2819]]],[1552893362448,["GJX@GJXAIOU",[[1,656,"\n"]],[654,654],[655,655]]],[1552893362986,["GJX@GJXAIOU",[[1,657,"\n"]],[655,655],[656,656]]],[1552893376011,["GJX@GJXAIOU",[[1,656,"- 当使用··"]],[656,656],[663,663]]],[1552893376976,["GJX@GJXAIOU",[[-1,661,"··"]],[663,663],[661,661]]],[1552893378681,["GJX@GJXAIOU",[[1,661,"``"]],[661,661],[663,663]]],[1552893382166,["GJX@GJXAIOU",[[1,662,"git add "]],[662,662],[670,670]]],[1552893389739,["GJX@GJXAIOU",[[1,656,"\n"]],[655,655],[656,656]]],[1552893391401,["GJX@GJXAIOU",[[1,656,"zhu "]],[656,656],[660,660]]],[1552893392523,["GJX@GJXAIOU",[[-1,656,"zhu "]],[660,660],[656,656]]],[1552893411873,["GJX@GJXAIOU",[[1,656,"注：示例文件名``"]],[656,656],[665,665]]],[1552893417518,["GJX@GJXAIOU",[[1,664,"test.txt"]],[664,664],[672,672]]],[1552893473327,["GJX@GJXAIOU",[[1,689,"jiang"]],[689,689],[694,694]]],[1552893474607,["GJX@GJXAIOU",[[-1,689,"jiang"]],[694,694],[689,689]]],[1552893482373,["GJX@GJXAIOU",[[1,689,"将文件提交到缓存区"]],[689,689],[698,698]]],[1552893485338,["GJX@GJXAIOU",[[-1,695,"缓存区"]],[698,698],[695,695]]],[1552893503934,["GJX@GJXAIOU",[[1,695,"暂存区之后，仍然在本地继续修改；"]],[695,695],[711,711]]],[1552893504572,["GJX@GJXAIOU",[[1,712,"- \n"]],[711,711],[714,714]]],[1552893506234,["GJX@GJXAIOU",[[1,712,"  "]],[714,714],[716,716]]],[1552893513028,["GJX@GJXAIOU",[[1,716,"是哟"]],[716,716],[718,718]]],[1552893513791,["GJX@GJXAIOU",[[-1,716,"是哟"]],[718,718],[716,716]]],[1552893515557,["GJX@GJXAIOU",[[1,716,"使用；"]],[716,716],[719,719]]],[1552893516492,["GJX@GJXAIOU",[[-1,718,"；"]],[719,719],[718,718]]],[1552893518298,["GJX@GJXAIOU",[[1,718,"：1"]],[718,718],[720,720]]],[1552893519215,["GJX@GJXAIOU",[[-1,719,"1"]],[720,720],[719,719]]],[1552893519706,["GJX@GJXAIOU",[[1,719,"``"]],[719,719],[721,721]]],[1552893540307,["GJX@GJXAIOU",[[1,720,"git commit -m 'shuoming' "]],[720,720],[745,745]]],[1552893565393,["GJX@GJXAIOU",[[1,746,"提交只是提交第一个修改的，后面修改的不提交"]],[746,746],[767,767]]],[1552893566343,["GJX@GJXAIOU",[[1,768,"  - \n"]],[767,767],[772,772]]],[1552893570868,["GJX@GJXAIOU",[[1,772,"使用：``"]],[772,772],[777,777]]],[1552893574072,["GJX@GJXAIOU",[[1,776,"g"]],[776,776],[777,777]]],[1552893577667,["GJX@GJXAIOU",[[1,778,"t comi"]],[778,778],[784,784]]],[1552893579209,["GJX@GJXAIOU",[[-1,783,"i"]],[784,784],[783,783]]],[1552893597641,["GJX@GJXAIOU",[[1,783,"mit -m 'shuoming' test.txt"]],[783,783],[809,809]]],[1552894354704,[null,[[-1,777,"`"],[1,778,"i"],[1,809,"`"]],[777,777],[810,810]]],[1552894354704,[null,[[1,777,"`"],[-1,777,"i"],[-1,809,"`"]],[810,810],[777,777]]],[1552894314006,["GJX@GJXAIOU",[[1,810,"tijiao"]],[810,810],[816,816]]],[1552894315087,["GJX@GJXAIOU",[[-1,810,"tijiao"]],[816,816],[810,810]]],[1552894325673,["GJX@GJXAIOU",[[1,810,"提交的将是后面休二改"]],[810,810],[820,820]]],[1552894326898,["GJX@GJXAIOU",[[-1,817,"休二改"]],[820,820],[817,817]]],[1552894331299,["GJX@GJXAIOU",[[1,817,"修改的版本；"]],[817,817],[823,823]]],[1552894336610,["GJX@GJXAIOU",[[1,824,"  - \n"]],[823,823],[828,828]]],[1552894342715,["GJX@GJXAIOU",[[1,828,"使用：``"]],[828,828],[833,833]]],[1552894354050,["GJX@GJXAIOU",[[1,832,"git diff head -- tes"]],[832,832],[852,852]]],[1552894414666,[null,[[-1,777,"`"],[1,778,"i"],[-1,809,"\n"],[1,810,"`"],[1,853,"\n"]],[777,777],[854,854]]],[1552894414666,[null,[[1,777,"`"],[-1,777,"i"],[1,809,"\n"],[-1,809,"`"],[-1,853,"\n"]],[854,854],[777,777]]],[1552894354837,["GJX@GJXAIOU",[[1,851,"x"]],[851,851],[852,852]]],[1552894355608,["GJX@GJXAIOU",[[-1,851,"x"]],[852,852],[851,851]]],[1552894355757,["GJX@GJXAIOU",[[1,851,"sw"]],[851,851],[853,853]]],[1552894356820,["GJX@GJXAIOU",[[-1,852,"w"]],[853,853],[852,852]]],[1552894358069,["GJX@GJXAIOU",[[1,852,"t.st"]],[852,852],[856,856]]],[1552894358887,["GJX@GJXAIOU",[[-1,854,"st"]],[856,856],[854,854]]],[1552894359948,["GJX@GJXAIOU",[[1,854,"txt"]],[854,854],[857,857]]],[1552894363525,["GJX@GJXAIOU",[[1,858,"k="]],[858,858],[860,860]]],[1552894364394,["GJX@GJXAIOU",[[-1,858,"k="]],[860,860],[858,858]]],[1552894379336,["GJX@GJXAIOU",[[1,858,"可以显示工作区和分支的区别"]],[858,858],[871,871]]],[1552894400576,["GJX@GJXAIOU",[[1,872,"  - \n"]],[871,871],[876,876]]],[1552894400810,["GJX@GJXAIOU",[[-1,872,"  - "]],[876,876],[873,873]]],[1552894400946,["GJX@GJXAIOU",[[1,874,"\n"]],[873,873],[874,874]]],[1552894401179,["GJX@GJXAIOU",[[1,875,"\n"]],[874,874],[875,875]]],[1552894406015,["GJX@GJXAIOU",[[1,875,"## 删除"]],[875,875],[880,880]]],[1552894413408,["GJX@GJXAIOU",[[-1,877," 删除"]],[880,880],[877,877]]],[1552894414232,["GJX@GJXAIOU",[[1,877," "]],[877,877],[878,878]]],[1552894474669,[null,[[-1,777,"`"],[1,778,"i"],[-1,809,"\n"],[1,810,"`"],[-1,857,"s"],[1,858,"`"],[-1,871,"`"],[1,872,"\n"]],[777,777],[873,873]]],[1552894474669,[null,[[1,777,"`"],[-1,777,"i"],[1,809,"\n"],[-1,809,"`"],[1,857,"s"],[-1,857,"`"],[1,871,"`"],[-1,871,"\n"]],[873,873],[777,777]]],[1552894424205,["GJX@GJXAIOU",[[1,878,"撤销修改"]],[878,878],[882,882]]],[1552894425012,["GJX@GJXAIOU",[[1,883,"\n"]],[882,882],[883,883]]],[1552894425475,["GJX@GJXAIOU",[[1,884,"\n"]],[883,883],[884,884]]],[1552894452229,["GJX@GJXAIOU",[[1,884,"- 工作区修改之后，未提交到暂存区：``"]],[884,884],[904,904]]],[1552894463313,["GJX@GJXAIOU",[[1,903,"git checkout -- s"]],[903,903],[920,920]]],[1552894464063,["GJX@GJXAIOU",[[-1,919,"s"]],[920,920],[919,919]]],[1552894468008,["GJX@GJXAIOU",[[1,919,"test.ts"]],[919,919],[926,926]]],[1552894468616,["GJX@GJXAIOU",[[-1,925,"s"]],[926,926],[925,925]]],[1552894469619,["GJX@GJXAIOU",[[1,925,"xt"]],[925,925],[927,927]]],[1552894534672,[null,[[-1,777,"`"],[1,778,"i"],[-1,809,"\n"],[1,810,"`"],[-1,857,"s"],[1,858,"`"],[-1,871,"`"],[1,872,"\n"]],[777,777],[873,873]]],[1552894534672,[null,[[1,777,"`"],[-1,777,"i"],[1,809,"\n"],[-1,809,"`"],[1,857,"s"],[-1,857,"`"],[1,871,"`"],[-1,871,"\n"]],[873,873],[777,777]]],[1552894498104,["GJX@GJXAIOU",[[1,928,",che"]],[928,928],[932,932]]],[1552894498850,["GJX@GJXAIOU",[[-1,929,"che"]],[932,932],[929,929]]],[1552894508037,["GJX@GJXAIOU",[[1,929,"撤销工作区的修改；"]],[929,929],[938,938]]],[1552894508448,["GJX@GJXAIOU",[[1,939,"- \n"]],[938,938],[941,941]]],[1552894534100,["GJX@GJXAIOU",[[1,941,"工作区修改后，已提交到暂存区："]],[941,941],[956,956]]],[1552894594669,[null,[[-1,777,"`"],[1,778,"i"],[-1,809,"\n"],[1,810,"`"],[-1,857,"s"],[1,858,"`"],[-1,871,"`"],[1,872,"\n"]],[777,777],[873,873]]],[1552894594669,[null,[[1,777,"`"],[-1,777,"i"],[1,809,"\n"],[-1,809,"`"],[1,857,"s"],[-1,857,"`"],[1,871,"`"],[-1,871,"\n"]],[873,873],[777,777]]],[1552894536652,["GJX@GJXAIOU",[[1,956,"``"]],[956,956],[958,958]]],[1552894552026,["GJX@GJXAIOU",[[1,957,"git reset head test.txt"]],[957,957],[980,980]]],[1552894557796,["GJX@GJXAIOU",[[1,981,",chex"]],[981,981],[986,986]]],[1552894558884,["GJX@GJXAIOU",[[-1,982,"chex"]],[986,986],[982,982]]],[1552894584936,["GJX@GJXAIOU",[[1,982,"撤销暂存区的修改，然后再使用上面的名"]],[982,982],[1000,1000]]],[1552894586119,["GJX@GJXAIOU",[[-1,999,"名"]],[1000,1000],[999,999]]],[1552894592969,["GJX@GJXAIOU",[[1,999,"命令撤销工作区的"]],[999,999],[1007,1007]]],[1552894654667,[null,[[-1,777,"`"],[1,778,"i"],[-1,809,"\n"],[1,810,"`"],[-1,857,"s"],[1,858,"`"],[-1,871,"`"],[1,872,"\n"]],[777,777],[873,873]]],[1552894654667,[null,[[1,777,"`"],[-1,777,"i"],[1,809,"\n"],[-1,809,"`"],[1,857,"s"],[-1,857,"`"],[1,871,"`"],[-1,871,"\n"]],[873,873],[777,777]]],[1552894596636,["GJX@GJXAIOU",[[1,1007,"修改；"]],[1007,1007],[1010,1010]]],[1552894597049,["GJX@GJXAIOU",[[1,1011,"- \n"]],[1010,1010],[1013,1013]]],[1552894597250,["GJX@GJXAIOU",[[-1,1011,"- "]],[1013,1013],[1012,1012]]],[1552894609476,["GJX@GJXAIOU",[[1,1012,"\n"]],[1012,1012],[1013,1013]]],[1552894609689,["GJX@GJXAIOU",[[1,1013,"\n"]],[1013,1013],[1014,1014]]],[1552894609841,["GJX@GJXAIOU",[[1,1014,"\n"]],[1014,1014],[1015,1015]]],[1552894615291,["GJX@GJXAIOU",[[1,1013,"## 删除文件"]],[1013,1013],[1020,1020]]],[1552894615728,["GJX@GJXAIOU",[[1,1022,"\n"]],[1020,1020],[1021,1021]]],[1552894617033,["GJX@GJXAIOU",[[1,1023,"\n"]],[1021,1021],[1022,1022]]],[1552894617792,["GJX@GJXAIOU",[[1,1022,"= "]],[1022,1022],[1024,1024]]],[1552894618634,["GJX@GJXAIOU",[[-1,1022,"= "]],[1024,1024],[1022,1022]]],[1552894628081,["GJX@GJXAIOU",[[1,1022,"- 删除工作区文件：``"]],[1022,1022],[1034,1034]]],[1552894631165,["GJX@GJXAIOU",[[1,1033,"rm s"]],[1033,1033],[1037,1037]]],[1552894631775,["GJX@GJXAIOU",[[-1,1036,"s"]],[1037,1037],[1036,1036]]],[1552894633824,["GJX@GJXAIOU",[[1,1036,"test.trst"]],[1036,1036],[1045,1045]]],[1552894634647,["GJX@GJXAIOU",[[-1,1041,"trst"]],[1045,1045],[1041,1041]]],[1552894636049,["GJX@GJXAIOU",[[1,1041,"txt"]],[1041,1041],[1044,1044]]],[1552894639674,["GJX@GJXAIOU",[[1,1046,"- sh"]],[1046,1046],[1050,1050]]],[1552894640554,["GJX@GJXAIOU",[[-1,1048,"sh"]],[1050,1050],[1048,1048]]],[1552894648296,["GJX@GJXAIOU",[[1,1048,"删除暂存区文件：``"]],[1048,1048],[1058,1058]]],[1552894650046,["GJX@GJXAIOU",[[1,1057,"rm "]],[1057,1057],[1060,1060]]],[1552894651184,["GJX@GJXAIOU",[[-1,1057,"rm "]],[1060,1060],[1057,1057]]],[1552894652092,["GJX@GJXAIOU",[[1,1057,"gitr "]],[1057,1057],[1062,1062]]],[1552894653224,["GJX@GJXAIOU",[[-1,1060,"r "]],[1062,1062],[1060,1060]]],[1552894653571,["GJX@GJXAIOU",[[1,1060," "]],[1060,1060],[1061,1061]]],[1552894714677,[null,[[-1,777,"`"],[1,778,"i"],[-1,809,"\n"],[1,810,"`"],[-1,857,"s"],[1,858,"`"],[-1,871,"`"],[1,872,"\n"]],[777,777],[873,873]]],[1552894714677,[null,[[1,777,"`"],[-1,777,"i"],[1,809,"\n"],[-1,809,"`"],[1,857,"s"],[-1,857,"`"],[1,871,"`"],[-1,871,"\n"]],[873,873],[777,777]]],[1552894658744,["GJX@GJXAIOU",[[1,1061,"rm test.x"]],[1061,1061],[1070,1070]]],[1552894659257,["GJX@GJXAIOU",[[-1,1069,"x"]],[1070,1070],[1069,1069]]],[1552894659890,["GJX@GJXAIOU",[[1,1069,"txt"]],[1069,1069],[1072,1072]]],[1552894687907,["GJX@GJXAIOU",[[1,1056,"()"]],[1056,1056],[1058,1058]]],[1552894689121,["GJX@GJXAIOU",[[1,1057,"s"]],[1057,1057],[1058,1058]]],[1552894689968,["GJX@GJXAIOU",[[-1,1057,"s"]],[1058,1058],[1057,1057]]],[1552894699175,["GJX@GJXAIOU",[[1,1057,"删除的修改操作，要提交"]],[1057,1057],[1068,1068]]],[1552894700793,["GJX@GJXAIOU",[[1,1069,"\n"]],[1069,1069],[1070,1070]]],[1552894704525,["GJX@GJXAIOU",[[1,1088,"\n"]],[1087,1087],[1088,1088]]],[1552894707449,["GJX@GJXAIOU",[[1,1088,"``"]],[1088,1088],[1090,1090]]],[1552894711562,["GJX@GJXAIOU",[[1,1089,"git xommi"]],[1089,1089],[1098,1098]]],[1552894712856,["GJX@GJXAIOU",[[-1,1093,"xommi"]],[1098,1098],[1093,1093]]],[1552894714572,["GJX@GJXAIOU",[[1,1093,"comm"]],[1093,1093],[1097,1097]]],[1552894774672,[null,[[-1,777,"`"],[1,778,"i"],[-1,809,"\n"],[1,810,"`"],[-1,857,"s"],[1,858,"`"],[-1,871,"`"],[1,872,"\n"]],[777,777],[873,873]]],[1552894774672,[null,[[1,777,"`"],[-1,777,"i"],[1,809,"\n"],[-1,809,"`"],[1,857,"s"],[-1,857,"`"],[1,871,"`"],[-1,871,"\n"]],[873,873],[777,777]]],[1552894730594,["GJX@GJXAIOU",[[1,1097,"it -m&quot"]],[1097,1097],[1107,1107]]],[1552894734183,["GJX@GJXAIOU",[[1,1102," "]],[1102,1102],[1103,1103]]],[1552894753229,["GJX@GJXAIOU",[[1,1108,";delete test.txt&quot;"]],[1108,1108],[1130,1130]]],[1552895014677,[null,[[-1,777,"`"],[1,778,"i"],[-1,809,"\n"],[1,810,"`"],[-1,857,"s"],[1,858,"`"],[-1,871,"`"],[1,872,"\n"]],[777,777],[873,873]]],[1552895014677,[null,[[1,777,"`"],[-1,777,"i"],[1,809,"\n"],[-1,809,"`"],[1,857,"s"],[-1,857,"`"],[1,871,"`"],[-1,871,"\n"]],[873,873],[777,777]]],[1552894990914,["GJX@GJXAIOU",[[1,1155,"\n"]],[1154,1154],[1155,1155]]],[1552894991067,["GJX@GJXAIOU",[[1,1156,"\n"]],[1155,1155],[1156,1156]]],[1552894991216,["GJX@GJXAIOU",[[1,1157,"\n"]],[1156,1156],[1157,1157]]],[1552894991787,["GJX@GJXAIOU",[[1,1158,"\n"]],[1157,1157],[1158,1158]]],[1552894991945,["GJX@GJXAIOU",[[1,1159,"\n"]],[1158,1158],[1159,1159]]],[1552894994545,["GJX@GJXAIOU",[[1,1132,"\n"]],[1131,1131],[1132,1132]]],[1552894994610,["GJX@GJXAIOU",[[1,1133,"\n"]],[1132,1132],[1133,1133]]],[1552894994747,["GJX@GJXAIOU",[[1,1134,"\n"]],[1133,1133],[1134,1134]]],[1552894994884,["GJX@GJXAIOU",[[1,1135,"\n"]],[1134,1134],[1135,1135]]],[1552895001297,["GJX@GJXAIOU",[[1,1160,"### jiang"]],[1160,1160],[1169,1169]]],[1552895006664,["GJX@GJXAIOU",[[-1,1160,"### jiang"]],[1169,1169],[1160,1160]]],[1552895006897,["GJX@GJXAIOU",[[-1,1163,"\n"]],[1160,1160],[1159,1159]]],[1552895007278,["GJX@GJXAIOU",[[-1,1162,"\n"]],[1159,1159],[1158,1158]]],[1552895074681,[null,[[-1,777,"`"],[1,778,"i"],[-1,809,"\n"],[1,810,"`"],[-1,857,"s"],[1,858,"`"],[-1,871,"`"],[1,872,"\n"]],[777,777],[873,873]]],[1552895074682,[null,[[1,777,"`"],[-1,777,"i"],[1,809,"\n"],[-1,809,"`"],[1,857,"s"],[-1,857,"`"],[1,871,"`"],[-1,871,"\n"]],[873,873],[777,777]]],[1552895043965,["GJX@GJXAIOU",[[-1,2391,"补充：github上新建仓库：`mimengfenxi`\n使用：\n```git\ngit remote add origin https://github.com/GJXAIOU/mimengfenxi.git\ngit push -u origin master\n```"]],[2391,2525],[2391,2391]]],[1552895051886,["GJX@GJXAIOU",[[1,2028,"补充：github上新建仓库：`mimengfenxi`\n使用：\n```git\ngit remote add origin https://github.com/GJXAIOU/mimengfenxi.git\ngit push -u origin master\n```"]],[2028,2028],[2162,2162]]],[1552895067323,["GJX@GJXAIOU",[[1,2132," #hou"]],[2132,2132],[2137,2137]]],[1552895068224,["GJX@GJXAIOU",[[-1,2134,"hou"]],[2137,2137],[2134,2134]]],[1552895073666,["GJX@GJXAIOU",[[1,2134,"后面为参股"]],[2134,2134],[2139,2139]]],[1552895074443,["GJX@GJXAIOU",[[-1,2138,"股"]],[2139,2139],[2138,2138]]],[1552895134677,[null,[[-1,777,"`"],[1,778,"i"],[-1,809,"\n"],[1,810,"`"],[-1,857,"s"],[1,858,"`"],[-1,871,"`"],[1,872,"\n"]],[777,777],[873,873]]],[1552895134677,[null,[[1,777,"`"],[-1,777,"i"],[1,809,"\n"],[-1,809,"`"],[1,857,"s"],[-1,857,"`"],[1,871,"`"],[-1,871,"\n"]],[873,873],[777,777]]],[1552895081939,["GJX@GJXAIOU",[[1,2137,"仓库的SSH地址："]],[2137,2137],[2146,2146]]],[1552895087099,["GJX@GJXAIOU",[[-1,2145,"："]],[2146,2146],[2145,2145]]],[1552895090121,["GJX@GJXAIOU",[[1,2068,"\n"]],[2067,2067],[2068,2068]]],[1552895114474,["GJX@GJXAIOU",[[1,2068,"#将本地的master分支与GitHub仓库分支进行"]],[2068,2068],[2094,2094]]],[1552895118328,["GJX@GJXAIOU",[[-1,2092,"进行"]],[2094,2094],[2092,2092]]],[1552895124016,["GJX@GJXAIOU",[[1,2092,"进行关联"]],[2092,2092],[2096,2096]]],[1552895194679,[null,[[-1,777,"`"],[1,778,"i"],[-1,809,"\n"],[1,810,"`"],[-1,857,"s"],[1,858,"`"],[-1,871,"`"],[1,872,"\n"],[-1,2174,"参"]],[777,777],[2174,2174]]],[1552895194679,[null,[[1,777,"`"],[-1,777,"i"],[1,809,"\n"],[-1,809,"`"],[1,857,"s"],[-1,857,"`"],[1,871,"`"],[-1,871,"\n"],[1,2174,"参"]],[2174,2174],[777,777]]],[1552895150305,["GJX@GJXAIOU",[[1,2175,"\n"]],[2174,2174],[2175,2175]]],[1552895151233,["GJX@GJXAIOU",[[1,2176,"\n"]],[2175,2175],[2176,2176]]],[1552895156596,["GJX@GJXAIOU",[[1,2176,"##选"]],[2176,2176],[2179,2179]]],[1552895157415,["GJX@GJXAIOU",[[-1,2178,"选"]],[2179,2179],[2178,2178]]],[1552895159091,["GJX@GJXAIOU",[[1,2178,"这不"]],[2178,2178],[2180,2180]]],[1552895159727,["GJX@GJXAIOU",[[-1,2179,"不"]],[2180,2180],[2179,2179]]],[1552895167866,["GJX@GJXAIOU",[[1,2179,"步不需要"]],[2179,2179],[2183,2183]]],[1552895168657,["GJX@GJXAIOU",[[1,2184,"\n"]],[2183,2183],[2184,2184]]],[1552895184857,["GJX@GJXAIOU",[[1,2184,"git remote rm orih"]],[2184,2184],[2202,2202]]],[1552895185475,["GJX@GJXAIOU",[[-1,2201,"h"]],[2202,2202],[2201,2201]]],[1552895187482,["GJX@GJXAIOU",[[1,2201,"gin "]],[2201,2201],[2205,2205]]],[1552895254681,[null,[[-1,777,"`"],[1,778,"i"],[-1,809,"\n"],[1,810,"`"],[-1,857,"s"],[1,858,"`"],[-1,871,"`"],[1,872,"\n"],[-1,2174,"参"],[1,2175,"\n"],[-1,2205,"\n"]],[777,777],[2205,2205]]],[1552895254681,[null,[[1,777,"`"],[-1,777,"i"],[1,809,"\n"],[-1,809,"`"],[1,857,"s"],[-1,857,"`"],[1,871,"`"],[-1,871,"\n"],[1,2174,"参"],[-1,2174,"\n"],[1,2205,"\n"]],[2205,2205],[777,777]]],[1552895203843,["GJX@GJXAIOU",[[1,2205,"https://github.com/GJXAIOU/mimengfenxi.git #"]],[2205,2205],[2249,2249]]],[1552895205119,["GJX@GJXAIOU",[[-1,2248,"#"]],[2249,2249],[2248,2248]]],[1552895208889,["GJX@GJXAIOU",[[1,2183,",shi"]],[2183,2183],[2187,2187]]],[1552895210147,["GJX@GJXAIOU",[[-1,2184,"shi"]],[2187,2187],[2184,2184]]],[1552895219417,["GJX@GJXAIOU",[[1,2184,"这是移除关联"]],[2184,2184],[2190,2190]]],[1552895234556,["GJX@GJXAIOU",[[1,2256,"\n"]],[2255,2255],[2256,2256]]],[1552895234841,["GJX@GJXAIOU",[[1,2257,"\n"]],[2256,2256],[2257,2257]]],[1552895249534,["GJX@GJXAIOU",[[1,2257,"#注：origin是自己为"]],[2257,2257],[2270,2270]]],[1552895314688,[null,[[-1,777,"`"],[1,778,"i"],[-1,809,"\n"],[1,810,"`"],[-1,857,"s"],[1,858,"`"],[-1,871,"`"],[1,872,"\n"],[-1,2174,"参"],[1,2175,"\n"],[-1,2270,"\n"]],[777,777],[2270,2270]]],[1552895314688,[null,[[1,777,"`"],[-1,777,"i"],[1,809,"\n"],[-1,809,"`"],[1,857,"s"],[-1,857,"`"],[1,871,"`"],[-1,871,"\n"],[1,2174,"参"],[-1,2174,"\n"],[1,2270,"\n"]],[2270,2270],[777,777]]],[1552895281702,["GJX@GJXAIOU",[[1,2270,"远程GitHub仓库取的别名，主要是方便以后书写"]],[2270,2270],[2294,2294]]],[1552895285321,["GJX@GJXAIOU",[[1,2295,"\n"]],[2294,2294],[2295,2295]]],[1552895286141,["GJX@GJXAIOU",[[1,2296,"\n"]],[2295,2295],[2296,2296]]],[1552895303761,["GJX@GJXAIOU",[[1,2296,"#将本地的master分支上传到GitHub"]],[2296,2296],[2318,2318]]],[1552895614766,[null,[[-1,777,"`"],[1,778,"i"],[-1,809,"\n"],[1,810,"`"],[-1,857,"s"],[1,858,"`"],[-1,871,"`"],[1,872,"\n"],[-1,2174,"参"],[1,2175,"\n"],[-1,2318,"\n"]],[777,777],[2318,2318]]],[1552895614767,[null,[[1,777,"`"],[-1,777,"i"],[1,809,"\n"],[-1,809,"`"],[1,857,"s"],[-1,857,"`"],[1,871,"`"],[-1,871,"\n"],[1,2174,"参"],[-1,2174,"\n"],[1,2318,"\n"]],[2318,2318],[777,777]]],[1552895596855,["GJX@GJXAIOU",[[1,2296,"\n"]],[2295,2295],[2296,2296]]],[1552895599134,["GJX@GJXAIOU",[[1,2295,"#"]],[2295,2295],[2296,2296]]],[1552895602243,["GJX@GJXAIOU",[[1,2295,"\n"]],[2295,2295],[2296,2296]]],[1552895613370,["GJX@GJXAIOU",[[1,2297,"下面的步骤只需要第一次的时候"]],[2297,2297],[2311,2311]]],[1552895674766,[null,[[-1,777,"`"],[1,778,"i"],[-1,809,"\n"],[1,810,"`"],[-1,857,"s"],[1,858,"`"],[-1,871,"`"],[1,872,"\n"],[-1,2174,"参"],[1,2175,"\n"],[-1,2335,"\n"]],[777,777],[2335,2335]]],[1552895674766,[null,[[1,777,"`"],[-1,777,"i"],[1,809,"\n"],[-1,809,"`"],[1,857,"s"],[-1,857,"`"],[1,871,"`"],[-1,871,"\n"],[1,2174,"参"],[-1,2174,"\n"],[1,2335,"\n"]],[2335,2335],[777,777]]],[1552895616073,["GJX@GJXAIOU",[[1,2311,"配置一个"]],[2311,2311],[2315,2315]]],[1552895617736,["GJX@GJXAIOU",[[-1,2313,"一个"]],[2315,2315],[2313,2313]]],[1552895620154,["GJX@GJXAIOU",[[1,2313,"以下："]],[2313,2313],[2316,2316]]],[1552895620641,["GJX@GJXAIOU",[[1,2318,"\n"]],[2316,2316],[2317,2317]]],[1552895623304,["GJX@GJXAIOU",[[1,2317,"不周一"]],[2317,2317],[2320,2320]]],[1552895624575,["GJX@GJXAIOU",[[-1,2317,"不周一"]],[2320,2320],[2317,2317]]],[1552895626971,["GJX@GJXAIOU",[[1,2317,"步骤一；"]],[2317,2317],[2321,2321]]],[1552895627991,["GJX@GJXAIOU",[[-1,2320,"；"]],[2321,2321],[2320,2320]]],[1552895638595,["GJX@GJXAIOU",[[1,2320,"：配置上面的公钥和低腰"]],[2320,2320],[2331,2331]]],[1552895639291,["GJX@GJXAIOU",[[-1,2329,"低腰"]],[2331,2331],[2329,2329]]],[1552895641202,["GJX@GJXAIOU",[[1,2329,"私钥"]],[2329,2329],[2331,2331]]],[1552895642380,["GJX@GJXAIOU",[[1,2333,"\n"]],[2331,2331],[2332,2332]]],[1552895673987,["GJX@GJXAIOU",[[1,2332,"步骤二；输入：ssh -T -v git@gith"]],[2332,2332],[2357,2357]]],[1552895734773,[null,[[-1,777,"`"],[1,778,"i"],[-1,809,"\n"],[1,810,"`"],[-1,857,"s"],[1,858,"`"],[-1,871,"`"],[1,872,"\n"],[-1,2174,"参"],[1,2175,"\n"],[-1,2381,"\n"]],[777,777],[2381,2381]]],[1552895734773,[null,[[1,777,"`"],[-1,777,"i"],[1,809,"\n"],[-1,809,"`"],[1,857,"s"],[-1,857,"`"],[1,871,"`"],[-1,871,"\n"],[1,2174,"参"],[-1,2174,"\n"],[1,2381,"\n"]],[2381,2381],[777,777]]],[1552895679430,["GJX@GJXAIOU",[[1,2357,"ub.com"]],[2357,2357],[2363,2363]]],[1552895723608,["GJX@GJXAIOU",[[1,2365,"\n"]],[2364,2364],[2365,2365]]],[1552895728871,["GJX@GJXAIOU",[[1,2365,"#zhe"]],[2365,2365],[2369,2369]]],[1552895729793,["GJX@GJXAIOU",[[-1,2366,"zhe"]],[2369,2369],[2366,2366]]],[1552895732925,["GJX@GJXAIOU",[[1,2366,"这一步"]],[2366,2366],[2369,2369]]],[1552895794771,[null,[[-1,777,"`"],[1,778,"i"],[-1,809,"\n"],[1,810,"`"],[-1,857,"s"],[1,858,"`"],[-1,871,"`"],[1,872,"\n"],[-1,2174,"参"],[1,2175,"\n"],[-1,2392,"\n"]],[777,777],[2392,2392]]],[1552895794771,[null,[[1,777,"`"],[-1,777,"i"],[1,809,"\n"],[-1,809,"`"],[1,857,"s"],[-1,857,"`"],[1,871,"`"],[-1,871,"\n"],[1,2174,"参"],[-1,2174,"\n"],[1,2392,"\n"]],[2392,2392],[777,777]]],[1552895762910,["GJX@GJXAIOU",[[1,2369,"是指从本地直接生成库，而不是克隆的上传使用"]],[2369,2369],[2390,2390]]],[1552895763461,["GJX@GJXAIOU",[[1,2391,"\n"]],[2390,2390],[2391,2391]]],[1552895778674,["GJX@GJXAIOU",[[1,2391,"git pull --rebase orih"]],[2391,2391],[2413,2413]]],[1552895780136,["GJX@GJXAIOU",[[-1,2412,"h"]],[2413,2413],[2412,2412]]],[1552895784509,["GJX@GJXAIOU",[[1,2412,"gin master"]],[2412,2412],[2422,2422]]],[1552895786664,["GJX@GJXAIOU",[[1,2423,"\n"]],[2422,2422],[2423,2423]]],[1552895791561,["GJX@GJXAIOU",[[1,2422," 3"]],[2422,2422],[2424,2424]]],[1552895792511,["GJX@GJXAIOU",[[-1,2423,"3"]],[2424,2424],[2423,2423]]],[1552895793594,["GJX@GJXAIOU",[[1,2423,"#"]],[2423,2423],[2424,2424]]],[1552895854772,[null,[[-1,777,"`"],[1,778,"i"],[-1,809,"\n"],[1,810,"`"],[-1,857,"s"],[1,858,"`"],[-1,871,"`"],[1,872,"\n"],[-1,2174,"参"],[1,2175,"\n"],[-1,2448,"\n"]],[777,777],[2448,2448]]],[1552895854772,[null,[[1,777,"`"],[-1,777,"i"],[1,809,"\n"],[-1,809,"`"],[1,857,"s"],[-1,857,"`"],[1,871,"`"],[-1,871,"\n"],[1,2174,"参"],[-1,2174,"\n"],[1,2448,"\n"]],[2448,2448],[777,777]]],[1552895832911,["GJX@GJXAIOU",[[1,2424,"相当于将GitHub创建仓库时候多创建的README.md脱下了"]],[2424,2424],[2456,2456]]],[1552895836183,["GJX@GJXAIOU",[[-1,2453,"脱下了"]],[2456,2456],[2453,2453]]],[1552895839580,["GJX@GJXAIOU",[[1,2453,"拖下来"]],[2453,2453],[2456,2456]]],[1552895974775,[null,[[-1,777,"`"],[1,778,"i"],[-1,809,"\n"],[1,810,"`"],[-1,857,"s"],[1,858,"`"],[-1,871,"`"],[1,872,"\n"],[-1,2174,"参"],[1,2175,"\n"],[-1,2480,"\n"]],[777,777],[2480,2480]]],[1552895974775,[null,[[1,777,"`"],[-1,777,"i"],[1,809,"\n"],[-1,809,"`"],[1,857,"s"],[-1,857,"`"],[1,871,"`"],[-1,871,"\n"],[1,2174,"参"],[-1,2174,"\n"],[1,2480,"\n"]],[2480,2480],[777,777]]],[1552895973632,["GJX@GJXAIOU",[[1,2390,"（）"]],[2390,2390],[2392,2392]]],[1552896034780,[null,[[-1,777,"`"],[1,778,"i"],[-1,809,"\n"],[1,810,"`"],[-1,857,"s"],[1,858,"`"],[-1,871,"`"],[1,872,"\n"],[-1,2174,"参"],[1,2175,"\n"],[-1,2482,"\n"]],[777,777],[2482,2482]]],[1552896034780,[null,[[1,777,"`"],[-1,777,"i"],[1,809,"\n"],[-1,809,"`"],[1,857,"s"],[-1,857,"`"],[1,871,"`"],[-1,871,"\n"],[1,2174,"参"],[-1,2174,"\n"],[1,2482,"\n"]],[2482,2482],[777,777]]],[1552895978862,["GJX@GJXAIOU",[[1,2391,"一般也没有"]],[2391,2391],[2396,2396]]],[1552895996377,["GJX@GJXAIOU",[[1,2465,"\n"]],[2463,2463],[2464,2464]]],[1552895997233,["GJX@GJXAIOU",[[1,2466,"\n"]],[2464,2464],[2465,2465]]],[1552896009280,["GJX@GJXAIOU",[[1,2465,"#从GitHub往下克隆"]],[2465,2465],[2477,2477]]],[1552896010903,["GJX@GJXAIOU",[[-1,2474,"下克隆"]],[2477,2477],[2474,2474]]],[1552896013904,["GJX@GJXAIOU",[[1,2474,"本地可控"]],[2474,2474],[2478,2478]]],[1552896014559,["GJX@GJXAIOU",[[-1,2476,"可控"]],[2478,2478],[2476,2476]]],[1552896023514,["GJX@GJXAIOU",[[1,2476,"克隆，最好保证本地是空的"]],[2476,2476],[2488,2488]]],[1552896094776,[null,[[-1,777,"`"],[1,778,"i"],[-1,809,"\n"],[1,810,"`"],[-1,857,"s"],[1,858,"`"],[-1,871,"`"],[1,872,"\n"],[-1,2174,"参"],[1,2175,"\n"],[-1,2512,"\n"]],[777,777],[2512,2512]]],[1552896094776,[null,[[1,777,"`"],[-1,777,"i"],[1,809,"\n"],[-1,809,"`"],[1,857,"s"],[-1,857,"`"],[1,871,"`"],[-1,871,"\n"],[1,2174,"参"],[-1,2174,"\n"],[1,2512,"\n"]],[2512,2512],[777,777]]],[1552896037246,["GJX@GJXAIOU",[[1,2485,"仓库"]],[2485,2485],[2487,2487]]],[1552896066826,["GJX@GJXAIOU",[[1,2490,"；同样本地上传到GitHub上时候u"]],[2490,2490],[2508,2508]]],[1552896067915,["GJX@GJXAIOU",[[-1,2507,"u"]],[2508,2508],[2507,2507]]],[1552896077483,["GJX@GJXAIOU",[[1,2507,"最好保证新建的"]],[2507,2507],[2514,2514]]],[1552896078873,["GJX@GJXAIOU",[[-1,2511,"新建的"]],[2514,2514],[2511,2511]]],[1552896089525,["GJX@GJXAIOU",[[1,2511,"GitHub新建的仓库是空的；"]],[2511,2511],[2526,2526]]],[1552896454787,[null,[[-1,777,"`"],[1,778,"i"],[-1,809,"\n"],[1,810,"`"],[-1,857,"s"],[1,858,"`"],[-1,871,"`"],[1,872,"\n"],[-1,2174,"参"],[1,2175,"\n"],[-1,2550,"\n"]],[777,777],[2550,2550]]],[1552896454787,[null,[[1,777,"`"],[-1,777,"i"],[1,809,"\n"],[-1,809,"`"],[1,857,"s"],[-1,857,"`"],[1,871,"`"],[-1,871,"\n"],[1,2174,"参"],[-1,2174,"\n"],[1,2550,"\n"]],[2550,2550],[777,777]]],[1552896437568,["GJX@GJXAIOU",[[1,1242,"- 下面是使用Git的最小配置"]],[1242,1242],[1257,1257]]],[1552896440810,["GJX@GJXAIOU",[[1,1242,"         \n"]],[1241,1241],[1251,1251]]],[1552896444036,["GJX@GJXAIOU",[[1,1429,"\n"]],[1428,1428],[1429,1429]]],[1552896444167,["GJX@GJXAIOU",[[1,1430,"\n"]],[1429,1429],[1430,1430]]],[1552896514787,[null,[[-1,777,"`"],[1,778,"i"],[-1,809,"\n"],[1,810,"`"],[-1,857,"s"],[1,858,"`"],[-1,871,"`"],[1,872,"\n"],[-1,2201,"参"],[1,2202,"\n"],[-1,2577,"\n"]],[777,777],[2577,2577]]],[1552896514787,[null,[[1,777,"`"],[-1,777,"i"],[1,809,"\n"],[-1,809,"`"],[1,857,"s"],[-1,857,"`"],[1,871,"`"],[-1,871,"\n"],[1,2201,"参"],[-1,2201,"\n"],[1,2577,"\n"]],[2577,2577],[777,777]]],[1552896494987,["GJX@GJXAIOU",[[1,1328,"#配置user"]],[1328,1328],[1335,1335]]],[1552896497116,["GJX@GJXAIOU",[[-1,1331,"user"]],[1335,1335],[1331,1331]]],[1552896498596,["GJX@GJXAIOU",[[1,1331,"··"]],[1331,1331],[1333,1333]]],[1552896499918,["GJX@GJXAIOU",[[-1,1331,"··"]],[1333,1333],[1331,1331]]],[1552896500810,["GJX@GJXAIOU",[[1,1331,"``"]],[1331,1331],[1333,1333]]],[1552896504565,["GJX@GJXAIOU",[[1,1332,"user.,"]],[1332,1332],[1338,1338]]],[1552896505776,["GJX@GJXAIOU",[[-1,1337,","]],[1338,1338],[1337,1337]]],[1552896507183,["GJX@GJXAIOU",[[1,1337,"name"]],[1337,1337],[1341,1341]]],[1552896511313,["GJX@GJXAIOU",[[1,1342,"和1"]],[1342,1342],[1344,1344]]],[1552896512168,["GJX@GJXAIOU",[[-1,1343,"1"]],[1344,1344],[1343,1343]]],[1552896513388,["GJX@GJXAIOU",[[1,1343,"``"]],[1343,1343],[1345,1345]]],[1552896574790,[null,[[-1,777,"`"],[1,778,"i"],[-1,809,"\n"],[1,810,"`"],[-1,857,"s"],[1,858,"`"],[-1,871,"`"],[1,872,"\n"],[-1,2218,"参"],[1,2219,"\n"],[-1,2594,"\n"]],[777,777],[2594,2594]]],[1552896574790,[null,[[1,777,"`"],[-1,777,"i"],[1,809,"\n"],[-1,809,"`"],[1,857,"s"],[-1,857,"`"],[1,871,"`"],[-1,871,"\n"],[1,2218,"参"],[-1,2218,"\n"],[1,2594,"\n"]],[2594,2594],[777,777]]],[1552896516302,["GJX@GJXAIOU",[[1,1344,"user "]],[1344,1344],[1349,1349]]],[1552896516856,["GJX@GJXAIOU",[[-1,1348," "]],[1349,1349],[1348,1348]]],[1552896521229,["GJX@GJXAIOU",[[1,1348,".email"]],[1348,1348],[1354,1354]]],[1552896549691,["GJX@GJXAIOU",[[1,1355," qi"]],[1355,1355],[1358,1358]]],[1552896550490,["GJX@GJXAIOU",[[-1,1356,"qi"]],[1358,1358],[1356,1356]]],[1552896561062,["GJX@GJXAIOU",[[1,1356,"其中global表示随登录"]],[1356,1356],[1369,1369]]],[1552896564328,["GJX@GJXAIOU",[[-1,1366,"随登录"]],[1369,1369],[1366,1366]]],[1552896574243,["GJX@GJXAIOU",[[1,1366,"对登录用户的所有仓库有效"]],[1366,1366],[1378,1378]]],[1552896634795,[null,[[-1,777,"`"],[1,778,"i"],[-1,809,"\n"],[1,810,"`"],[-1,857,"s"],[1,858,"`"],[-1,871,"`"],[1,872,"\n"],[-1,2251,"参"],[1,2252,"\n"],[-1,2627,"\n"]],[777,777],[2627,2627]]],[1552896634795,[null,[[1,777,"`"],[-1,777,"i"],[1,809,"\n"],[-1,809,"`"],[1,857,"s"],[-1,857,"`"],[1,871,"`"],[-1,871,"\n"],[1,2251,"参"],[-1,2251,"\n"],[1,2627,"\n"]],[2627,2627],[777,777]]],[1552896582776,["GJX@GJXAIOU",[[-1,1416,"GitHub"]],[1422,1422],[1416,1416]]],[1552896587944,["GJX@GJXAIOU",[[1,1416,"随便"]],[1416,1416],[1418,1418]]],[1552896591312,["GJX@GJXAIOU",[[-1,1463,"GitHub"]],[1469,1469],[1463,1463]]],[1552896595190,["GJX@GJXAIOU",[[1,1463,"随便"]],[1463,1463],[1465,1465]]],[1552896622002,["GJX@GJXAIOU",[[1,1470,"```git"]],[1470,1470],[1476,1476]]],[1552896622401,["GJX@GJXAIOU",[[1,1479,"\n"]],[1476,1476],[1477,1477]]],[1552896622840,["GJX@GJXAIOU",[[1,1480,"\n"]],[1477,1477],[1478,1478]]],[1552896623020,["GJX@GJXAIOU",[[1,1481,"\n"]],[1478,1478],[1479,1479]]],[1552896623761,["GJX@GJXAIOU",[[1,1479,"```"]],[1479,1479],[1482,1482]]],[1552896634527,["GJX@GJXAIOU",[[1,1477,"git  config --local"]],[1477,1477],[1496,1496]]],[1552896694793,[null,[[-1,777,"`"],[1,778,"i"],[-1,809,"\n"],[1,810,"`"],[-1,857,"s"],[1,858,"`"],[-1,871,"`"],[1,872,"\n"],[-1,2274,"参"],[1,2275,"\n"],[-1,2650,"\n"]],[777,777],[2650,2650]]],[1552896694793,[null,[[1,777,"`"],[-1,777,"i"],[1,809,"\n"],[-1,809,"`"],[1,857,"s"],[-1,857,"`"],[1,871,"`"],[-1,871,"\n"],[1,2274,"参"],[-1,2274,"\n"],[1,2650,"\n"]],[2650,2650],[777,777]]],[1552896663164,["GJX@GJXAIOU",[[1,1477,"$ "],[1,1481,"config --local         local只对仓库有效。此也为缺省条件下的配置\n$ git"],[1,1491,"g"],[-1,1493,"c"],[1,1494,"bal        glob"],[1,1496,"对登录用户的所有仓库都有效\n$ git config --system        system对系统的所有用户都有效"]],[1477,1496],[1625,1625]]],[1552896664719,["GJX@GJXAIOU",[[-1,1477,"$"]],[1478,1478],[1477,1477]]],[1552896665512,["GJX@GJXAIOU",[[-1,1529,"$"]],[1530,1530],[1529,1529]]],[1552896666308,["GJX@GJXAIOU",[[-1,1577,"$"]],[1578,1578],[1577,1577]]],[1552896754799,[null,[[-1,777,"`"],[1,778,"i"],[-1,809,"\n"],[1,810,"`"],[-1,857,"s"],[1,858,"`"],[-1,871,"`"],[1,872,"\n"],[-1,2400,"参"],[1,2401,"\n"],[-1,2776,"\n"]],[777,777],[2776,2776]]],[1552896754799,[null,[[1,777,"`"],[-1,777,"i"],[1,809,"\n"],[-1,809,"`"],[1,857,"s"],[-1,857,"`"],[1,871,"`"],[-1,871,"\n"],[1,2400,"参"],[-1,2400,"\n"],[1,2776,"\n"]],[2776,2776],[777,777]]],[1552896700298,["GJX@GJXAIOU",[[1,1628,"****"]],[1628,1628],[1630,1630]]],[1552896702476,["GJX@GJXAIOU",[[-1,1628,"****"],[1,1632,"上面三个作用域是由一定的优先级的：local > global > system"]],[1628,1632],[1668,1668]]],[1552896753529,["GJX@GJXAIOU",[[-1,1162,"### （一）将GitHub上的库克隆到本地\n\n说明：默认文件地址为：E:\\Program\\GitHub\\\n         GitHub上的库为：Notes"]],[1162,1241],[1162,1162]]],[1552896814803,[null,[[-1,777,"`"],[1,778,"i"],[-1,809,"\n"],[1,810,"`"],[-1,857,"s"],[1,858,"`"],[-1,871,"`"],[1,872,"\n"],[-1,2361,"参"],[1,2362,"\n"],[-1,2737,"\n"]],[777,777],[2737,2737]]],[1552896814803,[null,[[1,777,"`"],[-1,777,"i"],[1,809,"\n"],[-1,809,"`"],[1,857,"s"],[-1,857,"`"],[1,871,"`"],[-1,871,"\n"],[1,2361,"参"],[-1,2361,"\n"],[1,2737,"\n"]],[2737,2737],[777,777]]],[1552896755834,["GJX@GJXAIOU",[[1,1590,"### （一）将GitHub上的库克隆到本地\n\n说明：默认文件地址为：E:\\Program\\GitHub\\\n         GitHub上的库为：Notes"]],[1590,1590],[1669,1669]]],[1552896757824,["GJX@GJXAIOU",[[1,1590,"\n"]],[1589,1589],[1590,1590]]],[1552896758019,["GJX@GJXAIOU",[[1,1591,"\n"]],[1590,1590],[1591,1591]]],[1552896758216,["GJX@GJXAIOU",[[1,1592,"\n"]],[1591,1591],[1592,1592]]],[1552896758400,["GJX@GJXAIOU",[[1,1593,"\n"]],[1592,1592],[1593,1593]]],[1552896763148,["GJX@GJXAIOU",[[-1,1163,"         "]],[1172,1172],[1163,1163]]],[1552896763401,["GJX@GJXAIOU",[[-1,1163,"\n"]],[1163,1163],[1162,1162]]],[1552896763633,["GJX@GJXAIOU",[[-1,1162,"\n"]],[1162,1162],[1161,1161]]],[1552896763805,["GJX@GJXAIOU",[[-1,1161,"\n"]],[1161,1161],[1160,1160]]],[1552896763968,["GJX@GJXAIOU",[[-1,1160,"\n"]],[1160,1160],[1159,1159]]],[1552896825376,[null,[[-1,777,"`"],[1,778,"i"],[-1,809,"\n"],[1,810,"`"],[-1,857,"s"],[1,858,"`"],[-1,871,"`"],[1,872,"\n"],[-1,2431,"参"],[1,2432,"\n"],[-1,2807,"\n"]],[777,777],[2807,2807]]],[1552896825376,[null,[[1,777,"`"],[-1,777,"i"],[1,809,"\n"],[-1,809,"`"],[1,857,"s"],[-1,857,"`"],[1,871,"`"],[-1,871,"\n"],[1,2431,"参"],[-1,2431,"\n"],[1,2807,"\n"]],[2807,2807],[777,777]]],[1552896817364,["GJX@GJXAIOU",[[1,1578,"# 建立Git仓库\n\n有两种方式可以建立Git仓库：\n\n*   用Git之前已经有项目代码，则使用以下两条命令建立Git仓库\n\n    $ cd 项目代码所在的文件夹\n    $ git init\n\n*   用Git之前还没有项目代码，使用下面三条命令创建git仓库\n\n    $ cd 某个文件夹\n    $ git init your_project #会在当前路径下创建和项目名称同名的文件夹\n    $ cd your_project\n\n然后就是在自己的仓库中开始写代码或者更改代码了。"]],[1578,1578],[1825,1825]]],[1552896822886,["GJX@GJXAIOU",[[1,1579,"#"]],[1579,1579],[1580,1580]]],[1552897485407,[null,[[-1,777,"`"],[1,778,"i"],[-1,809,"\n"],[1,810,"`"],[-1,857,"s"],[1,858,"`"],[-1,871,"`"],[1,872,"\n"],[-1,2679,"参"],[1,2680,"\n"],[-1,3055,"\n"]],[777,777],[3055,3055]]],[1552897485407,[null,[[1,777,"`"],[-1,777,"i"],[1,809,"\n"],[-1,809,"`"],[1,857,"s"],[-1,857,"`"],[1,871,"`"],[-1,871,"\n"],[1,2679,"参"],[-1,2679,"\n"],[1,3055,"\n"]],[3055,3055],[777,777]]],[1552897479891,["GJX@GJXAIOU",[[1,1829,"\n"]],[1828,1828],[1829,1829]]],[1552897480022,["GJX@GJXAIOU",[[1,1830,"\n"]],[1829,1829],[1830,1830]]],[1552897480181,["GJX@GJXAIOU",[[1,1831,"\n"]],[1830,1830],[1831,1831]]],[1552897480397,["GJX@GJXAIOU",[[1,1832,"\n"]],[1831,1831],[1832,1832]]],[1552897480577,["GJX@GJXAIOU",[[1,1833,"\n"]],[1832,1832],[1833,1833]]],[1552897545408,[null,[[-1,777,"`"],[1,778,"i"],[-1,809,"\n"],[1,810,"`"],[-1,857,"s"],[1,858,"`"],[-1,871,"`"],[1,872,"\n"],[-1,2684,"参"],[1,2685,"\n"],[-1,3060,"\n"]],[777,777],[3060,3060]]],[1552897545408,[null,[[1,777,"`"],[-1,777,"i"],[1,809,"\n"],[-1,809,"`"],[1,857,"s"],[-1,857,"`"],[1,871,"`"],[-1,871,"\n"],[1,2684,"参"],[-1,2684,"\n"],[1,3060,"\n"]],[3060,3060],[777,777]]],[1552897488381,["GJX@GJXAIOU",[[1,1829,"# 1 git文件重命名的命令\n\n> 前提是需要修改git仓库中已经commit了的文件\n\n*   假如想使文件`readme`，改名为 `readme.cpp`。可以使用下面的三条命令：\n\n$ mv readme readme.cpp\n$ git rm readme //注意与linux 的命令rm的区别\n$ git add readme.cpp\n最后可以使用git status查看修改后的仓库的状态\n\n*   上述是三条命令，还可以使用下面的一条命令达到上述三条命令的效果\n\n$ git mv readme readme.cpp\n\n*   如果想要撤销刚刚的修改，使用下面的命令：\n\n$ git reset --hard"]],[1829,1829],[2143,2143]]],[1552897490410,["GJX@GJXAIOU",[[-1,1847," "]],[1848,1848],[1847,1847]]],[1552897530562,["GJX@GJXAIOU",[[1,2147,"\n"]],[2144,2144],[2145,2145]]],[1552897531056,["GJX@GJXAIOU",[[1,2145,"# 2 如何使用git log系列命令查看git仓库的版本演变历史\n\n$ git branch -v 看本地有多少版本分支\n$ git log --all 查看所有分支的历史\n$ git log --all --graph 查看图形化的 log 地址\n$ git log --oneline 查看单行的简洁历史。\n$ git log --oneline -n4 查看最近的四条简洁历史。\n$ git log --oneline --all -n4 --graph 查看所有分支最近 4 条单行的图形化历史。\n$ git help --web log 跳转到git log 的帮助文档网页\n$ git log --oneline temp 只查看temp的分支的信息且oneline形式\n\n> 注意：\n> $ git log 仅仅是查看当前分支的更改历史\n> $ git log --all 查看所有分支的信息\n> $ git log --all --graph 上面的查看不容易看各个分支的关系，加上图形化容易看出各个分支的关系\n\n$ git checkout -b temp +从哪个commit开始新加一个分支(一大串数字,表示某一个commit中的数字 )\n$ git checkout master // 切换到master分支\n\n# 3 总结\n\n*   git命令的后面加的参数，有的时候是-，有的时候是- -\n*   单字母的参数是 ‘-’，非单字母的参数是’- -’"]],[2145,2145],[2785,2785]]],[1552897665441,[null,[[-1,777,"`"],[1,778,"i"],[-1,809,"\n"],[1,810,"`"],[-1,857,"s"],[1,858,"`"],[-1,871,"`"],[1,872,"\n"],[-1,3638,"参"],[1,3639,"\n"],[-1,4014,"\n"]],[777,777],[4014,4014]]],[1552897665441,[null,[[1,777,"`"],[-1,777,"i"],[1,809,"\n"],[-1,809,"`"],[1,857,"s"],[-1,857,"`"],[1,871,"`"],[-1,871,"\n"],[1,3638,"参"],[-1,3638,"\n"],[1,4014,"\n"]],[4014,4014],[777,777]]],[1552897609149,["GJX@GJXAIOU",[[1,2788,"\n"]],[2786,2786],[2787,2787]]],[1552897609308,["GJX@GJXAIOU",[[1,2789,"\n"]],[2787,2787],[2788,2788]]],[1552897609463,["GJX@GJXAIOU",[[1,2790,"\n"]],[2788,2788],[2789,2789]]],[1552897609575,["GJX@GJXAIOU",[[1,2791,"\n"]],[2789,2789],[2790,2790]]],[1552897611008,["GJX@GJXAIOU",[[1,2790,".git 文件目录\n\n*   COMMIT_EDITMSG\n*   cconfig,当前仓库的配置信息,core,用户,远程,分支等信息.(命令操作其实就是修改当前config文件)\n*   description （仓库的描述信息文件）\n*   HEAD （指向当前所在的分支），例如当前在 develop 分支，实际指向地址是 refs/heads/develop\n*   hooks [文件夹]\n*   index\n*   info [文件夹]\n*   logs [文件夹]\n*   objects [文件夹] （存放所有的 git 对象，对象哈希值前 2 位作为文件夹名称，后 38 位作为对象文件名, 可通过 git cat-file -p 命令，拼接文件夹名称+文件名查看）\n*   ORIG_HEAD\n*   refs\n    —heads,其实就是分支,里面包含所有的分支文件,文件存储了分支指向的指纹信息\n    —tags 叫做里程碑,或者版本发布用等记录重要版本.文件也存储了tag的指纹信息\n    —remotes,远程仓库信息"]],[2790,2790],[3267,3267]]],[1552897616955,["GJX@GJXAIOU",[[-1,1896," "],[1,1897," "],[1,2790,"## bendi"]],[2790,2790],[2798,2798]]],[1552897618460,["GJX@GJXAIOU",[[-1,2792," bendi"]],[2798,2798],[2792,2792]]],[1552897621075,["GJX@GJXAIOU",[[1,2792," 本地"]],[2792,2792],[2795,2795]]],[1552897625022,["GJX@GJXAIOU",[[1,3273,"    \n"]],[3272,3272],[3277,3277]]],[1552897625164,["GJX@GJXAIOU",[[-1,3273,"    "],[1,3277,"\n"]],[3277,3277],[3274,3274]]],[1552897625306,["GJX@GJXAIOU",[[1,3276,"\n"]],[3274,3274],[3275,3275]]],[1552897657633,["GJX@GJXAIOU",[[1,1923,"··"]],[1923,1923],[1925,1925]]],[1552897658957,["GJX@GJXAIOU",[[-1,1923,"··"]],[1925,1925],[1923,1923]]],[1552897661698,["GJX@GJXAIOU",[[1,1923,"```git"]],[1923,1923],[1929,1929]]],[1552897664466,["GJX@GJXAIOU",[[1,2010,"\n"]],[2009,2009],[2010,2010]]],[1552897665251,["GJX@GJXAIOU",[[1,2010,"```"]],[2010,2010],[2013,2013]]],[1552897725447,[null,[[-1,777,"`"],[1,778,"i"],[-1,809,"\n"],[1,810,"`"],[-1,857,"s"],[1,858,"`"],[-1,871,"`"],[1,872,"\n"],[-1,4137,"参"],[1,4138,"\n"],[-1,4513,"\n"]],[777,777],[4513,4513]]],[1552897725447,[null,[[1,777,"`"],[-1,777,"i"],[1,809,"\n"],[-1,809,"`"],[1,857,"s"],[-1,857,"`"],[1,871,"`"],[-1,871,"\n"],[1,4137,"参"],[-1,4137,"\n"],[1,4513,"\n"]],[4513,4513],[777,777]]],[1552897668528,["GJX@GJXAIOU",[[-1,1930,"$ "]],[1932,1932],[1930,1930]]],[1552897669162,["GJX@GJXAIOU",[[-1,1951,"$"]],[1952,1952],[1951,1951]]],[1552897669443,["GJX@GJXAIOU",[[-1,1950,"\n"]],[1951,1951],[1950,1950]]],[1552897670842,["GJX@GJXAIOU",[[1,1950,"\n"]],[1950,1950],[1951,1951]]],[1552897672185,["GJX@GJXAIOU",[[-1,1951," "]],[1952,1952],[1951,1951]]],[1552897673633,["GJX@GJXAIOU",[[-1,1985,"$ "]],[1987,1987],[1985,1985]]],[1552897678947,["GJX@GJXAIOU",[[-1,2074,"$"]],[2074,2075],[2074,2074]]],[1552897680967,["GJX@GJXAIOU",[[1,2075,"`"]],[2075,2075],[2076,2076]]],[1552897681938,["GJX@GJXAIOU",[[1,2100,"`"]],[2100,2100],[2101,2101]]],[1552897685953,["GJX@GJXAIOU",[[-1,2037,"*   "]],[2037,2041],[2037,2037]]],[1552897686788,["GJX@GJXAIOU",[[-1,2036,"\n"]],[2037,2037],[2036,2036]]],[1552897687969,["GJX@GJXAIOU",[[-1,2068,"\n"]],[2068,2068],[2067,2067]]],[1552897691561,["GJX@GJXAIOU",[[-1,2097,"*   "]],[2101,2101],[2097,2097]]],[1552897692700,["GJX@GJXAIOU",[[-1,2096,"\n"]],[2097,2097],[2096,2096]]],[1552897694908,["GJX@GJXAIOU",[[1,2096,"- "]],[2096,2096],[2098,2098]]],[1552897697881,["GJX@GJXAIOU",[[-1,1874,"*   "]],[1874,1878],[1874,1874]]],[1552897699312,["GJX@GJXAIOU",[[1,1874,"- "]],[1874,1874],[1876,1876]]],[1552897701662,["GJX@GJXAIOU",[[1,2094," \n"]],[2093,2093],[2095,2095]]],[1552897703368,["GJX@GJXAIOU",[[-1,2119,"\n"]],[2119,2119],[2118,2118]]],[1552897705631,["GJX@GJXAIOU",[[-1,2119,"$ "]],[2121,2121],[2119,2119]]],[1552897706828,["GJX@GJXAIOU",[[1,2119,"`"]],[2119,2119],[2120,2120]]],[1552897707826,["GJX@GJXAIOU",[[1,2136,"`"]],[2136,2136],[2137,2137]]],[1552897712731,["GJX@GJXAIOU",[[1,2174,"```"]],[2174,2174],[2177,2177]]],[1552897714589,["GJX@GJXAIOU",[[1,2486,"```"]],[2486,2486],[2489,2489]]],[1552897718586,["GJX@GJXAIOU",[[-1,2178,"$ "]],[2178,2180],[2178,2178]]],[1552897721852,["GJX@GJXAIOU",[[-1,2203,"$ "]],[2205,2205],[2203,2203]]],[1552897724560,["GJX@GJXAIOU",[[-1,2227,"$ "]],[2229,2229],[2227,2227]]],[1552897785443,[null,[[-1,777,"`"],[1,778,"i"],[-1,809,"\n"],[1,810,"`"],[-1,857,"s"],[1,858,"`"],[-1,871,"`"],[1,872,"\n"],[-1,4122,"参"],[1,4123,"\n"],[-1,4498,"\n"]],[777,777],[4498,4498]]],[1552897785443,[null,[[1,777,"`"],[-1,777,"i"],[1,809,"\n"],[-1,809,"`"],[1,857,"s"],[-1,857,"`"],[1,871,"`"],[-1,871,"\n"],[1,4122,"参"],[-1,4122,"\n"],[1,4498,"\n"]],[4498,4498],[777,777]]],[1552897726083,["GJX@GJXAIOU",[[-1,2263,"$ "]],[2265,2265],[2263,2263]]],[1552897727507,["GJX@GJXAIOU",[[-1,2292,"$ "]],[2294,2294],[2292,2292]]],[1552897729068,["GJX@GJXAIOU",[[-1,2327,"$ "]],[2329,2329],[2327,2327]]],[1552897731232,["GJX@GJXAIOU",[[-1,2385,"$ "]],[2387,2387],[2385,2385]]],[1552897732883,["GJX@GJXAIOU",[[-1,2423,"$ "]],[2425,2425],[2423,2423]]],[1552897739352,["GJX@GJXAIOU",[[-1,2480,"> $ "]],[2480,2484],[2480,2480]]],[1552897740608,["GJX@GJXAIOU",[[-1,2475," "]],[2476,2476],[2475,2475]]],[1552897741763,["GJX@GJXAIOU",[[1,2475,"- "]],[2475,2475],[2477,2477]]],[1552897743659,["GJX@GJXAIOU",[[-1,2474,">"]],[2475,2475],[2474,2474]]],[1552897747156,["GJX@GJXAIOU",[[1,2480,"  - "]],[2480,2480],[2484,2484]]],[1552897749893,["GJX@GJXAIOU",[[-1,2507,"> $ "]],[2507,2511],[2507,2507]]],[1552897752108,["GJX@GJXAIOU",[[-1,2531,"> $ "]],[2531,2535],[2531,2531]]],[1552897754422,["GJX@GJXAIOU",[[1,2507,"- "]],[2507,2507],[2509,2509]]],[1552897755843,["GJX@GJXAIOU",[[1,2533,"- "]],[2533,2533],[2535,2535]]],[1552897757389,["GJX@GJXAIOU",[[1,2507,"  "]],[2509,2509],[2511,2511]]],[1552897758320,["GJX@GJXAIOU",[[1,2535,"  "]],[2537,2537],[2539,2539]]],[1552897766354,["GJX@GJXAIOU",[[-1,2596,"$ "]],[2598,2598],[2596,2596]]],[1552897766836,["GJX@GJXAIOU",[[-1,2595,"\n"]],[2596,2596],[2595,2595]]],[1552897769324,["GJX@GJXAIOU",[[1,2595,"- "]],[2595,2595],[2597,2597]]],[1552897769957,["GJX@GJXAIOU",[[1,2595,"  "]],[2597,2597],[2599,2599]]],[1552897773936,["GJX@GJXAIOU",[[-1,2663,"$ "]],[2665,2665],[2663,2663]]],[1552897776295,["GJX@GJXAIOU",[[1,2663,"- "]],[2663,2663],[2665,2665]]],[1552897776633,["GJX@GJXAIOU",[[1,2663,"  "]],[2665,2665],[2667,2667]]],[1552897845444,[null,[[-1,777,"`"],[1,778,"i"],[-1,809,"\n"],[1,810,"`"],[-1,857,"s"],[1,858,"`"],[-1,871,"`"],[1,872,"\n"],[-1,4115,"参"],[1,4116,"\n"],[-1,4491,"\n"]],[777,777],[4491,4491]]],[1552897845444,[null,[[1,777,"`"],[-1,777,"i"],[1,809,"\n"],[-1,809,"`"],[1,857,"s"],[-1,857,"`"],[1,871,"`"],[-1,871,"\n"],[1,4115,"参"],[-1,4115,"\n"],[1,4491,"\n"]],[4491,4491],[777,777]]],[1552897786680,["GJX@GJXAIOU",[[-1,2703,"# 3 总结"]],[2703,2709],[2703,2703]]],[1552897787261,["GJX@GJXAIOU",[[-1,2704,"\n"]],[2703,2703],[2702,2702]]],[1552897787723,["GJX@GJXAIOU",[[-1,2703,"\n"]],[2702,2702],[2701,2701]]],[1552897797108,["GJX@GJXAIOU",[[1,3147," "]],[3147,3147],[3148,3148]]],[1552897798024,["GJX@GJXAIOU",[[1,3193," "]],[3193,3193],[3194,3194]]],[1552897800305,["GJX@GJXAIOU",[[-1,3147," "]],[3148,3148],[3147,3147]]],[1552897802476,["GJX@GJXAIOU",[[-1,3192," "]],[3193,3193],[3192,3192]]],[1552918701812,[null,[[-1,777,"`"],[1,778,"i"],[-1,809,"\n"],[1,810,"`"],[-1,857,"s"],[1,858,"`"],[-1,871,"`"],[1,872,"\n"],[-1,4107,"参"],[1,4108,"\n"],[-1,4483,"\n"]],[777,777],[4483,4483]]],[1552918701812,[null,[[1,777,"`"],[-1,777,"i"],[1,809,"\n"],[-1,809,"`"],[1,857,"s"],[-1,857,"`"],[1,871,"`"],[-1,871,"\n"],[1,4107,"参"],[-1,4107,"\n"],[1,4483,"\n"]],[4483,4483],[777,777]]],[1552918643156,["GJX@GJXAIOU",[[1,37,"\n"]],[37,37],[38,38]]],[1552918643614,["GJX@GJXAIOU",[[1,38,"\n"]],[38,38],[39,39]]],[1552918650253,["GJX@GJXAIOU",[[1,379,"er"]],[379,379],[381,381]]],[1552918651318,["GJX@GJXAIOU",[[-1,379,"er"]],[381,381],[379,379]]],[1552918652980,["GJX@GJXAIOU",[[1,379,"二、"]],[379,379],[381,381]]],[1552918661078,["GJX@GJXAIOU",[[1,527,"三、"]],[527,527],[529,529]]],[1552918666533,["GJX@GJXAIOU",[[1,884,"四、"]],[884,884],[886,886]]],[1552918670183,["GJX@GJXAIOU",[[1,1024,"五、"]],[1024,1024],[1026,1026]]],[1552918675514,["GJX@GJXAIOU",[[-1,1149,"二、"]],[1151,1151],[1149,1149]]],[1552918680134,["GJX@GJXAIOU",[[1,1149,"六、"]],[1149,1149],[1151,1151]]],[1552918683483,["GJX@GJXAIOU",[[-1,1156,"(连接到GitHub)"]],[1156,1167],[1156,1156]]],[1552918761788,[null,[[-1,783,"`"],[1,784,"i"],[-1,815,"\n"],[1,816,"`"],[-1,863,"s"],[1,864,"`"],[-1,877,"`"],[1,878,"\n"],[-1,4106,"参"],[1,4107,"\n"],[-1,4482,"\n"]],[783,783],[4482,4482]]],[1552918761788,[null,[[1,783,"`"],[-1,783,"i"],[1,815,"\n"],[-1,815,"`"],[1,863,"s"],[-1,863,"`"],[1,877,"`"],[-1,877,"\n"],[1,4106,"参"],[-1,4106,"\n"],[1,4482,"\n"]],[4482,4482],[783,783]]],[1552918711294,["GJX@GJXAIOU",[[-1,1577,"## 建立Git仓库\n\n有两种方式可以建立Git仓库：\n\n*   用Git之前已经有项目代码，则使用以下两条命令建立Git仓库\n\n    $ cd 项目代码所在的文件夹\n    $ git init\n\n*   用Git之前还没有项目代码，使用下面三条命令创建git仓库\n\n    $ cd 某个文件夹\n    $ git init your_project #会在当前路径下创建和项目名称同名的文件夹\n    $ cd your_project\n\n然后就是在自己的仓库中开始写代码或者更改代码了。"]],[1577,1825],[1577,1577]]],[1552918717904,["GJX@GJXAIOU",[[1,524,"\n"]],[522,522],[523,523]]],[1552918718795,["GJX@GJXAIOU",[[1,523,"## 建立Git仓库\n\n有两种方式可以建立Git仓库：\n\n*   用Git之前已经有项目代码，则使用以下两条命令建立Git仓库\n\n    $ cd 项目代码所在的文件夹\n    $ git init\n\n*   用Git之前还没有项目代码，使用下面三条命令创建git仓库\n\n    $ cd 某个文件夹\n    $ git init your_project #会在当前路径下创建和项目名称同名的文件夹\n    $ cd your_project\n\n然后就是在自己的仓库中开始写代码或者更改代码了。"]],[523,523],[771,771]]],[1552918721967,["GJX@GJXAIOU",[[-1,523,"## 建立Git仓库"]],[523,533],[523,523]]],[1552918722601,["GJX@GJXAIOU",[[-1,524,"\n"]],[523,523],[522,522]]],[1552918730037,["GJX@GJXAIOU",[[-1,1820,"1 "]],[1822,1822],[1820,1820]]],[1552918733827,["GJX@GJXAIOU",[[1,1820,"七、"]],[1820,1820],[1822,1822]]],[1552918736044,["GJX@GJXAIOU",[[1,1819,"#"]],[1822,1822],[1834,1834]]],[1552918742828,["GJX@GJXAIOU",[[-1,2132,"2"]],[2133,2133],[2132,2132]]],[1552918745904,["GJX@GJXAIOU",[[1,2132,"八、"]],[2132,2132],[2134,2134]]],[1552918747843,["GJX@GJXAIOU",[[1,2131,"#"]],[2134,2134],[2165,2165]]],[1552918752850,["GJX@GJXAIOU",[[1,2765,"就"]],[2765,2765],[2766,2766]]],[1552918753390,["GJX@GJXAIOU",[[-1,2765,"就"]],[2766,2766],[2765,2765]]],[1552918755337,["GJX@GJXAIOU",[[1,2765,"九、"]],[2765,2765],[2767,2767]]],[1552918821788,[null,[[-1,1021,"`"],[1,1022,"i"],[-1,1053,"\n"],[1,1054,"`"],[-1,1101,"s"],[1,1102,"`"],[-1,1115,"`"],[1,1116,"\n"],[-1,4101,"参"],[1,4102,"\n"],[-1,4477,"\n"]],[1021,1021],[4477,4477]]],[1552918821788,[null,[[1,1021,"`"],[-1,1021,"i"],[1,1053,"\n"],[-1,1053,"`"],[1,1101,"s"],[-1,1101,"`"],[1,1115,"`"],[-1,1115,"\n"],[1,4101,"参"],[-1,4101,"\n"],[1,4477,"\n"]],[4477,4477],[1021,1021]]],[1552918774125,["GJX@GJXAIOU",[[1,3250,"## 十、连接到GI"]],[3250,3250],[3260,3260]]],[1552918774964,["GJX@GJXAIOU",[[-1,3259,"I"]],[3260,3260],[3259,3259]]],[1552918775621,["GJX@GJXAIOU",[[1,3259,"i"]],[3259,3259],[3260,3260]]],[1552918776882,["GJX@GJXAIOU",[[-1,3258,"Gi"]],[3260,3260],[3258,3258]]],[1552918788932,["GJX@GJXAIOU",[[1,3258,"GitHub"]],[3258,3258],[3264,3264]]],[1552918790037,["GJX@GJXAIOU",[[1,3265,"\n"]],[3264,3264],[3265,3265]]],[1552918805866,["GJX@GJXAIOU",[[-1,4889,"## 版本回退\n\n分别修改几次hello.txt，并分别提交。\n**版本1：**\nhello\n\n**版本2：**\nhello\n\nworld\n**版本3：**\nhello\n\nworld\n\nthird\n**版本4：**\nhello\n\nworld\n\nthird\n\nlast\n版本4提交之前，输入`git status`\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20181028233812515.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NjbnVhY21oZHU=,size_27,color_FFFFFF,t_70)\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20181028234106489.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NjbnVhY21oZHU=,size_27,color_FFFFFF,t_70)\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20181028234356533.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NjbnVhY21oZHU=,size_27,color_FFFFFF,t_70)"]],[4889,5662],[4889,4889]]],[1552918812709,["GJX@GJXAIOU",[[1,3248,"## 版本回退\n\n分别修改几次hello.txt，并分别提交。\n**版本1：**\nhello\n\n**版本2：**\nhello\n\nworld\n**版本3：**\nhello\n\nworld\n\nthird\n**版本4：**\nhello\n\nworld\n\nthird\n\nlast\n版本4提交之前，输入`git status`\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20181028233812515.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NjbnVhY21oZHU=,size_27,color_FFFFFF,t_70)\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20181028234106489.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NjbnVhY21oZHU=,size_27,color_FFFFFF,t_70)\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20181028234356533.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NjbnVhY21oZHU=,size_27,color_FFFFFF,t_70)"]],[3248,3248],[4021,4021]]],[1552918817558,["GJX@GJXAIOU",[[1,3251,"十、"]],[3251,3251],[3253,3253]]],[1552918881796,[null,[[-1,1021,"`"],[1,1022,"i"],[-1,1053,"\n"],[1,1054,"`"],[-1,1101,"s"],[1,1102,"`"],[-1,1115,"`"],[1,1116,"\n"],[-1,4891,"参"],[1,4892,"\n"],[-1,5267,"\n"],[-1,5664,")"],[1,5665,"\n"]],[1021,1021],[5666,5666]]],[1552918881796,[null,[[1,1021,"`"],[-1,1021,"i"],[1,1053,"\n"],[-1,1053,"`"],[1,1101,"s"],[-1,1101,"`"],[1,1115,"`"],[-1,1115,"\n"],[1,4891,"参"],[-1,4891,"\n"],[1,5267,"\n"],[1,5663,")"],[-1,5663,"\n"]],[5666,5666],[1021,1021]]],[1552918822859,["GJX@GJXAIOU",[[1,4029,"一"]],[4029,4029],[4030,4030]]],[1552918824573,["GJX@GJXAIOU",[[1,4025,"\n"]],[4024,4024],[4025,4025]]],[1552918824710,["GJX@GJXAIOU",[[1,4026,"\n"]],[4025,4025],[4026,4026]]],[1552918841846,["GJX@GJXAIOU",[[1,44,"&GitHub"]],[44,44],[51,51]]],[1552918851902,["GJX@GJXAIOU",[[1,27,"&GitHub"]],[27,27],[34,34]]],[1552919121904,[null,[[-1,1035,"`"],[1,1036,"i"],[-1,1067,"\n"],[1,1068,"`"],[-1,1115,"s"],[1,1116,"`"],[-1,1129,"`"],[1,1130,"\n"],[-1,4908,"参"],[1,4909,"\n"],[-1,5284,"\n"],[-1,5681,")"],[1,5682,"\n"]],[1035,1035],[5683,5683]]],[1552919121904,[null,[[1,1035,"`"],[-1,1035,"i"],[1,1067,"\n"],[-1,1067,"`"],[1,1115,"s"],[-1,1115,"`"],[1,1129,"`"],[-1,1129,"\n"],[1,4908,"参"],[-1,4908,"\n"],[1,5284,"\n"],[1,5680,")"],[-1,5680,"\n"]],[5683,5683],[1035,1035]]],[1552919096859,["GJX@GJXAIOU",[[-1,301,"![Git结构]($resource/Git%E7%BB%93%E6%9E%84.png)"]],[301,346],[301,301]]],[1552919118087,["GJX@GJXAIOU",[[1,301,"![Git结构]($resource/Git%E7%BB%93%E6%9E%84.jpeg)"]],[301,301],[348,348]]]],null,"GJX@GJXAIOU"],["c9843515-d050-4a5b-bc5b-fb74c9419031",1564570171562,"Time:`2019-2-26`\nTheme: Git&GitHub使用说明\n\n---\n\n\n# Git&GitHub使用说明\n\n@toc\n\n\n## 一、下载安装\n\n1.首先在本地安装git，地址：[https://git-scm.com/downloads](https://git-scm.com/downloads)。下载安装好git工具。\n\n2.安装好Git 之后，两个快捷方式：\n- Git Bash   ：这是命令行模式（类似Linux）\n- Git UI      ：这是有界面的模式\n\n3.具体的安装过程详见文档Git&GitHub笔记（E:\\File\\书籍\\Git）\n\n4.Git结构\n![Git结构]($resource/Git%E7%BB%93%E6%9E%84.jpeg)\n\n5.查看git配置\ngit bash:`git config --list`\n\n\n\n## 二、在本地建立一个仓库\n- 例如在`E`盘下建立一个名为`practice`的仓库\n- 使用Git Bash\n```git\ncd e:\nmkdir practice\ncd practice\nls -la #看现在里面有多少文件\ngit init  #完成初始化，建立了一个空仓库\n```\n\n有两种方式可以建立Git仓库：\n\n*   用Git之前已经有项目代码，则使用以下两条命令建立Git仓库\n\n    $ cd 项目代码所在的文件夹\n    $ git init\n\n*   用Git之前还没有项目代码，使用下面三条命令创建git仓库\n\n    $ cd 某个文件夹\n    $ git init your_project #会在当前路径下创建和项目名称同名的文件夹\n    $ cd your_project\n\n然后就是在自己的仓库中开始写代码或者更改代码了。\n\n## 三、工作区和版本库区别：\n\n![工作区与版本库的区别]($resource/%E5%B7%A5%E4%BD%9C%E5%8C%BA%E4%B8%8E%E7%89%88%E6%9C%AC%E5%BA%93%E7%9A%84%E5%8C%BA%E5%88%AB.png)\n\n注：示例文件名`test.txt`\n- 当使用`git add `将文件提交到暂存区之后，仍然在本地继续修改；\n  - 使用：`git commit -m 'shuoming' `提交只是提交第一个修改的，后面修改的不提交\n  - 使用：`git commit -m 'shuoming' test.txt`提交的将是后面修改的版本；\n  - 使用：`git diff head -- test.txt`可以显示工作区和分支的区别\n\n\n\n## 四、撤销修改\n\n- 工作区修改之后，未提交到暂存区：`git checkout -- test.txt`,撤销工作区的修改；\n- 工作区修改后，已提交到暂存区：`git reset head test.txt`,撤销暂存区的修改，然后再使用上面的命令撤销工作区的修改；\n\n\n## 五、删除文件\n\n- 删除工作区文件：`rm test.txt`\n- 删除暂存区文件：(删除的修改操作，要提交)\n`git rm test.txt`\n`git commit -m &quot;delete test.txt&quot;`\n\n\n\n\n## 六、配置Git\n\n\n- 下面是使用Git的最小配置\n1.打开Git Bash :进入上面文件目录下；（或者在文件资源器中进入该目录，然后右键：Git Bash Here）\n#配置`user.name`和`user.email` 其中global表示对登录用户的所有仓库有效\n2.输入：`git config --global user.name '随便用户名'`\n\n3.输入：`git config --global user.email '随便邮箱'`\n```git\n git config --local         local只对仓库有效。此也为缺省条件下的配置\n git config --global        global对登录用户的所有仓库都有效\n git config --system        system对系统的所有用户都有效\n\n```\n上面三个作用域是由一定的优先级的：local > global > system\n\n\n\n\n## 七、git文件重命名的命令\n\n>前提是需要修改git仓库中已经commit了的文件\n\n- 假如想使文件`readme`，改名为 `readme.cpp`。可以使用下面的三条命令：\n```git\nmv readme readme.cpp\ngit rm readme //注意与linux 的命令rm的区别\ngit add readme.cpp\n```\n最后可以使用git status查看修改后的仓库的状态\n上述是三条命令，还可以使用下面的一条命令达到上述三条命令的效果\n `git mv readme readme.cpp`\n \n- 如果想要撤销刚刚的修改，使用下面的命令：\n`git reset --hard`\n\n\n## 八、 如何使用git log系列命令查看git仓库的版本演变历史\n```\ngit branch -v 看本地有多少版本分支\ngit log --all 查看所有分支的历史\ngit log --all --graph 查看图形化的 log 地址\ngit log --oneline 查看单行的简洁历史。\ngit log --oneline -n4 查看最近的四条简洁历史。\ngit log --oneline --all -n4 --graph 查看所有分支最近 4 条单行的图形化历史。\ngit help --web log 跳转到git log 的帮助文档网页\ngit log --oneline temp 只查看temp的分支的信息且oneline形式\n```\n- 注意：\n  - git log 仅仅是查看当前分支的更改历史\n  - git log --all 查看所有分支的信息\n  - git log --all --graph 上面的查看不容易看各个分支的关系，加上图形化容易看出各个分支的关系\n  - git checkout -b temp +从哪个commit开始新加一个分支(一大串数字,表示某一个commit中的数字 )\n  - git checkout master // 切换到master分支\n\n*   git命令的后面加的参数，有的时候是-，有的时候是- -\n*   单字母的参数是 ‘-’，非单字母的参数是’- -’\n\n\n\n\n## 九、本地.git 文件目录\n\n*   COMMIT_EDITMSG\n*   cconfig,当前仓库的配置信息,core,用户,远程,分支等信息.(命令操作其实就是修改当前config文件)\n*   description （仓库的描述信息文件）\n*   HEAD （指向当前所在的分支），例如当前在 develop 分支，实际指向地址是 refs/heads/develop\n*   hooks [文件夹]\n*   index\n*   info [文件夹]\n*   logs [文件夹]\n*   objects [文件夹] （存放所有的 git 对象，对象哈希值前 2 位作为文件夹名称，后 38 位作为对象文件名, 可通过 git cat-file -p 命令，拼接文件夹名称+文件名查看）\n*   ORIG_HEAD\n*   refs\n    —heads,其实就是分支,里面包含所有的分支文件,文件存储了分支指向的指纹信息\n    —tags 叫做里程碑,或者版本发布用等记录重要版本.文件也存储了tag的指纹信息\n    —remotes,远程仓库信息\n\n## 十、版本回退\n\n分别修改几次hello.txt，并分别提交。\n**版本1：**\nhello\n\n**版本2：**\nhello\n\nworld\n**版本3：**\nhello\n\nworld\n\nthird\n**版本4：**\nhello\n\nworld\n\nthird\n\nlast\n版本4提交之前，输入`git status`\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20181028233812515.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NjbnVhY21oZHU=,size_27,color_FFFFFF,t_70)\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20181028234106489.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NjbnVhY21oZHU=,size_27,color_FFFFFF,t_70)\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20181028234356533.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NjbnVhY21oZHU=,size_27,color_FFFFFF,t_70)\n\n\n\n## 十一、连接到GitHub\n\n### （一）将GitHub上的库克隆到本地\n\n说明：默认文件地址为：E:\\Program\\GitHub\\\n         GitHub上的库为：Notes\n4.将GitHub上已有的仓库下载到本地（这样可以在本地编辑）\n- 进入GitHub中所要同步的库页面，选择：`clone or download`，然后将URL复制下来：本人为：`https://github.com/GJXAIOU/Notes.git`\n![URL]($resource/URL.jpg)\n\n- 在Git Bash 中首先将目录切换到想要保存该库的目录下：然后输入\n`git clone https://github.com/GJXAIOU/Notes.git` (后面的网址就是刚才复制的)\n\n\n### （二）连接本地仓库与GitHub：\n\n1.在本地生成SSH Key :  在Git Bash中输入：`ssh-keygen -t rsa -C \"GitHub邮箱\"`，接下来**全部回车**确认，这样在电脑C盘本人用户名目录下就会出现一个文件：`.ssh`\n2.将上面文件中的`id_rsa`使用记事本打开，然后全选复制；\n3.将上面复制的秘钥，黏贴到GitHub中\n![搜狗截图20190226204854]($resource/%E6%90%9C%E7%8B%97%E6%88%AA%E5%9B%BE20190226204854.png)\n![搜狗截图20190226205651]($resource/%E6%90%9C%E7%8B%97%E6%88%AA%E5%9B%BE20190226205651.png)\n\n补充：github上新建仓库：`mimengfenxi`\n使用：\n```git\n#将本地的master分支与GitHub仓库分支进行关联\ngit remote add origin https://github.com/GJXAIOU/mimengfenxi.git #后面为仓库的SSH地址\n\n##这步不需要,这是移除关联\ngit remote rm origin https://github.com/GJXAIOU/mimengfenxi.git \n\n#注：origin是自己为远程GitHub仓库取的别名，主要是方便以后书写\n\n#下面的步骤只需要第一次的时候配置以下：\n步骤一：配置上面的公钥和私钥\n步骤二；输入：ssh -T -v git@github.com\n\n#这一步是指从本地直接生成库，而不是克隆的上传使用（一般也没有）\ngit pull --rebase origin master #相当于将GitHub创建仓库时候多创建的README.md拖下来\n\n#从GitHub往本地克隆，最好保证本地仓库是空的；同样本地上传到GitHub上时候最好保证GitHub新建的仓库是空的；\n\n#将本地的master分支上传到GitHub\ngit push -u origin master\n```\n\n### （三）上传同步本地文件（本地目录下文件有修改想同步到GitHub时候）\n1.在刚才的本地目录下，使用Git Bash ,输入：`Git init` 初始化本地git仓库；\n然后在改目录下会出现：`.git`这个文件  （只需要一次，以后不需要）\n\n2.进入修改目录下；输入：`git status` :查看多少文件未提交到仓库中（显示为红色的为未提交的）\n\n3.将上述所有文件提交到缓存区：`git add . `\n将特定文件提交大缓冲区：`git add hello.txt`\n\n4.再使用命令`git status`查看是不是都提交到了缓冲区（显示为绿色的是的）\n\n5.将缓冲区的文件提交到GitHub仓库中：`git commit -m \"想显示文件后面的的描述\"`\n\n6.最后一步：`git push`\n\n\n\n\n\n\n\n",[[1564570122252,["GJX@GJXAIOU",[[1,0,"\n"]],[0,0],[1,1]]],[1564570122363,["GJX@GJXAIOU",[[1,0,"\n"]],[1,1],[2,2]]],[1564570124725,["GJX@GJXAIOU",[[1,0,"-"]],[0,0],[1,1]]],[1564570124869,["GJX@GJXAIOU",[[1,0,"-"]],[1,1],[2,2]]],[1564570125031,["GJX@GJXAIOU",[[1,2,"-"]],[2,2],[3,3]]],[1564570143636,["GJX@GJXAIOU",[[1,4,"tagss"]],[4,4],[9,9]]],[1564570144227,["GJX@GJXAIOU",[[-1,8,"s"]],[9,9],[8,8]]],[1564570145037,["GJX@GJXAIOU",[[1,8,": "]],[8,8],[10,10]]],[1564570145338,["GJX@GJXAIOU",[[1,11,"\n"]],[10,10],[11,11]]],[1564570146244,["GJX@GJXAIOU",[[1,11,"="]],[11,11],[12,12]]],[1564570146748,["GJX@GJXAIOU",[[-1,11,"="]],[12,12],[11,11]]],[1564570151060,["GJX@GJXAIOU",[[1,11,"- Git"]],[11,11],[16,16]]],[1564570156802,["GJX@GJXAIOU",[[-1,34,"Theme: "]],[34,41],[34,34]]],[1564570160220,["GJX@GJXAIOU",[[1,34,"note: "]],[34,34],[40,40]]],[1564570166803,["GJX@GJXAIOU",[[-1,17,"Time"],[1,21,"d"]],[17,21],[18,18]]],[1564570167318,["GJX@GJXAIOU",[[1,18,"ate"]],[18,18],[21,21]]],[1564570170813,["GJX@GJXAIOU",[[1,22," "]],[22,22],[23,23]]],[1564570179974,["GJX@GJXAIOU",[[1,56,"syt"]],[56,56],[59,59]]],[1564570180594,["GJX@GJXAIOU",[[-1,57,"yt"]],[59,59],[57,57]]],[1564570183676,["GJX@GJXAIOU",[[1,57,"tyle: red"]],[57,57],[66,66]]],[1564570185500,["GJX@GJXAIOU",[[-1,62," red"]],[66,66],[62,62]]],[1564570185885,["GJX@GJXAIOU",[[1,62,"s"]],[62,62],[63,63]]],[1564570186458,["GJX@GJXAIOU",[[-1,62,"s"]],[63,63],[62,62]]],[1564570188083,["GJX@GJXAIOU",[[1,62," summer"]],[62,62],[69,69]]],[1564570189189,["GJX@GJXAIOU",[[1,70,"\n"]],[69,69],[70,70]]],[1564570293521,["GJX@GJXAIOU",[[1,71,"\n"]],[69,69],[70,70]]],[1564570298963,["GJX@GJXAIOU",[[1,70,"flag: red"]],[70,70],[79,79]]],[1564570314907,["GJX@GJXAIOU",[[-1,17,"date: `2019-2-26`"]],[17,34],[17,17]]],[1564570315962,["GJX@GJXAIOU",[[-1,17,"\n"]],[17,17],[16,16]]],[1564570405353,["GJX@GJXAIOU",[[1,62,"date: '2019-7-11'"]],[62,62],[79,79]]],[1564570516337,["GJX@GJXAIOU",[[-1,77,"1"]],[77,77],[76,76]]],[1564570517470,["GJX@GJXAIOU",[[1,76,"3"]],[76,76],[77,77]]],[1564570517626,["GJX@GJXAIOU",[[1,78,"1"]],[77,77],[78,78]]],[1564570518548,["GJX@GJXAIOU",[[-1,78,"1"]],[78,78],[77,77]]],[1564570531363,["GJX@GJXAIOU",[[1,37,",2019-7-11"]],[37,37],[47,47]]],[1564570532157,["GJX@GJXAIOU",[[-1,43,"7-11"]],[47,47],[43,43]]],[1564570533098,["GJX@GJXAIOU",[[1,43,"-"]],[43,43],[44,44]]],[1564570533505,["GJX@GJXAIOU",[[-1,43,"-"]],[44,44],[43,43]]],[1564570533931,["GJX@GJXAIOU",[[1,43,"20"]],[43,43],[45,45]]],[1564570534553,["GJX@GJXAIOU",[[-1,44,"0"]],[45,45],[44,44]]],[1564570536452,["GJX@GJXAIOU",[[1,44,"-11hao"]],[44,44],[50,50]]],[1564570537665,["GJX@GJXAIOU",[[-1,47,"hao"]],[50,50],[47,47]]],[1564570538583,["GJX@GJXAIOU",[[1,47,"号"]],[47,47],[48,48]]],[1564570546548,["GJX@GJXAIOU",[[-1,17,"note: Git&GitHub使用说明,2019-2-11号"]],[17,48],[17,17]]],[1564570547769,["GJX@GJXAIOU",[[-1,17,"\n"]],[17,17],[16,16]]],[1564570549579,["GJX@GJXAIOU",[[1,59,"\n"]],[58,58],[59,59]]],[1564570568024,["GJX@GJXAIOU",[[1,59,"note: Git&GitHub使用说明,2019-2-11号形成初稿，2019-7-31做最后的总结"]],[59,59],[110,110]]],[1564570794305,["GJX@GJXAIOU",[[1,59,"\n"]],[58,58],[59,59]]],[1564570802653,["GJX@GJXAIOU",[[1,59,"cus"]],[59,59],[62,62]]],[1564570815665,["GJX@GJXAIOU",[[1,31,"\n"]],[30,30],[31,31]]],[1564570816501,["GJX@GJXAIOU",[[1,31,"["]],[31,31],[32,32]]],[1564570817265,["GJX@GJXAIOU",[[-1,31,"["]],[32,32],[31,31]]],[1564570821313,["GJX@GJXAIOU",[[1,31,"pin: true"]],[31,31],[40,40]]],[1564570834141,["GJX@GJXAIOU",[[-1,4,"tags: \n- Git\nstyle: summer\n"],[-1,40,"\nflag: red\ndate: '2019-7-31'\ncus\nnote: Git&GitHub使用说明,2019-2-11号形成初稿，2019-7-31做最后的总结"]],[153,153],[42,42]]],[1564570842559,["GJX@GJXAIOU",[[-1,0,"---\npin: true\n---\n"]],[42,42],[24,24]]]],null,"GJX@GJXAIOU"],["a47f5b0d-4b42-4e1e-a730-bc991ae48e7d",1564570940788,"---\ntags: \n- Git\nstyle: summer\nflag: red\ndate: '2019-7-31'\n\nnote: Git&GitHub使用说明,2019-2-11号形成初稿，2019-7-31做最后的总结\n---\n\n\n# Git&GitHub使用说明\n\n@toc\n\n\n## 一、下载安装\n\n1.首先在本地安装git，地址：[https://git-scm.com/downloads](https://git-scm.com/downloads)。下载安装好git工具。\n\n2.安装好Git 之后，两个快捷方式：\n- Git Bash   ：这是命令行模式（类似Linux）\n- Git UI      ：这是有界面的模式\n\n3.具体的安装过程详见文档Git&GitHub笔记（E:\\File\\书籍\\Git）\n\n4.Git结构\n![Git结构]($resource/Git%E7%BB%93%E6%9E%84.jpeg)\n\n5.查看git配置\ngit bash:`git config --list`\n\n\n\n## 二、在本地建立一个仓库\n- 例如在`E`盘下建立一个名为`practice`的仓库\n- 使用Git Bash\n```git\ncd e:\nmkdir practice\ncd practice\nls -la #看现在里面有多少文件\ngit init  #完成初始化，建立了一个空仓库\n```\n\n有两种方式可以建立Git仓库：\n\n*   用Git之前已经有项目代码，则使用以下两条命令建立Git仓库\n\n    $ cd 项目代码所在的文件夹\n    $ git init\n\n*   用Git之前还没有项目代码，使用下面三条命令创建git仓库\n\n    $ cd 某个文件夹\n    $ git init your_project #会在当前路径下创建和项目名称同名的文件夹\n    $ cd your_project\n\n然后就是在自己的仓库中开始写代码或者更改代码了。\n\n## 三、工作区和版本库区别：\n\n![工作区与版本库的区别]($resource/%E5%B7%A5%E4%BD%9C%E5%8C%BA%E4%B8%8E%E7%89%88%E6%9C%AC%E5%BA%93%E7%9A%84%E5%8C%BA%E5%88%AB.png)\n\n注：示例文件名`test.txt`\n- 当使用`git add `将文件提交到暂存区之后，仍然在本地继续修改；\n  - 使用：`git commit -m 'shuoming' `提交只是提交第一个修改的，后面修改的不提交\n  - 使用：`git commit -m 'shuoming' test.txt`提交的将是后面修改的版本；\n  - 使用：`git diff head -- test.txt`可以显示工作区和分支的区别\n\n\n\n## 四、撤销修改\n\n- 工作区修改之后，未提交到暂存区：`git checkout -- test.txt`,撤销工作区的修改；\n- 工作区修改后，已提交到暂存区：`git reset head test.txt`,撤销暂存区的修改，然后再使用上面的命令撤销工作区的修改；\n\n\n## 五、删除文件\n\n- 删除工作区文件：`rm test.txt`\n- 删除暂存区文件：(删除的修改操作，要提交)\n`git rm test.txt`\n`git commit -m &quot;delete test.txt&quot;`\n\n\n\n\n## 六、配置Git\n\n\n- 下面是使用Git的最小配置\n1.打开Git Bash :进入上面文件目录下；（或者在文件资源器中进入该目录，然后右键：Git Bash Here）\n#配置`user.name`和`user.email` 其中global表示对登录用户的所有仓库有效\n2.输入：`git config --global user.name '随便用户名'`\n\n3.输入：`git config --global user.email '随便邮箱'`\n```git\n git config --local         local只对仓库有效。此也为缺省条件下的配置\n git config --global        global对登录用户的所有仓库都有效\n git config --system        system对系统的所有用户都有效\n\n```\n上面三个作用域是由一定的优先级的：local > global > system\n\n\n\n\n## 七、git文件重命名的命令\n\n>前提是需要修改git仓库中已经commit了的文件\n\n- 假如想使文件`readme`，改名为 `readme.cpp`。可以使用下面的三条命令：\n```git\nmv readme readme.cpp\ngit rm readme //注意与linux 的命令rm的区别\ngit add readme.cpp\n```\n最后可以使用git status查看修改后的仓库的状态\n上述是三条命令，还可以使用下面的一条命令达到上述三条命令的效果\n `git mv readme readme.cpp`\n \n- 如果想要撤销刚刚的修改，使用下面的命令：\n`git reset --hard`\n\n\n## 八、 如何使用git log系列命令查看git仓库的版本演变历史\n```\ngit branch -v 看本地有多少版本分支\ngit log --all 查看所有分支的历史\ngit log --all --graph 查看图形化的 log 地址\ngit log --oneline 查看单行的简洁历史。\ngit log --oneline -n4 查看最近的四条简洁历史。\ngit log --oneline --all -n4 --graph 查看所有分支最近 4 条单行的图形化历史。\ngit help --web log 跳转到git log 的帮助文档网页\ngit log --oneline temp 只查看temp的分支的信息且oneline形式\n```\n- 注意：\n  - git log 仅仅是查看当前分支的更改历史\n  - git log --all 查看所有分支的信息\n  - git log --all --graph 上面的查看不容易看各个分支的关系，加上图形化容易看出各个分支的关系\n  - git checkout -b temp +从哪个commit开始新加一个分支(一大串数字,表示某一个commit中的数字 )\n  - git checkout master // 切换到master分支\n\n*   git命令的后面加的参数，有的时候是-，有的时候是- -\n*   单字母的参数是 ‘-’，非单字母的参数是’- -’\n\n\n\n\n## 九、本地.git 文件目录\n\n*   COMMIT_EDITMSG\n*   cconfig,当前仓库的配置信息,core,用户,远程,分支等信息.(命令操作其实就是修改当前config文件)\n*   description （仓库的描述信息文件）\n*   HEAD （指向当前所在的分支），例如当前在 develop 分支，实际指向地址是 refs/heads/develop\n*   hooks [文件夹]\n*   index\n*   info [文件夹]\n*   logs [文件夹]\n*   objects [文件夹] （存放所有的 git 对象，对象哈希值前 2 位作为文件夹名称，后 38 位作为对象文件名, 可通过 git cat-file -p 命令，拼接文件夹名称+文件名查看）\n*   ORIG_HEAD\n*   refs\n    —heads,其实就是分支,里面包含所有的分支文件,文件存储了分支指向的指纹信息\n    —tags 叫做里程碑,或者版本发布用等记录重要版本.文件也存储了tag的指纹信息\n    —remotes,远程仓库信息\n\n## 十、版本回退\n\n分别修改几次hello.txt，并分别提交。\n**版本1：**\nhello\n\n**版本2：**\nhello\n\nworld\n**版本3：**\nhello\n\nworld\n\nthird\n**版本4：**\nhello\n\nworld\n\nthird\n\nlast\n版本4提交之前，输入`git status`\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20181028233812515.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NjbnVhY21oZHU=,size_27,color_FFFFFF,t_70)\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20181028234106489.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NjbnVhY21oZHU=,size_27,color_FFFFFF,t_70)\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20181028234356533.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NjbnVhY21oZHU=,size_27,color_FFFFFF,t_70)\n\n\n\n## 十一、连接到GitHub\n\n### （一）将GitHub上的库克隆到本地\n\n说明：默认文件地址为：E:\\Program\\GitHub\\\n         GitHub上的库为：Notes\n4.将GitHub上已有的仓库下载到本地（这样可以在本地编辑）\n- 进入GitHub中所要同步的库页面，选择：`clone or download`，然后将URL复制下来：本人为：`https://github.com/GJXAIOU/Notes.git`\n![URL]($resource/URL.jpg)\n\n- 在Git Bash 中首先将目录切换到想要保存该库的目录下：然后输入\n`git clone https://github.com/GJXAIOU/Notes.git` (后面的网址就是刚才复制的)\n\n\n### （二）连接本地仓库与GitHub：\n\n1.在本地生成SSH Key :  在Git Bash中输入：`ssh-keygen -t rsa -C \"GitHub邮箱\"`，接下来**全部回车**确认，这样在电脑C盘本人用户名目录下就会出现一个文件：`.ssh`\n2.将上面文件中的`id_rsa`使用记事本打开，然后全选复制；\n3.将上面复制的秘钥，黏贴到GitHub中\n![搜狗截图20190226204854]($resource/%E6%90%9C%E7%8B%97%E6%88%AA%E5%9B%BE20190226204854.png)\n![搜狗截图20190226205651]($resource/%E6%90%9C%E7%8B%97%E6%88%AA%E5%9B%BE20190226205651.png)\n\n补充：github上新建仓库：`mimengfenxi`\n使用：\n```git\n#将本地的master分支与GitHub仓库分支进行关联\ngit remote add origin https://github.com/GJXAIOU/mimengfenxi.git #后面为仓库的SSH地址\n\n##这步不需要,这是移除关联\ngit remote rm origin https://github.com/GJXAIOU/mimengfenxi.git \n\n#注：origin是自己为远程GitHub仓库取的别名，主要是方便以后书写\n\n#下面的步骤只需要第一次的时候配置以下：\n步骤一：配置上面的公钥和私钥\n步骤二；输入：ssh -T -v git@github.com\n\n#这一步是指从本地直接生成库，而不是克隆的上传使用（一般也没有）\ngit pull --rebase origin master #相当于将GitHub创建仓库时候多创建的README.md拖下来\n\n#从GitHub往本地克隆，最好保证本地仓库是空的；同样本地上传到GitHub上时候最好保证GitHub新建的仓库是空的；\n\n#将本地的master分支上传到GitHub\ngit push -u origin master\n```\n\n### （三）上传同步本地文件（本地目录下文件有修改想同步到GitHub时候）\n1.在刚才的本地目录下，使用Git Bash ,输入：`Git init` 初始化本地git仓库；\n然后在改目录下会出现：`.git`这个文件  （只需要一次，以后不需要）\n\n2.进入修改目录下；输入：`git status` :查看多少文件未提交到仓库中（显示为红色的为未提交的）\n\n3.将上述所有文件提交到缓存区：`git add . `\n将特定文件提交大缓冲区：`git add hello.txt`\n\n4.再使用命令`git status`查看是不是都提交到了缓冲区（显示为绿色的是的）\n\n5.将缓冲区的文件提交到GitHub仓库中：`git commit -m \"想显示文件后面的的描述\"`\n\n6.最后一步：`git push`\n\n\n\n\n\n\n\n",[[1564570908937,["GJX@GJXAIOU",[[1,4,"\n"]],[3,3],[4,4]]],[1564570913059,["GJX@GJXAIOU",[[1,4,"pin: tur"]],[4,4],[12,12]]],[1564570913713,["GJX@GJXAIOU",[[-1,10,"ur"]],[12,12],[10,10]]],[1564570914978,["GJX@GJXAIOU",[[1,10,"rue"]],[10,10],[13,13]]],[1564570931978,["GJX@GJXAIOU",[[1,69,"custom:GJXAIOU"]],[69,69],[83,83]]],[1564570935453,["GJX@GJXAIOU",[[1,76," "]],[76,76],[77,77]]]],null,"GJX@GJXAIOU"],["073ea396-44b8-4a2c-bf98-8e98e5635ace",1564571803947,"---\npin: true\ntags: \n- Git\nstyle: summer\nflag: red\ndate: '2019-7-31'\ncustom: GJXAIOU\nnote: Git&GitHub使用说明,2019-2-11号形成初稿，2019-7-31做最后的总结\n---\n\n\n# Git&GitHub使用说明\n\n@toc\n\n\n## 一、下载安装\n\n1.首先在本地安装git，地址：[https://git-scm.com/downloads](https://git-scm.com/downloads)。下载安装好git工具。\n\n2.安装好Git 之后，两个快捷方式：\n- Git Bash   ：这是命令行模式（类似Linux）\n- Git UI      ：这是有界面的模式\n\n3.具体的安装过程详见文档Git&GitHub笔记（E:\\File\\书籍\\Git）\n\n4.Git结构\n![Git结构]($resource/Git%E7%BB%93%E6%9E%84.jpeg)\n\n5.查看git配置\ngit bash:`git config --list`\n\n\n\n## 二、在本地建立一个仓库\n- 例如在`E`盘下建立一个名为`practice`的仓库\n- 使用Git Bash\n```git\ncd e:\nmkdir practice\ncd practice\nls -la #看现在里面有多少文件\ngit init  #完成初始化，建立了一个空仓库\n```\n\n有两种方式可以建立Git仓库：\n\n*   用Git之前已经有项目代码，则使用以下两条命令建立Git仓库\n\n    $ cd 项目代码所在的文件夹\n    $ git init\n\n*   用Git之前还没有项目代码，使用下面三条命令创建git仓库\n\n    $ cd 某个文件夹\n    $ git init your_project #会在当前路径下创建和项目名称同名的文件夹\n    $ cd your_project\n\n然后就是在自己的仓库中开始写代码或者更改代码了。\n\n## 三、工作区和版本库区别：\n\n![工作区与版本库的区别]($resource/%E5%B7%A5%E4%BD%9C%E5%8C%BA%E4%B8%8E%E7%89%88%E6%9C%AC%E5%BA%93%E7%9A%84%E5%8C%BA%E5%88%AB.png)\n\n注：示例文件名`test.txt`\n- 当使用`git add `将文件提交到暂存区之后，仍然在本地继续修改；\n  - 使用：`git commit -m 'shuoming' `提交只是提交第一个修改的，后面修改的不提交\n  - 使用：`git commit -m 'shuoming' test.txt`提交的将是后面修改的版本；\n  - 使用：`git diff head -- test.txt`可以显示工作区和分支的区别\n\n\n\n## 四、撤销修改\n\n- 工作区修改之后，未提交到暂存区：`git checkout -- test.txt`,撤销工作区的修改；\n- 工作区修改后，已提交到暂存区：`git reset head test.txt`,撤销暂存区的修改，然后再使用上面的命令撤销工作区的修改；\n\n\n## 五、删除文件\n\n- 删除工作区文件：`rm test.txt`\n- 删除暂存区文件：(删除的修改操作，要提交)\n`git rm test.txt`\n`git commit -m &quot;delete test.txt&quot;`\n\n\n\n\n## 六、配置Git\n\n\n- 下面是使用Git的最小配置\n1.打开Git Bash :进入上面文件目录下；（或者在文件资源器中进入该目录，然后右键：Git Bash Here）\n#配置`user.name`和`user.email` 其中global表示对登录用户的所有仓库有效\n2.输入：`git config --global user.name '随便用户名'`\n\n3.输入：`git config --global user.email '随便邮箱'`\n```git\n git config --local         local只对仓库有效。此也为缺省条件下的配置\n git config --global        global对登录用户的所有仓库都有效\n git config --system        system对系统的所有用户都有效\n\n```\n上面三个作用域是由一定的优先级的：local > global > system\n\n\n\n\n## 七、git文件重命名的命令\n\n>前提是需要修改git仓库中已经commit了的文件\n\n- 假如想使文件`readme`，改名为 `readme.cpp`。可以使用下面的三条命令：\n```git\nmv readme readme.cpp\ngit rm readme //注意与linux 的命令rm的区别\ngit add readme.cpp\n```\n最后可以使用git status查看修改后的仓库的状态\n上述是三条命令，还可以使用下面的一条命令达到上述三条命令的效果\n `git mv readme readme.cpp`\n \n- 如果想要撤销刚刚的修改，使用下面的命令：\n`git reset --hard`\n\n\n## 八、 如何使用git log系列命令查看git仓库的版本演变历史\n```\ngit branch -v 看本地有多少版本分支\ngit log --all 查看所有分支的历史\ngit log --all --graph 查看图形化的 log 地址\ngit log --oneline 查看单行的简洁历史。\ngit log --oneline -n4 查看最近的四条简洁历史。\ngit log --oneline --all -n4 --graph 查看所有分支最近 4 条单行的图形化历史。\ngit help --web log 跳转到git log 的帮助文档网页\ngit log --oneline temp 只查看temp的分支的信息且oneline形式\n```\n- 注意：\n  - git log 仅仅是查看当前分支的更改历史\n  - git log --all 查看所有分支的信息\n  - git log --all --graph 上面的查看不容易看各个分支的关系，加上图形化容易看出各个分支的关系\n  - git checkout -b temp +从哪个commit开始新加一个分支(一大串数字,表示某一个commit中的数字 )\n  - git checkout master // 切换到master分支\n\n*   git命令的后面加的参数，有的时候是-，有的时候是- -\n*   单字母的参数是 ‘-’，非单字母的参数是’- -’\n\n\n\n\n## 九、本地.git 文件目录\n\n*   COMMIT_EDITMSG\n*   cconfig,当前仓库的配置信息,core,用户,远程,分支等信息.(命令操作其实就是修改当前config文件)\n*   description （仓库的描述信息文件）\n*   HEAD （指向当前所在的分支），例如当前在 develop 分支，实际指向地址是 refs/heads/develop\n*   hooks [文件夹]\n*   index\n*   info [文件夹]\n*   logs [文件夹]\n*   objects [文件夹] （存放所有的 git 对象，对象哈希值前 2 位作为文件夹名称，后 38 位作为对象文件名, 可通过 git cat-file -p 命令，拼接文件夹名称+文件名查看）\n*   ORIG_HEAD\n*   refs\n    —heads,其实就是分支,里面包含所有的分支文件,文件存储了分支指向的指纹信息\n    —tags 叫做里程碑,或者版本发布用等记录重要版本.文件也存储了tag的指纹信息\n    —remotes,远程仓库信息\n\n## 十、版本回退\n\n分别修改几次hello.txt，并分别提交。\n**版本1：**\nhello\n\n**版本2：**\nhello\n\nworld\n**版本3：**\nhello\n\nworld\n\nthird\n**版本4：**\nhello\n\nworld\n\nthird\n\nlast\n版本4提交之前，输入`git status`\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20181028233812515.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NjbnVhY21oZHU=,size_27,color_FFFFFF,t_70)\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20181028234106489.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NjbnVhY21oZHU=,size_27,color_FFFFFF,t_70)\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20181028234356533.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NjbnVhY21oZHU=,size_27,color_FFFFFF,t_70)\n\n\n\n## 十一、连接到GitHub\n\n### （一）将GitHub上的库克隆到本地\n\n说明：默认文件地址为：E:\\Program\\GitHub\\\n         GitHub上的库为：Notes\n4.将GitHub上已有的仓库下载到本地（这样可以在本地编辑）\n- 进入GitHub中所要同步的库页面，选择：`clone or download`，然后将URL复制下来：本人为：`https://github.com/GJXAIOU/Notes.git`\n![URL]($resource/URL.jpg)\n\n- 在Git Bash 中首先将目录切换到想要保存该库的目录下：然后输入\n`git clone https://github.com/GJXAIOU/Notes.git` (后面的网址就是刚才复制的)\n\n\n### （二）连接本地仓库与GitHub：\n\n1.在本地生成SSH Key :  在Git Bash中输入：`ssh-keygen -t rsa -C \"GitHub邮箱\"`，接下来**全部回车**确认，这样在电脑C盘本人用户名目录下就会出现一个文件：`.ssh`\n2.将上面文件中的`id_rsa`使用记事本打开，然后全选复制；\n3.将上面复制的秘钥，黏贴到GitHub中\n![搜狗截图20190226204854]($resource/%E6%90%9C%E7%8B%97%E6%88%AA%E5%9B%BE20190226204854.png)\n![搜狗截图20190226205651]($resource/%E6%90%9C%E7%8B%97%E6%88%AA%E5%9B%BE20190226205651.png)\n\n补充：github上新建仓库：`mimengfenxi`\n使用：\n```git\n#将本地的master分支与GitHub仓库分支进行关联\ngit remote add origin https://github.com/GJXAIOU/mimengfenxi.git #后面为仓库的SSH地址\n\n##这步不需要,这是移除关联\ngit remote rm origin https://github.com/GJXAIOU/mimengfenxi.git \n\n#注：origin是自己为远程GitHub仓库取的别名，主要是方便以后书写\n\n#下面的步骤只需要第一次的时候配置以下：\n步骤一：配置上面的公钥和私钥\n步骤二；输入：ssh -T -v git@github.com\n\n#这一步是指从本地直接生成库，而不是克隆的上传使用（一般也没有）\ngit pull --rebase origin master #相当于将GitHub创建仓库时候多创建的README.md拖下来\n\n#从GitHub往本地克隆，最好保证本地仓库是空的；同样本地上传到GitHub上时候最好保证GitHub新建的仓库是空的；\n\n#将本地的master分支上传到GitHub\ngit push -u origin master\n```\n\n### （三）上传同步本地文件（本地目录下文件有修改想同步到GitHub时候）\n1.在刚才的本地目录下，使用Git Bash ,输入：`Git init` 初始化本地git仓库；\n然后在改目录下会出现：`.git`这个文件  （只需要一次，以后不需要）\n\n2.进入修改目录下；输入：`git status` :查看多少文件未提交到仓库中（显示为红色的为未提交的）\n\n3.将上述所有文件提交到缓存区：`git add . `\n将特定文件提交大缓冲区：`git add hello.txt`\n\n4.再使用命令`git status`查看是不是都提交到了缓冲区（显示为绿色的是的）\n\n5.将缓冲区的文件提交到GitHub仓库中：`git commit -m \"想显示文件后面的的描述\"`\n\n6.最后一步：`git push`\n\n\n\n\n\n\n\n",[[1564571801664,["GJX@GJXAIOU",[[-1,258,"下载安装好git工具"]],[258,268],[258,258]]],[1564571810015,["GJX@GJXAIOU",[[1,192,"软件下载"]],[192,192],[196,196]]],[1564571820081,["GJX@GJXAIOU",[[-1,192,"软件下载地址"]],[192,198],[192,192]]],[1564571823377,["GJX@GJXAIOU",[[-1,194,"https://git-scm.com/downloads"],[1,223,"软件下载地址"]],[194,223],[200,200]]],[1564571826994,["GJX@GJXAIOU",[[-1,192,"："]],[192,193],[192,192]]],[1564571844292,["GJX@GJXAIOU",[[-1,246,"两个快捷方式"],[1,252,"会有"]],[246,246],[248,248]]],[1564571847276,["GJX@GJXAIOU",[[1,248,"两个Git"]],[248,248],[253,253]]],[1564571847312,["GJX@GJXAIOU",[[1,250," "]],[253,253],[254,254]]],[1564571851298,["GJX@GJXAIOU",[[1,254,"形式"]],[254,254],[256,256]]],[1564571851335,["GJX@GJXAIOU",[[1,254," "]],[256,256],[257,257]]],[1564571861626,["GJX@GJXAIOU",[[1,289,"【】"]],[289,289],[291,291]]],[1564571922898,[null,[[-1,232,"。"],[1,246,"，"],[-1,256,"式"],[1,289,"）"],[-1,291,"）"]],[232,232],[291,291]]],[1564571922899,[null,[[1,232,"。"],[-1,245,"，"],[1,256,"式"],[-1,288,"）"],[1,291,"）"]],[291,291],[232,232]]],[1564571865135,["GJX@GJXAIOU",[[1,290,"推荐"]],[290,290],[292,292]]],[1564571982898,[null,[[-1,232,"。"],[1,246,"，"],[-1,256,"式"],[1,289,"）"],[-1,293,"）"]],[232,232],[293,293]]],[1564571982898,[null,[[1,232,"。"],[-1,245,"，"],[1,256,"式"],[-1,288,"）"],[1,293,"）"]],[293,293],[232,232]]],[1564571944838,["GJX@GJXAIOU",[[-1,330,"文档Git&GitHub笔记（E:\\File\\书籍\\Git）"],[1,360,"附录"]],[330,330],[332,332]]],[1564571953075,["GJX@GJXAIOU",[[1,5721,"### "]],[5721,5721],[5725,5725]]],[1564571955360,["GJX@GJXAIOU",[[-1,5721,"### "]],[5725,5725],[5721,5721]]],[1564571956361,["GJX@GJXAIOU",[[1,5721,"### "]],[5721,5721],[5725,5725]]],[1564571957704,["GJX@GJXAIOU",[[-1,5721,"### "]],[5725,5725],[5721,5721]]],[1564571962900,["GJX@GJXAIOU",[[1,5721,"# 附录："]],[5721,5721],[5726,5726]]],[1564571963129,["GJX@GJXAIOU",[[1,5730,"\n"]],[5726,5726],[5727,5727]]],[1564571963890,["GJX@GJXAIOU",[[1,5731,"\n"]],[5727,5727],[5728,5728]]],[1564571971285,["GJX@GJXAIOU",[[1,5728,"## 附录一：Git安装"]],[5728,5728],[5740,5740]]],[1564571971321,["GJX@GJXAIOU",[[1,5738," "]],[5740,5740],[5741,5741]]],[1564571979112,["GJX@GJXAIOU",[[-1,5744,"\n"]],[5743,5743],[5742,5742]]],[1564571982598,["GJX@GJXAIOU",[[1,5742,"TODO"]],[5742,5742],[5746,5746]]],[1564572010319,[null,[[-1,232,"。"],[1,246,"，"],[-1,256,"式"],[1,289,"）"],[-1,293,"）"],[1,330,"见"],[-1,332,"）"],[1,5721,"\n"],[-1,5746,"\n"]],[232,232],[5746,5746]]],[1564572010319,[null,[[1,232,"。"],[-1,245,"，"],[1,256,"式"],[-1,288,"）"],[1,293,"）"],[-1,329,"见"],[1,332,"）"],[-1,5720,"\n"],[1,5746,"\n"]],[5746,5746],[232,232]]],[1564571987422,["GJX@GJXAIOU",[[1,5746,"：Git和"]],[5746,5746],[5751,5751]]],[1564571987461,["GJX@GJXAIOU",[[1,5750," "]],[5751,5751],[5752,5752]]],[1564571993166,["GJX@GJXAIOU",[[1,5752,"GitHub"]],[5752,5752],[5758,5758]]],[1564571993204,["GJX@GJXAIOU",[[1,5752," "]],[5758,5758],[5759,5759]]],[1564572007961,["GJX@GJXAIOU",[[-1,330,"附录"]],[332,332],[330,330]]],[1564572070334,[null,[[-1,232,"。"],[1,246,"，"],[-1,256,"式"],[1,289,"）"],[-1,293,"）"],[-1,330,"）"],[1,331,"见"],[1,5719,"\n"],[-1,5757,"\n"]],[232,232],[5757,5757]]],[1564572070334,[null,[[1,232,"。"],[-1,245,"，"],[1,256,"式"],[-1,288,"）"],[1,293,"）"],[1,329,"）"],[-1,329,"见"],[-1,5718,"\n"],[1,5757,"\n"]],[5757,5757],[232,232]]],[1564572034420,["GJX@GJXAIOU",[[1,330,"[附录一：Git安装教程](#附录一：git-安装)"]],[330,330],[356,356]]],[1564572130335,[null,[[-1,232,"。"],[1,246,"，"],[-1,256,"式"],[1,289,"）"],[-1,293,"）"],[1,330,"见"],[-1,356,"）"],[1,5745,"\n"],[-1,5783,"\n"]],[232,232],[5783,5783]]],[1564572130335,[null,[[1,232,"。"],[-1,245,"，"],[1,256,"式"],[-1,288,"）"],[1,293,"）"],[-1,329,"见"],[1,356,"）"],[-1,5744,"\n"],[1,5783,"\n"]],[5783,5783],[232,232]]],[1564572084582,["GJX@GJXAIOU",[[1,363,"整体"]],[363,363],[365,365]]],[1564572084620,["GJX@GJXAIOU",[[1,363," "]],[365,365],[366,366]]],[1564572095627,["GJX@GJXAIOU",[[1,426,"（）"]],[426,426],[428,428]]],[1564572109261,["GJX@GJXAIOU",[[1,427,"以下默认命令输入出"]],[427,427],[436,436]]],[1564572109961,["GJX@GJXAIOU",[[-1,435,"出"]],[436,436],[435,435]]],[1564572117422,["GJX@GJXAIOU",[[1,435,"处为：GitBash"]],[435,435],[445,445]]],[1564572121953,["GJX@GJXAIOU",[[-1,447,"git bash:"]],[447,456],[447,447]]],[1564572707147,[null,[[-1,232,"。"],[1,246,"，"],[-1,256,"式"],[1,289,"）"],[-1,293,"）"],[1,330,"见"],[-1,356,"）"],[1,363,"t"],[-1,366,"t"],[1,426,"置"],[-1,446,"置:"],[1,448,"\n"],[1,5759,"\n"],[-1,5797,"\n"]],[232,232],[5797,5797]]],[1564572707147,[null,[[1,232,"。"],[-1,245,"，"],[1,256,"式"],[-1,288,"）"],[1,293,"）"],[-1,329,"见"],[1,356,"）"],[-1,362,"t"],[1,366,"t"],[-1,425,"置"],[1,446,"置:"],[-1,446,"\n"],[-1,5758,"\n"],[1,5797,"\n"]],[5797,5797],[232,232]]],[1564572692561,["GJX@GJXAIOU",[[-1,369,"![Git结构]($resource/Git%E7%BB%93%E6%9E%84.jpeg)"]],[369,415],[369,369]]],[1564572699530,["GJX@GJXAIOU",[[1,369,"![Git结构 2]($resource/Git%E7%BB%93%E6%9E%84%202.png)"]],[369,369],[421,421]]],[1564572827133,[null,[[-1,232,"。"],[1,246,"，"],[-1,256,"式"],[1,289,"）"],[-1,293,"）"],[1,330,"见"],[-1,356,"）"],[1,363,"t"],[-1,366,"t"],[1,369,"\n"],[-1,420,")"],[1,431,"置"],[-1,451,"置:"],[1,453,"\n"],[1,5764,"\n"],[-1,5802,"\n"]],[232,232],[5802,5802]]],[1564572827133,[null,[[1,232,"。"],[-1,245,"，"],[1,256,"式"],[-1,288,"）"],[1,293,"）"],[-1,329,"见"],[1,356,"）"],[-1,362,"t"],[1,366,"t"],[-1,368,"\n"],[1,420,")"],[-1,430,"置"],[1,451,"置:"],[-1,451,"\n"],[-1,5763,"\n"],[1,5802,"\n"]],[5802,5802],[232,232]]],[1564572802549,["GJX@GJXAIOU",[[1,300,"G"]],[300,300],[301,301]]],[1564572887132,[null,[[-1,232,"。"],[1,246,"，"],[-1,256,"式"],[1,289,"）"],[-1,293,"）"],[-1,300,"G"],[1,302,"G"],[1,331,"见"],[-1,357,"）"],[1,364,"t"],[-1,367,"t"],[1,370,"\n"],[-1,421,")"],[1,432,"置"],[-1,452,"置:"],[1,454,"\n"],[1,5765,"\n"],[-1,5803,"\n"]],[232,232],[5803,5803]]],[1564572887132,[null,[[1,232,"。"],[-1,245,"，"],[1,256,"式"],[-1,288,"）"],[1,293,"）"],[1,299,"G"],[-1,300,"G"],[-1,330,"见"],[1,357,"）"],[-1,363,"t"],[1,367,"t"],[-1,369,"\n"],[1,421,")"],[-1,431,"置"],[1,452,"置:"],[-1,452,"\n"],[-1,5764,"\n"],[1,5803,"\n"]],[5803,5803],[232,232]]],[1564572879698,["GJX@GJXAIOU",[[-1,521,"- 使用Git Bash"]],[521,533],[521,521]]],[1564572880152,["GJX@GJXAIOU",[[-1,521,"\n"]],[521,521],[520,520]]],[1564572947133,[null,[[-1,232,"。"],[1,246,"，"],[-1,256,"式"],[1,289,"）"],[-1,293,"）"],[-1,300,"G"],[1,302,"G"],[1,331,"见"],[-1,357,"）"],[1,364,"t"],[-1,367,"t"],[1,370,"\n"],[-1,421,")"],[1,432,"置"],[-1,452,"置:"],[1,454,"\n"],[1,5752,"\n"],[-1,5790,"\n"]],[232,232],[5790,5790]]],[1564572947133,[null,[[1,232,"。"],[-1,245,"，"],[1,256,"式"],[-1,288,"）"],[1,293,"）"],[1,299,"G"],[-1,300,"G"],[-1,330,"见"],[1,357,"）"],[-1,363,"t"],[1,367,"t"],[-1,369,"\n"],[1,421,")"],[-1,431,"置"],[1,452,"置:"],[-1,452,"\n"],[-1,5751,"\n"],[1,5790,"\n"]],[5790,5790],[232,232]]],[1564572923488,["GJX@GJXAIOU",[[-1,734,"\n"]],[734,734],[733,733]]],[1564572925847,["GJX@GJXAIOU",[[1,734,"\n"]],[733,733],[734,734]]],[1564572933126,["GJX@GJXAIOU",[[1,663,"··"]],[663,663],[665,665]]],[1564572934471,["GJX@GJXAIOU",[[-1,663,"··"]],[665,665],[663,663]]],[1564572935778,["GJX@GJXAIOU",[[1,663,"```"]],[663,663],[666,666]]],[1564572937538,["GJX@GJXAIOU",[[1,702,"```"]],[702,702],[705,705]]],[1564572939002,["GJX@GJXAIOU",[[1,740,"```"]],[740,740],[743,743]]],[1564572940338,["GJX@GJXAIOU",[[1,831,"```"]],[831,831],[834,834]]],[1564572943651,["GJX@GJXAIOU",[[1,666,"git"]],[666,666],[669,669]]],[1564572985594,[null,[[-1,232,"。"],[1,246,"，"],[-1,256,"式"],[1,289,"）"],[-1,293,"）"],[-1,300,"G"],[1,302,"G"],[1,331,"见"],[-1,357,"）"],[1,364,"t"],[-1,367,"t"],[1,370,"\n"],[-1,421,")"],[1,432,"置"],[-1,452,"置:"],[1,454,"\n"],[1,663,"\n"],[-1,669,"\n"],[1,705,"\n"],[-1,709,"\n"],[1,743,"\n"],[-1,746,"\n"],[1,834,"\n"],[-1,837,"\n"],[1,5767,"\n"],[-1,5805,"\n"]],[232,232],[5805,5805]]],[1564572985594,[null,[[1,232,"。"],[-1,245,"，"],[1,256,"式"],[-1,288,"）"],[1,293,"）"],[1,299,"G"],[-1,300,"G"],[-1,330,"见"],[1,357,"）"],[-1,363,"t"],[1,367,"t"],[-1,369,"\n"],[1,421,")"],[-1,431,"置"],[1,452,"置:"],[-1,452,"\n"],[-1,662,"\n"],[1,669,"\n"],[-1,704,"\n"],[1,709,"\n"],[-1,742,"\n"],[1,746,"\n"],[-1,833,"\n"],[1,837,"\n"],[-1,5766,"\n"],[1,5805,"\n"]],[5805,5805],[232,232]]],[1564572951473,["GJX@GJXAIOU",[[-1,672,"  "],[-1,690,"  "]],[674,704],[672,700]]],[1564572952500,["GJX@GJXAIOU",[[-1,670,"  "],[-1,688,"  "]],[672,700],[670,696]]],[1564572960690,["GJX@GJXAIOU",[[-1,741,"  "],[-1,754,"  "],[-1,804,"  "]],[742,825],[740,819]]],[1564572960897,["GJX@GJXAIOU",[[-1,739,"  "],[-1,752,"  "],[-1,800,"  "]],[740,819],[739,813]]],[1564572964204,["GJX@GJXAIOU",[[-1,739,"$"]],[740,740],[739,739]]],[1564572965720,["GJX@GJXAIOU",[[-1,749,"$ "]],[749,751],[749,749]]],[1564572966860,["GJX@GJXAIOU",[[-1,739," "]],[739,740],[739,739]]],[1564572968203,["GJX@GJXAIOU",[[-1,792,"$ "]],[792,794],[792,792]]],[1564572970316,["GJX@GJXAIOU",[[-1,670,"$ "]],[670,672],[670,670]]],[1564572971875,["GJX@GJXAIOU",[[-1,684,"$ "]],[684,686],[684,684]]],[1564572974409,["GJX@GJXAIOU",[[1,670,"  "],[1,684,"  "]],[670,692],[670,696]]],[1564572977641,["GJX@GJXAIOU",[[1,739,"  "],[1,748,"  "],[1,792,"  "]],[739,807],[739,813]]],[1564572981106,["GJX@GJXAIOU",[[1,528,"  "],[1,534,"  "],[1,549,"  "],[1,561,"  "],[1,580,"  "]],[528,605],[528,615]]],[1564573105610,[null,[[-1,232,"。"],[1,246,"，"],[-1,256,"式"],[1,289,"）"],[-1,293,"）"],[1,300," "],[-1,301," "],[1,331,"见"],[-1,357,"）"],[1,364,"t"],[-1,367,"t"],[1,370,"\n"],[-1,421,")"],[1,432,"置"],[-1,452,"置:"],[1,454,"\n"],[1,528,"\n"],[-1,530,"\n"],[1,536,"\n"],[-1,538,"\n"],[1,553,"\n"],[-1,555,"\n"],[1,567,"\n"],[-1,569,"\n"],[1,588,"\n"],[-1,590,"\n"],[1,673,"\n"],[-1,680," "],[-1,696," "],[1,697,"\n"],[1,707,"\n"],[-1,710,"\n"],[1,745,"\n"],[-1,749," "],[-1,760," "],[1,761,"\n"],[-1,806," "],[1,807,"\n"],[1,824,"\n"],[-1,827,"\n"],[1,5757,"\n"],[-1,5795,"\n"]],[232,232],[5795,5795]]],[1564573105610,[null,[[1,232,"。"],[-1,245,"，"],[1,256,"式"],[-1,288,"）"],[1,293,"）"],[-1,299," "],[1,301," "],[-1,330,"见"],[1,357,"）"],[-1,363,"t"],[1,367,"t"],[-1,369,"\n"],[1,421,")"],[-1,431,"置"],[1,452,"置:"],[-1,452,"\n"],[-1,527,"\n"],[1,530,"\n"],[-1,535,"\n"],[1,538,"\n"],[-1,552,"\n"],[1,555,"\n"],[-1,566,"\n"],[1,569,"\n"],[-1,587,"\n"],[1,590,"\n"],[-1,672,"\n"],[1,680," "],[1,695," "],[-1,695,"\n"],[-1,706,"\n"],[1,710,"\n"],[-1,744,"\n"],[1,749," "],[1,759," "],[-1,759,"\n"],[1,805," "],[-1,805,"\n"],[-1,823,"\n"],[1,827,"\n"],[-1,5756,"\n"],[1,5795,"\n"]],[5795,5795],[232,232]]],[1564573046985,["GJX@GJXAIOU",[[1,991,"git"]],[991,991],[994,994]]],[1564573047986,["GJX@GJXAIOU",[[-1,991,"git"]],[994,994],[991,991]]],[1564573585615,[null,[[-1,232,"。"],[1,246,"，"],[-1,256,"式"],[1,289,"）"],[-1,293,"）"],[1,300," "],[-1,301," "],[1,331,"见"],[-1,357,"）"],[1,364,"t"],[-1,367,"t"],[1,370,"\n"],[-1,421,")"],[1,432,"置"],[-1,452,"置:"],[1,454,"\n"],[1,528,"\n"],[-1,530,"\n"],[1,536,"\n"],[-1,538,"\n"],[1,553,"\n"],[-1,555,"\n"],[1,567,"\n"],[-1,569,"\n"],[1,588,"\n"],[-1,590,"\n"],[1,673,"\n"],[-1,680," "],[-1,696," "],[1,697,"\n"],[1,707,"\n"],[-1,710,"\n"],[1,745,"\n"],[-1,749," "],[-1,760," "],[1,761,"\n"],[-1,806," "],[1,807,"\n"],[1,824,"\n"],[-1,827,"\n"],[1,5757,"\n"],[-1,5795,"\n"]],[232,232],[5795,5795]]],[1564573585615,[null,[[1,232,"。"],[-1,245,"，"],[1,256,"式"],[-1,288,"）"],[1,293,"）"],[-1,299," "],[1,301," "],[-1,330,"见"],[1,357,"）"],[-1,363,"t"],[1,367,"t"],[-1,369,"\n"],[1,421,")"],[-1,431,"置"],[1,452,"置:"],[-1,452,"\n"],[-1,527,"\n"],[1,530,"\n"],[-1,535,"\n"],[1,538,"\n"],[-1,552,"\n"],[1,555,"\n"],[-1,566,"\n"],[1,569,"\n"],[-1,587,"\n"],[1,590,"\n"],[-1,672,"\n"],[1,680," "],[1,695," "],[-1,695,"\n"],[-1,706,"\n"],[1,710,"\n"],[-1,744,"\n"],[1,749," "],[1,759," "],[-1,759,"\n"],[1,805," "],[-1,805,"\n"],[-1,823,"\n"],[1,827,"\n"],[-1,5756,"\n"],[1,5795,"\n"]],[5795,5795],[232,232]]],[1564573552946,["GJX@GJXAIOU",[[-1,1519,"进入"],[1,1521,"q"]],[1519,1521],[1520,1520]]],[1564573553149,["GJX@GJXAIOU",[[1,1520,"i "]],[1520,1520],[1521,1521]]],[1564573553881,["GJX@GJXAIOU",[[1,1521,"huan"]],[1521,1521],[1525,1525]]],[1564573555344,["GJX@GJXAIOU",[[-1,1519,"qihuan"]],[1525,1525],[1519,1519]]],[1564573556846,["GJX@GJXAIOU",[[1,1519,"奇幻"]],[1519,1519],[1521,1521]]],[1564573557728,["GJX@GJXAIOU",[[-1,1519,"奇幻"]],[1521,1521],[1519,1519]]],[1564573560375,["GJX@GJXAIOU",[[1,1519,"切换到"]],[1519,1519],[1522,1522]]],[1564573564089,["GJX@GJXAIOU",[[-1,1522," 上"]],[1524,1524],[1522,1522]]],[1564573565246,["GJX@GJXAIOU",[[1,1522,"下"]],[1522,1522],[1523,1523]]],[1564573585392,["GJX@GJXAIOU",[[-1,1566,"#"]],[1566,1567],[1566,1566]]],[1564573645616,[null,[[-1,232,"。"],[1,246,"，"],[-1,256,"式"],[1,289,"）"],[-1,293,"）"],[1,300," "],[-1,301," "],[1,331,"见"],[-1,357,"）"],[1,364,"t"],[-1,367,"t"],[1,370,"\n"],[-1,421,")"],[1,432,"置"],[-1,452,"置:"],[1,454,"\n"],[1,528,"\n"],[-1,530,"\n"],[1,536,"\n"],[-1,538,"\n"],[1,553,"\n"],[-1,555,"\n"],[1,567,"\n"],[-1,569,"\n"],[1,588,"\n"],[-1,590,"\n"],[1,673,"\n"],[-1,680," "],[-1,696," "],[1,697,"\n"],[1,707,"\n"],[-1,710,"\n"],[1,745,"\n"],[-1,749," "],[-1,760," "],[1,761,"\n"],[-1,806," "],[1,807,"\n"],[1,824,"\n"],[-1,827,"\n"],[1,1519,":"],[-1,1523,"上"],[-1,1566,"#"],[1,1567,"\n"],[1,5757,"\n"],[-1,5795,"\n"]],[232,232],[5795,5795]]],[1564573645616,[null,[[1,232,"。"],[-1,245,"，"],[1,256,"式"],[-1,288,"）"],[1,293,"）"],[-1,299," "],[1,301," "],[-1,330,"见"],[1,357,"）"],[-1,363,"t"],[1,367,"t"],[-1,369,"\n"],[1,421,")"],[-1,431,"置"],[1,452,"置:"],[-1,452,"\n"],[-1,527,"\n"],[1,530,"\n"],[-1,535,"\n"],[1,538,"\n"],[-1,552,"\n"],[1,555,"\n"],[-1,566,"\n"],[1,569,"\n"],[-1,587,"\n"],[1,590,"\n"],[-1,672,"\n"],[1,680," "],[1,695," "],[-1,695,"\n"],[-1,706,"\n"],[1,710,"\n"],[-1,744,"\n"],[1,749," "],[1,759," "],[-1,759,"\n"],[1,805," "],[-1,805,"\n"],[-1,823,"\n"],[1,827,"\n"],[-1,1518,":"],[1,1523,"上"],[1,1565,"#"],[-1,1565,"\n"],[-1,5756,"\n"],[1,5795,"\n"]],[5795,5795],[232,232]]],[1564573605777,["GJX@GJXAIOU",[[-1,1661,"\n"]],[1661,1661],[1660,1660]]],[1564573629880,["GJX@GJXAIOU",[[-1,1859,"\n"]],[1859,1859],[1858,1858]]],[1564573635240,["GJX@GJXAIOU",[[-1,1488,"\n"]],[1488,1488],[1487,1487]]],[1564573638923,["GJX@GJXAIOU",[[-1,1475,"\n"]],[1474,1474],[1473,1473]]],[1564573639488,["GJX@GJXAIOU",[[-1,1474,"\n"]],[1473,1473],[1472,1472]]],[1564573705618,[null,[[-1,232,"。"],[1,246,"，"],[-1,256,"式"],[1,289,"）"],[-1,293,"）"],[1,300," "],[-1,301," "],[1,331,"见"],[-1,357,"）"],[1,364,"t"],[-1,367,"t"],[1,370,"\n"],[-1,421,")"],[1,432,"置"],[-1,452,"置:"],[1,454,"\n"],[1,528,"\n"],[-1,530,"\n"],[1,536,"\n"],[-1,538,"\n"],[1,553,"\n"],[-1,555,"\n"],[1,567,"\n"],[-1,569,"\n"],[1,588,"\n"],[-1,590,"\n"],[1,673,"\n"],[-1,680," "],[-1,696," "],[1,697,"\n"],[1,707,"\n"],[-1,710,"\n"],[1,745,"\n"],[-1,749," "],[-1,760," "],[1,761,"\n"],[-1,806," "],[1,807,"\n"],[1,824,"\n"],[-1,827,"\n"],[1,1516,":"],[-1,1520,"上"],[-1,1563,"#"],[1,1564,"\n"],[1,5752,"\n"],[-1,5790,"\n"]],[232,232],[5790,5790]]],[1564573705618,[null,[[1,232,"。"],[-1,245,"，"],[1,256,"式"],[-1,288,"）"],[1,293,"）"],[-1,299," "],[1,301," "],[-1,330,"见"],[1,357,"）"],[-1,363,"t"],[1,367,"t"],[-1,369,"\n"],[1,421,")"],[-1,431,"置"],[1,452,"置:"],[-1,452,"\n"],[-1,527,"\n"],[1,530,"\n"],[-1,535,"\n"],[1,538,"\n"],[-1,552,"\n"],[1,555,"\n"],[-1,566,"\n"],[1,569,"\n"],[-1,587,"\n"],[1,590,"\n"],[-1,672,"\n"],[1,680," "],[1,695," "],[-1,695,"\n"],[-1,706,"\n"],[1,710,"\n"],[-1,744,"\n"],[1,749," "],[1,759," "],[-1,759,"\n"],[1,805," "],[-1,805,"\n"],[-1,823,"\n"],[1,827,"\n"],[-1,1515,":"],[1,1520,"上"],[1,1562,"#"],[-1,1562,"\n"],[-1,5751,"\n"],[1,5790,"\n"]],[5790,5790],[232,232]]],[1564573683320,["GJX@GJXAIOU",[[-1,3227,"—"]],[3227,3228],[3227,3227]]],[1564573685258,["GJX@GJXAIOU",[[1,3227,"- "]],[3227,3227],[3229,3229]]],[1564573687499,["GJX@GJXAIOU",[[-1,3273,"—"]],[3273,3274],[3273,3273]]],[1564573687909,["GJX@GJXAIOU",[[1,3273,"- "]],[3273,3273],[3275,3275]]],[1564573690272,["GJX@GJXAIOU",[[-1,3320,"—"]],[3321,3321],[3320,3320]]],[1564573690795,["GJX@GJXAIOU",[[1,3320,"- "]],[3320,3320],[3322,3322]]],[1564573825619,[null,[[-1,232,"。"],[1,246,"，"],[-1,256,"式"],[1,289,"）"],[-1,293,"）"],[1,300," "],[-1,301," "],[1,331,"见"],[-1,357,"）"],[1,364,"t"],[-1,367,"t"],[1,370,"\n"],[-1,421,")"],[1,432,"置"],[-1,452,"置:"],[1,454,"\n"],[1,528,"\n"],[-1,530,"\n"],[1,536,"\n"],[-1,538,"\n"],[1,553,"\n"],[-1,555,"\n"],[1,567,"\n"],[-1,569,"\n"],[1,588,"\n"],[-1,590,"\n"],[1,673,"\n"],[-1,680," "],[-1,696," "],[1,697,"\n"],[1,707,"\n"],[-1,710,"\n"],[1,745,"\n"],[-1,749," "],[-1,760," "],[1,761,"\n"],[-1,806," "],[1,807,"\n"],[1,824,"\n"],[-1,827,"\n"],[1,1516,":"],[-1,1520,"上"],[-1,1563,"#"],[1,1564,"\n"],[1,3227," "],[-1,3229,"—"],[1,3270," "],[-1,3275,"—"],[1,3320," "],[-1,3322,"—"],[1,5755,"\n"],[-1,5793,"\n"],[1,5794,""]],[232,232],[5794,5794]]],[1564573825619,[null,[[1,232,"。"],[-1,245,"，"],[1,256,"式"],[-1,288,"）"],[1,293,"）"],[-1,299," "],[1,301," "],[-1,330,"见"],[1,357,"）"],[-1,363,"t"],[1,367,"t"],[-1,369,"\n"],[1,421,")"],[-1,431,"置"],[1,452,"置:"],[-1,452,"\n"],[-1,527,"\n"],[1,530,"\n"],[-1,535,"\n"],[1,538,"\n"],[-1,552,"\n"],[1,555,"\n"],[-1,566,"\n"],[1,569,"\n"],[-1,587,"\n"],[1,590,"\n"],[-1,672,"\n"],[1,680," "],[1,695," "],[-1,695,"\n"],[-1,706,"\n"],[1,710,"\n"],[-1,744,"\n"],[1,749," "],[1,759," "],[-1,759,"\n"],[1,805," "],[-1,805,"\n"],[-1,823,"\n"],[1,827,"\n"],[-1,1515,":"],[1,1520,"上"],[1,1562,"#"],[-1,1562,"\n"],[-1,3226," "],[1,3229,"—"],[-1,3269," "],[1,3275,"—"],[-1,3319," "],[1,3322,"—"],[-1,5754,"\n"],[1,5793,"\n"],[-1,5793,""]],[5794,5794],[232,232]]],[1564573821826,["GJX@GJXAIOU",[[-1,3403,"\n"]],[3403,3403],[3402,3402]]],[1564573823272,["GJX@GJXAIOU",[[-1,3402,"\n"]],[3403,3403],[3402,3402]]],[1564573824011,["GJX@GJXAIOU",[[1,3402," "]],[3402,3402],[3403,3403]]],[1564573885623,[null,[[-1,232,"。"],[1,246,"，"],[-1,256,"式"],[1,289,"）"],[-1,293,"）"],[-1,300,"G"],[1,302,"G"],[1,331,"见"],[-1,357,"）"],[1,364,"t"],[-1,367,"t"],[1,370,"\n"],[-1,421,")"],[1,432,"置"],[-1,452,"置:"],[1,454,"\n"],[-1,473,"\n"],[1,477,"\n"],[1,528,"\n"],[-1,530,"\n"],[1,536,"\n"],[-1,538,"\n"],[1,553,"\n"],[-1,555,"\n"],[1,567,"\n"],[-1,569,"\n"],[1,588,"\n"],[-1,590,"\n"],[1,673,"\n"],[-1,680," "],[-1,696," "],[1,697,"\n"],[1,707,"\n"],[-1,710,"\n"],[1,745,"\n"],[-1,749," "],[-1,760," "],[1,761,"\n"],[-1,806," "],[1,807,"\n"],[1,824,"\n"],[-1,827,"\n"],[1,1516,":"],[-1,1520,"上"],[-1,1563,"#"],[1,1564,"\n"],[1,3227," "],[-1,3229,"—"],[1,3270," "],[-1,3275,"—"],[1,3320," "],[-1,3322,"—"],[1,3402,"o"],[-1,3403,"\n"],[1,5754,"\n"],[-1,5792,"\n"],[1,5793,""]],[232,232],[5793,5793]]],[1564573885623,[null,[[1,232,"。"],[-1,245,"，"],[1,256,"式"],[-1,288,"）"],[1,293,"）"],[1,299,"G"],[-1,300,"G"],[-1,330,"见"],[1,357,"）"],[-1,363,"t"],[1,367,"t"],[-1,369,"\n"],[1,421,")"],[-1,431,"置"],[1,452,"置:"],[-1,452,"\n"],[1,472,"\n"],[-1,475,"\n"],[-1,527,"\n"],[1,530,"\n"],[-1,535,"\n"],[1,538,"\n"],[-1,552,"\n"],[1,555,"\n"],[-1,566,"\n"],[1,569,"\n"],[-1,587,"\n"],[1,590,"\n"],[-1,672,"\n"],[1,680," "],[1,695," "],[-1,695,"\n"],[-1,706,"\n"],[1,710,"\n"],[-1,744,"\n"],[1,749," "],[1,759," "],[-1,759,"\n"],[1,805," "],[-1,805,"\n"],[-1,823,"\n"],[1,827,"\n"],[-1,1515,":"],[1,1520,"上"],[1,1562,"#"],[-1,1562,"\n"],[-1,3226," "],[1,3229,"—"],[-1,3269," "],[1,3275,"—"],[-1,3319," "],[1,3322,"—"],[-1,3401,"o"],[1,3403,"\n"],[-1,5753,"\n"],[1,5792,"\n"],[-1,5792,""]],[5793,5793],[232,232]]],[1564573826921,["GJX@GJXAIOU",[[-1,3424,"\n"]],[3424,3424],[3423,3423]]],[1564573827287,["GJX@GJXAIOU",[[-1,3422,"o"]],[3423,3423],[3422,3422]]],[1564573829286,["GJX@GJXAIOU",[[1,3422,"o"]],[3422,3422],[3423,3423]]],[1564573830912,["GJX@GJXAIOU",[[-1,3423,"\n"]],[3424,3424],[3423,3423]]],[1564573831666,["GJX@GJXAIOU",[[1,3423," "]],[3423,3423],[3424,3424]]],[1564573834760,["GJX@GJXAIOU",[[-1,3430,"\n"]],[3431,3431],[3430,3430]]],[1564573834952,["GJX@GJXAIOU",[[-1,3429,"\n"]],[3430,3430],[3429,3429]]],[1564573835522,["GJX@GJXAIOU",[[1,3429," "]],[3429,3429],[3430,3430]]],[1564573837487,["GJX@GJXAIOU",[[-1,3451,"\n"]],[3451,3451],[3450,3450]]],[1564573838530,["GJX@GJXAIOU",[[-1,3450,"\n"]],[3451,3451],[3450,3450]]],[1564573839469,["GJX@GJXAIOU",[[1,3450,"  "]],[3450,3450],[3452,3452]]],[1564573840191,["GJX@GJXAIOU",[[-1,3458,"\n"]],[3459,3459],[3458,3458]]],[1564573840423,["GJX@GJXAIOU",[[-1,3457,"\n"]],[3458,3458],[3457,3457]]],[1564573841209,["GJX@GJXAIOU",[[1,3457,"  "]],[3457,3457],[3459,3459]]],[1564573842127,["GJX@GJXAIOU",[[-1,3465,"\n"]],[3466,3466],[3465,3465]]],[1564573842335,["GJX@GJXAIOU",[[-1,3464,"\n"]],[3465,3465],[3464,3464]]],[1564573842994,["GJX@GJXAIOU",[[1,3464," "]],[3464,3464],[3465,3465]]],[1564573850955,["GJX@GJXAIOU",[[-1,3387,"\n"]],[3387,3387],[3386,3386]]],[1564573881272,["GJX@GJXAIOU",[[-1,3469,"版本4提交之前，输入`git status`"]],[3469,3491],[3469,3469]]],[1564573883730,["GJX@GJXAIOU",[[1,3469,"以上"]],[3469,3469],[3471,3471]]],[1564573945627,[null,[[-1,232,"。"],[1,246,"，"],[-1,256,"式"],[1,289,"）"],[-1,293,"）"],[1,300," "],[-1,301," "],[1,331,"见"],[-1,357,"）"],[1,364,"t"],[-1,367,"t"],[1,370,"\n"],[-1,421,")"],[1,432,"置"],[-1,452,"置:"],[1,454,"\n"],[1,528,"\n"],[-1,530,"\n"],[1,536,"\n"],[-1,538,"\n"],[1,553,"\n"],[-1,555,"\n"],[1,567,"\n"],[-1,569,"\n"],[1,588,"\n"],[-1,590,"\n"],[1,673,"\n"],[-1,680," "],[-1,696," "],[1,697,"\n"],[1,707,"\n"],[-1,710,"\n"],[1,745,"\n"],[-1,749," "],[-1,760," "],[1,761,"\n"],[-1,806," "],[1,807,"\n"],[1,824,"\n"],[-1,827,"\n"],[1,1516,":"],[-1,1520,"上"],[-1,1563,"#"],[1,1564,"\n"],[1,3227," "],[-1,3229,"—"],[1,3270," "],[-1,3275,"—"],[1,3317," "],[-1,3322,"—"],[1,3401,"o"],[-1,3402,"\n"],[1,3421,"l"],[-1,3423,"\n"],[1,3428,"d"],[-1,3429,"\n"],[1,3449,"o"],[-1,3451,"\n"],[1,3456,"d"],[-1,3458,"\n"],[1,3463,"d"],[-1,3464,"\n"],[1,3469,"\n"],[-1,3471,"`"],[1,5730,"\n"],[-1,5768,"\n"],[1,5769,""]],[232,232],[5769,5769]]],[1564573945627,[null,[[1,232,"。"],[-1,245,"，"],[1,256,"式"],[-1,288,"）"],[1,293,"）"],[-1,299," "],[1,301," "],[-1,330,"见"],[1,357,"）"],[-1,363,"t"],[1,367,"t"],[-1,369,"\n"],[1,421,")"],[-1,431,"置"],[1,452,"置:"],[-1,452,"\n"],[-1,527,"\n"],[1,530,"\n"],[-1,535,"\n"],[1,538,"\n"],[-1,552,"\n"],[1,555,"\n"],[-1,566,"\n"],[1,569,"\n"],[-1,587,"\n"],[1,590,"\n"],[-1,672,"\n"],[1,680," "],[1,695," "],[-1,695,"\n"],[-1,706,"\n"],[1,710,"\n"],[-1,744,"\n"],[1,749," "],[1,759," "],[-1,759,"\n"],[1,805," "],[-1,805,"\n"],[-1,823,"\n"],[1,827,"\n"],[-1,1515,":"],[1,1520,"上"],[1,1562,"#"],[-1,1562,"\n"],[-1,3226," "],[1,3229,"—"],[-1,3269," "],[1,3275,"—"],[-1,3316," "],[1,3322,"—"],[-1,3400,"o"],[1,3402,"\n"],[-1,3420,"l"],[1,3423,"\n"],[-1,3427,"d"],[1,3429,"\n"],[-1,3448,"o"],[1,3451,"\n"],[-1,3455,"d"],[1,3458,"\n"],[-1,3462,"d"],[1,3464,"\n"],[-1,3468,"\n"],[1,3471,"`"],[-1,5729,"\n"],[1,5768,"\n"],[-1,5768,""]],[5769,5769],[232,232]]],[1564573900268,["GJX@GJXAIOU",[[1,3471,"版本都提交之后，如果想回到第二个版本："]],[3471,3471],[3490,3490]]],[1564573901049,["GJX@GJXAIOU",[[1,3491,"\n"]],[3490,3490],[3491,3491]]],[1564573938913,["GJX@GJXAIOU",[[1,3491,"1.首先输入：``"]],[3491,3491],[3500,3500]]],[1564573942188,["GJX@GJXAIOU",[[1,3499,"git rel"]],[3499,3499],[3506,3506]]],[1564573942890,["GJX@GJXAIOU",[[-1,3505,"l"]],[3506,3506],[3505,3505]]],[1564573945205,["GJX@GJXAIOU",[[1,3505,"folg"]],[3505,3505],[3509,3509]]],[1564574005632,[null,[[-1,232,"。"],[1,246,"，"],[-1,256,"式"],[1,289,"）"],[-1,293,"）"],[1,300," "],[-1,301," "],[1,331,"见"],[-1,357,"）"],[1,364,"t"],[-1,367,"t"],[1,370,"\n"],[-1,421,")"],[1,432,"置"],[-1,452,"置:"],[1,454,"\n"],[1,528,"\n"],[-1,530,"\n"],[1,536,"\n"],[-1,538,"\n"],[1,553,"\n"],[-1,555,"\n"],[1,567,"\n"],[-1,569,"\n"],[1,588,"\n"],[-1,590,"\n"],[1,673,"\n"],[-1,680," "],[-1,696," "],[1,697,"\n"],[1,707,"\n"],[-1,710,"\n"],[1,745,"\n"],[-1,749," "],[-1,760," "],[1,761,"\n"],[-1,806," "],[1,807,"\n"],[1,824,"\n"],[-1,827,"\n"],[1,1516,":"],[-1,1520,"上"],[-1,1563,"#"],[1,1564,"\n"],[1,3227," "],[-1,3229,"—"],[1,3270," "],[-1,3275,"—"],[1,3320," "],[-1,3322,"—"],[1,3401,"o"],[-1,3402,"\n"],[1,3421,"l"],[-1,3423,"\n"],[1,3428,"d"],[-1,3429,"\n"],[1,3449,"o"],[-1,3451,"\n"],[1,3456,"d"],[-1,3458,"\n"],[1,3463,"d"],[-1,3464,"\n"],[1,3469,"\n"],[-1,3490,"`"],[1,3491,"\n"],[-1,3510,"\n"],[1,5769,"\n"],[-1,5807,"\n"],[1,5808,""]],[232,232],[5808,5808]]],[1564574005632,[null,[[1,232,"。"],[-1,245,"，"],[1,256,"式"],[-1,288,"）"],[1,293,"）"],[-1,299," "],[1,301," "],[-1,330,"见"],[1,357,"）"],[-1,363,"t"],[1,367,"t"],[-1,369,"\n"],[1,421,")"],[-1,431,"置"],[1,452,"置:"],[-1,452,"\n"],[-1,527,"\n"],[1,530,"\n"],[-1,535,"\n"],[1,538,"\n"],[-1,552,"\n"],[1,555,"\n"],[-1,566,"\n"],[1,569,"\n"],[-1,587,"\n"],[1,590,"\n"],[-1,672,"\n"],[1,680," "],[1,695," "],[-1,695,"\n"],[-1,706,"\n"],[1,710,"\n"],[-1,744,"\n"],[1,749," "],[1,759," "],[-1,759,"\n"],[1,805," "],[-1,805,"\n"],[-1,823,"\n"],[1,827,"\n"],[-1,1515,":"],[1,1520,"上"],[1,1562,"#"],[-1,1562,"\n"],[-1,3226," "],[1,3229,"—"],[-1,3269," "],[1,3275,"—"],[-1,3319," "],[1,3322,"—"],[-1,3400,"o"],[1,3402,"\n"],[-1,3420,"l"],[1,3423,"\n"],[-1,3427,"d"],[1,3429,"\n"],[-1,3448,"o"],[1,3451,"\n"],[-1,3455,"d"],[1,3458,"\n"],[-1,3462,"d"],[1,3464,"\n"],[-1,3468,"\n"],[1,3490,"`"],[-1,3490,"\n"],[1,3510,"\n"],[-1,5768,"\n"],[1,5807,"\n"],[-1,5807,""]],[5808,5808],[232,232]]],[1564573987884,["GJX@GJXAIOU",[[1,3510," 会得到之后所有该文件的提交版本信息，其中最前面黄色字体为提交的版本号；"]],[3510,3510],[3546,3546]]],[1564573988993,["GJX@GJXAIOU",[[1,3547,"\n"]],[3546,3546],[3547,3547]]],[1564573999292,["GJX@GJXAIOU",[[1,3547,"注：可以使用"]],[3547,3547],[3553,3553]]],[1564574065636,[null,[[-1,232,"。"],[1,246,"，"],[-1,256,"式"],[1,289,"）"],[-1,293,"）"],[1,300," "],[-1,301," "],[1,331,"见"],[-1,357,"）"],[1,364,"t"],[-1,367,"t"],[1,370,"\n"],[-1,421,")"],[1,432,"置"],[-1,452,"置:"],[1,454,"\n"],[1,528,"\n"],[-1,530,"\n"],[1,536,"\n"],[-1,538,"\n"],[1,553,"\n"],[-1,555,"\n"],[1,567,"\n"],[-1,569,"\n"],[1,588,"\n"],[-1,590,"\n"],[1,673,"\n"],[-1,680," "],[-1,696," "],[1,697,"\n"],[1,707,"\n"],[-1,710,"\n"],[1,745,"\n"],[-1,749," "],[-1,760," "],[1,761,"\n"],[-1,806," "],[1,807,"\n"],[1,824,"\n"],[-1,827,"\n"],[1,1516,":"],[-1,1520,"上"],[-1,1563,"#"],[1,1564,"\n"],[1,3227," "],[-1,3229,"—"],[1,3270," "],[-1,3275,"—"],[1,3320," "],[-1,3322,"—"],[1,3401,"o"],[-1,3402,"\n"],[1,3421,"l"],[-1,3423,"\n"],[1,3428,"d"],[-1,3429,"\n"],[1,3449,"o"],[-1,3451,"\n"],[1,3456,"d"],[-1,3458,"\n"],[1,3463,"d"],[-1,3464,"\n"],[1,3469,"\n"],[-1,3490,"`"],[1,3491,"\n"],[-1,3554,"\n"],[1,5812,"\n"],[-1,5850,"\n"],[1,5851,""]],[232,232],[5851,5851]]],[1564574065636,[null,[[1,232,"。"],[-1,245,"，"],[1,256,"式"],[-1,288,"）"],[1,293,"）"],[-1,299," "],[1,301," "],[-1,330,"见"],[1,357,"）"],[-1,363,"t"],[1,367,"t"],[-1,369,"\n"],[1,421,")"],[-1,431,"置"],[1,452,"置:"],[-1,452,"\n"],[-1,527,"\n"],[1,530,"\n"],[-1,535,"\n"],[1,538,"\n"],[-1,552,"\n"],[1,555,"\n"],[-1,566,"\n"],[1,569,"\n"],[-1,587,"\n"],[1,590,"\n"],[-1,672,"\n"],[1,680," "],[1,695," "],[-1,695,"\n"],[-1,706,"\n"],[1,710,"\n"],[-1,744,"\n"],[1,749," "],[1,759," "],[-1,759,"\n"],[1,805," "],[-1,805,"\n"],[-1,823,"\n"],[1,827,"\n"],[-1,1515,":"],[1,1520,"上"],[1,1562,"#"],[-1,1562,"\n"],[-1,3226," "],[1,3229,"—"],[-1,3269," "],[1,3275,"—"],[-1,3319," "],[1,3322,"—"],[-1,3400,"o"],[1,3402,"\n"],[-1,3420,"l"],[1,3423,"\n"],[-1,3427,"d"],[1,3429,"\n"],[-1,3448,"o"],[1,3451,"\n"],[-1,3455,"d"],[1,3458,"\n"],[-1,3462,"d"],[1,3464,"\n"],[-1,3468,"\n"],[1,3490,"`"],[-1,3490,"\n"],[1,3554,"\n"],[-1,5811,"\n"],[1,5850,"\n"],[-1,5850,""]],[5851,5851],[232,232]]],[1564574006619,["GJX@GJXAIOU",[[1,3553,"``"]],[3553,3553],[3555,3555]]],[1564574010973,["GJX@GJXAIOU",[[1,3554,"git log"]],[3554,3554],[3561,3561]]],[1564574026491,["GJX@GJXAIOU",[[1,3562,"查看该文件每次提交的线性"]],[3562,3562],[3574,3574]]],[1564574028081,["GJX@GJXAIOU",[[-1,3572,"线性"]],[3574,3574],[3572,3572]]],[1564574032115,["GJX@GJXAIOU",[[1,3572,"详细信息（0"]],[3572,3572],[3578,3578]]],[1564574033832,["GJX@GJXAIOU",[[-1,3576,"（0"]],[3578,3578],[3576,3576]]],[1564574035044,["GJX@GJXAIOU",[[1,3576,"（）"]],[3576,3576],[3578,3578]]],[1564574050895,["GJX@GJXAIOU",[[1,3577,"包括：版本号，作者，时间等"]],[3577,3577],[3590,3590]]],[1564574061467,["GJX@GJXAIOU",[[1,3591,"，也可以使用：``"]],[3591,3591],[3600,3600]]],[1564574062963,["GJX@GJXAIOU",[[1,3599,"git "]],[3599,3599],[3603,3603]]],[1564574125633,[null,[[-1,232,"。"],[1,246,"，"],[-1,256,"式"],[1,289,"）"],[-1,293,"）"],[1,300," "],[-1,301," "],[1,331,"见"],[-1,357,"）"],[1,364,"t"],[-1,367,"t"],[1,370,"\n"],[-1,421,")"],[1,432,"置"],[-1,452,"置:"],[1,454,"\n"],[1,528,"\n"],[-1,530,"\n"],[1,536,"\n"],[-1,538,"\n"],[1,553,"\n"],[-1,555,"\n"],[1,567,"\n"],[-1,569,"\n"],[1,588,"\n"],[-1,590,"\n"],[1,673,"\n"],[-1,680," "],[-1,696," "],[1,697,"\n"],[1,707,"\n"],[-1,710,"\n"],[1,745,"\n"],[-1,749," "],[-1,760," "],[1,761,"\n"],[-1,806," "],[1,807,"\n"],[1,824,"\n"],[-1,827,"\n"],[1,1516,":"],[-1,1520,"上"],[-1,1563,"#"],[1,1564,"\n"],[1,3227," "],[-1,3229,"—"],[1,3270," "],[-1,3275,"—"],[1,3320," "],[-1,3322,"—"],[1,3401,"o"],[-1,3402,"\n"],[1,3421,"l"],[-1,3423,"\n"],[1,3428,"d"],[-1,3429,"\n"],[1,3449,"o"],[-1,3451,"\n"],[1,3456,"d"],[-1,3458,"\n"],[1,3463,"d"],[-1,3464,"\n"],[1,3469,"\n"],[-1,3490,"`"],[1,3491,"\n"],[-1,3605,"\n"],[1,5863,"\n"],[-1,5901,"\n"],[1,5902,""]],[232,232],[5902,5902]]],[1564574125633,[null,[[1,232,"。"],[-1,245,"，"],[1,256,"式"],[-1,288,"）"],[1,293,"）"],[-1,299," "],[1,301," "],[-1,330,"见"],[1,357,"）"],[-1,363,"t"],[1,367,"t"],[-1,369,"\n"],[1,421,")"],[-1,431,"置"],[1,452,"置:"],[-1,452,"\n"],[-1,527,"\n"],[1,530,"\n"],[-1,535,"\n"],[1,538,"\n"],[-1,552,"\n"],[1,555,"\n"],[-1,566,"\n"],[1,569,"\n"],[-1,587,"\n"],[1,590,"\n"],[-1,672,"\n"],[1,680," "],[1,695," "],[-1,695,"\n"],[-1,706,"\n"],[1,710,"\n"],[-1,744,"\n"],[1,749," "],[1,759," "],[-1,759,"\n"],[1,805," "],[-1,805,"\n"],[-1,823,"\n"],[1,827,"\n"],[-1,1515,":"],[1,1520,"上"],[1,1562,"#"],[-1,1562,"\n"],[-1,3226," "],[1,3229,"—"],[-1,3269," "],[1,3275,"—"],[-1,3319," "],[1,3322,"—"],[-1,3400,"o"],[1,3402,"\n"],[-1,3420,"l"],[1,3423,"\n"],[-1,3427,"d"],[1,3429,"\n"],[-1,3448,"o"],[1,3451,"\n"],[-1,3455,"d"],[1,3458,"\n"],[-1,3462,"d"],[1,3464,"\n"],[-1,3468,"\n"],[1,3490,"`"],[-1,3490,"\n"],[1,3605,"\n"],[-1,5862,"\n"],[1,5901,"\n"],[-1,5901,""]],[5902,5902],[232,232]]],[1564574068732,["GJX@GJXAIOU",[[1,3603,"loh"]],[3603,3603],[3606,3606]]],[1564574069175,["GJX@GJXAIOU",[[-1,3605,"h"]],[3606,3606],[3605,3605]]],[1564574075930,["GJX@GJXAIOU",[[1,3605,"g --pretty "]],[3605,3605],[3616,3616]]],[1564574077223,["GJX@GJXAIOU",[[-1,3615," "]],[3616,3616],[3615,3615]]],[1564574078268,["GJX@GJXAIOU",[[1,3615,"= "]],[3615,3615],[3617,3617]]],[1564574078800,["GJX@GJXAIOU",[[-1,3616," "]],[3617,3617],[3616,3616]]],[1564574080441,["GJX@GJXAIOU",[[1,3616,"online"]],[3616,3616],[3622,3622]]],[1564574090493,["GJX@GJXAIOU",[[1,3580,"w "]],[3580,3580],[3581,3581]]],[1564574090691,["GJX@GJXAIOU",[[1,3581,"an"]],[3581,3581],[3583,3583]]],[1564574092959,["GJX@GJXAIOU",[[-1,3580,"wan "]],[3583,3583],[3580,3580]]],[1564574097996,["GJX@GJXAIOU",[[1,3580,"完整的"]],[3580,3580],[3583,3583]]],[1564574117817,["GJX@GJXAIOU",[[1,3626,"按行显示以上信息；"]],[3626,3626],[3635,3635]]],[1564574185635,[null,[[-1,232,"。"],[1,246,"，"],[-1,256,"式"],[1,289,"）"],[-1,293,"）"],[1,300," "],[-1,301," "],[1,331,"见"],[-1,357,"）"],[1,364,"t"],[-1,367,"t"],[1,370,"\n"],[-1,421,")"],[1,432,"置"],[-1,452,"置:"],[1,454,"\n"],[1,528,"\n"],[-1,530,"\n"],[1,536,"\n"],[-1,538,"\n"],[1,553,"\n"],[-1,555,"\n"],[1,567,"\n"],[-1,569,"\n"],[1,588,"\n"],[-1,590,"\n"],[1,673,"\n"],[-1,680," "],[-1,696," "],[1,697,"\n"],[1,707,"\n"],[-1,710,"\n"],[1,745,"\n"],[-1,749," "],[-1,760," "],[1,761,"\n"],[-1,806," "],[1,807,"\n"],[1,824,"\n"],[-1,827,"\n"],[1,1516,":"],[-1,1520,"上"],[-1,1563,"#"],[1,1564,"\n"],[1,3227," "],[-1,3229,"—"],[1,3270," "],[-1,3275,"—"],[1,3320," "],[-1,3322,"—"],[1,3401,"o"],[-1,3402,"\n"],[1,3421,"l"],[-1,3423,"\n"],[1,3428,"d"],[-1,3429,"\n"],[1,3449,"o"],[-1,3451,"\n"],[1,3456,"d"],[-1,3458,"\n"],[1,3463,"d"],[-1,3464,"\n"],[1,3469,"\n"],[-1,3490,"`"],[1,3491,"\n"],[-1,3636,"\n"],[1,5894,"\n"],[-1,5932,"\n"],[1,5933,""]],[232,232],[5933,5933]]],[1564574185635,[null,[[1,232,"。"],[-1,245,"，"],[1,256,"式"],[-1,288,"）"],[1,293,"）"],[-1,299," "],[1,301," "],[-1,330,"见"],[1,357,"）"],[-1,363,"t"],[1,367,"t"],[-1,369,"\n"],[1,421,")"],[-1,431,"置"],[1,452,"置:"],[-1,452,"\n"],[-1,527,"\n"],[1,530,"\n"],[-1,535,"\n"],[1,538,"\n"],[-1,552,"\n"],[1,555,"\n"],[-1,566,"\n"],[1,569,"\n"],[-1,587,"\n"],[1,590,"\n"],[-1,672,"\n"],[1,680," "],[1,695," "],[-1,695,"\n"],[-1,706,"\n"],[1,710,"\n"],[-1,744,"\n"],[1,749," "],[1,759," "],[-1,759,"\n"],[1,805," "],[-1,805,"\n"],[-1,823,"\n"],[1,827,"\n"],[-1,1515,":"],[1,1520,"上"],[1,1562,"#"],[-1,1562,"\n"],[-1,3226," "],[1,3229,"—"],[-1,3269," "],[1,3275,"—"],[-1,3319," "],[1,3322,"—"],[-1,3400,"o"],[1,3402,"\n"],[-1,3420,"l"],[1,3423,"\n"],[-1,3427,"d"],[1,3429,"\n"],[-1,3448,"o"],[1,3451,"\n"],[-1,3455,"d"],[1,3458,"\n"],[-1,3462,"d"],[1,3464,"\n"],[-1,3468,"\n"],[1,3490,"`"],[-1,3490,"\n"],[1,3636,"\n"],[-1,5893,"\n"],[1,5932,"\n"],[-1,5932,""]],[5933,5933],[232,232]]],[1564574134584,["GJX@GJXAIOU",[[1,3636,"\n"]],[3635,3635],[3636,3636]]],[1564574162332,["GJX@GJXAIOU",[[1,3636,"2.输入：1"]],[3636,3636],[3642,3642]]],[1564574163239,["GJX@GJXAIOU",[[-1,3641,"1"]],[3642,3642],[3641,3641]]],[1564574163586,["GJX@GJXAIOU",[[1,3641,"``"]],[3641,3641],[3643,3643]]],[1564574176221,["GJX@GJXAIOU",[[1,3642,"git reset --haed"]],[3642,3642],[3658,3658]]],[1564574177272,["GJX@GJXAIOU",[[-1,3656,"ed"]],[3658,3658],[3656,3656]]],[1564574184274,["GJX@GJXAIOU",[[1,3656,"rd 第二次提交"]],[3656,3656],[3664,3664]]],[1564574245633,[null,[[-1,232,"。"],[1,246,"，"],[-1,256,"式"],[1,289,"）"],[-1,293,"）"],[1,300," "],[-1,301," "],[1,331,"见"],[-1,357,"）"],[1,364,"t"],[-1,367,"t"],[1,370,"\n"],[-1,421,")"],[1,432,"置"],[-1,452,"置:"],[1,454,"\n"],[1,528,"\n"],[-1,530,"\n"],[1,536,"\n"],[-1,538,"\n"],[1,553,"\n"],[-1,555,"\n"],[1,567,"\n"],[-1,569,"\n"],[1,588,"\n"],[-1,590,"\n"],[1,673,"\n"],[-1,680," "],[-1,696," "],[1,697,"\n"],[1,707,"\n"],[-1,710,"\n"],[1,745,"\n"],[-1,749," "],[-1,760," "],[1,761,"\n"],[-1,806," "],[1,807,"\n"],[1,824,"\n"],[-1,827,"\n"],[1,1516,":"],[-1,1520,"上"],[-1,1563,"#"],[1,1564,"\n"],[1,3227," "],[-1,3229,"—"],[1,3270," "],[-1,3275,"—"],[1,3320," "],[-1,3322,"—"],[1,3401,"o"],[-1,3402,"\n"],[1,3421,"l"],[-1,3423,"\n"],[1,3428,"d"],[-1,3429,"\n"],[1,3449,"o"],[-1,3451,"\n"],[1,3456,"d"],[-1,3458,"\n"],[1,3463,"d"],[-1,3464,"\n"],[1,3469,"\n"],[-1,3490,"`"],[1,3491,"\n"],[-1,3666,"\n"],[1,5924,"\n"],[-1,5962,"\n"],[1,5963,""]],[232,232],[5963,5963]]],[1564574245633,[null,[[1,232,"。"],[-1,245,"，"],[1,256,"式"],[-1,288,"）"],[1,293,"）"],[-1,299," "],[1,301," "],[-1,330,"见"],[1,357,"）"],[-1,363,"t"],[1,367,"t"],[-1,369,"\n"],[1,421,")"],[-1,431,"置"],[1,452,"置:"],[-1,452,"\n"],[-1,527,"\n"],[1,530,"\n"],[-1,535,"\n"],[1,538,"\n"],[-1,552,"\n"],[1,555,"\n"],[-1,566,"\n"],[1,569,"\n"],[-1,587,"\n"],[1,590,"\n"],[-1,672,"\n"],[1,680," "],[1,695," "],[-1,695,"\n"],[-1,706,"\n"],[1,710,"\n"],[-1,744,"\n"],[1,749," "],[1,759," "],[-1,759,"\n"],[1,805," "],[-1,805,"\n"],[-1,823,"\n"],[1,827,"\n"],[-1,1515,":"],[1,1520,"上"],[1,1562,"#"],[-1,1562,"\n"],[-1,3226," "],[1,3229,"—"],[-1,3269," "],[1,3275,"—"],[-1,3319," "],[1,3322,"—"],[-1,3400,"o"],[1,3402,"\n"],[-1,3420,"l"],[1,3423,"\n"],[-1,3427,"d"],[1,3429,"\n"],[-1,3448,"o"],[1,3451,"\n"],[-1,3455,"d"],[1,3458,"\n"],[-1,3462,"d"],[1,3464,"\n"],[-1,3468,"\n"],[1,3490,"`"],[-1,3490,"\n"],[1,3666,"\n"],[-1,5923,"\n"],[1,5962,"\n"],[-1,5962,""]],[5963,5963],[232,232]]],[1564574186390,["GJX@GJXAIOU",[[1,3664,"版本号"]],[3664,3664],[3667,3667]]],[1564574190899,["GJX@GJXAIOU",[[1,3668," （）"]],[3668,3668],[3671,3671]]],[1564574208036,["GJX@GJXAIOU",[[1,3670,"这里版本号填写 git refolg"]],[3670,3670],[3688,3688]]],[1564574220503,["GJX@GJXAIOU",[[-1,3506,"o"]],[3507,3507],[3506,3506]]],[1564574222667,["GJX@GJXAIOU",[[1,3507,"o"]],[3507,3507],[3508,3508]]],[1564574226143,["GJX@GJXAIOU",[[-1,3685,"o"]],[3686,3686],[3685,3685]]],[1564574227565,["GJX@GJXAIOU",[[1,3686,"o"]],[3686,3686],[3687,3687]]],[1564574230597,["GJX@GJXAIOU",[[1,3678,"`"]],[3678,3678],[3679,3679]]],[1564574234002,["GJX@GJXAIOU",[[1,3689,"`x"]],[3689,3689],[3691,3691]]],[1564574234464,["GJX@GJXAIOU",[[-1,3690,"x"]],[3691,3691],[3690,3690]]],[1564574244538,["GJX@GJXAIOU",[[1,3690,"显示的即可，不必填写完整的"]],[3690,3690],[3703,3703]]],[1564574305635,[null,[[-1,232,"。"],[1,246,"，"],[-1,256,"式"],[1,289,"）"],[-1,293,"）"],[1,300," "],[-1,301," "],[1,331,"见"],[-1,357,"）"],[1,364,"t"],[-1,367,"t"],[1,370,"\n"],[-1,421,")"],[1,432,"置"],[-1,452,"置:"],[1,454,"\n"],[1,528,"\n"],[-1,530,"\n"],[1,536,"\n"],[-1,538,"\n"],[1,553,"\n"],[-1,555,"\n"],[1,567,"\n"],[-1,569,"\n"],[1,588,"\n"],[-1,590,"\n"],[1,673,"\n"],[-1,680," "],[-1,696," "],[1,697,"\n"],[1,707,"\n"],[-1,710,"\n"],[1,745,"\n"],[-1,749," "],[-1,760," "],[1,761,"\n"],[-1,806," "],[1,807,"\n"],[1,824,"\n"],[-1,827,"\n"],[1,1516,":"],[-1,1520,"上"],[-1,1563,"#"],[1,1564,"\n"],[1,3227," "],[-1,3229,"—"],[1,3270," "],[-1,3275,"—"],[1,3320," "],[-1,3322,"—"],[1,3401,"o"],[-1,3402,"\n"],[1,3421,"l"],[-1,3423,"\n"],[1,3428,"d"],[-1,3429,"\n"],[1,3449,"o"],[-1,3451,"\n"],[1,3456,"d"],[-1,3458,"\n"],[1,3463,"d"],[-1,3464,"\n"],[1,3469,"\n"],[-1,3490,"`"],[1,3491,"\n"],[-1,3705,"\n"],[1,5963,"\n"],[-1,6001,"\n"],[1,6002,""]],[232,232],[6002,6002]]],[1564574305635,[null,[[1,232,"。"],[-1,245,"，"],[1,256,"式"],[-1,288,"）"],[1,293,"）"],[-1,299," "],[1,301," "],[-1,330,"见"],[1,357,"）"],[-1,363,"t"],[1,367,"t"],[-1,369,"\n"],[1,421,")"],[-1,431,"置"],[1,452,"置:"],[-1,452,"\n"],[-1,527,"\n"],[1,530,"\n"],[-1,535,"\n"],[1,538,"\n"],[-1,552,"\n"],[1,555,"\n"],[-1,566,"\n"],[1,569,"\n"],[-1,587,"\n"],[1,590,"\n"],[-1,672,"\n"],[1,680," "],[1,695," "],[-1,695,"\n"],[-1,706,"\n"],[1,710,"\n"],[-1,744,"\n"],[1,749," "],[1,759," "],[-1,759,"\n"],[1,805," "],[-1,805,"\n"],[-1,823,"\n"],[1,827,"\n"],[-1,1515,":"],[1,1520,"上"],[1,1562,"#"],[-1,1562,"\n"],[-1,3226," "],[1,3229,"—"],[-1,3269," "],[1,3275,"—"],[-1,3319," "],[1,3322,"—"],[-1,3400,"o"],[1,3402,"\n"],[-1,3420,"l"],[1,3423,"\n"],[-1,3427,"d"],[1,3429,"\n"],[-1,3448,"o"],[1,3451,"\n"],[-1,3455,"d"],[1,3458,"\n"],[-1,3462,"d"],[1,3464,"\n"],[-1,3468,"\n"],[1,3490,"`"],[-1,3490,"\n"],[1,3705,"\n"],[-1,5962,"\n"],[1,6001,"\n"],[-1,6001,""]],[6002,6002],[232,232]]],[1564574247194,["GJX@GJXAIOU",[[1,3703,"版本号"]],[3703,3703],[3706,3706]]],[1564574278285,["GJX@GJXAIOU",[[1,3707,"即可回退到第二个版本；"]],[3707,3707],[3718,3718]]],[1564574280236,["GJX@GJXAIOU",[[1,3719,"\n"]],[3718,3718],[3719,3719]]],[1564575632167,[null,[[-1,232,"。"],[1,246,"，"],[-1,256,"式"],[1,289,"）"],[-1,293,"）"],[1,300," "],[-1,301," "],[1,331,"见"],[-1,357,"）"],[1,364,"t"],[-1,367,"t"],[1,370,"\n"],[-1,421,")"],[1,432,"置"],[-1,452,"置:"],[1,454,"\n"],[1,528,"\n"],[-1,530,"\n"],[1,536,"\n"],[-1,538,"\n"],[1,553,"\n"],[-1,555,"\n"],[1,567,"\n"],[-1,569,"\n"],[1,588,"\n"],[-1,590,"\n"],[1,673,"\n"],[-1,680," "],[-1,696," "],[1,697,"\n"],[1,707,"\n"],[-1,710,"\n"],[1,745,"\n"],[-1,749," "],[-1,760," "],[1,761,"\n"],[-1,806," "],[1,807,"\n"],[1,824,"\n"],[-1,827,"\n"],[1,1516,":"],[-1,1520,"上"],[-1,1563,"#"],[1,1564,"\n"],[1,3227," "],[-1,3229,"—"],[1,3270," "],[-1,3275,"—"],[1,3320," "],[-1,3322,"—"],[1,3401,"o"],[-1,3402,"\n"],[1,3421,"l"],[-1,3423,"\n"],[1,3428,"d"],[-1,3429,"\n"],[1,3449,"o"],[-1,3451,"\n"],[1,3456,"d"],[-1,3458,"\n"],[1,3463,"d"],[-1,3464,"\n"],[1,3469,"\n"],[-1,3490,"`"],[1,3491,"\n"],[-1,3720,"\n"],[1,5978,"\n"],[-1,6016,"\n"],[1,6017,""]],[232,232],[6017,6017]]],[1564575632167,[null,[[1,232,"。"],[-1,245,"，"],[1,256,"式"],[-1,288,"）"],[1,293,"）"],[-1,299," "],[1,301," "],[-1,330,"见"],[1,357,"）"],[-1,363,"t"],[1,367,"t"],[-1,369,"\n"],[1,421,")"],[-1,431,"置"],[1,452,"置:"],[-1,452,"\n"],[-1,527,"\n"],[1,530,"\n"],[-1,535,"\n"],[1,538,"\n"],[-1,552,"\n"],[1,555,"\n"],[-1,566,"\n"],[1,569,"\n"],[-1,587,"\n"],[1,590,"\n"],[-1,672,"\n"],[1,680," "],[1,695," "],[-1,695,"\n"],[-1,706,"\n"],[1,710,"\n"],[-1,744,"\n"],[1,749," "],[1,759," "],[-1,759,"\n"],[1,805," "],[-1,805,"\n"],[-1,823,"\n"],[1,827,"\n"],[-1,1515,":"],[1,1520,"上"],[1,1562,"#"],[-1,1562,"\n"],[-1,3226," "],[1,3229,"—"],[-1,3269," "],[1,3275,"—"],[-1,3319," "],[1,3322,"—"],[-1,3400,"o"],[1,3402,"\n"],[-1,3420,"l"],[1,3423,"\n"],[-1,3427,"d"],[1,3429,"\n"],[-1,3448,"o"],[1,3451,"\n"],[-1,3455,"d"],[1,3458,"\n"],[-1,3462,"d"],[1,3464,"\n"],[-1,3468,"\n"],[1,3490,"`"],[-1,3490,"\n"],[1,3720,"\n"],[-1,5977,"\n"],[1,6016,"\n"],[-1,6016,""]],[6017,6017],[232,232]]],[1564575581395,["GJX@GJXAIOU",[[1,1612,"，是用于区分不饿欧诺个"]],[1612,1612],[1623,1623]]],[1564575584695,["GJX@GJXAIOU",[[-1,1618,"不饿欧诺个"]],[1623,1623],[1618,1618]]],[1564575602752,["GJX@GJXAIOU",[[1,1618,"不同的开发人员身份；"]],[1618,1618],[1628,1628]]],[1564575618976,["GJX@GJXAIOU",[[1,1629,"\n"]],[1628,1628],[1629,1629]]],[1564575632041,["GJX@GJXAIOU",[[1,1629,"注：以上信息都保存在."]],[1629,1629],[1640,1640]]],[1564575692166,[null,[[-1,232,"。"],[1,246,"，"],[-1,256,"式"],[1,289,"）"],[-1,293,"）"],[1,300," "],[-1,301," "],[1,331,"见"],[-1,357,"）"],[1,364,"t"],[-1,367,"t"],[1,370,"\n"],[-1,421,")"],[1,432,"置"],[-1,452,"置:"],[1,454,"\n"],[1,528,"\n"],[-1,530,"\n"],[1,536,"\n"],[-1,538,"\n"],[1,553,"\n"],[-1,555,"\n"],[1,567,"\n"],[-1,569,"\n"],[1,588,"\n"],[-1,590,"\n"],[1,673,"\n"],[-1,680," "],[-1,696," "],[1,697,"\n"],[1,707,"\n"],[-1,710,"\n"],[1,745,"\n"],[-1,749," "],[-1,760," "],[1,761,"\n"],[-1,806," "],[1,807,"\n"],[1,824,"\n"],[-1,827,"\n"],[1,1516,":"],[-1,1520,"上"],[-1,1563,"#"],[1,1564,"\n"],[1,1612,"效"],[-1,1628,"效"],[1,1629,"\n"],[-1,1640,"\n"],[1,3255," "],[-1,3257,"—"],[1,3298," "],[-1,3303,"—"],[1,3348," "],[-1,3350,"—"],[1,3429,"o"],[-1,3430,"\n"],[1,3449,"l"],[-1,3451,"\n"],[1,3456,"d"],[-1,3457,"\n"],[1,3477,"o"],[-1,3479,"\n"],[1,3484,"d"],[-1,3486,"\n"],[1,3491,"d"],[-1,3492,"\n"],[1,3497,"\n"],[-1,3518,"`"],[1,3519,"\n"],[-1,3748,"\n"],[1,6006,"\n"],[-1,6044,"\n"],[1,6045,""]],[232,232],[6045,6045]]],[1564575692166,[null,[[1,232,"。"],[-1,245,"，"],[1,256,"式"],[-1,288,"）"],[1,293,"）"],[-1,299," "],[1,301," "],[-1,330,"见"],[1,357,"）"],[-1,363,"t"],[1,367,"t"],[-1,369,"\n"],[1,421,")"],[-1,431,"置"],[1,452,"置:"],[-1,452,"\n"],[-1,527,"\n"],[1,530,"\n"],[-1,535,"\n"],[1,538,"\n"],[-1,552,"\n"],[1,555,"\n"],[-1,566,"\n"],[1,569,"\n"],[-1,587,"\n"],[1,590,"\n"],[-1,672,"\n"],[1,680," "],[1,695," "],[-1,695,"\n"],[-1,706,"\n"],[1,710,"\n"],[-1,744,"\n"],[1,749," "],[1,759," "],[-1,759,"\n"],[1,805," "],[-1,805,"\n"],[-1,823,"\n"],[1,827,"\n"],[-1,1515,":"],[1,1520,"上"],[1,1562,"#"],[-1,1562,"\n"],[-1,1611,"效"],[1,1628,"效"],[-1,1628,"\n"],[1,1640,"\n"],[-1,3254," "],[1,3257,"—"],[-1,3297," "],[1,3303,"—"],[-1,3347," "],[1,3350,"—"],[-1,3428,"o"],[1,3430,"\n"],[-1,3448,"l"],[1,3451,"\n"],[-1,3455,"d"],[1,3457,"\n"],[-1,3476,"o"],[1,3479,"\n"],[-1,3483,"d"],[1,3486,"\n"],[-1,3490,"d"],[1,3492,"\n"],[-1,3496,"\n"],[1,3518,"`"],[-1,3518,"\n"],[1,3748,"\n"],[-1,6005,"\n"],[1,6044,"\n"],[-1,6044,""]],[6045,6045],[232,232]]],[1564575635242,["GJX@GJXAIOU",[[1,1640,"git文件"]],[1640,1640],[1645,1645]]],[1564575635279,["GJX@GJXAIOU",[[1,1643," "]],[1645,1645],[1646,1646]]],[1564575676945,["GJX@GJXAIOU",[[1,1646,"夹中，存放的是本地库相关的子目录和文件，可以使用功能"]],[1646,1646],[1672,1672]]],[1564575678007,["GJX@GJXAIOU",[[-1,1670,"功能"]],[1672,1672],[1670,1670]]],[1564575680096,["GJX@GJXAIOU",[[1,1670,"：``"]],[1670,1670],[1673,1673]]],[1564575684601,["GJX@GJXAIOU",[[1,1672,"ll .git "]],[1672,1672],[1680,1680]]],[1564575685583,["GJX@GJXAIOU",[[-1,1679," "]],[1680,1680],[1679,1679]]],[1564575690322,["GJX@GJXAIOU",[[1,1680,"查看，"]],[1680,1680],[1683,1683]]],[1564575752169,[null,[[-1,232,"。"],[1,246,"，"],[-1,256,"式"],[1,289,"）"],[-1,293,"）"],[1,300," "],[-1,301," "],[1,331,"见"],[-1,357,"）"],[1,364,"t"],[-1,367,"t"],[1,370,"\n"],[-1,421,")"],[1,432,"置"],[-1,452,"置:"],[1,454,"\n"],[1,528,"\n"],[-1,530,"\n"],[1,536,"\n"],[-1,538,"\n"],[1,553,"\n"],[-1,555,"\n"],[1,567,"\n"],[-1,569,"\n"],[1,588,"\n"],[-1,590,"\n"],[1,673,"\n"],[-1,680," "],[-1,696," "],[1,697,"\n"],[1,707,"\n"],[-1,710,"\n"],[1,745,"\n"],[-1,749," "],[-1,760," "],[1,761,"\n"],[-1,806," "],[1,807,"\n"],[1,824,"\n"],[-1,827,"\n"],[1,1516,":"],[-1,1520,"上"],[-1,1563,"#"],[1,1564,"\n"],[1,1612,"效"],[-1,1628,"效"],[1,1629,"\n"],[-1,1683,"\n"],[1,3298," "],[-1,3300,"—"],[1,3341," "],[-1,3346,"—"],[1,3391," "],[-1,3393,"—"],[1,3472,"o"],[-1,3473,"\n"],[1,3492,"l"],[-1,3494,"\n"],[1,3499,"d"],[-1,3500,"\n"],[1,3520,"o"],[-1,3522,"\n"],[1,3527,"d"],[-1,3529,"\n"],[1,3534,"d"],[-1,3535,"\n"],[1,3540,"\n"],[-1,3561,"`"],[1,3562,"\n"],[-1,3791,"\n"],[1,6049,"\n"],[-1,6087,"\n"],[1,6088,""]],[232,232],[6088,6088]]],[1564575752169,[null,[[1,232,"。"],[-1,245,"，"],[1,256,"式"],[-1,288,"）"],[1,293,"）"],[-1,299," "],[1,301," "],[-1,330,"见"],[1,357,"）"],[-1,363,"t"],[1,367,"t"],[-1,369,"\n"],[1,421,")"],[-1,431,"置"],[1,452,"置:"],[-1,452,"\n"],[-1,527,"\n"],[1,530,"\n"],[-1,535,"\n"],[1,538,"\n"],[-1,552,"\n"],[1,555,"\n"],[-1,566,"\n"],[1,569,"\n"],[-1,587,"\n"],[1,590,"\n"],[-1,672,"\n"],[1,680," "],[1,695," "],[-1,695,"\n"],[-1,706,"\n"],[1,710,"\n"],[-1,744,"\n"],[1,749," "],[1,759," "],[-1,759,"\n"],[1,805," "],[-1,805,"\n"],[-1,823,"\n"],[1,827,"\n"],[-1,1515,":"],[1,1520,"上"],[1,1562,"#"],[-1,1562,"\n"],[-1,1611,"效"],[1,1628,"效"],[-1,1628,"\n"],[1,1683,"\n"],[-1,3297," "],[1,3300,"—"],[-1,3340," "],[1,3346,"—"],[-1,3390," "],[1,3393,"—"],[-1,3471,"o"],[1,3473,"\n"],[-1,3491,"l"],[1,3494,"\n"],[-1,3498,"d"],[1,3500,"\n"],[-1,3519,"o"],[1,3522,"\n"],[-1,3526,"d"],[1,3529,"\n"],[-1,3533,"d"],[1,3535,"\n"],[-1,3539,"\n"],[1,3561,"`"],[-1,3561,"\n"],[1,3791,"\n"],[-1,6048,"\n"],[1,6087,"\n"],[-1,6087,""]],[6088,6088],[232,232]]],[1564575698385,["GJX@GJXAIOU",[[1,1683,"同时，可以使用``"]],[1683,1683],[1692,1692]]],[1564575703321,["GJX@GJXAIOU",[[1,1691,"cat .git/"]],[1691,1691],[1700,1700]]],[1564575709857,["GJX@GJXAIOU",[[1,1679,"/"]],[1679,1679],[1680,1680]]],[1564575717129,["GJX@GJXAIOU",[[1,1701,"config"]],[1701,1701],[1707,1707]]],[1564575722020,["GJX@GJXAIOU",[[1,1708,"记性"]],[1708,1708],[1710,1710]]],[1564575723583,["GJX@GJXAIOU",[[-1,1708,"记性"]],[1710,1710],[1708,1708]]],[1564575740500,["GJX@GJXAIOU",[[1,1708,"进行查看配置文件，这里看到所欲的"]],[1708,1708],[1724,1724]]],[1564575741256,["GJX@GJXAIOU",[[-1,1721,"所欲的"]],[1724,1724],[1721,1721]]],[1564575744130,["GJX@GJXAIOU",[[1,1721,"所有的用户"]],[1721,1721],[1726,1726]]],[1564575812170,[null,[[-1,232,"。"],[1,246,"，"],[-1,256,"式"],[1,289,"）"],[-1,293,"）"],[1,300," "],[-1,301," "],[1,331,"见"],[-1,357,"）"],[1,364,"t"],[-1,367,"t"],[1,370,"\n"],[-1,421,")"],[1,432,"置"],[-1,452,"置:"],[1,454,"\n"],[1,528,"\n"],[-1,530,"\n"],[1,536,"\n"],[-1,538,"\n"],[1,553,"\n"],[-1,555,"\n"],[1,567,"\n"],[-1,569,"\n"],[1,588,"\n"],[-1,590,"\n"],[1,673,"\n"],[-1,680," "],[-1,696," "],[1,697,"\n"],[1,707,"\n"],[-1,710,"\n"],[1,745,"\n"],[-1,749," "],[-1,760," "],[1,761,"\n"],[-1,806," "],[1,807,"\n"],[1,824,"\n"],[-1,827,"\n"],[1,1516,":"],[-1,1520,"上"],[-1,1563,"#"],[1,1564,"\n"],[1,1612,"效"],[-1,1628,"效"],[1,1629,"\n"],[-1,1726,"\n"],[1,3341," "],[-1,3343,"—"],[1,3384," "],[-1,3389,"—"],[1,3434," "],[-1,3436,"—"],[1,3515,"o"],[-1,3516,"\n"],[1,3535,"l"],[-1,3537,"\n"],[1,3542,"d"],[-1,3543,"\n"],[1,3563,"o"],[-1,3565,"\n"],[1,3570,"d"],[-1,3572,"\n"],[1,3577,"d"],[-1,3578,"\n"],[1,3583,"\n"],[-1,3604,"`"],[1,3605,"\n"],[-1,3834,"\n"],[1,6092,"\n"],[-1,6130,"\n"],[1,6131,""]],[232,232],[6131,6131]]],[1564575812170,[null,[[1,232,"。"],[-1,245,"，"],[1,256,"式"],[-1,288,"）"],[1,293,"）"],[-1,299," "],[1,301," "],[-1,330,"见"],[1,357,"）"],[-1,363,"t"],[1,367,"t"],[-1,369,"\n"],[1,421,")"],[-1,431,"置"],[1,452,"置:"],[-1,452,"\n"],[-1,527,"\n"],[1,530,"\n"],[-1,535,"\n"],[1,538,"\n"],[-1,552,"\n"],[1,555,"\n"],[-1,566,"\n"],[1,569,"\n"],[-1,587,"\n"],[1,590,"\n"],[-1,672,"\n"],[1,680," "],[1,695," "],[-1,695,"\n"],[-1,706,"\n"],[1,710,"\n"],[-1,744,"\n"],[1,749," "],[1,759," "],[-1,759,"\n"],[1,805," "],[-1,805,"\n"],[-1,823,"\n"],[1,827,"\n"],[-1,1515,":"],[1,1520,"上"],[1,1562,"#"],[-1,1562,"\n"],[-1,1611,"效"],[1,1628,"效"],[-1,1628,"\n"],[1,1726,"\n"],[-1,3340," "],[1,3343,"—"],[-1,3383," "],[1,3389,"—"],[-1,3433," "],[1,3436,"—"],[-1,3514,"o"],[1,3516,"\n"],[-1,3534,"l"],[1,3537,"\n"],[-1,3541,"d"],[1,3543,"\n"],[-1,3562,"o"],[1,3565,"\n"],[-1,3569,"d"],[1,3572,"\n"],[-1,3576,"d"],[1,3578,"\n"],[-1,3582,"\n"],[1,3604,"`"],[-1,3604,"\n"],[1,3834,"\n"],[-1,6091,"\n"],[1,6130,"\n"],[-1,6130,""]],[6131,6131],[232,232]]],[1564575808338,["GJX@GJXAIOU",[[1,5910,"，用于查看工作区和暂存区的状态；"]],[5910,5910],[5926,5926]]],[1564575872170,[null,[[-1,232,"。"],[1,246,"，"],[-1,256,"式"],[1,289,"）"],[-1,293,"）"],[1,300," "],[-1,301," "],[1,331,"见"],[-1,357,"）"],[1,364,"t"],[-1,367,"t"],[1,370,"\n"],[-1,421,")"],[1,432,"置"],[-1,452,"置:"],[1,454,"\n"],[1,528,"\n"],[-1,530,"\n"],[1,536,"\n"],[-1,538,"\n"],[1,553,"\n"],[-1,555,"\n"],[1,567,"\n"],[-1,569,"\n"],[1,588,"\n"],[-1,590,"\n"],[1,673,"\n"],[-1,680," "],[-1,696," "],[1,697,"\n"],[1,707,"\n"],[-1,710,"\n"],[1,745,"\n"],[-1,749," "],[-1,760," "],[1,761,"\n"],[-1,806," "],[1,807,"\n"],[1,824,"\n"],[-1,827,"\n"],[1,1516,":"],[-1,1520,"上"],[-1,1563,"#"],[1,1564,"\n"],[1,1612,"效"],[-1,1628,"效"],[1,1629,"\n"],[-1,1726,"\n"],[1,3341," "],[-1,3343,"—"],[1,3384," "],[-1,3389,"—"],[1,3434," "],[-1,3436,"—"],[1,3515,"o"],[-1,3516,"\n"],[1,3535,"l"],[-1,3537,"\n"],[1,3542,"d"],[-1,3543,"\n"],[1,3563,"o"],[-1,3565,"\n"],[1,3570,"d"],[-1,3572,"\n"],[1,3577,"d"],[-1,3578,"\n"],[1,3583,"\n"],[-1,3604,"`"],[1,3605,"\n"],[-1,3834,"\n"],[1,5910,"）"],[-1,5926,"）"],[1,6108,"\n"],[-1,6146,"\n"],[1,6147,""]],[232,232],[6147,6147]]],[1564575872170,[null,[[1,232,"。"],[-1,245,"，"],[1,256,"式"],[-1,288,"）"],[1,293,"）"],[-1,299," "],[1,301," "],[-1,330,"见"],[1,357,"）"],[-1,363,"t"],[1,367,"t"],[-1,369,"\n"],[1,421,")"],[-1,431,"置"],[1,452,"置:"],[-1,452,"\n"],[-1,527,"\n"],[1,530,"\n"],[-1,535,"\n"],[1,538,"\n"],[-1,552,"\n"],[1,555,"\n"],[-1,566,"\n"],[1,569,"\n"],[-1,587,"\n"],[1,590,"\n"],[-1,672,"\n"],[1,680," "],[1,695," "],[-1,695,"\n"],[-1,706,"\n"],[1,710,"\n"],[-1,744,"\n"],[1,749," "],[1,759," "],[-1,759,"\n"],[1,805," "],[-1,805,"\n"],[-1,823,"\n"],[1,827,"\n"],[-1,1515,":"],[1,1520,"上"],[1,1562,"#"],[-1,1562,"\n"],[-1,1611,"效"],[1,1628,"效"],[-1,1628,"\n"],[1,1726,"\n"],[-1,3340," "],[1,3343,"—"],[-1,3383," "],[1,3389,"—"],[-1,3433," "],[1,3436,"—"],[-1,3514,"o"],[1,3516,"\n"],[-1,3534,"l"],[1,3537,"\n"],[-1,3541,"d"],[1,3543,"\n"],[-1,3562,"o"],[1,3565,"\n"],[-1,3569,"d"],[1,3572,"\n"],[-1,3576,"d"],[1,3578,"\n"],[-1,3582,"\n"],[1,3604,"`"],[-1,3604,"\n"],[1,3834,"\n"],[-1,5909,"）"],[1,5926,"）"],[-1,6107,"\n"],[1,6146,"\n"],[-1,6146,""]],[6147,6147],[232,232]]],[1564575819730,["GJX@GJXAIOU",[[-1,5978,"hello.txt"],[1,5987,"文件"]],[5978,5978],[5980,5980]]],[1564575826660,["GJX@GJXAIOU",[[1,5980,"名称.后缀"]],[5980,5980],[5985,5985]]],[1564575844065,["GJX@GJXAIOU",[[1,5937,"从工作区"]],[5937,5937],[5941,5941]]],[1564575932171,[null,[[-1,232,"。"],[1,246,"，"],[-1,256,"式"],[1,289,"）"],[-1,293,"）"],[1,300," "],[-1,301," "],[1,331,"见"],[-1,357,"）"],[1,364,"t"],[-1,367,"t"],[1,370,"\n"],[-1,421,")"],[1,432,"置"],[-1,452,"置:"],[1,454,"\n"],[1,528,"\n"],[-1,530,"\n"],[1,536,"\n"],[-1,538,"\n"],[1,553,"\n"],[-1,555,"\n"],[1,567,"\n"],[-1,569,"\n"],[1,588,"\n"],[-1,590,"\n"],[1,673,"\n"],[-1,680," "],[-1,696," "],[1,697,"\n"],[1,707,"\n"],[-1,710,"\n"],[1,745,"\n"],[-1,749," "],[-1,760," "],[1,761,"\n"],[-1,806," "],[1,807,"\n"],[1,824,"\n"],[-1,827,"\n"],[1,1516,":"],[-1,1520,"上"],[-1,1563,"#"],[1,1564,"\n"],[1,1612,"效"],[-1,1628,"效"],[1,1629,"\n"],[-1,1726,"\n"],[1,3341," "],[-1,3343,"—"],[1,3384," "],[-1,3389,"—"],[1,3434," "],[-1,3436,"—"],[1,3515,"o"],[-1,3516,"\n"],[1,3535,"l"],[-1,3537,"\n"],[1,3542,"d"],[-1,3543,"\n"],[1,3563,"o"],[-1,3565,"\n"],[1,3570,"d"],[-1,3572,"\n"],[1,3577,"d"],[-1,3578,"\n"],[1,3583,"\n"],[-1,3604,"`"],[1,3605,"\n"],[-1,3834,"\n"],[1,5910,"）"],[-1,5926,"）"],[1,5937,"件"],[-1,5941,"件"],[1,5982," "],[-1,5989,"t"],[1,6110,"\n"],[-1,6148,"\n"],[1,6149,""]],[232,232],[6149,6149]]],[1564575932171,[null,[[1,232,"。"],[-1,245,"，"],[1,256,"式"],[-1,288,"）"],[1,293,"）"],[-1,299," "],[1,301," "],[-1,330,"见"],[1,357,"）"],[-1,363,"t"],[1,367,"t"],[-1,369,"\n"],[1,421,")"],[-1,431,"置"],[1,452,"置:"],[-1,452,"\n"],[-1,527,"\n"],[1,530,"\n"],[-1,535,"\n"],[1,538,"\n"],[-1,552,"\n"],[1,555,"\n"],[-1,566,"\n"],[1,569,"\n"],[-1,587,"\n"],[1,590,"\n"],[-1,672,"\n"],[1,680," "],[1,695," "],[-1,695,"\n"],[-1,706,"\n"],[1,710,"\n"],[-1,744,"\n"],[1,749," "],[1,759," "],[-1,759,"\n"],[1,805," "],[-1,805,"\n"],[-1,823,"\n"],[1,827,"\n"],[-1,1515,":"],[1,1520,"上"],[1,1562,"#"],[-1,1562,"\n"],[-1,1611,"效"],[1,1628,"效"],[-1,1628,"\n"],[1,1726,"\n"],[-1,3340," "],[1,3343,"—"],[-1,3383," "],[1,3389,"—"],[-1,3433," "],[1,3436,"—"],[-1,3514,"o"],[1,3516,"\n"],[-1,3534,"l"],[1,3537,"\n"],[-1,3541,"d"],[1,3543,"\n"],[-1,3562,"o"],[1,3565,"\n"],[-1,3569,"d"],[1,3572,"\n"],[-1,3576,"d"],[1,3578,"\n"],[-1,3582,"\n"],[1,3604,"`"],[-1,3604,"\n"],[1,3834,"\n"],[-1,5909,"）"],[1,5926,"）"],[-1,5936,"件"],[1,5941,"件"],[-1,5981," "],[1,5989,"t"],[-1,6109,"\n"],[1,6148,"\n"],[-1,6148,""]],[6149,6149],[232,232]]],[1564575928464,["GJX@GJXAIOU",[[1,3750,"\n"]],[3749,3749],[3750,3750]]],[1564575992174,[null,[[-1,232,"。"],[1,246,"，"],[-1,256,"式"],[1,289,"）"],[-1,293,"）"],[1,300," "],[-1,301," "],[1,331,"见"],[-1,357,"）"],[1,364,"t"],[-1,367,"t"],[1,370,"\n"],[-1,421,")"],[1,432,"置"],[-1,452,"置:"],[1,454,"\n"],[1,528,"\n"],[-1,530,"\n"],[1,536,"\n"],[-1,538,"\n"],[1,553,"\n"],[-1,555,"\n"],[1,567,"\n"],[-1,569,"\n"],[1,588,"\n"],[-1,590,"\n"],[1,673,"\n"],[-1,680," "],[-1,696," "],[1,697,"\n"],[1,707,"\n"],[-1,710,"\n"],[1,745,"\n"],[-1,749," "],[-1,760," "],[1,761,"\n"],[-1,806," "],[1,807,"\n"],[1,824,"\n"],[-1,827,"\n"],[1,1516,":"],[-1,1520,"上"],[-1,1563,"#"],[1,1564,"\n"],[1,1612,"效"],[-1,1628,"效"],[1,1629,"\n"],[-1,1726,"\n"],[1,3341," "],[-1,3343,"—"],[1,3384," "],[-1,3389,"—"],[1,3434," "],[-1,3436,"—"],[1,3515,"o"],[-1,3516,"\n"],[1,3535,"l"],[-1,3537,"\n"],[1,3542,"d"],[-1,3543,"\n"],[1,3563,"o"],[-1,3565,"\n"],[1,3570,"d"],[-1,3572,"\n"],[1,3577,"d"],[-1,3578,"\n"],[1,3583,"\n"],[-1,3604,"`"],[1,3605,"\n"],[-1,3835,"\n"],[1,5911,"）"],[-1,5927,"）"],[1,5938,"件"],[-1,5942,"件"],[1,5983," "],[-1,5990,"t"],[1,6111,"\n"],[-1,6149,"\n"],[1,6150,""]],[232,232],[6150,6150]]],[1564575992174,[null,[[1,232,"。"],[-1,245,"，"],[1,256,"式"],[-1,288,"）"],[1,293,"）"],[-1,299," "],[1,301," "],[-1,330,"见"],[1,357,"）"],[-1,363,"t"],[1,367,"t"],[-1,369,"\n"],[1,421,")"],[-1,431,"置"],[1,452,"置:"],[-1,452,"\n"],[-1,527,"\n"],[1,530,"\n"],[-1,535,"\n"],[1,538,"\n"],[-1,552,"\n"],[1,555,"\n"],[-1,566,"\n"],[1,569,"\n"],[-1,587,"\n"],[1,590,"\n"],[-1,672,"\n"],[1,680," "],[1,695," "],[-1,695,"\n"],[-1,706,"\n"],[1,710,"\n"],[-1,744,"\n"],[1,749," "],[1,759," "],[-1,759,"\n"],[1,805," "],[-1,805,"\n"],[-1,823,"\n"],[1,827,"\n"],[-1,1515,":"],[1,1520,"上"],[1,1562,"#"],[-1,1562,"\n"],[-1,1611,"效"],[1,1628,"效"],[-1,1628,"\n"],[1,1726,"\n"],[-1,3340," "],[1,3343,"—"],[-1,3383," "],[1,3389,"—"],[-1,3433," "],[1,3436,"—"],[-1,3514,"o"],[1,3516,"\n"],[-1,3534,"l"],[1,3537,"\n"],[-1,3541,"d"],[1,3543,"\n"],[-1,3562,"o"],[1,3565,"\n"],[-1,3569,"d"],[1,3572,"\n"],[-1,3576,"d"],[1,3578,"\n"],[-1,3582,"\n"],[1,3604,"`"],[-1,3604,"\n"],[1,3835,"\n"],[-1,5910,"）"],[1,5927,"）"],[-1,5937,"件"],[1,5942,"件"],[-1,5982," "],[1,5990,"t"],[-1,6110,"\n"],[1,6149,"\n"],[-1,6149,""]],[6150,6150],[232,232]]],[1564575933931,["GJX@GJXAIOU",[[1,3750,"其中："]],[3750,3750],[3753,3753]]],[1564575936907,["GJX@GJXAIOU",[[-1,3750,"其中："]],[3753,3753],[3750,3750]]],[1564575945226,["GJX@GJXAIOU",[[1,3750,"其中：Head含义"]],[3750,3750],[3759,3759]]],[1564575945264,["GJX@GJXAIOU",[[1,3757," "]],[3759,3759],[3760,3760]]],[1564575958170,["GJX@GJXAIOU",[[1,3760,"：HEAD@{}"]],[3760,3760],[3768,3768]]],[1564575974207,["GJX@GJXAIOU",[[1,3767,"移动到当前版本需要多少步"]],[3767,3767],[3779,3779]]],[1564576052175,[null,[[-1,232,"。"],[1,246,"，"],[-1,256,"式"],[1,289,"）"],[-1,293,"）"],[1,300," "],[-1,301," "],[1,331,"见"],[-1,357,"）"],[1,364,"t"],[-1,367,"t"],[1,370,"\n"],[-1,421,")"],[1,432,"置"],[-1,452,"置:"],[1,454,"\n"],[1,528,"\n"],[-1,530,"\n"],[1,536,"\n"],[-1,538,"\n"],[1,553,"\n"],[-1,555,"\n"],[1,567,"\n"],[-1,569,"\n"],[1,588,"\n"],[-1,590,"\n"],[1,673,"\n"],[-1,680," "],[-1,696," "],[1,697,"\n"],[1,707,"\n"],[-1,710,"\n"],[1,745,"\n"],[-1,749," "],[-1,760," "],[1,761,"\n"],[-1,806," "],[1,807,"\n"],[1,824,"\n"],[-1,827,"\n"],[1,1516,":"],[-1,1520,"上"],[-1,1563,"#"],[1,1564,"\n"],[1,1612,"效"],[-1,1628,"效"],[1,1629,"\n"],[-1,1726,"\n"],[1,3341," "],[-1,3343,"—"],[1,3384," "],[-1,3389,"—"],[1,3434," "],[-1,3436,"—"],[1,3515,"o"],[-1,3516,"\n"],[1,3535,"l"],[-1,3537,"\n"],[1,3542,"d"],[-1,3543,"\n"],[1,3563,"o"],[-1,3565,"\n"],[1,3570,"d"],[-1,3572,"\n"],[1,3577,"d"],[-1,3578,"\n"],[1,3583,"\n"],[-1,3604,"`"],[1,3605,"\n"],[-1,3865,"\n"],[1,5941,"）"],[-1,5957,"）"],[1,5968,"件"],[-1,5972,"件"],[1,6013," "],[-1,6020,"t"],[1,6141,"\n"],[-1,6179,"\n"],[1,6180,""]],[232,232],[6180,6180]]],[1564576052175,[null,[[1,232,"。"],[-1,245,"，"],[1,256,"式"],[-1,288,"）"],[1,293,"）"],[-1,299," "],[1,301," "],[-1,330,"见"],[1,357,"）"],[-1,363,"t"],[1,367,"t"],[-1,369,"\n"],[1,421,")"],[-1,431,"置"],[1,452,"置:"],[-1,452,"\n"],[-1,527,"\n"],[1,530,"\n"],[-1,535,"\n"],[1,538,"\n"],[-1,552,"\n"],[1,555,"\n"],[-1,566,"\n"],[1,569,"\n"],[-1,587,"\n"],[1,590,"\n"],[-1,672,"\n"],[1,680," "],[1,695," "],[-1,695,"\n"],[-1,706,"\n"],[1,710,"\n"],[-1,744,"\n"],[1,749," "],[1,759," "],[-1,759,"\n"],[1,805," "],[-1,805,"\n"],[-1,823,"\n"],[1,827,"\n"],[-1,1515,":"],[1,1520,"上"],[1,1562,"#"],[-1,1562,"\n"],[-1,1611,"效"],[1,1628,"效"],[-1,1628,"\n"],[1,1726,"\n"],[-1,3340," "],[1,3343,"—"],[-1,3383," "],[1,3389,"—"],[-1,3433," "],[1,3436,"—"],[-1,3514,"o"],[1,3516,"\n"],[-1,3534,"l"],[1,3537,"\n"],[-1,3541,"d"],[1,3543,"\n"],[-1,3562,"o"],[1,3565,"\n"],[-1,3569,"d"],[1,3572,"\n"],[-1,3576,"d"],[1,3578,"\n"],[-1,3582,"\n"],[1,3604,"`"],[-1,3604,"\n"],[1,3865,"\n"],[-1,5940,"）"],[1,5957,"）"],[-1,5967,"件"],[1,5972,"件"],[-1,6012," "],[1,6020,"t"],[-1,6140,"\n"],[1,6179,"\n"],[-1,6179,""]],[6180,6180],[232,232]]],[1564576031519,["GJX@GJXAIOU",[[1,3605,"\n"]],[3604,3604],[3605,3605]]],[1564576032239,["GJX@GJXAIOU",[[1,3606,"\n"]],[3605,3605],[3606,3606]]],[1564576041860,["GJX@GJXAIOU",[[1,3606,"- 方式一：【推荐】"]],[3606,3606],[3616,3616]]],[1564576051253,["GJX@GJXAIOU",[[1,4495,"- 方式二：只能后推"]],[4495,4495],[4505,4505]]],[1564576112181,[null,[[-1,232,"。"],[1,246,"，"],[-1,256,"式"],[1,289,"）"],[-1,293,"）"],[1,300," "],[-1,301," "],[1,331,"见"],[-1,357,"）"],[1,364,"t"],[-1,367,"t"],[1,370,"\n"],[-1,421,")"],[1,432,"置"],[-1,452,"置:"],[1,454,"\n"],[1,528,"\n"],[-1,530,"\n"],[1,536,"\n"],[-1,538,"\n"],[1,553,"\n"],[-1,555,"\n"],[1,567,"\n"],[-1,569,"\n"],[1,588,"\n"],[-1,590,"\n"],[1,673,"\n"],[-1,680," "],[-1,696," "],[1,697,"\n"],[1,707,"\n"],[-1,710,"\n"],[1,745,"\n"],[-1,749," "],[-1,760," "],[1,761,"\n"],[-1,806," "],[1,807,"\n"],[1,824,"\n"],[-1,827,"\n"],[1,1516,":"],[-1,1520,"上"],[-1,1563,"#"],[1,1564,"\n"],[1,1612,"效"],[-1,1628,"效"],[1,1629,"\n"],[-1,1726,"\n"],[1,3341," "],[-1,3343,"—"],[1,3384," "],[-1,3389,"—"],[1,3434," "],[-1,3436,"—"],[1,3515,"o"],[-1,3516,"\n"],[1,3535,"l"],[-1,3537,"\n"],[1,3542,"d"],[-1,3543,"\n"],[1,3563,"o"],[-1,3565,"\n"],[1,3570,"d"],[-1,3572,"\n"],[1,3577,"d"],[-1,3578,"\n"],[1,3583,"\n"],[-1,3604,"`"],[1,3605,"\n"],[-1,3877,"\n"],[1,4495,"\n"],[-1,4505,"\n"],[1,5963,"）"],[-1,5979,"）"],[1,5990,"件"],[-1,5994,"件"],[1,6035," "],[-1,6042,"t"],[1,6163,"\n"],[-1,6201,"\n"],[1,6202,""]],[232,232],[6202,6202]]],[1564576112181,[null,[[1,232,"。"],[-1,245,"，"],[1,256,"式"],[-1,288,"）"],[1,293,"）"],[-1,299," "],[1,301," "],[-1,330,"见"],[1,357,"）"],[-1,363,"t"],[1,367,"t"],[-1,369,"\n"],[1,421,")"],[-1,431,"置"],[1,452,"置:"],[-1,452,"\n"],[-1,527,"\n"],[1,530,"\n"],[-1,535,"\n"],[1,538,"\n"],[-1,552,"\n"],[1,555,"\n"],[-1,566,"\n"],[1,569,"\n"],[-1,587,"\n"],[1,590,"\n"],[-1,672,"\n"],[1,680," "],[1,695," "],[-1,695,"\n"],[-1,706,"\n"],[1,710,"\n"],[-1,744,"\n"],[1,749," "],[1,759," "],[-1,759,"\n"],[1,805," "],[-1,805,"\n"],[-1,823,"\n"],[1,827,"\n"],[-1,1515,":"],[1,1520,"上"],[1,1562,"#"],[-1,1562,"\n"],[-1,1611,"效"],[1,1628,"效"],[-1,1628,"\n"],[1,1726,"\n"],[-1,3340," "],[1,3343,"—"],[-1,3383," "],[1,3389,"—"],[-1,3433," "],[1,3436,"—"],[-1,3514,"o"],[1,3516,"\n"],[-1,3534,"l"],[1,3537,"\n"],[-1,3541,"d"],[1,3543,"\n"],[-1,3562,"o"],[1,3565,"\n"],[-1,3569,"d"],[1,3572,"\n"],[-1,3576,"d"],[1,3578,"\n"],[-1,3582,"\n"],[1,3604,"`"],[-1,3604,"\n"],[1,3877,"\n"],[-1,4494,"\n"],[1,4505,"\n"],[-1,5962,"）"],[1,5979,"）"],[-1,5989,"件"],[1,5994,"件"],[-1,6034," "],[1,6042,"t"],[-1,6162,"\n"],[1,6201,"\n"],[-1,6201,""]],[6202,6202],[232,232]]],[1564576052545,["GJX@GJXAIOU",[[-1,4503,"后推"]],[4505,4505],[4503,4503]]],[1564576055437,["GJX@GJXAIOU",[[1,4503,"后退"]],[4503,4503],[4505,4505]]],[1564576055704,["GJX@GJXAIOU",[[1,4506,"- \n"]],[4505,4505],[4508,4508]]],[1564576056577,["GJX@GJXAIOU",[[-1,4506,"- "]],[4508,4508],[4506,4506]]],[1564576061034,["GJX@GJXAIOU",[[1,4506,"``"]],[4506,4506],[4508,4508]]],[1564576071962,["GJX@GJXAIOU",[[1,4507,"git reset --head Ha"]],[4507,4507],[4526,4526]]],[1564576072641,["GJX@GJXAIOU",[[-1,4525,"a"]],[4526,4526],[4525,4525]]],[1564576072857,["GJX@GJXAIOU",[[1,4525,"ea"]],[4525,4525],[4527,4527]]],[1564576073511,["GJX@GJXAIOU",[[-1,4525,"ea"]],[4527,4527],[4525,4525]]],[1564576085345,["GJX@GJXAIOU",[[1,4525,"EAD……"]],[4525,4525],[4530,4530]]],[1564576086959,["GJX@GJXAIOU",[[-1,4527,"D……"]],[4530,4530],[4527,4527]]],[1564576091646,["GJX@GJXAIOU",[[1,4527,"D^"]],[4527,4527],[4529,4529]]],[1564576106451,["GJX@GJXAIOU",[[1,4530,"其中一个^表示后退一步，n个"]],[4530,4530],[4544,4544]]],[1564576106489,["GJX@GJXAIOU",[[1,4543," "]],[4544,4544],[4545,4545]]],[1564576110724,["GJX@GJXAIOU",[[1,4545,"表示后退"]],[4545,4545],[4549,4549]]],[1564576172180,[null,[[-1,232,"。"],[1,246,"，"],[-1,256,"式"],[1,289,"）"],[-1,293,"）"],[1,300," "],[-1,301," "],[1,331,"见"],[-1,357,"）"],[1,364,"t"],[-1,367,"t"],[1,370,"\n"],[-1,421,")"],[1,432,"置"],[-1,452,"置:"],[1,454,"\n"],[1,528,"\n"],[-1,530,"\n"],[1,536,"\n"],[-1,538,"\n"],[1,553,"\n"],[-1,555,"\n"],[1,567,"\n"],[-1,569,"\n"],[1,588,"\n"],[-1,590,"\n"],[1,673,"\n"],[-1,680," "],[-1,696," "],[1,697,"\n"],[1,707,"\n"],[-1,710,"\n"],[1,745,"\n"],[-1,749," "],[-1,760," "],[1,761,"\n"],[-1,806," "],[1,807,"\n"],[1,824,"\n"],[-1,827,"\n"],[1,1516,":"],[-1,1520,"上"],[-1,1563,"#"],[1,1564,"\n"],[1,1612,"效"],[-1,1628,"效"],[1,1629,"\n"],[-1,1726,"\n"],[1,3341," "],[-1,3343,"—"],[1,3384," "],[-1,3389,"—"],[1,3434," "],[-1,3436,"—"],[1,3515,"o"],[-1,3516,"\n"],[1,3535,"l"],[-1,3537,"\n"],[1,3542,"d"],[-1,3543,"\n"],[1,3563,"o"],[-1,3565,"\n"],[1,3570,"d"],[-1,3572,"\n"],[1,3577,"d"],[-1,3578,"\n"],[1,3583,"\n"],[-1,3604,"`"],[1,3605,"\n"],[-1,3877,"\n"],[1,4495,"\n"],[-1,4551,"\n"],[1,6007,"）"],[-1,6023,"）"],[1,6034,"件"],[-1,6038,"件"],[1,6079," "],[-1,6086,"t"],[1,6207,"\n"],[-1,6245,"\n"],[1,6246,""]],[232,232],[6246,6246]]],[1564576172180,[null,[[1,232,"。"],[-1,245,"，"],[1,256,"式"],[-1,288,"）"],[1,293,"）"],[-1,299," "],[1,301," "],[-1,330,"见"],[1,357,"）"],[-1,363,"t"],[1,367,"t"],[-1,369,"\n"],[1,421,")"],[-1,431,"置"],[1,452,"置:"],[-1,452,"\n"],[-1,527,"\n"],[1,530,"\n"],[-1,535,"\n"],[1,538,"\n"],[-1,552,"\n"],[1,555,"\n"],[-1,566,"\n"],[1,569,"\n"],[-1,587,"\n"],[1,590,"\n"],[-1,672,"\n"],[1,680," "],[1,695," "],[-1,695,"\n"],[-1,706,"\n"],[1,710,"\n"],[-1,744,"\n"],[1,749," "],[1,759," "],[-1,759,"\n"],[1,805," "],[-1,805,"\n"],[-1,823,"\n"],[1,827,"\n"],[-1,1515,":"],[1,1520,"上"],[1,1562,"#"],[-1,1562,"\n"],[-1,1611,"效"],[1,1628,"效"],[-1,1628,"\n"],[1,1726,"\n"],[-1,3340," "],[1,3343,"—"],[-1,3383," "],[1,3389,"—"],[-1,3433," "],[1,3436,"—"],[-1,3514,"o"],[1,3516,"\n"],[-1,3534,"l"],[1,3537,"\n"],[-1,3541,"d"],[1,3543,"\n"],[-1,3562,"o"],[1,3565,"\n"],[-1,3569,"d"],[1,3572,"\n"],[-1,3576,"d"],[1,3578,"\n"],[-1,3582,"\n"],[1,3604,"`"],[-1,3604,"\n"],[1,3877,"\n"],[-1,4494,"\n"],[1,4551,"\n"],[-1,6006,"）"],[1,6023,"）"],[-1,6033,"件"],[1,6038,"件"],[-1,6078," "],[1,6086,"t"],[-1,6206,"\n"],[1,6245,"\n"],[-1,6245,""]],[6246,6246],[232,232]]],[1564576112283,["GJX@GJXAIOU",[[1,4549,"n"]],[4549,4549],[4550,4550]]],[1564576112322,["GJX@GJXAIOU",[[1,4549," "]],[4550,4550],[4551,4551]]],[1564576113517,["GJX@GJXAIOU",[[1,4551,"步"]],[4551,4551],[4552,4552]]],[1564576113555,["GJX@GJXAIOU",[[1,4551," "]],[4552,4552],[4553,4553]]],[1564576113909,["GJX@GJXAIOU",[[1,4553,"；"]],[4553,4553],[4554,4554]]],[1564576114191,["GJX@GJXAIOU",[[1,4556,"\n"]],[4554,4554],[4555,4555]]],[1564576120485,["GJX@GJXAIOU",[[1,4555,"- 方式三：只嗯呢"]],[4555,4555],[4564,4564]]],[1564576123135,["GJX@GJXAIOU",[[-1,4561,"只嗯呢"]],[4564,4564],[4561,4561]]],[1564576126316,["GJX@GJXAIOU",[[1,4561,"只能后退"]],[4561,4561],[4565,4565]]],[1564576127019,["GJX@GJXAIOU",[[1,4566,"- \n"]],[4565,4565],[4568,4568]]],[1564576127846,["GJX@GJXAIOU",[[-1,4566,"- "]],[4568,4568],[4566,4566]]],[1564576129090,["GJX@GJXAIOU",[[1,4566,"``"]],[4566,4566],[4568,4568]]],[1564576132825,["GJX@GJXAIOU",[[1,4567,"git reser"]],[4567,4567],[4576,4576]]],[1564576133562,["GJX@GJXAIOU",[[-1,4575,"r"]],[4576,4576],[4575,4575]]],[1564576137978,["GJX@GJXAIOU",[[1,4575,"t --gead"]],[4575,4575],[4583,4583]]],[1564576139390,["GJX@GJXAIOU",[[-1,4579,"gead"]],[4583,4583],[4579,4579]]],[1564576139856,["GJX@GJXAIOU",[[1,4579,"hg"]],[4579,4579],[4581,4581]]],[1564576140927,["GJX@GJXAIOU",[[-1,4580,"g"]],[4581,4581],[4580,4580]]],[1564576141378,["GJX@GJXAIOU",[[1,4580,"eas"]],[4580,4580],[4583,4583]]],[1564576142040,["GJX@GJXAIOU",[[-1,4582,"s"]],[4583,4583],[4582,4582]]],[1564576152345,["GJX@GJXAIOU",[[1,4582,"d HEAD~"]],[4582,4582],[4589,4589]]],[1564576153159,["GJX@GJXAIOU",[[-1,4588,"~"]],[4589,4589],[4588,4588]]],[1564576156521,["GJX@GJXAIOU",[[1,4588,"~你"]],[4588,4588],[4590,4590]]],[1564576157174,["GJX@GJXAIOU",[[-1,4589,"你"]],[4590,4590],[4589,4589]]],[1564576157659,["GJX@GJXAIOU",[[1,4589,"n"]],[4589,4589],[4590,4590]]],[1564576162596,["GJX@GJXAIOU",[[1,4591,",b"]],[4591,4591],[4593,4593]]],[1564576163119,["GJX@GJXAIOU",[[-1,4592,"b"]],[4593,4593],[4592,4592]]],[1564576166945,["GJX@GJXAIOU",[[1,4592,"表示后退n"]],[4592,4592],[4597,4597]]],[1564576166984,["GJX@GJXAIOU",[[1,4596," "]],[4597,4597],[4598,4598]]],[1564576168195,["GJX@GJXAIOU",[[1,4598,"步"]],[4598,4598],[4599,4599]]],[1564576168234,["GJX@GJXAIOU",[[1,4598," "]],[4599,4599],[4600,4600]]],[1564576292186,[null,[[-1,232,"。"],[1,246,"，"],[-1,256,"式"],[1,289,"）"],[-1,293,"）"],[1,300," "],[-1,301," "],[1,331,"见"],[-1,357,"）"],[1,364,"t"],[-1,367,"t"],[1,370,"\n"],[-1,421,")"],[1,432,"置"],[-1,452,"置:"],[1,454,"\n"],[1,528,"\n"],[-1,530,"\n"],[1,536,"\n"],[-1,538,"\n"],[1,553,"\n"],[-1,555,"\n"],[1,567,"\n"],[-1,569,"\n"],[1,588,"\n"],[-1,590,"\n"],[1,673,"\n"],[-1,680," "],[-1,696," "],[1,697,"\n"],[1,707,"\n"],[-1,710,"\n"],[1,745,"\n"],[-1,749," "],[-1,760," "],[1,761,"\n"],[-1,806," "],[1,807,"\n"],[1,824,"\n"],[-1,827,"\n"],[1,1516,":"],[-1,1520,"上"],[-1,1563,"#"],[1,1564,"\n"],[1,1612,"效"],[-1,1628,"效"],[1,1629,"\n"],[-1,1726,"\n"],[1,3341," "],[-1,3343,"—"],[1,3384," "],[-1,3389,"—"],[1,3434," "],[-1,3436,"—"],[1,3515,"o"],[-1,3516,"\n"],[1,3535,"l"],[-1,3537,"\n"],[1,3542,"d"],[-1,3543,"\n"],[1,3563,"o"],[-1,3565,"\n"],[1,3570,"d"],[-1,3572,"\n"],[1,3577,"d"],[-1,3578,"\n"],[1,3583,"\n"],[-1,3604,"`"],[1,3605,"\n"],[-1,3877,"\n"],[1,4495,"\n"],[-1,4602,"\n"],[1,6058,"）"],[-1,6074,"）"],[1,6085,"件"],[-1,6089,"件"],[1,6130," "],[-1,6137,"t"],[1,6258,"\n"],[-1,6296,"\n"],[1,6297,""]],[232,232],[6297,6297]]],[1564576292186,[null,[[1,232,"。"],[-1,245,"，"],[1,256,"式"],[-1,288,"）"],[1,293,"）"],[-1,299," "],[1,301," "],[-1,330,"见"],[1,357,"）"],[-1,363,"t"],[1,367,"t"],[-1,369,"\n"],[1,421,")"],[-1,431,"置"],[1,452,"置:"],[-1,452,"\n"],[-1,527,"\n"],[1,530,"\n"],[-1,535,"\n"],[1,538,"\n"],[-1,552,"\n"],[1,555,"\n"],[-1,566,"\n"],[1,569,"\n"],[-1,587,"\n"],[1,590,"\n"],[-1,672,"\n"],[1,680," "],[1,695," "],[-1,695,"\n"],[-1,706,"\n"],[1,710,"\n"],[-1,744,"\n"],[1,749," "],[1,759," "],[-1,759,"\n"],[1,805," "],[-1,805,"\n"],[-1,823,"\n"],[1,827,"\n"],[-1,1515,":"],[1,1520,"上"],[1,1562,"#"],[-1,1562,"\n"],[-1,1611,"效"],[1,1628,"效"],[-1,1628,"\n"],[1,1726,"\n"],[-1,3340," "],[1,3343,"—"],[-1,3383," "],[1,3389,"—"],[-1,3433," "],[1,3436,"—"],[-1,3514,"o"],[1,3516,"\n"],[-1,3534,"l"],[1,3537,"\n"],[-1,3541,"d"],[1,3543,"\n"],[-1,3562,"o"],[1,3565,"\n"],[-1,3569,"d"],[1,3572,"\n"],[-1,3576,"d"],[1,3578,"\n"],[-1,3582,"\n"],[1,3604,"`"],[-1,3604,"\n"],[1,3877,"\n"],[-1,4494,"\n"],[1,4602,"\n"],[-1,6057,"）"],[1,6074,"）"],[-1,6084,"件"],[1,6089,"件"],[-1,6129," "],[1,6137,"t"],[-1,6257,"\n"],[1,6296,"\n"],[-1,6296,""]],[6297,6297],[232,232]]],[1564576258361,["GJX@GJXAIOU",[[1,4602,"\n"]],[4601,4601],[4602,4602]]],[1564576258519,["GJX@GJXAIOU",[[1,4603,"\n"]],[4602,4602],[4603,4603]]],[1564576258680,["GJX@GJXAIOU",[[1,4604,"\n"]],[4603,4603],[4604,4604]]],[1564576263210,["GJX@GJXAIOU",[[1,4602,"- "]],[4602,4602],[4604,4604]]],[1564576264254,["GJX@GJXAIOU",[[-1,4602,"- "]],[4604,4604],[4602,4602]]],[1564576276239,["GJX@GJXAIOU",[[1,4602,"### 补充：reset参数"]],[4602,4602],[4616,4616]]],[1564576276277,["GJX@GJXAIOU",[[1,4614," "]],[4616,4616],[4617,4617]]],[1564576276578,["GJX@GJXAIOU",[[1,4620,"\n"]],[4617,4617],[4618,4618]]],[1564576352232,[null,[[-1,232,"。"],[1,246,"，"],[-1,256,"式"],[1,289,"）"],[-1,293,"）"],[1,300," "],[-1,301," "],[1,331,"见"],[-1,357,"）"],[1,364,"t"],[-1,367,"t"],[1,370,"\n"],[-1,421,")"],[1,432,"置"],[-1,452,"置:"],[1,454,"\n"],[1,528,"\n"],[-1,530,"\n"],[1,536,"\n"],[-1,538,"\n"],[1,553,"\n"],[-1,555,"\n"],[1,567,"\n"],[-1,569,"\n"],[1,588,"\n"],[-1,590,"\n"],[1,673,"\n"],[-1,680," "],[-1,696," "],[1,697,"\n"],[1,707,"\n"],[-1,710,"\n"],[1,745,"\n"],[-1,749," "],[-1,760," "],[1,761,"\n"],[-1,806," "],[1,807,"\n"],[1,824,"\n"],[-1,827,"\n"],[1,1516,":"],[-1,1520,"上"],[-1,1563,"#"],[1,1564,"\n"],[1,1612,"效"],[-1,1628,"效"],[1,1629,"\n"],[-1,1726,"\n"],[1,3341," "],[-1,3343,"—"],[1,3384," "],[-1,3389,"—"],[1,3434," "],[-1,3436,"—"],[1,3515,"o"],[-1,3516,"\n"],[1,3535,"l"],[-1,3537,"\n"],[1,3542,"d"],[-1,3543,"\n"],[1,3563,"o"],[-1,3565,"\n"],[1,3570,"d"],[-1,3572,"\n"],[1,3577,"d"],[-1,3578,"\n"],[1,3583,"\n"],[-1,3604,"`"],[1,3605,"\n"],[-1,3877,"\n"],[1,4495,"\n"],[-1,4619,"\n"],[1,6077,"）"],[-1,6093,"）"],[1,6104,"件"],[-1,6108,"件"],[1,6149," "],[-1,6156,"t"],[1,6277,"\n"],[-1,6315,"\n"],[1,6316,""]],[232,232],[6316,6316]]],[1564576352232,[null,[[1,232,"。"],[-1,245,"，"],[1,256,"式"],[-1,288,"）"],[1,293,"）"],[-1,299," "],[1,301," "],[-1,330,"见"],[1,357,"）"],[-1,363,"t"],[1,367,"t"],[-1,369,"\n"],[1,421,")"],[-1,431,"置"],[1,452,"置:"],[-1,452,"\n"],[-1,527,"\n"],[1,530,"\n"],[-1,535,"\n"],[1,538,"\n"],[-1,552,"\n"],[1,555,"\n"],[-1,566,"\n"],[1,569,"\n"],[-1,587,"\n"],[1,590,"\n"],[-1,672,"\n"],[1,680," "],[1,695," "],[-1,695,"\n"],[-1,706,"\n"],[1,710,"\n"],[-1,744,"\n"],[1,749," "],[1,759," "],[-1,759,"\n"],[1,805," "],[-1,805,"\n"],[-1,823,"\n"],[1,827,"\n"],[-1,1515,":"],[1,1520,"上"],[1,1562,"#"],[-1,1562,"\n"],[-1,1611,"效"],[1,1628,"效"],[-1,1628,"\n"],[1,1726,"\n"],[-1,3340," "],[1,3343,"—"],[-1,3383," "],[1,3389,"—"],[-1,3433," "],[1,3436,"—"],[-1,3514,"o"],[1,3516,"\n"],[-1,3534,"l"],[1,3537,"\n"],[-1,3541,"d"],[1,3543,"\n"],[-1,3562,"o"],[1,3565,"\n"],[-1,3569,"d"],[1,3572,"\n"],[-1,3576,"d"],[1,3578,"\n"],[-1,3582,"\n"],[1,3604,"`"],[-1,3604,"\n"],[1,3877,"\n"],[-1,4494,"\n"],[1,4619,"\n"],[-1,6076,"）"],[1,6093,"）"],[-1,6103,"件"],[1,6108,"件"],[-1,6148," "],[1,6156,"t"],[-1,6276,"\n"],[1,6315,"\n"],[-1,6315,""]],[6316,6316],[232,232]]],[1564576305536,["GJX@GJXAIOU",[[1,4618,"![搜狗截图20190731203134]($resource/%E6%90%9C%E7%8B%97%E6%88%AA%E5%9B%BE20190731203134.png)"]],[4618,4618],[4706,4706]]],[1564576324040,["GJX@GJXAIOU",[[1,4708,"\n"]],[4706,4706],[4707,4707]]],[1564576338988,["GJX@GJXAIOU",[[1,4707,"- 参数一： --soft "]],[4707,4707],[4721,4721]]],[1564576339768,["GJX@GJXAIOU",[[1,4722,"- \n"]],[4721,4721],[4724,4724]]],[1564576343597,["GJX@GJXAIOU",[[1,4724,"擦书"]],[4724,4724],[4726,4726]]],[1564576344530,["GJX@GJXAIOU",[[-1,4724,"擦书"]],[4726,4726],[4724,4724]]],[1564576350613,["GJX@GJXAIOU",[[1,4724,"参数二：--"]],[4724,4724],[4730,4730]]],[1564576352154,["GJX@GJXAIOU",[[1,4728," "]],[4728,4728],[4729,4729]]],[1564576412233,[null,[[-1,232,"。"],[1,246,"，"],[-1,256,"式"],[1,289,"）"],[-1,293,"）"],[1,300," "],[-1,301," "],[1,331,"见"],[-1,357,"）"],[1,364,"t"],[-1,367,"t"],[1,370,"\n"],[-1,421,")"],[1,432,"置"],[-1,452,"置:"],[1,454,"\n"],[1,528,"\n"],[-1,530,"\n"],[1,536,"\n"],[-1,538,"\n"],[1,553,"\n"],[-1,555,"\n"],[1,567,"\n"],[-1,569,"\n"],[1,588,"\n"],[-1,590,"\n"],[1,673,"\n"],[-1,680," "],[-1,696," "],[1,697,"\n"],[1,707,"\n"],[-1,710,"\n"],[1,745,"\n"],[-1,749," "],[-1,760," "],[1,761,"\n"],[-1,806," "],[1,807,"\n"],[1,824,"\n"],[-1,827,"\n"],[1,1516,":"],[-1,1520,"上"],[-1,1563,"#"],[1,1564,"\n"],[1,1612,"效"],[-1,1628,"效"],[1,1629,"\n"],[-1,1726,"\n"],[1,3341," "],[-1,3343,"—"],[1,3384," "],[-1,3389,"—"],[1,3434," "],[-1,3436,"—"],[1,3515,"o"],[-1,3516,"\n"],[1,3535,"l"],[-1,3537,"\n"],[1,3542,"d"],[-1,3543,"\n"],[1,3563,"o"],[-1,3565,"\n"],[1,3570,"d"],[-1,3572,"\n"],[1,3577,"d"],[-1,3578,"\n"],[1,3583,"\n"],[-1,3604,"`"],[1,3605,"\n"],[-1,3877,"\n"],[1,4495,"\n"],[-1,4733,"\n"],[1,6189,"）"],[-1,6205,"）"],[1,6216,"件"],[-1,6220,"件"],[1,6261," "],[-1,6268,"t"],[1,6389,"\n"],[-1,6427,"\n"],[1,6428,""]],[232,232],[6428,6428]]],[1564576412233,[null,[[1,232,"。"],[-1,245,"，"],[1,256,"式"],[-1,288,"）"],[1,293,"）"],[-1,299," "],[1,301," "],[-1,330,"见"],[1,357,"）"],[-1,363,"t"],[1,367,"t"],[-1,369,"\n"],[1,421,")"],[-1,431,"置"],[1,452,"置:"],[-1,452,"\n"],[-1,527,"\n"],[1,530,"\n"],[-1,535,"\n"],[1,538,"\n"],[-1,552,"\n"],[1,555,"\n"],[-1,566,"\n"],[1,569,"\n"],[-1,587,"\n"],[1,590,"\n"],[-1,672,"\n"],[1,680," "],[1,695," "],[-1,695,"\n"],[-1,706,"\n"],[1,710,"\n"],[-1,744,"\n"],[1,749," "],[1,759," "],[-1,759,"\n"],[1,805," "],[-1,805,"\n"],[-1,823,"\n"],[1,827,"\n"],[-1,1515,":"],[1,1520,"上"],[1,1562,"#"],[-1,1562,"\n"],[-1,1611,"效"],[1,1628,"效"],[-1,1628,"\n"],[1,1726,"\n"],[-1,3340," "],[1,3343,"—"],[-1,3383," "],[1,3389,"—"],[-1,3433," "],[1,3436,"—"],[-1,3514,"o"],[1,3516,"\n"],[-1,3534,"l"],[1,3537,"\n"],[-1,3541,"d"],[1,3543,"\n"],[-1,3562,"o"],[1,3565,"\n"],[-1,3569,"d"],[1,3572,"\n"],[-1,3576,"d"],[1,3578,"\n"],[-1,3582,"\n"],[1,3604,"`"],[-1,3604,"\n"],[1,3877,"\n"],[-1,4494,"\n"],[1,4733,"\n"],[-1,6188,"）"],[1,6205,"）"],[-1,6215,"件"],[1,6220,"件"],[-1,6260," "],[1,6268,"t"],[-1,6388,"\n"],[1,6427,"\n"],[-1,6427,""]],[6428,6428],[232,232]]],[1564576355962,["GJX@GJXAIOU",[[1,4731,"mixed"]],[4731,4731],[4736,4736]]],[1564576357168,["GJX@GJXAIOU",[[1,4737,"- \n"]],[4736,4736],[4739,4739]]],[1564576358189,["GJX@GJXAIOU",[[1,4739,"c"]],[4739,4739],[4740,4740]]],[1564576358696,["GJX@GJXAIOU",[[-1,4739,"c"]],[4740,4740],[4739,4739]]],[1564576365994,["GJX@GJXAIOU",[[1,4739,"参数三： --hard"]],[4739,4739],[4750,4750]]],[1564576369483,["GJX@GJXAIOU",[[1,4721," :"]],[4721,4721],[4723,4723]]],[1564576371314,["GJX@GJXAIOU",[[-1,4722,":"]],[4723,4723],[4722,4722]]],[1564576384651,["GJX@GJXAIOU",[[1,4722,"：仅仅在本地库移动HEAD"]],[4722,4722],[4735,4735]]],[1564576384689,["GJX@GJXAIOU",[[1,4731," "]],[4735,4735],[4736,4736]]],[1564576385812,["GJX@GJXAIOU",[[1,4736,"指针"]],[4736,4736],[4738,4738]]],[1564576385852,["GJX@GJXAIOU",[[1,4736," "]],[4738,4738],[4739,4739]]],[1564576386418,["GJX@GJXAIOU",[[1,4739,"；"]],[4739,4739],[4740,4740]]],[1564576402129,["GJX@GJXAIOU",[[1,4755," ：在本地库移动HEAD"]],[4755,4755],[4767,4767]]],[1564576402169,["GJX@GJXAIOU",[[1,4763," "]],[4767,4767],[4768,4768]]],[1564576403707,["GJX@GJXAIOU",[[1,4768,"指针"]],[4768,4768],[4770,4770]]],[1564576403747,["GJX@GJXAIOU",[[1,4768," "]],[4770,4770],[4771,4771]]],[1564576410881,["GJX@GJXAIOU",[[1,4771,"，同时重置暂存区；"]],[4771,4771],[4780,4780]]],[1564576472241,[null,[[-1,232,"。"],[1,246,"，"],[-1,256,"式"],[1,289,"）"],[-1,293,"）"],[1,300," "],[-1,301," "],[1,331,"见"],[-1,357,"）"],[1,364,"t"],[-1,367,"t"],[1,370,"\n"],[-1,421,")"],[1,432,"置"],[-1,452,"置:"],[1,454,"\n"],[1,528,"\n"],[-1,530,"\n"],[1,536,"\n"],[-1,538,"\n"],[1,553,"\n"],[-1,555,"\n"],[1,567,"\n"],[-1,569,"\n"],[1,588,"\n"],[-1,590,"\n"],[1,673,"\n"],[-1,680," "],[-1,696," "],[1,697,"\n"],[1,707,"\n"],[-1,710,"\n"],[1,745,"\n"],[-1,749," "],[-1,760," "],[1,761,"\n"],[-1,806," "],[1,807,"\n"],[1,824,"\n"],[-1,827,"\n"],[1,1516,":"],[-1,1520,"上"],[-1,1563,"#"],[1,1564,"\n"],[1,1612,"效"],[-1,1628,"效"],[1,1629,"\n"],[-1,1726,"\n"],[1,3341," "],[-1,3343,"—"],[1,3384," "],[-1,3389,"—"],[1,3434," "],[-1,3436,"—"],[1,3515,"o"],[-1,3516,"\n"],[1,3535,"l"],[-1,3537,"\n"],[1,3542,"d"],[-1,3543,"\n"],[1,3563,"o"],[-1,3565,"\n"],[1,3570,"d"],[-1,3572,"\n"],[1,3577,"d"],[-1,3578,"\n"],[1,3583,"\n"],[-1,3604,"`"],[1,3605,"\n"],[-1,3877,"\n"],[1,4495,"\n"],[-1,4796,"\n"],[1,6252,"）"],[-1,6268,"）"],[1,6279,"件"],[-1,6283,"件"],[1,6324," "],[-1,6331,"t"],[1,6452,"\n"],[-1,6490,"\n"],[1,6491,""]],[232,232],[6491,6491]]],[1564576472241,[null,[[1,232,"。"],[-1,245,"，"],[1,256,"式"],[-1,288,"）"],[1,293,"）"],[-1,299," "],[1,301," "],[-1,330,"见"],[1,357,"）"],[-1,363,"t"],[1,367,"t"],[-1,369,"\n"],[1,421,")"],[-1,431,"置"],[1,452,"置:"],[-1,452,"\n"],[-1,527,"\n"],[1,530,"\n"],[-1,535,"\n"],[1,538,"\n"],[-1,552,"\n"],[1,555,"\n"],[-1,566,"\n"],[1,569,"\n"],[-1,587,"\n"],[1,590,"\n"],[-1,672,"\n"],[1,680," "],[1,695," "],[-1,695,"\n"],[-1,706,"\n"],[1,710,"\n"],[-1,744,"\n"],[1,749," "],[1,759," "],[-1,759,"\n"],[1,805," "],[-1,805,"\n"],[-1,823,"\n"],[1,827,"\n"],[-1,1515,":"],[1,1520,"上"],[1,1562,"#"],[-1,1562,"\n"],[-1,1611,"效"],[1,1628,"效"],[-1,1628,"\n"],[1,1726,"\n"],[-1,3340," "],[1,3343,"—"],[-1,3383," "],[1,3389,"—"],[-1,3433," "],[1,3436,"—"],[-1,3514,"o"],[1,3516,"\n"],[-1,3534,"l"],[1,3537,"\n"],[-1,3541,"d"],[1,3543,"\n"],[-1,3562,"o"],[1,3565,"\n"],[-1,3569,"d"],[1,3572,"\n"],[-1,3576,"d"],[1,3578,"\n"],[-1,3582,"\n"],[1,3604,"`"],[-1,3604,"\n"],[1,3877,"\n"],[-1,4494,"\n"],[1,4796,"\n"],[-1,6251,"）"],[1,6268,"）"],[-1,6278,"件"],[1,6283,"件"],[-1,6323," "],[1,6331,"t"],[-1,6451,"\n"],[1,6490,"\n"],[-1,6490,""]],[6491,6491],[232,232]]],[1564576424043,["GJX@GJXAIOU",[[1,4794," ：在本地库移动HEAD"]],[4794,4794],[4806,4806]]],[1564576424082,["GJX@GJXAIOU",[[1,4802," "]],[4806,4806],[4807,4807]]],[1564576425156,["GJX@GJXAIOU",[[1,4807,"指针"]],[4807,4807],[4809,4809]]],[1564576425195,["GJX@GJXAIOU",[[1,4807," "]],[4809,4809],[4810,4810]]],[1564576439661,["GJX@GJXAIOU",[[1,4810,"，同时重置暂存区和工作区；"]],[4810,4810],[4823,4823]]],[1564576442898,["GJX@GJXAIOU",[[1,4714,"·"]],[4714,4714],[4715,4715]]],[1564576444007,["GJX@GJXAIOU",[[-1,4714,"·"]],[4715,4715],[4714,4714]]],[1564576444442,["GJX@GJXAIOU",[[1,4714,"`"]],[4714,4714],[4715,4715]]],[1564576445876,["GJX@GJXAIOU",[[1,4749,"`"]],[4749,4749],[4750,4750]]],[1564576446546,["GJX@GJXAIOU",[[1,4790,"`"]],[4790,4790],[4791,4791]]],[1564576448461,["GJX@GJXAIOU",[[1,4797,"`"]],[4797,4797],[4798,4798]]],[1564576450004,["GJX@GJXAIOU",[[1,4757,"`"]],[4757,4757],[4758,4758]]],[1564576450801,["GJX@GJXAIOU",[[1,4720,"`"]],[4720,4720],[4721,4721]]],[1564576452071,["GJX@GJXAIOU",[[-1,4720,"`"]],[4721,4721],[4720,4720]]],[1564576452646,["GJX@GJXAIOU",[[1,4721,"`"]],[4721,4721],[4722,4722]]],[1564576455378,["GJX@GJXAIOU",[[-1,4713," "]],[4714,4714],[4713,4713]]],[1564576456383,["GJX@GJXAIOU",[[-1,4747,"："]],[4748,4748],[4747,4747]]],[1564576458530,["GJX@GJXAIOU",[[1,4747,":"]],[4747,4747],[4748,4748]]],[1564576460320,["GJX@GJXAIOU",[[-1,4748," "]],[4749,4749],[4748,4748]]],[1564576463330,["GJX@GJXAIOU",[[-1,4788,"："]],[4789,4789],[4788,4788]]],[1564576465237,["GJX@GJXAIOU",[[1,4788,":"]],[4788,4788],[4789,4789]]],[1564576467352,["GJX@GJXAIOU",[[-1,4789," "]],[4790,4790],[4789,4789]]],[1564576471176,["GJX@GJXAIOU",[[-1,4712,"："]],[4713,4713],[4712,4712]]],[1564576532240,[null,[[-1,232,"。"],[1,246,"，"],[-1,256,"式"],[1,289,"）"],[-1,293,"）"],[1,300," "],[-1,301," "],[1,331,"见"],[-1,357,"）"],[1,364,"t"],[-1,367,"t"],[1,370,"\n"],[-1,421,")"],[1,432,"置"],[-1,452,"置:"],[1,454,"\n"],[1,528,"\n"],[-1,530,"\n"],[1,536,"\n"],[-1,538,"\n"],[1,553,"\n"],[-1,555,"\n"],[1,567,"\n"],[-1,569,"\n"],[1,588,"\n"],[-1,590,"\n"],[1,673,"\n"],[-1,680," "],[-1,696," "],[1,697,"\n"],[1,707,"\n"],[-1,710,"\n"],[1,745,"\n"],[-1,749," "],[-1,760," "],[1,761,"\n"],[-1,806," "],[1,807,"\n"],[1,824,"\n"],[-1,827,"\n"],[1,1516,":"],[-1,1520,"上"],[-1,1563,"#"],[1,1564,"\n"],[1,1612,"效"],[-1,1628,"效"],[1,1629,"\n"],[-1,1726,"\n"],[1,3341," "],[-1,3343,"—"],[1,3384," "],[-1,3389,"—"],[1,3434," "],[-1,3436,"—"],[1,3515,"o"],[-1,3516,"\n"],[1,3535,"l"],[-1,3537,"\n"],[1,3542,"d"],[-1,3543,"\n"],[1,3563,"o"],[-1,3565,"\n"],[1,3570,"d"],[-1,3572,"\n"],[1,3577,"d"],[-1,3578,"\n"],[1,3583,"\n"],[-1,3604,"`"],[1,3605,"\n"],[-1,3877,"\n"],[1,4495,"\n"],[-1,4827,"\n"],[1,6283,"）"],[-1,6299,"）"],[1,6310,"件"],[-1,6314,"件"],[1,6355," "],[-1,6362,"t"],[1,6483,"\n"],[-1,6521,"\n"],[1,6522,""]],[232,232],[6522,6522]]],[1564576532240,[null,[[1,232,"。"],[-1,245,"，"],[1,256,"式"],[-1,288,"）"],[1,293,"）"],[-1,299," "],[1,301," "],[-1,330,"见"],[1,357,"）"],[-1,363,"t"],[1,367,"t"],[-1,369,"\n"],[1,421,")"],[-1,431,"置"],[1,452,"置:"],[-1,452,"\n"],[-1,527,"\n"],[1,530,"\n"],[-1,535,"\n"],[1,538,"\n"],[-1,552,"\n"],[1,555,"\n"],[-1,566,"\n"],[1,569,"\n"],[-1,587,"\n"],[1,590,"\n"],[-1,672,"\n"],[1,680," "],[1,695," "],[-1,695,"\n"],[-1,706,"\n"],[1,710,"\n"],[-1,744,"\n"],[1,749," "],[1,759," "],[-1,759,"\n"],[1,805," "],[-1,805,"\n"],[-1,823,"\n"],[1,827,"\n"],[-1,1515,":"],[1,1520,"上"],[1,1562,"#"],[-1,1562,"\n"],[-1,1611,"效"],[1,1628,"效"],[-1,1628,"\n"],[1,1726,"\n"],[-1,3340," "],[1,3343,"—"],[-1,3383," "],[1,3389,"—"],[-1,3433," "],[1,3436,"—"],[-1,3514,"o"],[1,3516,"\n"],[-1,3534,"l"],[1,3537,"\n"],[-1,3541,"d"],[1,3543,"\n"],[-1,3562,"o"],[1,3565,"\n"],[-1,3569,"d"],[1,3572,"\n"],[-1,3576,"d"],[1,3578,"\n"],[-1,3582,"\n"],[1,3604,"`"],[-1,3604,"\n"],[1,3877,"\n"],[-1,4494,"\n"],[1,4827,"\n"],[-1,6282,"）"],[1,6299,"）"],[-1,6309,"件"],[1,6314,"件"],[-1,6354," "],[1,6362,"t"],[-1,6482,"\n"],[1,6521,"\n"],[-1,6521,""]],[6522,6522],[232,232]]],[1564576472659,["GJX@GJXAIOU",[[1,4712,":"]],[4712,4712],[4713,4713]]],[1564576592298,[null,[[-1,232,"。"],[1,246,"，"],[-1,256,"式"],[1,289,"）"],[-1,293,"）"],[1,300," "],[-1,301," "],[1,331,"见"],[-1,357,"）"],[1,364,"t"],[-1,367,"t"],[1,370,"\n"],[-1,421,")"],[1,432,"置"],[-1,452,"置:"],[1,454,"\n"],[1,528,"\n"],[-1,530,"\n"],[1,536,"\n"],[-1,538,"\n"],[1,553,"\n"],[-1,555,"\n"],[1,567,"\n"],[-1,569,"\n"],[1,588,"\n"],[-1,590,"\n"],[1,673,"\n"],[-1,680," "],[-1,696," "],[1,697,"\n"],[1,707,"\n"],[-1,710,"\n"],[1,745,"\n"],[-1,749," "],[-1,760," "],[1,761,"\n"],[-1,806," "],[1,807,"\n"],[1,824,"\n"],[-1,827,"\n"],[1,1516,":"],[-1,1520,"上"],[-1,1563,"#"],[1,1564,"\n"],[1,1612,"效"],[-1,1628,"效"],[1,1629,"\n"],[-1,1726,"\n"],[1,3341," "],[-1,3343,"—"],[1,3384," "],[-1,3389,"—"],[1,3434," "],[-1,3436,"—"],[1,3515,"o"],[-1,3516,"\n"],[1,3535,"l"],[-1,3537,"\n"],[1,3542,"d"],[-1,3543,"\n"],[1,3563,"o"],[-1,3565,"\n"],[1,3570,"d"],[-1,3572,"\n"],[1,3577,"d"],[-1,3578,"\n"],[1,3583,"\n"],[-1,3604,"`"],[1,3605,"\n"],[-1,3877,"\n"],[1,4495,"\n"],[-1,4828,"\n"],[1,6284,"）"],[-1,6300,"）"],[1,6311,"件"],[-1,6315,"件"],[1,6356," "],[-1,6363,"t"],[1,6484,"\n"],[-1,6522,"\n"],[1,6523,""]],[232,232],[6523,6523]]],[1564576592298,[null,[[1,232,"。"],[-1,245,"，"],[1,256,"式"],[-1,288,"）"],[1,293,"）"],[-1,299," "],[1,301," "],[-1,330,"见"],[1,357,"）"],[-1,363,"t"],[1,367,"t"],[-1,369,"\n"],[1,421,")"],[-1,431,"置"],[1,452,"置:"],[-1,452,"\n"],[-1,527,"\n"],[1,530,"\n"],[-1,535,"\n"],[1,538,"\n"],[-1,552,"\n"],[1,555,"\n"],[-1,566,"\n"],[1,569,"\n"],[-1,587,"\n"],[1,590,"\n"],[-1,672,"\n"],[1,680," "],[1,695," "],[-1,695,"\n"],[-1,706,"\n"],[1,710,"\n"],[-1,744,"\n"],[1,749," "],[1,759," "],[-1,759,"\n"],[1,805," "],[-1,805,"\n"],[-1,823,"\n"],[1,827,"\n"],[-1,1515,":"],[1,1520,"上"],[1,1562,"#"],[-1,1562,"\n"],[-1,1611,"效"],[1,1628,"效"],[-1,1628,"\n"],[1,1726,"\n"],[-1,3340," "],[1,3343,"—"],[-1,3383," "],[1,3389,"—"],[-1,3433," "],[1,3436,"—"],[-1,3514,"o"],[1,3516,"\n"],[-1,3534,"l"],[1,3537,"\n"],[-1,3541,"d"],[1,3543,"\n"],[-1,3562,"o"],[1,3565,"\n"],[-1,3569,"d"],[1,3572,"\n"],[-1,3576,"d"],[1,3578,"\n"],[-1,3582,"\n"],[1,3604,"`"],[-1,3604,"\n"],[1,3877,"\n"],[-1,4494,"\n"],[1,4828,"\n"],[-1,6283,"）"],[1,6300,"）"],[-1,6310,"件"],[1,6315,"件"],[-1,6355," "],[1,6363,"t"],[-1,6483,"\n"],[1,6522,"\n"],[-1,6522,""]],[6523,6523],[232,232]]],[1564576586240,["GJX@GJXAIOU",[[1,4828,"\n"]],[4827,4827],[4828,4828]]],[1564576586367,["GJX@GJXAIOU",[[1,4829,"\n"]],[4828,4828],[4829,4829]]],[1564576586511,["GJX@GJXAIOU",[[1,4830,"\n"]],[4829,4829],[4830,4830]]],[1564576586743,["GJX@GJXAIOU",[[1,4831,"\n"]],[4830,4830],[4831,4831]]],[1564576592208,["GJX@GJXAIOU",[[1,4829,"### sa"]],[4829,4829],[4835,4835]]],[1564576652294,[null,[[-1,232,"。"],[1,246,"，"],[-1,256,"式"],[1,289,"）"],[-1,293,"）"],[1,300," "],[-1,301," "],[1,331,"见"],[-1,357,"）"],[1,364,"t"],[-1,367,"t"],[1,370,"\n"],[-1,421,")"],[1,432,"置"],[-1,452,"置:"],[1,454,"\n"],[1,528,"\n"],[-1,530,"\n"],[1,536,"\n"],[-1,538,"\n"],[1,553,"\n"],[-1,555,"\n"],[1,567,"\n"],[-1,569,"\n"],[1,588,"\n"],[-1,590,"\n"],[1,673,"\n"],[-1,680," "],[-1,696," "],[1,697,"\n"],[1,707,"\n"],[-1,710,"\n"],[1,745,"\n"],[-1,749," "],[-1,760," "],[1,761,"\n"],[-1,806," "],[1,807,"\n"],[1,824,"\n"],[-1,827,"\n"],[1,1516,":"],[-1,1520,"上"],[-1,1563,"#"],[1,1564,"\n"],[1,1612,"效"],[-1,1628,"效"],[1,1629,"\n"],[-1,1726,"\n"],[1,3341," "],[-1,3343,"—"],[1,3384," "],[-1,3389,"—"],[1,3434," "],[-1,3436,"—"],[1,3515,"o"],[-1,3516,"\n"],[1,3535,"l"],[-1,3537,"\n"],[1,3542,"d"],[-1,3543,"\n"],[1,3563,"o"],[-1,3565,"\n"],[1,3570,"d"],[-1,3572,"\n"],[1,3577,"d"],[-1,3578,"\n"],[1,3583,"\n"],[-1,3604,"`"],[1,3605,"\n"],[-1,3877,"\n"],[1,4495,"\n"],[-1,4838,"\n"],[1,6294,"）"],[-1,6310,"）"],[1,6321,"件"],[-1,6325,"件"],[1,6366," "],[-1,6373,"t"],[1,6494,"\n"],[-1,6532,"\n"],[1,6533,""]],[232,232],[6533,6533]]],[1564576652294,[null,[[1,232,"。"],[-1,245,"，"],[1,256,"式"],[-1,288,"）"],[1,293,"）"],[-1,299," "],[1,301," "],[-1,330,"见"],[1,357,"）"],[-1,363,"t"],[1,367,"t"],[-1,369,"\n"],[1,421,")"],[-1,431,"置"],[1,452,"置:"],[-1,452,"\n"],[-1,527,"\n"],[1,530,"\n"],[-1,535,"\n"],[1,538,"\n"],[-1,552,"\n"],[1,555,"\n"],[-1,566,"\n"],[1,569,"\n"],[-1,587,"\n"],[1,590,"\n"],[-1,672,"\n"],[1,680," "],[1,695," "],[-1,695,"\n"],[-1,706,"\n"],[1,710,"\n"],[-1,744,"\n"],[1,749," "],[1,759," "],[-1,759,"\n"],[1,805," "],[-1,805,"\n"],[-1,823,"\n"],[1,827,"\n"],[-1,1515,":"],[1,1520,"上"],[1,1562,"#"],[-1,1562,"\n"],[-1,1611,"效"],[1,1628,"效"],[-1,1628,"\n"],[1,1726,"\n"],[-1,3340," "],[1,3343,"—"],[-1,3383," "],[1,3389,"—"],[-1,3433," "],[1,3436,"—"],[-1,3514,"o"],[1,3516,"\n"],[-1,3534,"l"],[1,3537,"\n"],[-1,3541,"d"],[1,3543,"\n"],[-1,3562,"o"],[1,3565,"\n"],[-1,3569,"d"],[1,3572,"\n"],[-1,3576,"d"],[1,3578,"\n"],[-1,3582,"\n"],[1,3604,"`"],[-1,3604,"\n"],[1,3877,"\n"],[-1,4494,"\n"],[1,4838,"\n"],[-1,6293,"）"],[1,6310,"）"],[-1,6320,"件"],[1,6325,"件"],[-1,6365," "],[1,6373,"t"],[-1,6493,"\n"],[1,6532,"\n"],[-1,6532,""]],[6533,6533],[232,232]]],[1564576592340,["GJX@GJXAIOU",[[1,4835,"n"]],[4835,4835],[4836,4836]]],[1564576593141,["GJX@GJXAIOU",[[-1,4833,"san"]],[4836,4836],[4833,4833]]],[1564576599753,["GJX@GJXAIOU",[[1,4833,"删除文件并召回"]],[4833,4833],[4840,4840]]],[1564576600319,["GJX@GJXAIOU",[[-1,4838,"召回"]],[4840,4840],[4838,4838]]],[1564576603177,["GJX@GJXAIOU",[[1,4838,"找回"]],[4838,4838],[4840,4840]]],[1564576603486,["GJX@GJXAIOU",[[1,4843,"\n"]],[4840,4840],[4841,4841]]],[1564576614406,["GJX@GJXAIOU",[[1,4841,"前提：删除前，文件存在是"]],[4841,4841],[4853,4853]]],[1564576615641,["GJX@GJXAIOU",[[-1,4852,"是"]],[4853,4853],[4852,4852]]],[1564576627516,["GJX@GJXAIOU",[[1,4852,"时的状态提交到了本地库；"]],[4852,4852],[4864,4864]]],[1564576627799,["GJX@GJXAIOU",[[1,4867,"\n"]],[4864,4864],[4865,4865]]],[1564576633282,["GJX@GJXAIOU",[[1,4865,"操作：``"]],[4865,4865],[4870,4870]]],[1564576644370,["GJX@GJXAIOU",[[1,4869,"git reset --hrea"]],[4869,4869],[4885,4885]]],[1564576644952,["GJX@GJXAIOU",[[-1,4882,"rea"]],[4885,4885],[4882,4882]]],[1564576648365,["GJX@GJXAIOU",[[1,4882,"ead zhiz"]],[4882,4882],[4890,4890]]],[1564576649055,["GJX@GJXAIOU",[[-1,4886,"zhiz"]],[4890,4890],[4886,4886]]],[1564576712294,[null,[[-1,232,"。"],[1,246,"，"],[-1,256,"式"],[1,289,"）"],[-1,293,"）"],[1,300," "],[-1,301," "],[1,331,"见"],[-1,357,"）"],[1,364,"t"],[-1,367,"t"],[1,370,"\n"],[-1,421,")"],[1,432,"置"],[-1,452,"置:"],[1,454,"\n"],[1,528,"\n"],[-1,530,"\n"],[1,536,"\n"],[-1,538,"\n"],[1,553,"\n"],[-1,555,"\n"],[1,567,"\n"],[-1,569,"\n"],[1,588,"\n"],[-1,590,"\n"],[1,673,"\n"],[-1,680," "],[-1,696," "],[1,697,"\n"],[1,707,"\n"],[-1,710,"\n"],[1,745,"\n"],[-1,749," "],[-1,760," "],[1,761,"\n"],[-1,806," "],[1,807,"\n"],[1,824,"\n"],[-1,827,"\n"],[1,1516,":"],[-1,1520,"上"],[-1,1563,"#"],[1,1564,"\n"],[1,1612,"效"],[-1,1628,"效"],[1,1629,"\n"],[-1,1726,"\n"],[1,3341," "],[-1,3343,"—"],[1,3384," "],[-1,3389,"—"],[1,3434," "],[-1,3436,"—"],[1,3515,"o"],[-1,3516,"\n"],[1,3535,"l"],[-1,3537,"\n"],[1,3542,"d"],[-1,3543,"\n"],[1,3563,"o"],[-1,3565,"\n"],[1,3570,"d"],[-1,3572,"\n"],[1,3577,"d"],[-1,3578,"\n"],[1,3583,"\n"],[-1,3604,"`"],[1,3605,"\n"],[-1,3877,"\n"],[1,4495,"\n"],[-1,4890,"\n"],[1,6346,"）"],[-1,6362,"）"],[1,6373,"件"],[-1,6377,"件"],[1,6418," "],[-1,6425,"t"],[1,6546,"\n"],[-1,6584,"\n"],[1,6585,""]],[232,232],[6585,6585]]],[1564576712294,[null,[[1,232,"。"],[-1,245,"，"],[1,256,"式"],[-1,288,"）"],[1,293,"）"],[-1,299," "],[1,301," "],[-1,330,"见"],[1,357,"）"],[-1,363,"t"],[1,367,"t"],[-1,369,"\n"],[1,421,")"],[-1,431,"置"],[1,452,"置:"],[-1,452,"\n"],[-1,527,"\n"],[1,530,"\n"],[-1,535,"\n"],[1,538,"\n"],[-1,552,"\n"],[1,555,"\n"],[-1,566,"\n"],[1,569,"\n"],[-1,587,"\n"],[1,590,"\n"],[-1,672,"\n"],[1,680," "],[1,695," "],[-1,695,"\n"],[-1,706,"\n"],[1,710,"\n"],[-1,744,"\n"],[1,749," "],[1,759," "],[-1,759,"\n"],[1,805," "],[-1,805,"\n"],[-1,823,"\n"],[1,827,"\n"],[-1,1515,":"],[1,1520,"上"],[1,1562,"#"],[-1,1562,"\n"],[-1,1611,"效"],[1,1628,"效"],[-1,1628,"\n"],[1,1726,"\n"],[-1,3340," "],[1,3343,"—"],[-1,3383," "],[1,3389,"—"],[-1,3433," "],[1,3436,"—"],[-1,3514,"o"],[1,3516,"\n"],[-1,3534,"l"],[1,3537,"\n"],[-1,3541,"d"],[1,3543,"\n"],[-1,3562,"o"],[1,3565,"\n"],[-1,3569,"d"],[1,3572,"\n"],[-1,3576,"d"],[1,3578,"\n"],[-1,3582,"\n"],[1,3604,"`"],[-1,3604,"\n"],[1,3877,"\n"],[-1,4494,"\n"],[1,4890,"\n"],[-1,6345,"）"],[1,6362,"）"],[-1,6372,"件"],[1,6377,"件"],[-1,6417," "],[1,6425,"t"],[-1,6545,"\n"],[1,6584,"\n"],[-1,6584,""]],[6585,6585],[232,232]]],[1564576653540,["GJX@GJXAIOU",[[1,4888,"位置"]],[4888,4888],[4890,4890]]],[1564576655345,["GJX@GJXAIOU",[[1,4894,"\n"]],[4891,4891],[4892,4892]]],[1564576674797,["GJX@GJXAIOU",[[1,4892,"- 删除操作依据"]],[4892,4892],[4900,4900]]],[1564576675479,["GJX@GJXAIOU",[[-1,4898,"依据"]],[4900,4900],[4898,4898]]],[1564576690818,["GJX@GJXAIOU",[[1,4898,"已经提交到了本地库：指针位置指向历史记录"]],[4898,4898],[4918,4918]]],[1564576691625,["GJX@GJXAIOU",[[1,4919,"- \n"]],[4918,4918],[4921,4921]]],[1564576709694,["GJX@GJXAIOU",[[1,4921,"删除操作尚未提交到本地库：指针位置指向HEAD"]],[4921,4921],[4944,4944]]],[1564576709733,["GJX@GJXAIOU",[[1,4940," "]],[4944,4944],[4945,4945]]],[1564576710577,["GJX@GJXAIOU",[[1,4946,"- \n"]],[4945,4945],[4948,4948]]],[1564576710752,["GJX@GJXAIOU",[[-1,4946,"- "]],[4948,4948],[4947,4947]]],[1564576772295,[null,[[-1,232,"。"],[1,246,"，"],[-1,256,"式"],[1,289,"）"],[-1,293,"）"],[1,300," "],[-1,301," "],[1,331,"见"],[-1,357,"）"],[1,364,"t"],[-1,367,"t"],[1,370,"\n"],[-1,421,")"],[1,432,"置"],[-1,452,"置:"],[1,454,"\n"],[1,528,"\n"],[-1,530,"\n"],[1,536,"\n"],[-1,538,"\n"],[1,553,"\n"],[-1,555,"\n"],[1,567,"\n"],[-1,569,"\n"],[1,588,"\n"],[-1,590,"\n"],[1,673,"\n"],[-1,680," "],[-1,696," "],[1,697,"\n"],[1,707,"\n"],[-1,710,"\n"],[1,745,"\n"],[-1,749," "],[-1,760," "],[1,761,"\n"],[-1,806," "],[1,807,"\n"],[1,824,"\n"],[-1,827,"\n"],[1,1516,":"],[-1,1520,"上"],[-1,1563,"#"],[1,1564,"\n"],[1,1612,"效"],[-1,1628,"效"],[1,1629,"\n"],[-1,1726,"\n"],[1,3341," "],[-1,3343,"—"],[1,3384," "],[-1,3389,"—"],[1,3434," "],[-1,3436,"—"],[1,3515,"o"],[-1,3516,"\n"],[1,3535,"l"],[-1,3537,"\n"],[1,3542,"d"],[-1,3543,"\n"],[1,3563,"o"],[-1,3565,"\n"],[1,3570,"d"],[-1,3572,"\n"],[1,3577,"d"],[-1,3578,"\n"],[1,3583,"\n"],[-1,3604,"`"],[1,3605,"\n"],[-1,3877,"\n"],[1,4495,"\n"],[-1,4886,"`\n位置\n"],[1,4891,"指针位置`"],[-1,4947,"#"],[1,4949,"\n#"],[1,6403,"）"],[-1,6419,"）"],[1,6430,"件"],[-1,6434,"件"],[1,6475," "],[-1,6482,"t"],[1,6603,"\n"],[-1,6641,"\n"],[1,6642,""]],[232,232],[6642,6642]]],[1564576772295,[null,[[1,232,"。"],[-1,245,"，"],[1,256,"式"],[-1,288,"）"],[1,293,"）"],[-1,299," "],[1,301," "],[-1,330,"见"],[1,357,"）"],[-1,363,"t"],[1,367,"t"],[-1,369,"\n"],[1,421,")"],[-1,431,"置"],[1,452,"置:"],[-1,452,"\n"],[-1,527,"\n"],[1,530,"\n"],[-1,535,"\n"],[1,538,"\n"],[-1,552,"\n"],[1,555,"\n"],[-1,566,"\n"],[1,569,"\n"],[-1,587,"\n"],[1,590,"\n"],[-1,672,"\n"],[1,680," "],[1,695," "],[-1,695,"\n"],[-1,706,"\n"],[1,710,"\n"],[-1,744,"\n"],[1,749," "],[1,759," "],[-1,759,"\n"],[1,805," "],[-1,805,"\n"],[-1,823,"\n"],[1,827,"\n"],[-1,1515,":"],[1,1520,"上"],[1,1562,"#"],[-1,1562,"\n"],[-1,1611,"效"],[1,1628,"效"],[-1,1628,"\n"],[1,1726,"\n"],[-1,3340," "],[1,3343,"—"],[-1,3383," "],[1,3389,"—"],[-1,3433," "],[1,3436,"—"],[-1,3514,"o"],[1,3516,"\n"],[-1,3534,"l"],[1,3537,"\n"],[-1,3541,"d"],[1,3543,"\n"],[-1,3562,"o"],[1,3565,"\n"],[-1,3569,"d"],[1,3572,"\n"],[-1,3576,"d"],[1,3578,"\n"],[-1,3582,"\n"],[1,3604,"`"],[-1,3604,"\n"],[1,3877,"\n"],[-1,4494,"\n"],[1,4886,"`\n位置\n"],[-1,4886,"指针位置`"],[1,4947,"#"],[-1,4948,"\n#"],[-1,6404,"）"],[1,6421,"）"],[-1,6431,"件"],[1,6436,"件"],[-1,6476," "],[1,6484,"t"],[-1,6604,"\n"],[1,6643,"\n"],[-1,6643,""]],[6642,6642],[232,232]]],[1564576721435,["GJX@GJXAIOU",[[1,4947,"### 比较文件的差异"]],[4947,4947],[4958,4958]]],[1564576722094,["GJX@GJXAIOU",[[1,4960,"\n"]],[4958,4958],[4959,4959]]],[1564576739721,["GJX@GJXAIOU",[[1,4959,"- 将工作区文件和暂存区记性"]],[4959,4959],[4973,4973]]],[1564576740312,["GJX@GJXAIOU",[[-1,4971,"记性"]],[4973,4973],[4971,4971]]],[1564576742124,["GJX@GJXAIOU",[[1,4971,"记性"]],[4971,4971],[4973,4973]]],[1564576743141,["GJX@GJXAIOU",[[-1,4971,"记性"]],[4973,4973],[4971,4971]]],[1564576750563,["GJX@GJXAIOU",[[1,4971,"进行比较：``"]],[4971,4971],[4978,4978]]],[1564576753553,["GJX@GJXAIOU",[[1,4977,"git f"]],[4977,4977],[4982,4982]]],[1564576754000,["GJX@GJXAIOU",[[-1,4981,"f"]],[4982,4982],[4981,4981]]],[1564576756491,["GJX@GJXAIOU",[[1,4981,"diff wen"]],[4981,4981],[4989,4989]]],[1564576757799,["GJX@GJXAIOU",[[-1,4986,"wen"]],[4989,4989],[4986,4986]]],[1564576762940,["GJX@GJXAIOU",[[1,4986,"文件名"]],[4986,4986],[4989,4989]]],[1564576765673,["GJX@GJXAIOU",[[1,4991,"- \n"]],[4990,4990],[4993,4993]]],[1564576771227,["GJX@GJXAIOU",[[1,4993,"将工作区和"]],[4993,4993],[4998,4998]]],[1564576832300,[null,[[-1,232,"。"],[1,246,"，"],[-1,256,"式"],[1,289,"）"],[-1,293,"）"],[1,300," "],[-1,301," "],[1,331,"见"],[-1,357,"）"],[1,364,"t"],[-1,367,"t"],[1,370,"\n"],[-1,421,")"],[1,432,"置"],[-1,452,"置:"],[1,454,"\n"],[1,528,"\n"],[-1,530,"\n"],[1,536,"\n"],[-1,538,"\n"],[1,553,"\n"],[-1,555,"\n"],[1,567,"\n"],[-1,569,"\n"],[1,588,"\n"],[-1,590,"\n"],[1,673,"\n"],[-1,680," "],[-1,696," "],[1,697,"\n"],[1,707,"\n"],[-1,710,"\n"],[1,745,"\n"],[-1,749," "],[-1,760," "],[1,761,"\n"],[-1,806," "],[1,807,"\n"],[1,824,"\n"],[-1,827,"\n"],[1,1516,":"],[-1,1520,"上"],[-1,1563,"#"],[1,1564,"\n"],[1,1612,"效"],[-1,1628,"效"],[1,1629,"\n"],[-1,1726,"\n"],[1,3341," "],[-1,3343,"—"],[1,3384," "],[-1,3389,"—"],[1,3434," "],[-1,3436,"—"],[1,3515,"o"],[-1,3516,"\n"],[1,3535,"l"],[-1,3537,"\n"],[1,3542,"d"],[-1,3543,"\n"],[1,3563,"o"],[-1,3565,"\n"],[1,3570,"d"],[-1,3572,"\n"],[1,3577,"d"],[-1,3578,"\n"],[1,3583,"\n"],[-1,3604,"`"],[1,3605,"\n"],[-1,3877,"\n"],[1,4495,"\n"],[-1,4886,"`\n位置\n"],[1,4891,"指针位置`"],[-1,4958,"#"],[1,4959,"\n"],[1,5000,"#"],[1,6454,"）"],[-1,6470,"）"],[1,6481,"件"],[-1,6485,"件"],[1,6526," "],[-1,6533,"t"],[1,6654,"\n"],[-1,6692,"\n"],[1,6693,""]],[232,232],[6693,6693]]],[1564576832300,[null,[[1,232,"。"],[-1,245,"，"],[1,256,"式"],[-1,288,"）"],[1,293,"）"],[-1,299," "],[1,301," "],[-1,330,"见"],[1,357,"）"],[-1,363,"t"],[1,367,"t"],[-1,369,"\n"],[1,421,")"],[-1,431,"置"],[1,452,"置:"],[-1,452,"\n"],[-1,527,"\n"],[1,530,"\n"],[-1,535,"\n"],[1,538,"\n"],[-1,552,"\n"],[1,555,"\n"],[-1,566,"\n"],[1,569,"\n"],[-1,587,"\n"],[1,590,"\n"],[-1,672,"\n"],[1,680," "],[1,695," "],[-1,695,"\n"],[-1,706,"\n"],[1,710,"\n"],[-1,744,"\n"],[1,749," "],[1,759," "],[-1,759,"\n"],[1,805," "],[-1,805,"\n"],[-1,823,"\n"],[1,827,"\n"],[-1,1515,":"],[1,1520,"上"],[1,1562,"#"],[-1,1562,"\n"],[-1,1611,"效"],[1,1628,"效"],[-1,1628,"\n"],[1,1726,"\n"],[-1,3340," "],[1,3343,"—"],[-1,3383," "],[1,3389,"—"],[-1,3433," "],[1,3436,"—"],[-1,3514,"o"],[1,3516,"\n"],[-1,3534,"l"],[1,3537,"\n"],[-1,3541,"d"],[1,3543,"\n"],[-1,3562,"o"],[1,3565,"\n"],[-1,3569,"d"],[1,3572,"\n"],[-1,3576,"d"],[1,3578,"\n"],[-1,3582,"\n"],[1,3604,"`"],[-1,3604,"\n"],[1,3877,"\n"],[-1,4494,"\n"],[1,4886,"`\n位置\n"],[-1,4886,"指针位置`"],[1,4958,"#"],[-1,4958,"\n"],[-1,5000,"#"],[-1,6455,"）"],[1,6472,"）"],[-1,6482,"件"],[1,6487,"件"],[-1,6527," "],[1,6535,"t"],[-1,6655,"\n"],[1,6694,"\n"],[-1,6694,""]],[6693,6693],[232,232]]],[1564576772710,["GJX@GJXAIOU",[[-1,4997,"和"]],[4998,4998],[4997,4997]]],[1564576786224,["GJX@GJXAIOU",[[1,4997,"文件和本地库历史记录比较：``"]],[4997,4997],[5012,5012]]],[1564576789025,["GJX@GJXAIOU",[[1,5011,"git f"]],[5011,5011],[5016,5016]]],[1564576789630,["GJX@GJXAIOU",[[-1,5015,"f"]],[5016,5016],[5015,5015]]],[1564576805660,["GJX@GJXAIOU",[[1,5015,"diff 本地库中历史版本  文件名"]],[5015,5015],[5033,5033]]],[1564576809103,["GJX@GJXAIOU",[[-1,5029," "]],[5029,5029],[5028,5028]]],[1564576812392,["GJX@GJXAIOU",[[1,5034,"- \n"]],[5033,5033],[5036,5036]]],[1564576823059,["GJX@GJXAIOU",[[1,5036,"以上不带文件名就是比较多个文件；"]],[5036,5036],[5052,5052]]],[1564577012301,[null,[[-1,232,"。"],[1,246,"，"],[-1,256,"式"],[1,289,"）"],[-1,293,"）"],[1,300," "],[-1,301," "],[1,331,"见"],[-1,357,"）"],[1,364,"t"],[-1,367,"t"],[1,370,"\n"],[-1,421,")"],[1,432,"置"],[-1,452,"置:"],[1,454,"\n"],[1,528,"\n"],[-1,530,"\n"],[1,536,"\n"],[-1,538,"\n"],[1,553,"\n"],[-1,555,"\n"],[1,567,"\n"],[-1,569,"\n"],[1,588,"\n"],[-1,590,"\n"],[1,673,"\n"],[-1,680," "],[-1,696," "],[1,697,"\n"],[1,707,"\n"],[-1,710,"\n"],[1,745,"\n"],[-1,749," "],[-1,760," "],[1,761,"\n"],[-1,806," "],[1,807,"\n"],[1,824,"\n"],[-1,827,"\n"],[1,1516,":"],[-1,1520,"上"],[-1,1563,"#"],[1,1564,"\n"],[1,1612,"效"],[-1,1628,"效"],[1,1629,"\n"],[-1,1726,"\n"],[1,3341," "],[-1,3343,"—"],[1,3384," "],[-1,3389,"—"],[1,3434," "],[-1,3436,"—"],[1,3515,"o"],[-1,3516,"\n"],[1,3535,"l"],[-1,3537,"\n"],[1,3542,"d"],[-1,3543,"\n"],[1,3563,"o"],[-1,3565,"\n"],[1,3570,"d"],[-1,3572,"\n"],[1,3577,"d"],[-1,3578,"\n"],[1,3583,"\n"],[-1,3604,"`"],[1,3605,"\n"],[-1,3877,"\n"],[1,4495,"\n"],[-1,4886,"`\n位置\n"],[1,4891,"指针位置`"],[-1,4958,"#"],[1,4959,"\n"],[-1,5055,""],[1,5055,"#"],[1,6508,"）"],[-1,6524,"）"],[1,6535,"件"],[-1,6539,"件"],[1,6580," "],[-1,6587,"t"],[1,6708,"\n"],[-1,6746,"\n"],[1,6747,""]],[232,232],[6747,6747]]],[1564577012301,[null,[[1,232,"。"],[-1,245,"，"],[1,256,"式"],[-1,288,"）"],[1,293,"）"],[-1,299," "],[1,301," "],[-1,330,"见"],[1,357,"）"],[-1,363,"t"],[1,367,"t"],[-1,369,"\n"],[1,421,")"],[-1,431,"置"],[1,452,"置:"],[-1,452,"\n"],[-1,527,"\n"],[1,530,"\n"],[-1,535,"\n"],[1,538,"\n"],[-1,552,"\n"],[1,555,"\n"],[-1,566,"\n"],[1,569,"\n"],[-1,587,"\n"],[1,590,"\n"],[-1,672,"\n"],[1,680," "],[1,695," "],[-1,695,"\n"],[-1,706,"\n"],[1,710,"\n"],[-1,744,"\n"],[1,749," "],[1,759," "],[-1,759,"\n"],[1,805," "],[-1,805,"\n"],[-1,823,"\n"],[1,827,"\n"],[-1,1515,":"],[1,1520,"上"],[1,1562,"#"],[-1,1562,"\n"],[-1,1611,"效"],[1,1628,"效"],[-1,1628,"\n"],[1,1726,"\n"],[-1,3340," "],[1,3343,"—"],[-1,3383," "],[1,3389,"—"],[-1,3433," "],[1,3436,"—"],[-1,3514,"o"],[1,3516,"\n"],[-1,3534,"l"],[1,3537,"\n"],[-1,3541,"d"],[1,3543,"\n"],[-1,3562,"o"],[1,3565,"\n"],[-1,3569,"d"],[1,3572,"\n"],[-1,3576,"d"],[1,3578,"\n"],[-1,3582,"\n"],[1,3604,"`"],[-1,3604,"\n"],[1,3877,"\n"],[-1,4494,"\n"],[1,4886,"`\n位置\n"],[-1,4886,"指针位置`"],[1,4958,"#"],[-1,4958,"\n"],[1,5055,""],[-1,5055,"#"],[-1,6509,"）"],[1,6526,"）"],[-1,6536,"件"],[1,6541,"件"],[-1,6581," "],[1,6589,"t"],[-1,6709,"\n"],[1,6748,"\n"],[-1,6748,""]],[6747,6747],[232,232]]],[1564577006744,["GJX@GJXAIOU",[[1,5054,"\n"]],[5053,5053],[5054,5054]]],[1564577006890,["GJX@GJXAIOU",[[1,5055,"\n"]],[5054,5054],[5055,5055]]],[1564577007072,["GJX@GJXAIOU",[[1,5056,"\n"]],[5055,5055],[5056,5056]]],[1564577007239,["GJX@GJXAIOU",[[1,5057,"\n"]],[5056,5056],[5057,5057]]],[1564577007408,["GJX@GJXAIOU",[[1,5058,"\n"]],[5057,5057],[5058,5058]]],[1564577007616,["GJX@GJXAIOU",[[1,5059,"\n"]],[5058,5058],[5059,5059]]],[1564577007770,["GJX@GJXAIOU",[[1,5060,"\n"]],[5059,5059],[5060,5060]]],[1564577008874,["GJX@GJXAIOU",[[1,5060,"## "]],[5060,5060],[5063,5063]]],[1564577072302,[null,[[-1,232,"。"],[1,246,"，"],[-1,256,"式"],[1,289,"）"],[-1,293,"）"],[1,300," "],[-1,301," "],[1,331,"见"],[-1,357,"）"],[1,364,"t"],[-1,367,"t"],[1,370,"\n"],[-1,421,")"],[1,432,"置"],[-1,452,"置:"],[1,454,"\n"],[1,528,"\n"],[-1,530,"\n"],[1,536,"\n"],[-1,538,"\n"],[1,553,"\n"],[-1,555,"\n"],[1,567,"\n"],[-1,569,"\n"],[1,588,"\n"],[-1,590,"\n"],[1,673,"\n"],[-1,680," "],[-1,696," "],[1,697,"\n"],[1,707,"\n"],[-1,710,"\n"],[1,745,"\n"],[-1,749," "],[-1,760," "],[1,761,"\n"],[-1,806," "],[1,807,"\n"],[1,824,"\n"],[-1,827,"\n"],[1,1516,":"],[-1,1520,"上"],[-1,1563,"#"],[1,1564,"\n"],[1,1612,"效"],[-1,1628,"效"],[1,1629,"\n"],[-1,1726,"\n"],[1,3341," "],[-1,3343,"—"],[1,3384," "],[-1,3389,"—"],[1,3434," "],[-1,3436,"—"],[1,3515,"o"],[-1,3516,"\n"],[1,3535,"l"],[-1,3537,"\n"],[1,3542,"d"],[-1,3543,"\n"],[1,3563,"o"],[-1,3565,"\n"],[1,3570,"d"],[-1,3572,"\n"],[1,3577,"d"],[-1,3578,"\n"],[1,3583,"\n"],[-1,3604,"`"],[1,3605,"\n"],[-1,3877,"\n"],[1,4495,"\n"],[-1,4886,"`\n位置\n"],[1,4891,"指针位置`"],[-1,4958,"#"],[1,4959,"\n"],[-1,5065,""],[1,5065,"#"],[1,6518,"）"],[-1,6534,"）"],[1,6545,"件"],[-1,6549,"件"],[1,6590," "],[-1,6597,"t"],[1,6718,"\n"],[-1,6756,"\n"],[1,6757,""]],[232,232],[6757,6757]]],[1564577072302,[null,[[1,232,"。"],[-1,245,"，"],[1,256,"式"],[-1,288,"）"],[1,293,"）"],[-1,299," "],[1,301," "],[-1,330,"见"],[1,357,"）"],[-1,363,"t"],[1,367,"t"],[-1,369,"\n"],[1,421,")"],[-1,431,"置"],[1,452,"置:"],[-1,452,"\n"],[-1,527,"\n"],[1,530,"\n"],[-1,535,"\n"],[1,538,"\n"],[-1,552,"\n"],[1,555,"\n"],[-1,566,"\n"],[1,569,"\n"],[-1,587,"\n"],[1,590,"\n"],[-1,672,"\n"],[1,680," "],[1,695," "],[-1,695,"\n"],[-1,706,"\n"],[1,710,"\n"],[-1,744,"\n"],[1,749," "],[1,759," "],[-1,759,"\n"],[1,805," "],[-1,805,"\n"],[-1,823,"\n"],[1,827,"\n"],[-1,1515,":"],[1,1520,"上"],[1,1562,"#"],[-1,1562,"\n"],[-1,1611,"效"],[1,1628,"效"],[-1,1628,"\n"],[1,1726,"\n"],[-1,3340," "],[1,3343,"—"],[-1,3383," "],[1,3389,"—"],[-1,3433," "],[1,3436,"—"],[-1,3514,"o"],[1,3516,"\n"],[-1,3534,"l"],[1,3537,"\n"],[-1,3541,"d"],[1,3543,"\n"],[-1,3562,"o"],[1,3565,"\n"],[-1,3569,"d"],[1,3572,"\n"],[-1,3576,"d"],[1,3578,"\n"],[-1,3582,"\n"],[1,3604,"`"],[-1,3604,"\n"],[1,3877,"\n"],[-1,4494,"\n"],[1,4886,"`\n位置\n"],[-1,4886,"指针位置`"],[1,4958,"#"],[-1,4958,"\n"],[1,5065,""],[-1,5065,"#"],[-1,6519,"）"],[1,6536,"）"],[-1,6546,"件"],[1,6551,"件"],[-1,6591," "],[1,6599,"t"],[-1,6719,"\n"],[1,6758,"\n"],[-1,6758,""]],[6757,6757],[232,232]]],[1564577012811,["GJX@GJXAIOU",[[1,5063,"GitHub"]],[5063,5063],[5069,5069]]],[1564577013144,["GJX@GJXAIOU",[[1,5070,"\n"]],[5069,5069],[5070,5070]]],[1564577013471,["GJX@GJXAIOU",[[1,5071,"\n"]],[5070,5070],[5071,5071]]],[1564577029195,["GJX@GJXAIOU",[[1,5071,"### 1.创建远程仓库别名"]],[5071,5071],[5085,5085]]],[1564577029583,["GJX@GJXAIOU",[[1,5086,"\n"]],[5085,5085],[5086,5086]]],[1564577054489,["GJX@GJXAIOU",[[1,5086,"- 查看当前远程仓库地址别名：``"]],[5086,5086],[5103,5103]]],[1564577057707,["GJX@GJXAIOU",[[1,5102,"git renmo"]],[5102,5102],[5111,5111]]],[1564577059905,["GJX@GJXAIOU",[[-1,5108,"nmo"]],[5111,5111],[5108,5108]]],[1564577065051,["GJX@GJXAIOU",[[1,5108,"mote -v"]],[5108,5108],[5115,5115]]],[1564577069479,["GJX@GJXAIOU",[[1,5117,"- \n"]],[5116,5116],[5119,5119]]],[1564577072138,["GJX@GJXAIOU",[[1,5119,"wei"]],[5119,5119],[5122,5122]]],[1564577132302,[null,[[-1,232,"。"],[1,246,"，"],[-1,256,"式"],[1,289,"）"],[-1,293,"）"],[1,300," "],[-1,301," "],[1,331,"见"],[-1,357,"）"],[1,364,"t"],[-1,367,"t"],[1,370,"\n"],[-1,421,")"],[1,432,"置"],[-1,452,"置:"],[1,454,"\n"],[1,528,"\n"],[-1,530,"\n"],[1,536,"\n"],[-1,538,"\n"],[1,553,"\n"],[-1,555,"\n"],[1,567,"\n"],[-1,569,"\n"],[1,588,"\n"],[-1,590,"\n"],[1,673,"\n"],[-1,680," "],[-1,696," "],[1,697,"\n"],[1,707,"\n"],[-1,710,"\n"],[1,745,"\n"],[-1,749," "],[-1,760," "],[1,761,"\n"],[-1,806," "],[1,807,"\n"],[1,824,"\n"],[-1,827,"\n"],[1,1516,":"],[-1,1520,"上"],[-1,1563,"#"],[1,1564,"\n"],[1,1612,"效"],[-1,1628,"效"],[1,1629,"\n"],[-1,1726,"\n"],[1,3341," "],[-1,3343,"—"],[1,3384," "],[-1,3389,"—"],[1,3434," "],[-1,3436,"—"],[1,3515,"o"],[-1,3516,"\n"],[1,3535,"l"],[-1,3537,"\n"],[1,3542,"d"],[-1,3543,"\n"],[1,3563,"o"],[-1,3565,"\n"],[1,3570,"d"],[-1,3572,"\n"],[1,3577,"d"],[-1,3578,"\n"],[1,3583,"\n"],[-1,3604,"`"],[1,3605,"\n"],[-1,3877,"\n"],[1,4495,"\n"],[-1,4886,"`\n位置\n"],[1,4891,"指针位置`"],[-1,4958,"#"],[1,4959,"\n"],[-1,5124,""],[1,5124,"#"],[1,6577,"）"],[-1,6593,"）"],[1,6604,"件"],[-1,6608,"件"],[1,6649," "],[-1,6656,"t"],[1,6777,"\n"],[-1,6815,"\n"],[1,6816,""]],[232,232],[6816,6816]]],[1564577132302,[null,[[1,232,"。"],[-1,245,"，"],[1,256,"式"],[-1,288,"）"],[1,293,"）"],[-1,299," "],[1,301," "],[-1,330,"见"],[1,357,"）"],[-1,363,"t"],[1,367,"t"],[-1,369,"\n"],[1,421,")"],[-1,431,"置"],[1,452,"置:"],[-1,452,"\n"],[-1,527,"\n"],[1,530,"\n"],[-1,535,"\n"],[1,538,"\n"],[-1,552,"\n"],[1,555,"\n"],[-1,566,"\n"],[1,569,"\n"],[-1,587,"\n"],[1,590,"\n"],[-1,672,"\n"],[1,680," "],[1,695," "],[-1,695,"\n"],[-1,706,"\n"],[1,710,"\n"],[-1,744,"\n"],[1,749," "],[1,759," "],[-1,759,"\n"],[1,805," "],[-1,805,"\n"],[-1,823,"\n"],[1,827,"\n"],[-1,1515,":"],[1,1520,"上"],[1,1562,"#"],[-1,1562,"\n"],[-1,1611,"效"],[1,1628,"效"],[-1,1628,"\n"],[1,1726,"\n"],[-1,3340," "],[1,3343,"—"],[-1,3383," "],[1,3389,"—"],[-1,3433," "],[1,3436,"—"],[-1,3514,"o"],[1,3516,"\n"],[-1,3534,"l"],[1,3537,"\n"],[-1,3541,"d"],[1,3543,"\n"],[-1,3562,"o"],[1,3565,"\n"],[-1,3569,"d"],[1,3572,"\n"],[-1,3576,"d"],[1,3578,"\n"],[-1,3582,"\n"],[1,3604,"`"],[-1,3604,"\n"],[1,3877,"\n"],[-1,4494,"\n"],[1,4886,"`\n位置\n"],[-1,4886,"指针位置`"],[1,4958,"#"],[-1,4958,"\n"],[1,5124,""],[-1,5124,"#"],[-1,6578,"）"],[1,6595,"）"],[-1,6605,"件"],[1,6610,"件"],[-1,6650," "],[1,6658,"t"],[-1,6778,"\n"],[1,6817,"\n"],[-1,6817,""]],[6816,6816],[232,232]]],[1564577072985,["GJX@GJXAIOU",[[-1,5119,"wei"]],[5122,5122],[5119,5119]]],[1564577085426,["GJX@GJXAIOU",[[1,5119,"为远程仓库添加别名：``"]],[5119,5119],[5131,5131]]],[1564577088891,["GJX@GJXAIOU",[[1,5130,"git remore"]],[5130,5130],[5140,5140]]],[1564577089430,["GJX@GJXAIOU",[[-1,5138,"re"]],[5140,5140],[5138,5138]]],[1564577095856,["GJX@GJXAIOU",[[1,5138,"te add bei"]],[5138,5138],[5148,5148]]],[1564577096478,["GJX@GJXAIOU",[[-1,5145,"bei"]],[5148,5148],[5145,5145]]],[1564577105149,["GJX@GJXAIOU",[[1,5145,"别名 远程仓库地址"]],[5145,5145],[5154,5154]]],[1564577128103,["GJX@GJXAIOU",[[1,5156,"- \n"]],[5155,5155],[5158,5158]]],[1564577128249,["GJX@GJXAIOU",[[-1,5156,"- "]],[5158,5158],[5157,5157]]],[1564577131386,["GJX@GJXAIOU",[[1,5159,"#"]],[5157,5157],[5158,5158]]],[1564577192309,[null,[[-1,232,"。"],[1,246,"，"],[-1,256,"式"],[1,289,"）"],[-1,293,"）"],[1,300," "],[-1,301," "],[1,331,"见"],[-1,357,"）"],[1,364,"t"],[-1,367,"t"],[1,370,"\n"],[-1,421,")"],[1,432,"置"],[-1,452,"置:"],[1,454,"\n"],[1,528,"\n"],[-1,530,"\n"],[1,536,"\n"],[-1,538,"\n"],[1,553,"\n"],[-1,555,"\n"],[1,567,"\n"],[-1,569,"\n"],[1,588,"\n"],[-1,590,"\n"],[1,673,"\n"],[-1,680," "],[-1,696," "],[1,697,"\n"],[1,707,"\n"],[-1,710,"\n"],[1,745,"\n"],[-1,749," "],[-1,760," "],[1,761,"\n"],[-1,806," "],[1,807,"\n"],[1,824,"\n"],[-1,827,"\n"],[1,1516,":"],[-1,1520,"上"],[-1,1563,"#"],[1,1564,"\n"],[1,1612,"效"],[-1,1628,"效"],[1,1629,"\n"],[-1,1726,"\n"],[1,3341," "],[-1,3343,"—"],[1,3384," "],[-1,3389,"—"],[1,3434," "],[-1,3436,"—"],[1,3515,"o"],[-1,3516,"\n"],[1,3535,"l"],[-1,3537,"\n"],[1,3542,"d"],[-1,3543,"\n"],[1,3563,"o"],[-1,3565,"\n"],[1,3570,"d"],[-1,3572,"\n"],[1,3577,"d"],[-1,3578,"\n"],[1,3583,"\n"],[-1,3604,"`"],[1,3605,"\n"],[-1,3877,"\n"],[1,4495,"\n"],[-1,4886,"`\n位置\n"],[1,4891,"指针位置`"],[-1,4958,"#"],[1,4959,"\n"],[-1,5158," "],[1,5160,"# "],[1,6612,"）"],[-1,6628,"）"],[1,6639,"件"],[-1,6643,"件"],[1,6684," "],[-1,6691,"t"],[1,6812,"\n"],[-1,6850,"\n"],[1,6851,""]],[232,232],[6851,6851]]],[1564577192309,[null,[[1,232,"。"],[-1,245,"，"],[1,256,"式"],[-1,288,"）"],[1,293,"）"],[-1,299," "],[1,301," "],[-1,330,"见"],[1,357,"）"],[-1,363,"t"],[1,367,"t"],[-1,369,"\n"],[1,421,")"],[-1,431,"置"],[1,452,"置:"],[-1,452,"\n"],[-1,527,"\n"],[1,530,"\n"],[-1,535,"\n"],[1,538,"\n"],[-1,552,"\n"],[1,555,"\n"],[-1,566,"\n"],[1,569,"\n"],[-1,587,"\n"],[1,590,"\n"],[-1,672,"\n"],[1,680," "],[1,695," "],[-1,695,"\n"],[-1,706,"\n"],[1,710,"\n"],[-1,744,"\n"],[1,749," "],[1,759," "],[-1,759,"\n"],[1,805," "],[-1,805,"\n"],[-1,823,"\n"],[1,827,"\n"],[-1,1515,":"],[1,1520,"上"],[1,1562,"#"],[-1,1562,"\n"],[-1,1611,"效"],[1,1628,"效"],[-1,1628,"\n"],[1,1726,"\n"],[-1,3340," "],[1,3343,"—"],[-1,3383," "],[1,3389,"—"],[-1,3433," "],[1,3436,"—"],[-1,3514,"o"],[1,3516,"\n"],[-1,3534,"l"],[1,3537,"\n"],[-1,3541,"d"],[1,3543,"\n"],[-1,3562,"o"],[1,3565,"\n"],[-1,3569,"d"],[1,3572,"\n"],[-1,3576,"d"],[1,3578,"\n"],[-1,3582,"\n"],[1,3604,"`"],[-1,3604,"\n"],[1,3877,"\n"],[-1,4494,"\n"],[1,4886,"`\n位置\n"],[-1,4886,"指针位置`"],[1,4958,"#"],[-1,4958,"\n"],[1,5158," "],[-1,5159,"# "],[-1,6613,"）"],[1,6630,"）"],[-1,6640,"件"],[1,6645,"件"],[-1,6685," "],[1,6693,"t"],[-1,6813,"\n"],[1,6852,"\n"],[-1,6852,""]],[6851,6851],[232,232]]],[1564577133190,["GJX@GJXAIOU",[[-1,5159,"#"]],[5158,5158],[5157,5157]]],[1564577134647,["GJX@GJXAIOU",[[1,5157,"\n"]],[5156,5156],[5157,5157]]],[1564577134766,["GJX@GJXAIOU",[[1,5158,"\n"]],[5157,5157],[5158,5158]]],[1564577134871,["GJX@GJXAIOU",[[1,5159,"\n"]],[5158,5158],[5159,5159]]],[1564577135000,["GJX@GJXAIOU",[[1,5160,"\n"]],[5159,5159],[5160,5160]]],[1564577135119,["GJX@GJXAIOU",[[1,5161,"\n"]],[5160,5160],[5161,5161]]],[1564577135239,["GJX@GJXAIOU",[[1,5162,"\n"]],[5161,5161],[5162,5162]]],[1564577143603,["GJX@GJXAIOU",[[1,5157,"### 2.推送"]],[5157,5157],[5165,5165]]],[1564577144160,["GJX@GJXAIOU",[[1,5171,"\n"]],[5165,5165],[5166,5166]]],[1564577147848,["GJX@GJXAIOU",[[1,5166,"``"]],[5166,5166],[5168,5168]]],[1564577150858,["GJX@GJXAIOU",[[1,5167,"push "]],[5167,5167],[5172,5172]]],[1564577152366,["GJX@GJXAIOU",[[-1,5167,"push "]],[5172,5172],[5167,5167]]],[1564577156241,["GJX@GJXAIOU",[[1,5167,"git push b"]],[5167,5167],[5177,5177]]],[1564577156735,["GJX@GJXAIOU",[[-1,5176,"b"]],[5177,5177],[5176,5176]]],[1564577161300,["GJX@GJXAIOU",[[1,5176,"别名 分支名"]],[5176,5176],[5182,5182]]]],null,"GJX@GJXAIOU"],["921da9ef-0542-45c6-97c0-d26edb790781",1564620275349,"---\npin: true\ntags: \n- Git\nstyle: summer\nflag: red\ndate: '2019-7-31'\ncustom: GJXAIOU\nnote: Git&GitHub使用说明,2019-2-11号形成初稿，2019-7-31做最后的总结\n---\n\n\n# Git&GitHub使用说明\n\n@toc\n\n\n## 一、下载安装\n\n1.首先在本地安装git，[软件下载地址](https://git-scm.com/downloads)。\n\n2.安装好Git 之后，会有两个 Git 形式：\n- Git Bash   ：这是命令行模式（类似Linux）【推荐】\n- Git GUI      ：这是有界面的模式\n\n3.具体的安装过程详见[附录一：Git安装教程](#附录一：git-安装)\n\n4.Git 整体结构\n![Git结构 2]($resource/Git%E7%BB%93%E6%9E%84%202.png)\n\n5.查看git配置（以下默认命令输入处为：GitBash）\n`git config --list`\n\n\n\n## 二、在本地建立一个仓库\n- 例如在`E`盘下建立一个名为`practice`的仓库\n```git\n  cd e:\n  mkdir practice\n  cd practice\n  ls -la #看现在里面有多少文件\n  git init  #完成初始化，建立了一个空仓库\n```\n\n有两种方式可以建立Git仓库：\n\n*   用Git之前已经有项目代码，则使用以下两条命令建立Git仓库\n```git\n  cd 项目代码所在的文件夹\n  git init\n```\n*   用Git之前还没有项目代码，使用下面三条命令创建git仓库\n```\n  cd 某个文件夹\n  git init your_project #会在当前路径下创建和项目名称同名的文件夹\n  cd your_project\n```\n然后就是在自己的仓库中开始写代码或者更改代码了。\n\n## 三、工作区和版本库区别：\n\n![工作区与版本库的区别]($resource/%E5%B7%A5%E4%BD%9C%E5%8C%BA%E4%B8%8E%E7%89%88%E6%9C%AC%E5%BA%93%E7%9A%84%E5%8C%BA%E5%88%AB.png)\n\n注：示例文件名`test.txt`\n- 当使用`git add `将文件提交到暂存区之后，仍然在本地继续修改；\n  - 使用：`git commit -m 'shuoming' `提交只是提交第一个修改的，后面修改的不提交\n  - 使用：`git commit -m 'shuoming' test.txt`提交的将是后面修改的版本；\n  - 使用：`git diff head -- test.txt`可以显示工作区和分支的区别\n\n\n\n## 四、撤销修改\n\n- 工作区修改之后，未提交到暂存区：`git checkout -- test.txt`,撤销工作区的修改；\n- 工作区修改后，已提交到暂存区：`git reset head test.txt`,撤销暂存区的修改，然后再使用上面的命令撤销工作区的修改；\n\n\n## 五、删除文件\n\n- 删除工作区文件：`rm test.txt`\n- 删除暂存区文件：(删除的修改操作，要提交)\n`git rm test.txt`\n`git commit -m &quot;delete test.txt&quot;`\n\n\n## 六、配置Git\n\n- 下面是使用Git的最小配置\n1.打开Git Bash :切换到下面文件目录下；（或者在文件资源器中进入该目录，然后右键：Git Bash Here）\n配置`user.name`和`user.email` 其中global表示对登录用户的所有仓库有效，是用于区分不同的开发人员身份；\n注：以上信息都保存在.git 文件夹中，存放的是本地库相关的子目录和文件，可以使用：`ll .git/`查看，同时，可以使用`cat .git/config`进行查看配置文件，这里看到所有的用户\n2.输入：`git config --global user.name '随便用户名'`\n3.输入：`git config --global user.email '随便邮箱'`\n```git\n git config --local         local只对仓库有效。此也为缺省条件下的配置\n git config --global        global对登录用户的所有仓库都有效\n git config --system        system对系统的所有用户都有效\n```\n上面三个作用域是由一定的优先级的：local > global > system\n\n\n\n\n## 七、git文件重命名的命令\n\n>前提是需要修改git仓库中已经commit了的文件\n\n- 假如想使文件`readme`，改名为 `readme.cpp`。可以使用下面的三条命令：\n```git\nmv readme readme.cpp\ngit rm readme //注意与linux 的命令rm的区别\ngit add readme.cpp\n```\n最后可以使用git status查看修改后的仓库的状态\n上述是三条命令，还可以使用下面的一条命令达到上述三条命令的效果\n `git mv readme readme.cpp`\n \n- 如果想要撤销刚刚的修改，使用下面的命令：\n`git reset --hard`\n\n\n## 八、 如何使用git log系列命令查看git仓库的版本演变历史\n```\ngit branch -v 看本地有多少版本分支\ngit log --all 查看所有分支的历史\ngit log --all --graph 查看图形化的 log 地址\ngit log --oneline 查看单行的简洁历史。\ngit log --oneline -n4 查看最近的四条简洁历史。\ngit log --oneline --all -n4 --graph 查看所有分支最近 4 条单行的图形化历史。\ngit help --web log 跳转到git log 的帮助文档网页\ngit log --oneline temp 只查看temp的分支的信息且oneline形式\n```\n- 注意：\n  - git log 仅仅是查看当前分支的更改历史\n  - git log --all 查看所有分支的信息\n  - git log --all --graph 上面的查看不容易看各个分支的关系，加上图形化容易看出各个分支的关系\n  - git checkout -b temp +从哪个commit开始新加一个分支(一大串数字,表示某一个commit中的数字 )\n  - git checkout master // 切换到master分支\n\n*   git命令的后面加的参数，有的时候是-，有的时候是- -\n*   单字母的参数是 ‘-’，非单字母的参数是’- -’\n\n\n\n\n## 九、本地.git 文件目录\n\n*   COMMIT_EDITMSG\n*   cconfig,当前仓库的配置信息,core,用户,远程,分支等信息.(命令操作其实就是修改当前config文件)\n*   description （仓库的描述信息文件）\n*   HEAD （指向当前所在的分支），例如当前在 develop 分支，实际指向地址是 refs/heads/develop\n*   hooks [文件夹]\n*   index\n*   info [文件夹]\n*   logs [文件夹]\n*   objects [文件夹] （存放所有的 git 对象，对象哈希值前 2 位作为文件夹名称，后 38 位作为对象文件名, 可通过 git cat-file -p 命令，拼接文件夹名称+文件名查看）\n*   ORIG_HEAD\n*   refs\n    - heads,其实就是分支,里面包含所有的分支文件,文件存储了分支指向的指纹信息\n    - tags 叫做里程碑,或者版本发布用等记录重要版本.文件也存储了tag的指纹信息\n    - remotes,远程仓库信息\n\n## 十、版本回退\n\n分别修改几次hello.txt，并分别提交。\n**版本1：**\nhello\n**版本2：**\nhello world\n**版本3：**\nhello world third\n**版本4：**\nhello  world  third last\n以上版本都提交之后，如果想回到第二个版本：\n\n- 方式一：【推荐】\n1.首先输入：`git reflog` 会得到之后所有该文件的提交版本信息，其中最前面黄色字体为提交的版本号；\n注：可以使用`git log`查看该文件每次提交的详细信息（包括：完整的版本号，作者，时间等），也可以使用：`git log --pretty=online`按行显示以上信息；\n其中：Head 含义：HEAD@{移动到当前版本需要多少步}\n2.输入：`git reset --hard 第二次提交版本号` （这里版本号填写 `git reflog`显示的即可，不必填写完整的版本号）即可回退到第二个版本；\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20181028233812515.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NjbnVhY21oZHU=,size_27,color_FFFFFF,t_70)\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20181028234106489.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NjbnVhY21oZHU=,size_27,color_FFFFFF,t_70)\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20181028234356533.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NjbnVhY21oZHU=,size_27,color_FFFFFF,t_70)\n\n- 方式二：只能后退\n`git reset --head HEAD^`其中一个^表示后退一步，n 个表示后退 n 步；\n- 方式三：只能后退\n`git reset --head HEAD~n`,表示后退 n 步\n\n### 补充：reset 参数\n![搜狗截图20190731203134]($resource/%E6%90%9C%E7%8B%97%E6%88%AA%E5%9B%BE20190731203134.png)\n\n- 参数一:`--soft`  ：仅仅在本地库移动 HEAD 指针；\n- 参数二:`--mixed` ：在本地库移动 HEAD 指针，同时重置暂存区；\n- 参数三:`--hard` ：在本地库移动 HEAD 指针，同时重置暂存区和工作区；\n\n\n### 删除文件并找回\n前提：删除前，文件存在时的状态提交到了本地库；\n操作：`git reset --head 指针位置`\n- 删除操作已经提交到了本地库：指针位置指向历史记录\n- 删除操作尚未提交到本地库：指针位置指向 HEAD\n\n### 比较文件的差异\n- 将工作区文件和暂存区进行比较：`git diff 文件名`\n- 将工作区文件和本地库历史记录比较：`git diff 本地库中历史版本 文件名`\n- 以上不带文件名就是比较多个文件；\n\n\n\n\n\n\n\n## GitHub\n\n### 1.创建远程仓库别名\n- 查看当前远程仓库地址别名：`git remote -v`\n- 为远程仓库添加别名：`git remote add 别名 远程仓库地址`\n\n### 2.推送\n`git push 别名 分支名`\n\n\n\n\n\n## 十一、连接到GitHub\n\n### （一）将GitHub上的库克隆到本地\n\n说明：默认文件地址为：E:\\Program\\GitHub\\\n         GitHub上的库为：Notes\n4.将GitHub上已有的仓库下载到本地（这样可以在本地编辑）\n- 进入GitHub中所要同步的库页面，选择：`clone or download`，然后将URL复制下来：本人为：`https://github.com/GJXAIOU/Notes.git`\n![URL]($resource/URL.jpg)\n\n- 在Git Bash 中首先将目录切换到想要保存该库的目录下：然后输入\n`git clone https://github.com/GJXAIOU/Notes.git` (后面的网址就是刚才复制的)\n\n\n### （二）连接本地仓库与GitHub：\n\n1.在本地生成SSH Key :  在Git Bash中输入：`ssh-keygen -t rsa -C \"GitHub邮箱\"`，接下来**全部回车**确认，这样在电脑C盘本人用户名目录下就会出现一个文件：`.ssh`\n2.将上面文件中的`id_rsa`使用记事本打开，然后全选复制；\n3.将上面复制的秘钥，黏贴到GitHub中\n![搜狗截图20190226204854]($resource/%E6%90%9C%E7%8B%97%E6%88%AA%E5%9B%BE20190226204854.png)\n![搜狗截图20190226205651]($resource/%E6%90%9C%E7%8B%97%E6%88%AA%E5%9B%BE20190226205651.png)\n\n补充：github上新建仓库：`mimengfenxi`\n使用：\n```git\n#将本地的master分支与GitHub仓库分支进行关联\ngit remote add origin https://github.com/GJXAIOU/mimengfenxi.git #后面为仓库的SSH地址\n\n##这步不需要,这是移除关联\ngit remote rm origin https://github.com/GJXAIOU/mimengfenxi.git \n\n#注：origin是自己为远程GitHub仓库取的别名，主要是方便以后书写\n\n#下面的步骤只需要第一次的时候配置以下：\n步骤一：配置上面的公钥和私钥\n步骤二；输入：ssh -T -v git@github.com\n\n#这一步是指从本地直接生成库，而不是克隆的上传使用（一般也没有）\ngit pull --rebase origin master #相当于将GitHub创建仓库时候多创建的README.md拖下来\n\n#从GitHub往本地克隆，最好保证本地仓库是空的；同样本地上传到GitHub上时候最好保证GitHub新建的仓库是空的；\n\n#将本地的master分支上传到GitHub\ngit push -u origin master\n```\n\n### （三）上传同步本地文件（本地目录下文件有修改想同步到GitHub时候）\n1.在刚才的本地目录下，使用Git Bash ,输入：`Git init` 初始化本地git仓库；\n然后在改目录下会出现：`.git`这个文件  （只需要一次，以后不需要）\n\n2.进入修改目录下；输入：`git status` :查看多少文件未提交到仓库中（显示为红色的为未提交的），用于查看工作区和暂存区的状态；\n\n3.将上述所有文件从工作区提交到缓存区：`git add . `\n将特定文件提交大缓冲区：`git add 文件名称.后缀`\n\n4.再使用命令`git status`查看是不是都提交到了缓冲区（显示为绿色的是的）\n\n5.将缓冲区的文件提交到GitHub仓库中：`git commit -m \"想显示文件后面的的描述\"`\n\n6.最后一步：`git push`\n\n\n\n# 附录：\n\n## 附录一：Git 安装\nTODO：Git 和 GitHub\n\n",[[1564620223168,["GJX@GJXAIOU",[[1,2017," "]],[2017,2017],[2018,2018]]],[1564620239182,["GJX@GJXAIOU",[[1,6846,"\n"]],[6845,6845],[6846,6846]]],[1564620239322,["GJX@GJXAIOU",[[1,6847,"\n"]],[6846,6846],[6847,6847]]],[1564620243556,["GJX@GJXAIOU",[[1,6846,"### "]],[6846,6846],[6850,6850]]],[1564620245449,["GJX@GJXAIOU",[[-1,6847,"## "]],[6850,6850],[6847,6847]]],[1564620249823,["GJX@GJXAIOU",[[1,6847," 使用Git"]],[6847,6847],[6853,6853]]],[1564620249865,["GJX@GJXAIOU",[[1,6850," "]],[6853,6853],[6854,6854]]],[1564620254591,["GJX@GJXAIOU",[[1,6854,"Hub搭建"]],[6854,6854],[6859,6859]]],[1564620254637,["GJX@GJXAIOU",[[1,6857," "]],[6859,6859],[6860,6860]]],[1564620256992,["GJX@GJXAIOU",[[1,6860,"个人网站"]],[6860,6860],[6864,6864]]],[1564620257466,["GJX@GJXAIOU",[[1,6866,"\n"]],[6864,6864],[6865,6865]]],[1564620261949,["GJX@GJXAIOU",[[1,6865,"使用g"]],[6865,6865],[6868,6868]]],[1564620261991,["GJX@GJXAIOU",[[1,6867," "]],[6868,6868],[6869,6869]]],[1564620263173,["GJX@GJXAIOU",[[1,6869,"itH"]],[6869,6869],[6872,6872]]],[1564620264226,["GJX@GJXAIOU",[[-1,6868,"gitH"]],[6872,6872],[6868,6868]]],[1564620268624,["GJX@GJXAIOU",[[1,6868,"GitHub搭建"]],[6868,6868],[6876,6876]]],[1564620268665,["GJX@GJXAIOU",[[1,6874," "]],[6876,6876],[6877,6877]]],[1564620270216,["GJX@GJXAIOU",[[1,6877,"的完整"]],[6877,6877],[6880,6880]]],[1564620270850,["GJX@GJXAIOU",[[-1,6878,"完整"]],[6880,6880],[6878,6878]]],[1564620273567,["GJX@GJXAIOU",[[1,6878,"网站是"]],[6878,6878],[6881,6881]]],[1564620277320,["GJX@GJXAIOU",[[1,6883,"网站"]],[6883,6883],[6885,6885]]],[1564620289858,["GJX@GJXAIOU",[[1,6887,"\n"]],[6885,6885],[6886,6886]]],[1564620291474,["GJX@GJXAIOU",[[1,6888,"\n"]],[6886,6886],[6887,6887]]],[1564620293970,["GJX@GJXAIOU",[[-1,6888,"\n"]],[6887,6887],[6886,6886]]],[1564620294410,["GJX@GJXAIOU",[[-1,6887,"\n"]],[6886,6886],[6885,6885]]],[1564620303478,["GJX@GJXAIOU",[[1,6885,"，搭建的操作分为两类："]],[6885,6885],[6896,6896]]],[1564620303698,["GJX@GJXAIOU",[[1,6898,"\n"]],[6896,6896],[6897,6897]]],[1564620332087,["GJX@GJXAIOU",[[1,6897,"- 完全基于新的仓库搭建："]],[6897,6897],[6910,6910]]],[1564620332314,["GJX@GJXAIOU",[[1,6911,"- \n"]],[6910,6910],[6913,6913]]],[1564620333267,["GJX@GJXAIOU",[[1,6911,"  "]],[6913,6913],[6915,6915]]],[1564620394288,[null,[[-1,6881,"\n\n"],[1,6883,"静态"],[-1,6896,"#"],[1,6897,"\n"],[-1,6910," "],[1,6911,"\n"],[1,6917,"# "]],[6881,6881],[6919,6919]]],[1564620394288,[null,[[1,6881,"\n\n"],[-1,6881,"静态"],[1,6896,"#"],[-1,6896,"\n"],[1,6910," "],[-1,6910,"\n"],[-1,6917,"# "]],[6919,6919],[6881,6881]]],[1564620351587,["GJX@GJXAIOU",[[1,6915,"首先创建新的仓库，仓库门"]],[6915,6915],[6927,6927]]],[1564620352090,["GJX@GJXAIOU",[[-1,6926,"门"]],[6927,6927],[6926,6926]]],[1564620368262,["GJX@GJXAIOU",[[1,6926,"名为：用户名.github.id"]],[6926,6926],[6942,6942]]],[1564620368811,["GJX@GJXAIOU",[[-1,6941,"d"]],[6942,6942],[6941,6941]]],[1564620369182,["GJX@GJXAIOU",[[1,6941,"s"]],[6941,6941],[6942,6942]]],[1564620369762,["GJX@GJXAIOU",[[-1,6941,"s"]],[6942,6942],[6941,6941]]],[1564620370053,["GJX@GJXAIOU",[[1,6941,"o"]],[6941,6941],[6942,6942]]],[1564620372051,["GJX@GJXAIOU",[[1,6943,"  - \n"]],[6942,6942],[6947,6947]]],[1564620378533,["GJX@GJXAIOU",[[1,6947,"然后创建i"]],[6947,6947],[6952,6952]]],[1564620378573,["GJX@GJXAIOU",[[1,6951," "]],[6952,6952],[6953,6953]]],[1564620380606,["GJX@GJXAIOU",[[1,6953,"nsex."]],[6953,6953],[6958,6958]]],[1564620381540,["GJX@GJXAIOU",[[-1,6954,"sex."]],[6958,6958],[6954,6954]]],[1564620384461,["GJX@GJXAIOU",[[1,6954,"dex.html"]],[6954,6954],[6962,6962]]],[1564620385674,["GJX@GJXAIOU",[[1,6963,"  - \n"]],[6962,6962],[6967,6967]]],[1564620393129,["GJX@GJXAIOU",[[1,6962,"jike"]],[6962,6962],[6966,6966]]],[1564620393874,["GJX@GJXAIOU",[[-1,6962,"jike"]],[6966,6966],[6962,6962]]],[1564620454290,[null,[[-1,6881,"\n\n"],[1,6883,"静态"],[-1,6896,"#"],[1,6897,"\n"],[-1,6910," "],[1,6911,"\n"],[1,6969,"# "]],[6881,6881],[6971,6971]]],[1564620454290,[null,[[1,6881,"\n\n"],[-1,6881,"静态"],[1,6896,"#"],[-1,6896,"\n"],[1,6910," "],[-1,6910,"\n"],[-1,6969,"# "]],[6971,6971],[6881,6881]]],[1564620398407,["GJX@GJXAIOU",[[1,6962,"即可"]],[6962,6962],[6964,6964]]],[1564620398449,["GJX@GJXAIOU",[[1,6962," "]],[6964,6964],[6965,6965]]],[1564620399765,["GJX@GJXAIOU",[[1,6965,"；"]],[6965,6965],[6966,6966]]],[1564620412311,["GJX@GJXAIOU",[[1,6971,"相关的网页显示配置可以在i"]],[6971,6971],[6984,6984]]],[1564620412353,["GJX@GJXAIOU",[[1,6983," "]],[6984,6984],[6985,6985]]],[1564620413133,["GJX@GJXAIOU",[[1,6985,"nsex"]],[6985,6985],[6989,6989]]],[1564620413778,["GJX@GJXAIOU",[[-1,6986,"sex"]],[6989,6989],[6986,6986]]],[1564620415862,["GJX@GJXAIOU",[[1,6986,"dex.he"]],[6986,6986],[6992,6992]]],[1564620416524,["GJX@GJXAIOU",[[-1,6991,"e"]],[6992,6992],[6991,6991]]],[1564620418615,["GJX@GJXAIOU",[[1,6991,"tml中"]],[6991,6991],[6995,6995]]],[1564620418667,["GJX@GJXAIOU",[[1,6994," "]],[6995,6995],[6996,6996]]],[1564620427886,["GJX@GJXAIOU",[[1,6996,"进行配置；"]],[6996,6996],[7001,7001]]],[1564620429546,["GJX@GJXAIOU",[[1,7002,"  - \n"]],[7001,7001],[7006,7006]]],[1564620429698,["GJX@GJXAIOU",[[-1,7002,"  - "]],[7006,7006],[7003,7003]]],[1564620442910,["GJX@GJXAIOU",[[1,7003,"- 基于已有的仓库进行搭建："]],[7003,7003],[7017,7017]]],[1564620443138,["GJX@GJXAIOU",[[1,7018,"- \n"]],[7017,7017],[7020,7020]]],[1564620444331,["GJX@GJXAIOU",[[1,7018,"  "]],[7020,7020],[7022,7022]]],[1564620454039,["GJX@GJXAIOU",[[1,7022,"首先进入仓库，"]],[7022,7022],[7029,7029]]],[1564620514292,[null,[[-1,6881,"\n\n"],[1,6883,"静态"],[-1,6896,"#"],[1,6897,"\n"],[-1,6910," "],[1,6911,"\n"],[1,7030,"# "]],[6881,6881],[7032,7032]]],[1564620514292,[null,[[1,6881,"\n\n"],[-1,6881,"静态"],[1,6896,"#"],[-1,6896,"\n"],[1,6910," "],[-1,6910,"\n"],[-1,7030,"# "]],[7032,7032],[6881,6881]]],[1564620476925,["GJX@GJXAIOU",[[1,7029,"在右上角选择：setting->Launch suto"]],[7029,7029],[7056,7056]]],[1564620478642,["GJX@GJXAIOU",[[-1,7051," suto"]],[7056,7056],[7051,7051]]],[1564620487157,["GJX@GJXAIOU",[[1,7051," automatic gener"]],[7051,7051],[7067,7067]]],[1564621234307,[null,[[-1,6881,"\n\n"],[1,6883,"静态"],[-1,6896,"#"],[1,6897,"\n"],[-1,6910," "],[1,6911,"\n"],[1,7068,"# "]],[6881,6881],[7070,7070]]],[1564621234307,[null,[[1,6881,"\n\n"],[-1,6881,"静态"],[1,6896,"#"],[-1,6896,"\n"],[1,6910," "],[-1,6910,"\n"],[-1,7068,"# "]],[7070,7070],[6881,6881]]],[1564621220420,["GJX@GJXAIOU",[[1,7017,"()"]],[7017,7017],[7019,7019]]],[1564621222236,["GJX@GJXAIOU",[[1,7018,"xianz"]],[7018,7018],[7023,7023]]],[1564621223457,["GJX@GJXAIOU",[[-1,7018,"xianz"]],[7023,7023],[7018,7018]]],[1564621231615,["GJX@GJXAIOU",[[1,7018,"现在已经改变，在摸索着"]],[7018,7018],[7029,7029]]],[1564621272080,[null,[[-1,6881,"\n\n"],[1,6883,"静态"],[-1,6896,"#"],[1,6897,"\n"],[-1,6910," "],[1,6911,"\n"],[1,7081,"# "]],[6881,6881],[7083,7083]]],[1564621272080,[null,[[1,6881,"\n\n"],[-1,6881,"静态"],[1,6896,"#"],[-1,6896,"\n"],[1,6910," "],[-1,6910,"\n"],[-1,7081,"# "]],[7083,7083],[6881,6881]]],[1564621237510,["GJX@GJXAIOU",[[1,7080,"...."]],[7080,7080],[7084,7084]]],[1564621238426,["GJX@GJXAIOU",[[1,7085,"  - \n"]],[7084,7084],[7089,7089]]],[1564621247496,["GJX@GJXAIOU",[[1,7089,"在Tagline"]],[7089,7089],[7097,7097]]],[1564621247539,["GJX@GJXAIOU",[[1,7090," "]],[7097,7097],[7098,7098]]],[1564621248280,["GJX@GJXAIOU",[[1,7098,"中"]],[7098,7098],[7099,7099]]],[1564621248322,["GJX@GJXAIOU",[[1,7098," "]],[7099,7099],[7100,7100]]],[1564621266479,["GJX@GJXAIOU",[[1,7100,"填写项目名称；"]],[7100,7100],[7107,7107]]],[1564621268523,["GJX@GJXAIOU",[[1,7108,"  - \n"]],[7107,7107],[7112,7112]]],[1564621268658,["GJX@GJXAIOU",[[-1,7108,"  - "]],[7112,7112],[7109,7109]]],[1564621268786,["GJX@GJXAIOU",[[1,7109,"\n"]],[7109,7109],[7110,7110]]]],null,"GJX@GJXAIOU"],["b729b14b-7bab-4bff-9110-9540a0b6be30",1565089959932,"---\npin: true\ntags: \n- Git\nstyle: summer\nflag: red\ndate: '2019-7-31'\ncustom: GJXAIOU\nnote: Git&GitHub使用说明,2019-2-11号形成初稿，2019-7-31做最后的总结\n---\n\n\n# Git&GitHub使用说明\n\n@toc\n\n\n## 一、下载安装\n\n1.首先在本地安装git，[软件下载地址](https://git-scm.com/downloads)。\n\n2.安装好Git 之后，会有两个 Git 形式：\n- Git Bash   ：这是命令行模式（类似Linux）【推荐】\n- Git GUI      ：这是有界面的模式\n\n3.具体的安装过程详见[附录一：Git安装教程](#附录一：git-安装)\n\n4.Git 整体结构\n![Git结构 2]($resource/Git%E7%BB%93%E6%9E%84%202.png)\n\n5.查看git配置（以下默认命令输入处为：GitBash）\n`git config --list`\n\n\n\n## 二、在本地建立一个仓库\n- 例如在`E`盘下建立一个名为`practice`的仓库\n```git\n  cd e:\n  mkdir practice\n  cd practice\n  ls -la #看现在里面有多少文件\n  git init  #完成初始化，建立了一个空仓库\n```\n\n有两种方式可以建立Git仓库：\n\n*   用Git之前已经有项目代码，则使用以下两条命令建立Git仓库\n```git\n  cd 项目代码所在的文件夹\n  git init\n```\n*   用Git之前还没有项目代码，使用下面三条命令创建git仓库\n```\n  cd 某个文件夹\n  git init your_project #会在当前路径下创建和项目名称同名的文件夹\n  cd your_project\n```\n然后就是在自己的仓库中开始写代码或者更改代码了。\n\n## 三、工作区和版本库区别：\n\n![工作区与版本库的区别]($resource/%E5%B7%A5%E4%BD%9C%E5%8C%BA%E4%B8%8E%E7%89%88%E6%9C%AC%E5%BA%93%E7%9A%84%E5%8C%BA%E5%88%AB.png)\n\n注：示例文件名`test.txt`\n- 当使用`git add `将文件提交到暂存区之后，仍然在本地继续修改；\n  - 使用：`git commit -m 'shuoming' `提交只是提交第一个修改的，后面修改的不提交\n  - 使用：`git commit -m 'shuoming' test.txt`提交的将是后面修改的版本；\n  - 使用：`git diff head -- test.txt`可以显示工作区和分支的区别\n\n\n\n## 四、撤销修改\n\n- 工作区修改之后，未提交到暂存区：`git checkout -- test.txt`,撤销工作区的修改；\n- 工作区修改后，已提交到暂存区：`git reset head test.txt`,撤销暂存区的修改，然后再使用上面的命令撤销工作区的修改；\n\n\n## 五、删除文件\n\n- 删除工作区文件：`rm test.txt`\n- 删除暂存区文件：(删除的修改操作，要提交)\n`git rm test.txt`\n`git commit -m &quot;delete test.txt&quot;`\n\n\n## 六、配置Git\n\n- 下面是使用Git的最小配置\n1.打开Git Bash :切换到下面文件目录下；（或者在文件资源器中进入该目录，然后右键：Git Bash Here）\n配置`user.name`和`user.email` 其中global表示对登录用户的所有仓库有效，是用于区分不同的开发人员身份；\n注：以上信息都保存在.git 文件夹中，存放的是本地库相关的子目录和文件，可以使用：`ll .git/`查看，同时，可以使用`cat .git/config`进行查看配置文件，这里看到所有的用户\n2.输入：`git config --global user.name '随便用户名'`\n3.输入：`git config --global user.email '随便邮箱'`\n```git\n git config --local         local只对仓库有效。此也为缺省条件下的配置\n git config --global        global对登录用户的所有仓库都有效\n git config --system        system对系统的所有用户都有效\n```\n上面三个作用域是由一定的优先级的：local > global > system\n\n\n \n\n## 七、git文件重命名的命令\n\n>前提是需要修改git仓库中已经commit了的文件\n\n- 假如想使文件`readme`，改名为 `readme.cpp`。可以使用下面的三条命令：\n```git\nmv readme readme.cpp\ngit rm readme //注意与linux 的命令rm的区别\ngit add readme.cpp\n```\n最后可以使用git status查看修改后的仓库的状态\n上述是三条命令，还可以使用下面的一条命令达到上述三条命令的效果\n `git mv readme readme.cpp`\n \n- 如果想要撤销刚刚的修改，使用下面的命令：\n`git reset --hard`\n\n\n## 八、 如何使用git log系列命令查看git仓库的版本演变历史\n```\ngit branch -v 看本地有多少版本分支\ngit log --all 查看所有分支的历史\ngit log --all --graph 查看图形化的 log 地址\ngit log --oneline 查看单行的简洁历史。\ngit log --oneline -n4 查看最近的四条简洁历史。\ngit log --oneline --all -n4 --graph 查看所有分支最近 4 条单行的图形化历史。\ngit help --web log 跳转到git log 的帮助文档网页\ngit log --oneline temp 只查看temp的分支的信息且oneline形式\n```\n- 注意：\n  - git log 仅仅是查看当前分支的更改历史\n  - git log --all 查看所有分支的信息\n  - git log --all --graph 上面的查看不容易看各个分支的关系，加上图形化容易看出各个分支的关系\n  - git checkout -b temp +从哪个commit开始新加一个分支(一大串数字,表示某一个commit中的数字 )\n  - git checkout master // 切换到master分支\n\n*   git命令的后面加的参数，有的时候是-，有的时候是- -\n*   单字母的参数是 ‘-’，非单字母的参数是’- -’\n\n\n\n\n## 九、本地.git 文件目录\n\n*   COMMIT_EDITMSG\n*   cconfig,当前仓库的配置信息,core,用户,远程,分支等信息.(命令操作其实就是修改当前config文件)\n*   description （仓库的描述信息文件）\n*   HEAD （指向当前所在的分支），例如当前在 develop 分支，实际指向地址是 refs/heads/develop\n*   hooks [文件夹]\n*   index\n*   info [文件夹]\n*   logs [文件夹]\n*   objects [文件夹] （存放所有的 git 对象，对象哈希值前 2 位作为文件夹名称，后 38 位作为对象文件名, 可通过 git cat-file -p 命令，拼接文件夹名称+文件名查看）\n*   ORIG_HEAD\n*   refs\n    - heads,其实就是分支,里面包含所有的分支文件,文件存储了分支指向的指纹信息\n    - tags 叫做里程碑,或者版本发布用等记录重要版本.文件也存储了tag的指纹信息\n    - remotes,远程仓库信息\n\n## 十、版本回退\n\n分别修改几次hello.txt，并分别提交。\n**版本1：**\nhello\n**版本2：**\nhello world\n**版本3：**\nhello world third\n**版本4：**\nhello  world  third last\n以上版本都提交之后，如果想回到第二个版本：\n\n- 方式一：【推荐】\n1.首先输入：`git reflog` 会得到之后所有该文件的提交版本信息，其中最前面黄色字体为提交的版本号；\n注：可以使用`git log`查看该文件每次提交的详细信息（包括：完整的版本号，作者，时间等），也可以使用：`git log --pretty=online`按行显示以上信息；\n其中：Head 含义：HEAD@{移动到当前版本需要多少步}\n2.输入：`git reset --hard 第二次提交版本号` （这里版本号填写 `git reflog`显示的即可，不必填写完整的版本号）即可回退到第二个版本；\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20181028233812515.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NjbnVhY21oZHU=,size_27,color_FFFFFF,t_70)\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20181028234106489.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NjbnVhY21oZHU=,size_27,color_FFFFFF,t_70)\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20181028234356533.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NjbnVhY21oZHU=,size_27,color_FFFFFF,t_70)\n\n- 方式二：只能后退\n`git reset --head HEAD^`其中一个^表示后退一步，n 个表示后退 n 步；\n- 方式三：只能后退\n`git reset --head HEAD~n`,表示后退 n 步\n\n### 补充：reset 参数\n![搜狗截图20190731203134]($resource/%E6%90%9C%E7%8B%97%E6%88%AA%E5%9B%BE20190731203134.png)\n\n- 参数一:`--soft`  ：仅仅在本地库移动 HEAD 指针；\n- 参数二:`--mixed` ：在本地库移动 HEAD 指针，同时重置暂存区；\n- 参数三:`--hard` ：在本地库移动 HEAD 指针，同时重置暂存区和工作区；\n\n\n### 删除文件并找回\n前提：删除前，文件存在时的状态提交到了本地库；\n操作：`git reset --head 指针位置`\n- 删除操作已经提交到了本地库：指针位置指向历史记录\n- 删除操作尚未提交到本地库：指针位置指向 HEAD\n\n### 比较文件的差异\n- 将工作区文件和暂存区进行比较：`git diff 文件名`\n- 将工作区文件和本地库历史记录比较：`git diff 本地库中历史版本 文件名`\n- 以上不带文件名就是比较多个文件；\n\n\n\n\n\n\n\n## GitHub\n\n### 1.创建远程仓库别名\n- 查看当前远程仓库地址别名：`git remote -v`\n- 为远程仓库添加别名：`git remote add 别名 远程仓库地址`\n\n### 2.推送\n`git push 别名 分支名`\n\n\n\n\n\n## 十一、连接到GitHub\n\n### （一）将GitHub上的库克隆到本地\n\n说明：默认文件地址为：E:\\Program\\GitHub\\\n         GitHub上的库为：Notes\n4.将GitHub上已有的仓库下载到本地（这样可以在本地编辑）\n- 进入GitHub中所要同步的库页面，选择：`clone or download`，然后将URL复制下来：本人为：`https://github.com/GJXAIOU/Notes.git`\n![URL]($resource/URL.jpg)\n\n- 在Git Bash 中首先将目录切换到想要保存该库的目录下：然后输入\n`git clone https://github.com/GJXAIOU/Notes.git` (后面的网址就是刚才复制的)\n\n\n### （二）连接本地仓库与GitHub：\n\n1.在本地生成SSH Key :  在Git Bash中输入：`ssh-keygen -t rsa -C \"GitHub邮箱\"`，接下来**全部回车**确认，这样在电脑C盘本人用户名目录下就会出现一个文件：`.ssh`\n2.将上面文件中的`id_rsa`使用记事本打开，然后全选复制；\n3.将上面复制的秘钥，黏贴到GitHub中\n![搜狗截图20190226204854]($resource/%E6%90%9C%E7%8B%97%E6%88%AA%E5%9B%BE20190226204854.png)\n![搜狗截图20190226205651]($resource/%E6%90%9C%E7%8B%97%E6%88%AA%E5%9B%BE20190226205651.png)\n\n补充：github上新建仓库：`mimengfenxi`\n使用：\n```git\n#将本地的master分支与GitHub仓库分支进行关联\ngit remote add origin https://github.com/GJXAIOU/mimengfenxi.git #后面为仓库的SSH地址\n\n##这步不需要,这是移除关联\ngit remote rm origin https://github.com/GJXAIOU/mimengfenxi.git \n\n#注：origin是自己为远程GitHub仓库取的别名，主要是方便以后书写\n\n#下面的步骤只需要第一次的时候配置以下：\n步骤一：配置上面的公钥和私钥\n步骤二；输入：ssh -T -v git@github.com\n\n#这一步是指从本地直接生成库，而不是克隆的上传使用（一般也没有）\ngit pull --rebase origin master #相当于将GitHub创建仓库时候多创建的README.md拖下来\n\n#从GitHub往本地克隆，最好保证本地仓库是空的；同样本地上传到GitHub上时候最好保证GitHub新建的仓库是空的；\n\n#将本地的master分支上传到GitHub\ngit push -u origin master\n```\n\n### （三）上传同步本地文件（本地目录下文件有修改想同步到GitHub时候）\n1.在刚才的本地目录下，使用Git Bash ,输入：`Git init` 初始化本地git仓库；\n然后在改目录下会出现：`.git`这个文件  （只需要一次，以后不需要）\n\n2.进入修改目录下；输入：`git status` :查看多少文件未提交到仓库中（显示为红色的为未提交的），用于查看工作区和暂存区的状态；\n\n3.将上述所有文件从工作区提交到缓存区：`git add . `\n将特定文件提交大缓冲区：`git add 文件名称.后缀`\n\n4.再使用命令`git status`查看是不是都提交到了缓冲区（显示为绿色的是的）\n\n5.将缓冲区的文件提交到GitHub仓库中：`git commit -m \"想显示文件后面的的描述\"`\n\n6.最后一步：`git push`\n\n\n\n# 使用 GitHub 搭建个人网站\n使用 GitHub 搭建的网站是静态网站，搭建的操作分为两类：\n- 完全基于新的仓库搭建：\n  - 首先创建新的仓库，仓库名为：用户名.github.io\n  - 然后创建 index.html 即可；\n  - 相关的网页显示配置可以在 index.html 中进行配置；\n\n- 基于已有的仓库进行搭建：(现在已经改变，在摸索着)\n  - 首先进入仓库，在右上角选择：setting->Launch automatic gener....\n  - 在 Tagline 中填写项目名称；\n\n\n# 附录：\n\n## 附录一：Git 安装\nTODO：Git 和 GitHub\n\n",[[1565089914895,["GJX@GJXAIOU",[[1,6074,"\n"]],[6073,6073],[6074,6074]]],[1565089928246,["GJX@GJXAIOU",[[1,6074,"git remote remove 名字"]],[6074,6074],[6094,6094]]]],null,"GJX@GJXAIOU"],["17426383-a1aa-437d-bf4a-586d4b227330",1565094946528,"---\npin: true\ntags: \n- Git\nstyle: summer\nflag: red\ndate: '2019-7-31'\ncustom: GJXAIOU\nnote: Git&GitHub使用说明,2019-2-11号形成初稿，2019-7-31做最后的总结\n---\n\n\n# Git&GitHub使用说明\n\n@toc\n\n\n## 一、下载安装\n\n1.首先在本地安装git，[软件下载地址](https://git-scm.com/downloads)。\n\n2.安装好Git 之后，会有两个 Git 形式：\n- Git Bash   ：这是命令行模式（类似Linux）【推荐】\n- Git GUI      ：这是有界面的模式\n\n3.具体的安装过程详见[附录一：Git安装教程](#附录一：git-安装)\n\n4.Git 整体结构\n![Git结构 2]($resource/Git%E7%BB%93%E6%9E%84%202.png)\n\n5.查看git配置（以下默认命令输入处为：GitBash）\n`git config --list`\n\n\n\n## 二、在本地建立一个仓库\n- 例如在`E`盘下建立一个名为`practice`的仓库\n```git\n  cd e:\n  mkdir practice\n  cd practice\n  ls -la #看现在里面有多少文件\n  git init  #完成初始化，建立了一个空仓库\n```\n\n有两种方式可以建立Git仓库：\n\n*   用Git之前已经有项目代码，则使用以下两条命令建立Git仓库\n```git\n  cd 项目代码所在的文件夹\n  git init\n```\n*   用Git之前还没有项目代码，使用下面三条命令创建git仓库\n```\n  cd 某个文件夹\n  git init your_project #会在当前路径下创建和项目名称同名的文件夹\n  cd your_project\n```\n然后就是在自己的仓库中开始写代码或者更改代码了。\n\n## 三、工作区和版本库区别：\n\n![工作区与版本库的区别]($resource/%E5%B7%A5%E4%BD%9C%E5%8C%BA%E4%B8%8E%E7%89%88%E6%9C%AC%E5%BA%93%E7%9A%84%E5%8C%BA%E5%88%AB.png)\n\n注：示例文件名`test.txt`\n- 当使用`git add `将文件提交到暂存区之后，仍然在本地继续修改；\n  - 使用：`git commit -m 'shuoming' `提交只是提交第一个修改的，后面修改的不提交\n  - 使用：`git commit -m 'shuoming' test.txt`提交的将是后面修改的版本；\n  - 使用：`git diff head -- test.txt`可以显示工作区和分支的区别\n\n\n\n## 四、撤销修改\n\n- 工作区修改之后，未提交到暂存区：`git checkout -- test.txt`,撤销工作区的修改；\n- 工作区修改后，已提交到暂存区：`git reset head test.txt`,撤销暂存区的修改，然后再使用上面的命令撤销工作区的修改；\n\n\n## 五、删除文件\n\n- 删除工作区文件：`rm test.txt`\n- 删除暂存区文件：(删除的修改操作，要提交)\n`git rm test.txt`\n`git commit -m &quot;delete test.txt&quot;`\n\n\n## 六、配置Git\n\n- 下面是使用Git的最小配置\n1.打开Git Bash :切换到下面文件目录下；（或者在文件资源器中进入该目录，然后右键：Git Bash Here）\n配置`user.name`和`user.email` 其中global表示对登录用户的所有仓库有效，是用于区分不同的开发人员身份；\n注：以上信息都保存在.git 文件夹中，存放的是本地库相关的子目录和文件，可以使用：`ll .git/`查看，同时，可以使用`cat .git/config`进行查看配置文件，这里看到所有的用户\n2.输入：`git config --global user.name '随便用户名'`\n3.输入：`git config --global user.email '随便邮箱'`\n```git\n git config --local         local只对仓库有效。此也为缺省条件下的配置\n git config --global        global对登录用户的所有仓库都有效\n git config --system        system对系统的所有用户都有效\n```\n上面三个作用域是由一定的优先级的：local > global > system\n\n\n \n\n## 七、git文件重命名的命令\n\n>前提是需要修改git仓库中已经commit了的文件\n\n- 假如想使文件`readme`，改名为 `readme.cpp`。可以使用下面的三条命令：\n```git\nmv readme readme.cpp\ngit rm readme //注意与linux 的命令rm的区别\ngit add readme.cpp\n```\n最后可以使用git status查看修改后的仓库的状态\n上述是三条命令，还可以使用下面的一条命令达到上述三条命令的效果\n `git mv readme readme.cpp`\n \n- 如果想要撤销刚刚的修改，使用下面的命令：\n`git reset --hard`\n\n\n## 八、 如何使用git log系列命令查看git仓库的版本演变历史\n```\ngit branch -v 看本地有多少版本分支\ngit log --all 查看所有分支的历史\ngit log --all --graph 查看图形化的 log 地址\ngit log --oneline 查看单行的简洁历史。\ngit log --oneline -n4 查看最近的四条简洁历史。\ngit log --oneline --all -n4 --graph 查看所有分支最近 4 条单行的图形化历史。\ngit help --web log 跳转到git log 的帮助文档网页\ngit log --oneline temp 只查看temp的分支的信息且oneline形式\n```\n- 注意：\n  - git log 仅仅是查看当前分支的更改历史\n  - git log --all 查看所有分支的信息\n  - git log --all --graph 上面的查看不容易看各个分支的关系，加上图形化容易看出各个分支的关系\n  - git checkout -b temp +从哪个commit开始新加一个分支(一大串数字,表示某一个commit中的数字 )\n  - git checkout master // 切换到master分支\n\n*   git命令的后面加的参数，有的时候是-，有的时候是- -\n*   单字母的参数是 ‘-’，非单字母的参数是’- -’\n\n\n\n\n## 九、本地.git 文件目录\n\n*   COMMIT_EDITMSG\n*   cconfig,当前仓库的配置信息,core,用户,远程,分支等信息.(命令操作其实就是修改当前config文件)\n*   description （仓库的描述信息文件）\n*   HEAD （指向当前所在的分支），例如当前在 develop 分支，实际指向地址是 refs/heads/develop\n*   hooks [文件夹]\n*   index\n*   info [文件夹]\n*   logs [文件夹]\n*   objects [文件夹] （存放所有的 git 对象，对象哈希值前 2 位作为文件夹名称，后 38 位作为对象文件名, 可通过 git cat-file -p 命令，拼接文件夹名称+文件名查看）\n*   ORIG_HEAD\n*   refs\n    - heads,其实就是分支,里面包含所有的分支文件,文件存储了分支指向的指纹信息\n    - tags 叫做里程碑,或者版本发布用等记录重要版本.文件也存储了tag的指纹信息\n    - remotes,远程仓库信息\n\n## 十、版本回退\n\n分别修改几次hello.txt，并分别提交。\n**版本1：**\nhello\n**版本2：**\nhello world\n**版本3：**\nhello world third\n**版本4：**\nhello  world  third last\n以上版本都提交之后，如果想回到第二个版本：\n\n- 方式一：【推荐】\n1.首先输入：`git reflog` 会得到之后所有该文件的提交版本信息，其中最前面黄色字体为提交的版本号；\n注：可以使用`git log`查看该文件每次提交的详细信息（包括：完整的版本号，作者，时间等），也可以使用：`git log --pretty=online`按行显示以上信息；\n其中：Head 含义：HEAD@{移动到当前版本需要多少步}\n2.输入：`git reset --hard 第二次提交版本号` （这里版本号填写 `git reflog`显示的即可，不必填写完整的版本号）即可回退到第二个版本；\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20181028233812515.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NjbnVhY21oZHU=,size_27,color_FFFFFF,t_70)\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20181028234106489.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NjbnVhY21oZHU=,size_27,color_FFFFFF,t_70)\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20181028234356533.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NjbnVhY21oZHU=,size_27,color_FFFFFF,t_70)\n\n- 方式二：只能后退\n`git reset --head HEAD^`其中一个^表示后退一步，n 个表示后退 n 步；\n- 方式三：只能后退\n`git reset --head HEAD~n`,表示后退 n 步\n\n### 补充：reset 参数\n![搜狗截图20190731203134]($resource/%E6%90%9C%E7%8B%97%E6%88%AA%E5%9B%BE20190731203134.png)\n\n- 参数一:`--soft`  ：仅仅在本地库移动 HEAD 指针；\n- 参数二:`--mixed` ：在本地库移动 HEAD 指针，同时重置暂存区；\n- 参数三:`--hard` ：在本地库移动 HEAD 指针，同时重置暂存区和工作区；\n\n\n### 删除文件并找回\n前提：删除前，文件存在时的状态提交到了本地库；\n操作：`git reset --head 指针位置`\n- 删除操作已经提交到了本地库：指针位置指向历史记录\n- 删除操作尚未提交到本地库：指针位置指向 HEAD\n\n### 比较文件的差异\n- 将工作区文件和暂存区进行比较：`git diff 文件名`\n- 将工作区文件和本地库历史记录比较：`git diff 本地库中历史版本 文件名`\n- 以上不带文件名就是比较多个文件；\n\n\n\n\n\n\n\n## GitHub\n\n### 1.创建远程仓库别名\n- 查看当前远程仓库地址别名：`git remote -v`\n- 为远程仓库添加别名：`git remote add 别名 远程仓库地址`\n\n### 2.推送\n`git push 别名 分支名`\n\n\n\n\n\n## 十一、连接到GitHub\n\n### （一）将GitHub上的库克隆到本地\n\n说明：默认文件地址为：E:\\Program\\GitHub\\\n         GitHub上的库为：Notes\n4.将GitHub上已有的仓库下载到本地（这样可以在本地编辑）\n- 进入GitHub中所要同步的库页面，选择：`clone or download`，然后将URL复制下来：本人为：`https://github.com/GJXAIOU/Notes.git`\n![URL]($resource/URL.jpg)\n\n- 在Git Bash 中首先将目录切换到想要保存该库的目录下：然后输入\n`git clone https://github.com/GJXAIOU/Notes.git` (后面的网址就是刚才复制的)\n\n\n### （二）连接本地仓库与GitHub：\n\n1.在本地生成SSH Key :  在Git Bash中输入：`ssh-keygen -t rsa -C \"GitHub邮箱\"`，接下来**全部回车**确认，这样在电脑C盘本人用户名目录下就会出现一个文件：`.ssh`\n2.将上面文件中的`id_rsa`使用记事本打开，然后全选复制；\n3.将上面复制的秘钥，黏贴到GitHub中\n![搜狗截图20190226204854]($resource/%E6%90%9C%E7%8B%97%E6%88%AA%E5%9B%BE20190226204854.png)\n![搜狗截图20190226205651]($resource/%E6%90%9C%E7%8B%97%E6%88%AA%E5%9B%BE20190226205651.png)\n\n补充：github上新建仓库：`mimengfenxi`\n使用：\n```git\n#将本地的master分支与GitHub仓库分支进行关联\ngit remote add origin https://github.com/GJXAIOU/mimengfenxi.git #后面为仓库的SSH地址\n\n##这步不需要,这是移除关联\ngit remote remove 名字\ngit remote rm origin https://github.com/GJXAIOU/mimengfenxi.git \n\n#注：origin是自己为远程GitHub仓库取的别名，主要是方便以后书写\n\n#下面的步骤只需要第一次的时候配置以下：\n步骤一：配置上面的公钥和私钥\n步骤二；输入：ssh -T -v git@github.com\n\n#这一步是指从本地直接生成库，而不是克隆的上传使用（一般也没有）\ngit pull --rebase origin master #相当于将GitHub创建仓库时候多创建的README.md拖下来\n\n#从GitHub往本地克隆，最好保证本地仓库是空的；同样本地上传到GitHub上时候最好保证GitHub新建的仓库是空的；\n\n#将本地的master分支上传到GitHub\ngit push -u origin master\n```\n\n### （三）上传同步本地文件（本地目录下文件有修改想同步到GitHub时候）\n1.在刚才的本地目录下，使用Git Bash ,输入：`Git init` 初始化本地git仓库；\n然后在改目录下会出现：`.git`这个文件  （只需要一次，以后不需要）\n\n2.进入修改目录下；输入：`git status` :查看多少文件未提交到仓库中（显示为红色的为未提交的），用于查看工作区和暂存区的状态；\n\n3.将上述所有文件从工作区提交到缓存区：`git add . `\n将特定文件提交大缓冲区：`git add 文件名称.后缀`\n\n4.再使用命令`git status`查看是不是都提交到了缓冲区（显示为绿色的是的）\n\n5.将缓冲区的文件提交到GitHub仓库中：`git commit -m \"想显示文件后面的的描述\"`\n\n6.最后一步：`git push`\n\n\n\n# 使用 GitHub 搭建个人网站\n使用 GitHub 搭建的网站是静态网站，搭建的操作分为两类：\n- 完全基于新的仓库搭建：\n  - 首先创建新的仓库，仓库名为：用户名.github.io\n  - 然后创建 index.html 即可；\n  - 相关的网页显示配置可以在 index.html 中进行配置；\n\n- 基于已有的仓库进行搭建：(现在已经改变，在摸索着)\n  - 首先进入仓库，在右上角选择：setting->Launch automatic gener....\n  - 在 Tagline 中填写项目名称；\n\n\n# 附录：\n\n## 附录一：Git 安装\nTODO：Git 和 GitHub\n\n",[[1565094897253,["GJX@GJXAIOU",[[1,6867,"\n"]],[6865,6865],[6866,6866]]],[1565094897392,["GJX@GJXAIOU",[[1,6868,"\n"]],[6866,6866],[6867,6867]]],[1565094897888,["GJX@GJXAIOU",[[1,6869,"\n"]],[6867,6867],[6868,6868]]],[1565094909403,["GJX@GJXAIOU",[[1,6866,"# 本机使用：已有仓库"]],[6866,6866],[6877,6877]]],[1565094909640,["GJX@GJXAIOU",[[1,6881,"\n"]],[6877,6877],[6878,6878]]],[1565094911144,["GJX@GJXAIOU",[[1,6878,"rugu7o"]],[6878,6878],[6884,6884]]],[1565094912828,["GJX@GJXAIOU",[[-1,6878,"rugu7o"]],[6884,6884],[6878,6878]]],[1565094914363,["GJX@GJXAIOU",[[1,6878,"ruguo "]],[6878,6878],[6884,6884]]],[1565094915381,["GJX@GJXAIOU",[[-1,6878,"ruguo "]],[6884,6884],[6878,6878]]],[1565094922645,["GJX@GJXAIOU",[[1,6878,"如果Github"]],[6878,6878],[6886,6886]]],[1565094922686,["GJX@GJXAIOU",[[1,6880," "]],[6886,6886],[6887,6887]]],[1565094923861,["GJX@GJXAIOU",[[1,6887,"上"]],[6887,6887],[6888,6888]]],[1565094923903,["GJX@GJXAIOU",[[1,6887," "]],[6888,6888],[6889,6889]]],[1565094924633,["GJX@GJXAIOU",[[1,6889,"一句"]],[6889,6889],[6891,6891]]],[1565094925237,["GJX@GJXAIOU",[[-1,6889,"一句"]],[6891,6891],[6889,6889]]],[1565094944451,["GJX@GJXAIOU",[[1,6889,"已经有仓库，而且不是本地传上去的，"]],[6889,6889],[6906,6906]]],[1565094947889,["GJX@GJXAIOU",[[-1,6905,"，"]],[6906,6906],[6905,6905]]],[1565094948315,["GJX@GJXAIOU",[[1,6905,"；"]],[6905,6905],[6906,6906]]],[1565094948609,["GJX@GJXAIOU",[[1,6910,"\n"]],[6906,6906],[6907,6907]]],[1565094960066,["GJX@GJXAIOU",[[1,6907,"1.首先将github"]],[6907,6907],[6918,6918]]],[1565094960106,["GJX@GJXAIOU",[[1,6912," "]],[6918,6918],[6919,6919]]],[1565094960756,["GJX@GJXAIOU",[[1,6919,"上"]],[6919,6919],[6920,6920]]],[1565094960797,["GJX@GJXAIOU",[[1,6919," "]],[6920,6920],[6921,6921]]],[1565094964440,["GJX@GJXAIOU",[[1,6921,"文件clone"]],[6921,6921],[6928,6928]]],[1565094964481,["GJX@GJXAIOU",[[1,6923," "]],[6928,6928],[6929,6929]]],[1565094965784,["GJX@GJXAIOU",[[1,6929,"下来"]],[6929,6929],[6931,6931]]],[1565094965825,["GJX@GJXAIOU",[[1,6929," "]],[6931,6931],[6932,6932]]],[1565094978388,["GJX@GJXAIOU",[[1,6932,"，如果和本地文件夹名字一点盐"]],[6932,6932],[6946,6946]]],[1565094979894,["GJX@GJXAIOU",[[-1,6943,"一点盐"]],[6946,6946],[6943,6943]]],[1565094994106,["GJX@GJXAIOU",[[1,6943,"一样则修改本地名字，防止覆盖；"]],[6943,6943],[6958,6958]]],[1565095022001,["GJX@GJXAIOU",[[1,6962,"\n"]],[6958,6958],[6959,6959]]],[1565095028549,["GJX@GJXAIOU",[[1,6959,"2.将clone"]],[6959,6959],[6967,6967]]],[1565095028591,["GJX@GJXAIOU",[[1,6962," "]],[6967,6967],[6968,6968]]],[1565095029788,["GJX@GJXAIOU",[[1,6968,"下面"]],[6968,6968],[6970,6970]]],[1565095029829,["GJX@GJXAIOU",[[1,6968," "]],[6970,6970],[6971,6971]]],[1565095030593,["GJX@GJXAIOU",[[-1,6969,"下面"]],[6971,6971],[6969,6969]]],[1565095050699,["GJX@GJXAIOU",[[1,6969,"下来的文件夹里面内容，连同"]],[6969,6969],[6982,6982]]],[1565095070849,["GJX@GJXAIOU",[[1,6982,".git文件"]],[6982,6982],[6988,6988]]],[1565095070895,["GJX@GJXAIOU",[[1,6986," "]],[6988,6988],[6989,6989]]],[1565095085665,["GJX@GJXAIOU",[[1,6989,"一起移动，同时将本"]],[6989,6989],[6998,6998]]],[1565095086406,["GJX@GJXAIOU",[[-1,6997,"本"]],[6998,6998],[6997,6997]]],[1565095121035,["GJX@GJXAIOU",[[1,6997,"本地文件夹的名字改成与仓库名字相同；就是博鳌镇"]],[6997,6997],[7020,7020]]],[1565095123269,["GJX@GJXAIOU",[[-1,7015,"就是博鳌镇"]],[7020,7020],[7015,7015]]],[1565095125051,["GJX@GJXAIOU",[[1,7015,"就是保证"]],[7015,7015],[7019,7019]]],[1565095138112,["GJX@GJXAIOU",[[1,7019,"一点：本地文件只能比github"]],[7019,7019],[7035,7035]]],[1565095138153,["GJX@GJXAIOU",[[1,7029," "]],[7035,7035],[7036,7036]]],[1565095141859,["GJX@GJXAIOU",[[1,7036,"端"]],[7036,7036],[7037,7037]]],[1565095141900,["GJX@GJXAIOU",[[1,7036," "]],[7037,7037],[7038,7038]]],[1565095146504,["GJX@GJXAIOU",[[1,7038,"的文件多，不能少；"]],[7038,7038],[7047,7047]]],[1565095149425,["GJX@GJXAIOU",[[1,7051,"\n"]],[7047,7047],[7048,7048]]],[1565095159682,["GJX@GJXAIOU",[[1,7048,"3.查看目前的git"]],[7048,7048],[7058,7058]]],[1565095159722,["GJX@GJXAIOU",[[1,7055," "]],[7058,7058],[7059,7059]]],[1565095163848,["GJX@GJXAIOU",[[1,7059,"用户"]],[7059,7059],[7061,7061]]],[1565095163888,["GJX@GJXAIOU",[[1,7059," "]],[7061,7061],[7062,7062]]],[1565095165562,["GJX@GJXAIOU",[[1,7062,"：``"]],[7062,7062],[7065,7065]]],[1565095168008,["GJX@GJXAIOU",[[1,7064,"git co"]],[7064,7064],[7070,7070]]],[1565095168836,["GJX@GJXAIOU",[[-1,7068,"co"]],[7070,7070],[7068,7068]]],[1565095171874,["GJX@GJXAIOU",[[1,7068,"remote -v"]],[7068,7068],[7077,7077]]],[1565095173919,["GJX@GJXAIOU",[[1,7082,"\n"]],[7078,7078],[7079,7079]]],[1565095175439,["GJX@GJXAIOU",[[-1,7082,"\n"]],[7079,7079],[7078,7078]]],[1565095180910,["GJX@GJXAIOU",[[1,7078,",可以将母亲"]],[7078,7078],[7084,7084]]],[1565095181822,["GJX@GJXAIOU",[[-1,7082,"母亲"]],[7084,7084],[7082,7082]]],[1565095184834,["GJX@GJXAIOU",[[1,7082,"目前的"]],[7082,7082],[7085,7085]]],[1565095189323,["GJX@GJXAIOU",[[1,7085,"一些用户将"]],[7085,7085],[7090,7090]]],[1565095189878,["GJX@GJXAIOU",[[-1,7089,"将"]],[7090,7090],[7089,7089]]],[1565095194537,["GJX@GJXAIOU",[[1,7089,"名删掉："]],[7089,7089],[7093,7093]]],[1565095195126,["GJX@GJXAIOU",[[1,7097,"\n"]],[7093,7093],[7094,7094]]],[1565095197302,["GJX@GJXAIOU",[[-1,7097,"\n"]],[7094,7094],[7093,7093]]],[1565095198761,["GJX@GJXAIOU",[[1,7093,"``"]],[7093,7093],[7095,7095]]],[1565095207142,["GJX@GJXAIOU",[[1,7094,"git remote remove ming"]],[7094,7094],[7116,7116]]],[1565095208742,["GJX@GJXAIOU",[[-1,7112,"ming"]],[7116,7116],[7112,7112]]],[1565095210026,["GJX@GJXAIOU",[[1,7112,"名字"]],[7112,7112],[7114,7114]]],[1565095213772,["GJX@GJXAIOU",[[1,7115,"，ranhou"]],[7115,7115],[7122,7122]]],[1565095214679,["GJX@GJXAIOU",[[-1,7116,"ranhou"]],[7122,7122],[7116,7116]]],[1565095219706,["GJX@GJXAIOU",[[1,7116,"然后连接自己"]],[7116,7116],[7122,7122]]],[1565095220828,["GJX@GJXAIOU",[[-1,7118,"连接自己"]],[7122,7122],[7118,7118]]],[1565095224707,["GJX@GJXAIOU",[[1,7118,"新建用户：``"]],[7118,7118],[7125,7125]]],[1565095226153,["GJX@GJXAIOU",[[1,7124,"giet"]],[7124,7124],[7128,7128]]],[1565095226829,["GJX@GJXAIOU",[[-1,7126,"et"]],[7128,7128],[7126,7126]]],[1565095227707,["GJX@GJXAIOU",[[1,7126,"t com"]],[7126,7126],[7131,7131]]],[1565095228957,["GJX@GJXAIOU",[[-1,7128,"com"]],[7131,7131],[7128,7128]]],[1565095236908,["GJX@GJXAIOU",[[1,7128,"remote add 名字 ku"]],[7128,7128],[7144,7144]]],[1565095237885,["GJX@GJXAIOU",[[-1,7142,"ku"]],[7144,7144],[7142,7142]]],[1565095241441,["GJX@GJXAIOU",[[1,7142,"库url"]],[7142,7142],[7146,7146]]],[1565095244833,["GJX@GJXAIOU",[[1,7147,"种类的"]],[7147,7147],[7150,7150]]],[1565095245333,["GJX@GJXAIOU",[[-1,7148,"类的"]],[7150,7150],[7148,7148]]],[1565095245558,["GJX@GJXAIOU",[[-1,7146,"`"]],[7147,7147],[7146,7146]]],[1565095249793,["GJX@GJXAIOU",[[1,7146,"`k"]],[7146,7146],[7148,7148]]],[1565095250398,["GJX@GJXAIOU",[[-1,7147,"k"]],[7148,7148],[7147,7147]]],[1565095250928,["GJX@GJXAIOU",[[1,7147,","]],[7147,7147],[7148,7148]]],[1565095251478,["GJX@GJXAIOU",[[-1,7147,","]],[7148,7148],[7147,7147]]],[1565095253628,["GJX@GJXAIOU",[[1,7147,", 种类"]],[7147,7147],[7151,7151]]],[1565095254174,["GJX@GJXAIOU",[[-1,7149,"种类"]],[7151,7151],[7149,7149]]],[1565095258441,["GJX@GJXAIOU",[[1,7149,"这里的名字最后"]],[7149,7149],[7156,7156]]],[1565095259742,["GJX@GJXAIOU",[[-1,7154,"最后"]],[7156,7156],[7154,7154]]],[1565095265910,["GJX@GJXAIOU",[[1,7154,"最好使用苦命"]],[7154,7154],[7160,7160]]],[1565095266630,["GJX@GJXAIOU",[[-1,7158,"苦命"]],[7160,7160],[7158,7158]]],[1565095277991,["GJX@GJXAIOU",[[1,7158,"库名，便于记忆和区分，"]],[7158,7158],[7169,7169]]],[1565095286968,["GJX@GJXAIOU",[[-1,7168,"，"]],[7169,7169],[7168,7168]]],[1565095287489,["GJX@GJXAIOU",[[1,7168,"；"]],[7168,7168],[7169,7169]]],[1565095289086,["GJX@GJXAIOU",[[1,7173,"\n"]],[7169,7169],[7170,7170]]],[1565095299176,["GJX@GJXAIOU",[[1,7170,"4.添加新文件：``"]],[7170,7170],[7180,7180]]],[1565095302724,["GJX@GJXAIOU",[[1,7179,"git add 。"]],[7179,7179],[7188,7188]]],[1565095303758,["GJX@GJXAIOU",[[-1,7187,"。"]],[7188,7188],[7187,7187]]],[1565095304192,["GJX@GJXAIOU",[[1,7187,"."]],[7187,7187],[7188,7188]]],[1565095365478,[null,[[-1,7169,"种"],[1,7170,"\n"],[-1,7189,"\n"]],[7169,7169],[7189,7189]]],[1565095365478,[null,[[1,7169,"种"],[-1,7169,"\n"],[1,7189,"\n"]],[7189,7189],[7169,7169]]],[1565095308252,["GJX@GJXAIOU",[[1,7189,"或者``"]],[7189,7189],[7193,7193]]],[1565095316369,["GJX@GJXAIOU",[[1,7192,"git add wenj"]],[7192,7192],[7204,7204]]],[1565095317189,["GJX@GJXAIOU",[[-1,7200,"wenj"]],[7204,7204],[7200,7200]]],[1565095319452,["GJX@GJXAIOU",[[1,7200,"文件名"]],[7200,7200],[7203,7203]]],[1565096327609,[null,[[-1,7169,"种"],[1,7170,"\n"],[-1,7204,"\n"]],[7169,7169],[7204,7204]]],[1565096327609,[null,[[1,7169,"种"],[-1,7169,"\n"],[1,7204,"\n"]],[7204,7204],[7169,7169]]],[1565096316969,["GJX@GJXAIOU",[[1,7208,"\n"]],[7204,7204],[7205,7205]]],[1565096321008,["GJX@GJXAIOU",[[1,7205,"5. "]],[7205,7205],[7208,7208]]],[1565096321767,["GJX@GJXAIOU",[[-1,7207," "]],[7208,7208],[7207,7207]]],[1565096324541,["GJX@GJXAIOU",[[1,7207,"ranhou"]],[7207,7207],[7213,7213]]],[1565096325477,["GJX@GJXAIOU",[[-1,7207,"ranhou"]],[7213,7213],[7207,7207]]],[1565096327448,["GJX@GJXAIOU",[[1,7207,"然后 "]],[7207,7207],[7210,7210]]],[1565096387612,[null,[[-1,7169,"种"],[1,7170,"\n"],[-1,7210,"\n"]],[7169,7169],[7210,7210]]],[1565096387612,[null,[[1,7169,"种"],[-1,7169,"\n"],[1,7210,"\n"]],[7210,7210],[7169,7169]]],[1565096329266,["GJX@GJXAIOU",[[1,7210,"：``"]],[7210,7210],[7213,7213]]],[1565096334738,["GJX@GJXAIOU",[[1,7212,"git commit 0"]],[7212,7212],[7224,7224]]],[1565096335109,["GJX@GJXAIOU",[[-1,7223,"0"]],[7224,7224],[7223,7223]]],[1565096339266,["GJX@GJXAIOU",[[1,7223,"-m \"shuo"]],[7223,7223],[7231,7231]]],[1565096340446,["GJX@GJXAIOU",[[-1,7227,"shuo"]],[7231,7231],[7227,7227]]],[1565096341283,["GJX@GJXAIOU",[[1,7227,"\""]],[7227,7227],[7228,7228]]],[1565096343978,["GJX@GJXAIOU",[[1,7227,"说明"]],[7227,7227],[7229,7229]]],[1565096347110,["GJX@GJXAIOU",[[1,7235,"\n"]],[7231,7231],[7232,7232]]],[1565096354225,["GJX@GJXAIOU",[[1,7232,"6.最后 push： "]],[7232,7232],[7243,7243]]],[1565096355205,["GJX@GJXAIOU",[[-1,7242," "]],[7243,7243],[7242,7242]]],[1565096355856,["GJX@GJXAIOU",[[1,7242,"11"]],[7242,7242],[7244,7244]]],[1565096356624,["GJX@GJXAIOU",[[-1,7242,"11"]],[7244,7244],[7242,7242]]],[1565096357283,["GJX@GJXAIOU",[[1,7242,"``"]],[7242,7242],[7244,7244]]],[1565096362476,["GJX@GJXAIOU",[[1,7243,"git push notes"]],[7243,7243],[7257,7257]]],[1565096365629,["GJX@GJXAIOU",[[-1,7252,"notes"]],[7257,7257],[7252,7252]]],[1565096367005,["GJX@GJXAIOU",[[1,7252,"名字"]],[7252,7252],[7254,7254]]],[1565096627617,[null,[[-1,7169,"种"],[1,7170,"\n"],[-1,7255,"\n"]],[7169,7169],[7255,7255]]],[1565096627617,[null,[[1,7169,"种"],[-1,7169,"\n"],[1,7255,"\n"]],[7255,7255],[7169,7169]]],[1565096621839,["GJX@GJXAIOU",[[-1,130,"做最后的总结"],[1,136,"j"]],[130,136],[131,131]]],[1565096622470,["GJX@GJXAIOU",[[1,131,"inxing"]],[131,131],[137,137]]],[1565096623625,["GJX@GJXAIOU",[[-1,130,"jinxing"]],[137,137],[130,130]]],[1565096624501,["GJX@GJXAIOU",[[1,130,"Jinxi"]],[130,130],[135,135]]],[1565096625245,["GJX@GJXAIOU",[[-1,130,"Jinxi"]],[135,135],[130,130]]],[1565096687619,[null,[[-1,7163,"种"],[1,7164,"\n"],[-1,7249,"\n"]],[7163,7163],[7249,7249]]],[1565096687619,[null,[[1,7163,"种"],[-1,7163,"\n"],[1,7249,"\n"]],[7249,7249],[7163,7163]]],[1565096636282,["GJX@GJXAIOU",[[1,130,"进行整体迭代、"]],[130,130],[137,137]]],[1565096637412,["GJX@GJXAIOU",[[-1,136,"、"]],[137,137],[136,136]]],[1565096646921,["GJX@GJXAIOU",[[1,136,"，2019-8-6号行政"]],[136,136],[148,148]]],[1565096647533,["GJX@GJXAIOU",[[-1,146,"行政"]],[148,148],[146,146]]],[1565096652432,["GJX@GJXAIOU",[[1,146,"新城"]],[146,146],[148,148]]],[1565096653038,["GJX@GJXAIOU",[[-1,146,"新城"]],[148,148],[146,146]]],[1565096657566,["GJX@GJXAIOU",[[1,146,"形成终稿"]],[146,146],[150,150]]],[1565096671908,["GJX@GJXAIOU",[[-1,156,"\n"]],[156,156],[155,155]]],[1565096672279,["GJX@GJXAIOU",[[-1,155,"\n"]],[155,155],[154,154]]],[1565096673788,["GJX@GJXAIOU",[[1,155,"\n"]],[154,154],[155,155]]],[1565096679290,["GJX@GJXAIOU",[[1,180,"++++"]],[180,180],[182,182]]],[1565096680268,["GJX@GJXAIOU",[[-1,182,"++"]],[182,182],[180,180]]],[1565096681390,["GJX@GJXAIOU",[[-1,181,"+"]],[181,181],[180,180]]],[1565096681533,["GJX@GJXAIOU",[[-1,179,"\n"]],[180,180],[179,179]]],[1565096682717,["GJX@GJXAIOU",[[-1,179,"+"]],[180,180],[179,179]]],[1565096683046,["GJX@GJXAIOU",[[1,180,"\n"]],[179,179],[180,180]]],[1565096684849,["GJX@GJXAIOU",[[1,180,"===="]],[180,180],[182,182]]],[1565096748609,[null,[[-1,7186,"种"],[1,7187,"\n"],[-1,7272,"\n"]],[7186,7186],[7272,7272]]],[1565096748609,[null,[[1,7186,"种"],[-1,7186,"\n"],[1,7272,"\n"]],[7272,7272],[7186,7186]]],[1565096708002,["GJX@GJXAIOU",[[1,182,"原则：不要在远程库修改文件，一定哟啊"]],[182,182],[200,200]]],[1565096709468,["GJX@GJXAIOU",[[-1,198,"哟啊"]],[200,200],[198,198]]],[1565096710368,["GJX@GJXAIOU",[[1,198,"哟啊"]],[198,198],[200,200]]],[1565096710973,["GJX@GJXAIOU",[[-1,198,"哟啊"]],[200,200],[198,198]]],[1565096726105,["GJX@GJXAIOU",[[1,198,"要在本地修改然后push"]],[198,198],[210,210]]],[1565096726146,["GJX@GJXAIOU",[[1,206," "]],[210,210],[211,211]]],[1565096731230,["GJX@GJXAIOU",[[1,214,"\n"]],[214,214],[215,215]]],[1565097540611,[null,[[-1,7216,"种"],[1,7217,"\n"],[-1,7302,"\n"]],[7216,7216],[7302,7302]]],[1565097540611,[null,[[1,7216,"种"],[-1,7216,"\n"],[1,7302,"\n"]],[7302,7302],[7216,7216]]],[1565097481047,["GJX@GJXAIOU",[[1,281,"# "]],[286,286],[307,307]]],[1565097482596,["GJX@GJXAIOU",[[1,282,"#"]],[307,307],[308,308]]]],null,"GJX@GJXAIOU"],["a6ef2d72-afeb-462b-bda0-b72dc0671a59",1565099673736,"---\npin: true\ntags: \n- Git\nstyle: summer\nflag: red\ndate: '2019-7-31'\ncustom: GJXAIOU\nnote: Git&GitHub使用说明,2019-2-11号形成初稿，2019-7-31进行整体迭代，2019-8-6号形成终稿\n---\n\n# Git&GitHub使用说明\n\n@toc\n\n==原则：不要在远程库修改文件，一定要在本地修改然后 push==\n\n## 一、下载安装\n\n1.首先在本地安装git，[软件下载地址](https://git-scm.com/downloads)。\n\n## 2.安装好Git 之后，会有两个 Git 形式：\n- Git Bash   ：这是命令行模式（类似Linux）【推荐】\n- Git GUI      ：这是有界面的模式\n\n3.具体的安装过程详见[附录一：Git安装教程](#附录一：git-安装)\n\n4.Git 整体结构\n![Git结构 2]($resource/Git%E7%BB%93%E6%9E%84%202.png)\n\n5.查看git配置（以下默认命令输入处为：GitBash）\n`git config --list`\n\n\n\n## 二、在本地建立一个仓库\n- 例如在`E`盘下建立一个名为`practice`的仓库\n```git\n  cd e:\n  mkdir practice\n  cd practice\n  ls -la #看现在里面有多少文件\n  git init  #完成初始化，建立了一个空仓库\n```\n\n有两种方式可以建立Git仓库：\n\n*   用Git之前已经有项目代码，则使用以下两条命令建立Git仓库\n```git\n  cd 项目代码所在的文件夹\n  git init\n```\n*   用Git之前还没有项目代码，使用下面三条命令创建git仓库\n```\n  cd 某个文件夹\n  git init your_project #会在当前路径下创建和项目名称同名的文件夹\n  cd your_project\n```\n然后就是在自己的仓库中开始写代码或者更改代码了。\n\n## 三、工作区和版本库区别：\n\n![工作区与版本库的区别]($resource/%E5%B7%A5%E4%BD%9C%E5%8C%BA%E4%B8%8E%E7%89%88%E6%9C%AC%E5%BA%93%E7%9A%84%E5%8C%BA%E5%88%AB.png)\n\n注：示例文件名`test.txt`\n- 当使用`git add `将文件提交到暂存区之后，仍然在本地继续修改；\n  - 使用：`git commit -m 'shuoming' `提交只是提交第一个修改的，后面修改的不提交\n  - 使用：`git commit -m 'shuoming' test.txt`提交的将是后面修改的版本；\n  - 使用：`git diff head -- test.txt`可以显示工作区和分支的区别\n\n\n\n## 四、撤销修改\n\n- 工作区修改之后，未提交到暂存区：`git checkout -- test.txt`,撤销工作区的修改；\n- 工作区修改后，已提交到暂存区：`git reset head test.txt`,撤销暂存区的修改，然后再使用上面的命令撤销工作区的修改；\n\n\n## 五、删除文件\n\n- 删除工作区文件：`rm test.txt`\n- 删除暂存区文件：(删除的修改操作，要提交)\n`git rm test.txt`\n`git commit -m &quot;delete test.txt&quot;`\n\n\n## 六、配置Git\n\n- 下面是使用Git的最小配置\n1.打开Git Bash :切换到下面文件目录下；（或者在文件资源器中进入该目录，然后右键：Git Bash Here）\n配置`user.name`和`user.email` 其中global表示对登录用户的所有仓库有效，是用于区分不同的开发人员身份；\n注：以上信息都保存在.git 文件夹中，存放的是本地库相关的子目录和文件，可以使用：`ll .git/`查看，同时，可以使用`cat .git/config`进行查看配置文件，这里看到所有的用户\n2.输入：`git config --global user.name '随便用户名'`\n3.输入：`git config --global user.email '随便邮箱'`\n```git\n git config --local         local只对仓库有效。此也为缺省条件下的配置\n git config --global        global对登录用户的所有仓库都有效\n git config --system        system对系统的所有用户都有效\n```\n上面三个作用域是由一定的优先级的：local > global > system\n\n\n \n\n## 七、git文件重命名的命令\n\n>前提是需要修改git仓库中已经commit了的文件\n\n- 假如想使文件`readme`，改名为 `readme.cpp`。可以使用下面的三条命令：\n```git\nmv readme readme.cpp\ngit rm readme //注意与linux 的命令rm的区别\ngit add readme.cpp\n```\n最后可以使用git status查看修改后的仓库的状态\n上述是三条命令，还可以使用下面的一条命令达到上述三条命令的效果\n `git mv readme readme.cpp`\n \n- 如果想要撤销刚刚的修改，使用下面的命令：\n`git reset --hard`\n\n\n## 八、 如何使用git log系列命令查看git仓库的版本演变历史\n```\ngit branch -v 看本地有多少版本分支\ngit log --all 查看所有分支的历史\ngit log --all --graph 查看图形化的 log 地址\ngit log --oneline 查看单行的简洁历史。\ngit log --oneline -n4 查看最近的四条简洁历史。\ngit log --oneline --all -n4 --graph 查看所有分支最近 4 条单行的图形化历史。\ngit help --web log 跳转到git log 的帮助文档网页\ngit log --oneline temp 只查看temp的分支的信息且oneline形式\n```\n- 注意：\n  - git log 仅仅是查看当前分支的更改历史\n  - git log --all 查看所有分支的信息\n  - git log --all --graph 上面的查看不容易看各个分支的关系，加上图形化容易看出各个分支的关系\n  - git checkout -b temp +从哪个commit开始新加一个分支(一大串数字,表示某一个commit中的数字 )\n  - git checkout master // 切换到master分支\n\n*   git命令的后面加的参数，有的时候是-，有的时候是- -\n*   单字母的参数是 ‘-’，非单字母的参数是’- -’\n\n\n\n\n## 九、本地.git 文件目录\n\n*   COMMIT_EDITMSG\n*   cconfig,当前仓库的配置信息,core,用户,远程,分支等信息.(命令操作其实就是修改当前config文件)\n*   description （仓库的描述信息文件）\n*   HEAD （指向当前所在的分支），例如当前在 develop 分支，实际指向地址是 refs/heads/develop\n*   hooks [文件夹]\n*   index\n*   info [文件夹]\n*   logs [文件夹]\n*   objects [文件夹] （存放所有的 git 对象，对象哈希值前 2 位作为文件夹名称，后 38 位作为对象文件名, 可通过 git cat-file -p 命令，拼接文件夹名称+文件名查看）\n*   ORIG_HEAD\n*   refs\n    - heads,其实就是分支,里面包含所有的分支文件,文件存储了分支指向的指纹信息\n    - tags 叫做里程碑,或者版本发布用等记录重要版本.文件也存储了tag的指纹信息\n    - remotes,远程仓库信息\n\n## 十、版本回退\n\n分别修改几次hello.txt，并分别提交。\n**版本1：**\nhello\n**版本2：**\nhello world\n**版本3：**\nhello world third\n**版本4：**\nhello  world  third last\n以上版本都提交之后，如果想回到第二个版本：\n\n- 方式一：【推荐】\n1.首先输入：`git reflog` 会得到之后所有该文件的提交版本信息，其中最前面黄色字体为提交的版本号；\n注：可以使用`git log`查看该文件每次提交的详细信息（包括：完整的版本号，作者，时间等），也可以使用：`git log --pretty=online`按行显示以上信息；\n其中：Head 含义：HEAD@{移动到当前版本需要多少步}\n2.输入：`git reset --hard 第二次提交版本号` （这里版本号填写 `git reflog`显示的即可，不必填写完整的版本号）即可回退到第二个版本；\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20181028233812515.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NjbnVhY21oZHU=,size_27,color_FFFFFF,t_70)\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20181028234106489.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NjbnVhY21oZHU=,size_27,color_FFFFFF,t_70)\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20181028234356533.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NjbnVhY21oZHU=,size_27,color_FFFFFF,t_70)\n\n- 方式二：只能后退\n`git reset --head HEAD^`其中一个^表示后退一步，n 个表示后退 n 步；\n- 方式三：只能后退\n`git reset --head HEAD~n`,表示后退 n 步\n\n### 补充：reset 参数\n![搜狗截图20190731203134]($resource/%E6%90%9C%E7%8B%97%E6%88%AA%E5%9B%BE20190731203134.png)\n\n- 参数一:`--soft`  ：仅仅在本地库移动 HEAD 指针；\n- 参数二:`--mixed` ：在本地库移动 HEAD 指针，同时重置暂存区；\n- 参数三:`--hard` ：在本地库移动 HEAD 指针，同时重置暂存区和工作区；\n\n\n### 删除文件并找回\n前提：删除前，文件存在时的状态提交到了本地库；\n操作：`git reset --head 指针位置`\n- 删除操作已经提交到了本地库：指针位置指向历史记录\n- 删除操作尚未提交到本地库：指针位置指向 HEAD\n\n### 比较文件的差异\n- 将工作区文件和暂存区进行比较：`git diff 文件名`\n- 将工作区文件和本地库历史记录比较：`git diff 本地库中历史版本 文件名`\n- 以上不带文件名就是比较多个文件；\n\n\n\n\n\n\n\n## GitHub\n\n### 1.创建远程仓库别名\n- 查看当前远程仓库地址别名：`git remote -v`\n- 为远程仓库添加别名：`git remote add 别名 远程仓库地址`\n\n### 2.推送\n`git push 别名 分支名`\n\n\n\n\n\n## 十一、连接到GitHub\n\n### （一）将GitHub上的库克隆到本地\n\n说明：默认文件地址为：E:\\Program\\GitHub\\\n         GitHub上的库为：Notes\n4.将GitHub上已有的仓库下载到本地（这样可以在本地编辑）\n- 进入GitHub中所要同步的库页面，选择：`clone or download`，然后将URL复制下来：本人为：`https://github.com/GJXAIOU/Notes.git`\n![URL]($resource/URL.jpg)\n\n- 在Git Bash 中首先将目录切换到想要保存该库的目录下：然后输入\n`git clone https://github.com/GJXAIOU/Notes.git` (后面的网址就是刚才复制的)\n\n\n### （二）连接本地仓库与GitHub：\n\n1.在本地生成SSH Key :  在Git Bash中输入：`ssh-keygen -t rsa -C \"GitHub邮箱\"`，接下来**全部回车**确认，这样在电脑C盘本人用户名目录下就会出现一个文件：`.ssh`\n2.将上面文件中的`id_rsa`使用记事本打开，然后全选复制；\n3.将上面复制的秘钥，黏贴到GitHub中\n![搜狗截图20190226204854]($resource/%E6%90%9C%E7%8B%97%E6%88%AA%E5%9B%BE20190226204854.png)\n![搜狗截图20190226205651]($resource/%E6%90%9C%E7%8B%97%E6%88%AA%E5%9B%BE20190226205651.png)\n\n补充：github上新建仓库：`mimengfenxi`\n使用：\n```git\n#将本地的master分支与GitHub仓库分支进行关联\ngit remote add origin https://github.com/GJXAIOU/mimengfenxi.git #后面为仓库的SSH地址\n\n##这步不需要,这是移除关联\ngit remote remove 名字\ngit remote rm origin https://github.com/GJXAIOU/mimengfenxi.git \n\n#注：origin是自己为远程GitHub仓库取的别名，主要是方便以后书写\n\n#下面的步骤只需要第一次的时候配置以下：\n步骤一：配置上面的公钥和私钥\n步骤二；输入：ssh -T -v git@github.com\n\n#这一步是指从本地直接生成库，而不是克隆的上传使用（一般也没有）\ngit pull --rebase origin master #相当于将GitHub创建仓库时候多创建的README.md拖下来\n\n#从GitHub往本地克隆，最好保证本地仓库是空的；同样本地上传到GitHub上时候最好保证GitHub新建的仓库是空的；\n\n#将本地的master分支上传到GitHub\ngit push -u origin master\n```\n\n### （三）上传同步本地文件（本地目录下文件有修改想同步到GitHub时候）\n1.在刚才的本地目录下，使用Git Bash ,输入：`Git init` 初始化本地git仓库；\n然后在改目录下会出现：`.git`这个文件  （只需要一次，以后不需要）\n\n2.进入修改目录下；输入：`git status` :查看多少文件未提交到仓库中（显示为红色的为未提交的），用于查看工作区和暂存区的状态；\n\n3.将上述所有文件从工作区提交到缓存区：`git add . `\n将特定文件提交大缓冲区：`git add 文件名称.后缀`\n\n4.再使用命令`git status`查看是不是都提交到了缓冲区（显示为绿色的是的）\n\n5.将缓冲区的文件提交到GitHub仓库中：`git commit -m \"想显示文件后面的的描述\"`\n\n6.最后一步：`git push`\n\n\n# 本机使用：已有仓库\n如果 Github 上已经有仓库，而且不是本地传上去的；\n1.首先将 github 上文件 clone 下来，如果和本地文件夹名字一样则修改本地名字，防止覆盖；\n2.将 clone 下来的文件夹里面内容，连同.git 文件一起移动，同时将本地文件夹的名字改成与仓库名字相同；就是保证一点：本地文件只能比 github 端的文件多，不能少；\n3.查看目前的 git 用户：`git remote -v`,可以将目前的一些用户名删掉：`git remote remove 名字`，然后新建用户：`git remote add 名字 库url`, 这里的名字最好使用库名，便于记忆和区分；\n4.添加新文件：`git add .`或者`git add 文件名`\n5.然后 ：`git commit -m \"说明\"`\n6.最后 push：`git push 名字`\n\n\n\n# 使用 GitHub 搭建个人网站\n使用 GitHub 搭建的网站是静态网站，搭建的操作分为两类：\n- 完全基于新的仓库搭建：\n  - 首先创建新的仓库，仓库名为：用户名.github.io\n  - 然后创建 index.html 即可；\n  - 相关的网页显示配置可以在 index.html 中进行配置；\n\n- 基于已有的仓库进行搭建：(现在已经改变，在摸索着)\n  - 首先进入仓库，在右上角选择：setting->Launch automatic gener....\n  - 在 Tagline 中填写项目名称；\n\n\n# 附录：\n\n## 附录一：Git 安装\nTODO：Git 和 GitHub\n\n",[[1565099619175,["GJX@GJXAIOU",[[-1,1260,"\n"]],[1260,1260],[1259,1259]]],[1565099634754,["GJX@GJXAIOU",[[-1,1270,"\n"]],[1270,1270],[1269,1269]]],[1565100131388,["GJX@GJXAIOU",[[1,1409,"~~~~"]],[1409,1409],[1411,1411]]],[1565100138726,["GJX@GJXAIOU",[[1,1411,"下面的语句有点问题"]],[1411,1411],[1420,1420]]],[1565100361330,["GJX@GJXAIOU",[[-1,3025,"## 九、本地.git 文件目录\n\n*   COMMIT_EDITMSG\n*   cconfig,当前仓库的配置信息,core,用户,远程,分支等信息.(命令操作其实就是修改当前config文件)\n*   description （仓库的描述信息文件）\n*   HEAD （指向当前所在的分支），例如当前在 develop 分支，实际指向地址是 refs/heads/develop\n*   hooks [文件夹]\n*   index\n*   info [文件夹]\n*   logs [文件夹]\n*   objects [文件夹] （存放所有的 git 对象，对象哈希值前 2 位作为文件夹名称，后 38 位作为对象文件名, 可通过 git cat-file -p 命令，拼接文件夹名称+文件名查看）\n*   ORIG_HEAD\n*   refs\n    - heads,其实就是分支,里面包含所有的分支文件,文件存储了分支指向的指纹信息\n    - tags 叫做里程碑,或者版本发布用等记录重要版本.文件也存储了tag的指纹信息\n    - remotes,远程仓库信息"]],[3025,3512],[3025,3025]]],[1565100361930,["GJX@GJXAIOU",[[-1,3026,"\n"]],[3025,3025],[3024,3024]]],[1565100362130,["GJX@GJXAIOU",[[-1,3025,"\n"]],[3024,3024],[3023,3023]]],[1565100362274,["GJX@GJXAIOU",[[-1,3024,"\n"]],[3023,3023],[3022,3022]]],[1565100362674,["GJX@GJXAIOU",[[-1,3023,"\n"]],[3022,3022],[3021,3021]]],[1565100365522,["GJX@GJXAIOU",[[-1,3026,"十"]],[3026,3027],[3026,3026]]],[1565100367662,["GJX@GJXAIOU",[[1,3026,"九"]],[3026,3026],[3027,3027]]]],null,"GJX@GJXAIOU"],["f9f8c7bc-7646-4ff7-9e38-6981424e434f",1565144102901,"---\npin: true\ntags: \n- Git\nstyle: summer\nflag: red\ndate: '2019-7-31'\ncustom: GJXAIOU\nnote: Git&GitHub使用说明,2019-2-11号形成初稿，2019-7-31进行整体迭代，2019-8-6号形成终稿\n---\n\n# Git&GitHub使用说明\n\n@toc\n\n==原则：不要在远程库修改文件，一定要在本地修改然后 push==\n\n## 一、下载安装\n\n1.首先在本地安装git，[软件下载地址](https://git-scm.com/downloads)。\n\n## 2.安装好Git 之后，会有两个 Git 形式：\n- Git Bash   ：这是命令行模式（类似Linux）【推荐】\n- Git GUI      ：这是有界面的模式\n\n3.具体的安装过程详见[附录一：Git安装教程](#附录一：git-安装)\n\n4.Git 整体结构\n![Git结构 2]($resource/Git%E7%BB%93%E6%9E%84%202.png)\n\n5.查看git配置（以下默认命令输入处为：GitBash）\n`git config --list`\n\n\n\n## 二、在本地建立一个仓库\n- 例如在`E`盘下建立一个名为`practice`的仓库\n```git\n  cd e:\n  mkdir practice\n  cd practice\n  ls -la #看现在里面有多少文件\n  git init  #完成初始化，建立了一个空仓库\n```\n\n有两种方式可以建立Git仓库：\n\n*   用Git之前已经有项目代码，则使用以下两条命令建立Git仓库\n```git\n  cd 项目代码所在的文件夹\n  git init\n```\n*   用Git之前还没有项目代码，使用下面三条命令创建git仓库\n```\n  cd 某个文件夹\n  git init your_project #会在当前路径下创建和项目名称同名的文件夹\n  cd your_project\n```\n然后就是在自己的仓库中开始写代码或者更改代码了。\n\n## 三、工作区和版本库区别：\n\n![工作区与版本库的区别]($resource/%E5%B7%A5%E4%BD%9C%E5%8C%BA%E4%B8%8E%E7%89%88%E6%9C%AC%E5%BA%93%E7%9A%84%E5%8C%BA%E5%88%AB.png)\n\n注：示例文件名`test.txt`\n- 当使用`git add `将文件提交到暂存区之后，仍然在本地继续修改；\n  - 使用：`git commit -m 'shuoming' `提交只是提交第一个修改的，后面修改的不提交\n  - 使用：`git commit -m 'shuoming' test.txt`提交的将是后面修改的版本；\n  - 使用：`git diff head -- test.txt`可以显示工作区和分支的区别\n\n\n## 四、撤销修改\n- 工作区修改之后，未提交到暂存区：`git checkout -- test.txt`,撤销工作区的修改；\n- 工作区修改后，已提交到暂存区：`git reset head test.txt`,撤销暂存区的修改，然后再使用上面的命令撤销工作区的修改；\n\n\n## 五、删除文件\n~~下面的语句有点问题~~\n- 删除工作区文件：`rm test.txt`\n- 删除暂存区文件：(删除的修改操作，要提交)\n`git rm test.txt`\n`git commit -m &quot;delete test.txt&quot;`\n\n\n## 六、配置Git\n\n- 下面是使用Git的最小配置\n1.打开Git Bash :切换到下面文件目录下；（或者在文件资源器中进入该目录，然后右键：Git Bash Here）\n配置`user.name`和`user.email` 其中global表示对登录用户的所有仓库有效，是用于区分不同的开发人员身份；\n注：以上信息都保存在.git 文件夹中，存放的是本地库相关的子目录和文件，可以使用：`ll .git/`查看，同时，可以使用`cat .git/config`进行查看配置文件，这里看到所有的用户\n2.输入：`git config --global user.name '随便用户名'`\n3.输入：`git config --global user.email '随便邮箱'`\n```git\n git config --local         local只对仓库有效。此也为缺省条件下的配置\n git config --global        global对登录用户的所有仓库都有效\n git config --system        system对系统的所有用户都有效\n```\n上面三个作用域是由一定的优先级的：local > global > system\n\n\n \n\n## 七、git文件重命名的命令\n\n>前提是需要修改git仓库中已经commit了的文件\n\n- 假如想使文件`readme`，改名为 `readme.cpp`。可以使用下面的三条命令：\n```git\nmv readme readme.cpp\ngit rm readme //注意与linux 的命令rm的区别\ngit add readme.cpp\n```\n最后可以使用git status查看修改后的仓库的状态\n上述是三条命令，还可以使用下面的一条命令达到上述三条命令的效果\n `git mv readme readme.cpp`\n \n- 如果想要撤销刚刚的修改，使用下面的命令：\n`git reset --hard`\n\n\n## 八、 如何使用git log系列命令查看git仓库的版本演变历史\n```\ngit branch -v 看本地有多少版本分支\ngit log --all 查看所有分支的历史\ngit log --all --graph 查看图形化的 log 地址\ngit log --oneline 查看单行的简洁历史。\ngit log --oneline -n4 查看最近的四条简洁历史。\ngit log --oneline --all -n4 --graph 查看所有分支最近 4 条单行的图形化历史。\ngit help --web log 跳转到git log 的帮助文档网页\ngit log --oneline temp 只查看temp的分支的信息且oneline形式\n```\n- 注意：\n  - git log 仅仅是查看当前分支的更改历史\n  - git log --all 查看所有分支的信息\n  - git log --all --graph 上面的查看不容易看各个分支的关系，加上图形化容易看出各个分支的关系\n  - git checkout -b temp +从哪个commit开始新加一个分支(一大串数字,表示某一个commit中的数字 )\n  - git checkout master // 切换到master分支\n\n*   git命令的后面加的参数，有的时候是-，有的时候是- -\n*   单字母的参数是 ‘-’，非单字母的参数是’- -’\n\n\n## 九、版本回退\n\n分别修改几次hello.txt，并分别提交。\n**版本1：**\nhello\n**版本2：**\nhello world\n**版本3：**\nhello world third\n**版本4：**\nhello  world  third last\n以上版本都提交之后，如果想回到第二个版本：\n\n- 方式一：【推荐】\n1.首先输入：`git reflog` 会得到之后所有该文件的提交版本信息，其中最前面黄色字体为提交的版本号；\n注：可以使用`git log`查看该文件每次提交的详细信息（包括：完整的版本号，作者，时间等），也可以使用：`git log --pretty=online`按行显示以上信息；\n其中：Head 含义：HEAD@{移动到当前版本需要多少步}\n2.输入：`git reset --hard 第二次提交版本号` （这里版本号填写 `git reflog`显示的即可，不必填写完整的版本号）即可回退到第二个版本；\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20181028233812515.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NjbnVhY21oZHU=,size_27,color_FFFFFF,t_70)\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20181028234106489.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NjbnVhY21oZHU=,size_27,color_FFFFFF,t_70)\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20181028234356533.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NjbnVhY21oZHU=,size_27,color_FFFFFF,t_70)\n\n- 方式二：只能后退\n`git reset --head HEAD^`其中一个^表示后退一步，n 个表示后退 n 步；\n- 方式三：只能后退\n`git reset --head HEAD~n`,表示后退 n 步\n\n### 补充：reset 参数\n![搜狗截图20190731203134]($resource/%E6%90%9C%E7%8B%97%E6%88%AA%E5%9B%BE20190731203134.png)\n\n- 参数一:`--soft`  ：仅仅在本地库移动 HEAD 指针；\n- 参数二:`--mixed` ：在本地库移动 HEAD 指针，同时重置暂存区；\n- 参数三:`--hard` ：在本地库移动 HEAD 指针，同时重置暂存区和工作区；\n\n\n### 删除文件并找回\n前提：删除前，文件存在时的状态提交到了本地库；\n操作：`git reset --head 指针位置`\n- 删除操作已经提交到了本地库：指针位置指向历史记录\n- 删除操作尚未提交到本地库：指针位置指向 HEAD\n\n### 比较文件的差异\n- 将工作区文件和暂存区进行比较：`git diff 文件名`\n- 将工作区文件和本地库历史记录比较：`git diff 本地库中历史版本 文件名`\n- 以上不带文件名就是比较多个文件；\n\n\n\n\n\n\n\n## GitHub\n\n### 1.创建远程仓库别名\n- 查看当前远程仓库地址别名：`git remote -v`\n- 为远程仓库添加别名：`git remote add 别名 远程仓库地址`\n\n### 2.推送\n`git push 别名 分支名`\n\n\n\n\n\n## 十一、连接到GitHub\n\n### （一）将GitHub上的库克隆到本地\n\n说明：默认文件地址为：E:\\Program\\GitHub\\\n         GitHub上的库为：Notes\n4.将GitHub上已有的仓库下载到本地（这样可以在本地编辑）\n- 进入GitHub中所要同步的库页面，选择：`clone or download`，然后将URL复制下来：本人为：`https://github.com/GJXAIOU/Notes.git`\n![URL]($resource/URL.jpg)\n\n- 在Git Bash 中首先将目录切换到想要保存该库的目录下：然后输入\n`git clone https://github.com/GJXAIOU/Notes.git` (后面的网址就是刚才复制的)\n\n\n### （二）连接本地仓库与GitHub：\n\n1.在本地生成SSH Key :  在Git Bash中输入：`ssh-keygen -t rsa -C \"GitHub邮箱\"`，接下来**全部回车**确认，这样在电脑C盘本人用户名目录下就会出现一个文件：`.ssh`\n2.将上面文件中的`id_rsa`使用记事本打开，然后全选复制；\n3.将上面复制的秘钥，黏贴到GitHub中\n![搜狗截图20190226204854]($resource/%E6%90%9C%E7%8B%97%E6%88%AA%E5%9B%BE20190226204854.png)\n![搜狗截图20190226205651]($resource/%E6%90%9C%E7%8B%97%E6%88%AA%E5%9B%BE20190226205651.png)\n\n补充：github上新建仓库：`mimengfenxi`\n使用：\n```git\n#将本地的master分支与GitHub仓库分支进行关联\ngit remote add origin https://github.com/GJXAIOU/mimengfenxi.git #后面为仓库的SSH地址\n\n##这步不需要,这是移除关联\ngit remote remove 名字\ngit remote rm origin https://github.com/GJXAIOU/mimengfenxi.git \n\n#注：origin是自己为远程GitHub仓库取的别名，主要是方便以后书写\n\n#下面的步骤只需要第一次的时候配置以下：\n步骤一：配置上面的公钥和私钥\n步骤二；输入：ssh -T -v git@github.com\n\n#这一步是指从本地直接生成库，而不是克隆的上传使用（一般也没有）\ngit pull --rebase origin master #相当于将GitHub创建仓库时候多创建的README.md拖下来\n\n#从GitHub往本地克隆，最好保证本地仓库是空的；同样本地上传到GitHub上时候最好保证GitHub新建的仓库是空的；\n\n#将本地的master分支上传到GitHub\ngit push -u origin master\n```\n\n### （三）上传同步本地文件（本地目录下文件有修改想同步到GitHub时候）\n1.在刚才的本地目录下，使用Git Bash ,输入：`Git init` 初始化本地git仓库；\n然后在改目录下会出现：`.git`这个文件  （只需要一次，以后不需要）\n\n2.进入修改目录下；输入：`git status` :查看多少文件未提交到仓库中（显示为红色的为未提交的），用于查看工作区和暂存区的状态；\n\n3.将上述所有文件从工作区提交到缓存区：`git add . `\n将特定文件提交大缓冲区：`git add 文件名称.后缀`\n\n4.再使用命令`git status`查看是不是都提交到了缓冲区（显示为绿色的是的）\n\n5.将缓冲区的文件提交到GitHub仓库中：`git commit -m \"想显示文件后面的的描述\"`\n\n6.最后一步：`git push`\n\n\n# 本机使用：已有仓库\n如果 Github 上已经有仓库，而且不是本地传上去的；\n1.首先将 github 上文件 clone 下来，如果和本地文件夹名字一样则修改本地名字，防止覆盖；\n2.将 clone 下来的文件夹里面内容，连同.git 文件一起移动，同时将本地文件夹的名字改成与仓库名字相同；就是保证一点：本地文件只能比 github 端的文件多，不能少；\n3.查看目前的 git 用户：`git remote -v`,可以将目前的一些用户名删掉：`git remote remove 名字`，然后新建用户：`git remote add 名字 库url`, 这里的名字最好使用库名，便于记忆和区分；\n4.添加新文件：`git add .`或者`git add 文件名`\n5.然后 ：`git commit -m \"说明\"`\n6.最后 push：`git push 名字`\n\n\n\n# 使用 GitHub 搭建个人网站\n使用 GitHub 搭建的网站是静态网站，搭建的操作分为两类：\n- 完全基于新的仓库搭建：\n  - 首先创建新的仓库，仓库名为：用户名.github.io\n  - 然后创建 index.html 即可；\n  - 相关的网页显示配置可以在 index.html 中进行配置；\n\n- 基于已有的仓库进行搭建：(现在已经改变，在摸索着)\n  - 首先进入仓库，在右上角选择：setting->Launch automatic gener....\n  - 在 Tagline 中填写项目名称；\n\n\n# 附录：\n\n## 附录一：Git 安装\nTODO：Git 和 GitHub\n\n",[[1565144050617,["GJX@GJXAIOU",[[1,1535,"\n"]],[1534,1534],[1535,1535]]],[1565144058477,["GJX@GJXAIOU",[[-1,1504,"&quot;delete test.txt&quot;"]],[1504,1531],[1504,1504]]],[1565144059523,["GJX@GJXAIOU",[[1,1504,"“"]],[1504,1504],[1505,1505]]],[1565144060621,["GJX@GJXAIOU",[[-1,1504,"“"]],[1505,1505],[1504,1504]]],[1565144071543,["GJX@GJXAIOU",[[1,1504,"\"delete test.txt:"]],[1504,1504],[1521,1521]]],[1565144072677,["GJX@GJXAIOU",[[-1,1520,":"]],[1521,1521],[1520,1520]]],[1565144073416,["GJX@GJXAIOU",[[1,1520,"\""]],[1520,1520],[1521,1521]]],[1565144091412,["GJX@GJXAIOU",[[-1,1409,"~~下面的语句有点问题~~"]],[1409,1422],[1409,1409]]],[1565144092725,["GJX@GJXAIOU",[[-1,1409,"\n"]],[1409,1409],[1408,1408]]],[1565144095899,["GJX@GJXAIOU",[[1,1432," jis"]],[1432,1432],[1436,1436]]],[1565144096644,["GJX@GJXAIOU",[[-1,1433,"jis"]],[1436,1436],[1433,1433]]],[1565144100207,["GJX@GJXAIOU",[[1,1433,"就是删除"]],[1433,1433],[1437,1437]]]],null,"GJX@GJXAIOU"],["57c72523-cfd1-410d-b638-e6ab016d5b53",1565144175191,"---\npin: true\ntags: \n- Git\nstyle: summer\nflag: red\ndate: '2019-7-31'\ncustom: GJXAIOU\nnote: Git&GitHub使用说明,2019-2-11号形成初稿，2019-7-31进行整体迭代，2019-8-6号形成终稿\n---\n\n# Git&GitHub使用说明\n\n@toc\n\n==原则：不要在远程库修改文件，一定要在本地修改然后 push==\n\n## 一、下载安装\n\n1.首先在本地安装git，[软件下载地址](https://git-scm.com/downloads)。\n\n## 2.安装好Git 之后，会有两个 Git 形式：\n- Git Bash   ：这是命令行模式（类似Linux）【推荐】\n- Git GUI      ：这是有界面的模式\n\n3.具体的安装过程详见[附录一：Git安装教程](#附录一：git-安装)\n\n4.Git 整体结构\n![Git结构 2]($resource/Git%E7%BB%93%E6%9E%84%202.png)\n\n5.查看git配置（以下默认命令输入处为：GitBash）\n`git config --list`\n\n\n\n## 二、在本地建立一个仓库\n- 例如在`E`盘下建立一个名为`practice`的仓库\n```git\n  cd e:\n  mkdir practice\n  cd practice\n  ls -la #看现在里面有多少文件\n  git init  #完成初始化，建立了一个空仓库\n```\n\n有两种方式可以建立Git仓库：\n\n*   用Git之前已经有项目代码，则使用以下两条命令建立Git仓库\n```git\n  cd 项目代码所在的文件夹\n  git init\n```\n*   用Git之前还没有项目代码，使用下面三条命令创建git仓库\n```\n  cd 某个文件夹\n  git init your_project #会在当前路径下创建和项目名称同名的文件夹\n  cd your_project\n```\n然后就是在自己的仓库中开始写代码或者更改代码了。\n\n## 三、工作区和版本库区别：\n\n![工作区与版本库的区别]($resource/%E5%B7%A5%E4%BD%9C%E5%8C%BA%E4%B8%8E%E7%89%88%E6%9C%AC%E5%BA%93%E7%9A%84%E5%8C%BA%E5%88%AB.png)\n\n注：示例文件名`test.txt`\n- 当使用`git add `将文件提交到暂存区之后，仍然在本地继续修改；\n  - 使用：`git commit -m 'shuoming' `提交只是提交第一个修改的，后面修改的不提交\n  - 使用：`git commit -m 'shuoming' test.txt`提交的将是后面修改的版本；\n  - 使用：`git diff head -- test.txt`可以显示工作区和分支的区别\n\n\n## 四、撤销修改\n- 工作区修改之后，未提交到暂存区：`git checkout -- test.txt`,撤销工作区的修改；\n- 工作区修改后，已提交到暂存区：`git reset head test.txt`,撤销暂存区的修改，然后再使用上面的命令撤销工作区的修改；\n\n\n## 五、删除文件\n- 删除工作区文件：`rm test.txt` 就是删除\n- 删除暂存区文件：(删除的修改操作，要提交)\n`git rm test.txt`\n`git commit -m \"delete test.txt\"`\n\n\n\n## 六、配置Git\n\n- 下面是使用Git的最小配置\n1.打开Git Bash :切换到下面文件目录下；（或者在文件资源器中进入该目录，然后右键：Git Bash Here）\n配置`user.name`和`user.email` 其中global表示对登录用户的所有仓库有效，是用于区分不同的开发人员身份；\n注：以上信息都保存在.git 文件夹中，存放的是本地库相关的子目录和文件，可以使用：`ll .git/`查看，同时，可以使用`cat .git/config`进行查看配置文件，这里看到所有的用户\n2.输入：`git config --global user.name '随便用户名'`\n3.输入：`git config --global user.email '随便邮箱'`\n```git\n git config --local         local只对仓库有效。此也为缺省条件下的配置\n git config --global        global对登录用户的所有仓库都有效\n git config --system        system对系统的所有用户都有效\n```\n上面三个作用域是由一定的优先级的：local > global > system\n\n\n \n\n## 七、git文件重命名的命令\n\n>前提是需要修改git仓库中已经commit了的文件\n\n- 假如想使文件`readme`，改名为 `readme.cpp`。可以使用下面的三条命令：\n```git\nmv readme readme.cpp\ngit rm readme //注意与linux 的命令rm的区别\ngit add readme.cpp\n```\n最后可以使用git status查看修改后的仓库的状态\n上述是三条命令，还可以使用下面的一条命令达到上述三条命令的效果\n `git mv readme readme.cpp`\n \n- 如果想要撤销刚刚的修改，使用下面的命令：\n`git reset --hard`\n\n\n## 八、 如何使用git log系列命令查看git仓库的版本演变历史\n```\ngit branch -v 看本地有多少版本分支\ngit log --all 查看所有分支的历史\ngit log --all --graph 查看图形化的 log 地址\ngit log --oneline 查看单行的简洁历史。\ngit log --oneline -n4 查看最近的四条简洁历史。\ngit log --oneline --all -n4 --graph 查看所有分支最近 4 条单行的图形化历史。\ngit help --web log 跳转到git log 的帮助文档网页\ngit log --oneline temp 只查看temp的分支的信息且oneline形式\n```\n- 注意：\n  - git log 仅仅是查看当前分支的更改历史\n  - git log --all 查看所有分支的信息\n  - git log --all --graph 上面的查看不容易看各个分支的关系，加上图形化容易看出各个分支的关系\n  - git checkout -b temp +从哪个commit开始新加一个分支(一大串数字,表示某一个commit中的数字 )\n  - git checkout master // 切换到master分支\n\n*   git命令的后面加的参数，有的时候是-，有的时候是- -\n*   单字母的参数是 ‘-’，非单字母的参数是’- -’\n\n\n## 九、版本回退\n\n分别修改几次hello.txt，并分别提交。\n**版本1：**\nhello\n**版本2：**\nhello world\n**版本3：**\nhello world third\n**版本4：**\nhello  world  third last\n以上版本都提交之后，如果想回到第二个版本：\n\n- 方式一：【推荐】\n1.首先输入：`git reflog` 会得到之后所有该文件的提交版本信息，其中最前面黄色字体为提交的版本号；\n注：可以使用`git log`查看该文件每次提交的详细信息（包括：完整的版本号，作者，时间等），也可以使用：`git log --pretty=online`按行显示以上信息；\n其中：Head 含义：HEAD@{移动到当前版本需要多少步}\n2.输入：`git reset --hard 第二次提交版本号` （这里版本号填写 `git reflog`显示的即可，不必填写完整的版本号）即可回退到第二个版本；\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20181028233812515.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NjbnVhY21oZHU=,size_27,color_FFFFFF,t_70)\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20181028234106489.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NjbnVhY21oZHU=,size_27,color_FFFFFF,t_70)\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20181028234356533.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NjbnVhY21oZHU=,size_27,color_FFFFFF,t_70)\n\n- 方式二：只能后退\n`git reset --head HEAD^`其中一个^表示后退一步，n 个表示后退 n 步；\n- 方式三：只能后退\n`git reset --head HEAD~n`,表示后退 n 步\n\n### 补充：reset 参数\n![搜狗截图20190731203134]($resource/%E6%90%9C%E7%8B%97%E6%88%AA%E5%9B%BE20190731203134.png)\n\n- 参数一:`--soft`  ：仅仅在本地库移动 HEAD 指针；\n- 参数二:`--mixed` ：在本地库移动 HEAD 指针，同时重置暂存区；\n- 参数三:`--hard` ：在本地库移动 HEAD 指针，同时重置暂存区和工作区；\n\n\n### 删除文件并找回\n前提：删除前，文件存在时的状态提交到了本地库；\n操作：`git reset --head 指针位置`\n- 删除操作已经提交到了本地库：指针位置指向历史记录\n- 删除操作尚未提交到本地库：指针位置指向 HEAD\n\n### 比较文件的差异\n- 将工作区文件和暂存区进行比较：`git diff 文件名`\n- 将工作区文件和本地库历史记录比较：`git diff 本地库中历史版本 文件名`\n- 以上不带文件名就是比较多个文件；\n\n\n\n\n\n\n\n## GitHub\n\n### 1.创建远程仓库别名\n- 查看当前远程仓库地址别名：`git remote -v`\n- 为远程仓库添加别名：`git remote add 别名 远程仓库地址`\n\n### 2.推送\n`git push 别名 分支名`\n\n\n\n\n\n## 十一、连接到GitHub\n\n### （一）将GitHub上的库克隆到本地\n\n说明：默认文件地址为：E:\\Program\\GitHub\\\n         GitHub上的库为：Notes\n4.将GitHub上已有的仓库下载到本地（这样可以在本地编辑）\n- 进入GitHub中所要同步的库页面，选择：`clone or download`，然后将URL复制下来：本人为：`https://github.com/GJXAIOU/Notes.git`\n![URL]($resource/URL.jpg)\n\n- 在Git Bash 中首先将目录切换到想要保存该库的目录下：然后输入\n`git clone https://github.com/GJXAIOU/Notes.git` (后面的网址就是刚才复制的)\n\n\n### （二）连接本地仓库与GitHub：\n\n1.在本地生成SSH Key :  在Git Bash中输入：`ssh-keygen -t rsa -C \"GitHub邮箱\"`，接下来**全部回车**确认，这样在电脑C盘本人用户名目录下就会出现一个文件：`.ssh`\n2.将上面文件中的`id_rsa`使用记事本打开，然后全选复制；\n3.将上面复制的秘钥，黏贴到GitHub中\n![搜狗截图20190226204854]($resource/%E6%90%9C%E7%8B%97%E6%88%AA%E5%9B%BE20190226204854.png)\n![搜狗截图20190226205651]($resource/%E6%90%9C%E7%8B%97%E6%88%AA%E5%9B%BE20190226205651.png)\n\n补充：github上新建仓库：`mimengfenxi`\n使用：\n```git\n#将本地的master分支与GitHub仓库分支进行关联\ngit remote add origin https://github.com/GJXAIOU/mimengfenxi.git #后面为仓库的SSH地址\n\n##这步不需要,这是移除关联\ngit remote remove 名字\ngit remote rm origin https://github.com/GJXAIOU/mimengfenxi.git \n\n#注：origin是自己为远程GitHub仓库取的别名，主要是方便以后书写\n\n#下面的步骤只需要第一次的时候配置以下：\n步骤一：配置上面的公钥和私钥\n步骤二；输入：ssh -T -v git@github.com\n\n#这一步是指从本地直接生成库，而不是克隆的上传使用（一般也没有）\ngit pull --rebase origin master #相当于将GitHub创建仓库时候多创建的README.md拖下来\n\n#从GitHub往本地克隆，最好保证本地仓库是空的；同样本地上传到GitHub上时候最好保证GitHub新建的仓库是空的；\n\n#将本地的master分支上传到GitHub\ngit push -u origin master\n```\n\n### （三）上传同步本地文件（本地目录下文件有修改想同步到GitHub时候）\n1.在刚才的本地目录下，使用Git Bash ,输入：`Git init` 初始化本地git仓库；\n然后在改目录下会出现：`.git`这个文件  （只需要一次，以后不需要）\n\n2.进入修改目录下；输入：`git status` :查看多少文件未提交到仓库中（显示为红色的为未提交的），用于查看工作区和暂存区的状态；\n\n3.将上述所有文件从工作区提交到缓存区：`git add . `\n将特定文件提交大缓冲区：`git add 文件名称.后缀`\n\n4.再使用命令`git status`查看是不是都提交到了缓冲区（显示为绿色的是的）\n\n5.将缓冲区的文件提交到GitHub仓库中：`git commit -m \"想显示文件后面的的描述\"`\n\n6.最后一步：`git push`\n\n\n# 本机使用：已有仓库\n如果 Github 上已经有仓库，而且不是本地传上去的；\n1.首先将 github 上文件 clone 下来，如果和本地文件夹名字一样则修改本地名字，防止覆盖；\n2.将 clone 下来的文件夹里面内容，连同.git 文件一起移动，同时将本地文件夹的名字改成与仓库名字相同；就是保证一点：本地文件只能比 github 端的文件多，不能少；\n3.查看目前的 git 用户：`git remote -v`,可以将目前的一些用户名删掉：`git remote remove 名字`，然后新建用户：`git remote add 名字 库url`, 这里的名字最好使用库名，便于记忆和区分；\n4.添加新文件：`git add .`或者`git add 文件名`\n5.然后 ：`git commit -m \"说明\"`\n6.最后 push：`git push 名字`\n\n\n\n# 使用 GitHub 搭建个人网站\n使用 GitHub 搭建的网站是静态网站，搭建的操作分为两类：\n- 完全基于新的仓库搭建：\n  - 首先创建新的仓库，仓库名为：用户名.github.io\n  - 然后创建 index.html 即可；\n  - 相关的网页显示配置可以在 index.html 中进行配置；\n\n- 基于已有的仓库进行搭建：(现在已经改变，在摸索着)\n  - 首先进入仓库，在右上角选择：setting->Launch automatic gener....\n  - 在 Tagline 中填写项目名称；\n\n\n# 附录：\n\n## 附录一：Git 安装\nTODO：Git 和 GitHub\n\n",[[1565144118569,["GJX@GJXAIOU",[[1,1437,"本地文件"]],[1437,1437],[1441,1441]]],[1565144124221,["GJX@GJXAIOU",[[1,1521,"\n"]],[1517,1517],[1518,1518]]],[1565144126216,["GJX@GJXAIOU",[[1,1518,"··"]],[1518,1518],[1520,1520]]],[1565144127687,["GJX@GJXAIOU",[[-1,1518,"··"]],[1520,1520],[1518,1518]]],[1565144129168,["GJX@GJXAIOU",[[1,1518,"``"]],[1518,1518],[1520,1520]]],[1565144138855,["GJX@GJXAIOU",[[1,1519,"git push ming"]],[1519,1519],[1532,1532]]],[1565144139910,["GJX@GJXAIOU",[[-1,1528,"ming"]],[1532,1532],[1528,1528]]],[1565144141050,["GJX@GJXAIOU",[[1,1528,"名字"]],[1528,1528],[1530,1530]]],[1565144144991,["GJX@GJXAIOU",[[1,1465,"：zheli"]],[1465,1465],[1471,1471]]],[1565144145999,["GJX@GJXAIOU",[[-1,1466,"zheli"]],[1471,1471],[1466,1466]]],[1565144154847,["GJX@GJXAIOU",[[1,1466,"这里是本地和github"]],[1466,1466],[1478,1478]]],[1565144154886,["GJX@GJXAIOU",[[1,1472," "]],[1478,1478],[1479,1479]]],[1565144156881,["GJX@GJXAIOU",[[1,1479,"都删除"]],[1479,1479],[1482,1482]]],[1565144156919,["GJX@GJXAIOU",[[1,1479," "]],[1482,1482],[1483,1483]]],[1565144159517,["GJX@GJXAIOU",[[1,1553,"\n"]],[1550,1550],[1551,1551]]],[1565144162103,["GJX@GJXAIOU",[[1,1551,"- shnchu"]],[1551,1551],[1559,1559]]],[1565144163117,["GJX@GJXAIOU",[[-1,1553,"shnchu"]],[1559,1559],[1553,1553]]],[1565144170847,["GJX@GJXAIOU",[[1,1553,"删除缓冲区和g"]],[1553,1553],[1560,1560]]],[1565144170886,["GJX@GJXAIOU",[[1,1559," "]],[1560,1560],[1561,1561]]],[1565144172655,["GJX@GJXAIOU",[[1,1561,"ithubu"]],[1561,1561],[1567,1567]]],[1565144173670,["GJX@GJXAIOU",[[-1,1565,"bu"]],[1567,1567],[1565,1565]]],[1565144178545,["GJX@GJXAIOU",[[1,1565,"b文件"]],[1565,1565],[1568,1568]]],[1565144178583,["GJX@GJXAIOU",[[1,1566," "]],[1568,1568],[1569,1569]]],[1565144183200,["GJX@GJXAIOU",[[1,1569,"，本地不删除"]],[1569,1569],[1575,1575]]],[1565144183549,["GJX@GJXAIOU",[[1,1576,"- \n"]],[1575,1575],[1578,1578]]],[1565144184677,["GJX@GJXAIOU",[[-1,1576,"- "]],[1578,1578],[1576,1576]]],[1565144186216,["GJX@GJXAIOU",[[1,1576,"··"]],[1576,1576],[1578,1578]]],[1565144187677,["GJX@GJXAIOU",[[-1,1577,"·"]],[1578,1578],[1577,1577]]],[1565144189193,["GJX@GJXAIOU",[[1,1577,"··"]],[1577,1577],[1579,1579]]],[1565144190196,["GJX@GJXAIOU",[[-1,1576,"···"]],[1579,1579],[1576,1576]]],[1565144191087,["GJX@GJXAIOU",[[1,1576,"``"]],[1576,1576],[1578,1578]]],[1565144201737,["GJX@GJXAIOU",[[1,1577,"git rm -r --a"]],[1577,1577],[1590,1590]]],[1565144202428,["GJX@GJXAIOU",[[-1,1589,"a"]],[1590,1590],[1589,1589]]],[1565144216578,["GJX@GJXAIOU",[[1,1589,"cached 文件名或者文件夹名"]],[1589,1589],[1605,1605]]],[1565144223751,["GJX@GJXAIOU",[[1,1606,"  --caca"]],[1606,1606],[1614,1614]]],[1565144225189,["GJX@GJXAIOU",[[-1,1613,"a"]],[1614,1614],[1613,1613]]],[1565144230450,["GJX@GJXAIOU",[[1,1613,"hed不会"]],[1613,1613],[1618,1618]]],[1565144230490,["GJX@GJXAIOU",[[1,1616," "]],[1618,1618],[1619,1619]]],[1565144231099,["GJX@GJXAIOU",[[1,1619,"讲"]],[1619,1619],[1620,1620]]],[1565144231846,["GJX@GJXAIOU",[[-1,1619,"讲"]],[1620,1620],[1619,1619]]],[1565144232970,["GJX@GJXAIOU",[[1,1619,"讲"]],[1619,1619],[1620,1620]]],[1565144233440,["GJX@GJXAIOU",[[-1,1619,"讲"]],[1620,1620],[1619,1619]]],[1565144237976,["GJX@GJXAIOU",[[1,1619,"将本地文件删除"]],[1619,1619],[1626,1626]]],[1565144238309,["GJX@GJXAIOU",[[1,1629,"\n"]],[1626,1626],[1627,1627]]],[1565144240224,["GJX@GJXAIOU",[[1,1627,"··"]],[1627,1627],[1629,1629]]],[1565144241181,["GJX@GJXAIOU",[[-1,1627,"··"]],[1629,1629],[1627,1627]]],[1565144242215,["GJX@GJXAIOU",[[1,1627,"``"]],[1627,1627],[1629,1629]]],[1565144250136,["GJX@GJXAIOU",[[1,1628,"git commit -m \"\""]],[1628,1628],[1644,1644]]],[1565144253096,["GJX@GJXAIOU",[[1,1643,"XXXXX"]],[1643,1643],[1648,1648]]],[1565144254455,["GJX@GJXAIOU",[[1,1653,"\n"]],[1650,1650],[1651,1651]]],[1565144255450,["GJX@GJXAIOU",[[1,1651,"git "]],[1651,1651],[1655,1655]]],[1565144256735,["GJX@GJXAIOU",[[-1,1651,"git "]],[1655,1655],[1651,1651]]],[1565144258017,["GJX@GJXAIOU",[[1,1651,"··"]],[1651,1651],[1653,1653]]],[1565144260870,["GJX@GJXAIOU",[[-1,1651,"··"]],[1653,1653],[1651,1651]]],[1565144262070,["GJX@GJXAIOU",[[1,1651,"``"]],[1651,1651],[1653,1653]]],[1565144267954,["GJX@GJXAIOU",[[1,1652,"git push 名字"]],[1652,1652],[1663,1663]]]],null,"GJX@GJXAIOU"],["3d2aa44f-5a5d-47ae-998b-f39b80738e5f",1565352634348,"---\npin: true\ntags: \n- Git\nstyle: summer\nflag: red\ndate: '2019-7-31'\ncustom: GJXAIOU\nnote: Git&GitHub使用说明,2019-2-11号形成初稿，2019-7-31进行整体迭代，2019-8-6号形成终稿\n---\n\n# Git&GitHub使用说明\n\n@toc\n\n==原则：不要在远程库修改文件，一定要在本地修改然后 push==\n\n## 一、下载安装\n\n1.首先在本地安装git，[软件下载地址](https://git-scm.com/downloads)。\n\n## 2.安装好Git 之后，会有两个 Git 形式：\n- Git Bash   ：这是命令行模式（类似Linux）【推荐】\n- Git GUI      ：这是有界面的模式\n\n3.具体的安装过程详见[附录一：Git安装教程](#附录一：git-安装)\n\n4.Git 整体结构\n![Git结构 2]($resource/Git%E7%BB%93%E6%9E%84%202.png)\n\n5.查看git配置（以下默认命令输入处为：GitBash）\n`git config --list`\n\n\n\n## 二、在本地建立一个仓库\n- 例如在`E`盘下建立一个名为`practice`的仓库\n```git\n  cd e:\n  mkdir practice\n  cd practice\n  ls -la #看现在里面有多少文件\n  git init  #完成初始化，建立了一个空仓库\n```\n\n有两种方式可以建立Git仓库：\n\n*   用Git之前已经有项目代码，则使用以下两条命令建立Git仓库\n```git\n  cd 项目代码所在的文件夹\n  git init\n```\n*   用Git之前还没有项目代码，使用下面三条命令创建git仓库\n```\n  cd 某个文件夹\n  git init your_project #会在当前路径下创建和项目名称同名的文件夹\n  cd your_project\n```\n然后就是在自己的仓库中开始写代码或者更改代码了。\n\n## 三、工作区和版本库区别：\n\n![工作区与版本库的区别]($resource/%E5%B7%A5%E4%BD%9C%E5%8C%BA%E4%B8%8E%E7%89%88%E6%9C%AC%E5%BA%93%E7%9A%84%E5%8C%BA%E5%88%AB.png)\n\n注：示例文件名`test.txt`\n- 当使用`git add `将文件提交到暂存区之后，仍然在本地继续修改；\n  - 使用：`git commit -m 'shuoming' `提交只是提交第一个修改的，后面修改的不提交\n  - 使用：`git commit -m 'shuoming' test.txt`提交的将是后面修改的版本；\n  - 使用：`git diff head -- test.txt`可以显示工作区和分支的区别\n\n\n## 四、撤销修改\n- 工作区修改之后，未提交到暂存区：`git checkout -- test.txt`,撤销工作区的修改；\n- 工作区修改后，已提交到暂存区：`git reset head test.txt`,撤销暂存区的修改，然后再使用上面的命令撤销工作区的修改；\n\n\n## 五、删除文件\n- 删除工作区文件：`rm test.txt` 就是删除本地文件\n- 删除暂存区文件：(删除的修改操作，要提交)：这里是本地和 github 都删除\n`git rm test.txt`\n`git commit -m \"delete test.txt\"`\n`git push 名字`\n\n- 删除缓冲区和 github 文件，本地不删除\n`git rm -r --cached 文件名或者文件夹名`  --cached 不会将本地文件删除\n`git commit -m \"XXXXX\"`\n`git push 名字`\n\n\n## 六、配置Git\n\n- 下面是使用Git的最小配置\n1.打开Git Bash :切换到下面文件目录下；（或者在文件资源器中进入该目录，然后右键：Git Bash Here）\n配置`user.name`和`user.email` 其中global表示对登录用户的所有仓库有效，是用于区分不同的开发人员身份；\n注：以上信息都保存在.git 文件夹中，存放的是本地库相关的子目录和文件，可以使用：`ll .git/`查看，同时，可以使用`cat .git/config`进行查看配置文件，这里看到所有的用户\n2.输入：`git config --global user.name '随便用户名'`\n3.输入：`git config --global user.email '随便邮箱'`\n```git\n git config --local         local只对仓库有效。此也为缺省条件下的配置\n git config --global        global对登录用户的所有仓库都有效\n git config --system        system对系统的所有用户都有效\n```\n上面三个作用域是由一定的优先级的：local > global > system\n\n\n \n\n## 七、git文件重命名的命令\n\n>前提是需要修改git仓库中已经commit了的文件\n\n- 假如想使文件`readme`，改名为 `readme.cpp`。可以使用下面的三条命令：\n```git\nmv readme readme.cpp\ngit rm readme //注意与linux 的命令rm的区别\ngit add readme.cpp\n```\n最后可以使用git status查看修改后的仓库的状态\n上述是三条命令，还可以使用下面的一条命令达到上述三条命令的效果\n `git mv readme readme.cpp`\n \n- 如果想要撤销刚刚的修改，使用下面的命令：\n`git reset --hard`\n\n\n## 八、 如何使用git log系列命令查看git仓库的版本演变历史\n```\ngit branch -v 看本地有多少版本分支\ngit log --all 查看所有分支的历史\ngit log --all --graph 查看图形化的 log 地址\ngit log --oneline 查看单行的简洁历史。\ngit log --oneline -n4 查看最近的四条简洁历史。\ngit log --oneline --all -n4 --graph 查看所有分支最近 4 条单行的图形化历史。\ngit help --web log 跳转到git log 的帮助文档网页\ngit log --oneline temp 只查看temp的分支的信息且oneline形式\n```\n- 注意：\n  - git log 仅仅是查看当前分支的更改历史\n  - git log --all 查看所有分支的信息\n  - git log --all --graph 上面的查看不容易看各个分支的关系，加上图形化容易看出各个分支的关系\n  - git checkout -b temp +从哪个commit开始新加一个分支(一大串数字,表示某一个commit中的数字 )\n  - git checkout master // 切换到master分支\n\n*   git命令的后面加的参数，有的时候是-，有的时候是- -\n*   单字母的参数是 ‘-’，非单字母的参数是’- -’\n\n\n## 九、版本回退\n\n分别修改几次hello.txt，并分别提交。\n**版本1：**\nhello\n**版本2：**\nhello world\n**版本3：**\nhello world third\n**版本4：**\nhello  world  third last\n以上版本都提交之后，如果想回到第二个版本：\n\n- 方式一：【推荐】\n1.首先输入：`git reflog` 会得到之后所有该文件的提交版本信息，其中最前面黄色字体为提交的版本号；\n注：可以使用`git log`查看该文件每次提交的详细信息（包括：完整的版本号，作者，时间等），也可以使用：`git log --pretty=online`按行显示以上信息；\n其中：Head 含义：HEAD@{移动到当前版本需要多少步}\n2.输入：`git reset --hard 第二次提交版本号` （这里版本号填写 `git reflog`显示的即可，不必填写完整的版本号）即可回退到第二个版本；\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20181028233812515.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NjbnVhY21oZHU=,size_27,color_FFFFFF,t_70)\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20181028234106489.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NjbnVhY21oZHU=,size_27,color_FFFFFF,t_70)\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20181028234356533.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NjbnVhY21oZHU=,size_27,color_FFFFFF,t_70)\n\n- 方式二：只能后退\n`git reset --head HEAD^`其中一个^表示后退一步，n 个表示后退 n 步；\n- 方式三：只能后退\n`git reset --head HEAD~n`,表示后退 n 步\n\n### 补充：reset 参数\n![搜狗截图20190731203134]($resource/%E6%90%9C%E7%8B%97%E6%88%AA%E5%9B%BE20190731203134.png)\n\n- 参数一:`--soft`  ：仅仅在本地库移动 HEAD 指针；\n- 参数二:`--mixed` ：在本地库移动 HEAD 指针，同时重置暂存区；\n- 参数三:`--hard` ：在本地库移动 HEAD 指针，同时重置暂存区和工作区；\n\n\n### 删除文件并找回\n前提：删除前，文件存在时的状态提交到了本地库；\n操作：`git reset --head 指针位置`\n- 删除操作已经提交到了本地库：指针位置指向历史记录\n- 删除操作尚未提交到本地库：指针位置指向 HEAD\n\n### 比较文件的差异\n- 将工作区文件和暂存区进行比较：`git diff 文件名`\n- 将工作区文件和本地库历史记录比较：`git diff 本地库中历史版本 文件名`\n- 以上不带文件名就是比较多个文件；\n\n\n\n\n\n\n\n## GitHub\n\n### 1.创建远程仓库别名\n- 查看当前远程仓库地址别名：`git remote -v`\n- 为远程仓库添加别名：`git remote add 别名 远程仓库地址`\n\n### 2.推送\n`git push 别名 分支名`\n\n\n\n\n\n## 十一、连接到GitHub\n\n### （一）将GitHub上的库克隆到本地\n\n说明：默认文件地址为：E:\\Program\\GitHub\\\n         GitHub上的库为：Notes\n4.将GitHub上已有的仓库下载到本地（这样可以在本地编辑）\n- 进入GitHub中所要同步的库页面，选择：`clone or download`，然后将URL复制下来：本人为：`https://github.com/GJXAIOU/Notes.git`\n![URL]($resource/URL.jpg)\n\n- 在Git Bash 中首先将目录切换到想要保存该库的目录下：然后输入\n`git clone https://github.com/GJXAIOU/Notes.git` (后面的网址就是刚才复制的)\n\n\n### （二）连接本地仓库与GitHub：\n\n1.在本地生成SSH Key :  在Git Bash中输入：`ssh-keygen -t rsa -C \"GitHub邮箱\"`，接下来**全部回车**确认，这样在电脑C盘本人用户名目录下就会出现一个文件：`.ssh`\n2.将上面文件中的`id_rsa`使用记事本打开，然后全选复制；\n3.将上面复制的秘钥，黏贴到GitHub中\n![搜狗截图20190226204854]($resource/%E6%90%9C%E7%8B%97%E6%88%AA%E5%9B%BE20190226204854.png)\n![搜狗截图20190226205651]($resource/%E6%90%9C%E7%8B%97%E6%88%AA%E5%9B%BE20190226205651.png)\n\n补充：github上新建仓库：`mimengfenxi`\n使用：\n```git\n#将本地的master分支与GitHub仓库分支进行关联\ngit remote add origin https://github.com/GJXAIOU/mimengfenxi.git #后面为仓库的SSH地址\n\n##这步不需要,这是移除关联\ngit remote remove 名字\ngit remote rm origin https://github.com/GJXAIOU/mimengfenxi.git \n\n#注：origin是自己为远程GitHub仓库取的别名，主要是方便以后书写\n\n#下面的步骤只需要第一次的时候配置以下：\n步骤一：配置上面的公钥和私钥\n步骤二；输入：ssh -T -v git@github.com\n\n#这一步是指从本地直接生成库，而不是克隆的上传使用（一般也没有）\ngit pull --rebase origin master #相当于将GitHub创建仓库时候多创建的README.md拖下来\n\n#从GitHub往本地克隆，最好保证本地仓库是空的；同样本地上传到GitHub上时候最好保证GitHub新建的仓库是空的；\n\n#将本地的master分支上传到GitHub\ngit push -u origin master\n```\n\n### （三）上传同步本地文件（本地目录下文件有修改想同步到GitHub时候）\n1.在刚才的本地目录下，使用Git Bash ,输入：`Git init` 初始化本地git仓库；\n然后在改目录下会出现：`.git`这个文件  （只需要一次，以后不需要）\n\n2.进入修改目录下；输入：`git status` :查看多少文件未提交到仓库中（显示为红色的为未提交的），用于查看工作区和暂存区的状态；\n\n3.将上述所有文件从工作区提交到缓存区：`git add . `\n将特定文件提交大缓冲区：`git add 文件名称.后缀`\n\n4.再使用命令`git status`查看是不是都提交到了缓冲区（显示为绿色的是的）\n\n5.将缓冲区的文件提交到GitHub仓库中：`git commit -m \"想显示文件后面的的描述\"`\n\n6.最后一步：`git push`\n\n\n# 本机使用：已有仓库\n如果 Github 上已经有仓库，而且不是本地传上去的；\n1.首先将 github 上文件 clone 下来，如果和本地文件夹名字一样则修改本地名字，防止覆盖；\n2.将 clone 下来的文件夹里面内容，连同.git 文件一起移动，同时将本地文件夹的名字改成与仓库名字相同；就是保证一点：本地文件只能比 github 端的文件多，不能少；\n3.查看目前的 git 用户：`git remote -v`,可以将目前的一些用户名删掉：`git remote remove 名字`，然后新建用户：`git remote add 名字 库url`, 这里的名字最好使用库名，便于记忆和区分；\n4.添加新文件：`git add .`或者`git add 文件名`\n5.然后 ：`git commit -m \"说明\"`\n6.最后 push：`git push 名字`\n\n\n\n# 使用 GitHub 搭建个人网站\n使用 GitHub 搭建的网站是静态网站，搭建的操作分为两类：\n- 完全基于新的仓库搭建：\n  - 首先创建新的仓库，仓库名为：用户名.github.io\n  - 然后创建 index.html 即可；\n  - 相关的网页显示配置可以在 index.html 中进行配置；\n\n- 基于已有的仓库进行搭建：(现在已经改变，在摸索着)\n  - 首先进入仓库，在右上角选择：setting->Launch automatic gener....\n  - 在 Tagline 中填写项目名称；\n\n\n# 附录：\n\n## 附录一：Git 安装\nTODO：Git 和 GitHub\n\n",[[1565352591558,["GJX@GJXAIOU",[[1,7265,"\n"]],[7264,7264],[7265,7265]]],[1565352591708,["GJX@GJXAIOU",[[1,7266,"\n"]],[7265,7265],[7266,7266]]],[1565352598722,["GJX@GJXAIOU",[[1,7266,"![github开源协议区分]($resource/github%E5%BC%80%E6%BA%90%E5%8D%8F%E8%AE%AE%E5%8C%BA%E5%88%86.png)\n"]],[7266,7266],[7358,7358]]]],null,"GJX@GJXAIOU"],["87acc42d-aea0-4b78-b296-95e60095f336",1565677737281,"---\npin: true\ntags: \n- Git\nstyle: summer\nflag: red\ndate: '2019-7-31'\ncustom: GJXAIOU\nnote: Git&GitHub使用说明,2019-2-11号形成初稿，2019-7-31进行整体迭代，2019-8-6号形成终稿\n---\n\n# Git&GitHub使用说明\n\n@toc\n\n==原则：不要在远程库修改文件，一定要在本地修改然后 push==\n\n## 一、下载安装\n\n1.首先在本地安装git，[软件下载地址](https://git-scm.com/downloads)。\n\n## 2.安装好Git 之后，会有两个 Git 形式：\n- Git Bash   ：这是命令行模式（类似Linux）【推荐】\n- Git GUI      ：这是有界面的模式\n\n3.具体的安装过程详见[附录一：Git安装教程](#附录一：git-安装)\n\n4.Git 整体结构\n![Git结构 2]($resource/Git%E7%BB%93%E6%9E%84%202.png)\n\n5.查看git配置（以下默认命令输入处为：GitBash）\n`git config --list`\n\n\n\n## 二、在本地建立一个仓库\n- 例如在`E`盘下建立一个名为`practice`的仓库\n```git\n  cd e:\n  mkdir practice\n  cd practice\n  ls -la #看现在里面有多少文件\n  git init  #完成初始化，建立了一个空仓库\n```\n\n有两种方式可以建立Git仓库：\n\n*   用Git之前已经有项目代码，则使用以下两条命令建立Git仓库\n```git\n  cd 项目代码所在的文件夹\n  git init\n```\n*   用Git之前还没有项目代码，使用下面三条命令创建git仓库\n```\n  cd 某个文件夹\n  git init your_project #会在当前路径下创建和项目名称同名的文件夹\n  cd your_project\n```\n然后就是在自己的仓库中开始写代码或者更改代码了。\n\n## 三、工作区和版本库区别：\n\n![工作区与版本库的区别]($resource/%E5%B7%A5%E4%BD%9C%E5%8C%BA%E4%B8%8E%E7%89%88%E6%9C%AC%E5%BA%93%E7%9A%84%E5%8C%BA%E5%88%AB.png)\n\n注：示例文件名`test.txt`\n- 当使用`git add `将文件提交到暂存区之后，仍然在本地继续修改；\n  - 使用：`git commit -m 'shuoming' `提交只是提交第一个修改的，后面修改的不提交\n  - 使用：`git commit -m 'shuoming' test.txt`提交的将是后面修改的版本；\n  - 使用：`git diff head -- test.txt`可以显示工作区和分支的区别\n\n\n## 四、撤销修改\n- 工作区修改之后，未提交到暂存区：`git checkout -- test.txt`,撤销工作区的修改；\n- 工作区修改后，已提交到暂存区：`git reset head test.txt`,撤销暂存区的修改，然后再使用上面的命令撤销工作区的修改；\n\n\n## 五、删除文件\n- 删除工作区文件：`rm test.txt` 就是删除本地文件\n- 删除暂存区文件：(删除的修改操作，要提交)：这里是本地和 github 都删除\n`git rm test.txt`\n`git commit -m \"delete test.txt\"`\n`git push 名字`\n\n- 删除缓冲区和 github 文件，本地不删除\n`git rm -r --cached 文件名或者文件夹名`  --cached 不会将本地文件删除\n`git commit -m \"XXXXX\"`\n`git push 名字`\n\n\n## 六、配置Git\n\n- 下面是使用Git的最小配置\n1.打开Git Bash :切换到下面文件目录下；（或者在文件资源器中进入该目录，然后右键：Git Bash Here）\n配置`user.name`和`user.email` 其中global表示对登录用户的所有仓库有效，是用于区分不同的开发人员身份；\n注：以上信息都保存在.git 文件夹中，存放的是本地库相关的子目录和文件，可以使用：`ll .git/`查看，同时，可以使用`cat .git/config`进行查看配置文件，这里看到所有的用户\n2.输入：`git config --global user.name '随便用户名'`\n3.输入：`git config --global user.email '随便邮箱'`\n```git\n git config --local         local只对仓库有效。此也为缺省条件下的配置\n git config --global        global对登录用户的所有仓库都有效\n git config --system        system对系统的所有用户都有效\n```\n上面三个作用域是由一定的优先级的：local > global > system\n\n\n \n\n## 七、git文件重命名的命令\n\n>前提是需要修改git仓库中已经commit了的文件\n\n- 假如想使文件`readme`，改名为 `readme.cpp`。可以使用下面的三条命令：\n```git\nmv readme readme.cpp\ngit rm readme //注意与linux 的命令rm的区别\ngit add readme.cpp\n```\n最后可以使用git status查看修改后的仓库的状态\n上述是三条命令，还可以使用下面的一条命令达到上述三条命令的效果\n `git mv readme readme.cpp`\n \n- 如果想要撤销刚刚的修改，使用下面的命令：\n`git reset --hard`\n\n\n## 八、 如何使用git log系列命令查看git仓库的版本演变历史\n```\ngit branch -v 看本地有多少版本分支\ngit log --all 查看所有分支的历史\ngit log --all --graph 查看图形化的 log 地址\ngit log --oneline 查看单行的简洁历史。\ngit log --oneline -n4 查看最近的四条简洁历史。\ngit log --oneline --all -n4 --graph 查看所有分支最近 4 条单行的图形化历史。\ngit help --web log 跳转到git log 的帮助文档网页\ngit log --oneline temp 只查看temp的分支的信息且oneline形式\n```\n- 注意：\n  - git log 仅仅是查看当前分支的更改历史\n  - git log --all 查看所有分支的信息\n  - git log --all --graph 上面的查看不容易看各个分支的关系，加上图形化容易看出各个分支的关系\n  - git checkout -b temp +从哪个commit开始新加一个分支(一大串数字,表示某一个commit中的数字 )\n  - git checkout master // 切换到master分支\n\n*   git命令的后面加的参数，有的时候是-，有的时候是- -\n*   单字母的参数是 ‘-’，非单字母的参数是’- -’\n\n\n## 九、版本回退\n\n分别修改几次hello.txt，并分别提交。\n**版本1：**\nhello\n**版本2：**\nhello world\n**版本3：**\nhello world third\n**版本4：**\nhello  world  third last\n以上版本都提交之后，如果想回到第二个版本：\n\n- 方式一：【推荐】\n1.首先输入：`git reflog` 会得到之后所有该文件的提交版本信息，其中最前面黄色字体为提交的版本号；\n注：可以使用`git log`查看该文件每次提交的详细信息（包括：完整的版本号，作者，时间等），也可以使用：`git log --pretty=online`按行显示以上信息；\n其中：Head 含义：HEAD@{移动到当前版本需要多少步}\n2.输入：`git reset --hard 第二次提交版本号` （这里版本号填写 `git reflog`显示的即可，不必填写完整的版本号）即可回退到第二个版本；\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20181028233812515.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NjbnVhY21oZHU=,size_27,color_FFFFFF,t_70)\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20181028234106489.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NjbnVhY21oZHU=,size_27,color_FFFFFF,t_70)\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20181028234356533.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NjbnVhY21oZHU=,size_27,color_FFFFFF,t_70)\n\n- 方式二：只能后退\n`git reset --head HEAD^`其中一个^表示后退一步，n 个表示后退 n 步；\n- 方式三：只能后退\n`git reset --head HEAD~n`,表示后退 n 步\n\n### 补充：reset 参数\n![搜狗截图20190731203134]($resource/%E6%90%9C%E7%8B%97%E6%88%AA%E5%9B%BE20190731203134.png)\n\n- 参数一:`--soft`  ：仅仅在本地库移动 HEAD 指针；\n- 参数二:`--mixed` ：在本地库移动 HEAD 指针，同时重置暂存区；\n- 参数三:`--hard` ：在本地库移动 HEAD 指针，同时重置暂存区和工作区；\n\n\n### 删除文件并找回\n前提：删除前，文件存在时的状态提交到了本地库；\n操作：`git reset --head 指针位置`\n- 删除操作已经提交到了本地库：指针位置指向历史记录\n- 删除操作尚未提交到本地库：指针位置指向 HEAD\n\n### 比较文件的差异\n- 将工作区文件和暂存区进行比较：`git diff 文件名`\n- 将工作区文件和本地库历史记录比较：`git diff 本地库中历史版本 文件名`\n- 以上不带文件名就是比较多个文件；\n\n\n\n\n\n\n\n## GitHub\n\n### 1.创建远程仓库别名\n- 查看当前远程仓库地址别名：`git remote -v`\n- 为远程仓库添加别名：`git remote add 别名 远程仓库地址`\n\n### 2.推送\n`git push 别名 分支名`\n\n\n\n\n\n## 十一、连接到GitHub\n\n### （一）将GitHub上的库克隆到本地\n\n说明：默认文件地址为：E:\\Program\\GitHub\\\n         GitHub上的库为：Notes\n4.将GitHub上已有的仓库下载到本地（这样可以在本地编辑）\n- 进入GitHub中所要同步的库页面，选择：`clone or download`，然后将URL复制下来：本人为：`https://github.com/GJXAIOU/Notes.git`\n![URL]($resource/URL.jpg)\n\n- 在Git Bash 中首先将目录切换到想要保存该库的目录下：然后输入\n`git clone https://github.com/GJXAIOU/Notes.git` (后面的网址就是刚才复制的)\n\n\n### （二）连接本地仓库与GitHub：\n\n1.在本地生成SSH Key :  在Git Bash中输入：`ssh-keygen -t rsa -C \"GitHub邮箱\"`，接下来**全部回车**确认，这样在电脑C盘本人用户名目录下就会出现一个文件：`.ssh`\n2.将上面文件中的`id_rsa`使用记事本打开，然后全选复制；\n3.将上面复制的秘钥，黏贴到GitHub中\n![搜狗截图20190226204854]($resource/%E6%90%9C%E7%8B%97%E6%88%AA%E5%9B%BE20190226204854.png)\n![搜狗截图20190226205651]($resource/%E6%90%9C%E7%8B%97%E6%88%AA%E5%9B%BE20190226205651.png)\n\n补充：github上新建仓库：`mimengfenxi`\n使用：\n```git\n#将本地的master分支与GitHub仓库分支进行关联\ngit remote add origin https://github.com/GJXAIOU/mimengfenxi.git #后面为仓库的SSH地址\n\n##这步不需要,这是移除关联\ngit remote remove 名字\ngit remote rm origin https://github.com/GJXAIOU/mimengfenxi.git \n\n#注：origin是自己为远程GitHub仓库取的别名，主要是方便以后书写\n\n#下面的步骤只需要第一次的时候配置以下：\n步骤一：配置上面的公钥和私钥\n步骤二；输入：ssh -T -v git@github.com\n\n#这一步是指从本地直接生成库，而不是克隆的上传使用（一般也没有）\ngit pull --rebase origin master #相当于将GitHub创建仓库时候多创建的README.md拖下来\n\n#从GitHub往本地克隆，最好保证本地仓库是空的；同样本地上传到GitHub上时候最好保证GitHub新建的仓库是空的；\n\n#将本地的master分支上传到GitHub\ngit push -u origin master\n```\n\n### （三）上传同步本地文件（本地目录下文件有修改想同步到GitHub时候）\n1.在刚才的本地目录下，使用Git Bash ,输入：`Git init` 初始化本地git仓库；\n然后在改目录下会出现：`.git`这个文件  （只需要一次，以后不需要）\n\n2.进入修改目录下；输入：`git status` :查看多少文件未提交到仓库中（显示为红色的为未提交的），用于查看工作区和暂存区的状态；\n\n3.将上述所有文件从工作区提交到缓存区：`git add . `\n将特定文件提交大缓冲区：`git add 文件名称.后缀`\n\n4.再使用命令`git status`查看是不是都提交到了缓冲区（显示为绿色的是的）\n\n5.将缓冲区的文件提交到GitHub仓库中：`git commit -m \"想显示文件后面的的描述\"`\n\n6.最后一步：`git push`\n\n\n# 本机使用：已有仓库\n如果 Github 上已经有仓库，而且不是本地传上去的；\n1.首先将 github 上文件 clone 下来，如果和本地文件夹名字一样则修改本地名字，防止覆盖；\n2.将 clone 下来的文件夹里面内容，连同.git 文件一起移动，同时将本地文件夹的名字改成与仓库名字相同；就是保证一点：本地文件只能比 github 端的文件多，不能少；\n3.查看目前的 git 用户：`git remote -v`,可以将目前的一些用户名删掉：`git remote remove 名字`，然后新建用户：`git remote add 名字 库url`, 这里的名字最好使用库名，便于记忆和区分；\n4.添加新文件：`git add .`或者`git add 文件名`\n5.然后 ：`git commit -m \"说明\"`\n6.最后 push：`git push 名字`\n\n\n\n# 使用 GitHub 搭建个人网站\n使用 GitHub 搭建的网站是静态网站，搭建的操作分为两类：\n- 完全基于新的仓库搭建：\n  - 首先创建新的仓库，仓库名为：用户名.github.io\n  - 然后创建 index.html 即可；\n  - 相关的网页显示配置可以在 index.html 中进行配置；\n\n- 基于已有的仓库进行搭建：(现在已经改变，在摸索着)\n  - 首先进入仓库，在右上角选择：setting->Launch automatic gener....\n  - 在 Tagline 中填写项目名称；\n\n\n# 附录：\n\n## 附录一：Git 安装\nTODO：Git 和 GitHub\n\n\n![github开源协议区分]($resource/github%E5%BC%80%E6%BA%90%E5%8D%8F%E8%AE%AE%E5%8C%BA%E5%88%86.png)\n\n",[[1565677687472,["GJX@GJXAIOU",[[-1,4774,"### 1.创建远程仓库别名\n- 查看当前远程仓库地址别名：`git remote -v`\n- 为远程仓库添加别名：`git remote add 别名 远程仓库地址`\n\n### 2.推送\n`git push 别名 分支名`"]],[4774,4886],[4774,4774]]],[1565677700753,["GJX@GJXAIOU",[[1,5530,"\n"]],[5529,5529],[5530,5530]]],[1565677700913,["GJX@GJXAIOU",[[1,5531,"\n"]],[5530,5530],[5531,5531]]],[1565677702032,["GJX@GJXAIOU",[[1,5531,"### 1.创建远程仓库别名\n- 查看当前远程仓库地址别名：`git remote -v`\n- 为远程仓库添加别名：`git remote add 别名 远程仓库地址`\n\n### 2.推送\n`git push 别名 分支名`"]],[5531,5531],[5643,5643]]],[1565677704930,["GJX@GJXAIOU",[[1,5644,"\n"]],[5643,5643],[5644,5644]]],[1565677709816,["GJX@GJXAIOU",[[-1,4779,"\n"]],[4778,4778],[4777,4777]]],[1565677709945,["GJX@GJXAIOU",[[-1,4778,"\n"]],[4777,4777],[4776,4776]]],[1565677710105,["GJX@GJXAIOU",[[-1,4777,"\n"]],[4776,4776],[4775,4775]]],[1565677710235,["GJX@GJXAIOU",[[-1,4776,"\n"]],[4775,4775],[4774,4774]]],[1565677710338,["GJX@GJXAIOU",[[-1,4775,"\n"]],[4774,4774],[4773,4773]]],[1565677710488,["GJX@GJXAIOU",[[-1,4774,"\n"]],[4773,4773],[4772,4772]]],[1565677711826,["GJX@GJXAIOU",[[-1,4763,"## GitHub"]],[4772,4772],[4763,4763]]],[1565677711977,["GJX@GJXAIOU",[[-1,4764,"\n"]],[4763,4763],[4762,4762]]],[1565677712160,["GJX@GJXAIOU",[[-1,4763,"\n"]],[4762,4762],[4761,4761]]],[1565677712401,["GJX@GJXAIOU",[[-1,4762,"\n"]],[4761,4761],[4760,4760]]],[1565677712625,["GJX@GJXAIOU",[[-1,4761,"\n"]],[4760,4760],[4759,4759]]],[1565677726271,["GJX@GJXAIOU",[[1,4807,"b"]],[4807,4807],[4808,4808]]],[1565677726615,["GJX@GJXAIOU",[[1,4807," "],[1,4808," ern"]],[4808,4808],[4812,4812]]],[1565677728025,["GJX@GJXAIOU",[[-1,4808,"bern "]],[4812,4812],[4807,4807]]],[1565677729653,["GJX@GJXAIOU",[[1,4807,"本地"]],[4807,4807],[4809,4809]]],[1565677739338,["GJX@GJXAIOU",[[1,4861,"         \n"]],[4860,4860],[4870,4870]]],[1565677739564,["GJX@GJXAIOU",[[-1,4861,"         "],[1,4870,"\n"]],[4870,4870],[4862,4862]]],[1565677745878,["GJX@GJXAIOU",[[1,4862,"步骤："]],[4862,4862],[4865,4865]]],[1565677748441,["GJX@GJXAIOU",[[-1,4866,"4"]],[4867,4867],[4866,4866]]],[1565677748723,["GJX@GJXAIOU",[[1,4866,"1"]],[4866,4866],[4867,4867]]],[1565677802335,["GJX@GJXAIOU",[[1,4802,"样式"]],[4802,4802],[4804,4804]]],[1565677803515,["GJX@GJXAIOU",[[-1,4802,"样式"]],[4804,4804],[4802,4802]]],[1565677806442,["GJX@GJXAIOU",[[1,4802,"演示"]],[4802,4802],[4804,4804]]],[1565677847454,["GJX@GJXAIOU",[[1,5124,"，这样就把Github"]],[5124,5124],[5135,5135]]],[1565677847495,["GJX@GJXAIOU",[[1,5129," "]],[5135,5135],[5136,5136]]],[1565677848932,["GJX@GJXAIOU",[[1,5136,"在线"]],[5136,5136],[5138,5138]]],[1565677848973,["GJX@GJXAIOU",[[1,5136," "]],[5138,5138],[5139,5139]]],[1565677853422,["GJX@GJXAIOU",[[1,5139,"仓库赋值"]],[5139,5139],[5143,5143]]],[1565677854052,["GJX@GJXAIOU",[[-1,5141,"赋值"]],[5143,5143],[5141,5141]]],[1565677858019,["GJX@GJXAIOU",[[1,5147,"到"]],[5147,5147],[5148,5148]]],[1565677858059,["GJX@GJXAIOU",[[1,5147," "]],[5148,5148],[5149,5149]]],[1565677860611,["GJX@GJXAIOU",[[1,5149,"了本地；"]],[5149,5149],[5153,5153]]],[1565677901481,["GJX@GJXAIOU",[[-1,220,"下载安装"]],[220,224],[220,220]]],[1565677903522,["GJX@GJXAIOU",[[1,220,"Git"]],[220,220],[223,223]]],[1565677977294,[null,[[-1,5140,"\n\n\n###"],[1,5146," clone"],[1,5152,"\n\n\n###"]],[5140,5140],[5158,5158]]],[1565677977294,[null,[[1,5140,"\n\n\n###"],[-1,5140," clone"],[-1,5152,"\n\n\n###"]],[5158,5158],[5140,5140]]],[1565677919986,["GJX@GJXAIOU",[[1,225,"\n"]],[224,224],[225,225]]],[1565677924407,["GJX@GJXAIOU",[[1,225,"### （）"]],[225,225],[231,231]]],[1565677926260,["GJX@GJXAIOU",[[1,230,"一"]],[230,230],[231,231]]],[1565677929957,["GJX@GJXAIOU",[[1,232,"Git安装"]],[232,232],[237,237]]],[1565677929998,["GJX@GJXAIOU",[[1,235," "]],[237,237],[238,238]]],[1565677940409,["GJX@GJXAIOU",[[-1,239,"1.首先在本地安装git，"]],[239,252],[239,239]]],[1565677943219,["GJX@GJXAIOU",[[-1,278,"。"]],[279,279],[278,278]]],[1565677962797,["GJX@GJXAIOU",[[1,278,"，按照教程安装即可"]],[278,278],[287,287]]],[1565678037325,[null,[[-1,5149,"\n\n\n###"],[1,5155," clone"],[1,5161,"\n\n\n###"]],[5149,5149],[5167,5167]]],[1565678037325,[null,[[1,5149,"\n\n\n###"],[-1,5149," clone"],[-1,5161,"\n\n\n###"]],[5167,5167],[5149,5149]]],[1565677983416,["GJX@GJXAIOU",[[1,287,"：[附录一：Git安装教程](#附录一：git-安装)"]],[287,287],[314,314]]],[1565677990379,["GJX@GJXAIOU",[[1,281,"这里的"]],[281,281],[284,284]]],[1565677994088,["GJX@GJXAIOU",[[-1,408,"3.具体的安装过程详见[附录一：Git安装教程](#附录一：git-安装)\n"]],[407,445],[407,407]]],[1565678008610,["GJX@GJXAIOU",[[-1,319,"## 2.安装好Git 之后，会有两个 Git 形式："]],[319,346],[319,319]]],[1565678012578,["GJX@GJXAIOU",[[1,319,"### （）"]],[319,319],[325,325]]],[1565678014194,["GJX@GJXAIOU",[[1,324,"二"]],[324,324],[325,325]]],[1565678018147,["GJX@GJXAIOU",[[1,326,"Git简介"]],[326,326],[331,331]]],[1565678018186,["GJX@GJXAIOU",[[1,329," "]],[331,331],[332,332]]],[1565678022410,["GJX@GJXAIOU",[[1,333,"\n"]],[332,332],[333,333]]],[1565678029505,["GJX@GJXAIOU",[[1,333,"- Git使用"]],[333,333],[340,340]]],[1565678029546,["GJX@GJXAIOU",[[1,338," "]],[340,340],[341,341]]],[1565678030926,["GJX@GJXAIOU",[[1,341,"模式："]],[341,341],[344,344]]],[1565678034088,["GJX@GJXAIOU",[[1,345,"  "]],[347,347],[349,349]]],[1565678035283,["GJX@GJXAIOU",[[1,382,"  "]],[384,384],[386,386]]],[1565678217295,[null,[[-1,5143,"\n\n\n###"],[1,5149," clone"],[1,5155,"\n\n\n###"]],[5143,5143],[5161,5161]]],[1565678217295,[null,[[1,5143,"\n\n\n###"],[-1,5143," clone"],[-1,5155,"\n\n\n###"]],[5161,5161],[5143,5143]]],[1565678158583,["GJX@GJXAIOU",[[-1,411,"4."]],[411,413],[411,411]]],[1565678159298,["GJX@GJXAIOU",[[1,411,"- "]],[411,411],[413,413]]],[1565678162360,["GJX@GJXAIOU",[[-1,410,"\n"]],[410,410],[409,409]]],[1565678165033,["GJX@GJXAIOU",[[-1,409,"\n"]],[409,409],[408,408]]],[1565678167861,["GJX@GJXAIOU",[[1,419,"："]],[419,419],[420,420]]],[1565678277297,[null,[[-1,5142,"\n\n\n###"],[1,5148," clone"],[1,5154,"\n\n\n###"]],[5142,5142],[5160,5160]]],[1565678277297,[null,[[1,5142,"\n\n\n###"],[-1,5142," clone"],[-1,5154,"\n\n\n###"]],[5160,5160],[5142,5142]]],[1565678239744,["GJX@GJXAIOU",[[-1,483,"（以下默认命令输入处为：GitBash）"]],[483,503],[483,483]]],[1565678241731,["GJX@GJXAIOU",[[1,483,"："]],[483,483],[484,484]]],[1565678245740,["GJX@GJXAIOU",[[1,481,"基本"]],[481,481],[483,483]]],[1565678245781,["GJX@GJXAIOU",[[1,481," "]],[483,483],[484,484]]],[1565678249104,["GJX@GJXAIOU",[[-1,478,"git"]],[481,481],[478,478]]],[1565678251012,["GJX@GJXAIOU",[[1,478,"Git"]],[478,478],[481,481]]],[1565678251053,["GJX@GJXAIOU",[[1,478," "]],[481,481],[482,482]]],[1565678254760,["GJX@GJXAIOU",[[-1,474,"5."]],[474,476],[474,474]]],[1565678254881,["GJX@GJXAIOU",[[-1,473,"\n"]],[474,474],[473,473]]],[1565678255394,["GJX@GJXAIOU",[[1,473,"- "]],[473,473],[475,475]]],[1565678260987,["GJX@GJXAIOU",[[-1,487,"\n"]],[488,488],[487,487]]],[1565678266834,["GJX@GJXAIOU",[[1,506,"  ；jib"]],[506,506],[512,512]]],[1565678267520,["GJX@GJXAIOU",[[-1,508,"；jib"]],[512,512],[508,508]]],[1565678271011,["GJX@GJXAIOU",[[1,508,"基本不使用；"]],[508,508],[514,514]]],[1565678337296,[null,[[-1,5133,"\n\n\n###"],[1,5139," clone"],[1,5145,"\n\n\n###"]],[5133,5133],[5151,5151]]],[1565678337296,[null,[[1,5133,"\n\n\n###"],[-1,5133," clone"],[-1,5145,"\n\n\n###"]],[5151,5151],[5133,5133]]],[1565678290992,["GJX@GJXAIOU",[[-1,535,"例如"]],[537,537],[535,535]]],[1565678293284,["GJX@GJXAIOU",[[1,535,"示例："]],[535,535],[538,538]]],[1565678303620,["GJX@GJXAIOU",[[1,619,"    "]],[619,619],[623,623]]],[1565678306708,["GJX@GJXAIOU",[[1,647," "]],[647,647],[648,648]]],[1565678308205,["GJX@GJXAIOU",[[1,624," "]],[624,624],[625,625]]],[1565678308994,["GJX@GJXAIOU",[[1,650," "]],[650,650],[651,651]]],[1565678397299,[null,[[-1,5141,"\n\n\n###"],[1,5147," clone"],[1,5153,"\n\n\n###"]],[5141,5141],[5159,5159]]],[1565678397299,[null,[[1,5141,"\n\n\n###"],[-1,5141," clone"],[-1,5153,"\n\n\n###"]],[5159,5159],[5141,5141]]],[1565678373219,["GJX@GJXAIOU",[[-1,687,"\n"]],[687,687],[686,686]]],[1565678457328,[null,[[-1,5140,"\n\n\n###"],[1,5146," clone"],[1,5152,"\n\n\n###"]],[5140,5140],[5158,5158]]],[1565678457328,[null,[[1,5140,"\n\n\n###"],[-1,5140," clone"],[-1,5152,"\n\n\n###"]],[5158,5158],[5140,5140]]],[1565678447407,["GJX@GJXAIOU",[[-1,671,"有两种方式可以建立Git仓库："]],[671,686],[671,671]]],[1565678450277,["GJX@GJXAIOU",[[1,671,"建立本"]],[671,671],[674,674]]],[1565678451321,["GJX@GJXAIOU",[[-1,673,"本"]],[674,674],[673,673]]],[1565678453947,["GJX@GJXAIOU",[[1,673,"本地Git"]],[673,673],[678,678]]],[1565678453987,["GJX@GJXAIOU",[[1,675," "]],[678,678],[679,679]]],[1565678455700,["GJX@GJXAIOU",[[1,679,"仓库"]],[679,679],[681,681]]],[1565678455740,["GJX@GJXAIOU",[[1,679," "]],[681,681],[682,682]]],[1565678456028,["GJX@GJXAIOU",[[1,682,"的"]],[682,682],[683,683]]],[1565678517308,[null,[[-1,5137,"\n\n\n###"],[1,5143," clone"],[1,5149,"\n\n\n###"]],[5137,5137],[5155,5155]]],[1565678517308,[null,[[1,5137,"\n\n\n###"],[-1,5137," clone"],[-1,5149,"\n\n\n###"]],[5155,5155],[5137,5137]]],[1565678458710,["GJX@GJXAIOU",[[1,683,"两种方式："]],[683,683],[688,688]]],[1565678461505,["GJX@GJXAIOU",[[1,671,"- "]],[671,671],[673,673]]],[1565678463768,["GJX@GJXAIOU",[[1,691,"  "]],[693,693],[695,695]]],[1565678465297,["GJX@GJXAIOU",[[1,766,"  "]],[768,768],[770,770]]],[1565678577302,[null,[[-1,5148,"\n\n\n###"],[1,5154," clone"],[1,5160,"\n\n\n###"]],[5148,5148],[5166,5166]]],[1565678577302,[null,[[1,5148,"\n\n\n###"],[-1,5148," clone"],[-1,5160,"\n\n\n###"]],[5166,5166],[5148,5148]]],[1565678546824,["GJX@GJXAIOU",[[-1,811,"某个文件夹"]],[811,816],[811,811]]],[1565678548582,["GJX@GJXAIOU",[[1,811,"路径"]],[811,811],[813,813]]],[1565678637309,[null,[[-1,5145,"\n\n\n###"],[1,5151," clone"],[1,5157,"\n\n\n###"]],[5145,5145],[5163,5163]]],[1565678637309,[null,[[1,5145,"\n\n\n###"],[-1,5145," clone"],[-1,5157,"\n\n\n###"]],[5163,5163],[5145,5145]]],[1565678592577,["GJX@GJXAIOU",[[-1,767," *   用Git之前还没有项目代码，使用下面三条命令创建git仓库\n```\n  cd 路径\n  git init your_project #会在当前路径下创建和项目名称同名的文件夹\n  cd your_project\n```\n然后就是在自己的仓库中开始写代码或者更改代码了。"]],[767,906],[767,767]]],[1565678619664,["GJX@GJXAIOU",[[-1,671,"- 建立本地 Git 仓库的两种方式："]],[671,690],[671,671]]],[1565678624345,["GJX@GJXAIOU",[[-1,533,"- "]],[533,535],[533,533]]],[1565678626664,["GJX@GJXAIOU",[[1,562,"\n"]],[561,561],[562,562]]],[1565678627321,["GJX@GJXAIOU",[[1,562,"- 建立本地 Git 仓库的两种方式："]],[562,562],[581,581]]],[1565678631105,["GJX@GJXAIOU",[[-1,689,"\n"]],[688,688],[687,687]]],[1565678631680,["GJX@GJXAIOU",[[-1,686,"`"]],[687,687],[686,686]]],[1565678634351,["GJX@GJXAIOU",[[1,686,"`"]],[686,686],[687,687]]],[1565678636031,["GJX@GJXAIOU",[[-1,688,"\n"]],[688,688],[687,687]]],[1565678697395,[null,[[-1,5003,"\n\n\n###"],[1,5009," clone"],[1,5015,"\n\n\n###"]],[5003,5003],[5021,5021]]],[1565678697395,[null,[[1,5003,"\n\n\n###"],[-1,5003," clone"],[-1,5015,"\n\n\n###"]],[5021,5021],[5003,5003]]],[1565678676589,["GJX@GJXAIOU",[[1,688,"\n"]],[687,687],[688,688]]],[1565678676946,["GJX@GJXAIOU",[[1,689,"\n"]],[687,687],[688,688]]],[1565678677458,["GJX@GJXAIOU",[[-1,562,"- 建立本地 Git 仓库的两种方式："]],[581,581],[562,562]]],[1565678677995,["GJX@GJXAIOU",[[-1,562,"\n"]],[562,562],[561,561]]],[1565678678603,["GJX@GJXAIOU",[[1,533,"- "]],[533,533],[533,535]]],[1565678679135,["GJX@GJXAIOU",[[1,671,"- 建立本地 Git 仓库的两种方式："]],[671,671],[671,690]]],[1565678679712,["GJX@GJXAIOU",[[1,767," *   用Git之前还没有项目代码，使用下面三条命令创建git仓库\n```\n  cd 路径\n  git init your_project #会在当前路径下创建和项目名称同名的文件夹\n  cd your_project\n```\n然后就是在自己的仓库中开始写代码或者更改代码了。"]],[767,767],[767,906]]],[1565678757396,[null,[[-1,5145,"\n\n\n###"],[1,5151," clone"],[1,5157,"\n\n\n###"]],[5145,5145],[5163,5163]]],[1565678757396,[null,[[1,5145,"\n\n\n###"],[-1,5145," clone"],[-1,5157,"\n\n\n###"]],[5163,5163],[5145,5145]]],[1565678703111,["GJX@GJXAIOU",[[1,520,"#"]],[520,520],[533,533]]],[1565678706547,["GJX@GJXAIOU",[[-1,522,"二、"]],[522,524],[522,522]]],[1565678707514,["GJX@GJXAIOU",[[1,522,"（）"]],[522,522],[524,524]]],[1565678709667,["GJX@GJXAIOU",[[1,523,"三"]],[523,523],[524,524]]],[1565678713712,["GJX@GJXAIOU",[[-1,913,"三、"]],[913,915],[913,913]]],[1565678714362,["GJX@GJXAIOU",[[1,912,"#"]],[913,913],[924,924]]],[1565678717622,["GJX@GJXAIOU",[[1,914,"（）"]],[914,914],[916,916]]],[1565678719894,["GJX@GJXAIOU",[[1,915,"四"]],[915,915],[916,916]]],[1565678721734,["GJX@GJXAIOU",[[-1,926,"："]],[927,927],[926,926]]],[1565678817396,[null,[[-1,5148,"\n\n\n###"],[1,5154," clone"],[1,5160,"\n\n\n###"]],[5148,5148],[5166,5166]]],[1565678817396,[null,[[1,5148,"\n\n\n###"],[-1,5148," clone"],[-1,5160,"\n\n\n###"]],[5166,5166],[5148,5148]]],[1565678784963,["GJX@GJXAIOU",[[1,1103,"，如初"]],[1103,1103],[1106,1106]]],[1565678785562,["GJX@GJXAIOU",[[-1,1104,"如初"]],[1106,1106],[1104,1104]]],[1565678794660,["GJX@GJXAIOU",[[1,1104,"如果产生了新的修改"]],[1104,1104],[1113,1113]]],[1565678798378,["GJX@GJXAIOU",[[1,1170,"；"]],[1170,1170],[1171,1171]]],[1565678800993,["GJX@GJXAIOU",[[1,1275,"；"]],[1275,1275],[1276,1276]]],[1565678997401,[null,[[-1,5160,"\n\n\n###"],[1,5166," clone"],[1,5172,"\n\n\n###"]],[5160,5160],[5178,5178]]],[1565678997401,[null,[[1,5160,"\n\n\n###"],[-1,5160," clone"],[-1,5172,"\n\n\n###"]],[5178,5178],[5160,5160]]],[1565678958658,["GJX@GJXAIOU",[[1,1081," test.txt"]],[1081,1081],[1090,1090]]],[1565679657453,[null,[[-1,5169,"\n\n\n###"],[1,5175," clone"],[1,5181,"\n\n\n###"]],[5169,5169],[5187,5187]]],[1565679657453,[null,[[1,5169,"\n\n\n###"],[-1,5169," clone"],[-1,5181,"\n\n\n###"]],[5187,5187],[5169,5169]]],[1565679650354,["GJX@GJXAIOU",[[1,1303,"（）"]],[1303,1303],[1305,1305]]],[1565679652517,["GJX@GJXAIOU",[[1,1304,"本地"]],[1304,1304],[1306,1306]]],[1565679717451,[null,[[-1,5173,"\n\n\n###"],[1,5179," clone"],[1,5185,"\n\n\n###"]],[5173,5173],[5191,5191]]],[1565679717451,[null,[[1,5173,"\n\n\n###"],[-1,5173," clone"],[-1,5185,"\n\n\n###"]],[5191,5191],[5173,5173]]],[1565679660425,["GJX@GJXAIOU",[[-1,1291,"四、"]],[1293,1293],[1291,1291]]],[1565679661709,["GJX@GJXAIOU",[[1,1291,"（）"]],[1291,1291],[1293,1293]]],[1565679663474,["GJX@GJXAIOU",[[1,1292,"五"]],[1292,1292],[1293,1293]]],[1565679669094,["GJX@GJXAIOU",[[-1,1434," 五、"]],[1436,1436],[1434,1434]]],[1565679670027,["GJX@GJXAIOU",[[1,1434,"（）"]],[1434,1434],[1436,1436]]],[1565679672083,["GJX@GJXAIOU",[[1,1435,"六"]],[1435,1435],[1436,1436]]],[1565679673895,["GJX@GJXAIOU",[[1,1434,"# ##"]],[1436,1436],[1445,1445]]],[1565679676871,["GJX@GJXAIOU",[[-1,1436,"##"]],[1438,1438],[1436,1436]]],[1565679679711,["GJX@GJXAIOU",[[1,1290,"#"]],[1289,1289],[1299,1299]]],[1565679777452,[null,[[-1,5177,"\n\n\n###"],[1,5183," clone"],[1,5189,"\n\n\n###"]],[5177,5177],[5195,5195]]],[1565679777452,[null,[[1,5177,"\n\n\n###"],[-1,5177," clone"],[-1,5189,"\n\n\n###"]],[5195,5195],[5177,5177]]],[1565679734807,["GJX@GJXAIOU",[[1,518,"\n"]],[516,516],[517,517]]],[1565679737789,["GJX@GJXAIOU",[[1,517,"### （）"]],[517,517],[523,523]]],[1565679739722,["GJX@GJXAIOU",[[1,522,"三"]],[522,522],[523,523]]],[1565679742941,["GJX@GJXAIOU",[[1,524,"Git配置"]],[524,524],[529,529]]],[1565679742980,["GJX@GJXAIOU",[[1,527," "]],[529,529],[530,530]]],[1565679743614,["GJX@GJXAIOU",[[1,532,"\n"]],[530,530],[531,531]]],[1565679750791,["GJX@GJXAIOU",[[-1,1730,"- 下面是使用Git的最小配置\n1.打开Git Bash :切换到下面文件目录下；（或者在文件资源器中进入该目录，然后右键：Git Bash Here）\n配置`user.name`和`user.email` 其中global表示对登录用户的所有仓库有效，是用于区分不同的开发人员身份；\n注：以上信息都保存在.git 文件夹中，存放的是本地库相关的子目录和文件，可以使用：`ll .git/`查看，同时，可以使用`cat .git/config`进行查看配置文件，这里看到所有的用户\n2.输入：`git config --global user.name '随便用户名'`\n3.输入：`git config --global user.email '随便邮箱'`\n```git\n git config --local         local只对仓库有效。此也为缺省条件下的配置\n git config --global        global对登录用户的所有仓库都有效\n git config --system        system对系统的所有用户都有效\n```\n上面三个作用域是由一定的优先级的：local > global > system\n\n"]],[1730,2260],[1730,1730]]],[1565679754727,["GJX@GJXAIOU",[[1,533,"\n"]],[531,531],[532,532]]],[1565679755031,["GJX@GJXAIOU",[[1,532,"- 下面是使用Git的最小配置\n1.打开Git Bash :切换到下面文件目录下；（或者在文件资源器中进入该目录，然后右键：Git Bash Here）\n配置`user.name`和`user.email` 其中global表示对登录用户的所有仓库有效，是用于区分不同的开发人员身份；\n注：以上信息都保存在.git 文件夹中，存放的是本地库相关的子目录和文件，可以使用：`ll .git/`查看，同时，可以使用`cat .git/config`进行查看配置文件，这里看到所有的用户\n2.输入：`git config --global user.name '随便用户名'`\n3.输入：`git config --global user.email '随便邮箱'`\n```git\n git config --local         local只对仓库有效。此也为缺省条件下的配置\n git config --global        global对登录用户的所有仓库都有效\n git config --system        system对系统的所有用户都有效\n```\n上面三个作用域是由一定的优先级的：local > global > system\n\n"]],[532,532],[1062,1062]]],[1565679759360,["GJX@GJXAIOU",[[-1,2249,"## 六、配置Git\n"]],[2248,2259],[2248,2248]]],[1565679759581,["GJX@GJXAIOU",[[-1,2250,"\n"]],[2248,2248],[2247,2247]]],[1565679760069,["GJX@GJXAIOU",[[-1,2249,"\n"]],[2247,2247],[2246,2246]]]],null,"GJX@GJXAIOU"],["6cf7a685-741f-43df-bb05-737f30f35c25",1565682845960,"---\npin: true\ntags: \n- Git\nstyle: summer\nflag: red\ndate: '2019-7-31'\ncustom: GJXAIOU\nnote: Git&GitHub使用说明,2019-2-11号形成初稿，2019-7-31进行整体迭代，2019-8-6号形成终稿\n---\n\n# Git&GitHub使用说明\n\n@toc\n\n==原则：不要在远程库修改文件，一定要在本地修改然后 push==\n\n## 一、Git\n\n### （一）Git 安装\n[软件下载地址](https://git-scm.com/downloads)，按照这里的教程安装即可：[附录一：Git安装教程](#附录一：git-安装)\n\n### （二）Git 简介\n- Git 使用模式：\n  - Git Bash   ：这是命令行模式（类似Linux）【推荐】\n  - Git GUI      ：这是有界面的模式\n- Git 整体结构：\n![Git结构 2]($resource/Git%E7%BB%93%E6%9E%84%202.png)\n- 查看 Git 基本配置：`git config --list`  基本不使用；\n\n\n### （三）Git 配置\n\n- 下面是使用Git的最小配置\n1.打开Git Bash :切换到下面文件目录下；（或者在文件资源器中进入该目录，然后右键：Git Bash Here）\n配置`user.name`和`user.email` 其中global表示对登录用户的所有仓库有效，是用于区分不同的开发人员身份；\n注：以上信息都保存在.git 文件夹中，存放的是本地库相关的子目录和文件，可以使用：`ll .git/`查看，同时，可以使用`cat .git/config`进行查看配置文件，这里看到所有的用户\n2.输入：`git config --global user.name '随便用户名'`\n3.输入：`git config --global user.email '随便邮箱'`\n```git\n git config --local         local只对仓库有效。此也为缺省条件下的配置\n git config --global        global对登录用户的所有仓库都有效\n git config --system        system对系统的所有用户都有效\n```\n上面三个作用域是由一定的优先级的：local > global > system\n\n\n\n### （三）在本地建立一个仓库\n- 示例：在`E`盘下建立一个名为`practice`的仓库\n```git\n  cd e:\n  mkdir practice\n  cd practice\n  ls -la     # 看现在里面有多少文件\n  git init   # 完成初始化，建立了一个空仓库\n```\n\n- 建立本地 Git 仓库的两种方式：\n  *   用Git之前已经有项目代码，则使用以下两条命令建立Git仓库\n```git\n  cd 项目代码所在的文件夹\n  git init\n```\n  *   用Git之前还没有项目代码，使用下面三条命令创建git仓库\n```\n  cd 路径\n  git init your_project #会在当前路径下创建和项目名称同名的文件夹\n  cd your_project\n```\n然后就是在自己的仓库中开始写代码或者更改代码了。\n\n### （四）工作区和版本库区别\n\n![工作区与版本库的区别]($resource/%E5%B7%A5%E4%BD%9C%E5%8C%BA%E4%B8%8E%E7%89%88%E6%9C%AC%E5%BA%93%E7%9A%84%E5%8C%BA%E5%88%AB.png)\n\n注：示例文件名`test.txt`\n- 当使用`git add  test.txt`将文件提交到暂存区之后，仍然在本地继续修改，如果产生了新的修改；\n  - 使用：`git commit -m 'shuoming' `提交只是提交第一个修改的，后面修改的不提交；\n  - 使用：`git commit -m 'shuoming' test.txt`提交的将是后面修改的版本；\n  - 使用：`git diff head -- test.txt`可以显示工作区和分支的区别；\n\n\n### （五）撤销修改\n- 工作区（本地）修改之后，未提交到暂存区：`git checkout -- test.txt`,撤销工作区的修改；\n- 工作区修改后，已提交到暂存区：`git reset head test.txt`,撤销暂存区的修改，然后再使用上面的命令撤销工作区的修改；\n\n\n### （六）删除文件\n- 删除工作区文件：`rm test.txt` 就是删除本地文件\n- 删除暂存区文件：(删除的修改操作，要提交)：这里是本地和 github 都删除\n`git rm test.txt`\n`git commit -m \"delete test.txt\"`\n`git push 名字`\n\n- 删除缓冲区和 github 文件，本地不删除\n`git rm -r --cached 文件名或者文件夹名`  --cached 不会将本地文件删除\n`git commit -m \"XXXXX\"`\n`git push 名字`\n\n\n \n\n## 七、git文件重命名的命令\n\n>前提是需要修改git仓库中已经commit了的文件\n\n- 假如想使文件`readme`，改名为 `readme.cpp`。可以使用下面的三条命令：\n```git\nmv readme readme.cpp\ngit rm readme //注意与linux 的命令rm的区别\ngit add readme.cpp\n```\n最后可以使用git status查看修改后的仓库的状态\n上述是三条命令，还可以使用下面的一条命令达到上述三条命令的效果\n `git mv readme readme.cpp`\n \n- 如果想要撤销刚刚的修改，使用下面的命令：\n`git reset --hard`\n\n\n## 八、 如何使用git log系列命令查看git仓库的版本演变历史\n```\ngit branch -v 看本地有多少版本分支\ngit log --all 查看所有分支的历史\ngit log --all --graph 查看图形化的 log 地址\ngit log --oneline 查看单行的简洁历史。\ngit log --oneline -n4 查看最近的四条简洁历史。\ngit log --oneline --all -n4 --graph 查看所有分支最近 4 条单行的图形化历史。\ngit help --web log 跳转到git log 的帮助文档网页\ngit log --oneline temp 只查看temp的分支的信息且oneline形式\n```\n- 注意：\n  - git log 仅仅是查看当前分支的更改历史\n  - git log --all 查看所有分支的信息\n  - git log --all --graph 上面的查看不容易看各个分支的关系，加上图形化容易看出各个分支的关系\n  - git checkout -b temp +从哪个commit开始新加一个分支(一大串数字,表示某一个commit中的数字 )\n  - git checkout master // 切换到master分支\n\n*   git命令的后面加的参数，有的时候是-，有的时候是- -\n*   单字母的参数是 ‘-’，非单字母的参数是’- -’\n\n\n## 九、版本回退\n\n分别修改几次hello.txt，并分别提交。\n**版本1：**\nhello\n**版本2：**\nhello world\n**版本3：**\nhello world third\n**版本4：**\nhello  world  third last\n以上版本都提交之后，如果想回到第二个版本：\n\n- 方式一：【推荐】\n1.首先输入：`git reflog` 会得到之后所有该文件的提交版本信息，其中最前面黄色字体为提交的版本号；\n注：可以使用`git log`查看该文件每次提交的详细信息（包括：完整的版本号，作者，时间等），也可以使用：`git log --pretty=online`按行显示以上信息；\n其中：Head 含义：HEAD@{移动到当前版本需要多少步}\n2.输入：`git reset --hard 第二次提交版本号` （这里版本号填写 `git reflog`显示的即可，不必填写完整的版本号）即可回退到第二个版本；\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20181028233812515.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NjbnVhY21oZHU=,size_27,color_FFFFFF,t_70)\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20181028234106489.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NjbnVhY21oZHU=,size_27,color_FFFFFF,t_70)\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20181028234356533.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NjbnVhY21oZHU=,size_27,color_FFFFFF,t_70)\n\n- 方式二：只能后退\n`git reset --head HEAD^`其中一个^表示后退一步，n 个表示后退 n 步；\n- 方式三：只能后退\n`git reset --head HEAD~n`,表示后退 n 步\n\n### 补充：reset 参数\n![搜狗截图20190731203134]($resource/%E6%90%9C%E7%8B%97%E6%88%AA%E5%9B%BE20190731203134.png)\n\n- 参数一:`--soft`  ：仅仅在本地库移动 HEAD 指针；\n- 参数二:`--mixed` ：在本地库移动 HEAD 指针，同时重置暂存区；\n- 参数三:`--hard` ：在本地库移动 HEAD 指针，同时重置暂存区和工作区；\n\n\n### 删除文件并找回\n前提：删除前，文件存在时的状态提交到了本地库；\n操作：`git reset --head 指针位置`\n- 删除操作已经提交到了本地库：指针位置指向历史记录\n- 删除操作尚未提交到本地库：指针位置指向 HEAD\n\n### 比较文件的差异\n- 将工作区文件和暂存区进行比较：`git diff 文件名`\n- 将工作区文件和本地库历史记录比较：`git diff 本地库中历史版本 文件名`\n- 以上不带文件名就是比较多个文件；\n\n\n\n\n\n## 十一、连接到GitHub\n\n### （一）将GitHub上的库克隆到本地\n\n演示说明：默认本地 文件地址为：E:\\Program\\GitHub\\\n         GitHub上的库为：Notes\n\n步骤：\n1.将GitHub上已有的仓库下载到本地（这样可以在本地编辑）\n- 进入GitHub中所要同步的库页面，选择：`clone or download`，然后将URL复制下来：本人为：`https://github.com/GJXAIOU/Notes.git`\n![URL]($resource/URL.jpg)\n\n- 在Git Bash 中首先将目录切换到想要保存该库的目录下：然后输入\n`git clone https://github.com/GJXAIOU/Notes.git` (后面的网址就是刚才复制的)，这样就把 Github 在线仓库 clone 到了本地；\n\n\n### （二）连接本地仓库与GitHub：\n\n1.在本地生成SSH Key :  在Git Bash中输入：`ssh-keygen -t rsa -C \"GitHub邮箱\"`，接下来**全部回车**确认，这样在电脑C盘本人用户名目录下就会出现一个文件：`.ssh`\n2.将上面文件中的`id_rsa`使用记事本打开，然后全选复制；\n3.将上面复制的秘钥，黏贴到GitHub中\n![搜狗截图20190226204854]($resource/%E6%90%9C%E7%8B%97%E6%88%AA%E5%9B%BE20190226204854.png)\n![搜狗截图20190226205651]($resource/%E6%90%9C%E7%8B%97%E6%88%AA%E5%9B%BE20190226205651.png)\n\n补充：github上新建仓库：`mimengfenxi`\n\n### 1.创建远程仓库别名\n- 查看当前远程仓库地址别名：`git remote -v`\n- 为远程仓库添加别名：`git remote add 别名 远程仓库地址`\n\n### 2.推送\n`git push 别名 分支名`\n\n使用：\n```git\n#将本地的master分支与GitHub仓库分支进行关联\ngit remote add origin https://github.com/GJXAIOU/mimengfenxi.git #后面为仓库的SSH地址\n\n##这步不需要,这是移除关联\ngit remote remove 名字\ngit remote rm origin https://github.com/GJXAIOU/mimengfenxi.git \n\n#注：origin是自己为远程GitHub仓库取的别名，主要是方便以后书写\n\n#下面的步骤只需要第一次的时候配置以下：\n步骤一：配置上面的公钥和私钥\n步骤二；输入：ssh -T -v git@github.com\n\n#这一步是指从本地直接生成库，而不是克隆的上传使用（一般也没有）\ngit pull --rebase origin master #相当于将GitHub创建仓库时候多创建的README.md拖下来\n\n#从GitHub往本地克隆，最好保证本地仓库是空的；同样本地上传到GitHub上时候最好保证GitHub新建的仓库是空的；\n\n#将本地的master分支上传到GitHub\ngit push -u origin master\n```\n\n### （三）上传同步本地文件（本地目录下文件有修改想同步到GitHub时候）\n1.在刚才的本地目录下，使用Git Bash ,输入：`Git init` 初始化本地git仓库；\n然后在改目录下会出现：`.git`这个文件  （只需要一次，以后不需要）\n\n2.进入修改目录下；输入：`git status` :查看多少文件未提交到仓库中（显示为红色的为未提交的），用于查看工作区和暂存区的状态；\n\n3.将上述所有文件从工作区提交到缓存区：`git add . `\n将特定文件提交大缓冲区：`git add 文件名称.后缀`\n\n4.再使用命令`git status`查看是不是都提交到了缓冲区（显示为绿色的是的）\n\n5.将缓冲区的文件提交到GitHub仓库中：`git commit -m \"想显示文件后面的的描述\"`\n\n6.最后一步：`git push`\n\n\n# 本机使用：已有仓库\n如果 Github 上已经有仓库，而且不是本地传上去的；\n1.首先将 github 上文件 clone 下来，如果和本地文件夹名字一样则修改本地名字，防止覆盖；\n2.将 clone 下来的文件夹里面内容，连同.git 文件一起移动，同时将本地文件夹的名字改成与仓库名字相同；就是保证一点：本地文件只能比 github 端的文件多，不能少；\n3.查看目前的 git 用户：`git remote -v`,可以将目前的一些用户名删掉：`git remote remove 名字`，然后新建用户：`git remote add 名字 库url`, 这里的名字最好使用库名，便于记忆和区分；\n4.添加新文件：`git add .`或者`git add 文件名`\n5.然后 ：`git commit -m \"说明\"`\n6.最后 push：`git push 名字`\n\n\n\n# 使用 GitHub 搭建个人网站\n使用 GitHub 搭建的网站是静态网站，搭建的操作分为两类：\n- 完全基于新的仓库搭建：\n  - 首先创建新的仓库，仓库名为：用户名.github.io\n  - 然后创建 index.html 即可；\n  - 相关的网页显示配置可以在 index.html 中进行配置；\n\n- 基于已有的仓库进行搭建：(现在已经改变，在摸索着)\n  - 首先进入仓库，在右上角选择：setting->Launch automatic gener....\n  - 在 Tagline 中填写项目名称；\n\n\n# 附录：\n\n## 附录一：Git 安装\nTODO：Git 和 GitHub\n\n\n![github开源协议区分]($resource/github%E5%BC%80%E6%BA%90%E5%8D%8F%E8%AE%AE%E5%8C%BA%E5%88%86.png)\n\n",[[1565682793643,["GJX@GJXAIOU",[[1,2135,"**"],[1,2151,"**"]],[2135,2151],[2135,2155]]],[1565682800686,["GJX@GJXAIOU",[[-1,2274,">"]],[2274,2275],[2274,2274]]],[1565682842319,["GJX@GJXAIOU",[[-1,2259,"七、g"]],[2259,2262],[2259,2259]]],[1565682843343,["GJX@GJXAIOU",[[1,2258,"#"]],[2259,2259],[2270,2270]]],[1565682847899,["GJX@GJXAIOU",[[1,2260,"（）"]],[2260,2260],[2262,2262]]],[1565682851815,["GJX@GJXAIOU",[[1,2261,"七"]],[2261,2261],[2262,2262]]],[1565682854409,["GJX@GJXAIOU",[[1,2263,"G"]],[2263,2263],[2264,2264]]],[1565682858657,["GJX@GJXAIOU",[[-1,2571," 八、 "]],[2571,2575],[2571,2571]]],[1565682859806,["GJX@GJXAIOU",[[1,2571,"# ##"]],[2571,2571],[2604,2604]]],[1565682869704,["GJX@GJXAIOU",[[-1,2573,"##如何使用git log系列命令"]],[2573,2590],[2573,2573]]],[1565682870610,["GJX@GJXAIOU",[[1,2573,"（）"]],[2573,2573],[2575,2575]]],[1565682873620,["GJX@GJXAIOU",[[1,2574,"八"]],[2574,2574],[2575,2575]]],[1565682897631,["GJX@GJXAIOU",[[1,3187,"#"]],[3185,3190],[3195,3195]]],[1565682900447,["GJX@GJXAIOU",[[-1,3189,"九、"]],[3191,3191],[3189,3189]]],[1565682901816,["GJX@GJXAIOU",[[1,3189,"（）"]],[3189,3189],[3191,3191]]],[1565682903780,["GJX@GJXAIOU",[[1,3190,"就"]],[3190,3190],[3191,3191]]],[1565682904518,["GJX@GJXAIOU",[[-1,3190,"就"]],[3191,3191],[3190,3190]]],[1565682906356,["GJX@GJXAIOU",[[1,3190,"九"]],[3190,3190],[3191,3191]]],[1565682909376,["GJX@GJXAIOU",[[-1,3229,"\n"]],[3230,3230],[3229,3229]]],[1565682913663,["GJX@GJXAIOU",[[-1,3227,"**"]],[3229,3229],[3227,3227]]],[1565682915200,["GJX@GJXAIOU",[[-1,3221,"**"]],[3221,3223],[3221,3221]]],[1565682916534,["GJX@GJXAIOU",[[-1,3231,"**"]],[3231,3233],[3231,3231]]],[1565682917672,["GJX@GJXAIOU",[[-1,3235,"**"]],[3235,3237],[3235,3235]]],[1565682918455,["GJX@GJXAIOU",[[-1,3235,"\n"]],[3236,3236],[3235,3235]]],[1565682920174,["GJX@GJXAIOU",[[-1,3253,"**"]],[3253,3255],[3253,3253]]],[1565682921248,["GJX@GJXAIOU",[[-1,3247,"**"]],[3247,3249],[3247,3247]]],[1565682922111,["GJX@GJXAIOU",[[-1,3251,"\n"]],[3252,3252],[3251,3251]]],[1565682923847,["GJX@GJXAIOU",[[-1,3275,"**"]],[3275,3277],[3275,3275]]],[1565682924936,["GJX@GJXAIOU",[[-1,3269,"**"]],[3269,3271],[3269,3269]]],[1565682925695,["GJX@GJXAIOU",[[-1,3273,"\n"]],[3274,3274],[3273,3273]]],[1565682951592,["GJX@GJXAIOU",[[-1,4317,"###"]],[4317,4320],[4317,4317]]],[1565682955519,["GJX@GJXAIOU",[[1,4318,"**"],[1,4329,"**"]],[4318,4329],[4318,4333]]],[1565683012268,["GJX@GJXAIOU",[[1,4549,"（）"]],[4549,4549],[4551,4551]]],[1565683016372,["GJX@GJXAIOU",[[1,4550,"十"]],[4550,4550],[4551,4551]]],[1565683022522,["GJX@GJXAIOU",[[1,4670,"（）"]],[4670,4670],[4672,4672]]],[1565683025463,["GJX@GJXAIOU",[[1,4671,"十一"]],[4671,4671],[4673,4673]]],[1565683031367,["GJX@GJXAIOU",[[-1,4784,"十一、"]],[4784,4787],[4784,4784]]],[1565683035346,["GJX@GJXAIOU",[[1,4784,"二、"]],[4784,4784],[4786,4786]]],[1565683038631,["GJX@GJXAIOU",[[-1,4882,"\n"]],[4882,4882],[4881,4881]]],[1565683048657,["GJX@GJXAIOU",[[1,4882,"**"],[1,4885,"**"]],[4882,4885],[4882,4889]]],[1565683051111,["GJX@GJXAIOU",[[1,4821,"**"],[1,4826,"**"]],[4821,4826],[4821,4830]]],[1565683056762,["GJX@GJXAIOU",[[1,4830," "]],[4830,4830],[4831,4831]]],[1565683099471,["GJX@GJXAIOU",[[-1,5582,"1."]],[5582,5584],[5582,5582]]],[1565683100245,["GJX@GJXAIOU",[[1,5582,"（）"]],[5582,5582],[5584,5584]]],[1565683101705,["GJX@GJXAIOU",[[1,5583,"一"]],[5583,5583],[5584,5584]]],[1565683113345,["GJX@GJXAIOU",[[-1,5548,"补充：github上新建仓库：`mimengfenxi`"]],[5548,5576],[5548,5548]]],[1565683113862,["GJX@GJXAIOU",[[-1,5549,"\n"]],[5548,5548],[5547,5547]]],[1565683149364,["GJX@GJXAIOU",[[-1,5753,"mimengfenxi"],[1,5764,"Notes"]],[5753,5764],[5758,5758]]],[1565683154959,["GJX@GJXAIOU",[[-1,5719,"origin"]],[5725,5725],[5719,5719]]],[1565683156521,["GJX@GJXAIOU",[[1,5719,"notes"]],[5719,5719],[5724,5724]]],[1565683163457,["GJX@GJXAIOU",[[1,5703,",b"]],[5703,5703],[5705,5705]]],[1565683164281,["GJX@GJXAIOU",[[-1,5704,"b"]],[5705,5705],[5704,5704]]],[1565683170347,["GJX@GJXAIOU",[[1,5704,"仓库别名为notes"]],[5704,5704],[5714,5714]]],[1565683205106,["GJX@GJXAIOU",[[-1,5837,"origi"]],[5837,5843],[5838,5838]]],[1565683205770,["GJX@GJXAIOU",[[1,5838,"otes"]],[5838,5838],[5842,5842]]],[1565683244439,["GJX@GJXAIOU",[[-1,6194,"origin"]],[6194,6200],[6194,6194]]],[1565683245673,["GJX@GJXAIOU",[[1,6194,"notes"]],[6194,6194],[6199,6199]]],[1565683251099,["GJX@GJXAIOU",[[1,6181," "]],[6181,6181],[6182,6182]]],[1565683251959,["GJX@GJXAIOU",[[-1,6181," "]],[6182,6182],[6181,6181]]],[1565683252595,["GJX@GJXAIOU",[[1,6181,":"]],[6181,6181],[6182,6182]]],[1565683253455,["GJX@GJXAIOU",[[-1,6181,":"]],[6182,6182],[6181,6181]]],[1565683255786,["GJX@GJXAIOU",[[1,6181,";moren "]],[6181,6181],[6188,6188]]],[1565683256873,["GJX@GJXAIOU",[[-1,6182,"moren "]],[6188,6188],[6182,6182]]],[1565683261419,["GJX@GJXAIOU",[[1,6182,"格式为："]],[6182,6182],[6186,6186]]],[1565683273699,["GJX@GJXAIOU",[[1,6186,"git push cang"]],[6186,6186],[6199,6199]]],[1565683278344,["GJX@GJXAIOU",[[-1,6195,"cang"]],[6199,6199],[6195,6195]]],[1565683284580,["GJX@GJXAIOU",[[1,6195,"仓库别名 分支名"]],[6195,6195],[6203,6203]]],[1565683291799,["GJX@GJXAIOU",[[-1,5636,"### 2.推送\n`git push 别名 分支名`"]],[5636,5662],[5636,5636]]],[1565683318025,["GJX@GJXAIOU",[[1,5901,"\n"]],[5899,5899],[5900,5900]]],[1565683320711,["GJX@GJXAIOU",[[1,5900,"### "]],[5900,5900],[5904,5904]]],[1565683322094,["GJX@GJXAIOU",[[-1,5901,"## "]],[5904,5904],[5901,5901]]],[1565683324178,["GJX@GJXAIOU",[[1,5901,"注："]],[5901,5901],[5903,5903]]],[1565683325368,["GJX@GJXAIOU",[[1,5903,"查看当前远程仓库地址别名：`git remote -v`"]],[5903,5903],[5931,5931]]],[1565683335678,["GJX@GJXAIOU",[[-1,5549,"### （一）创建远程仓库别名\n- 查看当前远程仓库地址别名：`git remote -v`\n- 为远程仓库添加别名：`git remote add 别名 远程仓库地址`\n"]],[5549,5635],[5549,5549]]],[1565683336151,["GJX@GJXAIOU",[[-1,5551,"\n"]],[5549,5549],[5548,5548]]],[1565683336511,["GJX@GJXAIOU",[[-1,5550,"\n"]],[5548,5548],[5547,5547]]],[1565683340823,["GJX@GJXAIOU",[[-1,5554,"```git"]],[5554,5560],[5554,5554]]],[1565683343975,["GJX@GJXAIOU",[[-1,6141,"```"]],[6141,6144],[6141,6141]]],[1565683355630,["GJX@GJXAIOU",[[1,5550,"### （）"]],[5550,5550],[5556,5556]]],[1565683357284,["GJX@GJXAIOU",[[1,5555,"三"]],[5555,5555],[5556,5556]]],[1565683360178,["GJX@GJXAIOU",[[1,5557,"具体"]],[5557,5557],[5559,5559]]],[1565683361889,["GJX@GJXAIOU",[[-1,5561,"："]],[5562,5562],[5561,5561]]],[1565683364179,["GJX@GJXAIOU",[[1,5603,"·"]],[5603,5603],[5604,5604]]],[1565683365329,["GJX@GJXAIOU",[[-1,5603,"·"]],[5604,5604],[5603,5603]]],[1565683365737,["GJX@GJXAIOU",[[1,5603,"`"]],[5603,5603],[5604,5604]]],[1565683368049,["GJX@GJXAIOU",[[1,5661,"`"]],[5661,5661],[5662,5662]]],[1565683370019,["GJX@GJXAIOU",[[1,5692,"`"]],[5692,5692],[5693,5693]]],[1565683370786,["GJX@GJXAIOU",[[1,5713,"`"]],[5713,5713],[5714,5714]]],[1565683371827,["GJX@GJXAIOU",[[1,5715,"`"]],[5715,5715],[5716,5716]]],[1565683372875,["GJX@GJXAIOU",[[1,5778,"`"]],[5778,5778],[5779,5779]]],[1565683376927,["GJX@GJXAIOU",[[-1,5781,"\n"]],[5781,5781],[5780,5780]]],[1565683380223,["GJX@GJXAIOU",[[-1,5784,"origin"]],[5784,5790],[5784,5784]]],[1565683380811,["GJX@GJXAIOU",[[1,5784,"n "]],[5784,5784],[5785,5785]]],[1565683381386,["GJX@GJXAIOU",[[1,5785,"otes"]],[5785,5785],[5789,5789]]],[1565683394643,["GJX@GJXAIOU",[[1,5895,"`"]],[5895,5895],[5896,5896]]],[1565683395753,["GJX@GJXAIOU",[[1,5920,"`"]],[5920,5920],[5921,5921]]],[1565683411647,["GJX@GJXAIOU",[[1,5930,"**"],[1,5937,"**"]],[5930,5937],[5930,5941]]],[1565683432987,["GJX@GJXAIOU",[[1,6159,"`"]],[6159,6159],[6160,6160]]],[1565683434612,["GJX@GJXAIOU",[[1,6135,"`"]],[6135,6135],[6136,6136]]],[1565683443127,["GJX@GJXAIOU",[[-1,6179,"（本地目录下文件有修改想同步到GitHub时候）"]],[6179,6203],[6179,6179]]],[1565683461220,["GJX@GJXAIOU",[[1,6516," cangk"]],[6516,6516],[6522,6522]]],[1565683462545,["GJX@GJXAIOU",[[-1,6517,"cangk"]],[6522,6522],[6517,6517]]],[1565683470636,["GJX@GJXAIOU",[[1,6517,"仓库名 分支名"]],[6517,6517],[6524,6524]]],[1565683489963,["GJX@GJXAIOU",[[1,6530,"平常使用步骤"]],[6530,6530],[6536,6536]]],[1565683494040,["GJX@GJXAIOU",[[-1,6536,"本机使用：已有仓库"]],[6536,6545],[6536,6536]]],[1565683497297,["GJX@GJXAIOU",[[1,6528,"\n"]],[6528,6528],[6529,6529]]],[1565683497440,["GJX@GJXAIOU",[[1,6529,"\n"]],[6529,6529],[6530,6530]]],[1565683497561,["GJX@GJXAIOU",[[1,6530,"\n"]],[6530,6530],[6531,6531]]],[1565683710011,["GJX@GJXAIOU",[[1,6528,"### （）"]],[6528,6528],[6534,6534]]],[1565683711978,["GJX@GJXAIOU",[[1,6533,"四"]],[6533,6533],[6534,6534]]],[1565683715663,["GJX@GJXAIOU",[[1,6535,"分支的使用"]],[6535,6535],[6540,6540]]],[1565683716001,["GJX@GJXAIOU",[[1,6543,"\n"]],[6540,6540],[6541,6541]]],[1565683737471,["GJX@GJXAIOU",[[1,6542,"**git branch**\n\n> 创建、重命名、查看、删除项目分支，通过 `Git` 做项目开发时，一般都是在开发分支中进行，开发完成后合并分支到主干。\n\n```\ngit branch daily/0.0.0\n```\n\n创建一个名为 `daily/0.0.0` 的日常开发分支，分支名只要不包括特殊字符即可。\n\n```\ngit branch -m daily/0.0.0 daily/0.0.1\n```\n\n如果觉得之前的分支名不合适，可以为新建的分支重命名，重命名分支名为 `daily/0.0.1`\n\n```\ngit branch\n```\n\n通过不带参数的branch命令可以查看当前项目分支列表\n\n```\ngit branch -d daily/0.0.1\n```\n\n如果分支已经完成使命则可以通过 `-d` 参数将分支删除，这里为了继续下一步操作，暂不执行删除操作\n\n#### **git checkout**\n\n> 切换分支\n\n```\ngit checkout daily/0.0.1\n```\n\n切换到 `daily/0.0.1` 分支，后续的操作将在这个分支上进行"]],[6542,6542],[7030,7030]]],[1565683739926,["GJX@GJXAIOU",[[-1,6554,"**"]],[6556,6556],[6554,6554]]],[1565683741079,["GJX@GJXAIOU",[[-1,6543,"*"]],[6544,6544],[6543,6543]]],[1565683742142,["GJX@GJXAIOU",[[-1,6555,"> "]],[6555,6557],[6555,6555]]],[1565683742471,["GJX@GJXAIOU",[[-1,6554,"\n"]],[6555,6555],[6554,6554]]],[1565683743567,["GJX@GJXAIOU",[[-1,6542,"*"]],[6543,6543],[6542,6542]]],[1565683746832,["GJX@GJXAIOU",[[-1,6614,"```"]],[6614,6617],[6614,6614]]],[1565683749663,["GJX@GJXAIOU",[[-1,6638,"```"]],[6641,6641],[6638,6638]]],[1565683750641,["GJX@GJXAIOU",[[-1,6614,"\n"]],[6614,6614],[6613,6613]]],[1565683750984,["GJX@GJXAIOU",[[-1,6613,"\n"]],[6613,6613],[6612,6612]]],[1565683753917,["GJX@GJXAIOU",[[-1,6572," "],[1,6573," "],[-1,6578," "],[1,6579," "],[1,6613,"·"],[-1,6644," "],[1,6645," "],[-1,6658," "],[1,6659," "],[-1,6764," "],[1,6765," "],[-1,6879," "],[1,6880," "],[-1,6884," "],[1,6885," "],[-1,6983," "],[1,6984," "],[-1,6997," "],[1,6998," "]],[6613,6613],[6614,6614]]],[1565683755143,["GJX@GJXAIOU",[[-1,6613,"·"]],[6614,6614],[6613,6613]]],[1565683755634,["GJX@GJXAIOU",[[1,6613,"`"]],[6613,6613],[6614,6614]]],[1565683756860,["GJX@GJXAIOU",[[1,6636,"`"]],[6636,6636],[6637,6637]]],[1565683759143,["GJX@GJXAIOU",[[-1,6639,"\n"]],[6639,6639],[6638,6638]]],[1565683759297,["GJX@GJXAIOU",[[-1,6638,"\n"]],[6638,6638],[6637,6637]]],[1565683763847,["GJX@GJXAIOU",[[-1,6684,"```"]],[6684,6687],[6684,6684]]],[1565683764242,["GJX@GJXAIOU",[[1,6684,"`"]],[6684,6684],[6685,6685]]],[1565683766320,["GJX@GJXAIOU",[[-1,6685,"\n"]],[6686,6686],[6685,6685]]],[1565683768029,["GJX@GJXAIOU",[[1,6722,"`"]],[6722,6722],[6723,6723]]],[1565683769991,["GJX@GJXAIOU",[[-1,6728,"\n"]],[6728,6728],[6727,6727]]],[1565683770937,["GJX@GJXAIOU",[[-1,6724,"```"]],[6727,6727],[6724,6724]]],[1565683771406,["GJX@GJXAIOU",[[-1,6724,"\n"]],[6724,6724],[6723,6723]]],[1565683774496,["GJX@GJXAIOU",[[1,6776,"``"]],[6773,6776],[6773,6778]]],[1565683776519,["GJX@GJXAIOU",[[-1,6773,"`````"]],[6773,6778],[6773,6773]]],[1565683779663,["GJX@GJXAIOU",[[1,6788,"``"]],[6785,6788],[6785,6790]]],[1565683781531,["GJX@GJXAIOU",[[-1,6785,"`````"]],[6785,6790],[6785,6785]]],[1565683782587,["GJX@GJXAIOU",[[1,6774,"`"]],[6774,6774],[6775,6775]]],[1565683783564,["GJX@GJXAIOU",[[1,6785,"`"]],[6785,6785],[6786,6786]]],[1565683784984,["GJX@GJXAIOU",[[-1,6788,"\n"]],[6789,6789],[6788,6788]]],[1565683785151,["GJX@GJXAIOU",[[-1,6787,"\n"]],[6788,6788],[6787,6787]]],[1565683785663,["GJX@GJXAIOU",[[-1,6786,"\n"]],[6787,6787],[6786,6786]]],[1565683788017,["GJX@GJXAIOU",[[-1,6845,"```"]],[6845,6848],[6845,6845]]],[1565683788956,["GJX@GJXAIOU",[[1,6845,"`"]],[6845,6845],[6846,6846]]],[1565683790391,["GJX@GJXAIOU",[[-1,6845,"`"]],[6846,6846],[6845,6845]]],[1565683790816,["GJX@GJXAIOU",[[-1,6846,"\n"]],[6845,6845],[6844,6844]]],[1565683791676,["GJX@GJXAIOU",[[1,6844,"`"]],[6844,6844],[6845,6845]]],[1565683793431,["GJX@GJXAIOU",[[-1,6815,"```"]],[6815,6818],[6815,6815]]],[1565683795226,["GJX@GJXAIOU",[[1,6816,"`"]],[6816,6816],[6817,6817]]],[1565683797223,["GJX@GJXAIOU",[[-1,6844,"\n"]],[6845,6845],[6844,6844]]],[1565683797583,["GJX@GJXAIOU",[[-1,6843,"\n"]],[6844,6844],[6843,6843]]],[1565683802776,["GJX@GJXAIOU",[[-1,6894,"#### "]],[6894,6899],[6894,6894]]],[1565683805577,["GJX@GJXAIOU",[[1,6542,"**"],[1,6552,"**"]],[6542,6552],[6542,6556]]],[1565683808703,["GJX@GJXAIOU",[[-1,6916,"> "]],[6918,6918],[6916,6916]]],[1565683809319,["GJX@GJXAIOU",[[-1,6915,"\n"]],[6916,6916],[6915,6915]]],[1565683812502,["GJX@GJXAIOU",[[-1,6950,"```"]],[6950,6953],[6950,6950]]],[1565683813671,["GJX@GJXAIOU",[[-1,6921,"```"]],[6921,6924],[6921,6921]]],[1565683814023,["GJX@GJXAIOU",[[-1,6921,"\n"]],[6921,6921],[6920,6920]]],[1565683814482,["GJX@GJXAIOU",[[-1,6920,"\n"]],[6920,6920],[6919,6919]]],[1565683817447,["GJX@GJXAIOU",[[-1,6914,"\n"]],[6915,6915],[6914,6914]]],[1565683819791,["GJX@GJXAIOU",[[-1,6945,"\n"]],[6945,6945],[6944,6944]]],[1565683820185,["GJX@GJXAIOU",[[-1,6944,"\n"]],[6944,6944],[6943,6943]]],[1565683822253,["GJX@GJXAIOU",[[1,6919,"`"]],[6919,6919],[6920,6920]]],[1565683822995,["GJX@GJXAIOU",[[1,6944,"`"]],[6944,6944],[6945,6945]]],[1565683878603,["GJX@GJXAIOU",[[1,6617,"- "]],[6617,6617],[6619,6619]]],[1565683880615,["GJX@GJXAIOU",[[-1,6643,"\n"]],[6644,6644],[6643,6643]]],[1565683886807,["GJX@GJXAIOU",[[-1,6728,"\n"]],[6729,6729],[6728,6728]]],[1565683889659,["GJX@GJXAIOU",[[1,6689,"- "]],[6689,6689],[6691,6691]]],[1565683892906,["GJX@GJXAIOU",[[-1,6779,"\n"]],[6779,6779],[6778,6778]]],[1565683893391,["GJX@GJXAIOU",[[-1,6778,"\n"]],[6778,6778],[6777,6777]]],[1565683894922,["GJX@GJXAIOU",[[1,6778,"- \n"]],[6777,6777],[6780,6780]]],[1565683897168,["GJX@GJXAIOU",[[-1,6778,"- "]],[6778,6780],[6778,6778]]],[1565683899467,["GJX@GJXAIOU",[[1,6779,"- "]],[6779,6779],[6781,6781]]],[1565683901911,["GJX@GJXAIOU",[[-1,6822,"\n"]],[6822,6822],[6821,6821]]],[1565683903764,["GJX@GJXAIOU",[[1,6822,"- "]],[6822,6822],[6824,6824]]],[1565683909507,["GJX@GJXAIOU",[[1,6923,"- "]],[6923,6923],[6925,6925]]],[1565683912079,["GJX@GJXAIOU",[[-1,6951,"\n"]],[6952,6952],[6951,6951]]],[1565683918743,["GJX@GJXAIOU",[[1,6989,"#"]],[6990,6990],[6997,6997]]],[1565684020207,["GJX@GJXAIOU",[[1,6541,"现在我们回到Github网站的项目首页，点击 `Branch:master` 下拉按钮，就会看到刚才推送的 `daily/00.1`分支了"]],[6541,6541],[6610,6610]]],[1565684028506,["GJX@GJXAIOU",[[1,6541,"c"],[-1,6563," "],[1,6564," "],[-1,6579," "],[1,6580," "],[-1,6594," "],[1,6595," "]],[6541,6541],[6542,6542]]],[1565684028664,["GJX@GJXAIOU",[[1,6542,"ha"]],[6542,6542],[6544,6544]]],[1565684028693,["GJX@GJXAIOU",[[-1,6543,"a"],[1,6544," "]],[6544,6544],[6543,6543]]],[1565684029027,["GJX@GJXAIOU",[[1,6543,"akan"]],[6543,6543],[6547,6547]]],[1565684029355,["GJX@GJXAIOU",[[1,6548," "]],[6547,6547],[6548,6548]]],[1565684030874,["GJX@GJXAIOU",[[-1,6541,"chakan "]],[6548,6548],[6541,6541]]],[1565684037948,["GJX@GJXAIOU",[[1,6541,"查看各个分支瑞松"]],[6541,6541],[6549,6549]]],[1565684038592,["GJX@GJXAIOU",[[-1,6547,"瑞松"]],[6549,6549],[6547,6547]]],[1565684042832,["GJX@GJXAIOU",[[1,6547,"推动的内筒"]],[6547,6547],[6552,6552]]],[1565684043657,["GJX@GJXAIOU",[[-1,6550,"内筒"]],[6552,6552],[6550,6550]]],[1565684044165,["GJX@GJXAIOU",[[1,6550,"ne"]],[6550,6550],[6552,6552]]],[1565684044220,["GJX@GJXAIOU",[[1,6550," "],[-1,6551,"e"]],[6552,6552],[6552,6552]]],[1565684044333,["GJX@GJXAIOU",[[1,6552,"i"]],[6552,6552],[6553,6553]]],[1565684044911,["GJX@GJXAIOU",[[-1,6551,"ni"]],[6553,6553],[6551,6551]]],[1565684047195,["GJX@GJXAIOU",[[1,6550,"内容："]],[6550,6550],[6553,6553]]],[1565684052110,["GJX@GJXAIOU",[[-1,6554,"现在我们回到"]],[6554,6560],[6554,6554]]],[1565684060265,["GJX@GJXAIOU",[[-1,6596,"刚才推送的 `daily/00.1`"]],[6596,6614],[6596,6596]]],[1565684061613,["GJX@GJXAIOU",[[1,6596,"各个"]],[6596,6596],[6598,6598]]],[1565684063336,["GJX@GJXAIOU",[[-1,6600,"了"]],[6601,6601],[6600,6600]]],[1565684067909,["GJX@GJXAIOU",[[1,6600,"，选择查看即可；"]],[6600,6600],[6608,6608]]],[1565684068415,["GJX@GJXAIOU",[[1,6609,"\n"]],[6608,6608],[6609,6609]]],[1565684072087,["GJX@GJXAIOU",[[1,6541,"\n"]],[6541,6541],[6542,6542]]],[1565684077455,["GJX@GJXAIOU",[[1,7057,"\n"]],[7056,7056],[7057,7057]]],[1565684077583,["GJX@GJXAIOU",[[1,7058,"\n"]],[7057,7057],[7058,7058]]],[1565684077712,["GJX@GJXAIOU",[[1,7059,"\n"]],[7058,7058],[7059,7059]]],[1565684085205,["GJX@GJXAIOU",[[1,7057,"### git "]],[7057,7057],[7065,7065]]],[1565684087270,["GJX@GJXAIOU",[[-1,7061,"git "]],[7065,7065],[7061,7061]]],[1565684094341,["GJX@GJXAIOU",[[1,7061,"将Github"]],[7061,7061],[7068,7068]]],[1565684094385,["GJX@GJXAIOU",[[1,7062," "]],[7068,7068],[7069,7069]]],[1565684095038,["GJX@GJXAIOU",[[1,7069,"上"]],[7069,7069],[7070,7070]]],[1565684095083,["GJX@GJXAIOU",[[1,7069," "]],[7070,7070],[7071,7071]]],[1565684098068,["GJX@GJXAIOU",[[1,7071,"最新版"]],[7071,7071],[7074,7074]]],[1565684165010,[null,[[-1,6555,"到"],[1,6597,"到"],[-1,6599,"`"],[1,6601,"支"],[-1,6609,"了"],[1,7057,"\n"],[-1,7074,"\n"]],[6555,6555],[7074,7074]]],[1565684165011,[null,[[1,6555,"到"],[-1,6596,"到"],[1,6599,"`"],[-1,6600,"支"],[1,6609,"了"],[-1,7056,"\n"],[1,7074,"\n"]],[7074,7074],[6555,6555]]],[1565684107613,["GJX@GJXAIOU",[[1,7074,"拉到本地"]],[7074,7074],[7078,7078]]],[1565684109329,["GJX@GJXAIOU",[[1,7081,"\n"]],[7078,7078],[7079,7079]]],[1565684116697,["GJX@GJXAIOU",[[1,7080,"#### **git pull**\n\n> 将服务器上的最新代码拉取到本地\n\n```\ngit pull origin daily/0.0.1\n```\n\n如果其它项目成员对项目做了改动并推送到服务器，我们需要将最新的改动更新到本地，这里我们来模拟一下这种情况。\n\n进入Github网站的项目首页，再进入 `daily/0.0.1` 分支，在线对 `README.md` 文件做一些修改并保存，然后在命令中执行以上命令，它将把刚才在线修改的部分拉取到本地，用编辑器打开 `README.md` ，你会发现文件已经跟线上的内容同步了。\n\n_如果线上代码做了变动，而你本地的代码也有变动，拉取的代码就有可能会跟你本地的改动冲突，一般情况下 __`Git` 会自动处理这种冲突合并，但如果改动的是同一行，那就需要手动来合并代码，编辑文件，保存最新的改动，再通过 `git add .` 和 `git commit -m 'xxx'` 来提交合并。_"]],[7080,7080],[7498,7498]]],[1565684120471,["GJX@GJXAIOU",[[-1,7080,"#### "]],[7080,7085],[7080,7080]]],[1565684121744,["GJX@GJXAIOU",[[-1,7094,"> "]],[7094,7096],[7094,7094]]],[1565684122095,["GJX@GJXAIOU",[[-1,7093,"\n"]],[7094,7094],[7093,7093]]],[1565684122656,["GJX@GJXAIOU",[[-1,7092,"\n"]],[7093,7093],[7092,7092]]],[1565684124420,["GJX@GJXAIOU",[[-1,7092,""],[1,7092,"："],[-1,7220," "],[1,7221," "],[-1,7234," "],[1,7235," "],[-1,7241," "],[1,7242," "],[-1,7253," "],[1,7254," "],[-1,7302," "],[1,7303," "],[-1,7314," "],[1,7315," "],[-1,7385," "],[1,7386," "],[-1,7393," "],[1,7394," "],[-1,7445," "],[1,7446," "],[-1,7457," 和 "],[1,7460," 和 "],[-1,7481," "],[1,7482," "]],[7092,7092],[7093,7093]]],[1565684128125,["GJX@GJXAIOU",[[1,7114,"·"]],[7114,7114],[7115,7115]]],[1565684129519,["GJX@GJXAIOU",[[-1,7114,"·"]],[7115,7115],[7114,7114]]],[1565684129957,["GJX@GJXAIOU",[[1,7114,"`"]],[7114,7114],[7115,7115]]],[1565684131275,["GJX@GJXAIOU",[[1,7142,"`"]],[7142,7142],[7143,7143]]],[1565684132705,["GJX@GJXAIOU",[[-1,7110,"```"]],[7110,7113],[7110,7110]]],[1565684133111,["GJX@GJXAIOU",[[-1,7110,"\n"]],[7110,7110],[7109,7109]]],[1565684134233,["GJX@GJXAIOU",[[-1,7140,"```"]],[7140,7143],[7140,7140]]],[1565684134599,["GJX@GJXAIOU",[[-1,7141,"\n"]],[7140,7140],[7139,7139]]],[1565684160718,["GJX@GJXAIOU",[[-1,7331,"_"]],[7332,7332],[7331,7331]]],[1565684225011,[null,[[-1,6555,"到"],[1,6597,"到"],[-1,6599,"`"],[1,6601,"支"],[-1,6609,"了"],[1,7057,"\n"],[1,7331,""],[-1,7483,"\n"]],[6555,6555],[7483,7483]]],[1565684225011,[null,[[1,6555,"到"],[-1,6596,"到"],[1,6599,"`"],[-1,6600,"支"],[1,6609,"了"],[-1,7056,"\n"],[-1,7331,""],[1,7483,"\n"]],[7483,7483],[6555,6555]]],[1565684167631,["GJX@GJXAIOU",[[-1,7380,"__"]],[7382,7382],[7380,7380]]],[1565684170265,["GJX@GJXAIOU",[[-1,7384,"`"]],[7385,7385],[7384,7384]]],[1565684171297,["GJX@GJXAIOU",[[-1,7380,"`"]],[7381,7381],[7380,7380]]],[1565684174367,["GJX@GJXAIOU",[[-1,7478,"_"]],[7478,7479],[7478,7478]]],[1565684224543,["GJX@GJXAIOU",[[1,3183,"提交记录可能会非常多，按 `J` 键往下翻，按 `K` 键往上翻，按 `Q` 键退出查看"]],[3183,3183],[3227,3227]]],[1565684285012,[null,[[-1,6599,"到"],[1,6641,"到"],[-1,6643,"`"],[1,6645,"支"],[-1,6653,"了"],[1,7101,"\n"],[1,7375,""],[-1,7522,"\n"]],[6599,6599],[7522,7522]]],[1565684285012,[null,[[1,6599,"到"],[-1,6640,"到"],[1,6643,"`"],[-1,6644,"支"],[1,6653,"了"],[-1,7100,"\n"],[-1,7375,""],[1,7522,"\n"]],[7522,7522],[6599,6599]]],[1565684262208,["GJX@GJXAIOU",[[1,7524,"\n"]],[7522,7522],[7523,7523]]],[1565684262344,["GJX@GJXAIOU",[[1,7525,"\n"]],[7523,7523],[7524,7524]]],[1565684262472,["GJX@GJXAIOU",[[1,7526,"\n"]],[7524,7524],[7525,7525]]],[1565684262578,["GJX@GJXAIOU",[[1,7527,"\n"]],[7525,7525],[7526,7526]]],[1565684262696,["GJX@GJXAIOU",[[1,7528,"\n"]],[7526,7526],[7527,7527]]],[1565684262816,["GJX@GJXAIOU",[[1,7529,"\n"]],[7527,7527],[7528,7528]]],[1565684262937,["GJX@GJXAIOU",[[1,7530,"\n"]],[7528,7528],[7529,7529]]],[1565684263058,["GJX@GJXAIOU",[[1,7531,"\n"]],[7529,7529],[7530,7530]]],[1565684265799,["GJX@GJXAIOU",[[1,7525,"### "]],[7525,7525],[7529,7529]]],[1565684267300,["GJX@GJXAIOU",[[-1,3195," `J` "],[1,3200," `J` "],[-1,3206," `K` "],[1,3211," `K` "],[-1,3217," `Q` "],[1,3222," `Q` "],[1,7529,"banb"]],[7529,7529],[7533,7533]]],[1565684268415,["GJX@GJXAIOU",[[-1,7529,"banb"]],[7533,7533],[7529,7529]]],[1565684270716,["GJX@GJXAIOU",[[1,7529,"版本标记"]],[7529,7529],[7533,7533]]],[1565684271632,["GJX@GJXAIOU",[[1,7540,"\n"]],[7533,7533],[7534,7534]]],[1565684278122,["GJX@GJXAIOU",[[1,7535,"#### **git tag**\n\n> 为项目标记里程碑\n\n```\ngit tag publish/0.0.1\n```\n\n当我们完成某个功能需求准备发布上线时，应该将此次完整的项目代码做个标记，并将这个标记好的版本发布到线上，这里我们以 `publish/0.0.1` 为标记名并发布，当看到命令行返回如下内容则表示发布成功了\n\n```\nTotal 0 (delta 0), reused 0 (delta 0)\n```"]],[7535,7535],[7745,7745]]],[1565684280770,["GJX@GJXAIOU",[[-1,7535,"####"]],[7535,7539],[7535,7535]]],[1565684282351,["GJX@GJXAIOU",[[-1,7549,"> "]],[7551,7551],[7549,7549]]],[1565684282743,["GJX@GJXAIOU",[[-1,7548,"\n"]],[7549,7549],[7548,7548]]],[1565684283184,["GJX@GJXAIOU",[[-1,7547,"\n"]],[7548,7548],[7547,7547]]],[1565684284388,["GJX@GJXAIOU",[[1,7547,"："],[-1,7645," "],[1,7646," "],[-1,7661," "],[1,7662," "]],[7547,7547],[7548,7548]]],[1565684345013,[null,[[-1,6599,"到"],[1,6641,"到"],[-1,6643,"`"],[1,6645,"支"],[-1,6653,"了"],[1,7100,"\n"],[-1,7738,"\n"]],[6599,6599],[7738,7738]]],[1565684345013,[null,[[1,6599,"到"],[-1,6640,"到"],[1,6643,"`"],[-1,6644,"支"],[1,6653,"了"],[-1,7099,"\n"],[1,7738,"\n"]],[7738,7738],[6599,6599]]],[1565684287056,["GJX@GJXAIOU",[[-1,7584,"```"]],[7584,7587],[7584,7584]]],[1565684288128,["GJX@GJXAIOU",[[-1,7558,"```"]],[7558,7561],[7558,7558]]],[1565684290497,["GJX@GJXAIOU",[[-1,7558,"\n"]],[7558,7558],[7557,7557]]],[1565684290809,["GJX@GJXAIOU",[[-1,7557,"\n"]],[7557,7557],[7556,7556]]],[1565684293171,["GJX@GJXAIOU",[[1,7557,"\n"]],[7557,7557],[7558,7558]]],[1565684293661,["GJX@GJXAIOU",[[1,7558,"·"]],[7558,7558],[7559,7559]]],[1565684301224,["GJX@GJXAIOU",[[-1,7558,"·"]],[7559,7559],[7558,7558]]],[1565684301927,["GJX@GJXAIOU",[[1,7558,"·"]],[7558,7558],[7559,7559]]],[1565684302848,["GJX@GJXAIOU",[[-1,7558,"·"]],[7559,7559],[7558,7558]]],[1565684303260,["GJX@GJXAIOU",[[1,7558,"`"]],[7558,7558],[7559,7559]]],[1565684310457,["GJX@GJXAIOU",[[1,7559,"``\n"],[1,7580,"\n```"]],[7558,7580],[7587,7587]]],[1565684312505,["GJX@GJXAIOU",[[1,7584,"\n"]],[7583,7583],[7584,7584]]],[1565684321762,["GJX@GJXAIOU",[[1,7585,"\n"]],[7583,7583],[7584,7584]]],[1565684322105,["GJX@GJXAIOU",[[1,7584,"git  push origin publish/0.0.1"]],[7584,7584],[7614,7614]]],[1565684325720,["GJX@GJXAIOU",[[-1,7615,"\n"]],[7615,7615],[7614,7614]]],[1565684326546,["GJX@GJXAIOU",[[-1,7620,"\n"]],[7620,7620],[7619,7619]]],[1565684328265,["GJX@GJXAIOU",[[-1,7723,"\n"]],[7723,7723],[7722,7722]]],[1565684338736,["GJX@GJXAIOU",[[1,7727,"\n"],[1,7764,"\nTo https://github.com/gafish/gafish.github.com.git\n * [new tag]         publish/0.0.1 -> publish/0.0.1"]],[7727,7764],[7868,7868]]],[1565684340922,["GJX@GJXAIOU",[[-1,7727,"\n"]],[7727,7727],[7726,7726]]],[1565684405017,[null,[[-1,6599,"到"],[1,6641,"到"],[-1,6643,"`"],[1,6645,"支"],[-1,6653,"了"],[1,7100,"\n"],[-1,7871,"\n"]],[6599,6599],[7871,7871]]],[1565684405017,[null,[[1,6599,"到"],[-1,6640,"到"],[1,6643,"`"],[-1,6644,"支"],[1,6653,"了"],[-1,7099,"\n"],[1,7871,"\n"]],[7871,7871],[6599,6599]]],[1565684366323,["GJX@GJXAIOU",[[1,7873,"### hui"]],[7873,7873],[7880,7880]]],[1565684367255,["GJX@GJXAIOU",[[-1,7877,"hui"]],[7880,7880],[7877,7877]]],[1565684375363,["GJX@GJXAIOU",[[1,7877,"忽略推送文件"]],[7877,7877],[7883,7883]]],[1565684375777,["GJX@GJXAIOU",[[1,7887,"\n"]],[7883,7883],[7884,7884]]],[1565684381976,["GJX@GJXAIOU",[[1,7885,"设置哪些内容不需要推送到服务器，这是一个配置文件"]],[7885,7885],[7909,7909]]],[1565684386103,["GJX@GJXAIOU",[[-1,7901,"这是一个"]],[7901,7905],[7901,7901]]],[1565684387285,["GJX@GJXAIOU",[[1,7901,"使用"]],[7901,7901],[7903,7903]]],[1565684393115,["GJX@GJXAIOU",[[1,7907,"``"]],[7907,7907],[7909,7909]]],[1565684394289,["GJX@GJXAIOU",[[1,7908,"#### **.gitignore**"]],[7908,7908],[7927,7927]]],[1565684397143,["GJX@GJXAIOU",[[-1,7908,"#### "]],[7908,7913],[7908,7908]]],[1565684398561,["GJX@GJXAIOU",[[-1,7908,"**"]],[7910,7910],[7908,7908]]],[1565684401265,["GJX@GJXAIOU",[[-1,7918,"**"]],[7920,7920],[7918,7918]]],[1565684465014,[null,[[-1,6599,"到"],[1,6641,"到"],[-1,6643,"`"],[1,6645,"支"],[-1,6653,"了"],[1,7100,"\n"],[-1,7919,"\n"]],[6599,6599],[7919,7919]]],[1565684465014,[null,[[1,6599,"到"],[-1,6640,"到"],[1,6643,"`"],[-1,6644,"支"],[1,6653,"了"],[-1,7099,"\n"],[1,7919,"\n"]],[7919,7919],[6599,6599]]],[1565684408360,["GJX@GJXAIOU",[[1,7922,"\n"]],[7919,7919],[7920,7920]]],[1565684408754,["GJX@GJXAIOU",[[1,7920,"```\ntouch .gitignore\n```\n\n`.gitignore` 不是 `Git` 命令，而在项目中的一个文件，通过设置 `.gitignore` 的内容告诉 `Git` 哪些文件应该被忽略不需要推送到服务器，通过以上命令可以创建一个 `.gitignore` 文件，并在编辑器中打开文件，每一行代表一个要忽略的文件或目录，如：\n\n```\ndemo.html\n```\n\n以上内容的意思是 `Git` 将忽略 `demo.html` 文件 和 `build/` 目录，这些内容不会被推送到服务器上"]],[7920,7920],[8173,8173]]],[1565684420949,["GJX@GJXAIOU",[[1,8096,"\n"],[1,8105,"\nbuild/"]],[8096,8105],[8113,8113]]],[1565684423055,["GJX@GJXAIOU",[[-1,8096,"\n"]],[8096,8096],[8095,8095]]],[1565684705019,[null,[[-1,6599,"到"],[1,6641,"到"],[-1,6643,"`"],[1,6645,"支"],[-1,6653,"了"],[1,7100,"\n"],[-1,8180,"\n"]],[6599,6599],[8180,8180]]],[1565684705019,[null,[[1,6599,"到"],[-1,6640,"到"],[1,6643,"`"],[-1,6644,"支"],[1,6653,"了"],[-1,7099,"\n"],[1,8180,"\n"]],[8180,8180],[6599,6599]]],[1565684654751,["GJX@GJXAIOU",[[1,8183,"\n"]],[8181,8181],[8182,8182]]],[1565684654865,["GJX@GJXAIOU",[[1,8184,"\n"]],[8182,8182],[8183,8183]]],[1565684655012,["GJX@GJXAIOU",[[1,8185,"\n"]],[8183,8183],[8184,8184]]],[1565684655110,["GJX@GJXAIOU",[[1,8186,"\n"]],[8184,8184],[8185,8185]]],[1565684655234,["GJX@GJXAIOU",[[1,8187,"\n"]],[8185,8185],[8186,8186]]],[1565684655344,["GJX@GJXAIOU",[[1,8188,"\n"]],[8186,8186],[8187,8187]]],[1565684655456,["GJX@GJXAIOU",[[1,8189,"\n"]],[8187,8187],[8188,8188]]],[1565684655577,["GJX@GJXAIOU",[[1,8190,"\n"]],[8188,8188],[8189,8189]]],[1565684655712,["GJX@GJXAIOU",[[1,8191,"\n"]],[8189,8189],[8190,8190]]],[1565684655843,["GJX@GJXAIOU",[[1,8192,"\n"]],[8190,8190],[8191,8191]]],[1565684655953,["GJX@GJXAIOU",[[1,8193,"\n"]],[8191,8191],[8192,8192]]],[1565684656079,["GJX@GJXAIOU",[[1,8194,"\n"]],[8192,8192],[8193,8193]]],[1565684656208,["GJX@GJXAIOU",[[1,8195,"\n"]],[8193,8193],[8194,8194]]],[1565684656336,["GJX@GJXAIOU",[[1,8196,"\n"]],[8194,8194],[8195,8195]]],[1565684656456,["GJX@GJXAIOU",[[1,8197,"\n"]],[8195,8195],[8196,8196]]],[1565684656587,["GJX@GJXAIOU",[[1,8198,"\n"]],[8196,8196],[8197,8197]]],[1565684656712,["GJX@GJXAIOU",[[1,8199,"\n"]],[8197,8197],[8198,8198]]],[1565684656831,["GJX@GJXAIOU",[[1,8200,"\n"]],[8198,8198],[8199,8199]]],[1565684656949,["GJX@GJXAIOU",[[1,8201,"\n"]],[8199,8199],[8200,8200]]],[1565684657079,["GJX@GJXAIOU",[[1,8202,"\n"]],[8200,8200],[8201,8201]]],[1565684659730,["GJX@GJXAIOU",[[1,8184,"## "]],[8184,8184],[8187,8187]]],[1565684660877,["GJX@GJXAIOU",[[-1,7958," 不是 "],[1,7962," 不是 "],[-1,7967," "],[1,7968," "],[-1,7986," "],[1,7987," "],[-1,7999," "],[1,8000," "],[-1,8005," "],[1,8006," "],[-1,8011," "],[1,8012," "],[-1,8043," "],[1,8044," "],[-1,8056," "],[1,8057," "],[-1,8126," "],[1,8127," "],[-1,8132," 将忽略 "],[1,8137," 将忽略 "],[-1,8148," "],[1,8149," "],[-1,8153," "],[1,8154," "],[-1,8162," "],[1,8163," "],[1,8187,"jin"]],[8187,8187],[8190,8190]]],[1565684661728,["GJX@GJXAIOU",[[-1,8186," jin"]],[8190,8190],[8186,8186]]],[1565684668045,["GJX@GJXAIOU",[[1,8186," 进阶知识点"]],[8186,8186],[8192,8192]]],[1565684668385,["GJX@GJXAIOU",[[1,8211,"\n"]],[8192,8192],[8193,8193]]],[1565684670096,["GJX@GJXAIOU",[[1,8212,"\n"]],[8193,8193],[8194,8194]]],[1565684672461,["GJX@GJXAIOU",[[1,8194,"## **深入探索**\n\n### **基本概念**\n\n#### **工作区（Working Directory）**\n\n就是你在电脑里能看到的目录，比如上文中的 `gafish.github.com`文件夹就是一个工作区 \n\n![](https://mmbiz.qpic.cn/mmbiz_png/JfTPiahTHJhpibRAib4ypnbXhb1w94Ria1fDpw1YGShDLvKaYibbEHKBicwcxQyoM2VtzHhoHpzIYdenkBJfbGRpkKXw/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1)\n\n#### **本地版本库（Local Repository）**\n\n工作区有一个隐藏目录 `.git`，这个不算工作区，而是 `Git`的版本库。 \n\n![](https://mmbiz.qpic.cn/mmbiz_jpg/JfTPiahTHJhpibRAib4ypnbXhb1w94Ria1fDdkPDQ62k58WYYeeXCyZIJeS72I4XCpYvwkgFiajmURsA4agaH4GnBpA/640?wx_fmt=jpeg&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1)\n\n#### **暂存区（stage）**\n\n本地版本库里存了很多东西，其中最重要的就是称为 `stage`（或者叫index）的暂存区，还有 `Git` 为我们自动创建的第一个分支 `master`，以及指向 `master` 的一个指针叫 `HEAD`。\n\n#### **远程版本库（Remote Repository）**\n\n一般指的是 `Git` 服务器上所对应的仓库，本文的示例所在的`github`仓库就是一个远程版本库 \n\n![](https://mmbiz.qpic.cn/mmbiz_png/JfTPiahTHJhpibRAib4ypnbXhb1w94Ria1fD7uohhZIsicJ1nL28tkEXzOqnI3SHm2M65KvXiaYDXiaxTX24mRkcTpMsA/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1)\n\n#### **以上概念之间的关系**\n\n`工作区`、`暂存区`、`本地版本库`、`远程版本库`之间几个常用的 `Git`操作流程如下图所示： \n\n![](https://mmbiz.qpic.cn/mmbiz_png/JfTPiahTHJhpibRAib4ypnbXhb1w94Ria1fDHQfFWBfBX5hwmhnNNImcOm6ttH0ULViabRocsoV0SE9FXGxOK0XE2mA/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1)\n\n#### **分支（Branch）**\n\n分支是为了将修改记录的整个流程分开存储，让分开的分支不受其它分支的影响，所以在同一个数据库里可以同时进行多个不同的修改 \n\n![](https://mmbiz.qpic.cn/mmbiz_png/JfTPiahTHJhpibRAib4ypnbXhb1w94Ria1fD0g4DDtdVlLjDSPLEicDsSCjfehKVzhEibsKUwibZhMoxDrjFETox38lfQ/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1)\n\n#### **主分支（Master）**\n\n前面提到过 `master` 是 `Git` 为我们自动创建的第一个分支，也叫主分支，其它分支开发完成后都要合并到 `master`\n\n![](https://mmbiz.qpic.cn/mmbiz_png/JfTPiahTHJhpibRAib4ypnbXhb1w94Ria1fDzobibXXDhEcyMO1M6JoIr2G9Bn4czUVadgbyoc6c7Du8zNQMoictw7qg/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1)\n\n#### **标签（Tag）**\n\n标签是用于标记特定的点或提交的历史，通常会用来标记发布版本的名称或版本号（如：`publish/0.0.1`），虽然标签看起来有点像分支，但打上标签的提交是固定的，不能随意的改动，参见上图中的`1.0` / `2.0` / `3.0`\n\n#### **HEAD**\n\n`HEAD`指向的就是当前分支的最新提交 \n\n![](https://mmbiz.qpic.cn/mmbiz_png/JfTPiahTHJhpibRAib4ypnbXhb1w94Ria1fDltHy65E6ErjC94IGzefLfMB3pk3e36SibJficoYWbZqsemnD4Qwu5fFA/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1)\n\n> 以上概念了解的差不多，那就可以继续往下看，下面将以具体的操作类型来讲解 `Git` 的高阶用法\n\n### **操作文件**\n\n#### **git add**\n\n> 添加文件到暂存区\n\n```\ngit add -i\n```\n\n通过此命令将打开交互式子命令系统，你将看到如下子命令\n\n```\n***Commands***\n```\n\n通过输入序列号或首字母可以选择相应的功能，具体的功能解释如下：\n\n*   `status`：功能上和 `git add -i` 相似，没什么鸟用\n\n*   `update`：详见下方 `git add -u`\n\n*   `revert`：把已经添加到暂存区的文件从暂存区剔除，其操作方式和 `update` 类似\n\n*   `add untracked`：可以把新增的文件添加到暂存区，其操作方式和 `update` 类似\n\n*   `patch`：详见下方 `git add -p`\n\n*   `diff`：比较暂存区文件和本地版本库的差异，其操作方式和 `update` 类似\n\n*   `quit`：退出 `git add -i` 命令系统\n\n*   `help`：查看帮助信息\n\n```\ngit add -p\n```\n\n直接进入交互命令中最有用的 `patch` 模式\n\n这是交互命令中最有用的模式，其操作方式和 `update` 类似，选择后 `Git` 会显示这些文件的当前内容与本地版本库中的差异，然后您可以自己决定是否添加这些修改到暂存区，在命令行 `Stage deletion [y,n,q,a,d,/,?]?` 后输入 `y,n,q,a,d,/,?` 其中一项选择操作方式，具体功能解释如下：\n\n*   y：接受修改\n\n*   n：忽略修改\n\n*   q：退出当前命令\n\n*   a：添加修改\n\n*   d：放弃修改\n\n*   /：通过正则表达式匹配修改内容\n\n*   ?：查看帮助信息\n\n```\ngit add -u\n```\n\n直接进入交互命令中的 `update` 模式\n\n它会先列出工作区 `修改` 或 `删除` 的文件列表，`新增` 的文件不会被显示，在命令行 `Update>>` 后输入相应的列表序列号表示选中该项，回车继续选择，如果已选好，直接回车回到命令主界面\n\n```\ngit add --ignore-removal .\n```\n\n添加工作区 `修改` 或 `新增` 的文件列表， `删除` 的文件不会被添加\n\n#### **git commit**\n\n> 把暂存区的文件提交到本地版本库\n\n```\ngit commit -m '第一行提交原因'  -m '第二行提交原因'\n```\n\n不打开编辑器，直接在命令行中输入多行提交原因\n\n```\ngit commit -am '提交原因'\n```\n\n将工作区 `修改` 或 `删除` 的文件提交到本地版本库， `新增` 的文件不会被提交\n\n```\ngit commit --amend -m '提交原因'\n```\n\n修改最新一条提交记录的提交原因\n\n```\ngit commit -C HEAD\n```\n\n将当前文件改动提交到 `HEAD` 或当前分支的历史ID\n\n#### **git mv**\n\n> 移动或重命名文件、目录\n\n```\ngit mv a.md b.md -f\n```\n\n将 `a.md` 重命名为 `b.md` ，同时添加变动到暂存区，加 `-f` 参数可以强制重命名，相比用 `mv a.md b.md` 命令省去了 `git add` 操作\n\n#### **git rm**\n\n> 从工作区和暂存区移除文件\n\n```\ngit rm b.md\n```\n\n从工作区和暂存区移除文件 `b.md` ，同时添加变动到暂存区，相比用 `rm b.md` 命令省去了 `git add` 操作\n\n```\ngit rm src/ -r\n```\n\n允许从工作区和暂存区移除目录\n\n#### **git status**\n\n```\ngit status -s\n```\n\n以简短方式查看工作区和暂存区文件状态，示例如下：\n\nM demo.html\n?? test.html \n\n```\ngit status --ignored\n```\n\n查看工作区和暂存区文件状态，包括被忽略的文件\n\n### **操作分支**\n\n#### **git branch**\n\n> 查看、创建、删除分支\n\n```\ngit branch -a\n```\n\n查看本地版本库和远程版本库上的分支列表\n\n```\ngit branch -r\n```\n\n查看远程版本库上的分支列表，加上 `-d` 参数可以删除远程版本库上的分支\n\n```\ngit branch -D\n```\n\n分支未提交到本地版本库前强制删除分支\n\n```\ngit branch -vv\n```\n\n查看带有最后提交id、最近提交原因等信息的本地版本库分支列表 \n\n![](https://mmbiz.qpic.cn/mmbiz_png/JfTPiahTHJhpibRAib4ypnbXhb1w94Ria1fD2c8Mic5G8sib5EPkrKnNQ5nKVUrBb6z08Jic5lKCD0WLRjEibLc73W08qg/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1)\n\n#### **git merge**\n\n> 将其它分支合并到当前分支\n\n```\ngit merge --squash\n```\n\n将待合并分支上的 `commit` 合并成一个新的 `commit`放入当前分支，适用于待合并分支的提交记录不需要保留的情况 \n\n![](https://mmbiz.qpic.cn/mmbiz_gif/JfTPiahTHJhpibRAib4ypnbXhb1w94Ria1fDIrnwSJKjgesKaXqqdec9FRUnIEHwnCnI1mrFG0ov0YEcCHwdqYNxUQ/640?wx_fmt=gif&tp=webp&wxfrom=5&wx_lazy=1)\n\ngit merge --no-ff \n\n默认情况下，`Git` 执行\"`快进式合并`\"（fast-farward merge），会直接将 `Master` 分支指向 `Develop` 分支，使用 `--no-ff` 参数后，会执行正常合并，在 `Master`分支上生成一个新节点，保证版本演进更清晰。 \n\n![](https://mmbiz.qpic.cn/mmbiz_png/JfTPiahTHJhpibRAib4ypnbXhb1w94Ria1fDkQfrlybgcUKd1jq8QibHUketIhSSHibRPQ0PywAHYLh29TCNEhJ7vjIA/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1)\n\n```\ngit merge --no-edit\n```\n\n在没有冲突的情况下合并，不想手动编辑提交原因，而是用 `Git` 自动生成的类似 `Merge branch 'test'`的文字直接提交\n\n#### **git checkout**\n\n> 切换分支\n\n```\ngit checkout -b daily/0.0.1\n```\n\n创建 `daily/0.0.1` 分支，同时切换到这个新创建的分支\n\n```\ngit checkout HEAD demo.html\n```\n\n从本地版本库的 `HEAD`（也可以是提交ID、分支名、Tag名） 历史中检出 `demo.html` 覆盖当前工作区的文件，如果省略 `HEAD` 则是从暂存区检出\n\n```\ngit checkout --orphan new_branch\n```\n\n这个命令会创建一个全新的，完全没有历史记录的新分支，但当前源分支上所有的最新文件都还在，真是强迫症患者的福音，但这个新分支必须做一次 `git commit` 操作后才会真正成为一个新分支。\n\n```\ngit checkout -p other_branch\n```\n\n这个命令主要用来比较两个分支间的差异内容，并提供交互式的界面来选择进一步的操作，这个命令不仅可以比较两个分支间的差异，还可以比较单个文件的差异。\n\n#### **git stash**\n\n> 在 `Git` 的栈中保存当前修改或删除的工作进度，当你在一个分支里做某项功能开发时，接到通知把昨天已经测试完没问题的代码发布到线上，但这时你已经在这个分支里加入了其它未提交的代码，这个时候就可以把这些未提交的代码存到栈里。\n\n```\ngit stash\n```\n\n将未提交的文件保存到Git栈中\n\n```\ngit stash list\n```\n\n查看栈中保存的列表\n\n```\ngit stash show stash@{0}\n```\n\n显示栈中其中一条记录\n\n```\ngit stash drop stash@{0}\n```\n\n移除栈中其中一条记录\n\n```\ngit stash pop\n```\n\n从Git栈中检出最新保存的一条记录，并将它从栈中移除\n\n```\ngit stash apply stash@{0}\n```\n\n从Git栈中检出其中一条记录，但不从栈中移除\n\n```\ngit stash branch new_banch\n```\n\n把当前栈中最近一次记录检出并创建一个新分支\n\n```\ngit stash clear\n```\n\n清空栈里的所有记录\n\n```\ngit stash create\n```\n\n为当前修改或删除的文件创建一个自定义的栈并返回一个ID，此时并未真正存储到栈里\n\n```\ngit stash store xxxxxx\n```\n\n将 `create` 方法里返回的ID放到 `store` 后面，此时在栈里真正创建了一个记录，但当前修改或删除的文件并未从工作区移除\n\n```\n$ git stash create\n```\n\n### **操作历史**\n\n#### **git log**\n\n> 显示提交历史记录\n\n```\ngit log -p\n```\n\n显示带提交差异对比的历史记录\n\n```\ngit log demo.html\n```\n\n显示 `demo.html` 文件的历史记录\n\n```\ngit log --since=\"2 weeks ago\"\n```\n\n显示2周前开始到现在的历史记录，其它时间可以类推\n\n```\ngit log --before=\"2 weeks ago\"\n```\n\n显示截止到2周前的历史记录，其它时间可以类推\n\n```\ngit log -10\n```\n\n显示最近10条历史记录\n\n```\ngit log f5f630a..HEAD\n```\n\n显示从提交ID `f5f630a` 到 `HEAD` 之间的记录，`HEAD` 可以为空或其它提交ID\n\n```\ngit log --pretty=oneline\n```\n\n在一行中输出简短的历史记录\n\n```\ngit log --pretty=format:\"%h\" \n```\n\n格式化输出历史记录\n\n`Git` 用各种 `placeholder` 来决定各种显示内容，我挑几个常用的显示如下：\n\n*   %H: commit hash\n\n*   %h: 缩短的commit hash\n\n*   %T: tree hash\n\n*   %t: 缩短的 tree hash\n\n*   %P: parent hashes\n\n*   %p: 缩短的 parent hashes\n\n*   %an: 作者名字\n\n*   %aN: mailmap的作者名\n\n*   %ae: 作者邮箱\n\n*   %ad: 日期 (--date= 制定的格式)\n\n*   %ar: 日期, 相对格式(1 day ago)\n\n*   %cn: 提交者名字\n\n*   %ce: 提交者 email\n\n*   %cd: 提交日期 (--date= 制定的格式)\n\n*   %cr: 提交日期, 相对格式(1 day ago)\n\n*   %d: ref名称\n\n*   %s: commit信息标题\n\n*   %b: commit信息内容\n\n*   %n: 换行\n\n#### **git cherry-pick**\n\n> 合并分支的一条或几条提交记录到当前分支末梢\n\n```\ngit cherry-pick 170a305\n```\n\n合并提交ID `170a305` 到当前分支末梢\n\n#### **git reset**\n\n> 将当前的分支重设（reset）到指定的 `<commit>` 或者 `HEAD`\n\n```\ngit reset --mixed <commit>\n```\n\n`--mixed` 是不带参数时的默认参数，它退回到某个版本，保留文件内容，回退提交历史\n\n```\ngit reset --soft <commit>\n```\n\n暂存区和工作区中的内容不作任何改变，仅仅把 `HEAD` 指向 `<commit>`\n\n```\ngit reset --hard <commit>\n```\n\n自从 `<commit>` 以来在工作区中的任何改变都被丢弃，并把 `HEAD` 指向 `<commit>`\n\n#### **git rebase**\n\n> 重新定义分支的版本库状态\n\n```\ngit rebase branch_name\n```\n\n合并分支，这跟 `merge`很像，但还是有本质区别，看下图： \n\n![](https://mmbiz.qpic.cn/mmbiz_png/JfTPiahTHJhpibRAib4ypnbXhb1w94Ria1fDU8Qr5GB7XGSTdFnZVSsFianibwjibOhMfmdibic0HhAHebffQrEoYib4WkkQ/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1)\n\n合并过程中可能需要先解决冲突，然后执行 `git rebase --continue`\n\n```\ngit rebase -i HEAD~~\n```\n\n打开文本编辑器，将看到从 `HEAD` 到 `HEAD~~` 的提交如下\n\n```\npick 9a54fd4 添加commit的说明\n```\n\n将第一行的 `pick` 改成 `Commands` 中所列出来的命令，然后保存并退出，所对应的修改将会生效。\n\n如果移动提交记录的顺序，将改变历史记录中的排序。\n\n#### **git revert**\n\n> 撤销某次操作，此次操作之前和之后的 `commit` 和 `history` 都会保留，并且把这次撤销作为一次最新的提交\n\n```\ngit revert HEAD\n```\n\n撤销前一次提交操作\n\n```\ngit revert HEAD --no-edit\n```\n\n撤销前一次提交操作，并以默认的 `Revert \"xxx\"` 为提交原因\n\n```\ngit revert -n HEAD\n```\n\n需要撤销多次操作的时候加 `-n` 参数，这样不会每次撤销操作都提交，而是等所有撤销都完成后一起提交\n\n#### **git diff**\n\n> 查看工作区、暂存区、本地版本库之间的文件差异，用一张图来解释\n\n![](https://mmbiz.qpic.cn/mmbiz_png/JfTPiahTHJhpibRAib4ypnbXhb1w94Ria1fDiaibYtUs7nmNpWNZP1s4khMMflaPfYExywTcCGJLXTZAa9A0oBDFbb2g/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1)\n\n```\ngit diff --stat\n```\n\n通过 `--stat` 参数可以查看变更统计数据\n\n```\n test.md | 1 -\n```\n\n#### git reflog\n\n`reflog` 可以查看所有分支的所有操作记录（包括commit和reset的操作、已经被删除的commit记录，跟 `git log`的区别在于它不能查看已经删除了的commit记录 \n\n![](https://mmbiz.qpic.cn/mmbiz_jpg/JfTPiahTHJhpibRAib4ypnbXhb1w94Ria1fDbJ8XCymoFOCQEHfxkTicqFOElzULkdwEcK5Kvfk1I9EPicMHWmIAU6tA/640?wx_fmt=jpeg&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1)\n\n### **远程版本库连接**\n\n如果在GitHub项目初始化之前，文件已经存在于本地目录中，那可以在本地初始化本地版本库，再将本地版本库跟远程版本库连接起来\n\n#### **git init**\n\n> 在本地目录内部会生成.git文件夹\n\n#### **git remote**\n\n```\ngit remote -v\n```\n\n不带参数，列出已经存在的远程分支，加上 `-v` 列出详细信息，在每一个名字后面列出其远程url\n\n```\ngit remote add origin https://github.com/gafish/gafish.github.com.git\n```\n\n添加一个新的远程仓库，指定一个名字，以便引用后面带的URL\n\n#### **git fetch**\n\n> 将远程版本库的更新取回到本地版本库\n\n```\ngit fetch origin daily/0.0.1\n```\n\n默认情况下，`git fetch` 取回所有分支的更新。如果只想取回特定分支的更新，可以指定分支名。\n\n### **问题排查**\n\n#### **git blame**\n\n> 查看文件每行代码块的历史信息\n\n```\ngit blame -L 1,10 demo.html\n```\n\n截取 `demo.html` 文件1-10行历史信息\n\n#### **git bisect**\n\n> 二分查找历史记录，排查BUG\n\n```\ngit bisect start\n```\n\n开始二分查找\n\n```\ngit bisect bad\n```\n\n标记当前二分提交ID为有问题的点\n\n```\ngit bisect good\n```\n\n标记当前二分提交ID为没问题的点\n\n```\ngit bisect reset\n```\n\n查到有问题的提交ID后回到原分支\n\n### **更多操作**\n\n#### **git submodule**\n\n> 通过 Git 子模块可以跟踪外部版本库，它允许在某一版本库中再存储另一版本库，并且能够保持2个版本库完全独立\n\n```\ngit submodule add https://github.com/gafish/demo.git demo\n```\n\n将 `demo` 仓库添加为子模块\n\n```\ngit submodule update demo\n```\n\n更新子模块 `demo`\n\n#### **git gc**\n\n> 运行Git的垃圾回收功能，清理冗余的历史快照\n\n#### **git archive**\n\n> 将加了tag的某个版本打包提取\n\n```\ngit archive -v --format=zip v0.1 > v0.1.zip\n```\n\n`--format` 表示打包的格式，如 `zip`，`-v` 表示对应的tag名，后面跟的是tag名，如 `v0.1`。\n\n## **总结**\n\n本文只是对 `Git` 的所有功能中的部分实用功能做了一次探秘，Git非常强大，还有很多功能有待我们去发现，限于本文篇幅，咱就此打住吧，预知更多好用功能，请善用谷歌。"]],[8194,8194],[18505,18505]]],[1565684675954,["GJX@GJXAIOU",[[-1,8194,"## **深入探索**\n"]],[8193,8205],[8193,8193]]],[1565684695411,["GJX@GJXAIOU",[[-1,8187,""],[1,8187,"三"],[-1,8262," "],[1,8263," "],[-1,8520," "],[1,8521," "],[-1,8538," "],[1,8539," "],[-1,8777," "],[1,8778," "],[-1,8802," "],[1,8803," "],[-1,8808," "],[1,8809," "],[-1,8822," "],[1,8823," "],[-1,8836," "],[1,8837," "],[-1,8845," "],[1,8846," "],[-1,8852," "],[1,8853," "],[-1,8902," "],[1,8903," "],[-1,8908," "],[1,8909," "],[-1,9186," "],[1,9187," "],[-1,9677," "],[1,9678," "],[-1,9686," 是 "],[1,9689," 是 "],[-1,9694," "],[1,9695," "],[-1,9729," "],[1,9730," "],[-1,10040," / "],[1,10043," / "],[-1,10048," / "],[1,10051," / "],[-1,10314," "],[1,10315," "],[-1,10320," "],[1,10321," "],[-1,10494," "],[1,10495," "],[-1,10507," "],[1,10508," "],[-1,10535," "],[1,10536," "],[-1,10588," "],[1,10589," "],[-1,10597," "],[1,10598," "],[-1,10643," "],[1,10644," "],[-1,10652," "],[1,10653," "],[-1,10673," "],[1,10674," "],[-1,10722," "],[1,10723," "],[-1,10731," "],[1,10732," "],[-1,10749," "],[1,10750," "],[-1,10762," "],[1,10763," "],[-1,10821," "],[1,10822," "],[-1,10829," "],[1,10830," "],[-1,10854," "],[1,10855," "],[-1,10863," "],[1,10864," "],[-1,10870," "],[1,10871," "],[-1,10876," "],[1,10877," "],[-1,10926," "],[1,10927," "],[-1,10960," 后输入 "],[1,10965," 后输入 "],[-1,10980," "],[1,10981," "],[-1,11130," "],[1,11131," "],[-1,11139," "],[1,11140," "],[-1,11152," "],[1,11153," "],[-1,11157," 或 "],[1,11160," 或 "],[-1,11164," "],[1,11165," "],[-1,11175," "],[1,11176," "],[-1,11189," "],[1,11190," "],[-1,11200," "],[1,11201," "],[-1,11286," "],[1,11287," "],[-1,11291," 或 "],[1,11294," 或 "],[-1,11298," "],[1,11299," "],[-1,11305," "],[1,11306," "],[-1,11310," "],[1,11311," "],[-1,11467," "],[1,11468," "],[-1,11472," 或 "],[1,11475," 或 "],[-1,11479," "],[1,11480," "],[-1,11492," "],[1,11493," "],[-1,11497," "],[1,11498," "],[-1,11601," "],[1,11602," "],[-1,11608," "],[1,11609," "],[-1,11683," "],[1,11684," "],[-1,11690," "],[1,11691," "],[-1,11695," "],[1,11696," "],[-1,11702," "],[1,11703," "],[-1,11716," "],[1,11717," "],[-1,11721," "],[1,11722," "],[-1,11735," "],[1,11736," "],[-1,11750," "],[1,11751," "],[-1,11756," "],[1,11757," "],[-1,11766," "],[1,11767," "],[-1,11837," "],[1,11838," "],[-1,11844," "],[1,11845," "],[-1,11860," "],[1,11861," "],[-1,11870," "],[1,11871," "],[-1,11876," "],[1,11877," "],[-1,11886," "],[1,11887," "],[-1,12002," "],[1,12003," "],[-1,12015," "],[1,12016," "],[-1,12214," "],[1,12215," "],[-1,12219," "],[1,12220," "],[-1,12592," "],[1,12593," "],[-1,12601," "],[1,12602," "],[-1,12609," "],[1,12610," "],[-1,12823," "],[1,12824," "],[-1,12829," "],[1,12830," "],[-1,12851," "],[1,12852," "],[-1,12888," "],[1,12889," "],[-1,12897," "],[1,12898," "],[-1,12902," "],[1,12903," "],[-1,12912," "],[1,12913," "],[-1,12918," "],[1,12919," "],[-1,12928," "],[1,12929," "],[-1,12942," "],[1,12943," "],[-1,13211," "],[1,13212," "],[-1,13217," "],[1,13218," "],[-1,13225," "],[1,13226," "],[-1,13326," "],[1,13327," "],[-1,13340," "],[1,13341," "],[-1,13403," "],[1,13404," "],[-1,13435," "],[1,13436," "],[-1,13447," "],[1,13448," "],[-1,13463," "],[1,13464," "],[-1,13470," "],[1,13471," "],[-1,13589," "],[1,13590," "],[-1,13602," "],[1,13603," "],[-1,13755," "],[1,13756," "],[-1,13761," "],[1,13762," "],[-1,14336," "],[1,14337," "],[-1,14345," "],[1,14346," "],[-1,14356," "],[1,14357," "],[-1,14364," "],[1,14365," "],[-1,14541," "],[1,14542," "],[-1,14553," "],[1,14554," "],[-1,14764," "],[1,14765," "],[-1,14774," 到 "],[1,14777," 到 "],[-1,14783," "],[1,14784," "],[-1,14796," "],[1,14797," "],[-1,14914," 用各种 "],[1,14919," 用各种 "],[-1,14932," "],[1,14933," "],[-1,15461," "],[1,15462," "],[-1,15471," "],[1,15472," "],[-1,15522," "],[1,15523," "],[-1,15533," 或者 "],[1,15537," 或者 "],[-1,15590," "],[1,15591," "],[-1,15683," "],[1,15684," "],[-1,15690," 指向 "],[1,15694," 指向 "],[-1,15743," "],[1,15744," "],[-1,15754," "],[1,15755," "],[-1,15774," "],[1,15775," "],[-1,15781," 指向 "],[1,15785," 指向 "],[-1,15873," "],[1,15874," "],[-1,16104," "],[1,16105," "],[-1,16172," "],[1,16173," "],[-1,16179," 到 "],[1,16182," 到 "],[-1,16190," "],[1,16191," "],[-1,16237," "],[1,16238," "],[-1,16244," 改成 "],[1,16248," 改成 "],[-1,16258," "],[1,16259," "],[-1,16355," "],[1,16356," "],[-1,16364," 和 "],[1,16367," 和 "],[-1,16376," "],[1,16377," "],[-1,16486," "],[1,16487," "],[-1,16501," "],[1,16502," "],[-1,16549," "],[1,16550," "],[-1,16554," "],[1,16555," "],[-1,16850," "],[1,16851," "],[-1,16859," "],[1,16860," "],[-1,16923," "],[1,16924," "],[-1,16974," "],[1,16975," "],[-1,17377," "],[1,17378," "],[-1,17382," "],[1,17383," "],[-1,17614," "],[1,17615," "],[-1,17740," "],[1,17741," "],[-1,17752," "],[1,17753," "],[-1,18132," "],[1,18133," "],[-1,18139," "],[1,18140," "],[-1,18190," "],[1,18191," "],[-1,18346," "],[1,18347," "],[-1,18356," "],[1,18357," "],[-1,18367," "],[1,18368," "],[-1,18389," "],[1,18390," "],[-1,18415," "],[1,18416," "],[-1,18421," "],[1,18422," "]],[8187,8187],[8188,8188]]],[1565684696021,["GJX@GJXAIOU",[[1,8188,"、"]],[8188,8188],[8189,8189]]],[1565684700314,["GJX@GJXAIOU",[[-1,8201,"**"]],[8203,8203],[8201,8201]]],[1565684701285,["GJX@GJXAIOU",[[-1,8205,"**"]],[8207,8207],[8205,8205]]],[1565684703937,["GJX@GJXAIOU",[[-1,8207,"#### **"]],[8207,8214],[8207,8207]]],[1565684765027,[null,[[-1,6599,"到"],[1,6641,"到"],[-1,6643,"`"],[1,6645,"支"],[-1,6653,"了"],[1,7100,"\n"],[-1,18484,"\n"]],[6599,6599],[18484,18484]]],[1565684765027,[null,[[1,6599,"到"],[-1,6640,"到"],[1,6643,"`"],[-1,6644,"支"],[1,6653,"了"],[-1,7099,"\n"],[1,18484,"\n"]],[18484,18484],[6599,6599]]],[1565684707432,["GJX@GJXAIOU",[[1,8207,"**"],[1,8229,"**"]],[8207,8229],[8207,8233]]],[1565684710976,["GJX@GJXAIOU",[[-1,8233,"**"]],[8235,8235],[8233,8233]]],[1565684731769,["GJX@GJXAIOU",[[-1,8288,"![](https://mmbiz.qpic.cn/mmbiz_png/JfTPiahTHJhpibRAib4ypnbXhb1w94Ria1fDpw1YGShDLvKaYibbEHKBicwcxQyoM2VtzHhoHpzIYdenkBJfbGRpkKXw/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1)\n"]],[8287,8467],[8287,8287]]],[1565684737825,["GJX@GJXAIOU",[[-1,8256,"`gafish.github.com`"]],[8256,8275],[8256,8256]]],[1565684740608,["GJX@GJXAIOU",[[-1,8234,"\n"]],[8234,8234],[8233,8233]]],[1565684742911,["GJX@GJXAIOU",[[1,8266,"。"]],[8266,8266],[8267,8267]]],[1565684746120,["GJX@GJXAIOU",[[-1,8270,"#### "]],[8270,8275],[8270,8270]]],[1565684825035,[null,[[-1,6599,"到"],[1,6641,"到"],[-1,6643,"`"],[1,6645,"支"],[-1,6653,"了"],[1,7100,"\n"],[-1,18282,"\n"]],[6599,6599],[18282,18282]]],[1565684825035,[null,[[1,6599,"到"],[-1,6640,"到"],[1,6643,"`"],[-1,6644,"支"],[1,6653,"了"],[-1,7099,"\n"],[1,18282,"\n"]],[18282,18282],[6599,6599]]],[1565684784633,["GJX@GJXAIOU",[[-1,8341,"![](https://mmbiz.qpic.cn/mmbiz_jpg/JfTPiahTHJhpibRAib4ypnbXhb1w94Ria1fDdkPDQ62k58WYYeeXCyZIJeS72I4XCpYvwkgFiajmURsA4agaH4GnBpA/640?wx_fmt=jpeg&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1)"]],[8341,8520],[8341,8341]]],[1565684791375,["GJX@GJXAIOU",[[1,8340,"![版本库]($resource/%E7%89%88%E6%9C%AC%E5%BA%93.png)"]],[8340,8340],[8390,8390]]],[1565684810611,["GJX@GJXAIOU",[[-1,8392,"####"]],[8392,8396],[8392,8392]]],[1565684811432,["GJX@GJXAIOU",[[-1,8391,"\n"]],[8391,8391],[8390,8390]]],[1565684812482,["GJX@GJXAIOU",[[-1,8269,"\n"]],[8269,8269],[8268,8268]]],[1565684813336,["GJX@GJXAIOU",[[-1,8297,"\n"]],[8297,8297],[8296,8296]]],[1565684815423,["GJX@GJXAIOU",[[-1,8405,"\n"]],[8405,8405],[8404,8404]]],[1565684885034,[null,[[-1,6599,"到"],[1,6641,"到"],[-1,6643,"`"],[1,6645,"支"],[-1,6653,"了"],[1,7100,"\n"],[-1,18144,"\n"]],[6599,6599],[18144,18144]]],[1565684885034,[null,[[1,6599,"到"],[-1,6640,"到"],[1,6643,"`"],[-1,6644,"支"],[1,6653,"了"],[-1,7099,"\n"],[1,18144,"\n"]],[18144,18144],[6599,6599]]],[1565684828767,["GJX@GJXAIOU",[[-1,8513,"#### "]],[8513,8518],[8513,8513]]],[1565684867529,["GJX@GJXAIOU",[[-1,8596,"![](https://mmbiz.qpic.cn/mmbiz_png/JfTPiahTHJhpibRAib4ypnbXhb1w94Ria1fD7uohhZIsicJ1nL28tkEXzOqnI3SHm2M65KvXiaYDXiaxTX24mRkcTpMsA/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1)\n"]],[8595,8776],[8595,8595]]],[1565684868017,["GJX@GJXAIOU",[[-1,8596,"\n"]],[8595,8595],[8594,8594]]],[1565684875000,["GJX@GJXAIOU",[[-1,8596,"#### "]],[8596,8601],[8596,8596]]],[1565684945038,[null,[[-1,6599,"到"],[1,6641,"到"],[-1,6643,"`"],[1,6645,"支"],[-1,6653,"了"],[1,7100,"\n"],[-1,17952,"\n"]],[6599,6599],[17952,17952]]],[1565684945038,[null,[[1,6599,"到"],[-1,6640,"到"],[1,6643,"`"],[-1,6644,"支"],[1,6653,"了"],[-1,7099,"\n"],[1,17952,"\n"]],[17952,17952],[6599,6599]]],[1565684911089,["GJX@GJXAIOU",[[-1,8664,"![](https://mmbiz.qpic.cn/mmbiz_png/JfTPiahTHJhpibRAib4ypnbXhb1w94Ria1fDHQfFWBfBX5hwmhnNNImcOm6ttH0ULViabRocsoV0SE9FXGxOK0XE2mA/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1)"]],[8665,8842],[8664,8664]]],[1565684911579,["GJX@GJXAIOU",[[-1,8665,"\n"]],[8664,8664],[8663,8663]]],[1565684917330,["GJX@GJXAIOU",[[1,8663,"![Git各区之间关系]($resource/Git%E5%90%84%E5%8C%BA%E4%B9%8B%E9%97%B4%E5%85%B3%E7%B3%BB.png)"]],[8663,8663],[8749,8749]]],[1565684926144,["GJX@GJXAIOU",[[-1,8750,"#### "]],[8750,8755],[8750,8750]]],[1565684943783,["GJX@GJXAIOU",[[1,7105,"（）"]],[7105,7105],[7107,7107]]],[1565685005037,[null,[[-1,6599,"到"],[1,6641,"到"],[-1,6643,"`"],[1,6645,"支"],[-1,6653,"了"],[1,7100,"\n"],[-1,17855,"\n"]],[6599,6599],[17855,17855]]],[1565685005037,[null,[[1,6599,"到"],[-1,6640,"到"],[1,6643,"`"],[-1,6644,"支"],[1,6653,"了"],[-1,7099,"\n"],[1,17855,"\n"]],[17855,17855],[6599,6599]]],[1565684946183,["GJX@GJXAIOU",[[1,7106,"五"]],[7106,7106],[7107,7107]]],[1565684949984,["GJX@GJXAIOU",[[1,7532,"（）"]],[7532,7532],[7534,7534]]],[1565684952583,["GJX@GJXAIOU",[[1,7533,"六"]],[7533,7533],[7534,7534]]],[1565684956669,["GJX@GJXAIOU",[[1,7883,"（0 "]],[7883,7883],[7885,7885]]],[1565684958079,["GJX@GJXAIOU",[[-1,7884,"0"]],[7885,7885],[7884,7884]]],[1565684959364,["GJX@GJXAIOU",[[1,7884,"）"]],[7884,7884],[7885,7885]]],[1565684962629,["GJX@GJXAIOU",[[1,7884,"七"]],[7884,7884],[7885,7885]]],[1565684964472,["GJX@GJXAIOU",[[-1,7885,"）"]],[7886,7886],[7885,7885]]],[1565684966444,["GJX@GJXAIOU",[[1,7885,"）"]],[7885,7885],[7886,7886]]],[1565684967760,["GJX@GJXAIOU",[[-1,7886," "]],[7887,7887],[7886,7886]]],[1565684972654,["GJX@GJXAIOU",[[1,8210,"（）"]],[8210,8210],[8212,8212]]],[1565684973918,["GJX@GJXAIOU",[[1,8211,"一"]],[8211,8211],[8212,8212]]],[1565685065039,[null,[[-1,6599,"到"],[1,6641,"到"],[-1,6643,"`"],[1,6645,"支"],[-1,6653,"了"],[1,7100,"\n"],[-1,17865,"\n"]],[6599,6599],[17865,17865]]],[1565685065039,[null,[[1,6599,"到"],[-1,6640,"到"],[1,6643,"`"],[-1,6644,"支"],[1,6653,"了"],[-1,7099,"\n"],[1,17865,"\n"]],[17865,17865],[6599,6599]]],[1565685015728,["GJX@GJXAIOU",[[-1,8840,"![](https://mmbiz.qpic.cn/mmbiz_png/JfTPiahTHJhpibRAib4ypnbXhb1w94Ria1fD0g4DDtdVlLjDSPLEicDsSCjfehKVzhEibsKUwibZhMoxDrjFETox38lfQ/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1)\n"]],[8839,9020],[8839,8839]]],[1565685021922,["GJX@GJXAIOU",[[1,8839,"![分支]($resource/%E5%88%86%E6%94%AF.png)"]],[8839,8839],[8879,8879]]],[1565685025960,["GJX@GJXAIOU",[[-1,8777,"\n"]],[8777,8777],[8776,8776]]],[1565685028033,["GJX@GJXAIOU",[[-1,8622,"\n"]],[8622,8622],[8621,8621]]],[1565685047657,["GJX@GJXAIOU",[[-1,8968,"![](https://mmbiz.qpic.cn/mmbiz_png/JfTPiahTHJhpibRAib4ypnbXhb1w94Ria1fDzobibXXDhEcyMO1M6JoIr2G9Bn4czUVadgbyoc6c7Du8zNQMoictw7qg/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1)"]],[8968,9147],[8968,8968]]],[1565685048624,["GJX@GJXAIOU",[[-1,8969,"\n"]],[8968,8968],[8967,8967]]],[1565685050447,["GJX@GJXAIOU",[[-1,8878,"#### "]],[8878,8883],[8878,8878]]],[1565685052143,["GJX@GJXAIOU",[[-1,8964,"#### "]],[8964,8969],[8964,8964]]],[1565685125042,[null,[[-1,6599,"到"],[1,6641,"到"],[-1,6643,"`"],[1,6645,"支"],[-1,6653,"了"],[1,7100,"\n"],[-1,17531,"\n"]],[6599,6599],[17531,17531]]],[1565685125042,[null,[[1,6599,"到"],[-1,6640,"到"],[1,6643,"`"],[-1,6644,"支"],[1,6653,"了"],[-1,7099,"\n"],[1,17531,"\n"]],[17531,17531],[6599,6599]]],[1565685091855,["GJX@GJXAIOU",[[1,8962,"![分支和标签]($resource/%E5%88%86%E6%94%AF%E5%92%8C%E6%A0%87%E7%AD%BE.png)"]],[8962,8962],[9032,9032]]],[1565685093448,["GJX@GJXAIOU",[[-1,8894,"\n"]],[8894,8894],[8893,8893]]],[1565685096624,["GJX@GJXAIOU",[[-1,9044,"\n"]],[9044,9044],[9043,9043]]],[1565685107687,["GJX@GJXAIOU",[[-1,9163,"#### "]],[9163,9168],[9163,9163]]],[1565685185042,[null,[[-1,6599,"到"],[1,6641,"到"],[-1,6643,"`"],[1,6645,"支"],[-1,6653,"了"],[1,7100,"\n"],[-1,17593,"\n"]],[6599,6599],[17593,17593]]],[1565685185042,[null,[[1,6599,"到"],[-1,6640,"到"],[1,6643,"`"],[-1,6644,"支"],[1,6653,"了"],[-1,7099,"\n"],[1,17593,"\n"]],[17593,17593],[6599,6599]]],[1565685132024,["GJX@GJXAIOU",[[-1,9377,"> 以上概念了解的差不多，那就可以继续往下看，下面将以具体的操作类型来讲解 `Git` 的高阶用法"]],[9377,9426],[9377,9377]]],[1565685138567,["GJX@GJXAIOU",[[-1,9383,"**"]],[9385,9385],[9383,9383]]],[1565685140464,["GJX@GJXAIOU",[[1,9383,"（）"]],[9383,9383],[9385,9385]]],[1565685141616,["GJX@GJXAIOU",[[1,9384,"二"]],[9384,9384],[9385,9385]]],[1565685143960,["GJX@GJXAIOU",[[-1,9390,"**"]],[9390,9392],[9390,9390]]],[1565685155552,["GJX@GJXAIOU",[[-1,9437,"```"]],[9437,9440],[9437,9437]]],[1565685156568,["GJX@GJXAIOU",[[-1,9422,"```"]],[9422,9425],[9422,9422]]],[1565685157514,["GJX@GJXAIOU",[[-1,9410,"> "]],[9410,9412],[9410,9410]]],[1565685158712,["GJX@GJXAIOU",[[-1,9409,"\n"]],[9410,9410],[9409,9409]]],[1565685161079,["GJX@GJXAIOU",[[-1,9396," **git add**\n"]],[9396,9409],[9396,9396]]],[1565685162824,["GJX@GJXAIOU",[[1,9396," **git add**\n"]],[9396,9396],[9396,9409]]],[1565685165095,["GJX@GJXAIOU",[[-1,9392,"#### "]],[9392,9397],[9392,9392]]],[1565685166632,["GJX@GJXAIOU",[[-1,9403,"\n"]],[9404,9404],[9403,9403]]],[1565685167575,["GJX@GJXAIOU",[[1,9403," "]],[9403,9403],[9404,9404]]],[1565685169449,["GJX@GJXAIOU",[[-1,9414,"\n"]],[9415,9415],[9414,9414]]],[1565685170135,["GJX@GJXAIOU",[[-1,9413,"\n"]],[9414,9414],[9413,9413]]],[1565685171623,["GJX@GJXAIOU",[[1,9413,"·"]],[9413,9413],[9414,9414]]],[1565685173440,["GJX@GJXAIOU",[[-1,9413,"·"]],[9414,9414],[9413,9413]]],[1565685173920,["GJX@GJXAIOU",[[1,9413,"`"]],[9413,9413],[9414,9414]]],[1565685175368,["GJX@GJXAIOU",[[1,9424,"`"]],[9424,9424],[9425,9425]]],[1565685177847,["GJX@GJXAIOU",[[-1,9427,"\n"]],[9427,9427],[9426,9426]]],[1565685178320,["GJX@GJXAIOU",[[-1,9426,"\n"]],[9426,9426],[9425,9425]]],[1565685245044,[null,[[-1,6599,"到"],[1,6641,"到"],[-1,6643,"`"],[1,6645,"支"],[-1,6653,"了"],[1,7100,"\n"],[-1,17527,"\n"]],[6599,6599],[17527,17527]]],[1565685245044,[null,[[1,6599,"到"],[-1,6640,"到"],[1,6643,"`"],[-1,6644,"支"],[1,6653,"了"],[-1,7099,"\n"],[1,17527,"\n"]],[17527,17527],[6599,6599]]],[1565685191361,["GJX@GJXAIOU",[[1,9458,"\n"],[1,9472,"\n  1: status      2: update      3: revert      4: add untracked\n  5: patch      6: diff      7: quit      8: help"]],[9458,9472],[9587,9587]]],[1565685193432,["GJX@GJXAIOU",[[-1,9458,"\n"]],[9458,9458],[9457,9457]]],[1565685196056,["GJX@GJXAIOU",[[-1,9453,"\n"]],[9453,9453],[9452,9452]]],[1565685228847,["GJX@GJXAIOU",[[-1,9664,"\n"]],[9664,9664],[9663,9663]]],[1565685229647,["GJX@GJXAIOU",[[-1,9695,"\n"]],[9695,9695],[9694,9694]]],[1565685230416,["GJX@GJXAIOU",[[-1,9746,"\n"]],[9746,9746],[9745,9745]]],[1565685231392,["GJX@GJXAIOU",[[-1,9800,"\n"]],[9800,9800],[9799,9799]]],[1565685232208,["GJX@GJXAIOU",[[-1,9830,"\n"]],[9830,9830],[9829,9829]]],[1565685233537,["GJX@GJXAIOU",[[-1,9877,"\n"]],[9877,9877],[9876,9876]]],[1565685234352,["GJX@GJXAIOU",[[-1,9909,"\n"]],[9909,9909],[9908,9908]]],[1565685235562,["GJX@GJXAIOU",[[-1,9623,"\n"]],[9623,9623],[9622,9622]]],[1565685305046,[null,[[-1,6599,"到"],[1,6641,"到"],[-1,6643,"`"],[1,6645,"支"],[-1,6653,"了"],[1,7100,"\n"],[-1,17632,"\n"]],[6599,6599],[17632,17632]]],[1565685305046,[null,[[1,6599,"到"],[-1,6640,"到"],[1,6643,"`"],[-1,6644,"支"],[1,6653,"了"],[-1,7099,"\n"],[1,17632,"\n"]],[17632,17632],[6599,6599]]],[1565685245352,["GJX@GJXAIOU",[[-1,9942,"```"]],[9942,9945],[9942,9942]]],[1565685246536,["GJX@GJXAIOU",[[-1,9927,"```"]],[9927,9930],[9927,9927]]],[1565685248078,["GJX@GJXAIOU",[[1,9928,"`"]],[9928,9928],[9929,9929]]],[1565685248734,["GJX@GJXAIOU",[[1,9939,"`"]],[9939,9939],[9940,9940]]],[1565685257423,["GJX@GJXAIOU",[[-1,9942,"\n"]],[9942,9942],[9941,9941]]],[1565685257976,["GJX@GJXAIOU",[[-1,9941,"\n"]],[9941,9941],[9940,9940]]],[1565685274656,["GJX@GJXAIOU",[[-1,10135,"\n"]],[10135,10135],[10134,10134]]],[1565685275514,["GJX@GJXAIOU",[[-1,10146,"\n"]],[10146,10146],[10145,10145]]],[1565685276336,["GJX@GJXAIOU",[[-1,10157,"\n"]],[10157,10157],[10156,10156]]],[1565685277138,["GJX@GJXAIOU",[[-1,10170,"\n"]],[10170,10170],[10169,10169]]],[1565685277938,["GJX@GJXAIOU",[[-1,10181,"\n"]],[10181,10181],[10180,10180]]],[1565685278858,["GJX@GJXAIOU",[[-1,10192,"\n"]],[10192,10192],[10191,10191]]],[1565685280128,["GJX@GJXAIOU",[[-1,10212,"\n"]],[10212,10212],[10211,10211]]],[1565685281944,["GJX@GJXAIOU",[[-1,10226,"```"]],[10226,10229],[10226,10226]]],[1565685283622,["GJX@GJXAIOU",[[1,10227,"`"]],[10227,10227],[10228,10228]]],[1565685284438,["GJX@GJXAIOU",[[1,10238,"`"]],[10238,10238],[10239,10239]]],[1565685286288,["GJX@GJXAIOU",[[-1,10240,"```"]],[10240,10243],[10240,10240]]],[1565685289191,["GJX@GJXAIOU",[[-1,10241,"\n"]],[10241,10241],[10240,10240]]],[1565685289760,["GJX@GJXAIOU",[[-1,10240,"\n"]],[10240,10240],[10239,10239]]],[1565685296448,["GJX@GJXAIOU",[[-1,10365,"```"]],[10365,10368],[10365,10365]]],[1565685298422,["GJX@GJXAIOU",[[1,10366,"`"]],[10366,10366],[10367,10367]]],[1565685299149,["GJX@GJXAIOU",[[1,10393,"`"]],[10393,10393],[10394,10394]]],[1565685300375,["GJX@GJXAIOU",[[-1,10365,"\n"]],[10365,10365],[10364,10364]]],[1565685300905,["GJX@GJXAIOU",[[-1,10364,"\n"]],[10364,10364],[10363,10363]]],[1565685303906,["GJX@GJXAIOU",[[-1,10393,"```"]],[10396,10396],[10393,10393]]],[1565685365050,[null,[[-1,6599,"到"],[1,6641,"到"],[-1,6643,"`"],[1,6645,"支"],[-1,6653,"了"],[1,7100,"\n"],[-1,17607,"\n"]],[6599,6599],[17607,17607]]],[1565685365050,[null,[[1,6599,"到"],[-1,6640,"到"],[1,6643,"`"],[-1,6644,"支"],[1,6653,"了"],[-1,7099,"\n"],[1,17607,"\n"]],[17607,17607],[6599,6599]]],[1565685310648,["GJX@GJXAIOU",[[1,10364,"\n"]],[10364,10364],[10365,10365]]],[1565685312537,["GJX@GJXAIOU",[[-1,10395,"\n"]],[10395,10395],[10394,10394]]],[1565685312808,["GJX@GJXAIOU",[[-1,10394,"\n"]],[10394,10394],[10393,10393]]],[1565685318736,["GJX@GJXAIOU",[[1,9392,"#### "]],[9392,9392],[9417,9417]]],[1565685321138,["GJX@GJXAIOU",[[1,9409,"\n"]],[9409,9409],[9410,9410]]],[1565685322992,["GJX@GJXAIOU",[[-1,9406,"** "]],[9406,9409],[9406,9406]]],[1565685324680,["GJX@GJXAIOU",[[-1,9397,"**"]],[9397,9399],[9397,9397]]],[1565685334121,["GJX@GJXAIOU",[[-1,10440,"**"]],[10440,10442],[10440,10440]]],[1565685335464,["GJX@GJXAIOU",[[-1,10450,"**"]],[10450,10452],[10450,10450]]],[1565685339400,["GJX@GJXAIOU",[[-1,10452,"> "]],[10452,10454],[10452,10452]]],[1565685340130,["GJX@GJXAIOU",[[-1,10451,"\n"]],[10452,10452],[10451,10451]]],[1565685352370,["GJX@GJXAIOU",[[-1,10510,"```"]],[10510,10513],[10510,10510]]],[1565685356031,["GJX@GJXAIOU",[[-1,10468,"```"]],[10471,10471],[10468,10468]]],[1565685356432,["GJX@GJXAIOU",[[-1,10468,"\n"]],[10468,10468],[10467,10467]]],[1565685358360,["GJX@GJXAIOU",[[1,10468,"`"]],[10468,10468],[10469,10469]]],[1565685359381,["GJX@GJXAIOU",[[1,10506,"`"]],[10506,10506],[10507,10507]]],[1565685361368,["GJX@GJXAIOU",[[-1,10509,"\n"]],[10509,10509],[10508,10508]]],[1565685361768,["GJX@GJXAIOU",[[-1,10508,"\n"]],[10508,10508],[10507,10507]]],[1565685425050,[null,[[-1,6599,"到"],[1,6641,"到"],[-1,6643,"`"],[1,6645,"支"],[-1,6653,"了"],[1,7100,"\n"],[-1,17593,"\n"]],[6599,6599],[17593,17593]]],[1565685425050,[null,[[1,6599,"到"],[-1,6640,"到"],[1,6643,"`"],[-1,6644,"支"],[1,6653,"了"],[-1,7099,"\n"],[1,17593,"\n"]],[17593,17593],[6599,6599]]],[1565685372922,["GJX@GJXAIOU",[[-1,10558,"```"]],[10558,10561],[10558,10558]]],[1565685374111,["GJX@GJXAIOU",[[-1,10559,"\n"]],[10558,10558],[10557,10557]]],[1565685374822,["GJX@GJXAIOU",[[1,10557,"`"]],[10557,10557],[10558,10558]]],[1565685376879,["GJX@GJXAIOU",[[1,10536,"`"]],[10536,10536],[10537,10537]]],[1565685378986,["GJX@GJXAIOU",[[-1,10532,"```"]],[10532,10535],[10532,10532]]],[1565685379743,["GJX@GJXAIOU",[[-1,10532,"\n"]],[10532,10532],[10531,10531]]],[1565685384625,["GJX@GJXAIOU",[[-1,10556,"\n"]],[10556,10556],[10555,10555]]],[1565685386639,["GJX@GJXAIOU",[[1,10605,"`"]],[10605,10605],[10606,10606]]],[1565685388312,["GJX@GJXAIOU",[[1,10634,"`"]],[10634,10634],[10635,10635]]],[1565685391136,["GJX@GJXAIOU",[[-1,10636,"```"]],[10636,10639],[10636,10636]]],[1565685393416,["GJX@GJXAIOU",[[-1,10601,"```"]],[10601,10604],[10601,10601]]],[1565685396439,["GJX@GJXAIOU",[[-1,10634,"\n"]],[10634,10634],[10633,10633]]],[1565685397314,["GJX@GJXAIOU",[[-1,10633,"\n"]],[10633,10633],[10632,10632]]],[1565685399887,["GJX@GJXAIOU",[[1,10654,"`"]],[10654,10654],[10655,10655]]],[1565685400816,["GJX@GJXAIOU",[[1,10673,"`"]],[10673,10673],[10674,10674]]],[1565685404192,["GJX@GJXAIOU",[[-1,10675,"```"]],[10675,10678],[10675,10675]]],[1565685406439,["GJX@GJXAIOU",[[-1,10650,"```"]],[10650,10653],[10650,10650]]],[1565685408593,["GJX@GJXAIOU",[[-1,10673,"\n"]],[10673,10673],[10672,10672]]],[1565685408753,["GJX@GJXAIOU",[[-1,10672,"\n"]],[10672,10672],[10671,10671]]],[1565685415535,["GJX@GJXAIOU",[[-1,10707,"**"]],[10707,10709],[10707,10707]]],[1565685416601,["GJX@GJXAIOU",[[-1,10713,"**"]],[10715,10715],[10713,10713]]],[1565685418063,["GJX@GJXAIOU",[[-1,10715,"> "]],[10715,10717],[10715,10715]]],[1565685418584,["GJX@GJXAIOU",[[-1,10714,"\n"]],[10715,10715],[10714,10714]]],[1565685421546,["GJX@GJXAIOU",[[-1,10727,"```"]],[10727,10730],[10727,10727]]],[1565685423133,["GJX@GJXAIOU",[[1,10728,"`"]],[10728,10728],[10729,10729]]],[1565685423896,["GJX@GJXAIOU",[[1,10748,"`"]],[10748,10748],[10749,10749]]],[1565685485053,[null,[[-1,6599,"到"],[1,6641,"到"],[-1,6643,"`"],[1,6645,"支"],[-1,6653,"了"],[1,7100,"\n"],[-1,17566,"\n"]],[6599,6599],[17566,17566]]],[1565685485053,[null,[[1,6599,"到"],[-1,6640,"到"],[1,6643,"`"],[-1,6644,"支"],[1,6653,"了"],[-1,7099,"\n"],[1,17566,"\n"]],[17566,17566],[6599,6599]]],[1565685426594,["GJX@GJXAIOU",[[-1,10754,"\n"]],[10754,10754],[10753,10753]]],[1565685428079,["GJX@GJXAIOU",[[-1,10750,"```"]],[10753,10753],[10750,10750]]],[1565685428655,["GJX@GJXAIOU",[[-1,10750,"\n"]],[10750,10750],[10749,10749]]],[1565685435696,["GJX@GJXAIOU",[[-1,10727,"\n"]],[10727,10727],[10726,10726]]],[1565685443576,["GJX@GJXAIOU",[[-1,10843,"**"]],[10845,10845],[10843,10843]]],[1565685445730,["GJX@GJXAIOU",[[-1,10849,"**"]],[10851,10851],[10849,10849]]],[1565685448280,["GJX@GJXAIOU",[[-1,10851,"> "]],[10853,10853],[10851,10851]]],[1565685450967,["GJX@GJXAIOU",[[1,10869,"`"]],[10869,10869],[10870,10870]]],[1565685451655,["GJX@GJXAIOU",[[1,10881,"`"]],[10881,10881],[10882,10882]]],[1565685453071,["GJX@GJXAIOU",[[-1,10865,"```"]],[10865,10868],[10865,10865]]],[1565685455256,["GJX@GJXAIOU",[[-1,10880,"```"]],[10880,10883],[10880,10880]]],[1565685457728,["GJX@GJXAIOU",[[-1,10881,"\n"]],[10881,10881],[10880,10880]]],[1565685458600,["GJX@GJXAIOU",[[-1,10880,"\n"]],[10880,10880],[10879,10879]]],[1565685463040,["GJX@GJXAIOU",[[-1,10865,"\n"]],[10865,10865],[10864,10864]]],[1565685465143,["GJX@GJXAIOU",[[-1,10850,"\n"]],[10850,10850],[10849,10849]]],[1565685468999,["GJX@GJXAIOU",[[1,10948,"`"]],[10948,10948],[10949,10949]]],[1565685469735,["GJX@GJXAIOU",[[1,10963,"`"]],[10963,10963],[10964,10964]]],[1565685472578,["GJX@GJXAIOU",[[-1,10965,"```"]],[10965,10968],[10965,10965]]],[1565685474024,["GJX@GJXAIOU",[[-1,10944,"```"]],[10944,10947],[10944,10944]]],[1565685476816,["GJX@GJXAIOU",[[-1,10963,"\n"]],[10963,10963],[10962,10962]]],[1565685477312,["GJX@GJXAIOU",[[-1,10962,"\n"]],[10962,10962],[10961,10961]]],[1565685479064,["GJX@GJXAIOU",[[-1,10983,"**"]],[10983,10985],[10983,10983]]],[1565685480552,["GJX@GJXAIOU",[[-1,10993,"**"]],[10993,10995],[10993,10993]]],[1565685483120,["GJX@GJXAIOU",[[-1,10995,"```"]],[10995,10998],[10995,10995]]],[1565685484687,["GJX@GJXAIOU",[[-1,11010,"```"]],[11010,11013],[11010,11010]]],[1565685545056,[null,[[-1,6599,"到"],[1,6641,"到"],[-1,6643,"`"],[1,6645,"支"],[-1,6653,"了"],[1,7100,"\n"],[-1,17530,"\n"]],[6599,6599],[17530,17530]]],[1565685545056,[null,[[1,6599,"到"],[-1,6640,"到"],[1,6643,"`"],[-1,6644,"支"],[1,6653,"了"],[-1,7099,"\n"],[1,17530,"\n"]],[17530,17530],[6599,6599]]],[1565685485944,["GJX@GJXAIOU",[[1,10996,"`"]],[10996,10996],[10997,10997]]],[1565685486805,["GJX@GJXAIOU",[[1,11010,"`"]],[11010,11010],[11011,11011]]],[1565685488001,["GJX@GJXAIOU",[[-1,10995,"\n"]],[10995,10995],[10994,10994]]],[1565685488345,["GJX@GJXAIOU",[[-1,10994,"\n"]],[10994,10994],[10993,10993]]],[1565685498498,["GJX@GJXAIOU",[[-1,11030,"，示例如下：\n\nM demo.html\n?? test.html "]],[11031,11063],[11030,11030]]],[1565685501681,["GJX@GJXAIOU",[[-1,11011,"\n"]],[11011,11011],[11010,11010]]],[1565685502321,["GJX@GJXAIOU",[[-1,11010,"\n"]],[11010,11010],[11009,11009]]],[1565685504599,["GJX@GJXAIOU",[[-1,11030,"```"]],[11030,11033],[11030,11030]]],[1565685506095,["GJX@GJXAIOU",[[1,11031,"`"]],[11031,11031],[11032,11032]]],[1565685506710,["GJX@GJXAIOU",[[1,11052,"`"]],[11052,11052],[11053,11053]]],[1565685508203,["GJX@GJXAIOU",[[-1,11054,"```"]],[11054,11057],[11054,11054]]],[1565685510536,["GJX@GJXAIOU",[[-1,11055,"\n"]],[11055,11055],[11054,11054]]],[1565685510848,["GJX@GJXAIOU",[[-1,11054,"\n"]],[11054,11054],[11053,11053]]],[1565685512800,["GJX@GJXAIOU",[[-1,11030,"\n"]],[11030,11030],[11029,11029]]],[1565685516687,["GJX@GJXAIOU",[[-1,11096,"**"]],[11098,11098],[11096,11096]]],[1565685519932,["GJX@GJXAIOU",[[-1,11106,"**"]],[11108,11108],[11106,11106]]],[1565685522906,["GJX@GJXAIOU",[[-1,11108,"> "]],[11110,11110],[11108,11108]]],[1565685537240,["GJX@GJXAIOU",[[1,11123,"``"]],[11120,11123],[11120,11125]]],[1565685539008,["GJX@GJXAIOU",[[-1,11120,"`````"]],[11120,11125],[11120,11120]]],[1565685541320,["GJX@GJXAIOU",[[-1,11120,"\n"]],[11120,11120],[11119,11119]]],[1565685543286,["GJX@GJXAIOU",[[1,11120,"`"]],[11120,11120],[11121,11121]]],[1565685544135,["GJX@GJXAIOU",[[1,11134,"`"]],[11134,11134],[11135,11135]]],[1565685605060,[null,[[-1,6599,"到"],[1,6641,"到"],[-1,6643,"`"],[1,6645,"支"],[-1,6653,"了"],[1,7100,"\n"],[-1,17480,"\n"]],[6599,6599],[17480,17480]]],[1565685605060,[null,[[1,6599,"到"],[-1,6640,"到"],[1,6643,"`"],[-1,6644,"支"],[1,6653,"了"],[-1,7099,"\n"],[1,17480,"\n"]],[17480,17480],[6599,6599]]],[1565685547585,["GJX@GJXAIOU",[[-1,11140,"\n"]],[11140,11140],[11139,11139]]],[1565685548632,["GJX@GJXAIOU",[[-1,11136,"```"]],[11139,11139],[11136,11136]]],[1565685549234,["GJX@GJXAIOU",[[-1,11136,"\n"]],[11136,11136],[11135,11135]]],[1565685552006,["GJX@GJXAIOU",[[1,11120,"- "]],[11120,11120],[11122,11122]]],[1565685554279,["GJX@GJXAIOU",[[1,11163,"`"]],[11163,11163],[11164,11164]]],[1565685554864,["GJX@GJXAIOU",[[1,11177,"`"]],[11177,11177],[11178,11178]]],[1565685556847,["GJX@GJXAIOU",[[-1,11179,"```"]],[11179,11182],[11179,11179]]],[1565685557880,["GJX@GJXAIOU",[[-1,11180,"\n"]],[11179,11179],[11179,11179]]],[1565685558640,["GJX@GJXAIOU",[[-1,11179,"\n"]],[11179,11179],[11179,11179]]],[1565685560776,["GJX@GJXAIOU",[[-1,11159,"```"]],[11159,11162],[11159,11159]]],[1565685562914,["GJX@GJXAIOU",[[1,11160,"- "]],[11160,11160],[11162,11162]]],[1565685564616,["GJX@GJXAIOU",[[-1,11159,"\n"]],[11159,11159],[11158,11158]]],[1565685574024,["GJX@GJXAIOU",[[-1,11234,"```"]],[11234,11237],[11234,11234]]],[1565685575321,["GJX@GJXAIOU",[[-1,11216,"```\n"]],[11215,11219],[11215,11215]]],[1565685577098,["GJX@GJXAIOU",[[1,11216,"  "]],[11216,11216],[11218,11218]]],[1565685579056,["GJX@GJXAIOU",[[-1,11216,"  "]],[11218,11218],[11216,11216]]],[1565685581193,["GJX@GJXAIOU",[[1,11216,"- `"]],[11216,11216],[11219,11219]]],[1565685582527,["GJX@GJXAIOU",[[1,11232,"`"]],[11232,11232],[11233,11233]]],[1565685584016,["GJX@GJXAIOU",[[-1,11235,"\n"]],[11235,11235],[11234,11234]]],[1565685584432,["GJX@GJXAIOU",[[-1,11234,"\n"]],[11234,11234],[11233,11233]]],[1565685598936,["GJX@GJXAIOU",[[1,11258,"`"]],[11258,11258],[11259,11259]]],[1565685599553,["GJX@GJXAIOU",[[1,11273,"`"]],[11273,11273],[11274,11274]]],[1565685601688,["GJX@GJXAIOU",[[-1,11275,"```"]],[11275,11278],[11275,11275]]],[1565685604079,["GJX@GJXAIOU",[[-1,11276,"\n"]],[11277,11277],[11276,11276]]],[1565685604514,["GJX@GJXAIOU",[[-1,11275,"\n"]],[11276,11276],[11275,11275]]],[1565685665062,[null,[[-1,6599,"到"],[1,6641,"到"],[-1,6643,"`"],[1,6645,"支"],[-1,6653,"了"],[1,7100,"\n"],[-1,17464,"\n"]],[6599,6599],[17464,17464]]],[1565685665062,[null,[[1,6599,"到"],[-1,6640,"到"],[1,6643,"`"],[-1,6644,"支"],[1,6653,"了"],[-1,7099,"\n"],[1,17464,"\n"]],[17464,17464],[6599,6599]]],[1565685606193,["GJX@GJXAIOU",[[1,11257,"``"]],[11254,11257],[11254,11259]]],[1565685607616,["GJX@GJXAIOU",[[-1,11254,"`````"]],[11254,11259],[11254,11254]]],[1565685607986,["GJX@GJXAIOU",[[-1,11254,"\n"]],[11254,11254],[11253,11253]]],[1565685608705,["GJX@GJXAIOU",[[-1,11253,"\n"]],[11253,11253],[11252,11252]]],[1565685611138,["GJX@GJXAIOU",[[1,11253,"\n"]],[11253,11253],[11254,11254]]],[1565685611811,["GJX@GJXAIOU",[[1,11254,"- "]],[11254,11254],[11256,11256]]],[1565685620673,["GJX@GJXAIOU",[[-1,11306,"![](https://mmbiz.qpic.cn/mmbiz_png/JfTPiahTHJhpibRAib4ypnbXhb1w94Ria1fD2c8Mic5G8sib5EPkrKnNQ5nKVUrBb6z08Jic5lKCD0WLRjEibLc73W08qg/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1)\n"]],[11305,11487],[11305,11305]]],[1565685623312,["GJX@GJXAIOU",[[-1,11312,"**"]],[11314,11314],[11312,11312]]],[1565685624458,["GJX@GJXAIOU",[[-1,11321,"**"]],[11323,11323],[11321,11321]]],[1565685632784,["GJX@GJXAIOU",[[-1,11323,"> 将其它分支合并到当前分支"]],[11325,11325],[11323,11323]]],[1565685634360,["GJX@GJXAIOU",[[1,11321," 将其它分支合并到当前分支"]],[11321,11321],[11334,11334]]],[1565685640209,["GJX@GJXAIOU",[[1,11342,"`"]],[11342,11342],[11343,11343]]],[1565685641144,["GJX@GJXAIOU",[[1,11361,"`"]],[11361,11361],[11362,11362]]],[1565685642568,["GJX@GJXAIOU",[[-1,11338,"```"]],[11338,11341],[11338,11338]]],[1565685644345,["GJX@GJXAIOU",[[1,11363,"``"]],[11360,11363],[11360,11365]]],[1565685644826,["GJX@GJXAIOU",[[-1,11360,"`````"]],[11360,11365],[11360,11360]]],[1565685647312,["GJX@GJXAIOU",[[-1,11338,"\n"]],[11338,11338],[11337,11337]]],[1565685647537,["GJX@GJXAIOU",[[-1,11337,"\n"]],[11337,11337],[11336,11336]]],[1565685647864,["GJX@GJXAIOU",[[-1,11336,"\n"]],[11336,11336],[11335,11335]]],[1565685649880,["GJX@GJXAIOU",[[-1,11358,"\n"]],[11358,11358],[11357,11357]]],[1565685650432,["GJX@GJXAIOU",[[-1,11357,"\n"]],[11357,11357],[11356,11356]]],[1565685725062,[null,[[-1,6599,"到"],[1,6641,"到"],[-1,6643,"`"],[1,6645,"支"],[-1,6653,"了"],[1,7100,"\n"],[-1,17266,"\n"]],[6599,6599],[17266,17266]]],[1565685725062,[null,[[1,6599,"到"],[-1,6640,"到"],[1,6643,"`"],[-1,6644,"支"],[1,6653,"了"],[-1,7099,"\n"],[1,17266,"\n"]],[17266,17266],[6599,6599]]],[1565685693552,["GJX@GJXAIOU",[[-1,11422,"![](https://mmbiz.qpic.cn/mmbiz_gif/JfTPiahTHJhpibRAib4ypnbXhb1w94Ria1fDIrnwSJKjgesKaXqqdec9FRUnIEHwnCnI1mrFG0ov0YEcCHwdqYNxUQ/640?wx_fmt=gif&tp=webp&wxfrom=5&wx_lazy=1)"]],[11422,11591],[11422,11422]]],[1565685700118,["GJX@GJXAIOU",[[1,11422,"![合并分支]($resource/%E5%90%88%E5%B9%B6%E5%88%86%E6%94%AF.gif)"]],[11422,11422],[11482,11482]]],[1565685708913,["GJX@GJXAIOU",[[1,11483,"`"]],[11483,11483],[11484,11484]]],[1565685710022,["GJX@GJXAIOU",[[1,11502,"`"]],[11502,11502],[11503,11503]]],[1565685712043,["GJX@GJXAIOU",[[1,11483,"- "]],[11483,11483],[11485,11485]]],[1565685714400,["GJX@GJXAIOU",[[-1,11506,"\n"]],[11506,11506],[11505,11505]]],[1565685785065,[null,[[-1,6599,"到"],[1,6641,"到"],[-1,6643,"`"],[1,6645,"支"],[-1,6653,"了"],[1,7100,"\n"],[-1,17159,"\n"]],[6599,6599],[17159,17159]]],[1565685785065,[null,[[1,6599,"到"],[-1,6640,"到"],[1,6643,"`"],[-1,6644,"支"],[1,6653,"了"],[-1,7099,"\n"],[1,17159,"\n"]],[17159,17159],[6599,6599]]],[1565685747240,["GJX@GJXAIOU",[[-1,11641,"![](https://mmbiz.qpic.cn/mmbiz_png/JfTPiahTHJhpibRAib4ypnbXhb1w94Ria1fDkQfrlybgcUKd1jq8QibHUketIhSSHibRPQ0PywAHYLh29TCNEhJ7vjIA/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1)\n"]],[11640,11820],[11640,11640]]],[1565685754491,["GJX@GJXAIOU",[[1,11640,"![分支合并]($resource/%E5%88%86%E6%94%AF%E5%90%88%E5%B9%B6.png)"]],[11640,11640],[11700,11700]]],[1565685757256,["GJX@GJXAIOU",[[1,11640,"\n"]],[11640,11640],[11641,11641]]],[1565685760477,["GJX@GJXAIOU",[[1,11706,"`"]],[11706,11706],[11707,11707]]],[1565685761447,["GJX@GJXAIOU",[[1,11726,"`"]],[11726,11726],[11727,11727]]],[1565685762954,["GJX@GJXAIOU",[[-1,11702,"```"]],[11702,11705],[11702,11702]]],[1565685765407,["GJX@GJXAIOU",[[-1,11725,"```"]],[11728,11728],[11725,11725]]],[1565685766355,["GJX@GJXAIOU",[[-1,11726,"\n"]],[11726,11726],[11725,11725]]],[1565685767169,["GJX@GJXAIOU",[[-1,11725,"\n"]],[11725,11725],[11724,11724]]],[1565685771105,["GJX@GJXAIOU",[[1,11703,"- "]],[11703,11703],[11705,11705]]],[1565685772384,["GJX@GJXAIOU",[[-1,11702,"\n"]],[11702,11702],[11701,11701]]],[1565685778503,["GJX@GJXAIOU",[[-1,11802,"**"]],[11804,11804],[11802,11802]]],[1565685779447,["GJX@GJXAIOU",[[-1,11814,"**"]],[11816,11816],[11814,11814]]],[1565685783155,["GJX@GJXAIOU",[[-1,11817," 切换分支"]],[11818,11818],[11817,11817]]],[1565685784809,["GJX@GJXAIOU",[[1,11814," 切换分支"]],[11814,11814],[11819,11819]]],[1565685845067,[null,[[-1,6599,"到"],[1,6641,"到"],[-1,6643,"`"],[1,6645,"支"],[-1,6653,"了"],[1,7100,"\n"],[-1,17030,"\n"]],[6599,6599],[17030,17030]]],[1565685845067,[null,[[1,6599,"到"],[-1,6640,"到"],[1,6643,"`"],[-1,6644,"支"],[1,6653,"了"],[-1,7099,"\n"],[1,17030,"\n"]],[17030,17030],[6599,6599]]],[1565685786848,["GJX@GJXAIOU",[[-1,11821,">\n"]],[11820,11822],[11820,11820]]],[1565685787352,["GJX@GJXAIOU",[[-1,11821,"\n"]],[11820,11820],[11819,11819]]],[1565685795610,["GJX@GJXAIOU",[[-1,11857,"\n"]],[11857,11857],[11856,11856]]],[1565685797439,["GJX@GJXAIOU",[[-1,11928,"\n"]],[11928,11928],[11927,11927]]],[1565685799648,["GJX@GJXAIOU",[[-1,11924,"```"]],[11924,11927],[11924,11924]]],[1565685800665,["GJX@GJXAIOU",[[-1,11892,"```"]],[11892,11895],[11892,11892]]],[1565685801696,["GJX@GJXAIOU",[[-1,11855,"`"]],[11856,11856],[11855,11855]]],[1565685802842,["GJX@GJXAIOU",[[-1,11821,"```"]],[11821,11824],[11821,11821]]],[1565685803848,["GJX@GJXAIOU",[[-1,11850,"``"]],[11850,11852],[11850,11850]]],[1565685804831,["GJX@GJXAIOU",[[-1,11850,"\n"]],[11850,11850],[11849,11849]]],[1565685805735,["GJX@GJXAIOU",[[-1,11914,"\n"]],[11914,11914],[11913,11913]]],[1565685806936,["GJX@GJXAIOU",[[-1,12040,"\n"]],[12040,12040],[12039,12039]]],[1565685807978,["GJX@GJXAIOU",[[-1,12036,"```"]],[12036,12039],[12036,12036]]],[1565685808976,["GJX@GJXAIOU",[[-1,11999,"```"]],[11999,12002],[11999,11999]]],[1565685809752,["GJX@GJXAIOU",[[-1,12033,"\n"]],[12033,12033],[12032,12032]]],[1565685811024,["GJX@GJXAIOU",[[-1,11999,"\n"]],[11999,11999],[11998,11998]]],[1565685812144,["GJX@GJXAIOU",[[-1,11885,"\n"]],[11885,11885],[11884,11884]]],[1565685814353,["GJX@GJXAIOU",[[-1,12128,"```"]],[12128,12131],[12128,12128]]],[1565685815504,["GJX@GJXAIOU",[[-1,12160,"`"]],[12161,12161],[12160,12160]]],[1565685816993,["GJX@GJXAIOU",[[-1,12161,"\n"]],[12161,12161],[12160,12160]]],[1565685817983,["GJX@GJXAIOU",[[-1,12158,"``"]],[12160,12160],[12158,12158]]],[1565685818465,["GJX@GJXAIOU",[[-1,12158,"\n"]],[12158,12158],[12157,12157]]],[1565685822432,["GJX@GJXAIOU",[[-1,11821,"\n"]],[11821,11821],[11820,11820]]],[1565685823304,["GJX@GJXAIOU",[[-1,11820,"\n"]],[11820,11820],[11819,11819]]],[1565685824698,["GJX@GJXAIOU",[[1,11820,"\n"]],[11819,11819],[11820,11820]]],[1565685826656,["GJX@GJXAIOU",[[1,11821,"`"]],[11821,11821],[11822,11822]]],[1565685827751,["GJX@GJXAIOU",[[1,11849,"`"]],[11849,11849],[11850,11850]]],[1565685828542,["GJX@GJXAIOU",[[1,11913,"`"]],[11913,11913],[11914,11914]]],[1565685829929,["GJX@GJXAIOU",[[1,11886,"`"]],[11886,11886],[11887,11887]]],[1565685830720,["GJX@GJXAIOU",[[1,12001,"`"]],[12001,12001],[12002,12002]]],[1565685831743,["GJX@GJXAIOU",[[1,12034,"`"]],[12034,12034],[12035,12035]]],[1565685832751,["GJX@GJXAIOU",[[1,12162,"`"]],[12162,12162],[12163,12163]]],[1565685833727,["GJX@GJXAIOU",[[1,12134,"`"]],[12134,12134],[12135,12135]]],[1565685835728,["GJX@GJXAIOU",[[1,12134,"- "]],[12134,12134],[12136,12136]]],[1565685838444,["GJX@GJXAIOU",[[1,12001,"- "]],[12001,12001],[12003,12003]]],[1565685841063,["GJX@GJXAIOU",[[1,11886,"- "]],[11886,11886],[11888,11888]]],[1565685843485,["GJX@GJXAIOU",[[1,11821,"- "]],[11821,11821],[11823,11823]]],[1565685905068,[null,[[-1,6599,"到"],[1,6641,"到"],[-1,6643,"`"],[1,6645,"支"],[-1,6653,"了"],[1,7100,"\n"],[-1,17008,"\n"]],[6599,6599],[17008,17008]]],[1565685905068,[null,[[1,6599,"到"],[-1,6640,"到"],[1,6643,"`"],[-1,6644,"支"],[1,6653,"了"],[-1,7099,"\n"],[1,17008,"\n"]],[17008,17008],[6599,6599]]],[1565685846363,["GJX@GJXAIOU",[[-1,12139,"\n"]],[12139,12139],[12138,12138]]],[1565685851794,["GJX@GJXAIOU",[[-1,12251,"**"]],[12253,12253],[12251,12251]]],[1565685854131,["GJX@GJXAIOU",[[-1,12260,"**"]],[12262,12262],[12260,12260]]],[1565685858728,["GJX@GJXAIOU",[[-1,12262,"> "]],[12264,12264],[12262,12262]]],[1565685876048,["GJX@GJXAIOU",[[-1,12390,"```"]],[12390,12393],[12390,12390]]],[1565685877530,["GJX@GJXAIOU",[[-1,12409,"```"]],[12409,12412],[12409,12409]]],[1565685878161,["GJX@GJXAIOU",[[-1,12391,"\n"]],[12391,12391],[12390,12390]]],[1565685878359,["GJX@GJXAIOU",[[-1,12390,"\n"]],[12390,12390],[12389,12389]]],[1565685879776,["GJX@GJXAIOU",[[-1,12423,"```"]],[12423,12426],[12423,12423]]],[1565685880568,["GJX@GJXAIOU",[[-1,12424,"\n"]],[12424,12424],[12423,12423]]],[1565685880817,["GJX@GJXAIOU",[[-1,12423,"\n"]],[12423,12423],[12422,12422]]],[1565685882138,["GJX@GJXAIOU",[[-1,12434,"```"]],[12434,12437],[12434,12434]]],[1565685883595,["GJX@GJXAIOU",[[-1,12460,"```"]],[12460,12463],[12460,12460]]],[1565685884488,["GJX@GJXAIOU",[[-1,12434,"\n"]],[12434,12434],[12433,12433]]],[1565685885304,["GJX@GJXAIOU",[[-1,12407,"\n"]],[12406,12406],[12405,12405]]],[1565685886432,["GJX@GJXAIOU",[[-1,12459,"\n"]],[12459,12459],[12458,12458]]],[1565685886651,["GJX@GJXAIOU",[[-1,12458,"\n"]],[12458,12458],[12457,12457]]],[1565685888034,["GJX@GJXAIOU",[[-1,12470,"```\n"]],[12469,12473],[12469,12469]]],[1565685902455,["GJX@GJXAIOU",[[-1,12495,"```"]],[12498,12498],[12495,12495]]],[1565686025096,[null,[[-1,6599,"到"],[1,6641,"到"],[-1,6643,"`"],[1,6645,"支"],[-1,6653,"了"],[1,7100,"\n"],[-1,16971,"\n"]],[6599,6599],[16971,16971]]],[1565686025096,[null,[[1,6599,"到"],[-1,6640,"到"],[1,6643,"`"],[-1,6644,"支"],[1,6653,"了"],[-1,7099,"\n"],[1,16971,"\n"]],[16971,16971],[6599,6599]]],[1565685990336,["GJX@GJXAIOU",[[-1,12376,"```"]],[12376,12379],[12376,12376]]],[1565685993425,["GJX@GJXAIOU",[[-1,12493,"\n"]],[12493,12493],[12492,12492]]],[1565685993640,["GJX@GJXAIOU",[[-1,12492,"\n"]],[12492,12492],[12491,12491]]],[1565685995219,["GJX@GJXAIOU",[[-1,12524,"`"]],[12525,12525],[12524,12524]]],[1565685996099,["GJX@GJXAIOU",[[-1,12504,"```"]],[12504,12507],[12504,12504]]],[1565685997032,["GJX@GJXAIOU",[[-1,12520,"`"]],[12521,12521],[12520,12520]]],[1565685997928,["GJX@GJXAIOU",[[-1,12521,"\n"]],[12521,12521],[12520,12520]]],[1565685998304,["GJX@GJXAIOU",[[-1,12519,"`"]],[12520,12520],[12519,12519]]],[1565685998785,["GJX@GJXAIOU",[[-1,12519,"\n"]],[12519,12519],[12518,12518]]],[1565685999490,["GJX@GJXAIOU",[[-1,12504,"\n"]],[12504,12504],[12503,12503]]],[1565686002794,["GJX@GJXAIOU",[[-1,12546,"```"]],[12546,12549],[12546,12546]]],[1565686004032,["GJX@GJXAIOU",[[-1,12573,"```"]],[12573,12576],[12573,12573]]],[1565686018754,["GJX@GJXAIOU",[[-1,12599,"```"],[1,12602," "]],[12599,12602],[12599,12600]]],[1565686021178,["GJX@GJXAIOU",[[-1,12628,"```"],[1,12631," "]],[12628,12631],[12628,12629]]],[1565686022107,["GJX@GJXAIOU",[[-1,12654,"```"],[1,12657," "]],[12654,12657],[12654,12655]]],[1565686022770,["GJX@GJXAIOU",[[-1,12672,"```"],[1,12675," "]],[12672,12675],[12672,12673]]],[1565686023036,["GJX@GJXAIOU",[[-1,12686,"```"],[1,12689," "]],[12686,12689],[12686,12687]]],[1565686023274,["GJX@GJXAIOU",[[-1,12705,"```"],[1,12708," "]],[12705,12708],[12705,12706]]],[1565686023468,["GJX@GJXAIOU",[[-1,12749,"```"],[1,12752," "]],[12749,12752],[12749,12750]]],[1565686023695,["GJX@GJXAIOU",[[-1,12774,"```"],[1,12777," "]],[12774,12777],[12774,12775]]],[1565686023907,["GJX@GJXAIOU",[[-1,12846,"```"],[1,12849," "]],[12846,12849],[12846,12847]]],[1565686024831,["GJX@GJXAIOU",[[-1,12867,"```"],[1,12870," "]],[12867,12870],[12867,12868]]],[1565686085143,[null,[[-1,6599,"到"],[1,6641,"到"],[-1,6643,"`"],[1,6645,"支"],[-1,6653,"了"],[1,7100,"\n"],[-1,16931,"\n"]],[6599,6599],[16931,16931]]],[1565686085143,[null,[[1,6599,"到"],[-1,6640,"到"],[1,6643,"`"],[-1,6644,"支"],[1,6653,"了"],[-1,7099,"\n"],[1,16931,"\n"]],[16931,16931],[6599,6599]]],[1565686025655,["GJX@GJXAIOU",[[-1,12914,"```"],[1,12917," "]],[12914,12917],[12914,12915]]],[1565686027155,["GJX@GJXAIOU",[[-1,12927,"```"],[1,12930," "]],[12927,12930],[12927,12928]]],[1565686027403,["GJX@GJXAIOU",[[-1,12946,"```"],[1,12949," "]],[12946,12949],[12946,12947]]],[1565686027667,["GJX@GJXAIOU",[[-1,12966,"```"],[1,12969," "]],[12966,12969],[12966,12967]]],[1565686027875,["GJX@GJXAIOU",[[-1,12993,"```"],[1,12996," "]],[12993,12996],[12993,12994]]],[1565686028182,["GJX@GJXAIOU",[[-1,13025,"```"],[1,13028," "]],[13025,13028],[13025,13026]]],[1565686028395,["GJX@GJXAIOU",[[-1,13054,"```"],[1,13057," "]],[13054,13057],[13054,13055]]],[1565686028583,["GJX@GJXAIOU",[[-1,13087,"```"],[1,13090," "]],[13087,13090],[13087,13088]]],[1565686028796,["GJX@GJXAIOU",[[-1,13114,"```"],[1,13117," "]],[13114,13117],[13114,13115]]],[1565686029004,["GJX@GJXAIOU",[[-1,13128,"```"],[1,13131," "]],[13128,13131],[13128,13129]]],[1565686029441,["GJX@GJXAIOU",[[-1,13144,"```"],[1,13147," "]],[13144,13147],[13144,13145]]],[1565686029651,["GJX@GJXAIOU",[[-1,13168,"```"],[1,13171," "]],[13168,13171],[13168,13169]]],[1565686029845,["GJX@GJXAIOU",[[-1,13224,"```"],[1,13227," "]],[13224,13227],[13224,13225]]],[1565686030095,["GJX@GJXAIOU",[[-1,13251,"```"],[1,13254," "]],[13251,13254],[13251,13252]]],[1565686030472,["GJX@GJXAIOU",[[-1,13269,"```"],[1,13272," "]],[13269,13272],[13269,13270]]],[1565686030733,["GJX@GJXAIOU",[[-1,13301,"```"],[1,13304," "]],[13301,13304],[13301,13302]]],[1565686031791,["GJX@GJXAIOU",[[-1,13828,"```"],[1,13831," "]],[13828,13831],[13828,13829]]],[1565686032554,["GJX@GJXAIOU",[[-1,13854,"```"],[1,13857," "]],[13854,13857],[13854,13855]]],[1565686034784,["GJX@GJXAIOU",[[-1,13947,"```"],[1,13950," "]],[13947,13950],[13947,13948]]],[1565686035511,["GJX@GJXAIOU",[[-1,13976,"```"],[1,13979," "]],[13976,13979],[13976,13977]]],[1565686036210,["GJX@GJXAIOU",[[-1,14025,"```"],[1,14028," "]],[14025,14028],[14025,14026]]],[1565686036803,["GJX@GJXAIOU",[[-1,14053,"```"],[1,14056," "]],[14053,14056],[14053,14054]]],[1565686037441,["GJX@GJXAIOU",[[-1,14100,"```"],[1,14103," "]],[14100,14103],[14100,14101]]],[1565686038076,["GJX@GJXAIOU",[[-1,14128,"```"],[1,14131," "]],[14128,14131],[14128,14129]]],[1565686038739,["GJX@GJXAIOU",[[-1,14224,"```"],[1,14227," "]],[14224,14227],[14224,14225]]],[1565686039374,["GJX@GJXAIOU",[[-1,14249,"```"],[1,14252," "]],[14249,14252],[14249,14250]]],[1565686040121,["GJX@GJXAIOU",[[-1,14516,"```"],[1,14519," "]],[14516,14519],[14516,14517]]],[1565686040784,["GJX@GJXAIOU",[[-1,14539,"```"],[1,14542," "]],[14539,14542],[14539,14540]]],[1565686041479,["GJX@GJXAIOU",[[-1,14580,"```"],[1,14583," "]],[14580,14583],[14580,14581]]],[1565686042115,["GJX@GJXAIOU",[[-1,14607,"```"],[1,14610," "]],[14607,14610],[14607,14608]]],[1565686042727,["GJX@GJXAIOU",[[-1,14778,"```"],[1,14781," "]],[14778,14781],[14778,14779]]],[1565686043393,["GJX@GJXAIOU",[[-1,14796,"```"],[1,14799," "]],[14796,14799],[14796,14797]]],[1565686043640,["GJX@GJXAIOU",[[-1,14810,"```"],[1,14813," "]],[14810,14813],[14810,14811]]],[1565686043834,["GJX@GJXAIOU",[[-1,14838,"```"],[1,14841," "]],[14838,14841],[14838,14839]]],[1565686044100,["GJX@GJXAIOU",[[-1,14879,"```"],[1,14882," "]],[14879,14882],[14879,14880]]],[1565686044860,["GJX@GJXAIOU",[[-1,14900,"```"],[1,14903," "]],[14900,14903],[14900,14901]]],[1565686045176,["GJX@GJXAIOU",[[-1,15189,"```"],[1,15192," "]],[15189,15192],[15189,15190]]],[1565686045434,["GJX@GJXAIOU",[[-1,15207,"```"],[1,15210," "]],[15207,15210],[15207,15208]]],[1565686046441,["GJX@GJXAIOU",[[-1,15236,"```"],[1,15239," "]],[15236,15239],[15236,15237]]],[1565686047039,["GJX@GJXAIOU",[[-1,15253,"```"],[1,15256," "]],[15253,15256],[15253,15254]]],[1565686047807,["GJX@GJXAIOU",[[-1,15693,"```"],[1,15696," "]],[15693,15696],[15693,15694]]],[1565686048344,["GJX@GJXAIOU",[[-1,15709,"```"],[1,15712," "]],[15709,15712],[15709,15710]]],[1565686048899,["GJX@GJXAIOU",[[-1,15762,"```"],[1,15765," "]],[15762,15765],[15762,15763]]],[1565686049156,["GJX@GJXAIOU",[[-1,15834,"```"],[1,15837," "]],[15834,15837],[15834,15835]]],[1565686050124,["GJX@GJXAIOU",[[-1,15909,"```"],[1,15912," "]],[15909,15912],[15909,15910]]],[1565686050893,["GJX@GJXAIOU",[[-1,15940,"```"],[1,15943," "]],[15940,15943],[15940,15941]]],[1565686052975,["GJX@GJXAIOU",[[-1,16047,"```"],[1,16050," "]],[16047,16050],[16047,16048]]],[1565686053748,["GJX@GJXAIOU",[[-1,16077,"```"],[1,16080," "]],[16077,16080],[16077,16078]]],[1565686054395,["GJX@GJXAIOU",[[-1,16147,"```"],[1,16150," "]],[16147,16150],[16147,16148]]],[1565686054899,["GJX@GJXAIOU",[[-1,16166,"```"],[1,16169," "]],[16166,16169],[16166,16167]]],[1565686055484,["GJX@GJXAIOU",[[-1,16177,"```"],[1,16180," "]],[16177,16180],[16177,16178]]],[1565686056099,["GJX@GJXAIOU",[[-1,16194,"```"],[1,16197," "]],[16194,16197],[16194,16195]]],[1565686056365,["GJX@GJXAIOU",[[-1,16215,"```"],[1,16218," "]],[16215,16218],[16215,16216]]],[1565686057441,["GJX@GJXAIOU",[[-1,16233,"```"],[1,16236," "]],[16233,16236],[16233,16234]]],[1565686058113,["GJX@GJXAIOU",[[-1,16254,"```"],[1,16257," "]],[16254,16257],[16254,16255]]],[1565686058711,["GJX@GJXAIOU",[[-1,16273,"```"],[1,16276," "]],[16273,16276],[16273,16274]]],[1565686059324,["GJX@GJXAIOU",[[-1,16390,"```"],[1,16393," "]],[16390,16393],[16390,16391]]],[1565686059964,["GJX@GJXAIOU",[[-1,16450,"```"],[1,16453," "]],[16450,16453],[16450,16451]]],[1565686060619,["GJX@GJXAIOU",[[-1,16472,"```"],[1,16475," "]],[16472,16475],[16472,16473]]],[1565686061257,["GJX@GJXAIOU",[[-1,16500,"```"],[1,16503," "]],[16500,16503],[16500,16501]]],[1565686061931,["GJX@GJXAIOU",[[-1,16601,"```"],[1,16604," "]],[16601,16604],[16601,16602]]],[1565686062631,["GJX@GJXAIOU",[[-1,16647,"```"],[1,16650," "]],[16647,16650],[16647,16648]]],[1565686081935,["GJX@GJXAIOU",[[1,12377,"`"]],[12377,12377],[12378,12378]]],[1565686082564,["GJX@GJXAIOU",[[1,12393,"`"]],[12393,12393],[12394,12394]]],[1565686083977,["GJX@GJXAIOU",[[-1,12393,"`"]],[12394,12394],[12393,12393]]],[1565686084935,["GJX@GJXAIOU",[[1,12387,"`"]],[12387,12387],[12388,12388]]],[1565686145143,[null,[[-1,6599,"到"],[1,6641,"到"],[-1,6643,"`"],[1,6645,"支"],[-1,6653,"了"],[1,7100,"\n"],[-1,16809,"\n"]],[6599,6599],[16809,16809]]],[1565686145143,[null,[[1,6599,"到"],[-1,6640,"到"],[1,6643,"`"],[-1,6644,"支"],[1,6653,"了"],[-1,7099,"\n"],[1,16809,"\n"]],[16809,16809],[6599,6599]]],[1565686087297,["GJX@GJXAIOU",[[1,12377,"- "]],[12377,12377],[12379,12379]]],[1565686088993,["GJX@GJXAIOU",[[-1,12376,"\n"]],[12376,12376],[12375,12375]]],[1565686091720,["GJX@GJXAIOU",[[1,12407,"`"]],[12407,12407],[12408,12408]]],[1565686093048,["GJX@GJXAIOU",[[1,12434,"`"]],[12434,12434],[12435,12435]]],[1565686093961,["GJX@GJXAIOU",[[1,12472,"`"]],[12472,12472],[12473,12473]]],[1565686094703,["GJX@GJXAIOU",[[1,12510,"`"]],[12510,12510],[12511,12511]]],[1565686095303,["GJX@GJXAIOU",[[1,12524,"`"]],[12524,12524],[12525,12525]]],[1565686096048,["GJX@GJXAIOU",[[1,12497,"`"]],[12497,12497],[12498,12498]]],[1565686096632,["GJX@GJXAIOU",[[1,12459,"`"]],[12459,12459],[12460,12460]]],[1565686097472,["GJX@GJXAIOU",[[1,12422,"`"]],[12422,12422],[12423,12423]]],[1565686099833,["GJX@GJXAIOU",[[1,12407,"* "]],[12423,12423],[12425,12425]]],[1565686102298,["GJX@GJXAIOU",[[1,12437,"* "]],[12441,12441],[12443,12443]]],[1565686104193,["GJX@GJXAIOU",[[1,12478,"* "]],[12482,12482],[12484,12484]]],[1565686106816,["GJX@GJXAIOU",[[1,12519,"* "]],[12526,12526],[12528,12528]]],[1565686109039,["GJX@GJXAIOU",[[1,12566,"`"]],[12566,12566],[12567,12567]]],[1565686109871,["GJX@GJXAIOU",[[1,12592,"`"]],[12592,12592],[12593,12593]]],[1565686112056,["GJX@GJXAIOU",[[-1,12595,"\n"]],[12595,12595],[12594,12594]]],[1565686112488,["GJX@GJXAIOU",[[-1,12594,"\n"]],[12594,12594],[12593,12593]]],[1565686114907,["GJX@GJXAIOU",[[-1,12565,"\n"]],[12565,12565],[12564,12564]]],[1565686117344,["GJX@GJXAIOU",[[-1,12648,"\n"]],[12648,12648],[12647,12647]]],[1565686117642,["GJX@GJXAIOU",[[-1,12646," "]],[12647,12647],[12646,12646]]],[1565686118874,["GJX@GJXAIOU",[[-1,12646,"\n"]],[12646,12646],[12645,12645]]],[1565686119608,["GJX@GJXAIOU",[[1,12645,"`"]],[12645,12645],[12646,12646]]],[1565686121167,["GJX@GJXAIOU",[[1,12619,"`"]],[12619,12619],[12620,12620]]],[1565686127009,["GJX@GJXAIOU",[[1,12673,"`"]],[12673,12673],[12674,12674]]],[1565686127559,["GJX@GJXAIOU",[[1,12689,"`"]],[12689,12689],[12690,12690]]],[1565686129008,["GJX@GJXAIOU",[[-1,12693,"\n"]],[12693,12693],[12692,12692]]],[1565686129153,["GJX@GJXAIOU",[[-1,12691," "]],[12692,12692],[12691,12691]]],[1565686130552,["GJX@GJXAIOU",[[-1,12691,"\n"]],[12691,12691],[12690,12690]]],[1565686133105,["GJX@GJXAIOU",[[-1,12723,"\n"]],[12724,12724],[12723,12723]]],[1565686133640,["GJX@GJXAIOU",[[-1,12722,"\n"]],[12723,12723],[12722,12722]]],[1565686135921,["GJX@GJXAIOU",[[1,12704,"`"]],[12704,12704],[12705,12705]]],[1565686137081,["GJX@GJXAIOU",[[1,12721,"`"]],[12721,12721],[12722,12722]]],[1565686138992,["GJX@GJXAIOU",[[1,12767,"`"]],[12767,12767],[12768,12768]]],[1565686139882,["GJX@GJXAIOU",[[1,12790,"`"]],[12790,12790],[12791,12791]]],[1565686141186,["GJX@GJXAIOU",[[-1,12794,"\n"]],[12794,12794],[12793,12793]]],[1565686141664,["GJX@GJXAIOU",[[-1,12792," "]],[12793,12793],[12792,12792]]],[1565686142960,["GJX@GJXAIOU",[[-1,12792,"\n"]],[12792,12792],[12791,12791]]],[1565686205147,[null,[[-1,6599,"到"],[1,6641,"到"],[-1,6643,"`"],[1,6645,"支"],[-1,6653,"了"],[1,7100,"\n"],[-1,16822,"\n"]],[6599,6599],[16822,16822]]],[1565686205147,[null,[[1,6599,"到"],[-1,6640,"到"],[1,6643,"`"],[-1,6644,"支"],[1,6653,"了"],[-1,7099,"\n"],[1,16822,"\n"]],[16822,16822],[6599,6599]]],[1565686146408,["GJX@GJXAIOU",[[-1,12764,"\n"]],[12764,12764],[12763,12763]]],[1565686147352,["GJX@GJXAIOU",[[-1,12702," "]],[12703,12703],[12702,12702]]],[1565686147944,["GJX@GJXAIOU",[[-1,12702,"\n"]],[12702,12702],[12701,12701]]],[1565686148928,["GJX@GJXAIOU",[[-1,12671," "]],[12672,12672],[12671,12671]]],[1565686149728,["GJX@GJXAIOU",[[-1,12671,"\n"]],[12671,12671],[12670,12670]]],[1565686150552,["GJX@GJXAIOU",[[-1,12617," "]],[12618,12618],[12617,12617]]],[1565686151369,["GJX@GJXAIOU",[[-1,12617,"\n"]],[12617,12617],[12616,12616]]],[1565686155946,["GJX@GJXAIOU",[[1,12565," "]],[12565,12565],[12566,12566]]],[1565686157288,["GJX@GJXAIOU",[[-1,12565," "]],[12566,12566],[12565,12565]]],[1565686157795,["GJX@GJXAIOU",[[1,12565,"- "]],[12565,12565],[12567,12567]]],[1565686162240,["GJX@GJXAIOU",[[1,12619,"* "]],[12619,12619],[12621,12621]]],[1565686163499,["GJX@GJXAIOU",[[1,12673,"* "]],[12673,12673],[12675,12675]]],[1565686164257,["GJX@GJXAIOU",[[1,12705,"l"]],[12705,12705],[12706,12706]]],[1565686165858,["GJX@GJXAIOU",[[-1,12705,"l"]],[12706,12706],[12705,12705]]],[1565686167256,["GJX@GJXAIOU",[[1,12704,"* "]],[12705,12705],[12707,12707]]],[1565686168489,["GJX@GJXAIOU",[[1,12768,"* "]],[12768,12768],[12770,12770]]],[1565686184147,["GJX@GJXAIOU",[[-1,12866,"$ git stash create"]],[12866,12884],[12866,12866]]],[1565686184624,["GJX@GJXAIOU",[[-1,12866,"\n"]],[12866,12866],[12865,12865]]],[1565686185452,["GJX@GJXAIOU",[[-1,12868,"\n"]],[12868,12868],[12867,12867]]],[1565686189938,["GJX@GJXAIOU",[[-1,12872,"**"]],[12874,12874],[12872,12872]]],[1565686190762,["GJX@GJXAIOU",[[-1,12876,"**"]],[12878,12878],[12876,12876]]],[1565686191546,["GJX@GJXAIOU",[[-1,12892,"**"]],[12894,12894],[12892,12892]]],[1565686192766,["GJX@GJXAIOU",[[-1,12883,"**"]],[12885,12885],[12883,12883]]],[1565686194056,["GJX@GJXAIOU",[[-1,12892,"> "]],[12892,12894],[12892,12892]]],[1565686194515,["GJX@GJXAIOU",[[-1,12891,"\n"]],[12892,12892],[12891,12891]]],[1565686194984,["GJX@GJXAIOU",[[-1,12890,"\n"]],[12891,12891],[12890,12890]]],[1565686196001,["GJX@GJXAIOU",[[1,12890," "]],[12890,12890],[12891,12891]]],[1565686198155,["GJX@GJXAIOU",[[-1,12916,"\n"]],[12916,12916],[12915,12915]]],[1565686198365,["GJX@GJXAIOU",[[-1,12914," "]],[12915,12915],[12914,12914]]],[1565686199089,["GJX@GJXAIOU",[[-1,12914,"\n"]],[12914,12914],[12913,12913]]],[1565686200776,["GJX@GJXAIOU",[[-1,12952,"\n"]],[12952,12952],[12951,12951]]],[1565686200990,["GJX@GJXAIOU",[[-1,12950," "]],[12951,12951],[12950,12950]]],[1565686201551,["GJX@GJXAIOU",[[-1,12950,"\n"]],[12950,12950],[12949,12949]]],[1565686203208,["GJX@GJXAIOU",[[-1,13008,"\n"]],[13008,13008],[13007,13007]]],[1565686203649,["GJX@GJXAIOU",[[-1,13006," "]],[13007,13007],[13006,13006]]],[1565686204234,["GJX@GJXAIOU",[[-1,13006,"\n"]],[13006,13006],[13005,13005]]],[1565686265148,[null,[[-1,6599,"到"],[1,6641,"到"],[-1,6643,"`"],[1,6645,"支"],[-1,6653,"了"],[1,7100,"\n"],[-1,16785,"\n"]],[6599,6599],[16785,16785]]],[1565686265148,[null,[[1,6599,"到"],[-1,6640,"到"],[1,6643,"`"],[-1,6644,"支"],[1,6653,"了"],[-1,7099,"\n"],[1,16785,"\n"]],[16785,16785],[6599,6599]]],[1565686206080,["GJX@GJXAIOU",[[-1,13031,"\n"]],[13031,13031],[13030,13030]]],[1565686206689,["GJX@GJXAIOU",[[-1,12973,"\n"]],[12973,12973],[12972,12972]]],[1565686207632,["GJX@GJXAIOU",[[-1,12929,"\n"]],[12929,12929],[12928,12928]]],[1565686208499,["GJX@GJXAIOU",[[-1,12901," "]],[12902,12902],[12901,12901]]],[1565686209056,["GJX@GJXAIOU",[[-1,12901,"\n"]],[12901,12901],[12900,12900]]],[1565686211424,["GJX@GJXAIOU",[[-1,13062,"\n"]],[13062,13062],[13061,13061]]],[1565686211891,["GJX@GJXAIOU",[[-1,13060," "]],[13061,13061],[13060,13060]]],[1565686212376,["GJX@GJXAIOU",[[-1,13060,"\n"]],[13060,13060],[13059,13059]]],[1565686213752,["GJX@GJXAIOU",[[-1,13100,"\n"]],[13100,13100],[13099,13099]]],[1565686214241,["GJX@GJXAIOU",[[-1,13098," "]],[13099,13099],[13098,13098]]],[1565686214777,["GJX@GJXAIOU",[[-1,13098,"\n"]],[13098,13098],[13097,13097]]],[1565686216705,["GJX@GJXAIOU",[[-1,13111," "]],[13112,13112],[13111,13111]]],[1565686217583,["GJX@GJXAIOU",[[-1,13084," "]],[13085,13085],[13084,13084]]],[1565686218121,["GJX@GJXAIOU",[[-1,13084,"\n"]],[13084,13084],[13083,13083]]],[1565686219171,["GJX@GJXAIOU",[[-1,13109,"\n"]],[13108,13108],[13107,13107]]],[1565686220384,["GJX@GJXAIOU",[[-1,13133,"\n"]],[13133,13133],[13132,13132]]],[1565686220833,["GJX@GJXAIOU",[[-1,13131," "]],[13132,13132],[13131,13131]]],[1565686221400,["GJX@GJXAIOU",[[-1,13131,"\n"]],[13131,13131],[13130,13130]]],[1565686222568,["GJX@GJXAIOU",[[-1,13184," "]],[13185,13185],[13184,13184]]],[1565686223208,["GJX@GJXAIOU",[[-1,13184,"\n"]],[13184,13184],[13183,13183]]],[1565686224079,["GJX@GJXAIOU",[[-1,13211,"\n"]],[13211,13211],[13210,13210]]],[1565686224498,["GJX@GJXAIOU",[[-1,13209," "]],[13210,13210],[13209,13209]]],[1565686224999,["GJX@GJXAIOU",[[-1,13209,"\n"]],[13209,13209],[13208,13208]]],[1565686226353,["GJX@GJXAIOU",[[-1,13258,"\n"]],[13258,13258],[13257,13257]]],[1565686226722,["GJX@GJXAIOU",[[-1,13256," "]],[13257,13257],[13256,13256]]],[1565686227471,["GJX@GJXAIOU",[[-1,13256,"\n"]],[13256,13256],[13255,13255]]],[1565686228211,["GJX@GJXAIOU",[[-1,13224," "]],[13225,13225],[13224,13224]]],[1565686228800,["GJX@GJXAIOU",[[-1,13224,"\n"]],[13224,13224],[13223,13223]]],[1565686232023,["GJX@GJXAIOU",[[1,12901,"`"]],[12901,12901],[12902,12902]]],[1565686233280,["GJX@GJXAIOU",[[1,12930,"`"]],[12930,12930],[12931,12931]]],[1565686234593,["GJX@GJXAIOU",[[1,12974,"`"]],[12974,12974],[12975,12975]]],[1565686236361,["GJX@GJXAIOU",[[1,13032,"`"]],[13032,13032],[13033,13033]]],[1565686239168,["GJX@GJXAIOU",[[1,13088,"`"]],[13088,13088],[13089,13089]]],[1565686241521,["GJX@GJXAIOU",[[1,13114,"`"]],[13114,13114],[13115,13115]]],[1565686242727,["GJX@GJXAIOU",[[1,13190,"`"]],[13190,13190],[13191,13191]]],[1565686244522,["GJX@GJXAIOU",[[1,13231,"`"]],[13231,13231],[13232,13232]]],[1565686245193,["GJX@GJXAIOU",[[1,13261,"`"]],[13261,13261],[13262,13262]]],[1565686246009,["GJX@GJXAIOU",[[1,13215,"`"]],[13215,13215],[13216,13216]]],[1565686246729,["GJX@GJXAIOU",[[1,13136,"`"]],[13136,13136],[13137,13137]]],[1565686247695,["GJX@GJXAIOU",[[1,13100,"`"]],[13100,13100],[13101,13101]]],[1565686251087,["GJX@GJXAIOU",[[1,13063,"`"]],[13063,13063],[13064,13064]]],[1565686252463,["GJX@GJXAIOU",[[1,13004,"`"]],[13004,13004],[13005,13005]]],[1565686253618,["GJX@GJXAIOU",[[1,12948,"`"]],[12948,12948],[12949,12949]]],[1565686254679,["GJX@GJXAIOU",[[1,12912,"`"]],[12912,12912],[12913,12913]]],[1565686262763,["GJX@GJXAIOU",[[1,12901,"* "]],[12901,12901],[12903,12903]]],[1565686263640,["GJX@GJXAIOU",[[1,12933,"* "]],[12935,12935],[12937,12937]]],[1565686264267,["GJX@GJXAIOU",[[1,12980,"* "]],[12984,12984],[12986,12986]]],[1565686325152,[null,[[-1,6599,"到"],[1,6641,"到"],[-1,6643,"`"],[1,6645,"支"],[-1,6653,"了"],[1,7100,"\n"],[-1,16779,"\n"]],[6599,6599],[16779,16779]]],[1565686325152,[null,[[1,6599,"到"],[-1,6640,"到"],[1,6643,"`"],[-1,6644,"支"],[1,6653,"了"],[-1,7099,"\n"],[1,16779,"\n"]],[16779,16779],[6599,6599]]],[1565686265760,["GJX@GJXAIOU",[[1,13041,"* "]],[13046,13047],[13048,13049]]],[1565686266826,["GJX@GJXAIOU",[[1,13100,"* "]],[13107,13107],[13109,13109]]],[1565686268250,["GJX@GJXAIOU",[[1,13129,"* "]],[13136,13136],[13138,13138]]],[1565686269031,["GJX@GJXAIOU",[[1,13208,"* "]],[13216,13216],[13218,13218]]],[1565686270617,["GJX@GJXAIOU",[[1,13252,"* "]],[13256,13256],[13258,13258]]],[1565686275929,["GJX@GJXAIOU",[[1,13297,"* "]],[13297,13297],[13299,13299]]],[1565686278731,["GJX@GJXAIOU",[[-1,13346,"\n"]],[13346,13346],[13345,13345]]],[1565686279368,["GJX@GJXAIOU",[[-1,13366,"\n"]],[13366,13366],[13365,13365]]],[1565686280064,["GJX@GJXAIOU",[[-1,13389,"\n"]],[13389,13389],[13388,13388]]],[1565686280720,["GJX@GJXAIOU",[[-1,13407,"\n"]],[13407,13407],[13406,13406]]],[1565686281368,["GJX@GJXAIOU",[[-1,13429,"\n"]],[13429,13429],[13428,13428]]],[1565686282103,["GJX@GJXAIOU",[[-1,13451,"\n"]],[13451,13451],[13450,13450]]],[1565686282880,["GJX@GJXAIOU",[[-1,13477,"\n"]],[13477,13477],[13476,13476]]],[1565686283776,["GJX@GJXAIOU",[[-1,13491,"\n"]],[13491,13491],[13490,13490]]],[1565686284697,["GJX@GJXAIOU",[[-1,13512,"\n"]],[13512,13512],[13511,13511]]],[1565686286187,["GJX@GJXAIOU",[[-1,13526,"\n"]],[13526,13526],[13525,13525]]],[1565686287240,["GJX@GJXAIOU",[[-1,13554,"\n"]],[13554,13554],[13553,13553]]],[1565686287971,["GJX@GJXAIOU",[[-1,13583,"\n"]],[13583,13583],[13582,13582]]],[1565686288689,["GJX@GJXAIOU",[[-1,13598,"\n"]],[13598,13598],[13597,13597]]],[1565686289368,["GJX@GJXAIOU",[[-1,13617,"\n"]],[13617,13617],[13616,13616]]],[1565686290001,["GJX@GJXAIOU",[[-1,13647,"\n"]],[13647,13647],[13646,13646]]],[1565686290665,["GJX@GJXAIOU",[[-1,13678,"\n"]],[13678,13678],[13677,13677]]],[1565686291328,["GJX@GJXAIOU",[[-1,13692,"\n"]],[13692,13692],[13691,13691]]],[1565686292625,["GJX@GJXAIOU",[[-1,13711,"\n"]],[13711,13711],[13710,13710]]],[1565686293378,["GJX@GJXAIOU",[[-1,13730,"\n"]],[13730,13730],[13729,13729]]],[1565686296618,["GJX@GJXAIOU",[[1,13346,"  "],[1,13366,"  "],[1,13389,"  "],[1,13407,"  "],[1,13429,"  "],[1,13451,"  "],[1,13477,"  "],[1,13491,"  "],[1,13512,"  "],[1,13526,"  "],[1,13554,"  "],[1,13583,"  "],[1,13598,"  "],[1,13617,"  "],[1,13647,"  "],[1,13678,"  "],[1,13692,"  "],[1,13711,"  "],[1,13730,"  "]],[13346,13740],[13346,13778]]],[1565686298523,["GJX@GJXAIOU",[[1,13348,"  "],[1,13368,"  "],[1,13393," "],[1,13395," "],[1,13413,"  "],[1,13437,"  "],[1,13463,"  "],[1,13491,"  "],[1,13505," "],[1,13507," "],[1,13530,"  "],[1,13544," "],[1,13546," "],[1,13574,"  "],[1,13605,"  "],[1,13624,"  "],[1,13643,"  "],[1,13675," "],[1,13677," "],[1,13710,"  "],[1,13724,"  "],[1,13747,"  "],[1,13766,"  "]],[13346,13778],[13346,13816]]],[1565686302723,["GJX@GJXAIOU",[[-1,13840,"**"]],[13842,13842],[13840,13840]]],[1565686305170,["GJX@GJXAIOU",[[-1,13823,"**"]],[13823,13825],[13823,13823]]],[1565686306111,["GJX@GJXAIOU",[[-1,13840,"> "]],[13842,13842],[13840,13840]]],[1565686306451,["GJX@GJXAIOU",[[-1,13839,"\n"]],[13840,13840],[13839,13839]]],[1565686307009,["GJX@GJXAIOU",[[-1,13838,"\n"]],[13839,13839],[13838,13838]]],[1565686307946,["GJX@GJXAIOU",[[1,13838," "]],[13838,13838],[13839,13839]]],[1565686310826,["GJX@GJXAIOU",[[-1,13890,"\n"]],[13890,13890],[13889,13889]]],[1565686311210,["GJX@GJXAIOU",[[-1,13888," "]],[13889,13889],[13888,13888]]],[1565686311841,["GJX@GJXAIOU",[[-1,13888,"\n"]],[13888,13888],[13887,13887]]],[1565686312547,["GJX@GJXAIOU",[[-1,13862," "]],[13863,13863],[13862,13862]]],[1565686312897,["GJX@GJXAIOU",[[-1,13862,"\n"]],[13862,13862],[13861,13861]]],[1565686314537,["GJX@GJXAIOU",[[1,13862,"`"]],[13862,13862],[13863,13863]]],[1565686315289,["GJX@GJXAIOU",[[1,13886,"`"]],[13886,13886],[13887,13887]]],[1565686317713,["GJX@GJXAIOU",[[1,13862,"- "]],[13862,13862],[13864,13864]]],[1565686320440,["GJX@GJXAIOU",[[-1,13932,"**"]],[13934,13934],[13932,13932]]],[1565686323756,["GJX@GJXAIOU",[[-1,13921,"**"]],[13923,13923],[13921,13921]]],[1565686385154,[null,[[-1,6599,"到"],[1,6641,"到"],[-1,6643,"`"],[1,6645,"支"],[-1,6653,"了"],[1,7100,"\n"],[-1,16836,"\n"]],[6599,6599],[16836,16836]]],[1565686385154,[null,[[1,6599,"到"],[-1,6640,"到"],[1,6643,"`"],[-1,6644,"支"],[1,6653,"了"],[-1,7099,"\n"],[1,16836,"\n"]],[16836,16836],[6599,6599]]],[1565686326416,["GJX@GJXAIOU",[[-1,13932,"> "]],[13934,13934],[13932,13932]]],[1565686329072,["GJX@GJXAIOU",[[-1,13974," "]],[13975,13975],[13974,13974]]],[1565686329795,["GJX@GJXAIOU",[[-1,13974,"\n"]],[13974,13974],[13973,13973]]],[1565686331368,["GJX@GJXAIOU",[[-1,14003,"\n"]],[14003,14003],[14002,14002]]],[1565686332314,["GJX@GJXAIOU",[[-1,14001," "]],[14002,14002],[14001,14001]]],[1565686332898,["GJX@GJXAIOU",[[-1,14001,"\n"]],[14001,14001],[14000,14000]]],[1565686334658,["GJX@GJXAIOU",[[-1,14047," "]],[14048,14048],[14047,14047]]],[1565686335104,["GJX@GJXAIOU",[[-1,14047,"\n"]],[14047,14047],[14046,14046]]],[1565686336848,["GJX@GJXAIOU",[[-1,14075,"\n"]],[14074,14075],[14074,14074]]],[1565686337385,["GJX@GJXAIOU",[[-1,14073," "]],[14074,14074],[14073,14073]]],[1565686337880,["GJX@GJXAIOU",[[-1,14073,"\n"]],[14073,14073],[14072,14072]]],[1565686339112,["GJX@GJXAIOU",[[-1,14145," "]],[14146,14146],[14145,14145]]],[1565686339432,["GJX@GJXAIOU",[[-1,14146,"\n"]],[14145,14145],[14144,14144]]],[1565686340720,["GJX@GJXAIOU",[[-1,14145,"\n"]],[14145,14145],[14144,14144]]],[1565686341530,["GJX@GJXAIOU",[[-1,14117," "]],[14118,14118],[14117,14117]]],[1565686342152,["GJX@GJXAIOU",[[-1,14117,"\n"]],[14117,14117],[14116,14116]]],[1565686345001,["GJX@GJXAIOU",[[1,14117,"`"]],[14117,14117],[14118,14118]]],[1565686346009,["GJX@GJXAIOU",[[1,14143,"`"]],[14143,14143],[14144,14144]]],[1565686346833,["GJX@GJXAIOU",[[1,14072,"`"]],[14072,14072],[14073,14073]]],[1565686348083,["GJX@GJXAIOU",[[1,14047,"`"]],[14047,14047],[14048,14048]]],[1565686349192,["GJX@GJXAIOU",[[1,13974,"`"]],[13974,13974],[13975,13975]]],[1565686350168,["GJX@GJXAIOU",[[1,14001,"`"]],[14001,14001],[14002,14002]]],[1565686352666,["GJX@GJXAIOU",[[1,13974,"* "]],[13983,13983],[13985,13985]]],[1565686353826,["GJX@GJXAIOU",[[1,14051,"* "]],[14061,14061],[14063,14063]]],[1565686354880,["GJX@GJXAIOU",[[1,14125,"* "]],[14138,14138],[14140,14140]]],[1565686364906,["GJX@GJXAIOU",[[-1,14216,"**"]],[14218,14218],[14216,14216]]],[1565686365859,["GJX@GJXAIOU",[[-1,14226,"**"]],[14228,14228],[14226,14226]]],[1565686367047,["GJX@GJXAIOU",[[-1,14228,">"]],[14229,14229],[14228,14228]]],[1565686368906,["GJX@GJXAIOU",[[-1,14270,"\n"]],[14270,14270],[14269,14269]]],[1565686369362,["GJX@GJXAIOU",[[-1,14268," "]],[14269,14269],[14268,14268]]],[1565686370272,["GJX@GJXAIOU",[[-1,14243," "]],[14244,14244],[14243,14243]]],[1565686371455,["GJX@GJXAIOU",[[-1,14227,"\n"]],[14228,14228],[14227,14227]]],[1565686372120,["GJX@GJXAIOU",[[-1,14226,"\n"]],[14227,14227],[14226,14226]]],[1565686374020,["GJX@GJXAIOU",[[-1,14241,"\n"]],[14241,14241],[14240,14240]]],[1565686375688,["GJX@GJXAIOU",[[1,14241,"`"]],[14241,14241],[14242,14242]]],[1565686376344,["GJX@GJXAIOU",[[1,14264,"`"]],[14264,14264],[14265,14265]]],[1565686377922,["GJX@GJXAIOU",[[-1,14266,"\n"]],[14266,14266],[14265,14265]]],[1565686445295,[null,[[-1,6599,"到"],[1,6641,"到"],[-1,6643,"`"],[1,6645,"支"],[-1,6653,"了"],[1,7100,"\n"],[-1,16821,"\n"]],[6599,6599],[16821,16821]]],[1565686445295,[null,[[1,6599,"到"],[-1,6640,"到"],[1,6643,"`"],[-1,6644,"支"],[1,6653,"了"],[-1,7099,"\n"],[1,16821,"\n"]],[16821,16821],[6599,6599]]],[1565686406024,["GJX@GJXAIOU",[[-1,14300,"![](https://mmbiz.qpic.cn/mmbiz_png/JfTPiahTHJhpibRAib4ypnbXhb1w94Ria1fDU8Qr5GB7XGSTdFnZVSsFianibwjibOhMfmdibic0HhAHebffQrEoYib4WkkQ/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1)"]],[14300,14483],[14300,14300]]],[1565686415629,["GJX@GJXAIOU",[[1,14300,"![合并分支过程]($resource/%E5%90%88%E5%B9%B6%E5%88%86%E6%94%AF%E8%BF%87%E7%A8%8B.png)"]],[14300,14300],[14380,14380]]],[1565686421144,["GJX@GJXAIOU",[[-1,14426," "]],[14427,14427],[14426,14426]]],[1565686421624,["GJX@GJXAIOU",[[-1,14426,"\n"]],[14426,14426],[14425,14425]]],[1565686422498,["GJX@GJXAIOU",[[-1,14425,"\n"]],[14425,14425],[14424,14424]]],[1565686424123,["GJX@GJXAIOU",[[1,14425,"\n"]],[14424,14424],[14425,14425]]],[1565686426201,["GJX@GJXAIOU",[[1,14426,"`"]],[14426,14426],[14427,14427]]],[1565686426897,["GJX@GJXAIOU",[[1,14447,"`"]],[14447,14447],[14448,14448]]],[1565686428202,["GJX@GJXAIOU",[[-1,14451,"\n"]],[14451,14451],[14450,14450]]],[1565686428632,["GJX@GJXAIOU",[[-1,14449," "]],[14450,14450],[14449,14449]]],[1565686430344,["GJX@GJXAIOU",[[-1,14449,"\n"]],[14449,14449],[14448,14448]]],[1565686445089,["GJX@GJXAIOU",[[-1,14489,"pick 9a54fd4 添加commit的说明\n \n"]],[14488,14515],[14488,14488]]],[1565686505385,[null,[[-1,6599,"到"],[1,6641,"到"],[-1,6643,"`"],[1,6645,"支"],[-1,6653,"了"],[1,7100,"\n"],[-1,16687,"\n"]],[6599,6599],[16687,16687]]],[1565686505385,[null,[[1,6599,"到"],[-1,6640,"到"],[1,6643,"`"],[-1,6644,"支"],[1,6653,"了"],[-1,7099,"\n"],[1,16687,"\n"]],[16687,16687],[6599,6599]]],[1565686445569,["GJX@GJXAIOU",[[-1,14487," "]],[14488,14488],[14487,14487]]],[1565686446080,["GJX@GJXAIOU",[[-1,14488,"\n"]],[14487,14487],[14486,14486]]],[1565686448523,["GJX@GJXAIOU",[[1,14486,"```"]],[14486,14486],[14489,14489]]],[1565686448601,["GJX@GJXAIOU",[[1,14489,"language\n```\n"]],[14489,14489],[14489,14497]]],[1565686453736,["GJX@GJXAIOU",[[-1,14489,"lan"],[-1,14493,"uage"]],[14489,14497],[14490,14490]]],[1565686454138,["GJX@GJXAIOU",[[1,14490,"it"]],[14490,14490],[14492,14492]]],[1565686454450,["GJX@GJXAIOU",[[1,14493,"\n"]],[14492,14492],[14493,14493]]],[1565686457070,["GJX@GJXAIOU",[[1,14494,"pick 9a54fd4 添加commit的说明\npick 0d4a808 添加pull的说明\n# Rebase 326fc9f..0d4a808 onto d286baa\n#\n# Commands:\n#  p, pick = use commit\n#  r, reword = use commit, but edit the commit message\n#  e, edit = use commit, but stop for amending\n#  s, squash = use commit, but meld into previous commit\n#  f, fixup = like \"squash\", but discard this commit's log message\n#  x, exec = run command (the rest of the line) using shell\n#\n"]],[14493,14493],[14906,14906]]],[1565686459552,["GJX@GJXAIOU",[[-1,14493,"\n"]],[14493,14493],[14492,14492]]],[1565686462128,["GJX@GJXAIOU",[[-1,14911,"\n"]],[14911,14911],[14910,14910]]],[1565686462712,["GJX@GJXAIOU",[[-1,14910,"\n"]],[14910,14910],[14909,14909]]],[1565686466368,["GJX@GJXAIOU",[[-1,15010,"**"]],[15012,15012],[15010,15010]]],[1565686467504,["GJX@GJXAIOU",[[-1,14998,"**"]],[15000,15000],[14998,14998]]],[1565686468801,["GJX@GJXAIOU",[[-1,15010,"> "]],[15012,15012],[15010,15010]]],[1565686470863,["GJX@GJXAIOU",[[-1,15072," "]],[15073,15073],[15072,15072]]],[1565686471449,["GJX@GJXAIOU",[[-1,15072,"\n"]],[15072,15072],[15071,15071]]],[1565686476064,["GJX@GJXAIOU",[[-1,15088," \n"]],[15088,15090],[15088,15088]]],[1565686476625,["GJX@GJXAIOU",[[-1,15088,"\n"]],[15088,15088],[15087,15087]]],[1565686481009,["GJX@GJXAIOU",[[-1,15129,"\n"]],[15129,15129],[15128,15128]]],[1565686481416,["GJX@GJXAIOU",[[-1,15127," "]],[15128,15128],[15127,15127]]],[1565686481971,["GJX@GJXAIOU",[[-1,15127,"\n"]],[15127,15127],[15126,15126]]],[1565686483442,["GJX@GJXAIOU",[[1,15126,"`"]],[15126,15126],[15127,15127]]],[1565686484377,["GJX@GJXAIOU",[[1,15087,"`"]],[15087,15087],[15088,15088]]],[1565686485352,["GJX@GJXAIOU",[[1,15072,"`"]],[15072,15072],[15073,15073]]],[1565686486409,["GJX@GJXAIOU",[[1,15103,"`"]],[15103,15103],[15104,15104]]],[1565686487616,["GJX@GJXAIOU",[[-1,15101," "]],[15102,15102],[15101,15101]]],[1565686488112,["GJX@GJXAIOU",[[-1,15101,"\n"]],[15101,15101],[15100,15100]]],[1565686491032,["GJX@GJXAIOU",[[1,15169,"`"]],[15169,15169],[15170,15170]]],[1565686491791,["GJX@GJXAIOU",[[1,15188,"`"]],[15188,15188],[15189,15189]]],[1565686493104,["GJX@GJXAIOU",[[-1,15167," "]],[15168,15168],[15167,15167]]],[1565686493547,["GJX@GJXAIOU",[[-1,15167,"\n"]],[15167,15167],[15166,15166]]],[1565686495912,["GJX@GJXAIOU",[[-1,15190,"\n"]],[15190,15190],[15189,15189]]],[1565686496425,["GJX@GJXAIOU",[[-1,15188," "]],[15189,15189],[15188,15188]]],[1565686497551,["GJX@GJXAIOU",[[-1,15188,"\n"]],[15188,15188],[15187,15187]]],[1565686503034,["GJX@GJXAIOU",[[-1,15255,"**"]],[15257,15257],[15255,15255]]],[1565686504291,["GJX@GJXAIOU",[[-1,15245,"**"]],[15247,15247],[15245,15245]]],[1565686505192,["GJX@GJXAIOU",[[-1,15256," "]],[15257,15257],[15256,15256]]],[1565686565492,[null,[[-1,6599,"到"],[1,6641,"到"],[-1,6643,"`"],[1,6645,"支"],[-1,6653,"了"],[1,7100,"\n"],[-1,17087,"\n"]],[6599,6599],[17087,17087]]],[1565686565492,[null,[[1,6599,"到"],[-1,6640,"到"],[1,6643,"`"],[-1,6644,"支"],[1,6653,"了"],[-1,7099,"\n"],[1,17087,"\n"]],[17087,17087],[6599,6599]]],[1565686505760,["GJX@GJXAIOU",[[-1,15255,">"]],[15256,15256],[15255,15255]]],[1565686533640,["GJX@GJXAIOU",[[-1,15287,"![](https://mmbiz.qpic.cn/mmbiz_png/JfTPiahTHJhpibRAib4ypnbXhb1w94Ria1fDiaibYtUs7nmNpWNZP1s4khMMflaPfYExywTcCGJLXTZAa9A0oBDFbb2g/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1)"]],[15287,15466],[15287,15287]]],[1565686534272,["GJX@GJXAIOU",[[-1,15288,"\n"]],[15287,15287],[15286,15286]]],[1565686543752,["GJX@GJXAIOU",[[1,15286,"![git各个区域文件差异]($resource/git%E5%90%84%E4%B8%AA%E5%8C%BA%E5%9F%9F%E6%96%87%E4%BB%B6%E5%B7%AE%E5%BC%82.png)"]],[15286,15286],[15392,15392]]],[1565686547611,["GJX@GJXAIOU",[[-1,15393," "]],[15394,15394],[15393,15393]]],[1565686548072,["GJX@GJXAIOU",[[-1,15393,"\n"]],[15393,15393],[15392,15392]]],[1565686549727,["GJX@GJXAIOU",[[1,15393,"`"]],[15393,15393],[15394,15394]]],[1565686550585,["GJX@GJXAIOU",[[1,15409,"`"]],[15409,15409],[15410,15410]]],[1565686551987,["GJX@GJXAIOU",[[-1,15413,"\n"]],[15413,15413],[15412,15412]]],[1565686552457,["GJX@GJXAIOU",[[-1,15411," "]],[15412,15412],[15411,15411]]],[1565686553568,["GJX@GJXAIOU",[[-1,15411,"\n"]],[15411,15411],[15410,15410]]],[1565686563536,["GJX@GJXAIOU",[[-1,15437," \n test.md | 1 -"]],[15437,15453],[15437,15437]]],[1565686565216,["GJX@GJXAIOU",[[1,15437,"```"]],[15437,15437],[15440,15440]]],[1565686565293,["GJX@GJXAIOU",[[1,15440,"language\n```\n"]],[15440,15440],[15440,15448]]],[1565686625493,[null,[[-1,6599,"到"],[1,6641,"到"],[-1,6643,"`"],[1,6645,"支"],[-1,6653,"了"],[1,7100,"\n"],[-1,17008,"\n"]],[6599,6599],[17008,17008]]],[1565686625493,[null,[[1,6599,"到"],[-1,6640,"到"],[1,6643,"`"],[-1,6644,"支"],[1,6653,"了"],[-1,7099,"\n"],[1,17008,"\n"]],[17008,17008],[6599,6599]]],[1565686568135,["GJX@GJXAIOU",[[-1,15440,"lan"],[-1,15444,"uage"]],[15440,15448],[15441,15441]]],[1565686568453,["GJX@GJXAIOU",[[1,15441,"it"]],[15441,15441],[15443,15443]]],[1565686568817,["GJX@GJXAIOU",[[1,15444,"\n"]],[15443,15443],[15444,15444]]],[1565686572441,["GJX@GJXAIOU",[[1,15445," test.md | 1 -\n 1 file changed, 1 deletion(-)\n"]],[15444,15444],[15490,15490]]],[1565686574104,["GJX@GJXAIOU",[[-1,15444,"\n"]],[15444,15444],[15443,15443]]],[1565686577223,["GJX@GJXAIOU",[[-1,15436,"\n"]],[15436,15436],[15435,15435]]],[1565686579696,["GJX@GJXAIOU",[[-1,15494," "]],[15495,15495],[15494,15494]]],[1565686580144,["GJX@GJXAIOU",[[-1,15495,"\n"]],[15494,15494],[15493,15493]]],[1565686602594,["GJX@GJXAIOU",[[-1,15608,"![](https://mmbiz.qpic.cn/mmbiz_jpg/JfTPiahTHJhpibRAib4ypnbXhb1w94Ria1fDbJ8XCymoFOCQEHfxkTicqFOElzULkdwEcK5Kvfk1I9EPicMHWmIAU6tA/640?wx_fmt=jpeg&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1)"]],[15608,15788],[15608,15608]]],[1565686609592,["GJX@GJXAIOU",[[1,15608,"![640]($resource/640.png)"]],[15608,15608],[15634,15634]]],[1565686614852,["GJX@GJXAIOU",[[-1,15648,"**"]],[15650,15650],[15648,15648]]],[1565686616572,["GJX@GJXAIOU",[[-1,15639,"**"]],[15641,15641],[15639,15639]]],[1565686685495,[null,[[-1,6599,"到"],[1,6641,"到"],[-1,6643,"`"],[1,6645,"支"],[-1,6653,"了"],[1,7100,"\n"],[-1,16887,"\n"]],[6599,6599],[16887,16887]]],[1565686685495,[null,[[1,6599,"到"],[-1,6640,"到"],[1,6643,"`"],[-1,6644,"支"],[1,6653,"了"],[-1,7099,"\n"],[1,16887,"\n"]],[16887,16887],[6599,6599]]],[1565686643320,["GJX@GJXAIOU",[[-1,15712,"#### "]],[15712,15717],[15712,15712]]],[1565686644889,["GJX@GJXAIOU",[[-1,15726,"> "]],[15726,15728],[15726,15726]]],[1565686645282,["GJX@GJXAIOU",[[-1,15725,"\n"]],[15726,15726],[15725,15725]]],[1565686645792,["GJX@GJXAIOU",[[-1,15724,"\n"]],[15725,15725],[15724,15724]]],[1565686651171,["GJX@GJXAIOU",[[-1,15745,"##"]],[15747,15747],[15745,15745]]],[1565686652680,["GJX@GJXAIOU",[[-1,15743,"## "]],[15743,15746],[15743,15743]]],[1565686653672,["GJX@GJXAIOU",[[-1,15760,"\n"]],[15761,15761],[15760,15760]]],[1565686657124,["GJX@GJXAIOU",[[-1,15776,"\n"]],[15776,15776],[15775,15775]]],[1565686657553,["GJX@GJXAIOU",[[-1,15774," "]],[15775,15775],[15774,15774]]],[1565686659249,["GJX@GJXAIOU",[[1,15760,"`"]],[15760,15760],[15761,15761]]],[1565686659872,["GJX@GJXAIOU",[[1,15774,"`"]],[15774,15774],[15775,15775]]],[1565686661224,["GJX@GJXAIOU",[[-1,15776,"\n"]],[15776,15776],[15775,15775]]],[1565686664103,["GJX@GJXAIOU",[[1,15828,"`"]],[15828,15828],[15829,15829]]],[1565686664855,["GJX@GJXAIOU",[[1,15898,"`"]],[15898,15898],[15899,15899]]],[1565686666552,["GJX@GJXAIOU",[[-1,15902,"\n"]],[15902,15902],[15901,15901]]],[1565686666690,["GJX@GJXAIOU",[[-1,15900," "]],[15901,15901],[15900,15900]]],[1565686667720,["GJX@GJXAIOU",[[-1,15900,"\n"]],[15900,15900],[15899,15899]]],[1565686677864,["GJX@GJXAIOU",[[-1,15951,"> "]],[15953,15953],[15951,15951]]],[1565686678408,["GJX@GJXAIOU",[[-1,15950,"\n"]],[15951,15951],[15950,15950]]],[1565686745496,[null,[[-1,6599,"到"],[1,6641,"到"],[-1,6643,"`"],[1,6645,"支"],[-1,6653,"了"],[1,7100,"\n"],[-1,16867,"\n"]],[6599,6599],[16867,16867]]],[1565686745496,[null,[[1,6599,"到"],[-1,6640,"到"],[1,6643,"`"],[-1,6644,"支"],[1,6653,"了"],[-1,7099,"\n"],[1,16867,"\n"]],[16867,16867],[6599,6599]]],[1565686687456,["GJX@GJXAIOU",[[-1,15931,"#### "]],[15931,15936],[15931,15931]]],[1565686689960,["GJX@GJXAIOU",[[-1,15964," "]],[15965,15965],[15964,15964]]],[1565686690352,["GJX@GJXAIOU",[[-1,15964,"\n"]],[15964,15964],[15963,15963]]],[1565686692482,["GJX@GJXAIOU",[[-1,15995,"\n"]],[15995,15995],[15994,15994]]],[1565686693034,["GJX@GJXAIOU",[[-1,15993," "]],[15994,15994],[15993,15993]]],[1565686694362,["GJX@GJXAIOU",[[-1,15993,"\n"]],[15993,15993],[15992,15992]]],[1565686695809,["GJX@GJXAIOU",[[1,15992,"`"]],[15992,15992],[15993,15993]]],[1565686696866,["GJX@GJXAIOU",[[1,15964,"`"]],[15964,15964],[15965,15965]]],[1565686701112,["GJX@GJXAIOU",[[-1,16061,"#### "]],[16061,16066],[16061,16061]]],[1565686702483,["GJX@GJXAIOU",[[-1,16076,"> "]],[16076,16078],[16076,16076]]],[1565686702922,["GJX@GJXAIOU",[[-1,16075,"\n"]],[16076,16076],[16075,16075]]],[1565686703468,["GJX@GJXAIOU",[[-1,16074,"\n"]],[16075,16075],[16074,16074]]],[1565686705711,["GJX@GJXAIOU",[[1,16092,"`"]],[16092,16092],[16093,16093]]],[1565686706296,["GJX@GJXAIOU",[[1,16120,"`"]],[16120,16120],[16121,16121]]],[1565686707728,["GJX@GJXAIOU",[[-1,16124,"\n"]],[16124,16124],[16123,16123]]],[1565686708250,["GJX@GJXAIOU",[[-1,16122," "]],[16123,16123],[16122,16122]]],[1565686708697,["GJX@GJXAIOU",[[-1,16122,"\n"]],[16122,16122],[16121,16121]]],[1565686709728,["GJX@GJXAIOU",[[-1,16090," "]],[16091,16091],[16090,16090]]],[1565686710265,["GJX@GJXAIOU",[[-1,16090,"\n"]],[16090,16090],[16089,16089]]],[1565686714642,["GJX@GJXAIOU",[[-1,16148,"#### "]],[16153,16153],[16148,16148]]],[1565686716219,["GJX@GJXAIOU",[[-1,16163,"\n> "]],[16163,16166],[16163,16163]]],[1565686716795,["GJX@GJXAIOU",[[-1,16162,"\n"]],[16163,16163],[16162,16162]]],[1565686719002,["GJX@GJXAIOU",[[1,16180,"`"]],[16180,16180],[16181,16181]]],[1565686719609,["GJX@GJXAIOU",[[1,16197,"`"]],[16197,16197],[16198,16198]]],[1565686721392,["GJX@GJXAIOU",[[-1,16178," "]],[16179,16179],[16178,16178]]],[1565686721832,["GJX@GJXAIOU",[[-1,16178,"\n"]],[16178,16178],[16177,16177]]],[1565686727689,["GJX@GJXAIOU",[[-1,16199,"\n"]],[16200,16200],[16199,16199]]],[1565686728112,["GJX@GJXAIOU",[[-1,16198,"\n"]],[16199,16199],[16198,16198]]],[1565686728578,["GJX@GJXAIOU",[[-1,16197," "]],[16198,16198],[16197,16197]]],[1565686729144,["GJX@GJXAIOU",[[-1,16196,"\n"]],[16197,16197],[16196,16196]]],[1565686730832,["GJX@GJXAIOU",[[-1,16223,"\n"]],[16223,16223],[16222,16222]]],[1565686731193,["GJX@GJXAIOU",[[-1,16221," "]],[16222,16222],[16221,16221]]],[1565686733512,["GJX@GJXAIOU",[[1,16206,"`"]],[16206,16206],[16207,16207]]],[1565686734232,["GJX@GJXAIOU",[[1,16221,"`"]],[16221,16221],[16222,16222]]],[1565686735955,["GJX@GJXAIOU",[[1,16196,"\n"]],[16196,16196],[16197,16197]]],[1565686738115,["GJX@GJXAIOU",[[1,16178,"- "]],[16178,16178],[16180,16180]]],[1565686739984,["GJX@GJXAIOU",[[1,16209,"- "]],[16209,16209],[16211,16211]]],[1565686742129,["GJX@GJXAIOU",[[-1,16228,"\n"]],[16228,16228],[16227,16227]]],[1565686743825,["GJX@GJXAIOU",[[1,16248,"`"]],[16248,16248],[16249,16249]]],[1565686744362,["GJX@GJXAIOU",[[1,16264,"`"]],[16264,16264],[16265,16265]]],[1565686805499,[null,[[-1,6599,"到"],[1,6641,"到"],[-1,6643,"`"],[1,6645,"支"],[-1,6653,"了"],[1,7100,"\n"],[-1,16840,"\n"]],[6599,6599],[16840,16840]]],[1565686805499,[null,[[1,6599,"到"],[-1,6640,"到"],[1,6643,"`"],[-1,6644,"支"],[1,6653,"了"],[-1,7099,"\n"],[1,16840,"\n"]],[16840,16840],[6599,6599]]],[1565686745601,["GJX@GJXAIOU",[[-1,16266," "]],[16267,16267],[16266,16266]]],[1565686746547,["GJX@GJXAIOU",[[-1,16267,"\n"]],[16267,16267],[16266,16266]]],[1565686746945,["GJX@GJXAIOU",[[-1,16266,"\n"]],[16266,16266],[16265,16265]]],[1565686750056,["GJX@GJXAIOU",[[1,16248,"- "]],[16248,16248],[16250,16250]]],[1565686751586,["GJX@GJXAIOU",[[-1,16286," "]],[16287,16287],[16286,16286]]],[1565686751994,["GJX@GJXAIOU",[[-1,16286,"\n"]],[16286,16286],[16285,16285]]],[1565686752621,["GJX@GJXAIOU",[[-1,16246," "]],[16247,16247],[16246,16246]]],[1565686753089,["GJX@GJXAIOU",[[-1,16246,"\n"]],[16246,16246],[16245,16245]]],[1565686753930,["GJX@GJXAIOU",[[-1,16207," "]],[16208,16208],[16207,16207]]],[1565686754316,["GJX@GJXAIOU",[[-1,16207,"\n"]],[16207,16207],[16206,16206]]],[1565686756201,["GJX@GJXAIOU",[[1,16282,"`"]],[16282,16282],[16283,16283]]],[1565686756786,["GJX@GJXAIOU",[[1,16299,"`"]],[16299,16299],[16300,16300]]],[1565686758901,["GJX@GJXAIOU",[[1,16282,"- "]],[16282,16282],[16284,16284]]],[1565686760962,["GJX@GJXAIOU",[[-1,16305,"\n"]],[16305,16305],[16304,16304]]],[1565686761489,["GJX@GJXAIOU",[[-1,16303," "]],[16304,16304],[16303,16303]]],[1565686762673,["GJX@GJXAIOU",[[-1,16303,"\n"]],[16303,16303],[16302,16302]]],[1565686771796,["GJX@GJXAIOU",[[-1,16359,"> "]],[16359,16361],[16359,16359]]],[1565686772361,["GJX@GJXAIOU",[[-1,16358,"\n"]],[16359,16359],[16358,16358]]],[1565686775505,["GJX@GJXAIOU",[[-1,16335,"#### "]],[16335,16340],[16335,16335]]],[1565686777617,["GJX@GJXAIOU",[[-1,16409," "]],[16410,16410],[16409,16409]]],[1565686778105,["GJX@GJXAIOU",[[-1,16409,"\n"]],[16409,16409],[16408,16408]]],[1565686779892,["GJX@GJXAIOU",[[-1,16469,"\n"]],[16469,16469],[16468,16468]]],[1565686780274,["GJX@GJXAIOU",[[-1,16467," "]],[16468,16468],[16467,16467]]],[1565686780833,["GJX@GJXAIOU",[[-1,16467,"\n"]],[16467,16467],[16466,16466]]],[1565686782123,["GJX@GJXAIOU",[[-1,16516,"\n"]],[16516,16516],[16515,16515]]],[1565686782505,["GJX@GJXAIOU",[[-1,16514," "]],[16515,16515],[16514,16514]]],[1565686783105,["GJX@GJXAIOU",[[-1,16514,"\n"]],[16514,16514],[16513,16513]]],[1565686784498,["GJX@GJXAIOU",[[1,16488,"`"]],[16488,16488],[16489,16489]]],[1565686785179,["GJX@GJXAIOU",[[1,16514,"`"]],[16514,16514],[16515,16515]]],[1565686786073,["GJX@GJXAIOU",[[1,16466,"`"]],[16466,16466],[16467,16467]]],[1565686787458,["GJX@GJXAIOU",[[1,16409,"`"]],[16409,16409],[16410,16410]]],[1565686789297,["GJX@GJXAIOU",[[-1,16487,"\n"]],[16487,16487],[16486,16486]]],[1565686791537,["GJX@GJXAIOU",[[-1,16531,"#### "]],[16531,16536],[16531,16531]]],[1565686793025,["GJX@GJXAIOU",[[-1,16543,"> "]],[16543,16545],[16543,16543]]],[1565686793570,["GJX@GJXAIOU",[[-1,16542,"\n"]],[16543,16543],[16542,16542]]],[1565686795433,["GJX@GJXAIOU",[[-1,16566,"####"]],[16566,16570],[16566,16566]]],[1565686795849,["GJX@GJXAIOU",[[-1,16565,"\n"]],[16566,16566],[16565,16565]]],[1565686797172,["GJX@GJXAIOU",[[1,16565,"\n "]],[16565,16565],[16567,16567]]],[1565686798299,["GJX@GJXAIOU",[[-1,16585,"> "]],[16585,16587],[16585,16585]]],[1565686798720,["GJX@GJXAIOU",[[-1,16584,"\n"]],[16585,16585],[16584,16584]]],[1565686800472,["GJX@GJXAIOU",[[-1,16566,"  "]],[16566,16568],[16566,16566]]],[1565686802921,["GJX@GJXAIOU",[[-1,16599," "]],[16600,16600],[16599,16599]]],[1565686803440,["GJX@GJXAIOU",[[-1,16599,"\n"]],[16599,16599],[16598,16598]]],[1565686804888,["GJX@GJXAIOU",[[1,16599,"`"]],[16599,16599],[16600,16600]]],[1565686865497,[null,[[-1,6599,"到"],[1,6641,"到"],[-1,6643,"`"],[1,6645,"支"],[-1,6653,"了"],[1,7100,"\n"],[-1,16804,"\n"]],[6599,6599],[16804,16804]]],[1565686865497,[null,[[1,6599,"到"],[-1,6640,"到"],[1,6643,"`"],[-1,6644,"支"],[1,6653,"了"],[-1,7099,"\n"],[1,16804,"\n"]],[16804,16804],[6599,6599]]],[1565686805642,["GJX@GJXAIOU",[[1,16643,"`"]],[16643,16643],[16644,16644]]],[1565686807729,["GJX@GJXAIOU",[[-1,16647,"\n"]],[16647,16647],[16646,16646]]],[1565686808416,["GJX@GJXAIOU",[[-1,16645," "]],[16646,16646],[16645,16645]]],[1565686809032,["GJX@GJXAIOU",[[-1,16645,"\n"]],[16645,16645],[16644,16644]]],[1565687285503,[null,[[-1,6599,"到"],[1,6641,"到"],[-1,6643,"`"],[1,6645,"支"],[-1,6653,"了"],[1,7100,"\n"],[-1,16802,"\n"]],[6599,6599],[16802,16802]]],[1565687285503,[null,[[1,6599,"到"],[-1,6640,"到"],[1,6643,"`"],[-1,6644,"支"],[1,6653,"了"],[-1,7099,"\n"],[1,16802,"\n"]],[16802,16802],[6599,6599]]],[1565687231218,["GJX@GJXAIOU",[[-1,5759,"`git remote rm notes https://github.com/GJXAIOU/mimengfenxi.git` "]],[5759,5824],[5759,5759]]],[1565687233336,["GJX@GJXAIOU",[[-1,5759,"\n"]],[5759,5759],[5758,5758]]],[1565687585515,[null,[[-1,6533,"到"],[1,6575,"到"],[-1,6577,"`"],[1,6579,"支"],[-1,6587,"了"],[1,7034,"\n"],[-1,16736,"\n"]],[6533,6533],[16736,16736]]],[1565687585515,[null,[[1,6533,"到"],[-1,6574,"到"],[1,6577,"`"],[-1,6578,"支"],[1,6587,"了"],[-1,7033,"\n"],[1,16736,"\n"]],[16736,16736],[6533,6533]]],[1565687546446,["GJX@GJXAIOU",[[1,5938,"`"]],[5938,5938],[5939,5939]]],[1565687547709,["GJX@GJXAIOU",[[1,5970,"`"]],[5970,5970],[5971,5971]]]],null,"GJX@GJXAIOU"],["5ccd57d5-42be-4612-90b7-61a608390522",1566624184888,"---\npin: true\ntags: \n- Git\nstyle: summer\nflag: red\ndate: '2019-7-31'\ncustom: GJXAIOU\nnote: Git&GitHub使用说明,2019-2-11号形成初稿，2019-7-31进行整体迭代，2019-8-6号形成终稿\n---\n\n# Git&GitHub使用说明\n\n@toc\n\n==原则：不要在远程库修改文件，一定要在本地修改然后 push==\n\n## 一、Git\n\n### （一）Git 安装\n[软件下载地址](https://git-scm.com/downloads)，按照这里的教程安装即可：[附录一：Git安装教程](#附录一：git-安装)\n\n### （二）Git 简介\n- Git 使用模式：\n  - Git Bash   ：这是命令行模式（类似Linux）【推荐】\n  - Git GUI      ：这是有界面的模式\n- Git 整体结构：\n![Git结构 2]($resource/Git%E7%BB%93%E6%9E%84%202.png)\n- 查看 Git 基本配置：`git config --list`  基本不使用；\n\n\n### （三）Git 配置\n\n- 下面是使用Git的最小配置\n1.打开Git Bash :切换到下面文件目录下；（或者在文件资源器中进入该目录，然后右键：Git Bash Here）\n配置`user.name`和`user.email` 其中global表示对登录用户的所有仓库有效，是用于区分不同的开发人员身份；\n注：以上信息都保存在.git 文件夹中，存放的是本地库相关的子目录和文件，可以使用：`ll .git/`查看，同时，可以使用`cat .git/config`进行查看配置文件，这里看到所有的用户\n2.输入：`git config --global user.name '随便用户名'`\n3.输入：`git config --global user.email '随便邮箱'`\n```git\n git config --local         local只对仓库有效。此也为缺省条件下的配置\n git config --global        global对登录用户的所有仓库都有效\n git config --system        system对系统的所有用户都有效\n```\n上面三个作用域是由一定的优先级的：local > global > system\n\n\n\n### （三）在本地建立一个仓库\n- 示例：在`E`盘下建立一个名为`practice`的仓库\n```git\n  cd e:\n  mkdir practice\n  cd practice\n  ls -la     # 看现在里面有多少文件\n  git init   # 完成初始化，建立了一个空仓库\n```\n\n- 建立本地 Git 仓库的两种方式：\n  *   用Git之前已经有项目代码，则使用以下两条命令建立Git仓库\n```git\n  cd 项目代码所在的文件夹\n  git init\n```\n  *   用Git之前还没有项目代码，使用下面三条命令创建git仓库\n```\n  cd 路径\n  git init your_project #会在当前路径下创建和项目名称同名的文件夹\n  cd your_project\n```\n然后就是在自己的仓库中开始写代码或者更改代码了。\n\n### （四）工作区和版本库区别\n\n![工作区与版本库的区别]($resource/%E5%B7%A5%E4%BD%9C%E5%8C%BA%E4%B8%8E%E7%89%88%E6%9C%AC%E5%BA%93%E7%9A%84%E5%8C%BA%E5%88%AB.png)\n\n注：示例文件名`test.txt`\n- 当使用`git add  test.txt`将文件提交到暂存区之后，仍然在本地继续修改，如果产生了新的修改；\n  - 使用：`git commit -m 'shuoming' `提交只是提交第一个修改的，后面修改的不提交；\n  - 使用：`git commit -m 'shuoming' test.txt`提交的将是后面修改的版本；\n  - 使用：`git diff head -- test.txt`可以显示工作区和分支的区别；\n\n\n### （五）撤销修改\n- 工作区（本地）修改之后，未提交到暂存区：`git checkout -- test.txt`,撤销工作区的修改；\n- 工作区修改后，已提交到暂存区：`git reset head test.txt`,撤销暂存区的修改，然后再使用上面的命令撤销工作区的修改；\n\n\n### （六）删除文件\n- 删除工作区文件：`rm test.txt` 就是删除本地文件\n- 删除暂存区文件：(删除的修改操作，要提交)：这里是本地和 github 都删除\n`git rm test.txt`\n`git commit -m \"delete test.txt\"`\n`git push 名字`\n\n- **删除缓冲区和 github 文件**，本地不删除\n`git rm -r --cached 文件名或者文件夹名`  --cached 不会将本地文件删除\n`git commit -m \"XXXXX\"`\n`git push 名字`\n\n\n \n\n### （七）Git文件重命名的命令\n\n前提是需要修改git仓库中已经commit了的文件\n\n- 假如想使文件`readme`，改名为 `readme.cpp`。可以使用下面的三条命令：\n```git\nmv readme readme.cpp\ngit rm readme //注意与linux 的命令rm的区别\ngit add readme.cpp\n```\n最后可以使用git status查看修改后的仓库的状态\n上述是三条命令，还可以使用下面的一条命令达到上述三条命令的效果\n `git mv readme readme.cpp`\n \n- 如果想要撤销刚刚的修改，使用下面的命令：\n`git reset --hard`\n\n\n### （八）查看git仓库的版本演变历史\n```\ngit branch -v 看本地有多少版本分支\ngit log --all 查看所有分支的历史\ngit log --all --graph 查看图形化的 log 地址\ngit log --oneline 查看单行的简洁历史。\ngit log --oneline -n4 查看最近的四条简洁历史。\ngit log --oneline --all -n4 --graph 查看所有分支最近 4 条单行的图形化历史。\ngit help --web log 跳转到git log 的帮助文档网页\ngit log --oneline temp 只查看temp的分支的信息且oneline形式\n```\n- 注意：\n  - git log 仅仅是查看当前分支的更改历史\n  - git log --all 查看所有分支的信息\n  - git log --all --graph 上面的查看不容易看各个分支的关系，加上图形化容易看出各个分支的关系\n  - git checkout -b temp +从哪个commit开始新加一个分支(一大串数字,表示某一个commit中的数字 )\n  - git checkout master // 切换到master分支\n\n*   git命令的后面加的参数，有的时候是-，有的时候是- -\n*   单字母的参数是 ‘-’，非单字母的参数是’- -’\n提交记录可能会非常多，按 `J` 键往下翻，按 `K` 键往上翻，按 `Q` 键退出查看\n\n### （九）版本回退\n\n分别修改几次hello.txt，并分别提交。\n版本1：hello\n版本2：hello world\n版本3：hello world third\n版本4：hello  world  third last\n以上版本都提交之后，如果想回到第二个版本：\n\n- 方式一：【推荐】\n1.首先输入：`git reflog` 会得到之后所有该文件的提交版本信息，其中最前面黄色字体为提交的版本号；\n注：可以使用`git log`查看该文件每次提交的详细信息（包括：完整的版本号，作者，时间等），也可以使用：`git log --pretty=online`按行显示以上信息；\n其中：Head 含义：HEAD@{移动到当前版本需要多少步}\n2.输入：`git reset --hard 第二次提交版本号` （这里版本号填写 `git reflog`显示的即可，不必填写完整的版本号）即可回退到第二个版本；\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20181028233812515.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NjbnVhY21oZHU=,size_27,color_FFFFFF,t_70)\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20181028234106489.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NjbnVhY21oZHU=,size_27,color_FFFFFF,t_70)\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20181028234356533.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NjbnVhY21oZHU=,size_27,color_FFFFFF,t_70)\n\n- 方式二：只能后退\n`git reset --head HEAD^`其中一个^表示后退一步，n 个表示后退 n 步；\n- 方式三：只能后退\n`git reset --head HEAD~n`,表示后退 n 步\n\n **补充：reset 参数**\n![搜狗截图20190731203134]($resource/%E6%90%9C%E7%8B%97%E6%88%AA%E5%9B%BE20190731203134.png)\n\n- 参数一:`--soft`  ：仅仅在本地库移动 HEAD 指针；\n- 参数二:`--mixed` ：在本地库移动 HEAD 指针，同时重置暂存区；\n- 参数三:`--hard` ：在本地库移动 HEAD 指针，同时重置暂存区和工作区；\n\n\n### （十）删除文件并找回\n前提：删除前，文件存在时的状态提交到了本地库；\n操作：`git reset --head 指针位置`\n- 删除操作已经提交到了本地库：指针位置指向历史记录\n- 删除操作尚未提交到本地库：指针位置指向 HEAD\n\n### （十一）比较文件的差异\n- 将工作区文件和暂存区进行比较：`git diff 文件名`\n- 将工作区文件和本地库历史记录比较：`git diff 本地库中历史版本 文件名`\n- 以上不带文件名就是比较多个文件；\n\n\n\n\n\n## 二、连接到GitHub\n\n### （一）将GitHub上的库克隆到本地\n\n**演示说明：** 默认本地 文件地址为：E:\\Program\\GitHub\\\n         GitHub上的库为：Notes\n**步骤：**\n1.将GitHub上已有的仓库下载到本地（这样可以在本地编辑）\n- 进入GitHub中所要同步的库页面，选择：`clone or download`，然后将URL复制下来：本人为：`https://github.com/GJXAIOU/Notes.git`\n![URL]($resource/URL.jpg)\n\n- 在Git Bash 中首先将目录切换到想要保存该库的目录下：然后输入\n`git clone https://github.com/GJXAIOU/Notes.git` (后面的网址就是刚才复制的)，这样就把 Github 在线仓库 clone 到了本地；\n\n\n### （二）连接本地仓库与GitHub：\n\n1.在本地生成SSH Key :  在Git Bash中输入：`ssh-keygen -t rsa -C \"GitHub邮箱\"`，接下来**全部回车**确认，这样在电脑C盘本人用户名目录下就会出现一个文件：`.ssh`\n2.将上面文件中的`id_rsa`使用记事本打开，然后全选复制；\n3.将上面复制的秘钥，黏贴到GitHub中\n![搜狗截图20190226204854]($resource/%E6%90%9C%E7%8B%97%E6%88%AA%E5%9B%BE20190226204854.png)\n![搜狗截图20190226205651]($resource/%E6%90%9C%E7%8B%97%E6%88%AA%E5%9B%BE20190226205651.png)\n\n\n\n### （三）具体使用\n\n#将本地的master分支与GitHub仓库分支进行关联,仓库别名为notes\n`git remote add notes https://github.com/GJXAIOU/Notes.git` #后面为仓库的SSH地址\n\n##这步不需要,这是移除关联\n`git remote remove 名字`\n#注：notes 是自己为远程GitHub仓库取的别名，主要是方便以后书写\n#注：查看当前远程仓库地址别名：`git remote -v`\n\n#下面的步骤只需要第一次的时候配置以下：\n步骤一：配置上面的公钥和私钥\n步骤二；输入：`ssh -T -v git@github.com`\n\n#这一步是指从**本地直接生成库**，而不是克隆的上传使用（一般也没有）\n`git pull --rebase origin master` #相当于将GitHub创建仓库时候多创建的README.md拖下来\n\n#从GitHub往本地克隆，最好保证本地仓库是空的；同样本地上传到GitHub上时候最好保证GitHub新建的仓库是空的；\n\n#将本地的master分支上传到GitHub;格式为：git push 仓库别名 分支名\n`git push -u notes master`\n\n\n### （三）上传同步本地文件\n1.在刚才的本地目录下，使用Git Bash ,输入：`Git init` 初始化本地git仓库；\n然后在改目录下会出现：`.git`这个文件  （只需要一次，以后不需要）\n\n2.进入修改目录下；输入：`git status` :查看多少文件未提交到仓库中（显示为红色的为未提交的），用于查看工作区和暂存区的状态；\n\n3.将上述所有文件从工作区提交到缓存区：`git add . `\n将特定文件提交大缓冲区：`git add 文件名称.后缀`\n\n4.再使用命令`git status`查看是不是都提交到了缓冲区（显示为绿色的是的）\n\n5.将缓冲区的文件提交到GitHub仓库中：`git commit -m \"想显示文件后面的的描述\"`\n\n6.最后一步：`git push 仓库名 分支名`\n\n\n### （四）分支的使用\n\n查看各个分支推动的内容： Github网站的项目首页，点击 `Branch:master` 下拉按钮，就会看到各个分支，选择查看即可；\n\n**git branch**\n创建、重命名、查看、删除项目分支，通过 `Git` 做项目开发时，一般都是在开发分支中进行，开发完成后合并分支到主干。\n- `git branch daily/0.0.0`创建一个名为 `daily/0.0.0` 的日常开发分支，分支名只要不包括特殊字符即可。\n\n- `git branch -m daily/0.0.0 daily/0.0.1`如果觉得之前的分支名不合适，可以为新建的分支重命名，重命名分支名为 `daily/0.0.1`\n\n- `git branch`通过不带参数的branch命令可以查看当前项目分支列表\n\n- `git branch -d daily/0.0.1`如果分支已经完成使命则可以通过 `-d` 参数将分支删除，这里为了继续下一步操作，暂不执行删除操作\n\n**git checkout**切换分支\n- `git checkout daily/0.0.1`切换到 `daily/0.0.1` 分支，后续的操作将在这个分支上进行\n\n### （五）将 Github 上最新版拉到本地\n\n**git pull**：将服务器上的最新代码拉取到本地\n\n`git pull origin daily/0.0.1`\n\n如果其它项目成员对项目做了改动并推送到服务器，我们需要将最新的改动更新到本地，这里我们来模拟一下这种情况。\n\n进入Github网站的项目首页，再进入 `daily/0.0.1` 分支，在线对 `README.md` 文件做一些修改并保存，然后在命令中执行以上命令，它将把刚才在线修改的部分拉取到本地，用编辑器打开 `README.md` ，你会发现文件已经跟线上的内容同步了。\n\n如果线上代码做了变动，而你本地的代码也有变动，拉取的代码就有可能会跟你本地的改动冲突，一般情况下 Git 会自动处理这种冲突合并，但如果改动的是同一行，那就需要手动来合并代码，编辑文件，保存最新的改动，再通过 `git add .` 和 `git commit -m 'xxx'` 来提交合并。\n\n\n### （六）版本标记\n\n **git tag**：为项目标记里程碑\n\n```\ngit tag publish/0.0.1\ngit  push origin publish/0.0.1\n```\n\n当我们完成某个功能需求准备发布上线时，应该将此次完整的项目代码做个标记，并将这个标记好的版本发布到线上，这里我们以 `publish/0.0.1` 为标记名并发布，当看到命令行返回如下内容则表示发布成功了\n```\nTotal 0 (delta 0), reused 0 (delta 0)\nTo https://github.com/gafish/gafish.github.com.git\n * [new tag]         publish/0.0.1 -> publish/0.0.1\n```\n\n### （七）忽略推送文件\n\n设置哪些内容不需要推送到服务器，使用配置文件`.gitignore`\n```\ntouch .gitignore\n```\n\n`.gitignore` 不是 `Git` 命令，而在项目中的一个文件，通过设置 `.gitignore` 的内容告诉 `Git` 哪些文件应该被忽略不需要推送到服务器，通过以上命令可以创建一个 `.gitignore` 文件，并在编辑器中打开文件，每一行代表一个要忽略的文件或目录，如：\n\n```\ndemo.html\nbuild/\n```\n\n以上内容的意思是 `Git` 将忽略 `demo.html` 文件 和 `build/` 目录，这些内容不会被推送到服务器上\n\n\n\n## 三、进阶知识点\n\n\n### （一）基本概念\n\n**工作区（Working Directory）**\n就是你在电脑里能看到的目录，比如上文中的 文件夹就是一个工作区 。\n\n**本地版本库（Local Repository）**\n工作区有一个隐藏目录 `.git`，这个不算工作区，而是 `Git`的版本库。 \n![版本库]($resource/%E7%89%88%E6%9C%AC%E5%BA%93.png)\n\n **暂存区（stage）**\n本地版本库里存了很多东西，其中最重要的就是称为 `stage`（或者叫index）的暂存区，还有 `Git` 为我们自动创建的第一个分支 `master`，以及指向 `master` 的一个指针叫 `HEAD`。\n\n**远程版本库（Remote Repository）**\n\n一般指的是 `Git` 服务器上所对应的仓库，本文的示例所在的`github`仓库就是一个远程版本库 \n\n**以上概念之间的关系**\n`工作区`、`暂存区`、`本地版本库`、`远程版本库`之间几个常用的 `Git`操作流程如下图所示： \n![Git各区之间关系]($resource/Git%E5%90%84%E5%8C%BA%E4%B9%8B%E9%97%B4%E5%85%B3%E7%B3%BB.png)\n\n**分支（Branch）**\n分支是为了将修改记录的整个流程分开存储，让分开的分支不受其它分支的影响，所以在同一个数据库里可以同时进行多个不同的修改 \n![分支]($resource/%E5%88%86%E6%94%AF.png)\n\n**主分支（Master）**\n前面提到过 `master` 是 `Git` 为我们自动创建的第一个分支，也叫主分支，其它分支开发完成后都要合并到 `master`\n![分支和标签]($resource/%E5%88%86%E6%94%AF%E5%92%8C%E6%A0%87%E7%AD%BE.png)\n\n**标签（Tag）**\n标签是用于标记特定的点或提交的历史，通常会用来标记发布版本的名称或版本号（如：`publish/0.0.1`），虽然标签看起来有点像分支，但打上标签的提交是固定的，不能随意的改动，参见上图中的`1.0` / `2.0` / `3.0`\n\n**HEAD**\n\n`HEAD`指向的就是当前分支的最新提交 \n\n![](https://mmbiz.qpic.cn/mmbiz_png/JfTPiahTHJhpibRAib4ypnbXhb1w94Ria1fDltHy65E6ErjC94IGzefLfMB3pk3e36SibJficoYWbZqsemnD4Qwu5fFA/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1)\n\n\n\n### （二）操作文件\n\n#### git add\n添加文件到暂存区\n`git add -i`\n通过此命令将打开交互式子命令系统，你将看到如下子命令\n```\n***Commands***\n  1: status      2: update      3: revert      4: add untracked\n  5: patch      6: diff      7: quit      8: help\n```\n\n通过输入序列号或首字母可以选择相应的功能，具体的功能解释如下：\n*   `status`：功能上和 `git add -i` 相似，没什么鸟用\n*   `update`：详见下方 `git add -u`\n*   `revert`：把已经添加到暂存区的文件从暂存区剔除，其操作方式和 `update` 类似\n*   `add untracked`：可以把新增的文件添加到暂存区，其操作方式和 `update` 类似\n*   `patch`：详见下方 `git add -p`\n*   `diff`：比较暂存区文件和本地版本库的差异，其操作方式和 `update` 类似\n*   `quit`：退出 `git add -i` 命令系统\n*   `help`：查看帮助信息\n\n\n`git add -p`\n直接进入交互命令中最有用的 `patch` 模式\n\n这是交互命令中最有用的模式，其操作方式和 `update` 类似，选择后 `Git` 会显示这些文件的当前内容与本地版本库中的差异，然后您可以自己决定是否添加这些修改到暂存区，在命令行 `Stage deletion [y,n,q,a,d,/,?]?` 后输入 `y,n,q,a,d,/,?` 其中一项选择操作方式，具体功能解释如下：\n*   y：接受修改\n*   n：忽略修改\n*   q：退出当前命令\n*   a：添加修改\n*   d：放弃修改\n*   /：通过正则表达式匹配修改内容\n*   ?：查看帮助信息\n\n\n`git add -u`\n直接进入交互命令中的 `update` 模式\n\n它会先列出工作区 `修改` 或 `删除` 的文件列表，`新增` 的文件不会被显示，在命令行 `Update>>` 后输入相应的列表序列号表示选中该项，回车继续选择，如果已选好，直接回车回到命令主界面\n\n`git add --ignore-removal .`\n添加工作区 `修改` 或 `新增` 的文件列表， `删除` 的文件不会被添加\n\n#### git commit\n把暂存区的文件提交到本地版本库\n\n`git commit -m '第一行提交原因'  -m '第二行提交原因'`\n不打开编辑器，直接在命令行中输入多行提交原因\n\n`git commit -am '提交原因'`\n将工作区 `修改` 或 `删除` 的文件提交到本地版本库， `新增` 的文件不会被提交\n\n\n`git commit --amend -m '提交原因'`\n修改最新一条提交记录的提交原因\n\n\n`git commit -C HEAD`\n将当前文件改动提交到 `HEAD` 或当前分支的历史ID\n\n#### git mv\n移动或重命名文件、目录\n\n`git mv a.md b.md -f`\n将 `a.md` 重命名为 `b.md` ，同时添加变动到暂存区，加 `-f` 参数可以强制重命名，相比用 `mv a.md b.md` 命令省去了 `git add` 操作\n\n#### git rm\n从工作区和暂存区移除文件\n\n`git rm b.md`\n从工作区和暂存区移除文件 `b.md` ，同时添加变动到暂存区，相比用 `rm b.md` 命令省去了 `git add` 操作\n\n\n`git rm src/ -r`\n允许从工作区和暂存区移除目录\n\n#### git status\n`git status -s`\n以简短方式查看工作区和暂存区文件状态\n\n`git status --ignored`\n查看工作区和暂存区文件状态，包括被忽略的文件\n\n### **操作分支**\n\n#### git branch\n\n查看、创建、删除分支\n\n- `git branch -a`\n查看本地版本库和远程版本库上的分支列表\n\n- `git branch -r`\n查看远程版本库上的分支列表，加上 `-d` 参数可以删除远程版本库上的分支\n\n- `git branch -D`\n分支未提交到本地版本库前强制删除分支\n\n- `git branch -vv`\n查看带有最后提交id、最近提交原因等信息的本地版本库分支列表 \n\n\n#### git merge 将其它分支合并到当前分支\n\n`git merge --squash`\n将待合并分支上的 `commit` 合并成一个新的 `commit`放入当前分支，适用于待合并分支的提交记录不需要保留的情况 \n\n![合并分支]($resource/%E5%90%88%E5%B9%B6%E5%88%86%E6%94%AF.gif)\n\n- `git merge --no-ff `\n默认情况下，`Git` 执行\"`快进式合并`\"（fast-farward merge），会直接将 `Master` 分支指向 `Develop` 分支，使用 `--no-ff` 参数后，会执行正常合并，在 `Master`分支上生成一个新节点，保证版本演进更清晰。 \n\n![分支合并]($resource/%E5%88%86%E6%94%AF%E5%90%88%E5%B9%B6.png)\n\n- `git merge --no-edit`\n在没有冲突的情况下合并，不想手动编辑提交原因，而是用 `Git` 自动生成的类似 `Merge branch 'test'`的文字直接提交\n\n#### git checkout 切换分支\n\n- `git checkout -b daily/0.0.1`\n创建 `daily/0.0.1` 分支，同时切换到这个新创建的分支\n\n- `git checkout HEAD demo.html`\n从本地版本库的 `HEAD`（也可以是提交ID、分支名、Tag名） 历史中检出 `demo.html` 覆盖当前工作区的文件，如果省略 `HEAD` 则是从暂存区检出\n\n- `git checkout --orphan new_branch`\n这个命令会创建一个全新的，完全没有历史记录的新分支，但当前源分支上所有的最新文件都还在，真是强迫症患者的福音，但这个新分支必须做一次 `git commit` 操作后才会真正成为一个新分支。\n\n- `git checkout -p other_branch`\n这个命令主要用来比较两个分支间的差异内容，并提供交互式的界面来选择进一步的操作，这个命令不仅可以比较两个分支间的差异，还可以比较单个文件的差异。\n\n#### git stash\n\n在 `Git` 的栈中保存当前修改或删除的工作进度，当你在一个分支里做某项功能开发时，接到通知把昨天已经测试完没问题的代码发布到线上，但这时你已经在这个分支里加入了其它未提交的代码，这个时候就可以把这些未提交的代码存到栈里。\n\n- `git stash`\n将未提交的文件保存到Git栈中\n\n* `git stash list`\n查看栈中保存的列表\n\n* `git stash show stash@{0}`\n显示栈中其中一条记录\n\n* `git stash drop stash@{0}`\n移除栈中其中一条记录\n\n* `git stash pop`\n从Git栈中检出最新保存的一条记录，并将它从栈中移除\n\n- `git stash apply stash@{0}`\n从Git栈中检出其中一条记录，但不从栈中移除\n\n* `git stash branch new_banch`\n把当前栈中最近一次记录检出并创建一个新分支\n\n* `git stash clear`\n清空栈里的所有记录\n\n* `git stash create`\n 为当前修改或删除的文件创建一个自定义的栈并返回一个ID，此时并未真正存储到栈里\n \n* `git stash store xxxxxx`\n将 `create` 方法里返回的ID放到 `store` 后面，此时在栈里真正创建了一个记录，但当前修改或删除的文件并未从工作区移除\n\n \n \n### 操作历史\n\n#### git log 显示提交历史记录\n\n* `git log -p`\n显示带提交差异对比的历史记录\n \n* `git log demo.html`\n显示 `demo.html` 文件的历史记录\n \n* `git log --since=\"2 weeks ago\"`\n显示2周前开始到现在的历史记录，其它时间可以类推\n \n* `git log --before=\"2 weeks ago\"`\n显示截止到2周前的历史记录，其它时间可以类推\n\n* `git log -10`\n显示最近10条历史记录\n\n* `git log f5f630a..HEAD`\n显示从提交ID `f5f630a` 到 `HEAD` 之间的记录，`HEAD` 可以为空或其它提交ID\n\n* `git log --pretty=oneline`\n在一行中输出简短的历史记录\n\n* `git log --pretty=format:\"%h\" `\n格式化输出历史记录\n\n* `Git` 用各种 `placeholder` 来决定各种显示内容，我挑几个常用的显示如下：\n    *   %H: commit hash\n    *   %h: 缩短的commit hash\n    *   %T: tree hash\n    *   %t: 缩短的 tree hash\n    *   %P: parent hashes\n    *   %p: 缩短的 parent hashes\n    *   %an: 作者名字\n    *   %aN: mailmap的作者名\n    *   %ae: 作者邮箱\n    *   %ad: 日期 (--date= 制定的格式)\n    *   %ar: 日期, 相对格式(1 day ago)\n    *   %cn: 提交者名字\n    *   %ce: 提交者 email\n    *   %cd: 提交日期 (--date= 制定的格式)\n    *   %cr: 提交日期, 相对格式(1 day ago)\n    *   %d: ref名称\n    *   %s: commit信息标题\n    *   %b: commit信息内容\n    *   %n: 换行\n\n#### git cherry-pick 合并分支的一条或几条提交记录到当前分支末梢\n\n- `git cherry-pick 170a305`\n合并提交ID `170a305` 到当前分支末梢\n\n#### git reset\n\n将当前的分支重设（reset）到指定的 `<commit>` 或者 `HEAD`\n\n* `git reset --mixed <commit>`\n`--mixed` 是不带参数时的默认参数，它退回到某个版本，保留文件内容，回退提交历史\n\n* `git reset --soft <commit>`\n暂存区和工作区中的内容不作任何改变，仅仅把 `HEAD` 指向 `<commit>`\n\n* `git reset --hard <commit>`\n自从 `<commit>` 以来在工作区中的任何改变都被丢弃，并把 `HEAD` 指向 `<commit>`\n\n#### git rebase 重新定义分支的版本库状态\n\n`git rebase branch_name`\n合并分支，这跟 `merge`很像，但还是有本质区别，看下图： \n\n![合并分支过程]($resource/%E5%90%88%E5%B9%B6%E5%88%86%E6%94%AF%E8%BF%87%E7%A8%8B.png)\n\n合并过程中可能需要先解决冲突，然后执行 `git rebase --continue`\n\n`git rebase -i HEAD~~`\n打开文本编辑器，将看到从 `HEAD` 到 `HEAD~~` 的提交如下\n```git\npick 9a54fd4 添加commit的说明\npick 0d4a808 添加pull的说明\n# Rebase 326fc9f..0d4a808 onto d286baa\n#\n# Commands:\n#  p, pick = use commit\n#  r, reword = use commit, but edit the commit message\n#  e, edit = use commit, but stop for amending\n#  s, squash = use commit, but meld into previous commit\n#  f, fixup = like \"squash\", but discard this commit's log message\n#  x, exec = run command (the rest of the line) using shell\n#\n```\n将第一行的 `pick` 改成 `Commands` 中所列出来的命令，然后保存并退出，所对应的修改将会生效。\n\n如果移动提交记录的顺序，将改变历史记录中的排序。\n\n#### git revert\n\n撤销某次操作，此次操作之前和之后的 `commit` 和 `history` 都会保留，并且把这次撤销作为一次最新的提交\n\n`git revert HEAD`\n撤销前一次提交操作\n\n`git revert HEAD --no-edit`\n撤销前一次提交操作，并以默认的 `Revert \"xxx\"` 为提交原因\n\n`git revert -n HEAD`\n需要撤销多次操作的时候加 `-n` 参数，这样不会每次撤销操作都提交，而是等所有撤销都完成后一起提交\n\n#### git diff\n\n查看工作区、暂存区、本地版本库之间的文件差异，用一张图来解释\n![git各个区域文件差异]($resource/git%E5%90%84%E4%B8%AA%E5%8C%BA%E5%9F%9F%E6%96%87%E4%BB%B6%E5%B7%AE%E5%BC%82.png)\n\n`git diff --stat`\n通过 `--stat` 参数可以查看变更统计数据\n```git\n test.md | 1 -\n 1 file changed, 1 deletion(-)\n```\n\n\n#### git reflog\n\n`reflog` 可以查看所有分支的所有操作记录（包括commit和reset的操作、已经被删除的commit记录，跟 `git log`的区别在于它不能查看已经删除了的commit记录 \n\n![640]($resource/640.png)\n\n### 远程版本库连接\n\n如果在GitHub项目初始化之前，文件已经存在于本地目录中，那可以在本地初始化本地版本库，再将本地版本库跟远程版本库连接起来\n\n**git init**在本地目录内部会生成.git文件夹\n\n**git remote**\n\n `git remote -v`\n不带参数，列出已经存在的远程分支，加上 `-v` 列出详细信息，在每一个名字后面列出其远程url\n\n \n`git remote add origin https://github.com/gafish/gafish.github.com.git`\n添加一个新的远程仓库，指定一个名字，以便引用后面带的URL\n\n**git fetch**\n将远程版本库的更新取回到本地版本库\n\n`git fetch origin daily/0.0.1`\n默认情况下，`git fetch` 取回所有分支的更新。如果只想取回特定分支的更新，可以指定分支名。\n\n### **问题排查**\n\n**git blame**查看文件每行代码块的历史信息\n\n`git blame -L 1,10 demo.html`\n截取 `demo.html` 文件1-10行历史信息\n\n**git bisect**二分查找历史记录，排查BUG\n\n- `git bisect start`\n开始二分查找\n\n- `git bisect bad`\n标记当前二分提交ID为有问题的点\n\n- `git bisect good`\n标记当前二分提交ID为没问题的点\n\n- `git bisect reset`\n查到有问题的提交ID后回到原分支\n\n### **更多操作**\n\n**git submodule**\n通过 Git 子模块可以跟踪外部版本库，它允许在某一版本库中再存储另一版本库，并且能够保持2个版本库完全独立\n\n`git submodule add https://github.com/gafish/demo.git demo`\n将 `demo` 仓库添加为子模块\n \n`git submodule update demo`\n更新子模块 `demo`\n\n**git gc**\n运行Git的垃圾回收功能，清理冗余的历史快照\n\n**git archive**\n将加了tag的某个版本打包提取\n\n`git archive -v --format=zip v0.1 > v0.1.zip`\n`--format` 表示打包的格式，如 `zip`，`-v` 表示对应的tag名，后面跟的是tag名，如 `v0.1`。\n\n## **总结**\n\n本文只是对 `Git` 的所有功能中的部分实用功能做了一次探秘，Git非常强大，还有很多功能有待我们去发现，限于本文篇幅，咱就此打住吧，预知更多好用功能，请善用谷歌。\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## 平常使用步骤\n如果 Github 上已经有仓库，而且不是本地传上去的；\n1.首先将 github 上文件 clone 下来，如果和本地文件夹名字一样则修改本地名字，防止覆盖；\n2.将 clone 下来的文件夹里面内容，连同.git 文件一起移动，同时将本地文件夹的名字改成与仓库名字相同；就是保证一点：本地文件只能比 github 端的文件多，不能少；\n3.查看目前的 git 用户：`git remote -v`,可以将目前的一些用户名删掉：`git remote remove 名字`，然后新建用户：`git remote add 名字 库url`, 这里的名字最好使用库名，便于记忆和区分；\n4.添加新文件：`git add .`或者`git add 文件名`\n5.然后 ：`git commit -m \"说明\"`\n6.最后 push：`git push 名字`\n\n\n\n# 使用 GitHub 搭建个人网站\n使用 GitHub 搭建的网站是静态网站，搭建的操作分为两类：\n- 完全基于新的仓库搭建：\n  - 首先创建新的仓库，仓库名为：用户名.github.io\n  - 然后创建 index.html 即可；\n  - 相关的网页显示配置可以在 index.html 中进行配置；\n\n- 基于已有的仓库进行搭建：(现在已经改变，在摸索着)\n  - 首先进入仓库，在右上角选择：setting->Launch automatic gener....\n  - 在 Tagline 中填写项目名称；\n\n\n# 附录：\n\n## 附录一：Git 安装\nTODO：Git 和 GitHub\n\n\n![github开源协议区分]($resource/github%E5%BC%80%E6%BA%90%E5%8D%8F%E8%AE%AE%E5%8C%BA%E5%88%86.png)\n\n",[[1566624174813,["GJX@GJXAIOU",[[-1,9597,"鸟"]],[9598,9598],[9597,9597]]]],null,"GJX@GJXAIOU"],["7e2b5cfc-3413-4c74-bbcf-b29df7beb403",1571041574464,"---\npin: true\ntags: \n- Git\nstyle: summer\nflag: red\ndate: '2019-7-31'\ncustom: GJXAIOU\nnote: Git&GitHub使用说明,2019-2-11号形成初稿，2019-7-31进行整体迭代，2019-8-6号形成终稿\n---\n\n# Git&GitHub使用说明\n\n@toc\n\n==原则：不要在远程库修改文件，一定要在本地修改然后 push==\n\n## 一、Git\n\n### （一）Git 安装\n[软件下载地址](https://git-scm.com/downloads)，按照这里的教程安装即可：[附录一：Git安装教程](#附录一：git-安装)\n\n### （二）Git 简介\n- Git 使用模式：\n  - Git Bash   ：这是命令行模式（类似Linux）【推荐】\n  - Git GUI      ：这是有界面的模式\n- Git 整体结构：\n![Git结构 2]($resource/Git%E7%BB%93%E6%9E%84%202.png)\n- 查看 Git 基本配置：`git config --list`  基本不使用；\n\n\n### （三）Git 配置\n\n- 下面是使用Git的最小配置\n1.打开Git Bash :切换到下面文件目录下；（或者在文件资源器中进入该目录，然后右键：Git Bash Here）\n配置`user.name`和`user.email` 其中global表示对登录用户的所有仓库有效，是用于区分不同的开发人员身份；\n注：以上信息都保存在.git 文件夹中，存放的是本地库相关的子目录和文件，可以使用：`ll .git/`查看，同时，可以使用`cat .git/config`进行查看配置文件，这里看到所有的用户\n2.输入：`git config --global user.name '随便用户名'`\n3.输入：`git config --global user.email '随便邮箱'`\n```git\n git config --local         local只对仓库有效。此也为缺省条件下的配置\n git config --global        global对登录用户的所有仓库都有效\n git config --system        system对系统的所有用户都有效\n```\n上面三个作用域是由一定的优先级的：local > global > system\n\n\n\n### （三）在本地建立一个仓库\n- 示例：在`E`盘下建立一个名为`practice`的仓库\n```git\n  cd e:\n  mkdir practice\n  cd practice\n  ls -la     # 看现在里面有多少文件\n  git init   # 完成初始化，建立了一个空仓库\n```\n\n- 建立本地 Git 仓库的两种方式：\n  *   用Git之前已经有项目代码，则使用以下两条命令建立Git仓库\n```git\n  cd 项目代码所在的文件夹\n  git init\n```\n  *   用Git之前还没有项目代码，使用下面三条命令创建git仓库\n```\n  cd 路径\n  git init your_project #会在当前路径下创建和项目名称同名的文件夹\n  cd your_project\n```\n然后就是在自己的仓库中开始写代码或者更改代码了。\n\n### （四）工作区和版本库区别\n\n![工作区与版本库的区别]($resource/%E5%B7%A5%E4%BD%9C%E5%8C%BA%E4%B8%8E%E7%89%88%E6%9C%AC%E5%BA%93%E7%9A%84%E5%8C%BA%E5%88%AB.png)\n\n注：示例文件名`test.txt`\n- 当使用`git add  test.txt`将文件提交到暂存区之后，仍然在本地继续修改，如果产生了新的修改；\n  - 使用：`git commit -m 'shuoming' `提交只是提交第一个修改的，后面修改的不提交；\n  - 使用：`git commit -m 'shuoming' test.txt`提交的将是后面修改的版本；\n  - 使用：`git diff head -- test.txt`可以显示工作区和分支的区别；\n\n\n### （五）撤销修改\n- 工作区（本地）修改之后，未提交到暂存区：`git checkout -- test.txt`,撤销工作区的修改；\n- 工作区修改后，已提交到暂存区：`git reset head test.txt`,撤销暂存区的修改，然后再使用上面的命令撤销工作区的修改；\n\n\n### （六）删除文件\n- 删除工作区文件：`rm test.txt` 就是删除本地文件\n- 删除暂存区文件：(删除的修改操作，要提交)：这里是本地和 github 都删除\n`git rm test.txt`\n`git commit -m \"delete test.txt\"`\n`git push 名字`\n\n- **删除缓冲区和 github 文件**，本地不删除\n`git rm -r --cached 文件名或者文件夹名`  --cached 不会将本地文件删除\n`git commit -m \"XXXXX\"`\n`git push 名字`\n\n\n \n\n### （七）Git文件重命名的命令\n\n前提是需要修改git仓库中已经commit了的文件\n\n- 假如想使文件`readme`，改名为 `readme.cpp`。可以使用下面的三条命令：\n```git\nmv readme readme.cpp\ngit rm readme //注意与linux 的命令rm的区别\ngit add readme.cpp\n```\n最后可以使用git status查看修改后的仓库的状态\n上述是三条命令，还可以使用下面的一条命令达到上述三条命令的效果\n `git mv readme readme.cpp`\n \n- 如果想要撤销刚刚的修改，使用下面的命令：\n`git reset --hard`\n\n\n### （八）查看git仓库的版本演变历史\n```\ngit branch -v 看本地有多少版本分支\ngit log --all 查看所有分支的历史\ngit log --all --graph 查看图形化的 log 地址\ngit log --oneline 查看单行的简洁历史。\ngit log --oneline -n4 查看最近的四条简洁历史。\ngit log --oneline --all -n4 --graph 查看所有分支最近 4 条单行的图形化历史。\ngit help --web log 跳转到git log 的帮助文档网页\ngit log --oneline temp 只查看temp的分支的信息且oneline形式\n```\n- 注意：\n  - git log 仅仅是查看当前分支的更改历史\n  - git log --all 查看所有分支的信息\n  - git log --all --graph 上面的查看不容易看各个分支的关系，加上图形化容易看出各个分支的关系\n  - git checkout -b temp +从哪个commit开始新加一个分支(一大串数字,表示某一个commit中的数字 )\n  - git checkout master // 切换到master分支\n\n*   git命令的后面加的参数，有的时候是-，有的时候是- -\n*   单字母的参数是 ‘-’，非单字母的参数是’- -’\n提交记录可能会非常多，按 `J` 键往下翻，按 `K` 键往上翻，按 `Q` 键退出查看\n\n### （九）版本回退\n\n分别修改几次hello.txt，并分别提交。\n版本1：hello\n版本2：hello world\n版本3：hello world third\n版本4：hello  world  third last\n以上版本都提交之后，如果想回到第二个版本：\n\n- 方式一：【推荐】\n1.首先输入：`git reflog` 会得到之后所有该文件的提交版本信息，其中最前面黄色字体为提交的版本号；\n注：可以使用`git log`查看该文件每次提交的详细信息（包括：完整的版本号，作者，时间等），也可以使用：`git log --pretty=online`按行显示以上信息；\n其中：Head 含义：HEAD@{移动到当前版本需要多少步}\n2.输入：`git reset --hard 第二次提交版本号` （这里版本号填写 `git reflog`显示的即可，不必填写完整的版本号）即可回退到第二个版本；\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20181028233812515.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NjbnVhY21oZHU=,size_27,color_FFFFFF,t_70)\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20181028234106489.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NjbnVhY21oZHU=,size_27,color_FFFFFF,t_70)\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20181028234356533.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NjbnVhY21oZHU=,size_27,color_FFFFFF,t_70)\n\n- 方式二：只能后退\n`git reset --head HEAD^`其中一个^表示后退一步，n 个表示后退 n 步；\n- 方式三：只能后退\n`git reset --head HEAD~n`,表示后退 n 步\n\n **补充：reset 参数**\n![搜狗截图20190731203134]($resource/%E6%90%9C%E7%8B%97%E6%88%AA%E5%9B%BE20190731203134.png)\n\n- 参数一:`--soft`  ：仅仅在本地库移动 HEAD 指针；\n- 参数二:`--mixed` ：在本地库移动 HEAD 指针，同时重置暂存区；\n- 参数三:`--hard` ：在本地库移动 HEAD 指针，同时重置暂存区和工作区；\n\n\n### （十）删除文件并找回\n前提：删除前，文件存在时的状态提交到了本地库；\n操作：`git reset --head 指针位置`\n- 删除操作已经提交到了本地库：指针位置指向历史记录\n- 删除操作尚未提交到本地库：指针位置指向 HEAD\n\n### （十一）比较文件的差异\n- 将工作区文件和暂存区进行比较：`git diff 文件名`\n- 将工作区文件和本地库历史记录比较：`git diff 本地库中历史版本 文件名`\n- 以上不带文件名就是比较多个文件；\n\n\n\n\n\n## 二、连接到GitHub\n\n### （一）将GitHub上的库克隆到本地\n\n**演示说明：** 默认本地 文件地址为：E:\\Program\\GitHub\\\n         GitHub上的库为：Notes\n**步骤：**\n1.将GitHub上已有的仓库下载到本地（这样可以在本地编辑）\n- 进入GitHub中所要同步的库页面，选择：`clone or download`，然后将URL复制下来：本人为：`https://github.com/GJXAIOU/Notes.git`\n![URL]($resource/URL.jpg)\n\n- 在Git Bash 中首先将目录切换到想要保存该库的目录下：然后输入\n`git clone https://github.com/GJXAIOU/Notes.git` (后面的网址就是刚才复制的)，这样就把 Github 在线仓库 clone 到了本地；\n\n\n### （二）连接本地仓库与GitHub：\n\n1.在本地生成SSH Key :  在Git Bash中输入：`ssh-keygen -t rsa -C \"GitHub邮箱\"`，接下来**全部回车**确认，这样在电脑C盘本人用户名目录下就会出现一个文件：`.ssh`\n2.将上面文件中的`id_rsa`使用记事本打开，然后全选复制；\n3.将上面复制的秘钥，黏贴到GitHub中\n![搜狗截图20190226204854]($resource/%E6%90%9C%E7%8B%97%E6%88%AA%E5%9B%BE20190226204854.png)\n![搜狗截图20190226205651]($resource/%E6%90%9C%E7%8B%97%E6%88%AA%E5%9B%BE20190226205651.png)\n\n\n\n### （三）具体使用\n\n#将本地的master分支与GitHub仓库分支进行关联,仓库别名为notes\n`git remote add notes https://github.com/GJXAIOU/Notes.git` #后面为仓库的SSH地址\n\n##这步不需要,这是移除关联\n`git remote remove 名字`\n#注：notes 是自己为远程GitHub仓库取的别名，主要是方便以后书写\n#注：查看当前远程仓库地址别名：`git remote -v`\n\n#下面的步骤只需要第一次的时候配置以下：\n步骤一：配置上面的公钥和私钥\n步骤二；输入：`ssh -T -v git@github.com`\n\n#这一步是指从**本地直接生成库**，而不是克隆的上传使用（一般也没有）\n`git pull --rebase origin master` #相当于将GitHub创建仓库时候多创建的README.md拖下来\n\n#从GitHub往本地克隆，最好保证本地仓库是空的；同样本地上传到GitHub上时候最好保证GitHub新建的仓库是空的；\n\n#将本地的master分支上传到GitHub;格式为：git push 仓库别名 分支名\n`git push -u notes master`\n\n\n### （三）上传同步本地文件\n1.在刚才的本地目录下，使用Git Bash ,输入：`Git init` 初始化本地git仓库；\n然后在改目录下会出现：`.git`这个文件  （只需要一次，以后不需要）\n\n2.进入修改目录下；输入：`git status` :查看多少文件未提交到仓库中（显示为红色的为未提交的），用于查看工作区和暂存区的状态；\n\n3.将上述所有文件从工作区提交到缓存区：`git add . `\n将特定文件提交大缓冲区：`git add 文件名称.后缀`\n\n4.再使用命令`git status`查看是不是都提交到了缓冲区（显示为绿色的是的）\n\n5.将缓冲区的文件提交到GitHub仓库中：`git commit -m \"想显示文件后面的的描述\"`\n\n6.最后一步：`git push 仓库名 分支名`\n\n\n### （四）分支的使用\n\n查看各个分支推动的内容： Github网站的项目首页，点击 `Branch:master` 下拉按钮，就会看到各个分支，选择查看即可；\n\n**git branch**\n创建、重命名、查看、删除项目分支，通过 `Git` 做项目开发时，一般都是在开发分支中进行，开发完成后合并分支到主干。\n- `git branch daily/0.0.0`创建一个名为 `daily/0.0.0` 的日常开发分支，分支名只要不包括特殊字符即可。\n\n- `git branch -m daily/0.0.0 daily/0.0.1`如果觉得之前的分支名不合适，可以为新建的分支重命名，重命名分支名为 `daily/0.0.1`\n\n- `git branch`通过不带参数的branch命令可以查看当前项目分支列表\n\n- `git branch -d daily/0.0.1`如果分支已经完成使命则可以通过 `-d` 参数将分支删除，这里为了继续下一步操作，暂不执行删除操作\n\n**git checkout**切换分支\n- `git checkout daily/0.0.1`切换到 `daily/0.0.1` 分支，后续的操作将在这个分支上进行\n\n### （五）将 Github 上最新版拉到本地\n\n**git pull**：将服务器上的最新代码拉取到本地\n\n`git pull origin daily/0.0.1`\n\n如果其它项目成员对项目做了改动并推送到服务器，我们需要将最新的改动更新到本地，这里我们来模拟一下这种情况。\n\n进入Github网站的项目首页，再进入 `daily/0.0.1` 分支，在线对 `README.md` 文件做一些修改并保存，然后在命令中执行以上命令，它将把刚才在线修改的部分拉取到本地，用编辑器打开 `README.md` ，你会发现文件已经跟线上的内容同步了。\n\n如果线上代码做了变动，而你本地的代码也有变动，拉取的代码就有可能会跟你本地的改动冲突，一般情况下 Git 会自动处理这种冲突合并，但如果改动的是同一行，那就需要手动来合并代码，编辑文件，保存最新的改动，再通过 `git add .` 和 `git commit -m 'xxx'` 来提交合并。\n\n\n### （六）版本标记\n\n **git tag**：为项目标记里程碑\n\n```\ngit tag publish/0.0.1\ngit  push origin publish/0.0.1\n```\n\n当我们完成某个功能需求准备发布上线时，应该将此次完整的项目代码做个标记，并将这个标记好的版本发布到线上，这里我们以 `publish/0.0.1` 为标记名并发布，当看到命令行返回如下内容则表示发布成功了\n```\nTotal 0 (delta 0), reused 0 (delta 0)\nTo https://github.com/gafish/gafish.github.com.git\n * [new tag]         publish/0.0.1 -> publish/0.0.1\n```\n\n### （七）忽略推送文件\n\n设置哪些内容不需要推送到服务器，使用配置文件`.gitignore`\n```\ntouch .gitignore\n```\n\n`.gitignore` 不是 `Git` 命令，而在项目中的一个文件，通过设置 `.gitignore` 的内容告诉 `Git` 哪些文件应该被忽略不需要推送到服务器，通过以上命令可以创建一个 `.gitignore` 文件，并在编辑器中打开文件，每一行代表一个要忽略的文件或目录，如：\n\n```\ndemo.html\nbuild/\n```\n\n以上内容的意思是 `Git` 将忽略 `demo.html` 文件 和 `build/` 目录，这些内容不会被推送到服务器上\n\n\n\n## 三、进阶知识点\n\n\n### （一）基本概念\n\n**工作区（Working Directory）**\n就是你在电脑里能看到的目录，比如上文中的 文件夹就是一个工作区 。\n\n**本地版本库（Local Repository）**\n工作区有一个隐藏目录 `.git`，这个不算工作区，而是 `Git`的版本库。 \n![版本库]($resource/%E7%89%88%E6%9C%AC%E5%BA%93.png)\n\n **暂存区（stage）**\n本地版本库里存了很多东西，其中最重要的就是称为 `stage`（或者叫index）的暂存区，还有 `Git` 为我们自动创建的第一个分支 `master`，以及指向 `master` 的一个指针叫 `HEAD`。\n\n**远程版本库（Remote Repository）**\n\n一般指的是 `Git` 服务器上所对应的仓库，本文的示例所在的`github`仓库就是一个远程版本库 \n\n**以上概念之间的关系**\n`工作区`、`暂存区`、`本地版本库`、`远程版本库`之间几个常用的 `Git`操作流程如下图所示： \n![Git各区之间关系]($resource/Git%E5%90%84%E5%8C%BA%E4%B9%8B%E9%97%B4%E5%85%B3%E7%B3%BB.png)\n\n**分支（Branch）**\n分支是为了将修改记录的整个流程分开存储，让分开的分支不受其它分支的影响，所以在同一个数据库里可以同时进行多个不同的修改 \n![分支]($resource/%E5%88%86%E6%94%AF.png)\n\n**主分支（Master）**\n前面提到过 `master` 是 `Git` 为我们自动创建的第一个分支，也叫主分支，其它分支开发完成后都要合并到 `master`\n![分支和标签]($resource/%E5%88%86%E6%94%AF%E5%92%8C%E6%A0%87%E7%AD%BE.png)\n\n**标签（Tag）**\n标签是用于标记特定的点或提交的历史，通常会用来标记发布版本的名称或版本号（如：`publish/0.0.1`），虽然标签看起来有点像分支，但打上标签的提交是固定的，不能随意的改动，参见上图中的`1.0` / `2.0` / `3.0`\n\n**HEAD**\n\n`HEAD`指向的就是当前分支的最新提交 \n\n![](https://mmbiz.qpic.cn/mmbiz_png/JfTPiahTHJhpibRAib4ypnbXhb1w94Ria1fDltHy65E6ErjC94IGzefLfMB3pk3e36SibJficoYWbZqsemnD4Qwu5fFA/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1)\n\n\n\n### （二）操作文件\n\n#### git add\n添加文件到暂存区\n`git add -i`\n通过此命令将打开交互式子命令系统，你将看到如下子命令\n```\n***Commands***\n  1: status      2: update      3: revert      4: add untracked\n  5: patch      6: diff      7: quit      8: help\n```\n\n通过输入序列号或首字母可以选择相应的功能，具体的功能解释如下：\n*   `status`：功能上和 `git add -i` 相似，没什么用\n*   `update`：详见下方 `git add -u`\n*   `revert`：把已经添加到暂存区的文件从暂存区剔除，其操作方式和 `update` 类似\n*   `add untracked`：可以把新增的文件添加到暂存区，其操作方式和 `update` 类似\n*   `patch`：详见下方 `git add -p`\n*   `diff`：比较暂存区文件和本地版本库的差异，其操作方式和 `update` 类似\n*   `quit`：退出 `git add -i` 命令系统\n*   `help`：查看帮助信息\n\n\n`git add -p`\n直接进入交互命令中最有用的 `patch` 模式\n\n这是交互命令中最有用的模式，其操作方式和 `update` 类似，选择后 `Git` 会显示这些文件的当前内容与本地版本库中的差异，然后您可以自己决定是否添加这些修改到暂存区，在命令行 `Stage deletion [y,n,q,a,d,/,?]?` 后输入 `y,n,q,a,d,/,?` 其中一项选择操作方式，具体功能解释如下：\n*   y：接受修改\n*   n：忽略修改\n*   q：退出当前命令\n*   a：添加修改\n*   d：放弃修改\n*   /：通过正则表达式匹配修改内容\n*   ?：查看帮助信息\n\n\n`git add -u`\n直接进入交互命令中的 `update` 模式\n\n它会先列出工作区 `修改` 或 `删除` 的文件列表，`新增` 的文件不会被显示，在命令行 `Update>>` 后输入相应的列表序列号表示选中该项，回车继续选择，如果已选好，直接回车回到命令主界面\n\n`git add --ignore-removal .`\n添加工作区 `修改` 或 `新增` 的文件列表， `删除` 的文件不会被添加\n\n#### git commit\n把暂存区的文件提交到本地版本库\n\n`git commit -m '第一行提交原因'  -m '第二行提交原因'`\n不打开编辑器，直接在命令行中输入多行提交原因\n\n`git commit -am '提交原因'`\n将工作区 `修改` 或 `删除` 的文件提交到本地版本库， `新增` 的文件不会被提交\n\n\n`git commit --amend -m '提交原因'`\n修改最新一条提交记录的提交原因\n\n\n`git commit -C HEAD`\n将当前文件改动提交到 `HEAD` 或当前分支的历史ID\n\n#### git mv\n移动或重命名文件、目录\n\n`git mv a.md b.md -f`\n将 `a.md` 重命名为 `b.md` ，同时添加变动到暂存区，加 `-f` 参数可以强制重命名，相比用 `mv a.md b.md` 命令省去了 `git add` 操作\n\n#### git rm\n从工作区和暂存区移除文件\n\n`git rm b.md`\n从工作区和暂存区移除文件 `b.md` ，同时添加变动到暂存区，相比用 `rm b.md` 命令省去了 `git add` 操作\n\n\n`git rm src/ -r`\n允许从工作区和暂存区移除目录\n\n#### git status\n`git status -s`\n以简短方式查看工作区和暂存区文件状态\n\n`git status --ignored`\n查看工作区和暂存区文件状态，包括被忽略的文件\n\n### **操作分支**\n\n#### git branch\n\n查看、创建、删除分支\n\n- `git branch -a`\n查看本地版本库和远程版本库上的分支列表\n\n- `git branch -r`\n查看远程版本库上的分支列表，加上 `-d` 参数可以删除远程版本库上的分支\n\n- `git branch -D`\n分支未提交到本地版本库前强制删除分支\n\n- `git branch -vv`\n查看带有最后提交id、最近提交原因等信息的本地版本库分支列表 \n\n\n#### git merge 将其它分支合并到当前分支\n\n`git merge --squash`\n将待合并分支上的 `commit` 合并成一个新的 `commit`放入当前分支，适用于待合并分支的提交记录不需要保留的情况 \n\n![合并分支]($resource/%E5%90%88%E5%B9%B6%E5%88%86%E6%94%AF.gif)\n\n- `git merge --no-ff `\n默认情况下，`Git` 执行\"`快进式合并`\"（fast-farward merge），会直接将 `Master` 分支指向 `Develop` 分支，使用 `--no-ff` 参数后，会执行正常合并，在 `Master`分支上生成一个新节点，保证版本演进更清晰。 \n\n![分支合并]($resource/%E5%88%86%E6%94%AF%E5%90%88%E5%B9%B6.png)\n\n- `git merge --no-edit`\n在没有冲突的情况下合并，不想手动编辑提交原因，而是用 `Git` 自动生成的类似 `Merge branch 'test'`的文字直接提交\n\n#### git checkout 切换分支\n\n- `git checkout -b daily/0.0.1`\n创建 `daily/0.0.1` 分支，同时切换到这个新创建的分支\n\n- `git checkout HEAD demo.html`\n从本地版本库的 `HEAD`（也可以是提交ID、分支名、Tag名） 历史中检出 `demo.html` 覆盖当前工作区的文件，如果省略 `HEAD` 则是从暂存区检出\n\n- `git checkout --orphan new_branch`\n这个命令会创建一个全新的，完全没有历史记录的新分支，但当前源分支上所有的最新文件都还在，真是强迫症患者的福音，但这个新分支必须做一次 `git commit` 操作后才会真正成为一个新分支。\n\n- `git checkout -p other_branch`\n这个命令主要用来比较两个分支间的差异内容，并提供交互式的界面来选择进一步的操作，这个命令不仅可以比较两个分支间的差异，还可以比较单个文件的差异。\n\n#### git stash\n\n在 `Git` 的栈中保存当前修改或删除的工作进度，当你在一个分支里做某项功能开发时，接到通知把昨天已经测试完没问题的代码发布到线上，但这时你已经在这个分支里加入了其它未提交的代码，这个时候就可以把这些未提交的代码存到栈里。\n\n- `git stash`\n将未提交的文件保存到Git栈中\n\n* `git stash list`\n查看栈中保存的列表\n\n* `git stash show stash@{0}`\n显示栈中其中一条记录\n\n* `git stash drop stash@{0}`\n移除栈中其中一条记录\n\n* `git stash pop`\n从Git栈中检出最新保存的一条记录，并将它从栈中移除\n\n- `git stash apply stash@{0}`\n从Git栈中检出其中一条记录，但不从栈中移除\n\n* `git stash branch new_banch`\n把当前栈中最近一次记录检出并创建一个新分支\n\n* `git stash clear`\n清空栈里的所有记录\n\n* `git stash create`\n 为当前修改或删除的文件创建一个自定义的栈并返回一个ID，此时并未真正存储到栈里\n \n* `git stash store xxxxxx`\n将 `create` 方法里返回的ID放到 `store` 后面，此时在栈里真正创建了一个记录，但当前修改或删除的文件并未从工作区移除\n\n \n \n### 操作历史\n\n#### git log 显示提交历史记录\n\n* `git log -p`\n显示带提交差异对比的历史记录\n \n* `git log demo.html`\n显示 `demo.html` 文件的历史记录\n \n* `git log --since=\"2 weeks ago\"`\n显示2周前开始到现在的历史记录，其它时间可以类推\n \n* `git log --before=\"2 weeks ago\"`\n显示截止到2周前的历史记录，其它时间可以类推\n\n* `git log -10`\n显示最近10条历史记录\n\n* `git log f5f630a..HEAD`\n显示从提交ID `f5f630a` 到 `HEAD` 之间的记录，`HEAD` 可以为空或其它提交ID\n\n* `git log --pretty=oneline`\n在一行中输出简短的历史记录\n\n* `git log --pretty=format:\"%h\" `\n格式化输出历史记录\n\n* `Git` 用各种 `placeholder` 来决定各种显示内容，我挑几个常用的显示如下：\n    *   %H: commit hash\n    *   %h: 缩短的commit hash\n    *   %T: tree hash\n    *   %t: 缩短的 tree hash\n    *   %P: parent hashes\n    *   %p: 缩短的 parent hashes\n    *   %an: 作者名字\n    *   %aN: mailmap的作者名\n    *   %ae: 作者邮箱\n    *   %ad: 日期 (--date= 制定的格式)\n    *   %ar: 日期, 相对格式(1 day ago)\n    *   %cn: 提交者名字\n    *   %ce: 提交者 email\n    *   %cd: 提交日期 (--date= 制定的格式)\n    *   %cr: 提交日期, 相对格式(1 day ago)\n    *   %d: ref名称\n    *   %s: commit信息标题\n    *   %b: commit信息内容\n    *   %n: 换行\n\n#### git cherry-pick 合并分支的一条或几条提交记录到当前分支末梢\n\n- `git cherry-pick 170a305`\n合并提交ID `170a305` 到当前分支末梢\n\n#### git reset\n\n将当前的分支重设（reset）到指定的 `<commit>` 或者 `HEAD`\n\n* `git reset --mixed <commit>`\n`--mixed` 是不带参数时的默认参数，它退回到某个版本，保留文件内容，回退提交历史\n\n* `git reset --soft <commit>`\n暂存区和工作区中的内容不作任何改变，仅仅把 `HEAD` 指向 `<commit>`\n\n* `git reset --hard <commit>`\n自从 `<commit>` 以来在工作区中的任何改变都被丢弃，并把 `HEAD` 指向 `<commit>`\n\n#### git rebase 重新定义分支的版本库状态\n\n`git rebase branch_name`\n合并分支，这跟 `merge`很像，但还是有本质区别，看下图： \n\n![合并分支过程]($resource/%E5%90%88%E5%B9%B6%E5%88%86%E6%94%AF%E8%BF%87%E7%A8%8B.png)\n\n合并过程中可能需要先解决冲突，然后执行 `git rebase --continue`\n\n`git rebase -i HEAD~~`\n打开文本编辑器，将看到从 `HEAD` 到 `HEAD~~` 的提交如下\n```git\npick 9a54fd4 添加commit的说明\npick 0d4a808 添加pull的说明\n# Rebase 326fc9f..0d4a808 onto d286baa\n#\n# Commands:\n#  p, pick = use commit\n#  r, reword = use commit, but edit the commit message\n#  e, edit = use commit, but stop for amending\n#  s, squash = use commit, but meld into previous commit\n#  f, fixup = like \"squash\", but discard this commit's log message\n#  x, exec = run command (the rest of the line) using shell\n#\n```\n将第一行的 `pick` 改成 `Commands` 中所列出来的命令，然后保存并退出，所对应的修改将会生效。\n\n如果移动提交记录的顺序，将改变历史记录中的排序。\n\n#### git revert\n\n撤销某次操作，此次操作之前和之后的 `commit` 和 `history` 都会保留，并且把这次撤销作为一次最新的提交\n\n`git revert HEAD`\n撤销前一次提交操作\n\n`git revert HEAD --no-edit`\n撤销前一次提交操作，并以默认的 `Revert \"xxx\"` 为提交原因\n\n`git revert -n HEAD`\n需要撤销多次操作的时候加 `-n` 参数，这样不会每次撤销操作都提交，而是等所有撤销都完成后一起提交\n\n#### git diff\n\n查看工作区、暂存区、本地版本库之间的文件差异，用一张图来解释\n![git各个区域文件差异]($resource/git%E5%90%84%E4%B8%AA%E5%8C%BA%E5%9F%9F%E6%96%87%E4%BB%B6%E5%B7%AE%E5%BC%82.png)\n\n`git diff --stat`\n通过 `--stat` 参数可以查看变更统计数据\n```git\n test.md | 1 -\n 1 file changed, 1 deletion(-)\n```\n\n\n#### git reflog\n\n`reflog` 可以查看所有分支的所有操作记录（包括commit和reset的操作、已经被删除的commit记录，跟 `git log`的区别在于它不能查看已经删除了的commit记录 \n\n![640]($resource/640.png)\n\n### 远程版本库连接\n\n如果在GitHub项目初始化之前，文件已经存在于本地目录中，那可以在本地初始化本地版本库，再将本地版本库跟远程版本库连接起来\n\n**git init**在本地目录内部会生成.git文件夹\n\n**git remote**\n\n `git remote -v`\n不带参数，列出已经存在的远程分支，加上 `-v` 列出详细信息，在每一个名字后面列出其远程url\n\n \n`git remote add origin https://github.com/gafish/gafish.github.com.git`\n添加一个新的远程仓库，指定一个名字，以便引用后面带的URL\n\n**git fetch**\n将远程版本库的更新取回到本地版本库\n\n`git fetch origin daily/0.0.1`\n默认情况下，`git fetch` 取回所有分支的更新。如果只想取回特定分支的更新，可以指定分支名。\n\n### **问题排查**\n\n**git blame**查看文件每行代码块的历史信息\n\n`git blame -L 1,10 demo.html`\n截取 `demo.html` 文件1-10行历史信息\n\n**git bisect**二分查找历史记录，排查BUG\n\n- `git bisect start`\n开始二分查找\n\n- `git bisect bad`\n标记当前二分提交ID为有问题的点\n\n- `git bisect good`\n标记当前二分提交ID为没问题的点\n\n- `git bisect reset`\n查到有问题的提交ID后回到原分支\n\n### **更多操作**\n\n**git submodule**\n通过 Git 子模块可以跟踪外部版本库，它允许在某一版本库中再存储另一版本库，并且能够保持2个版本库完全独立\n\n`git submodule add https://github.com/gafish/demo.git demo`\n将 `demo` 仓库添加为子模块\n \n`git submodule update demo`\n更新子模块 `demo`\n\n**git gc**\n运行Git的垃圾回收功能，清理冗余的历史快照\n\n**git archive**\n将加了tag的某个版本打包提取\n\n`git archive -v --format=zip v0.1 > v0.1.zip`\n`--format` 表示打包的格式，如 `zip`，`-v` 表示对应的tag名，后面跟的是tag名，如 `v0.1`。\n\n## **总结**\n\n本文只是对 `Git` 的所有功能中的部分实用功能做了一次探秘，Git非常强大，还有很多功能有待我们去发现，限于本文篇幅，咱就此打住吧，预知更多好用功能，请善用谷歌。\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## 平常使用步骤\n如果 Github 上已经有仓库，而且不是本地传上去的；\n1.首先将 github 上文件 clone 下来，如果和本地文件夹名字一样则修改本地名字，防止覆盖；\n2.将 clone 下来的文件夹里面内容，连同.git 文件一起移动，同时将本地文件夹的名字改成与仓库名字相同；就是保证一点：本地文件只能比 github 端的文件多，不能少；\n3.查看目前的 git 用户：`git remote -v`,可以将目前的一些用户名删掉：`git remote remove 名字`，然后新建用户：`git remote add 名字 库url`, 这里的名字最好使用库名，便于记忆和区分；\n4.添加新文件：`git add .`或者`git add 文件名`\n5.然后 ：`git commit -m \"说明\"`\n6.最后 push：`git push 名字`\n\n\n\n# 使用 GitHub 搭建个人网站\n使用 GitHub 搭建的网站是静态网站，搭建的操作分为两类：\n- 完全基于新的仓库搭建：\n  - 首先创建新的仓库，仓库名为：用户名.github.io\n  - 然后创建 index.html 即可；\n  - 相关的网页显示配置可以在 index.html 中进行配置；\n\n- 基于已有的仓库进行搭建：(现在已经改变，在摸索着)\n  - 首先进入仓库，在右上角选择：setting->Launch automatic gener....\n  - 在 Tagline 中填写项目名称；\n\n\n# 附录：\n\n## 附录一：Git 安装\nTODO：Git 和 GitHub\n\n\n![github开源协议区分]($resource/github%E5%BC%80%E6%BA%90%E5%8D%8F%E8%AE%AE%E5%8C%BA%E5%88%86.png)\n\n",[[1571041516835,["GJX@GJXAIOU",[[-1,1693,"shuoming"]],[1701,1701],[1693,1693]]],[1571041518690,["GJX@GJXAIOU",[[1,1693,"shuom"]],[1693,1693],[1698,1698]]],[1571041519828,["GJX@GJXAIOU",[[-1,1693,"shuom"]],[1698,1698],[1693,1693]]],[1571041522456,["GJX@GJXAIOU",[[1,1693,"说明信息"]],[1693,1693],[1697,1697]]],[1571041540716,["GJX@GJXAIOU",[[-1,1746,"shuoming"]],[1746,1754],[1746,1746]]],[1571041544308,["GJX@GJXAIOU",[[1,1746,"说明信息"]],[1746,1746],[1750,1750]]],[1571042038119,["GJX@GJXAIOU",[[-1,4370,"![搜狗截图20190731203134]($resource/%E6%90%9C%E7%8B%97%E6%88%AA%E5%9B%BE20190731203134.png)"]],[4370,4457],[4370,4370]]],[1571042040323,["GJX@GJXAIOU",[[-1,4371,"\n"]],[4371,4371],[4370,4370]]],[1571042040506,["GJX@GJXAIOU",[[-1,4370,"\n"]],[4370,4370],[4369,4369]]],[1571042490091,["GJX@GJXAIOU",[[-1,16658,"\n"]],[16655,16655],[16654,16654]]],[1571042490373,["GJX@GJXAIOU",[[-1,16657,"\n"]],[16654,16654],[16653,16653]]],[1571042490516,["GJX@GJXAIOU",[[-1,16656,"\n"]],[16653,16653],[16652,16652]]],[1571042490663,["GJX@GJXAIOU",[[-1,16655,"\n"]],[16652,16652],[16651,16651]]],[1571042490912,["GJX@GJXAIOU",[[-1,16654,"\n"]],[16651,16651],[16650,16650]]],[1571042491051,["GJX@GJXAIOU",[[-1,16653,"\n"]],[16650,16650],[16649,16649]]],[1571042491190,["GJX@GJXAIOU",[[-1,16652,"\n"]],[16649,16649],[16648,16648]]],[1571042491370,["GJX@GJXAIOU",[[-1,16651,"\n"]],[16648,16648],[16647,16647]]],[1571042491698,["GJX@GJXAIOU",[[-1,16650,"\n"]],[16647,16647],[16646,16646]]],[1571042491869,["GJX@GJXAIOU",[[-1,16649,"\n"]],[16646,16646],[16645,16645]]],[1571042492046,["GJX@GJXAIOU",[[-1,16648,"\n"]],[16645,16645],[16644,16644]]],[1571042492186,["GJX@GJXAIOU",[[-1,16647,"\n"]],[16644,16644],[16643,16643]]],[1571042493157,["GJX@GJXAIOU",[[-1,16646,"\n"]],[16643,16643],[16642,16642]]],[1571042497395,["GJX@GJXAIOU",[[-1,16546,"## **总结**\n\n本文只是对 `Git` 的所有功能中的部分实用功能做了一次探秘，Git非常强大，还有很多功能有待我们去发现，限于本文篇幅，咱就此打住吧，预知更多好用功能，请善用谷歌。"]],[16546,16640],[16546,16546]]],[1571042499860,["GJX@GJXAIOU",[[-1,16551,"\n"]],[16550,16550],[16549,16549]]],[1571042500039,["GJX@GJXAIOU",[[-1,16550,"\n"]],[16549,16549],[16548,16548]]],[1571042500185,["GJX@GJXAIOU",[[-1,16549,"\n"]],[16548,16548],[16547,16547]]]],null,"GJX@GJXAIOU"],["f028ded3-e90e-483e-adbd-c25ba2ff3f5a",1574147448005,"---\npin: true\ntags: \n- Git\nstyle: summer\nflag: red\ndate: '2019-7-31'\ncustom: GJXAIOU\nnote: Git&GitHub使用说明,2019-2-11号形成初稿，2019-7-31进行整体迭代，2019-8-6号形成终稿\n---\n\n# Git&GitHub使用说明\n\n@toc\n\n==原则：不要在远程库修改文件，一定要在本地修改然后 push==\n\n## 一、Git\n\n### （一）Git 安装\n[软件下载地址](https://git-scm.com/downloads)，按照这里的教程安装即可：[附录一：Git安装教程](#附录一：git-安装)\n\n### （二）Git 简介\n- Git 使用模式：\n  - Git Bash   ：这是命令行模式（类似Linux）【推荐】\n  - Git GUI      ：这是有界面的模式\n- Git 整体结构：\n![Git结构 2]($resource/Git%E7%BB%93%E6%9E%84%202.png)\n- 查看 Git 基本配置：`git config --list`  基本不使用；\n\n\n### （三）Git 配置\n\n- 下面是使用Git的最小配置\n1.打开Git Bash :切换到下面文件目录下；（或者在文件资源器中进入该目录，然后右键：Git Bash Here）\n配置`user.name`和`user.email` 其中global表示对登录用户的所有仓库有效，是用于区分不同的开发人员身份；\n注：以上信息都保存在.git 文件夹中，存放的是本地库相关的子目录和文件，可以使用：`ll .git/`查看，同时，可以使用`cat .git/config`进行查看配置文件，这里看到所有的用户\n2.输入：`git config --global user.name '随便用户名'`\n3.输入：`git config --global user.email '随便邮箱'`\n```git\n git config --local         local只对仓库有效。此也为缺省条件下的配置\n git config --global        global对登录用户的所有仓库都有效\n git config --system        system对系统的所有用户都有效\n```\n上面三个作用域是由一定的优先级的：local > global > system\n\n\n\n### （三）在本地建立一个仓库\n- 示例：在`E`盘下建立一个名为`practice`的仓库\n```git\n  cd e:\n  mkdir practice\n  cd practice\n  ls -la     # 看现在里面有多少文件\n  git init   # 完成初始化，建立了一个空仓库\n```\n\n- 建立本地 Git 仓库的两种方式：\n  *   用Git之前已经有项目代码，则使用以下两条命令建立Git仓库\n```git\n  cd 项目代码所在的文件夹\n  git init\n```\n  *   用Git之前还没有项目代码，使用下面三条命令创建git仓库\n```\n  cd 路径\n  git init your_project #会在当前路径下创建和项目名称同名的文件夹\n  cd your_project\n```\n然后就是在自己的仓库中开始写代码或者更改代码了。\n\n### （四）工作区和版本库区别\n\n![工作区与版本库的区别]($resource/%E5%B7%A5%E4%BD%9C%E5%8C%BA%E4%B8%8E%E7%89%88%E6%9C%AC%E5%BA%93%E7%9A%84%E5%8C%BA%E5%88%AB.png)\n\n注：示例文件名`test.txt`\n- 当使用`git add  test.txt`将文件提交到暂存区之后，仍然在本地继续修改，如果产生了新的修改；\n  - 使用：`git commit -m '说明信息' `提交只是提交第一个修改的，后面修改的不提交；\n  - 使用：`git commit -m '说明信息' test.txt`提交的将是后面修改的版本；\n  - 使用：`git diff head -- test.txt`可以显示工作区和分支的区别；\n\n\n### （五）撤销修改\n- 工作区（本地）修改之后，未提交到暂存区：`git checkout -- test.txt`,撤销工作区的修改；\n- 工作区修改后，已提交到暂存区：`git reset head test.txt`,撤销暂存区的修改，然后再使用上面的命令撤销工作区的修改；\n\n\n### （六）删除文件\n- 删除工作区文件：`rm test.txt` 就是删除本地文件\n- 删除暂存区文件：(删除的修改操作，要提交)：这里是本地和 github 都删除\n`git rm test.txt`\n`git commit -m \"delete test.txt\"`\n`git push 名字`\n\n- **删除缓冲区和 github 文件**，本地不删除\n`git rm -r --cached 文件名或者文件夹名`  --cached 不会将本地文件删除\n`git commit -m \"XXXXX\"`\n`git push 名字`\n\n\n \n\n### （七）Git文件重命名的命令\n\n前提是需要修改git仓库中已经commit了的文件\n\n- 假如想使文件`readme`，改名为 `readme.cpp`。可以使用下面的三条命令：\n```git\nmv readme readme.cpp\ngit rm readme //注意与linux 的命令rm的区别\ngit add readme.cpp\n```\n最后可以使用git status查看修改后的仓库的状态\n上述是三条命令，还可以使用下面的一条命令达到上述三条命令的效果\n `git mv readme readme.cpp`\n \n- 如果想要撤销刚刚的修改，使用下面的命令：\n`git reset --hard`\n\n\n### （八）查看git仓库的版本演变历史\n```\ngit branch -v 看本地有多少版本分支\ngit log --all 查看所有分支的历史\ngit log --all --graph 查看图形化的 log 地址\ngit log --oneline 查看单行的简洁历史。\ngit log --oneline -n4 查看最近的四条简洁历史。\ngit log --oneline --all -n4 --graph 查看所有分支最近 4 条单行的图形化历史。\ngit help --web log 跳转到git log 的帮助文档网页\ngit log --oneline temp 只查看temp的分支的信息且oneline形式\n```\n- 注意：\n  - git log 仅仅是查看当前分支的更改历史\n  - git log --all 查看所有分支的信息\n  - git log --all --graph 上面的查看不容易看各个分支的关系，加上图形化容易看出各个分支的关系\n  - git checkout -b temp +从哪个commit开始新加一个分支(一大串数字,表示某一个commit中的数字 )\n  - git checkout master // 切换到master分支\n\n*   git命令的后面加的参数，有的时候是-，有的时候是- -\n*   单字母的参数是 ‘-’，非单字母的参数是’- -’\n提交记录可能会非常多，按 `J` 键往下翻，按 `K` 键往上翻，按 `Q` 键退出查看\n\n### （九）版本回退\n\n分别修改几次hello.txt，并分别提交。\n版本1：hello\n版本2：hello world\n版本3：hello world third\n版本4：hello  world  third last\n以上版本都提交之后，如果想回到第二个版本：\n\n- 方式一：【推荐】\n1.首先输入：`git reflog` 会得到之后所有该文件的提交版本信息，其中最前面黄色字体为提交的版本号；\n注：可以使用`git log`查看该文件每次提交的详细信息（包括：完整的版本号，作者，时间等），也可以使用：`git log --pretty=online`按行显示以上信息；\n其中：Head 含义：HEAD@{移动到当前版本需要多少步}\n2.输入：`git reset --hard 第二次提交版本号` （这里版本号填写 `git reflog`显示的即可，不必填写完整的版本号）即可回退到第二个版本；\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20181028233812515.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NjbnVhY21oZHU=,size_27,color_FFFFFF,t_70)\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20181028234106489.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NjbnVhY21oZHU=,size_27,color_FFFFFF,t_70)\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20181028234356533.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NjbnVhY21oZHU=,size_27,color_FFFFFF,t_70)\n\n- 方式二：只能后退\n`git reset --head HEAD^`其中一个^表示后退一步，n 个表示后退 n 步；\n- 方式三：只能后退\n`git reset --head HEAD~n`,表示后退 n 步\n\n **补充：reset 参数**\n- 参数一:`--soft`  ：仅仅在本地库移动 HEAD 指针；\n- 参数二:`--mixed` ：在本地库移动 HEAD 指针，同时重置暂存区；\n- 参数三:`--hard` ：在本地库移动 HEAD 指针，同时重置暂存区和工作区；\n\n\n### （十）删除文件并找回\n前提：删除前，文件存在时的状态提交到了本地库；\n操作：`git reset --head 指针位置`\n- 删除操作已经提交到了本地库：指针位置指向历史记录\n- 删除操作尚未提交到本地库：指针位置指向 HEAD\n\n### （十一）比较文件的差异\n- 将工作区文件和暂存区进行比较：`git diff 文件名`\n- 将工作区文件和本地库历史记录比较：`git diff 本地库中历史版本 文件名`\n- 以上不带文件名就是比较多个文件；\n\n\n\n\n\n## 二、连接到GitHub\n\n### （一）将GitHub上的库克隆到本地\n\n**演示说明：** 默认本地 文件地址为：E:\\Program\\GitHub\\\n         GitHub上的库为：Notes\n**步骤：**\n1.将GitHub上已有的仓库下载到本地（这样可以在本地编辑）\n- 进入GitHub中所要同步的库页面，选择：`clone or download`，然后将URL复制下来：本人为：`https://github.com/GJXAIOU/Notes.git`\n![URL]($resource/URL.jpg)\n\n- 在Git Bash 中首先将目录切换到想要保存该库的目录下：然后输入\n`git clone https://github.com/GJXAIOU/Notes.git` (后面的网址就是刚才复制的)，这样就把 Github 在线仓库 clone 到了本地；\n\n\n### （二）连接本地仓库与GitHub：\n\n1.在本地生成SSH Key :  在Git Bash中输入：`ssh-keygen -t rsa -C \"GitHub邮箱\"`，接下来**全部回车**确认，这样在电脑C盘本人用户名目录下就会出现一个文件：`.ssh`\n2.将上面文件中的`id_rsa`使用记事本打开，然后全选复制；\n3.将上面复制的秘钥，黏贴到GitHub中\n![搜狗截图20190226204854]($resource/%E6%90%9C%E7%8B%97%E6%88%AA%E5%9B%BE20190226204854.png)\n![搜狗截图20190226205651]($resource/%E6%90%9C%E7%8B%97%E6%88%AA%E5%9B%BE20190226205651.png)\n\n\n\n### （三）具体使用\n\n#将本地的master分支与GitHub仓库分支进行关联,仓库别名为notes\n`git remote add notes https://github.com/GJXAIOU/Notes.git` #后面为仓库的SSH地址\n\n##这步不需要,这是移除关联\n`git remote remove 名字`\n#注：notes 是自己为远程GitHub仓库取的别名，主要是方便以后书写\n#注：查看当前远程仓库地址别名：`git remote -v`\n\n#下面的步骤只需要第一次的时候配置以下：\n步骤一：配置上面的公钥和私钥\n步骤二；输入：`ssh -T -v git@github.com`\n\n#这一步是指从**本地直接生成库**，而不是克隆的上传使用（一般也没有）\n`git pull --rebase origin master` #相当于将GitHub创建仓库时候多创建的README.md拖下来\n\n#从GitHub往本地克隆，最好保证本地仓库是空的；同样本地上传到GitHub上时候最好保证GitHub新建的仓库是空的；\n\n#将本地的master分支上传到GitHub;格式为：git push 仓库别名 分支名\n`git push -u notes master`\n\n\n### （三）上传同步本地文件\n1.在刚才的本地目录下，使用Git Bash ,输入：`Git init` 初始化本地git仓库；\n然后在改目录下会出现：`.git`这个文件  （只需要一次，以后不需要）\n\n2.进入修改目录下；输入：`git status` :查看多少文件未提交到仓库中（显示为红色的为未提交的），用于查看工作区和暂存区的状态；\n\n3.将上述所有文件从工作区提交到缓存区：`git add . `\n将特定文件提交大缓冲区：`git add 文件名称.后缀`\n\n4.再使用命令`git status`查看是不是都提交到了缓冲区（显示为绿色的是的）\n\n5.将缓冲区的文件提交到GitHub仓库中：`git commit -m \"想显示文件后面的的描述\"`\n\n6.最后一步：`git push 仓库名 分支名`\n\n\n### （四）分支的使用\n\n查看各个分支推动的内容： Github网站的项目首页，点击 `Branch:master` 下拉按钮，就会看到各个分支，选择查看即可；\n\n**git branch**\n创建、重命名、查看、删除项目分支，通过 `Git` 做项目开发时，一般都是在开发分支中进行，开发完成后合并分支到主干。\n- `git branch daily/0.0.0`创建一个名为 `daily/0.0.0` 的日常开发分支，分支名只要不包括特殊字符即可。\n\n- `git branch -m daily/0.0.0 daily/0.0.1`如果觉得之前的分支名不合适，可以为新建的分支重命名，重命名分支名为 `daily/0.0.1`\n\n- `git branch`通过不带参数的branch命令可以查看当前项目分支列表\n\n- `git branch -d daily/0.0.1`如果分支已经完成使命则可以通过 `-d` 参数将分支删除，这里为了继续下一步操作，暂不执行删除操作\n\n**git checkout**切换分支\n- `git checkout daily/0.0.1`切换到 `daily/0.0.1` 分支，后续的操作将在这个分支上进行\n\n### （五）将 Github 上最新版拉到本地\n\n**git pull**：将服务器上的最新代码拉取到本地\n\n`git pull origin daily/0.0.1`\n\n如果其它项目成员对项目做了改动并推送到服务器，我们需要将最新的改动更新到本地，这里我们来模拟一下这种情况。\n\n进入Github网站的项目首页，再进入 `daily/0.0.1` 分支，在线对 `README.md` 文件做一些修改并保存，然后在命令中执行以上命令，它将把刚才在线修改的部分拉取到本地，用编辑器打开 `README.md` ，你会发现文件已经跟线上的内容同步了。\n\n如果线上代码做了变动，而你本地的代码也有变动，拉取的代码就有可能会跟你本地的改动冲突，一般情况下 Git 会自动处理这种冲突合并，但如果改动的是同一行，那就需要手动来合并代码，编辑文件，保存最新的改动，再通过 `git add .` 和 `git commit -m 'xxx'` 来提交合并。\n\n\n### （六）版本标记\n\n **git tag**：为项目标记里程碑\n\n```\ngit tag publish/0.0.1\ngit  push origin publish/0.0.1\n```\n\n当我们完成某个功能需求准备发布上线时，应该将此次完整的项目代码做个标记，并将这个标记好的版本发布到线上，这里我们以 `publish/0.0.1` 为标记名并发布，当看到命令行返回如下内容则表示发布成功了\n```\nTotal 0 (delta 0), reused 0 (delta 0)\nTo https://github.com/gafish/gafish.github.com.git\n * [new tag]         publish/0.0.1 -> publish/0.0.1\n```\n\n### （七）忽略推送文件\n\n设置哪些内容不需要推送到服务器，使用配置文件`.gitignore`\n```\ntouch .gitignore\n```\n\n`.gitignore` 不是 `Git` 命令，而在项目中的一个文件，通过设置 `.gitignore` 的内容告诉 `Git` 哪些文件应该被忽略不需要推送到服务器，通过以上命令可以创建一个 `.gitignore` 文件，并在编辑器中打开文件，每一行代表一个要忽略的文件或目录，如：\n\n```\ndemo.html\nbuild/\n```\n\n以上内容的意思是 `Git` 将忽略 `demo.html` 文件 和 `build/` 目录，这些内容不会被推送到服务器上\n\n\n\n## 三、进阶知识点\n\n\n### （一）基本概念\n\n**工作区（Working Directory）**\n就是你在电脑里能看到的目录，比如上文中的 文件夹就是一个工作区 。\n\n**本地版本库（Local Repository）**\n工作区有一个隐藏目录 `.git`，这个不算工作区，而是 `Git`的版本库。 \n![版本库]($resource/%E7%89%88%E6%9C%AC%E5%BA%93.png)\n\n **暂存区（stage）**\n本地版本库里存了很多东西，其中最重要的就是称为 `stage`（或者叫index）的暂存区，还有 `Git` 为我们自动创建的第一个分支 `master`，以及指向 `master` 的一个指针叫 `HEAD`。\n\n**远程版本库（Remote Repository）**\n\n一般指的是 `Git` 服务器上所对应的仓库，本文的示例所在的`github`仓库就是一个远程版本库 \n\n**以上概念之间的关系**\n`工作区`、`暂存区`、`本地版本库`、`远程版本库`之间几个常用的 `Git`操作流程如下图所示： \n![Git各区之间关系]($resource/Git%E5%90%84%E5%8C%BA%E4%B9%8B%E9%97%B4%E5%85%B3%E7%B3%BB.png)\n\n**分支（Branch）**\n分支是为了将修改记录的整个流程分开存储，让分开的分支不受其它分支的影响，所以在同一个数据库里可以同时进行多个不同的修改 \n![分支]($resource/%E5%88%86%E6%94%AF.png)\n\n**主分支（Master）**\n前面提到过 `master` 是 `Git` 为我们自动创建的第一个分支，也叫主分支，其它分支开发完成后都要合并到 `master`\n![分支和标签]($resource/%E5%88%86%E6%94%AF%E5%92%8C%E6%A0%87%E7%AD%BE.png)\n\n**标签（Tag）**\n标签是用于标记特定的点或提交的历史，通常会用来标记发布版本的名称或版本号（如：`publish/0.0.1`），虽然标签看起来有点像分支，但打上标签的提交是固定的，不能随意的改动，参见上图中的`1.0` / `2.0` / `3.0`\n\n**HEAD**\n\n`HEAD`指向的就是当前分支的最新提交 \n\n![](https://mmbiz.qpic.cn/mmbiz_png/JfTPiahTHJhpibRAib4ypnbXhb1w94Ria1fDltHy65E6ErjC94IGzefLfMB3pk3e36SibJficoYWbZqsemnD4Qwu5fFA/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1)\n\n\n\n### （二）操作文件\n\n#### git add\n添加文件到暂存区\n`git add -i`\n通过此命令将打开交互式子命令系统，你将看到如下子命令\n```\n***Commands***\n  1: status      2: update      3: revert      4: add untracked\n  5: patch      6: diff      7: quit      8: help\n```\n\n通过输入序列号或首字母可以选择相应的功能，具体的功能解释如下：\n*   `status`：功能上和 `git add -i` 相似，没什么用\n*   `update`：详见下方 `git add -u`\n*   `revert`：把已经添加到暂存区的文件从暂存区剔除，其操作方式和 `update` 类似\n*   `add untracked`：可以把新增的文件添加到暂存区，其操作方式和 `update` 类似\n*   `patch`：详见下方 `git add -p`\n*   `diff`：比较暂存区文件和本地版本库的差异，其操作方式和 `update` 类似\n*   `quit`：退出 `git add -i` 命令系统\n*   `help`：查看帮助信息\n\n\n`git add -p`\n直接进入交互命令中最有用的 `patch` 模式\n\n这是交互命令中最有用的模式，其操作方式和 `update` 类似，选择后 `Git` 会显示这些文件的当前内容与本地版本库中的差异，然后您可以自己决定是否添加这些修改到暂存区，在命令行 `Stage deletion [y,n,q,a,d,/,?]?` 后输入 `y,n,q,a,d,/,?` 其中一项选择操作方式，具体功能解释如下：\n*   y：接受修改\n*   n：忽略修改\n*   q：退出当前命令\n*   a：添加修改\n*   d：放弃修改\n*   /：通过正则表达式匹配修改内容\n*   ?：查看帮助信息\n\n\n`git add -u`\n直接进入交互命令中的 `update` 模式\n\n它会先列出工作区 `修改` 或 `删除` 的文件列表，`新增` 的文件不会被显示，在命令行 `Update>>` 后输入相应的列表序列号表示选中该项，回车继续选择，如果已选好，直接回车回到命令主界面\n\n`git add --ignore-removal .`\n添加工作区 `修改` 或 `新增` 的文件列表， `删除` 的文件不会被添加\n\n#### git commit\n把暂存区的文件提交到本地版本库\n\n`git commit -m '第一行提交原因'  -m '第二行提交原因'`\n不打开编辑器，直接在命令行中输入多行提交原因\n\n`git commit -am '提交原因'`\n将工作区 `修改` 或 `删除` 的文件提交到本地版本库， `新增` 的文件不会被提交\n\n\n`git commit --amend -m '提交原因'`\n修改最新一条提交记录的提交原因\n\n\n`git commit -C HEAD`\n将当前文件改动提交到 `HEAD` 或当前分支的历史ID\n\n#### git mv\n移动或重命名文件、目录\n\n`git mv a.md b.md -f`\n将 `a.md` 重命名为 `b.md` ，同时添加变动到暂存区，加 `-f` 参数可以强制重命名，相比用 `mv a.md b.md` 命令省去了 `git add` 操作\n\n#### git rm\n从工作区和暂存区移除文件\n\n`git rm b.md`\n从工作区和暂存区移除文件 `b.md` ，同时添加变动到暂存区，相比用 `rm b.md` 命令省去了 `git add` 操作\n\n\n`git rm src/ -r`\n允许从工作区和暂存区移除目录\n\n#### git status\n`git status -s`\n以简短方式查看工作区和暂存区文件状态\n\n`git status --ignored`\n查看工作区和暂存区文件状态，包括被忽略的文件\n\n### **操作分支**\n\n#### git branch\n\n查看、创建、删除分支\n\n- `git branch -a`\n查看本地版本库和远程版本库上的分支列表\n\n- `git branch -r`\n查看远程版本库上的分支列表，加上 `-d` 参数可以删除远程版本库上的分支\n\n- `git branch -D`\n分支未提交到本地版本库前强制删除分支\n\n- `git branch -vv`\n查看带有最后提交id、最近提交原因等信息的本地版本库分支列表 \n\n\n#### git merge 将其它分支合并到当前分支\n\n`git merge --squash`\n将待合并分支上的 `commit` 合并成一个新的 `commit`放入当前分支，适用于待合并分支的提交记录不需要保留的情况 \n\n![合并分支]($resource/%E5%90%88%E5%B9%B6%E5%88%86%E6%94%AF.gif)\n\n- `git merge --no-ff `\n默认情况下，`Git` 执行\"`快进式合并`\"（fast-farward merge），会直接将 `Master` 分支指向 `Develop` 分支，使用 `--no-ff` 参数后，会执行正常合并，在 `Master`分支上生成一个新节点，保证版本演进更清晰。 \n\n![分支合并]($resource/%E5%88%86%E6%94%AF%E5%90%88%E5%B9%B6.png)\n\n- `git merge --no-edit`\n在没有冲突的情况下合并，不想手动编辑提交原因，而是用 `Git` 自动生成的类似 `Merge branch 'test'`的文字直接提交\n\n#### git checkout 切换分支\n\n- `git checkout -b daily/0.0.1`\n创建 `daily/0.0.1` 分支，同时切换到这个新创建的分支\n\n- `git checkout HEAD demo.html`\n从本地版本库的 `HEAD`（也可以是提交ID、分支名、Tag名） 历史中检出 `demo.html` 覆盖当前工作区的文件，如果省略 `HEAD` 则是从暂存区检出\n\n- `git checkout --orphan new_branch`\n这个命令会创建一个全新的，完全没有历史记录的新分支，但当前源分支上所有的最新文件都还在，真是强迫症患者的福音，但这个新分支必须做一次 `git commit` 操作后才会真正成为一个新分支。\n\n- `git checkout -p other_branch`\n这个命令主要用来比较两个分支间的差异内容，并提供交互式的界面来选择进一步的操作，这个命令不仅可以比较两个分支间的差异，还可以比较单个文件的差异。\n\n#### git stash\n\n在 `Git` 的栈中保存当前修改或删除的工作进度，当你在一个分支里做某项功能开发时，接到通知把昨天已经测试完没问题的代码发布到线上，但这时你已经在这个分支里加入了其它未提交的代码，这个时候就可以把这些未提交的代码存到栈里。\n\n- `git stash`\n将未提交的文件保存到Git栈中\n\n* `git stash list`\n查看栈中保存的列表\n\n* `git stash show stash@{0}`\n显示栈中其中一条记录\n\n* `git stash drop stash@{0}`\n移除栈中其中一条记录\n\n* `git stash pop`\n从Git栈中检出最新保存的一条记录，并将它从栈中移除\n\n- `git stash apply stash@{0}`\n从Git栈中检出其中一条记录，但不从栈中移除\n\n* `git stash branch new_banch`\n把当前栈中最近一次记录检出并创建一个新分支\n\n* `git stash clear`\n清空栈里的所有记录\n\n* `git stash create`\n 为当前修改或删除的文件创建一个自定义的栈并返回一个ID，此时并未真正存储到栈里\n \n* `git stash store xxxxxx`\n将 `create` 方法里返回的ID放到 `store` 后面，此时在栈里真正创建了一个记录，但当前修改或删除的文件并未从工作区移除\n\n \n \n### 操作历史\n\n#### git log 显示提交历史记录\n\n* `git log -p`\n显示带提交差异对比的历史记录\n \n* `git log demo.html`\n显示 `demo.html` 文件的历史记录\n \n* `git log --since=\"2 weeks ago\"`\n显示2周前开始到现在的历史记录，其它时间可以类推\n \n* `git log --before=\"2 weeks ago\"`\n显示截止到2周前的历史记录，其它时间可以类推\n\n* `git log -10`\n显示最近10条历史记录\n\n* `git log f5f630a..HEAD`\n显示从提交ID `f5f630a` 到 `HEAD` 之间的记录，`HEAD` 可以为空或其它提交ID\n\n* `git log --pretty=oneline`\n在一行中输出简短的历史记录\n\n* `git log --pretty=format:\"%h\" `\n格式化输出历史记录\n\n* `Git` 用各种 `placeholder` 来决定各种显示内容，我挑几个常用的显示如下：\n    *   %H: commit hash\n    *   %h: 缩短的commit hash\n    *   %T: tree hash\n    *   %t: 缩短的 tree hash\n    *   %P: parent hashes\n    *   %p: 缩短的 parent hashes\n    *   %an: 作者名字\n    *   %aN: mailmap的作者名\n    *   %ae: 作者邮箱\n    *   %ad: 日期 (--date= 制定的格式)\n    *   %ar: 日期, 相对格式(1 day ago)\n    *   %cn: 提交者名字\n    *   %ce: 提交者 email\n    *   %cd: 提交日期 (--date= 制定的格式)\n    *   %cr: 提交日期, 相对格式(1 day ago)\n    *   %d: ref名称\n    *   %s: commit信息标题\n    *   %b: commit信息内容\n    *   %n: 换行\n\n#### git cherry-pick 合并分支的一条或几条提交记录到当前分支末梢\n\n- `git cherry-pick 170a305`\n合并提交ID `170a305` 到当前分支末梢\n\n#### git reset\n\n将当前的分支重设（reset）到指定的 `<commit>` 或者 `HEAD`\n\n* `git reset --mixed <commit>`\n`--mixed` 是不带参数时的默认参数，它退回到某个版本，保留文件内容，回退提交历史\n\n* `git reset --soft <commit>`\n暂存区和工作区中的内容不作任何改变，仅仅把 `HEAD` 指向 `<commit>`\n\n* `git reset --hard <commit>`\n自从 `<commit>` 以来在工作区中的任何改变都被丢弃，并把 `HEAD` 指向 `<commit>`\n\n#### git rebase 重新定义分支的版本库状态\n\n`git rebase branch_name`\n合并分支，这跟 `merge`很像，但还是有本质区别，看下图： \n\n![合并分支过程]($resource/%E5%90%88%E5%B9%B6%E5%88%86%E6%94%AF%E8%BF%87%E7%A8%8B.png)\n\n合并过程中可能需要先解决冲突，然后执行 `git rebase --continue`\n\n`git rebase -i HEAD~~`\n打开文本编辑器，将看到从 `HEAD` 到 `HEAD~~` 的提交如下\n```git\npick 9a54fd4 添加commit的说明\npick 0d4a808 添加pull的说明\n# Rebase 326fc9f..0d4a808 onto d286baa\n#\n# Commands:\n#  p, pick = use commit\n#  r, reword = use commit, but edit the commit message\n#  e, edit = use commit, but stop for amending\n#  s, squash = use commit, but meld into previous commit\n#  f, fixup = like \"squash\", but discard this commit's log message\n#  x, exec = run command (the rest of the line) using shell\n#\n```\n将第一行的 `pick` 改成 `Commands` 中所列出来的命令，然后保存并退出，所对应的修改将会生效。\n\n如果移动提交记录的顺序，将改变历史记录中的排序。\n\n#### git revert\n\n撤销某次操作，此次操作之前和之后的 `commit` 和 `history` 都会保留，并且把这次撤销作为一次最新的提交\n\n`git revert HEAD`\n撤销前一次提交操作\n\n`git revert HEAD --no-edit`\n撤销前一次提交操作，并以默认的 `Revert \"xxx\"` 为提交原因\n\n`git revert -n HEAD`\n需要撤销多次操作的时候加 `-n` 参数，这样不会每次撤销操作都提交，而是等所有撤销都完成后一起提交\n\n#### git diff\n\n查看工作区、暂存区、本地版本库之间的文件差异，用一张图来解释\n![git各个区域文件差异]($resource/git%E5%90%84%E4%B8%AA%E5%8C%BA%E5%9F%9F%E6%96%87%E4%BB%B6%E5%B7%AE%E5%BC%82.png)\n\n`git diff --stat`\n通过 `--stat` 参数可以查看变更统计数据\n```git\n test.md | 1 -\n 1 file changed, 1 deletion(-)\n```\n\n\n#### git reflog\n\n`reflog` 可以查看所有分支的所有操作记录（包括commit和reset的操作、已经被删除的commit记录，跟 `git log`的区别在于它不能查看已经删除了的commit记录 \n\n![640]($resource/640.png)\n\n### 远程版本库连接\n\n如果在GitHub项目初始化之前，文件已经存在于本地目录中，那可以在本地初始化本地版本库，再将本地版本库跟远程版本库连接起来\n\n**git init**在本地目录内部会生成.git文件夹\n\n**git remote**\n\n `git remote -v`\n不带参数，列出已经存在的远程分支，加上 `-v` 列出详细信息，在每一个名字后面列出其远程url\n\n \n`git remote add origin https://github.com/gafish/gafish.github.com.git`\n添加一个新的远程仓库，指定一个名字，以便引用后面带的URL\n\n**git fetch**\n将远程版本库的更新取回到本地版本库\n\n`git fetch origin daily/0.0.1`\n默认情况下，`git fetch` 取回所有分支的更新。如果只想取回特定分支的更新，可以指定分支名。\n\n### **问题排查**\n\n**git blame**查看文件每行代码块的历史信息\n\n`git blame -L 1,10 demo.html`\n截取 `demo.html` 文件1-10行历史信息\n\n**git bisect**二分查找历史记录，排查BUG\n\n- `git bisect start`\n开始二分查找\n\n- `git bisect bad`\n标记当前二分提交ID为有问题的点\n\n- `git bisect good`\n标记当前二分提交ID为没问题的点\n\n- `git bisect reset`\n查到有问题的提交ID后回到原分支\n\n### **更多操作**\n\n**git submodule**\n通过 Git 子模块可以跟踪外部版本库，它允许在某一版本库中再存储另一版本库，并且能够保持2个版本库完全独立\n\n`git submodule add https://github.com/gafish/demo.git demo`\n将 `demo` 仓库添加为子模块\n \n`git submodule update demo`\n更新子模块 `demo`\n\n**git gc**\n运行Git的垃圾回收功能，清理冗余的历史快照\n\n**git archive**\n将加了tag的某个版本打包提取\n\n`git archive -v --format=zip v0.1 > v0.1.zip`\n`--format` 表示打包的格式，如 `zip`，`-v` 表示对应的tag名，后面跟的是tag名，如 `v0.1`。\n\n\n\n\n## 平常使用步骤\n如果 Github 上已经有仓库，而且不是本地传上去的；\n1.首先将 github 上文件 clone 下来，如果和本地文件夹名字一样则修改本地名字，防止覆盖；\n2.将 clone 下来的文件夹里面内容，连同.git 文件一起移动，同时将本地文件夹的名字改成与仓库名字相同；就是保证一点：本地文件只能比 github 端的文件多，不能少；\n3.查看目前的 git 用户：`git remote -v`,可以将目前的一些用户名删掉：`git remote remove 名字`，然后新建用户：`git remote add 名字 库url`, 这里的名字最好使用库名，便于记忆和区分；\n4.添加新文件：`git add .`或者`git add 文件名`\n5.然后 ：`git commit -m \"说明\"`\n6.最后 push：`git push 名字`\n\n\n\n# 使用 GitHub 搭建个人网站\n使用 GitHub 搭建的网站是静态网站，搭建的操作分为两类：\n- 完全基于新的仓库搭建：\n  - 首先创建新的仓库，仓库名为：用户名.github.io\n  - 然后创建 index.html 即可；\n  - 相关的网页显示配置可以在 index.html 中进行配置；\n\n- 基于已有的仓库进行搭建：(现在已经改变，在摸索着)\n  - 首先进入仓库，在右上角选择：setting->Launch automatic gener....\n  - 在 Tagline 中填写项目名称；\n\n\n# 附录：\n\n## 附录一：Git 安装\nTODO：Git 和 GitHub\n\n\n![github开源协议区分]($resource/github%E5%BC%80%E6%BA%90%E5%8D%8F%E8%AE%AE%E5%8C%BA%E5%88%86.png)\n\n",[[1574147422920,["GJX@GJXAIOUPC",[[1,2241," master"]],[2241,2241],[2248,2248]]],[1574147427611,["GJX@GJXAIOUPC",[[1,2125,"\n"]],[2124,2124],[2125,2125]]],[1574147429216,["GJX@GJXAIOUPC",[[1,2125,"===="]],[2125,2125],[2127,2127]]],[1574147431746,["GJX@GJXAIOUPC",[[1,2127,"shan"]],[2127,2127],[2131,2131]]],[1574147433326,["GJX@GJXAIOUPC",[[-1,2127,"shan"]],[2131,2131],[2127,2127]]],[1574147434526,["GJX@GJXAIOUPC",[[1,2127,"In"]],[2127,2127],[2129,2129]]],[1574147435449,["GJX@GJXAIOUPC",[[-1,2127,"In"]],[2129,2129],[2127,2127]]],[1574147445762,["GJX@GJXAIOUPC",[[1,2127,"仅仅删除 Github 端文件"]],[2127,2127],[2142,2142]]]],null,"GJX@GJXAIOUPC"]]}