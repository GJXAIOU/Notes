{"compress":true,"commitItems":[["9ab6caf5-531a-4662-befc-a0717567ff62",1569314164792,"## 46个Linux面试常见问题送给你\n\nPassZhang [方志朋](javascript:void(0);) _今天_\n\n点击上方“方志朋”，选择“设为星标”\n\n回复”666“获取新整理的面试资料\n\n![](https://mmbiz.qpic.cn/mmbiz_jpg/rtJ5LhxxzwmNw8CcwXgZ3davHJic54MbaDDUliaVN48psWDYgJYn7A1F3hRib0Uh1KN6ksBmqciasia1tkx3uw9B79w/640?tp=webp&wxfrom=5&wx_lazy=1&wx_co=1)\n\n> **作者：PassZhang**\n> \n> **链接：https://www.cnblogs.com/hystj/p/8552757.html**\n\n**问题一：**\n\n绝对路径用什么符号表示？当前目录、上层目录用什么表示？主目录用什么表示? 切换目录用什么命令？\n\n**答案：**\n绝对路径：如/etc/init.d\n当前目录和上层目录：./  ../\n主目录：~/\n切换目录：cd\n\n**问题二：**\n\n怎么查看当前进程？怎么执行退出？怎么查看当前路径？\n**答案：**\n查看当前进程：ps\n执行退出：exit\n查看当前路径：pwd\n\n**问题三：**\n\n怎么清屏？怎么退出当前命令？怎么执行睡眠？怎么查看当前用户 id？查看指定帮助用什么命令？\n**答案：**\n清屏：clear\n退出当前命令：ctrl+c 彻底退出\n执行睡眠 ：ctrl+z 挂起当前进程fg 恢复后台\n查看当前用户 id：”id“：查看显示目前登陆账户的 uid 和 gid 及所属分组及用户名\n查看指定帮助：如 man adduser 这个很全 而且有例子；adduser --help 这个告诉你一些常用参数；info adduesr；\n\n**问题四：**\n\nLs 命令执行什么功能？可以带哪些参数，有什么区别？\n**答案：**\nls 执行的功能：列出指定目录中的目录，以及文件\n哪些参数以及区别：a 所有文件l 详细信息，包括大小字节数，可读可写可执行的权限等\n\n**问题五：**\n\n建立软链接(快捷方式)，以及硬链接的命令。\n**答案：**\n软链接：ln -s slink source\n硬链接：ln link source\n\n**问题六：**\n\n目录创建用什么命令？创建文件用什么命令？复制文件用什么命令？\n**答案：**\n创建目录：mkdir\n创建文件：典型的如 touch，vi 也可以创建文件，其实只要向一个不存在的文件输出，都会创建文件\n复制文件：cp 7\\. 文件权限修改用什么命令？格式是怎么样的？\n文件权限修改：chmod\n格式如下：\n\n> $ chmod u+x file 给 file 的属主增加执行权限\n> $ chmod 751 file 给 file 的属主分配读、写、执行(7)的权限，给 file 的所在组分配读、执行(5)的权限，给其他用户分配执行(1)的权限\n> $ chmod u=rwx,g=rx,o=x file 上例的另一种形式\n> $ chmod =r file 为所有用户分配读权限\n> $ chmod 444 file 同上例\n> $ chmod a-wx,a+r file同上例\n> $ chmod -R u+r directory 递归地给 directory 目录下所有文件和子目录的属主分配读的权限\n\n**问题八：**\n\n查看文件内容有哪些命令可以使用？\n**答案：**\nvi 文件名 #编辑方式查看，可修改\ncat 文件名 #显示全部文件内容\nmore 文件名 #分页显示文件内容\nless 文件名 #与 more 相似，更好的是可以往前翻页\ntail 文件名 #仅查看尾部，还可以指定行数\nhead 文件名 #仅查看头部,还可以指定行数\n\n**问题九：**\n\n随意写文件命令？怎么向屏幕输出带空格的字符串，比如”hello world”?\n\n**答案：**\n\n写文件命令：vi\n\n向屏幕输出带空格的字符串:echo hello world\n\n**问题十：**\n\n终端是哪个文件夹下的哪个文件？黑洞文件是哪个文件夹下的哪个命令？\n**答案：**\n终端  /dev/tty\n\n黑洞文件  /dev/null\n\n**问题十一：**\n\n移动文件用哪个命令？改名用哪个命令？\n**答案：**\nmv mv\n\n**问题十二：**\n\n复制文件用哪个命令？如果需要连同文件夹一块复制呢？如果需要有提示功能呢？\n**答案：**\ncp cp -r  ？？？？\n\n**问题十三：**\n\n删除文件用哪个命令？如果需要连目录及目录下文件一块删除呢？删除空文件夹用什么命令？\n**答案：**\nrm rm -r rmdir\n\n**问题十四： **\n\nLinux 下命令有哪几种可使用的通配符？分别代表什么含义?\n**答案：**\n“？”可替代单个字符。\n\n“*”可替代任意多个字符。\n\n方括号“[charset]”可替代 charset 集中的任何单个字符，如[a-z]，[abABC]\n\n**问题十五：**\n\n用什么命令对一个文件的内容进行统计？(行号、单词数、字节数)\n**答案：**\n\nwc 命令 - c 统计字节数 - l 统计行数 - w 统计字数。\n\n**问题十六：**\n\nGrep 命令有什么用？如何忽略大小写？如何查找不含该串的行?\n**答案：**\n是一种强大的文本搜索工具，它能使用正则表达式搜索文本，并把匹 配的行打印出来。\ngrep [stringSTRING] filename grep [^string] filename\n\n**问题十七：**\n\nLinux 中进程有哪几种状态？在 ps 显示出来的信息中，分别用什么符号表示的？\n**答案：**\n（1）、不可中断状态：进程处于睡眠状态，但是此刻进程是不可中断的。不可中断， 指进程不响应异步信号。\n（2）、暂停状态/跟踪状态：向进程发送一个 SIGSTOP 信号，它就会因响应该信号 而进入 TASK_STOPPED 状态;当进程正在被跟踪时，它处于 TASK_TRACED 这个特殊的状态。\n“正在被跟踪”指的是进程暂停下来，等待跟踪它的进程对它进行操作。\n\n（3）、就绪状态：在 run_queue 队列里的状态\n\n（4）、运行状态：在 run_queue 队列里的状态\n（5）、可中断睡眠状态：处于这个状态的进程因为等待某某事件的发生（比如等待 socket 连接、等待信号量），而被挂起\n（6）、zombie 状态（僵尸）：父亲没有通过 wait 系列的系统调用会顺便将子进程的尸体（task_struct）也释放掉\n（7）、退出状态\n\n> D 不可中断 Uninterruptible（usually IO）\n> R 正在运行，或在队列中的进程\n> S 处于休眠状态\n> T 停止或被追踪\n> Z 僵尸进程\n> W 进入内存交换（从内核 2.6 开始无效）\n> X 死掉的进程\n\n**问题十八：**\n\n怎么使一个命令在后台运行?\n**答案：**\n一般都是使用 & 在命令结尾来让程序自动运行。(命令后可以不追加空格)\n\n**问题十九：**\n\n利用 ps 怎么显示所有的进程? 怎么利用 ps 查看指定进程的信息？\n**答案：**\nps -ef (system v 输出) \n\nps -aux bsd 格式输出\n\nps -ef | grep pid\n\n**问题二十：**\n\n哪个命令专门用来查看后台任务? \n\n**答案：**\n\njob -l\n\n**问题二十一：**\n\n把后台任务调到前台执行使用什么命令?把停下的后台任务在后台执行起来用什么命令?\n**答案：**\n把后台任务调到前台执行 fg\n\n把停下的后台任务在后台执行起来 bg\n\n**问题二十二：**\n\n终止进程用什么命令? 带什么参数? \n\n**答案：**\n\nkill [-s <信息名称或编号>][程序] 或 kill [-l <信息编号>] \n\nkill-9 pid\n\n**问题二十三：**\n\n怎么查看系统支持的所有信号？\n\n**答案：**\n\nkill -l\n\n**问题二十四：**\n\n搜索文件用什么命令? 格式是怎么样的? \n\n**答案：**\n\nfind <指定目录> <指定条件> <指定动作>\n\nwhereis 加参数与文件名\n\nlocate 只加文件名\n\nfind 直接搜索磁盘，较慢。\n\nfind / -name \"string*\"\n\n**问题二十五：**\n\n查看当前谁在使用该主机用什么命令? 查找自己所在的终端信息用什么命令?\n**答案：**\n查找自己所在的终端信息：who am i\n\n查看当前谁在使用该主机：who\n\n**问题二十六：**\n\n使用什么命令查看用过的命令列表?\n\n**答案：**\n\nhistory\n\n**问题二十七：**\n\n使用什么命令查看磁盘使用空间？空闲空间呢?\n\n**答案：**\n\ndf -hl\n文件系统 容量 已用 可用 已用% 挂载点\nFilesystem Size Used Avail Use% Mounted on /dev/hda2 45G 19G 24G 44% /\n/dev/hda1 494M 19M 450M 4% /boot\n\n**问题二十八：**\n\n使用什么命令查看网络是否连通?\n**答案：**\nnetstat\n\n**问题二十九：**\n\n使用什么命令查看 ip 地址及接口信息？\n\n**答案：**\n\nifconfig\n\n**问题三十：**\n\n查看各类环境变量用什么命令?\n\n**答案：**\n\n查看所有 env\n查看某个，如 home：env $HOME\n\n**问题三十一：**\n\n通过什么命令指定命令提示符?\n\n**答案：**\n\n> \\u：显示当前用户账号\n> \n> \\h：显示当前主机名\n> \n> \\W：只显示当前路径最后一个目录\n> \n> \\w：显示当前绝对路径（当前用户目录会以~代替）\n> \n> $PWD：显示当前全路径\n> \n> \\$：显示命令行’$'或者’#'符号\n> \n> \\#：下达的第几个命令\n> \n> \\d：代表日期，格式为week day month date，例如：\"MonAug1\"\n> \n> \\t：显示时间为24小时格式，如：HH：MM：SS\n> \n> \\T：显示时间为12小时格式\n> \n> \\A：显示时间为24小时格式：HH：MM\n> \n> \\v：BASH的版本信息 如export PS1=’[\\u@\\h\\w\\#]\\$‘\n\n**问题三十二：**\n\n查找命令的可执行文件是去哪查找的? 怎么对其进行设置及添加? \n\n**答案：**\n\nwhereis [-bfmsu][-B <目录>...][-M <目录>...][-S <目录>...][文件...]\n\n补充说明：whereis 指令会在特定目录中查找符合条件的文件。这些文件的烈性应属于原始代码，二进制文件，或是帮助文件。\n\n> -b   只查找二进制文件。\n> \n> -B<目录> 只在设置的目录下查找二进制文件。-f 不显示文件名前的路径名称。\n> -m   只查找说明文件。\n> -M<目录> 只在设置的目录下查找说明文件。-s 只查找原始代码文件。\n> -S<目录> 只在设置的目录下查找原始代码文件。-u 查找不包含指定类型的文件。\n> which 指令会在 PATH 变量指定的路径中，搜索某个系统命令的位置，并且返回第一个搜索结果。\n> -n 指定文件名长度，指定的长度必须大于或等于所有文件中最长的文件名。\n> -p 与-n 参数相同，但此处的包括了文件的路径。-w 指定输出时栏位的宽度。\n> -V   显示版本信息\n\n**问题三十三：**\n\n通过什么命令查找执行命令?\n**答案：**\nwhich 只能查可执行文件\n\nwhereis 只能查二进制文件、说明文档，源文件等\n\n**问题三十四：**\n\n怎么对命令进行取别名？\n**答案：**\nalias la='ls -a'\n\n**问题三十五：**\n\ndu 和 df 的定义，以及区别？\n**答案：**\n\ndu 显示目录或文件的大小\n\ndf 显示每个<文件>所在的文件系统的信息，默认是显示所有文件系统。\n（文件系统分配其中的一些磁盘块用来记录它自身的一些数据，如 i 节点，磁盘分布图，间接块，超级块等。这些数据对大多数用户级的程序来说是不可见的，通常称为 Meta Data。） du 命令是用户级的程序，它不考虑 Meta Data，而 df 命令则查看文件系统的磁盘分配图并考虑 Meta Data。\ndf 命令获得真正的文件系统数据，而 du 命令只查看文件系统的部分情况。\n\n**问题三十六：**\n\nawk 详解。\n**答案：**\n\n> awk '{pattern + action}' {filenames}\n> #cat /etc/passwd |awk -F ':' '{print $1\"\\t\"$7}' //-F 的意思是以':'分隔 root /bin/bash\n> daemon /bin/sh 搜索/etc/passwd 有 root 关键字的所有行\n\n> #awk -F: '/root/' /etc/passwd root:x:0:0:root:/root:/bin/bash\n\n**问题三十七：**\n\n当你需要给命令绑定一个宏或者按键的时候，应该怎么做呢？\n\n**答案：**\n\n可以使用bind命令，bind可以很方便地在shell中实现宏或按键的绑定。\n\n在进行按键绑定的时候，我们需要先获取到绑定按键对应的字符序列。\n\n比如获取F12的字符序列获取方法如下：先按下Ctrl+V,然后按下F12 .我们就可以得到F12的字符序列 ^[[24~。\n\n接着使用bind进行绑定。\n\n[root@localhost ~]# bind ‘”\\e[24~\":\"date\"'\n\n注意：相同的按键在不同的终端或终端模拟器下可能会产生不同的字符序列。\n\n【附】也可以使用showkey -a命令查看按键对应的字符序列。\n\n**问题三十八：**\n\n如果一个linux新手想要知道当前系统支持的所有命令的列表，他需要怎么做？\n\n**答案：**\n\n使用命令compgen ­-c，可以打印出所有支持的命令列表。\n\n> [root@localhost ~]$ compgen -c\n> \n> l.\n> \n> ll\n> \n> ls\n> \n> which\n> \n> if\n> \n> then\n> \n> else\n> \n> elif\n> \n> fi\n> \n> case\n> \n> esac\n> \n> for\n> \n> select\n> \n> while\n> \n> until\n> \n> do\n> \n> done\n> \n> …\n\n**问题三十九：**\n\n如果你的助手想要打印出当前的目录栈，你会建议他怎么做？\n\n**答案：**\n\n使用Linux 命令dirs可以将当前的目录栈打印出来。\n\n> [root@localhost ~]# dirs\n\n> /usr/share/X11\n\n【附】：目录栈通过pushd popd 来操作。\n\n**问题四十：**\n\n你的系统目前有许多正在运行的任务，在不重启机器的条件下，有什么方法可以把所有正在运行的进程移除呢？\n\n答案：\n\n使用linux命令 ’disown -r ’可以将所有正在运行的进程移除。\n\n**问题四十一：**\n\nbash shell 中的hash 命令有什么作用？\n\n答案：\n\nlinux命令’hash’管理着一个内置的哈希表，记录了已执行过的命令的完整路径, 用该命令可以打印出你所使用过的命令以及执行的次数。\n\n> [root@localhost ~]# hash\n> \n> hits command\n> \n> 2 /bin/ls\n> \n> 2 /bin/su\n\n**问题四十二：**\n\n哪一个bash内置命令能够进行数学运算。\n\n答案：\n\nbash shell 的内置命令let 可以进行整型数的数学运算。\n\n> #! /bin/bash\n> …\n> …\n> let c=a+b\n> …\n> …\n\n**问题四十三：**\n\n怎样一页一页地查看一个大文件的内容呢？\n\n**答案：**\n\n通过管道将命令”cat file_name.txt” 和 ’more’ 连接在一起可以实现这个需要.\n\n[root@localhost ~]# cat file_name.txt | more\n\n**问题四十四：**\n\n数据字典属于哪一个用户的？\n\n**答案：**\n\n数据字典是属于’SYS’用户的，用户‘SYS’ 和 ’SYSEM’是由系统默认自动创建的\n\n**问题四十五：**\n\n怎样查看一个linux命令的概要与用法？假设你在/bin目录中偶然看到一个你从没见过的的命令，怎样才能知道它的作用和用法呢？\n\n**答案：**\n\n使用命令whatis 可以先出显示出这个命令的用法简要，比如，你可以使用whatis zcat 去查看‘zcat’的介绍以及使用简要。\n\n> [root@localhost ~]# whatis zcat\n> \n> zcat [gzip] (1) – compress or expand files\n\n**问题四十六：**\n\n使用哪一个命令可以查看自己文件系统的磁盘空间配额呢？\n\n**答案：**\n\n使用命令repquota 能够显示出一个文件系统的配额信息\n\n【附】只有root用户才能够查看其它用户的配额。",[[1569314124864,["GJX@GJXAIOU",[[-1,22,"PassZhang [方志朋](javascript:void(0);) _今天_\n\n点击上方“方志朋”，选择“设为星标”\n\n回复”666“获取新整理的面试资料\n\n![](https://mmbiz.qpic.cn/mmbiz_jpg/rtJ5LhxxzwmNw8CcwXgZ3davHJic54MbaDDUliaVN48psWDYgJYn7A1F3hRib0Uh1KN6ksBmqciasia1tkx3uw9B79w/640?tp=webp&wxfrom=5&wx_lazy=1&wx_co=1)"]],[22,271],[22,22]]],[1569314134766,["GJX@GJXAIOU",[[-1,24,"> **作者：PassZhang**\n> \n> **链接：https://www.cnblogs.com/hystj/p/8552757.html**"]],[24,99],[24,24]]],[1569314141758,["GJX@GJXAIOU",[[-1,0,"#"]],[2,2],[1,1]]],[1569314145389,["GJX@GJXAIOU",[[-1,16,"送给你"]],[17,19],[16,16]]],[1569314146224,["GJX@GJXAIOU",[[-1,21,"\n"]],[21,21],[20,20]]],[1569314146605,["GJX@GJXAIOU",[[-1,20,"\n"]],[20,20],[19,19]]],[1569314147037,["GJX@GJXAIOU",[[-1,19,"\n"]],[19,19],[18,18]]],[1569315639953,["GJX@GJXAIOU",[[-1,19,"**"],[-1,25,"**"]],[21,21],[19,23]]],[1569315640916,["GJX@GJXAIOU",[[1,19,"## "]],[19,23],[26,26]]],[1569324456011,["GJX@GJXAIOU",[[-1,812,"> "]],[812,814],[812,812]]],[1569324457513,["GJX@GJXAIOU",[[-1,846,"> "]],[846,848],[846,846]]],[1569324458789,["GJX@GJXAIOU",[[-1,928,"> "]],[928,930],[928,928]]],[1569324460664,["GJX@GJXAIOU",[[-1,965,">"]],[965,966],[965,965]]],[1569324461809,["GJX@GJXAIOU",[[-1,909,"权"]],[910,910],[909,909]]],[1569324466560,["GJX@GJXAIOU",[[-1,116," "],[1,117," "],[-1,909,""],[1,909,"权"],[-1,1431," "],[1,1432," "],[-1,1447," "],[1,1448," "],[-1,1570," "],[1,1571," "],[-1,1661," "],[1,1662," "],[-1,2720," "],[1,2721," "],[-1,2786," "],[1,2787," "],[-1,2931," "],[1,2932," "],[-1,2985," "],[1,2986," "],[-1,3077," "],[1,3078," "],[-1,4068," "],[1,4069," "],[-1,4208," "],[1,4209," "],[-1,4270," "],[1,4271," "],[-1,4499," "],[1,4500," "]],[909,909],[910,910]]],[1569324472913,["GJX@GJXAIOU",[[-1,965," "]],[965,966],[965,965]]],[1569324475304,["GJX@GJXAIOU",[[-1,992,"> "]],[994,994],[992,992]]],[1569324477773,["GJX@GJXAIOU",[[-1,1013,"> "]],[1013,1015],[1013,1013]]],[1569324480930,["GJX@GJXAIOU",[[-1,1038,"> "]],[1040,1040],[1038,1038]]],[1569324486644,["GJX@GJXAIOU",[[1,811,"··"]],[811,811],[813,813]]],[1569324487514,["GJX@GJXAIOU",[[-1,811,"··"]],[813,813],[811,811]]],[1569324491636,["GJX@GJXAIOU",[[1,811,"```"]],[811,811],[814,814]]],[1569324491700,["GJX@GJXAIOU",[[1,814,"language\n```\n"]],[814,814],[814,822]]],[1569324492931,["GJX@GJXAIOU",[[-1,814,"language"],[1,822,"j"]],[814,822],[815,815]]],[1569324493378,["GJX@GJXAIOU",[[1,815,"ava"]],[815,815],[818,818]]],[1569324494011,["GJX@GJXAIOU",[[1,819,"\n"]],[818,818],[819,819]]],[1569324511347,["GJX@GJXAIOU",[[-1,825,"$ chmod u+x file 给 file 的属主增加执行权限\n$ chmod 751 file 给 file 的属主分配读、写、执行(7)的权限，给 file 的所在组分配读、执行(5)的权限，给其他用户分配执行(1)的权限\n$ chmod u=rwx,g=rx,o=x file 上例的另一种形式\n$ chmod =r file 为所有用户分配读权限\n$ chmod 444 file 同上例\n$ chmod a-wx,a+r file同上例\n$ chmod -R u+r directory 递归地给 directory 目录下所有文件和子目录的属主分配读的权限"]],[825,1111],[825,825]]],[1569324535909,["GJX@GJXAIOU",[[1,819,"$ chmod u+x file 给 file 的属主增加执行权限\n$ chmod 751 file 给 file 的属主分配读、写、执行(7)的权限，给 file 的所在组分配读、执行(5)的权限，给其他用户分配执行(1)的权限\n$ chmod u=rwx,g=rx,o=x file 上例的另一种形式\n$ chmod =r file 为所有用户分配读权限\n$ chmod 444 file 同上例\n$ chmod a-wx,a+r file同上例\n$ chmod -R u+r directory 递归地给 directory 目录下所有文件和子目录的属主分配读的权限"]],[819,819],[1105,1105]]],[1569324799665,["GJX@GJXAIOU",[[-1,1112,"\n"]],[1112,1112],[1111,1111]]],[1569324800223,["GJX@GJXAIOU",[[-1,1111,"\n"]],[1111,1111],[1110,1110]]],[1569324941558,["GJX@GJXAIOU",[[1,1365,"·"]],[1365,1365],[1366,1366]]],[1569324942993,["GJX@GJXAIOU",[[-1,1365,"·"]],[1366,1366],[1365,1365]]],[1569324943580,["GJX@GJXAIOU",[[1,1365,"`"]],[1365,1365],[1366,1366]]],[1569324945762,["GJX@GJXAIOU",[[1,1382,"`"]],[1382,1382],[1383,1383]]],[1569325008731,["GJX@GJXAIOU",[[1,1568,"`"]],[1568,1568],[1569,1569]]],[1569325012551,["GJX@GJXAIOU",[[1,1583,"`"]],[1583,1583],[1584,1584]]],[1569325015920,["GJX@GJXAIOU",[[1,1661,"`"]],[1661,1661],[1662,1662]]],[1569325023675,["GJX@GJXAIOU",[[-1,1661,"`"]],[1662,1662],[1661,1661]]],[1569325074328,["GJX@GJXAIOU",[[-1,2462,"> "]],[2462,2464],[2462,2462]]],[1569325076544,["GJX@GJXAIOU",[[-1,2497,"> "]],[2499,2499],[2497,2497]]],[1569325080952,["GJX@GJXAIOU",[[-1,2513,"> "]],[2515,2515],[2513,2513]]],[1569325161896,["GJX@GJXAIOU",[[-1,2298,"\n"]],[2298,2298],[2297,2297]]],[1569325165328,["GJX@GJXAIOU",[[1,2185,"`"]],[2185,2185],[2186,2186]]],[1569325166826,["GJX@GJXAIOU",[[1,2198,"`"]],[2198,2198],[2199,2199]]],[1569325168520,["GJX@GJXAIOU",[[1,2217,"`"]],[2217,2217],[2218,2218]]],[1569325169499,["GJX@GJXAIOU",[[1,2229,"`"]],[2229,2229],[2230,2230]]],[1569325172233,["GJX@GJXAIOU",[[-1,2273,"\n"]],[2273,2273],[2272,2272]]],[1569327133991,["GJX@GJXAIOU",[[-1,2524,"> "]],[2524,2526],[2524,2524]]],[1569327135920,["GJX@GJXAIOU",[[-1,2533,"> "]],[2533,2535],[2533,2533]]],[1569327137167,["GJX@GJXAIOU",[[-1,2540,"> "]],[2540,2542],[2540,2540]]],[1569327138519,["GJX@GJXAIOU",[[-1,2563,"> "]],[2563,2565],[2563,2563]]],[1569369067876,["GJX@GJXAIOU",[[-1,1784,"，"]],[1785,1785],[1784,1784]]],[1569369068915,["GJX@GJXAIOU",[[1,1784,","]],[1784,1784],[1785,1785]]],[1569369069944,["GJX@GJXAIOU",[[-1,1784,","]],[1785,1785],[1784,1784]]],[1569369070609,["GJX@GJXAIOU",[[1,1784,"，"]],[1784,1784],[1785,1785]]],[1569370269640,["GJX@GJXAIOU",[[1,0,"\n"]],[0,0],[1,1]]],[1569370270426,["GJX@GJXAIOU",[[1,0,"---\ntags: 面试\n---"]],[0,0],[16,16]]]],null,"GJX@GJXAIOU"]]}