{"compress":true,"commitItems":[["60f6841d-015e-429b-ae88-c190658b1ecc",1556458992090,"# Lorem ipsum\n\nInterdum et malesuada fames ac ante ipsum primis in faucibus. Morbi sagittis aliquam orci, id elementum leo varius at. Suspendisse in hendrerit orci. Aliquam nec congue augue.\n\n* [x] In volutpat scelerisque congue.\n* [ ] Nam ultricies justo dictum ligula pulvinar iaculis.\n* [ ] Etiam vulputate nulla eget lectus fermentum accumsan.\n* [ ] Sed in sem tincidunt, sollicitudin erat pharetra, bibendum sapien.",[[1556458967880,["GJX@GJXAIOU",[[-1,192,"* [x] In volutpat scelerisque congue.\n* [ ] Nam ultricies justo dictum ligula pulvinar iaculis.\n* [ ] Etiam vulputate nulla eget lectus fermentum accumsan.\n* [ ] Sed in sem tincidunt, sollicitudin erat pharetra, bibendum sapien."],[1,420,"001第一讲 数据结构和算法绪论\n002第二讲 谈谈算法\n003第三讲 时间复杂度和空间复杂度\n004第四讲 时间复杂度和空间复杂度2\n005第五讲 时间复杂度和空间复杂度3\n006第六讲 线性表\n007第七讲 线性表2\n008第八讲 线性表3\n009第九讲 线性表4\n010第十讲 线性表5\n011第十一讲 线性表6\n012第十二讲 线性表7\n013第十三讲 线性表8\n014第十四讲 线性表9\n015第十五讲 线性表10\n016第十六讲 线性表11\n017第十七讲 线性表12\n018第十八讲 线性表13\n019第十九讲 线性表14\n020第二十讲 线性表15\n021第二十一讲 线性表16\n022第二十二讲 线性表17\n023第二十三讲 栈和队列\n024第二十四讲 栈和队列2\n025第二十五讲 栈和队列3\n026第二十六讲 栈和队列4\n027第二十七讲 栈和队列5\n028第二十八讲 栈和队列6\n029第二十九讲 栈和队列7\n030第三十讲 栈和队列8\n031第三十一讲 递归和分治思想\n032第三十二讲 递归和分治思想2\n033第三十三讲 递归和分治思想3\n034第三十四讲 递归和分治思想4\n035第三十五讲 字符串\n036第三十六讲 KMP算法\n037第三十七讲 KMP算法2\n038第三十八讲 KMP算法之NEXT数组代码原理分析\n039第三十九讲 KMP算法之实现及优化\n040第四十讲 树\n041第四十一讲 树的存储结构\n042第四十二讲 树的存储结构2\n043第四十三讲 二叉树\n044第四十四讲 二叉树2\n045第四十五讲 二叉树的存数结构\n046第四十六讲 二叉树的遍历\n047第四十七讲 二叉树的建立和遍历算法\n048第四十八讲 线索二叉树\n049第四十九讲 线索二叉树代码实现\n050第五十讲 树、森林及二叉树的相互转换\n051第五十一讲 赫夫曼树\n052第五十二讲 赫夫曼编码\n053第五十三讲 赫夫曼编码C语言实现\n054第五十四讲 图的定义与术语\n055第五十五讲 图的定义与术语2\n056第五十六讲 图的存储结构（邻接矩阵）\n057第五十七讲 图的存储结构（邻接表）\n058第五十八讲 图的存储结构（十字链表、邻接多重表、边集数组）\n059第五十九讲 图的遍历（深度优先遍历）\n060第六十讲 马踏棋盘算法（骑士周游问题）\n061第六十一讲 图的遍历（广度优先遍历）\n062第六十二讲 最小生成树（普里姆算法）\n063第六十三讲 最小生成树（克鲁斯卡尔算法）\n064第六十四讲 最短路径（迪杰斯特拉算法）\n065第六十五讲 最短路径（弗洛伊德算法）\n066第六十六讲 拓扑排序\n067第六十七讲 关键路径\n068第六十八讲 关键路径（代码讲解）\n069第六十九讲 查找算法\n070第七十讲 插值查找（按比例查找）\n071第七十一讲 斐波那契查找（黄金分割法查找）\n072第七十二讲 线性索引查找\n073第七十三讲 二叉排序树\n074第七十四讲 二叉排序树的查找、插入和删除\n075第七十五讲 二叉排序树的查找、插入和删除2\n076第七十六讲 平衡二叉树\n077第七十七讲 平衡二叉树的实现原理\n078第七十八讲 平衡二叉树的实现原理（代码实现）\n079第七十九讲 多路查找树之2-3树\n080第八十讲 多路查找树之2-3树的插入原理\n081第八十一讲 多路查找树之2-3树的删除原理\n082第八十二讲 2-3-4树和B树\n083第八十三讲 散列表（哈希表）查找\n084第八十四讲 散列函数的构造方法\n085第八十五讲 处理散列冲突的方法\n086第八十六讲 散列表查找的代码实现\n087第八十七讲 排序算法\n088第八十八讲 冒泡排序\n089第八十九讲 选择排序\n090第九十讲 直接插入排序\n091第九十一讲 希尔排序\n092第九十二讲 堆排序\n093第九十三讲 堆排序的代码实现\n094第九十四讲 归并排序（递归实现）\n095第九十五讲 归并排序（迭代实现）\n096第九十六讲 快速排序\n097第九十七讲 快速排序的优化\n098第九十八讲 总结回顾\nLIST.TXT\n准备看线性表9.txt\n批量提取文件名、新建文件夹.bat\n\n"]],[192,420],[1926,1926]]],[1556458971627,["GJX@GJXAIOU",[[-1,15,"Interdum et malesuada fames ac ante ipsum primis in faucibus. Morbi sagittis aliquam orci, id elementum leo varius at. Suspendisse in hendrerit orci. Aliquam nec congue augue."]],[15,190],[15,15]]],[1556458973018,["GJX@GJXAIOU",[[-1,16,"\n"]],[15,15],[14,14]]],[1556458979257,["GJX@GJXAIOU",[[-1,1711,"LIST.TXT\n准备看线性表9.txt\n批量提取文件名、新建文件夹.bat"]],[1711,1749],[1711,1711]]],[1556458993666,["GJX@GJXAIOU",[[1,16,"* [ ] "],[1,33,"* [ ] "],[1,45,"* [ ] "],[1,64,"* [ ] "],[1,84,"* [ ] "],[1,104,"* [ ] "],[1,115,"* [ ] "],[1,127,"* [ ] "],[1,139,"* [ ] "],[1,151,"* [ ] "],[1,163,"* [ ] "],[1,176,"* [ ] "],[1,189,"* [ ] "],[1,202,"* [ ] "],[1,215,"* [ ] "],[1,229,"* [ ] "],[1,243,"* [ ] "],[1,257,"* [ ] "],[1,271,"* [ ] "],[1,285,"* [ ] "],[1,299,"* [ ] "],[1,314,"* [ ] "],[1,329,"* [ ] "],[1,343,"* [ ] "],[1,358,"* [ ] "],[1,373,"* [ ] "],[1,388,"* [ ] "],[1,403,"* [ ] "],[1,418,"* [ ] "],[1,433,"* [ ] "],[1,447,"* [ ] "],[1,464,"* [ ] "],[1,482,"* [ ] "],[1,500,"* [ ] "],[1,518,"* [ ] "],[1,531,"* [ ] "],[1,546,"* [ ] "],[1,562,"* [ ] "],[1,590,"* [ ] "],[1,611,"* [ ] "],[1,621,"* [ ] "],[1,637,"* [ ] "],[1,654,"* [ ] "],[1,667,"* [ ] "],[1,681,"* [ ] "],[1,699,"* [ ] "],[1,715,"* [ ] "],[1,736,"* [ ] "],[1,751,"* [ ] "],[1,770,"* [ ] "],[1,792,"* [ ] "],[1,806,"* [ ] "],[1,821,"* [ ] "],[1,841,"* [ ] "],[1,858,"* [ ] "],[1,876,"* [ ] "],[1,898,"* [ ] "],[1,919,"* [ ] "],[1,952,"* [ ] "],[1,974,"* [ ] "],[1,997,"* [ ] "],[1,1019,"* [ ] "],[1,1041,"* [ ] "],[1,1065,"* [ ] "],[1,1088,"* [ ] "],[1,1110,"* [ ] "],[1,1124,"* [ ] "],[1,1138,"* [ ] "],[1,1158,"* [ ] "],[1,1172,"* [ ] "],[1,1192,"* [ ] "],[1,1217,"* [ ] "],[1,1233,"* [ ] "],[1,1248,"* [ ] "],[1,1272,"* [ ] "],[1,1297,"* [ ] "],[1,1312,"* [ ] "],[1,1332,"* [ ] "],[1,1358,"* [ ] "],[1,1378,"* [ ] "],[1,1402,"* [ ] "],[1,1427,"* [ ] "],[1,1446,"* [ ] "],[1,1466,"* [ ] "],[1,1485,"* [ ] "],[1,1504,"* [ ] "],[1,1524,"* [ ] "],[1,1538,"* [ ] "],[1,1552,"* [ ] "],[1,1566,"* [ ] "],[1,1581,"* [ ] "],[1,1595,"* [ ] "],[1,1608,"* [ ] "],[1,1626,"* [ ] "],[1,1646,"* [ ] "],[1,1666,"* [ ] "],[1,1680,"* [ ] "],[1,1697,"* [ ] "]],[16,1711],[22,2299]]],[1556459063028,["GJX@GJXAIOU",[[-1,19," "],[1,20,"x"],[-1,42," "],[1,43,"x"],[-1,60," "],[1,61,"x"],[-1,85," "],[1,86,"x"],[-1,111," "],[1,112,"x"],[-1,137," "],[1,138,"x"],[-1,154," "],[1,155,"x"],[-1,172," "],[1,173,"x"],[-1,190," "],[1,191,"x"],[-1,208," "],[1,209,"x"],[-1,226," "],[1,227,"x"],[-1,245," "],[1,246,"x"],[-1,264," "],[1,265,"x"]],[16,279],[16,279]]],[1556459070595,["GJX@GJXAIOU",[[1,283,"x] \n* ["]],[279,279],[286,286]]],[1556459073815,["GJX@GJXAIOU",[[-1,280,"* [x] "]],[286,286],[280,280]]],[1556459081765,["GJX@GJXAIOU",[[1,280,"- 2019-4-28"]],[280,280],[291,291]]],[1556459087046,["GJX@GJXAIOU",[[-1,280,"- "]],[282,282],[280,280]]],[1556459162055,["GJX@GJXAIOU",[[1,14,"视频链接：[https://www.bilibili.com/video/av2975983?from=search&seid=4813369182979433866](https://www.bilibili.com/video/av2975983?from=search&seid=4813369182979433866)"]],[14,14],[177,177]]],[1556459166607,["GJX@GJXAIOU",[[1,179,"\n"]],[177,177],[178,178]]],[1556459171585,["GJX@GJXAIOU",[[1,178,"课程名称："]],[178,178],[183,183]]],[1556459185198,["GJX@GJXAIOU",[[1,183,"数据结构与算法-小甲鱼"]],[183,183],[194,194]]]],null,"GJX@GJXAIOU"],["a4c367f3-7763-494a-a384-ffa97ad6d4c3",1556544915403,"# Lorem ipsum\n视频链接：[https://www.bilibili.com/video/av2975983?from=search&seid=4813369182979433866](https://www.bilibili.com/video/av2975983?from=search&seid=4813369182979433866)\n课程名称：数据结构与算法-小甲鱼\n\n* [x] 001第一讲 数据结构和算法绪论\n* [x] 002第二讲 谈谈算法\n* [x] 003第三讲 时间复杂度和空间复杂度\n* [x] 004第四讲 时间复杂度和空间复杂度2\n* [x] 005第五讲 时间复杂度和空间复杂度3\n* [x] 006第六讲 线性表\n* [x] 007第七讲 线性表2\n* [x] 008第八讲 线性表3\n* [x] 009第九讲 线性表4\n* [x] 010第十讲 线性表5\n* [x] 011第十一讲 线性表6\n* [x] 012第十二讲 线性表7\n* [x] 013第十三讲 线性表8\n2019-4-28\n* [ ] 014第十四讲 线性表9\n* [ ] 015第十五讲 线性表10\n* [ ] 016第十六讲 线性表11\n* [ ] 017第十七讲 线性表12\n* [ ] 018第十八讲 线性表13\n* [ ] 019第十九讲 线性表14\n* [ ] 020第二十讲 线性表15\n* [ ] 021第二十一讲 线性表16\n* [ ] 022第二十二讲 线性表17\n* [ ] 023第二十三讲 栈和队列\n* [ ] 024第二十四讲 栈和队列2\n* [ ] 025第二十五讲 栈和队列3\n* [ ] 026第二十六讲 栈和队列4\n* [ ] 027第二十七讲 栈和队列5\n* [ ] 028第二十八讲 栈和队列6\n* [ ] 029第二十九讲 栈和队列7\n* [ ] 030第三十讲 栈和队列8\n* [ ] 031第三十一讲 递归和分治思想\n* [ ] 032第三十二讲 递归和分治思想2\n* [ ] 033第三十三讲 递归和分治思想3\n* [ ] 034第三十四讲 递归和分治思想4\n* [ ] 035第三十五讲 字符串\n* [ ] 036第三十六讲 KMP算法\n* [ ] 037第三十七讲 KMP算法2\n* [ ] 038第三十八讲 KMP算法之NEXT数组代码原理分析\n* [ ] 039第三十九讲 KMP算法之实现及优化\n* [ ] 040第四十讲 树\n* [ ] 041第四十一讲 树的存储结构\n* [ ] 042第四十二讲 树的存储结构2\n* [ ] 043第四十三讲 二叉树\n* [ ] 044第四十四讲 二叉树2\n* [ ] 045第四十五讲 二叉树的存数结构\n* [ ] 046第四十六讲 二叉树的遍历\n* [ ] 047第四十七讲 二叉树的建立和遍历算法\n* [ ] 048第四十八讲 线索二叉树\n* [ ] 049第四十九讲 线索二叉树代码实现\n* [ ] 050第五十讲 树、森林及二叉树的相互转换\n* [ ] 051第五十一讲 赫夫曼树\n* [ ] 052第五十二讲 赫夫曼编码\n* [ ] 053第五十三讲 赫夫曼编码C语言实现\n* [ ] 054第五十四讲 图的定义与术语\n* [ ] 055第五十五讲 图的定义与术语2\n* [ ] 056第五十六讲 图的存储结构（邻接矩阵）\n* [ ] 057第五十七讲 图的存储结构（邻接表）\n* [ ] 058第五十八讲 图的存储结构（十字链表、邻接多重表、边集数组）\n* [ ] 059第五十九讲 图的遍历（深度优先遍历）\n* [ ] 060第六十讲 马踏棋盘算法（骑士周游问题）\n* [ ] 061第六十一讲 图的遍历（广度优先遍历）\n* [ ] 062第六十二讲 最小生成树（普里姆算法）\n* [ ] 063第六十三讲 最小生成树（克鲁斯卡尔算法）\n* [ ] 064第六十四讲 最短路径（迪杰斯特拉算法）\n* [ ] 065第六十五讲 最短路径（弗洛伊德算法）\n* [ ] 066第六十六讲 拓扑排序\n* [ ] 067第六十七讲 关键路径\n* [ ] 068第六十八讲 关键路径（代码讲解）\n* [ ] 069第六十九讲 查找算法\n* [ ] 070第七十讲 插值查找（按比例查找）\n* [ ] 071第七十一讲 斐波那契查找（黄金分割法查找）\n* [ ] 072第七十二讲 线性索引查找\n* [ ] 073第七十三讲 二叉排序树\n* [ ] 074第七十四讲 二叉排序树的查找、插入和删除\n* [ ] 075第七十五讲 二叉排序树的查找、插入和删除2\n* [ ] 076第七十六讲 平衡二叉树\n* [ ] 077第七十七讲 平衡二叉树的实现原理\n* [ ] 078第七十八讲 平衡二叉树的实现原理（代码实现）\n* [ ] 079第七十九讲 多路查找树之2-3树\n* [ ] 080第八十讲 多路查找树之2-3树的插入原理\n* [ ] 081第八十一讲 多路查找树之2-3树的删除原理\n* [ ] 082第八十二讲 2-3-4树和B树\n* [ ] 083第八十三讲 散列表（哈希表）查找\n* [ ] 084第八十四讲 散列函数的构造方法\n* [ ] 085第八十五讲 处理散列冲突的方法\n* [ ] 086第八十六讲 散列表查找的代码实现\n* [ ] 087第八十七讲 排序算法\n* [ ] 088第八十八讲 冒泡排序\n* [ ] 089第八十九讲 选择排序\n* [ ] 090第九十讲 直接插入排序\n* [ ] 091第九十一讲 希尔排序\n* [ ] 092第九十二讲 堆排序\n* [ ] 093第九十三讲 堆排序的代码实现\n* [ ] 094第九十四讲 归并排序（递归实现）\n* [ ] 095第九十五讲 归并排序（迭代实现）\n* [ ] 096第九十六讲 快速排序\n* [ ] 097第九十七讲 快速排序的优化\n* [ ] 098第九十八讲 总结回顾\n\n\n",[[1556544857583,["GJX@GJXAIOU",[[-1,473," "],[1,474,"x"],[-1,492," "],[1,493,"x"],[-1,512," "],[1,513,"x"],[-1,532," "],[1,533,"x"],[-1,552," "],[1,553,"x"],[-1,572," "],[1,573,"x"]],[473,588],[473,588]]],[1556544861717,["GJX@GJXAIOU",[[1,592,"x] \n* ["]],[588,588],[595,595]]],[1556544864797,["GJX@GJXAIOU",[[-1,589,"* [x] "]],[595,595],[589,589]]],[1556544869326,["GJX@GJXAIOU",[[1,589,"2019-4-29"]],[589,589],[598,598]]]],null,"GJX@GJXAIOU"],["d4eb6577-060a-496b-9c63-e5cd13844a65",1557052475104,"# Lorem ipsum\n视频链接：[https://www.bilibili.com/video/av2975983?from=search&seid=4813369182979433866](https://www.bilibili.com/video/av2975983?from=search&seid=4813369182979433866)\n课程名称：数据结构与算法-小甲鱼\n\n* [x] 001第一讲 数据结构和算法绪论\n* [x] 002第二讲 谈谈算法\n* [x] 003第三讲 时间复杂度和空间复杂度\n* [x] 004第四讲 时间复杂度和空间复杂度2\n* [x] 005第五讲 时间复杂度和空间复杂度3\n* [x] 006第六讲 线性表\n* [x] 007第七讲 线性表2\n* [x] 008第八讲 线性表3\n* [x] 009第九讲 线性表4\n* [x] 010第十讲 线性表5\n* [x] 011第十一讲 线性表6\n* [x] 012第十二讲 线性表7\n* [x] 013第十三讲 线性表8\n2019-4-28\n* [x] 014第十四讲 线性表9\n* [x] 015第十五讲 线性表10\n* [x] 016第十六讲 线性表11\n* [x] 017第十七讲 线性表12\n* [x] 018第十八讲 线性表13\n* [x] 019第十九讲 线性表14\n2019-4-29\n* [ ] 020第二十讲 线性表15\n* [ ] 021第二十一讲 线性表16\n* [ ] 022第二十二讲 线性表17\n* [ ] 023第二十三讲 栈和队列\n* [ ] 024第二十四讲 栈和队列2\n* [ ] 025第二十五讲 栈和队列3\n* [ ] 026第二十六讲 栈和队列4\n* [ ] 027第二十七讲 栈和队列5\n* [ ] 028第二十八讲 栈和队列6\n* [ ] 029第二十九讲 栈和队列7\n* [ ] 030第三十讲 栈和队列8\n* [ ] 031第三十一讲 递归和分治思想\n* [ ] 032第三十二讲 递归和分治思想2\n* [ ] 033第三十三讲 递归和分治思想3\n* [ ] 034第三十四讲 递归和分治思想4\n* [ ] 035第三十五讲 字符串\n* [ ] 036第三十六讲 KMP算法\n* [ ] 037第三十七讲 KMP算法2\n* [ ] 038第三十八讲 KMP算法之NEXT数组代码原理分析\n* [ ] 039第三十九讲 KMP算法之实现及优化\n* [ ] 040第四十讲 树\n* [ ] 041第四十一讲 树的存储结构\n* [ ] 042第四十二讲 树的存储结构2\n* [ ] 043第四十三讲 二叉树\n* [ ] 044第四十四讲 二叉树2\n* [ ] 045第四十五讲 二叉树的存数结构\n* [ ] 046第四十六讲 二叉树的遍历\n* [ ] 047第四十七讲 二叉树的建立和遍历算法\n* [ ] 048第四十八讲 线索二叉树\n* [ ] 049第四十九讲 线索二叉树代码实现\n* [ ] 050第五十讲 树、森林及二叉树的相互转换\n* [ ] 051第五十一讲 赫夫曼树\n* [ ] 052第五十二讲 赫夫曼编码\n* [ ] 053第五十三讲 赫夫曼编码C语言实现\n* [ ] 054第五十四讲 图的定义与术语\n* [ ] 055第五十五讲 图的定义与术语2\n* [ ] 056第五十六讲 图的存储结构（邻接矩阵）\n* [ ] 057第五十七讲 图的存储结构（邻接表）\n* [ ] 058第五十八讲 图的存储结构（十字链表、邻接多重表、边集数组）\n* [ ] 059第五十九讲 图的遍历（深度优先遍历）\n* [ ] 060第六十讲 马踏棋盘算法（骑士周游问题）\n* [ ] 061第六十一讲 图的遍历（广度优先遍历）\n* [ ] 062第六十二讲 最小生成树（普里姆算法）\n* [ ] 063第六十三讲 最小生成树（克鲁斯卡尔算法）\n* [ ] 064第六十四讲 最短路径（迪杰斯特拉算法）\n* [ ] 065第六十五讲 最短路径（弗洛伊德算法）\n* [ ] 066第六十六讲 拓扑排序\n* [ ] 067第六十七讲 关键路径\n* [ ] 068第六十八讲 关键路径（代码讲解）\n* [ ] 069第六十九讲 查找算法\n* [ ] 070第七十讲 插值查找（按比例查找）\n* [ ] 071第七十一讲 斐波那契查找（黄金分割法查找）\n* [ ] 072第七十二讲 线性索引查找\n* [ ] 073第七十三讲 二叉排序树\n* [ ] 074第七十四讲 二叉排序树的查找、插入和删除\n* [ ] 075第七十五讲 二叉排序树的查找、插入和删除2\n* [ ] 076第七十六讲 平衡二叉树\n* [ ] 077第七十七讲 平衡二叉树的实现原理\n* [ ] 078第七十八讲 平衡二叉树的实现原理（代码实现）\n* [ ] 079第七十九讲 多路查找树之2-3树\n* [ ] 080第八十讲 多路查找树之2-3树的插入原理\n* [ ] 081第八十一讲 多路查找树之2-3树的删除原理\n* [ ] 082第八十二讲 2-3-4树和B树\n* [ ] 083第八十三讲 散列表（哈希表）查找\n* [ ] 084第八十四讲 散列函数的构造方法\n* [ ] 085第八十五讲 处理散列冲突的方法\n* [ ] 086第八十六讲 散列表查找的代码实现\n* [ ] 087第八十七讲 排序算法\n* [ ] 088第八十八讲 冒泡排序\n* [ ] 089第八十九讲 选择排序\n* [ ] 090第九十讲 直接插入排序\n* [ ] 091第九十一讲 希尔排序\n* [ ] 092第九十二讲 堆排序\n* [ ] 093第九十三讲 堆排序的代码实现\n* [ ] 094第九十四讲 归并排序（递归实现）\n* [ ] 095第九十五讲 归并排序（迭代实现）\n* [ ] 096第九十六讲 快速排序\n* [ ] 097第九十七讲 快速排序的优化\n* [ ] 098第九十八讲 总结回顾\n\n\n",[[1557052435491,["GJX@GJXAIOU",[[-1,602," "],[1,603,"x"],[-1,622," "],[1,623,"x"],[-1,643," "],[1,644,"x"],[-1,664," "],[1,665,"x"],[-1,684," "],[1,685,"x"]],[601,701],[601,701]]],[1557052438700,["GJX@GJXAIOU",[[1,705,"x] \n* ["]],[701,701],[708,708]]],[1557052440941,["GJX@GJXAIOU",[[-1,702,"* [x] "]],[708,708],[702,702]]],[1557052447406,["GJX@GJXAIOU",[[1,702,"2019-5-5"]],[702,702],[710,710]]]],null,"GJX@GJXAIOU"],["6b0ec6b6-3a57-4fad-9b46-68421dd82fec",1563447612914,"# Lorem ipsum\n视频链接：[https://www.bilibili.com/video/av2975983?from=search&seid=4813369182979433866](https://www.bilibili.com/video/av2975983?from=search&seid=4813369182979433866)\n课程名称：数据结构与算法-小甲鱼\n\n* [x] 001第一讲 数据结构和算法绪论\n* [x] 002第二讲 谈谈算法\n* [x] 003第三讲 时间复杂度和空间复杂度\n* [x] 004第四讲 时间复杂度和空间复杂度2\n* [x] 005第五讲 时间复杂度和空间复杂度3\n* [x] 006第六讲 线性表\n* [x] 007第七讲 线性表2\n* [x] 008第八讲 线性表3\n* [x] 009第九讲 线性表4\n* [x] 010第十讲 线性表5\n* [x] 011第十一讲 线性表6\n* [x] 012第十二讲 线性表7\n* [x] 013第十三讲 线性表8\n2019-4-28\n* [x] 014第十四讲 线性表9\n* [x] 015第十五讲 线性表10\n* [x] 016第十六讲 线性表11\n* [x] 017第十七讲 线性表12\n* [x] 018第十八讲 线性表13\n* [x] 019第十九讲 线性表14\n2019-4-29\n* [x] 020第二十讲 线性表15\n* [x] 021第二十一讲 线性表16\n* [x] 022第二十二讲 线性表17\n* [x] 023第二十三讲 栈和队列\n* [x] 024第二十四讲 栈和队列2\n2019-5-5\n* [ ] 025第二十五讲 栈和队列3\n* [ ] 026第二十六讲 栈和队列4\n* [ ] 027第二十七讲 栈和队列5\n* [ ] 028第二十八讲 栈和队列6\n* [ ] 029第二十九讲 栈和队列7\n* [ ] 030第三十讲 栈和队列8\n* [ ] 031第三十一讲 递归和分治思想\n* [ ] 032第三十二讲 递归和分治思想2\n* [ ] 033第三十三讲 递归和分治思想3\n* [ ] 034第三十四讲 递归和分治思想4\n* [ ] 035第三十五讲 字符串\n* [ ] 036第三十六讲 KMP算法\n* [ ] 037第三十七讲 KMP算法2\n* [ ] 038第三十八讲 KMP算法之NEXT数组代码原理分析\n* [ ] 039第三十九讲 KMP算法之实现及优化\n* [ ] 040第四十讲 树\n* [ ] 041第四十一讲 树的存储结构\n* [ ] 042第四十二讲 树的存储结构2\n* [ ] 043第四十三讲 二叉树\n* [ ] 044第四十四讲 二叉树2\n* [ ] 045第四十五讲 二叉树的存数结构\n* [ ] 046第四十六讲 二叉树的遍历\n* [ ] 047第四十七讲 二叉树的建立和遍历算法\n* [ ] 048第四十八讲 线索二叉树\n* [ ] 049第四十九讲 线索二叉树代码实现\n* [ ] 050第五十讲 树、森林及二叉树的相互转换\n* [ ] 051第五十一讲 赫夫曼树\n* [ ] 052第五十二讲 赫夫曼编码\n* [ ] 053第五十三讲 赫夫曼编码C语言实现\n* [ ] 054第五十四讲 图的定义与术语\n* [ ] 055第五十五讲 图的定义与术语2\n* [ ] 056第五十六讲 图的存储结构（邻接矩阵）\n* [ ] 057第五十七讲 图的存储结构（邻接表）\n* [ ] 058第五十八讲 图的存储结构（十字链表、邻接多重表、边集数组）\n* [ ] 059第五十九讲 图的遍历（深度优先遍历）\n* [ ] 060第六十讲 马踏棋盘算法（骑士周游问题）\n* [ ] 061第六十一讲 图的遍历（广度优先遍历）\n* [ ] 062第六十二讲 最小生成树（普里姆算法）\n* [ ] 063第六十三讲 最小生成树（克鲁斯卡尔算法）\n* [ ] 064第六十四讲 最短路径（迪杰斯特拉算法）\n* [ ] 065第六十五讲 最短路径（弗洛伊德算法）\n* [ ] 066第六十六讲 拓扑排序\n* [ ] 067第六十七讲 关键路径\n* [ ] 068第六十八讲 关键路径（代码讲解）\n* [ ] 069第六十九讲 查找算法\n* [ ] 070第七十讲 插值查找（按比例查找）\n* [ ] 071第七十一讲 斐波那契查找（黄金分割法查找）\n* [ ] 072第七十二讲 线性索引查找\n* [ ] 073第七十三讲 二叉排序树\n* [ ] 074第七十四讲 二叉排序树的查找、插入和删除\n* [ ] 075第七十五讲 二叉排序树的查找、插入和删除2\n* [ ] 076第七十六讲 平衡二叉树\n* [ ] 077第七十七讲 平衡二叉树的实现原理\n* [ ] 078第七十八讲 平衡二叉树的实现原理（代码实现）\n* [ ] 079第七十九讲 多路查找树之2-3树\n* [ ] 080第八十讲 多路查找树之2-3树的插入原理\n* [ ] 081第八十一讲 多路查找树之2-3树的删除原理\n* [ ] 082第八十二讲 2-3-4树和B树\n* [ ] 083第八十三讲 散列表（哈希表）查找\n* [ ] 084第八十四讲 散列函数的构造方法\n* [ ] 085第八十五讲 处理散列冲突的方法\n* [ ] 086第八十六讲 散列表查找的代码实现\n* [ ] 087第八十七讲 排序算法\n* [ ] 088第八十八讲 冒泡排序\n* [ ] 089第八十九讲 选择排序\n* [ ] 090第九十讲 直接插入排序\n* [ ] 091第九十一讲 希尔排序\n* [ ] 092第九十二讲 堆排序\n* [ ] 093第九十三讲 堆排序的代码实现\n* [ ] 094第九十四讲 归并排序（递归实现）\n* [ ] 095第九十五讲 归并排序（迭代实现）\n* [ ] 096第九十六讲 快速排序\n* [ ] 097第九十七讲 快速排序的优化\n* [ ] 098第九十八讲 总结回顾\n\n\n",[[1563447612855,["GJX@GJXAIOU",[[1,0,"---\npin: true\n---\n"]],[0,0],[18,18]]]],null,"GJX@GJXAIOU"]]}