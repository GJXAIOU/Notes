{"compress":true,"commitItems":[["b68c906e-bba9-40ae-82e1-915d9a5e4e2d",1566568736002,"",[[1566568683408,["GJX@GJXAIOU",[[1,0,"# Maven基础\n\n\n\n"]],[0,0],[12,12]]],[1566568706776,["GJX@GJXAIOU",[[1,13,"\n"]],[11,11],[12,12]]],[1566568706894,["GJX@GJXAIOU",[[1,14,"\n"]],[12,12],[13,13]]],[1566568707395,["GJX@GJXAIOU",[[1,15,"\n"]],[13,13],[14,14]]],[1566568707429,["GJX@GJXAIOU",[[1,16,"\n"]],[14,14],[15,15]]],[1566568707461,["GJX@GJXAIOU",[[1,17,"\n"]],[15,15],[16,16]]],[1566568707493,["GJX@GJXAIOU",[[1,18,"\n"]],[16,16],[17,17]]],[1566568707529,["GJX@GJXAIOU",[[1,19,"\n"]],[17,17],[18,18]]],[1566568707560,["GJX@GJXAIOU",[[1,20,"\n"]],[18,18],[19,19]]],[1566568707593,["GJX@GJXAIOU",[[1,21,"\n"]],[19,19],[20,20]]],[1566568707626,["GJX@GJXAIOU",[[1,22,"\n"]],[20,20],[21,21]]],[1566568707658,["GJX@GJXAIOU",[[1,23,"\n"]],[21,21],[22,22]]],[1566568707691,["GJX@GJXAIOU",[[1,24,"\n"]],[22,22],[23,23]]],[1566568707725,["GJX@GJXAIOU",[[1,25,"\n"]],[23,23],[24,24]]],[1566568707758,["GJX@GJXAIOU",[[1,26,"\n"]],[24,24],[25,25]]],[1566568707791,["GJX@GJXAIOU",[[1,27,"\n"]],[25,25],[26,26]]],[1566568707827,["GJX@GJXAIOU",[[1,28,"\n"]],[26,26],[27,27]]],[1566568707858,["GJX@GJXAIOU",[[1,29,"\n"]],[27,27],[28,28]]],[1566568707893,["GJX@GJXAIOU",[[1,30,"\n"]],[28,28],[29,29]]],[1566568707922,["GJX@GJXAIOU",[[1,31,"\n"]],[29,29],[30,30]]],[1566568707956,["GJX@GJXAIOU",[[1,32,"\n"]],[30,30],[31,31]]],[1566568707989,["GJX@GJXAIOU",[[1,33,"\n"]],[31,31],[32,32]]],[1566568708023,["GJX@GJXAIOU",[[1,34,"\n"]],[32,32],[33,33]]],[1566568708055,["GJX@GJXAIOU",[[1,35,"\n"]],[33,33],[34,34]]],[1566568708088,["GJX@GJXAIOU",[[1,36,"\n"]],[34,34],[35,35]]],[1566568708121,["GJX@GJXAIOU",[[1,37,"\n"]],[35,35],[36,36]]],[1566568708155,["GJX@GJXAIOU",[[1,38,"\n"]],[36,36],[37,37]]],[1566568708187,["GJX@GJXAIOU",[[1,39,"\n"]],[37,37],[38,38]]],[1566568708219,["GJX@GJXAIOU",[[1,40,"\n"]],[38,38],[39,39]]],[1566568708253,["GJX@GJXAIOU",[[1,41,"\n"]],[39,39],[40,40]]],[1566568708288,["GJX@GJXAIOU",[[1,42,"\n"]],[40,40],[41,41]]],[1566568708321,["GJX@GJXAIOU",[[1,43,"\n"]],[41,41],[42,42]]],[1566568708352,["GJX@GJXAIOU",[[1,44,"\n"]],[42,42],[43,43]]],[1566568708385,["GJX@GJXAIOU",[[1,45,"\n"]],[43,43],[44,44]]],[1566568708419,["GJX@GJXAIOU",[[1,46,"\n"]],[44,44],[45,45]]],[1566568729584,["GJX@GJXAIOU",[[1,11,"- Maven是一个"]],[11,11],[21,21]]],[1566568729608,["GJX@GJXAIOU",[[1,18," "]],[21,21],[22,22]]],[1566568735934,["GJX@GJXAIOU",[[1,22,"自动化"]],[22,22],[25,25]]],[1566568746363,["GJX@GJXAIOU",[[1,25,"的构建工具，服务于Java"]],[25,25],[38,38]]],[1566568746385,["GJX@GJXAIOU",[[1,34," "]],[38,38],[39,39]]],[1566568748182,["GJX@GJXAIOU",[[1,39,"平台"]],[39,39],[41,41]]],[1566568748204,["GJX@GJXAIOU",[[1,39," "]],[41,41],[42,42]]],[1566568753925,["GJX@GJXAIOU",[[1,42,"的项目构建和jar"]],[42,42],[51,51]]],[1566568753947,["GJX@GJXAIOU",[[1,48," "]],[51,51],[52,52]]],[1566568754987,["GJX@GJXAIOU",[[1,52,"包"]],[52,52],[53,53]]],[1566568755009,["GJX@GJXAIOU",[[1,52," "]],[53,53],[54,54]]],[1566568758859,["GJX@GJXAIOU",[[1,54,"依赖管理；"]],[54,54],[59,59]]],[1566568762272,["GJX@GJXAIOU",[[1,60,"- \n"]],[59,59],[62,62]]],[1566568794777,["GJX@GJXAIOU",[[1,62,"并不是一个框架，用于帮助开发者管理框架所需的jar"]],[62,62],[87,87]]],[1566568794800,["GJX@GJXAIOU",[[1,84," "]],[87,87],[88,88]]],[1566568795403,["GJX@GJXAIOU",[[1,88,"包"]],[88,88],[89,89]]],[1566568795425,["GJX@GJXAIOU",[[1,88," "]],[89,89],[90,90]]],[1566568795797,["GJX@GJXAIOU",[[1,90,"；"]],[90,90],[91,91]]],[1566568796312,["GJX@GJXAIOU",[[1,92,"- \n"]],[91,91],[94,94]]],[1566568828305,["GJX@GJXAIOU",[[1,97,"### 作用"]],[97,97],[103,103]]],[1566568828646,["GJX@GJXAIOU",[[1,136,"\n"]],[103,103],[104,104]]],[1566568831670,["GJX@GJXAIOU",[[1,104,"- 天剑"]],[104,104],[108,108]]],[1566568832599,["GJX@GJXAIOU",[[-1,106,"天剑"]],[108,108],[106,106]]],[1566568840512,["GJX@GJXAIOU",[[1,106,"添加第三方j"]],[106,106],[112,112]]],[1566568840536,["GJX@GJXAIOU",[[1,111," "]],[112,112],[113,113]]],[1566568842489,["GJX@GJXAIOU",[[1,113,"ar包"]],[113,113],[116,116]]],[1566568842514,["GJX@GJXAIOU",[[1,115," "]],[116,116],[117,117]]],[1566568843250,["GJX@GJXAIOU",[[1,117,"；"]],[117,117],[118,118]]],[1566568882310,["GJX@GJXAIOU",[[1,119,"而使用 Maven后每个ar包本身只在本地仓库中保存一份,需要jar包的工程\n\n只需要以坐标的方式简单的引用一下就可以了。不仅极大的节约了存储空\n\n间,让项目更轻巧,更避免了重复文件太多而造成的混乱。"]],[119,119],[219,219]]],[1566568884625,["GJX@GJXAIOU",[[-1,158,"\n"]],[159,159],[158,158]]],[1566568884985,["GJX@GJXAIOU",[[-1,157,"\n"]],[158,158],[157,157]]],[1566568887487,["GJX@GJXAIOU",[[-1,190,"\n"]],[191,191],[190,190]]],[1566568887703,["GJX@GJXAIOU",[[-1,189,"\n"]],[190,190],[189,189]]],[1566568889938,["GJX@GJXAIOU",[[-1,211,"的"]],[212,212],[211,211]]],[1566568891775,["GJX@GJXAIOU",[[-1,167,"单"]],[168,168],[167,167]]],[1566568894379,["GJX@GJXAIOU",[[1,167,"单"]],[167,167],[168,168]]],[1566568897207,["GJX@GJXAIOU",[[1,246,"\n"]],[214,214],[215,215]]],[1566568911924,["GJX@GJXAIOU",[[1,216,"- jar包"]],[216,216],[222,222]]],[1566568911946,["GJX@GJXAIOU",[[1,221," "]],[222,222],[223,223]]],[1566568915160,["GJX@GJXAIOU",[[1,223,"之间的依赖"]],[223,223],[228,228]]],[1566568917817,["GJX@GJXAIOU",[[1,228,"关系；"]],[228,228],[231,231]]],[1566568918168,["GJX@GJXAIOU",[[1,232,"- \n"]],[231,231],[234,234]]],[1566568919320,["GJX@GJXAIOU",[[-1,232,"- "]],[234,234],[232,232]]],[1566568935208,["GJX@GJXAIOU",[[1,232,"而引入 Maven后, Maven就可以替我们自动的将当前jar包所依赖的其他所\n\n有jar包全部导入进来,无需人工参与,节约了我们大量的时间和精力。用\n\n实际例子来说明就是:通过 Maven导入 commons-fileupload-13a后\n\ncommons-o-2.01ar会被自动导入,程序员不必了解这个依赖关系。"]],[232,232],[393,393]]],[1566568937223,["GJX@GJXAIOU",[[-1,273,"\n"]],[274,274],[273,273]]],[1566568937657,["GJX@GJXAIOU",[[-1,272,"\n"]],[273,273],[272,272]]],[1566568941056,["GJX@GJXAIOU",[[-1,307,"\n"]],[308,308],[307,307]]],[1566568941368,["GJX@GJXAIOU",[[-1,306,"\n"]],[307,307],[306,306]]],[1566568943784,["GJX@GJXAIOU",[[-1,351,"\n"]],[352,352],[351,351]]],[1566568944111,["GJX@GJXAIOU",[[-1,350,"\n"]],[351,351],[350,350]]],[1566568949056,["GJX@GJXAIOU",[[1,347,"。"]],[347,347],[348,348]]],[1566568949448,["GJX@GJXAIOU",[[-1,347,"。"]],[348,348],[347,347]]],[1566568950105,["GJX@GJXAIOU",[[1,347,"."]],[347,347],[348,348]]],[1566568952250,["GJX@GJXAIOU",[[-1,349,"a"]],[350,350],[349,349]]],[1566568955976,["GJX@GJXAIOU",[[1,358,"i"]],[358,358],[359,359]]],[1566568961135,["GJX@GJXAIOU",[[-1,365,"ar"]],[367,367],[365,365]]],[1566568962200,["GJX@GJXAIOU",[[1,365," j "]],[365,365],[367,367]]],[1566568962626,["GJX@GJXAIOU",[[1,367,"ar"]],[367,367],[369,369]]],[1566568967126,["GJX@GJXAIOU",[[1,422,"\n"]],[391,391],[392,392]]],[1566568968679,["GJX@GJXAIOU",[[1,423,"\n"]],[392,392],[393,393]]],[1566568987136,["GJX@GJXAIOU",[[1,393,"- huo"]],[393,393],[398,398]]],[1566568987616,["GJX@GJXAIOU",[[-1,395,"huo"]],[398,398],[395,395]]],[1566568993171,["GJX@GJXAIOU",[[1,395,"获取第三方Jar"]],[395,395],[403,403]]],[1566568993195,["GJX@GJXAIOU",[[1,400," "]],[403,403],[404,404]]],[1566568994812,["GJX@GJXAIOU",[[1,404,"包"]],[404,404],[405,405]]],[1566568994835,["GJX@GJXAIOU",[[1,404," "]],[405,405],[406,406]]],[1566568998800,["GJX@GJXAIOU",[[1,406,"；-"]],[406,406],[408,408]]],[1566568999439,["GJX@GJXAIOU",[[-1,407,"-"]],[408,408],[407,407]]],[1566568999969,["GJX@GJXAIOU",[[1,408,"- \n"]],[407,407],[410,410]]],[1566569000432,["GJX@GJXAIOU",[[-1,408,"- "]],[410,410],[408,408]]],[1566569006642,["GJX@GJXAIOU",[[1,408,"从中央仓库可以获取；"]],[408,408],[418,418]]],[1566569035688,["GJX@GJXAIOU",[[1,421,"### Maven约点"]],[421,421],[432,432]]],[1566569035712,["GJX@GJXAIOU",[[1,430," "]],[432,432],[433,433]]],[1566569036791,["GJX@GJXAIOU",[[-1,431,"约点"]],[433,433],[431,431]]],[1566569041327,["GJX@GJXAIOU",[[1,431,"约定的目录界都"]],[431,431],[438,438]]],[1566569041911,["GJX@GJXAIOU",[[-1,436,"界都"]],[438,438],[436,436]]],[1566569044962,["GJX@GJXAIOU",[[1,436,"结构"]],[436,436],[438,438]]],[1566569045217,["GJX@GJXAIOU",[[1,466,"\n"]],[438,438],[439,439]]],[1566569081404,["GJX@GJXAIOU",[[1,440,"![Maven约定的结构]($resource/Maven%E7%BA%A6%E5%AE%9A%E7%9A%84%E7%BB%93%E6%9E%84.png)"]],[440,440],[520,520]]],[1566569422069,["GJX@GJXAIOU",[[1,522,"****"]],[522,522],[524,524]]],[1566569428337,["GJX@GJXAIOU",[[1,524,"设置"]],[524,524],[526,526]]],[1566569429630,["GJX@GJXAIOU",[[1,552,"\n"]],[528,528],[529,529]]],[1566569431336,["GJX@GJXAIOU",[[1,529,"- "]],[529,529],[531,531]]],[1566569480778,["GJX@GJXAIOU",[[1,531,"groupid :一般为公司域名"]],[531,531],[547,547]]],[1566569481143,["GJX@GJXAIOU",[[1,548,"- \n"]],[547,547],[550,550]]],[1566569501210,["GJX@GJXAIOU",[[1,550,"artifactid:项目名称"]],[550,550],[565,565]]],[1566569502674,["GJX@GJXAIOU",[[1,566,"- \n"]],[565,565],[568,568]]],[1566569509765,["GJX@GJXAIOU",[[1,568,"version:项目版本"]],[568,568],[580,580]]],[1566569510360,["GJX@GJXAIOU",[[1,581,"- \n"]],[580,580],[583,583]]],[1566569518566,["GJX@GJXAIOU",[[1,583,"package:创建"]],[583,583],[593,593]]],[1566569528157,["GJX@GJXAIOU",[[1,593,"项目默认的包名"]],[593,593],[600,600]]],[1566569529455,["GJX@GJXAIOU",[[1,601,"- \n"]],[600,600],[603,603]]],[1566569577848,["GJX@GJXAIOU",[[-1,601,"- "]],[601,603],[601,601]]],[1566569578857,["GJX@GJXAIOU",[[1,625,"\n"]],[601,601],[602,602]]],[1566569579003,["GJX@GJXAIOU",[[1,626,"\n"]],[602,602],[603,603]]],[1566569581965,["GJX@GJXAIOU",[[1,603,"### POM《"]],[603,603],[611,611]]],[1566569582679,["GJX@GJXAIOU",[[-1,610,"《"]],[611,611],[610,610]]],[1566569583267,["GJX@GJXAIOU",[[1,634,"\n"]],[610,610],[611,611]]],[1566569614193,["GJX@GJXAIOU",[[1,611,"Project Object Model:项目对象默认"]],[611,611],[638,638]]],[1566569614834,["GJX@GJXAIOU",[[-1,636,"默认"]],[638,638],[636,636]]],[1566569617244,["GJX@GJXAIOU",[[1,636,"模型"]],[636,636],[638,638]]],[1566569619120,["GJX@GJXAIOU",[[1,662,"\n"]],[638,638],[639,639]]],[1566569637913,["GJX@GJXAIOU",[[1,639,"将Java"]],[639,639],[644,644]]],[1566569637937,["GJX@GJXAIOU",[[1,640," "]],[644,644],[645,645]]],[1566569639277,["GJX@GJXAIOU",[[1,645,"工程"]],[645,645],[647,647]]],[1566569639302,["GJX@GJXAIOU",[[1,645," "]],[647,647],[648,648]]],[1566569675171,["GJX@GJXAIOU",[[1,648,"的相关信息封装为对象作为便于操作和管理的模型，是maven"]],[648,648],[677,677]]],[1566569675196,["GJX@GJXAIOU",[[1,672," "]],[677,677],[678,678]]],[1566569675711,["GJX@GJXAIOU",[[1,678,"de"]],[678,678],[680,680]]],[1566569679352,["GJX@GJXAIOU",[[-1,678,"de"]],[680,680],[678,678]]],[1566569680468,["GJX@GJXAIOU",[[1,678,"的"]],[678,678],[679,679]]],[1566569680492,["GJX@GJXAIOU",[[1,678," "]],[679,679],[680,680]]],[1566569698679,["GJX@GJXAIOU",[[1,681,"he"]],[681,681],[683,683]]],[1566569699255,["GJX@GJXAIOU",[[-1,681,"he"]],[683,683],[681,681]]],[1566569699678,["GJX@GJXAIOU",[[-1,703,"\n"]],[681,681],[680,680]]],[1566569712385,["GJX@GJXAIOU",[[1,680,"核心配置，"]],[680,680],[685,685]]],[1566569713791,["GJX@GJXAIOU",[[-1,684,"，"]],[685,685],[684,684]]],[1566569714209,["GJX@GJXAIOU",[[1,684,"；"]],[684,684],[685,685]]],[1566569714575,["GJX@GJXAIOU",[[1,708,"\n"]],[685,685],[686,686]]],[1566569719764,["GJX@GJXAIOU",[[1,686,"pom.xml文件"]],[686,686],[695,695]]],[1566569719787,["GJX@GJXAIOU",[[1,693," "]],[695,695],[696,696]]],[1566569729826,["GJX@GJXAIOU",[[1,696,"存在于项目的根节点下；"]],[696,696],[707,707]]],[1566569817207,["GJX@GJXAIOU",[[1,710,"### 依赖的范围"]],[710,710],[719,719]]],[1566569817577,["GJX@GJXAIOU",[[1,739,"\n"]],[719,719],[720,720]]],[1566569819299,["GJX@GJXAIOU",[[1,720,"依赖的范围有几个可选值,我们用得到的是: compile、test、 prcvided三\n\ncompile:编译依赖范围(默认),使用此依赖范围对于编译、测试、运行\n\n种 I classpath都有效,即在编译、测试和运行的时候都要使用该依赖jar包\n\nest:测试依赖范围,从字面意思就可以知道此依赖范囯只能用于测试\n\nclasspath,而在编译和运行项目时无法使用此类依赖,典型的是Jnit,它\n\n只用于编译测试代码和运行测试代码的时候才需要;\n\nprovided:此依赖范围,对于编译和测试 class path有效,而对运行时无效;\n\n( tomcat的b文件中的a包就是web项目的运行环境)"]],[720,720],[1022,1022]]],[1566569830432,["GJX@GJXAIOU",[[1,764,"个，"]],[764,764],[766,766]]],[1566569843288,["GJX@GJXAIOU",[[1,806,"三"]],[806,806],[807,807]]],[1566569844562,["GJX@GJXAIOU",[[-1,805,"\n"]],[806,806],[805,805]]],[1566569844985,["GJX@GJXAIOU",[[-1,804,"\n"]],[805,805],[804,804]]],[1566569852705,["GJX@GJXAIOU",[[-1,807,"I "]],[809,809],[807,807]]],[1566569856681,["GJX@GJXAIOU",[[1,846,"T"]],[846,846],[847,847]]],[1566569858231,["GJX@GJXAIOU",[[-1,845,"\n"]],[846,846],[845,845]]],[1566569860366,["GJX@GJXAIOU",[[-1,767,"\n"]],[767,767],[766,766]]],[1566569864518,["GJX@GJXAIOU",[[1,844,"\n"]],[844,844],[845,845]]],[1566569868271,["GJX@GJXAIOU",[[-1,879,"\n"]],[880,880],[879,879]]],[1566569868543,["GJX@GJXAIOU",[[-1,878,"\n"]],[879,879],[878,878]]],[1566569872140,["GJX@GJXAIOU",[[1,912,"u"]],[912,912],[913,913]]],[1566569876734,["GJX@GJXAIOU",[[-1,919,"\n"]],[920,920],[919,919]]],[1566569877646,["GJX@GJXAIOU",[[-1,918,"\n"]],[919,919],[918,918]]],[1566569885775,["GJX@GJXAIOU",[[-1,988,"\n"]],[989,989],[988,988]]],[1566569894462,["GJX@GJXAIOU",[[-1,971," "]],[972,972],[971,971]]],[1566569926976,["GJX@GJXAIOU",[[1,1019," |过程 | compile | test | provide"]],[1019,1019],[1050,1050]]],[1566569927767,["GJX@GJXAIOU",[[1,1051," \n"]],[1050,1050],[1052,1052]]],[1566569930361,["GJX@GJXAIOU",[[1,1052,"---|----"]],[1052,1052],[1060,1060]]],[1566569930959,["GJX@GJXAIOU",[[-1,1059,"-"]],[1060,1060],[1059,1059]]],[1566569933929,["GJX@GJXAIOU",[[1,1059,"|----|---"]],[1059,1059],[1068,1068]]],[1566569934641,["GJX@GJXAIOU",[[1,1069,"    |   |    |   \n"]],[1068,1068],[1069,1073]]],[1566569935544,["GJX@GJXAIOU",[[-1,1069,"    "],[1,1073,"z"]],[1069,1073],[1070,1070]]],[1566569935832,["GJX@GJXAIOU",[[1,1070,"hu"]],[1070,1070],[1072,1072]]],[1566569936953,["GJX@GJXAIOU",[[-1,1069,"zhu"]],[1072,1072],[1069,1069]]],[1566569939289,["GJX@GJXAIOU",[[1,1069,"主程序"]],[1069,1069],[1072,1072]]],[1566569942584,["GJX@GJXAIOU",[[-1,1073,"   "],[1,1076,"可以"]],[1073,1073],[1075,1075]]],[1566569956367,["GJX@GJXAIOU",[[1,1077,"否"]],[1077,1077],[1078,1078]]],[1566569959653,["GJX@GJXAIOU",[[-1,1082,"   "],[1,1085,"可以"]],[1082,1082],[1084,1084]]],[1566569959934,["GJX@GJXAIOU",[[1,1085,"    |   |    |   \n"]],[1084,1084],[1085,1089]]],[1566569962321,["GJX@GJXAIOU",[[-1,1085,"    "],[1,1089,"测试"]],[1085,1085],[1087,1087]]],[1566569963547,["GJX@GJXAIOU",[[1,1087,"程序"]],[1087,1087],[1089,1089]]],[1566569965306,["GJX@GJXAIOU",[[-1,1090,"   "],[1,1093,"可以"]],[1090,1090],[1092,1092]]],[1566569966995,["GJX@GJXAIOU",[[-1,1093,"    "],[1,1097,"可以"]],[1093,1093],[1095,1095]]],[1566569968603,["GJX@GJXAIOU",[[-1,1096,"   "],[1,1099,"可以"]],[1096,1096],[1098,1098]]],[1566569969319,["GJX@GJXAIOU",[[1,1099,"    |   |    |   \n"]],[1098,1098],[1099,1103]]],[1566569972019,["GJX@GJXAIOU",[[-1,1099,"    "],[1,1103,"参与"]],[1099,1099],[1101,1101]]],[1566569978120,["GJX@GJXAIOU",[[1,1101,"部署，运行阶段"]],[1101,1101],[1108,1108]]],[1566569979780,["GJX@GJXAIOU",[[-1,1109,"   "],[1,1112,"可以"]],[1109,1109],[1111,1111]]],[1566569981682,["GJX@GJXAIOU",[[-1,1112,"    "],[1,1116,"否"]],[1112,1112],[1113,1113]]],[1566569984891,["GJX@GJXAIOU",[[-1,1114,"   "],[1,1117,"否"]],[1114,1114],[1115,1115]]],[1566570012249,["GJX@GJXAIOU",[[1,1132,"\n"]],[1116,1116],[1117,1117]]],[1566570012383,["GJX@GJXAIOU",[[1,1133,"\n"]],[1117,1117],[1118,1118]]],[1566570016962,["GJX@GJXAIOU",[[1,1118,"### 依赖的传递性"]],[1118,1118],[1128,1128]]],[1566570017423,["GJX@GJXAIOU",[[1,1144,"\n"]],[1128,1128],[1129,1129]]],[1566570020512,["GJX@GJXAIOU",[[1,1129,"依赖B,B依赖C,A能否使用C呢?那要看B依赖C的范围是不是 compile\n\n如果是则可用,否则不可用。\n\n工程依赖范围\n\n对A的可见性\n\nB Compile\n\nD test\n\nE provided\n\n√文×"]],[1129,1129],[1234,1234]]],[1566570025393,["GJX@GJXAIOU",[[1,1129,"A "]],[1129,1129],[1130,1130]]],[1566570054464,["GJX@GJXAIOU",[[-1,1186,"工程依赖范围\n\n对A的可见性\n\nB Compile\n\nD test\n\nE provided\n\n√文×\n"]],[1185,1236],[1185,1185]]],[1566570057712,["GJX@GJXAIOU",[[-1,1170,"\n"]],[1171,1171],[1170,1170]]],[1566570058006,["GJX@GJXAIOU",[[-1,1169,"\n"]],[1170,1170],[1169,1169]]],[1566570059504,["GJX@GJXAIOU",[[1,1169,"，"]],[1169,1169],[1170,1170]]],[1566570089979,["GJX@GJXAIOU",[[1,1185,"![依赖的传递性]($resource/%E4%BE%9D%E8%B5%96%E7%9A%84%E4%BC%A0%E9%80%92%E6%80%A7.png)"]],[1185,1185],[1265,1265]]]],null,"GJX@GJXAIOU"],["9648a631-8bac-4931-89ba-64a79028ac45",1568728107938,"# Maven基础\n\n- Maven 是一个自动化的构建工具，服务于 Java 平台的项目构建和 jar 包依赖管理；\n- 并不是一个框架，用于帮助开发者管理框架所需的 jar 包；\n- \n\n\n### 作用\n- 添加第三方 jar 包；\n而使用 Maven后每个ar包本身只在本地仓库中保存一份,需要jar包的工程只需要以坐标的方式简单的引用一下就可以了。不仅极大的节约了存储空间,让项目更轻巧,更避免了重复文件太多而造成混乱。\n\n- jar 包之间的依赖关系；\n而引入 Maven后, Maven就可以替我们自动的将当前jar包所依赖的其他所有jar包全部导入进来,无需人工参与,节约了我们大量的时间和精力。用实际例子来说明就是:通过 Maven导入 commons-fileupload-1.3后commons-io-2.01 jar 会被自动导入,程序员不必了解这个依赖关系。\n\n- 获取第三方 Jar 包；\n从中央仓库可以获取；\n\n\n### Maven 约定的目录结构\n\n![Maven约定的结构]($resource/Maven%E7%BA%A6%E5%AE%9A%E7%9A%84%E7%BB%93%E6%9E%84.png)\n\n\n**设置**\n- groupid :一般为公司域名\n- artifactid:项目名称\n- version:项目版本\n- package:创建项目默认的包名\n\n\n### POM\nProject Object Model:项目对象模型\n将 Java 工程的相关信息封装为对象作为便于操作和管理的模型，是 maven 的核心配置；\npom.xml 文件存在于项目的根节点下；\n\n\n### 依赖的范围\n依赖的范围有几个可选值,我们用得到的是: compile、test、 prcvided三个，\ncompile:编译依赖范围(默认),使用此依赖范围对于编译、测试、运行三种 classpath都有效,即在编译、测试和运行的时候都要使用该依赖jar包\n\nTest:测试依赖范围,从字面意思就可以知道此依赖范囯只能用于测试classpath,而在编译和运行项目时无法使用此类依赖,典型的是Junit,它只用于编译测试代码和运行测试代码的时候才需要;\n\nprovided:此依赖范围,对于编译和测试 classpath有效,而对运行时无效;\n( tomcat的b文件中的a包就是web项目的运行环境)\n\n\n |过程 | compile | test | provide\n ---|---|----|---\n主程序|可以| 否   |可以\n测试程序|可以|可以|可以\n参与部署，运行阶段|可以|否|否\n\n\n### 依赖的传递性\nA 依赖B,B依赖C,A能否使用C呢?那要看B依赖C的范围是不是 compile，如果是则可用,否则不可用。\n\n![依赖的传递性]($resource/%E4%BE%9D%E8%B5%96%E7%9A%84%E4%BC%A0%E9%80%92%E6%80%A7.png)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",[[1568728075655,["GJX@GJXAIOU",[[1,720,"\n"]],[719,719],[720,720]]],[1568728075780,["GJX@GJXAIOU",[[1,721,"\n"]],[720,720],[721,721]]],[1568728078555,["GJX@GJXAIOU",[[1,721,"===="]],[721,721],[723,723]]],[1568728080111,["GJX@GJXAIOU",[[1,723,"嗨哟烦恼"]],[723,723],[727,727]]],[1568728081253,["GJX@GJXAIOU",[[-1,723,"嗨哟烦恼"]],[727,727],[723,723]]],[1568728086286,["GJX@GJXAIOU",[[1,723,"使用 <>"]],[723,723],[728,728]]],[1568728088671,["GJX@GJXAIOU",[[1,727,"scope"]],[727,727],[732,732]]],[1568728098193,["GJX@GJXAIOU",[[1,733,"显示 jar包"]],[733,733],[740,740]]],[1568728098218,["GJX@GJXAIOU",[[1,739," "]],[740,740],[741,741]]],[1568728102182,["GJX@GJXAIOU",[[1,741,"作用范围，"]],[741,741],[746,746]]],[1568728103444,["GJX@GJXAIOU",[[-1,745,"，"]],[746,746],[745,745]]],[1568728112741,["GJX@GJXAIOU",[[1,747,"，使用j"]],[747,747],[751,751]]],[1568728112766,["GJX@GJXAIOU",[[1,750," "]],[751,751],[752,752]]],[1568728123548,["GJX@GJXAIOU",[[1,752,"unit 使用，默认是在 test包"]],[752,752],[770,770]]],[1568728123574,["GJX@GJXAIOU",[[1,769," "]],[770,770],[771,771]]],[1568728135560,["GJX@GJXAIOU",[[1,771,"中使用，去掉限制就可以在其他地方是哟"]],[771,771],[789,789]]],[1568728136644,["GJX@GJXAIOU",[[-1,787,"是哟"]],[789,789],[787,787]]],[1568728139687,["GJX@GJXAIOU",[[1,787,"使用；"]],[787,787],[790,790]]]],null,"GJX@GJXAIOU"]]}