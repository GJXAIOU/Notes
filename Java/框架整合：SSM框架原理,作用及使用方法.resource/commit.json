{"compress":true,"commitItems":[["4ad2fd40-5404-4be1-b243-4bf237a4df9f",1570877942373,"# SSM框架原理,作用及使用方法\n\n2017-09-06 09:17:06 [bieleyang](https://me.csdn.net/bieleyang) 阅读数 201762更多\n\n分类专栏： [java框架](https://blog.csdn.net/bieleyang/article/category/7140253)\n\n[](http://creativecommons.org/licenses/by-sa/4.0/)版权声明：本文为博主原创文章，遵循[ CC 4.0 BY-SA ](http://creativecommons.org/licenses/by-sa/4.0/)版权协议，转载请附上原文出处链接和本声明。\n\n本文链接：[https://blog.csdn.net/bieleyang/article/details/77862042](https://blog.csdn.net/bieleyang/article/details/77862042) \n\n**作用**：\n\nSSM框架是spring MVC ，spring和mybatis框架的整合，是标准的MVC模式，将整个系统划分为表现层，controller层，service层，DAO层四层\n\n使用spring MVC负责请求的转发和视图管理\n\nspring实现业务对象管理，mybatis作为数据对象的持久化引擎\n\n**原理**：\n\nSpringMVC：\n\n1.客户端发送请求到DispacherServlet（分发器）\n\n2.由DispacherServlet控制器查询HanderMapping，找到处理请求的Controller\n\n3.Controller调用业务逻辑处理后，返回ModelAndView\n\n4.DispacherSerclet查询视图解析器，找到ModelAndView指定的视图\n\n5.视图负责将结果显示到客户端\n\n![](https://img-blog.csdn.net/20151118190949363?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)\n\nSpring：我们平时开发接触最多的估计就是IOC容器，它可以装载bean（也就是我们[Java](http://lib.csdn.net/base/java \"Java 知识库\")中的类，当然也包括service dao里面的），有了这个机制，我们就不用在每次使用这个类的时候为它初始化，很少看到关键字new。另外spring的aop，事务管理等等都是我们经常用到的。\n\nMybatis：mybatis是对jdbc的封装，它让数据库底层操作变的透明。mybatis的操作都是围绕一个sqlSessionFactory实例展开的。mybatis通过配置文件关联到各实体类的Mapper文件，Mapper文件中配置了每个类对数据库所需进行的sql语句映射。在每次与数据库交互时，通过sqlSessionFactory拿到一个sqlSession，再执行sql命令。\n\n**使用方法**：\n\n要完成一个功能：\n\n1.  先写实体类entity，定义对象的属性，（可以参照数据库中表的字段来设置，数据库的设计应该在所有编码开始之前）。\n2.  写Mapper.xml（Mybatis），其中定义你的功能，对应要对数据库进行的那些操作，比如 insert、selectAll、selectByKey、delete、update等。\n3.  写Mapper.java，将Mapper.xml中的操作按照id映射成Java函数。\n4.  写Service.java，为控制层提供服务，接受控制层的参数，完成相应的功能，并返回给控制层。\n5.  写Controller.java，连接页面请求和服务层，获取页面请求的参数，通过自动装配，映射不同的URL到相应的处理函数，并获取参数，对参数进行处理，之后传给服务层。\n6.  写JSP页面调用，请求哪些参数，需要获取什么数据。\n\nDataBase ===> Entity ===> Mapper.xml ===> Mapper.[Java](http://lib.csdn.net/base/java \"Java 知识库\")===> Service.java ===> Controller.java ===> Jsp. \n\n====================================================================================================================================\n\nSpring MVC  拥有控制器，作用跟Struts类似，接收外部请求，解析参数传给服务层\nSpring 容器属于协调上下文，管理对象间的依赖，提供事务机制\nmybatis 属于orm持久层框架，将业务实体 与数据表联合 起来\n\nSpring MVC  控制层，想当与 Struts的作用\nSpring 控制反转和依赖注入  创建对象交由容器管理，达到了解耦的作用\nmybatis 主要用来操作数据库（数据库的增删改查）\n\nIOC:控制反转，是一种降低对象之间耦合关系的设计思想，面试的时候最好能说出来个例子，加深理解。例子：租房子，以前租房子需要一个房子一个房子找，费时费力，然后现在加入一个房屋中介，把你需要的房型告诉中介，就可以直接选到需要的房子，中介就相当于spring容器。\n\nAOP:面向切面编程，是面向对象开发的一种补充，它允许开发人员在不改变原来模型的基础上动态的修改模型以满足新的需求，如：动态的增加日志、安全或异常处理等。AOP使业务逻辑各部分间的耦合度降低，提高程序可重用性，提高开发效率。\n\n### **持久层：DAO层（mapper）**\n\n*   DAO层：DAO层主要是做数据持久层的工作，负责与数据库进行联络的一些任务都封装在此，\n\n    *   DAO层的设计首先是设计DAO的接口，\n    *   然后在Spring的配置文件中定义此接口的实现类，\n    *   然后就可在模块中调用此接口来进行数据业务的处理，而不用关心此接口的具体实现类是哪个类，显得结构非常清晰，\n    *   DAO层的数据源配置，以及有关数据库连接的参数都在Spring的配置文件中进行配置。\n\n### **业务层：Service层**\n\n*   Service层：Service层主要负责业务模块的逻辑应用设计。\n\n    *   首先设计接口，再设计其实现的类\n    *   接着再在Spring的配置文件中配置其实现的关联。这样我们就可以在应用中调用Service接口来进行业务处理。\n    *   Service层的业务实现，具体要调用到已定义的DAO层的接口，\n    *   封装Service层的业务逻辑有利于通用的业务逻辑的独立性和重复利用性，程序显得非常简洁。\n\n### **表现层：Controller层（Handler层）**\n\n*   Controller层:Controller层负责具体的**业务模块流程的控制**，\n\n    *   在此层里面要调用Service层的接口来控制业务流程，\n    *   控制的配置也同样是在Spring的配置文件里面进行，针对具体的业务流程，会有不同的控制器，我们具体的设计过程中可以将流程进行抽象归纳，设计出可以重复利用的子单元流程模块，这样不仅使程序结构变得清晰，也大大减少了代码量。\n\n### **View层**\n\n*   View层 此层与控制层结合比较紧密，需要二者结合起来协同工发。View层主要负责前台jsp页面的表示.\n\n### **各层联系**\n\n*   DAO层，Service层这两个层次都可以单独开发，互相的耦合度很低，完全可以独立进行，这样的一种模式在开发大项目的过程中尤其有优势\n*   Controller，View层因为耦合度比较高，因而要结合在一起开发，但是也可以看作一个整体独立于前两个层进行开发。这样，在层与层之前我们只需要知道接口的定义，调用接口即可完成所需要的逻辑单元应用，一切显得非常清晰简单。\n\n*   Service逻辑层设计\n\n    *   Service层是建立在DAO层之上的，建立了DAO层后才可以建立Service层，而Service层又是在Controller层之下的，因而Service层应该既调用DAO层的接口，又要提供接口给Controller层的类来进行调用，它刚好处于一个中间层的位置。每个模型都有一个Service接口，每个接口分别封装各自的业务处理方法。\n\n====================================================================================================================================\n\n**   最近在学习Spring+SpringMVC+MyBatis的整合。以下是参考网上的资料自己实践操作的详细步骤。**\n\n# 1、基本概念\n\n## 1.1、Spring \n\n        Spring是一个开源框架，Spring是于2003 年兴起的一个轻量级的Java 开发框架，由Rod Johnson 在其著作Expert One-On-One J2EE Development and Design中阐述的部分理念和原型衍生而来。它是为了解决企业应用开发的复杂性而创建的。Spring使用基本的JavaBean来完成以前只可能由EJB完成的事情。然而，Spring的用途不仅限于服务器端的开发。从简单性、可测试性和松耦合的角度而言，任何Java应用都可以从Spring中受益。 简单来说，Spring是一个轻量级的控制反转（IoC）和面向切面（AOP）的容器框架。\n\n## 1.2、SpringMVC     \n\n        Spring MVC属于SpringFrameWork的后续产品，已经融合在Spring Web Flow里面。Spring MVC 分离了控制器、模型对象、分派器以及处理程序对象的角色，这种分离让它们更容易进行定制。\n\n## 1.3、MyBatis\n\n       MyBatis 本是apache的一个开源项目iBatis, 2010年这个项目由apache software foundation 迁移到了google code，并且改名为MyBatis 。MyBatis是一个基于Java的持久层框架。iBATIS提供的持久层框架包括SQL Maps和Data Access Objects（DAO）MyBatis 消除了几乎所有的JDBC代码和参数的手工设置以及结果集的检索。MyBatis 使用简单的 XML或注解用于配置和原始映射，将接口和 Java 的POJOs（Plain Old Java Objects，普通的 Java对象）映射成数据库中的记录。",[[1570877918116,["GJX@GJXAIOU",[[-1,19,"2017-09-06 09:17:06 [bieleyang](https://me.csdn.net/bieleyang) 阅读数 201762更多\n\n分类专栏： [java框架](https://blog.csdn.net/bieleyang/article/category/7140253)\n\n[](http://creativecommons.org/licenses/by-sa/4.0/)版权声明：本文为博主原创文章，遵循[ CC 4.0 BY-SA ](http://creativecommons.org/licenses/by-sa/4.0/)版权协议，转载请附上原文出处链接和本声明。\n\n本文链接：[https://blog.csdn.net/bieleyang/article/details/77862042](https://blog.csdn.net/bieleyang/article/details/77862042) "]],[19,446],[19,19]]],[1570877926008,["GJX@GJXAIOU",[[-1,20,"\n"]],[20,20],[19,19]]],[1570877926144,["GJX@GJXAIOU",[[-1,19,"\n"]],[19,19],[18,18]]],[1570877927513,["GJX@GJXAIOU",[[1,19,"\n"]],[18,18],[19,19]]],[1570877929276,["GJX@GJXAIOU",[[1,19,"## "]],[19,19],[22,22]]],[1570877932448,["GJX@GJXAIOU",[[-1,22,""],[1,22,"一"],[-1,1634," MVC  "],[1,1640," MVC  "],[-1,1681," "],[1,1682," "],[-1,1715," "],[1,1716," "],[-1,1732," "],[1,1733," "],[-1,1739," "],[1,1740," "],[-1,1750," MVC  "],[1,1756," MVC  "],[-1,1763," "],[1,1764," "],[-1,1780," "],[1,1781," "],[-1,1790,"  "],[1,1792,"  "],[-1,1819," "],[1,1820," "],[-1,3427,"  "],[1,3429,"  "],[-1,3512," \n\n        "],[1,3523," \n\n        "],[-1,3549," "],[1,3550," "],[-1,3564," "],[1,3565," "],[-1,3574," "],[1,3575," "],[-1,3582," "],[1,3583," "],[-1,3593," "],[1,3594," "],[-1,3604," "],[1,3605," "],[-1,3609," "],[1,3610," "],[-1,3621," and "],[1,3626," and "],[-1,3771," "],[1,3772," "],[-1,3833,"     \n\n       "],[1,3847,"     \n\n       "],[-1,3854," "],[1,3855," "],[-1,3892," Web "],[1,3897," Web "],[-1,3910," MVC "],[1,3915," MVC "],[-1,3975,"       "],[1,3982,"       "],[-1,3989," "],[1,3990," "],[-1,4012," "],[1,4013," "],[-1,4029," "],[1,4030," "],[-1,4038," "],[1,4039," "],[-1,4049," "],[1,4050," "],[-1,4060," "],[1,4061," "],[-1,4078," "],[1,4079," "],[-1,4122," "],[1,4123," "],[-1,4132," "],[1,4133," "],[-1,4139," "],[1,4140," "],[-1,4159," "],[1,4160," "],[-1,4198," "],[1,4199," "],[-1,4204," "],[1,4205," "],[-1,4225," "],[1,4226," "],[-1,4230," "],[1,4231," "],[-1,4243," Old "],[1,4248," Old "],[-1,4252," "],[1,4253," "],[-1,4264," "],[1,4265," "]],[22,22],[23,23]]],[1570877935652,["GJX@GJXAIOU",[[1,23,"、矿建"]],[23,23],[26,26]]],[1570877936617,["GJX@GJXAIOU",[[-1,24,"矿建"]],[26,26],[24,24]]],[1570877938446,["GJX@GJXAIOU",[[1,24,"矿建"]],[24,24],[26,26]]],[1570877939492,["GJX@GJXAIOU",[[-1,24,"矿建"]],[26,26],[24,24]]],[1570877942427,["GJX@GJXAIOU",[[1,26,"原理"]],[26,26],[28,28]]],[1570877951131,["GJX@GJXAIOU",[[1,29,"\n"]],[29,29],[30,30]]],[1570877954070,["GJX@GJXAIOU",[[-1,30,"**"],[-1,34,"**"]],[32,32],[30,32]]],[1570877962446,["GJX@GJXAIOU",[[1,30,"### SSM "]],[30,30],[37,37]]],[1570877965113,["GJX@GJXAIOU",[[1,34,"（）"]],[34,34],[36,36]]],[1570877966694,["GJX@GJXAIOU",[[1,35,"一"]],[35,35],[36,36]]],[1570877968889,["GJX@GJXAIOU",[[-1,43,"："]],[44,44],[43,43]]],[1570877978889,["GJX@GJXAIOU",[[-1,174,"，"]],[175,175],[174,174]]],[1570877979169,["GJX@GJXAIOU",[[1,174,"\n"]],[174,174],[175,175]]],[1570877980993,["GJX@GJXAIOU",[[-1,159,"\n"]],[159,159],[158,158]]],[1570877991560,["GJX@GJXAIOU",[[1,148,"**"],[1,158,"**"]],[148,158],[148,162]]],[1570877994050,["GJX@GJXAIOU",[[1,134,"- "]],[134,134],[136,136]]],[1570877996018,["GJX@GJXAIOU",[[1,165,"- "]],[165,165],[167,167]]],[1570877998057,["GJX@GJXAIOU",[[1,182,"- "]],[182,182],[184,184]]],[1570878000377,["GJX@GJXAIOU",[[1,48," "]],[48,48],[49,49]]],[1570878001266,["GJX@GJXAIOU",[[1,52," "]],[52,52],[53,53]]],[1570878061354,[null,[[-1,24,"\n*原理*"],[1,29,"框架原理\n"],[-1,41,"**"],[1,43,"作用\n\n"],[1,46," "],[-1,48," "],[1,50," "],[-1,52," "],[-1,134,"使用"],[1,138,"使用"],[1,150,"**"],[-1,152,"**"],[-1,162,"\n\n"],[-1,166,"s"],[1,167,"\n"],[1,169,"sp"],[-1,181,"，m"],[1,186,"my"]],[24,24],[188,188]]],[1570878061354,[null,[[1,24,"\n*原理*"],[-1,24,"框架原理\n"],[1,41,"**"],[-1,41,"作用\n\n"],[-1,48," "],[1,51," "],[-1,52," "],[1,55," "],[1,136,"使用"],[-1,138,"使用"],[-1,152,"**"],[1,156,"**"],[1,164,"\n\n"],[1,166,"s"],[-1,166,"\n"],[-1,169,"sp"],[1,183,"，m"],[-1,186,"my"]],[188,188],[24,24]]],[1570878002859,["GJX@GJXAIOU",[[1,71," "]],[71,71],[72,72]]],[1570878003530,["GJX@GJXAIOU",[[1,73," "]],[73,73],[74,74]]],[1570878004165,["GJX@GJXAIOU",[[1,81," "]],[81,81],[82,82]]],[1570878005362,["GJX@GJXAIOU",[[1,129," "]],[129,129],[130,130]]],[1570878006202,["GJX@GJXAIOU",[[1,135," "]],[135,135],[136,136]]],[1570878007120,["GJX@GJXAIOU",[[1,92," "]],[92,92],[93,93]]],[1570878007857,["GJX@GJXAIOU",[[1,96," "]],[96,96],[97,97]]],[1570878009308,["GJX@GJXAIOU",[[1,108," "]],[108,108],[109,109]]],[1570878010490,["GJX@GJXAIOU",[[-1,108," "]],[109,109],[108,108]]],[1570878017882,["GJX@GJXAIOU",[[-1,214,"**原理**："]],[214,221],[214,214]]],[1570878020290,["GJX@GJXAIOU",[[1,214,"### （）"]],[214,214],[220,220]]],[1570878021635,["GJX@GJXAIOU",[[1,219,"二"]],[219,219],[220,220]]],[1570878024556,["GJX@GJXAIOU",[[1,221,"原理"]],[221,221],[223,223]]],[1570878054562,["GJX@GJXAIOU",[[1,221,"Spring  "]],[221,221],[228,228]]],[1570878055780,["GJX@GJXAIOU",[[1,228,"MVC"]],[228,228],[231,231]]],[1570878060664,["GJX@GJXAIOU",[[-1,236,"SpringMVC：\n"]],[236,247],[236,236]]],[1570878121351,[null,[[-1,24,"\n*原理*"],[1,29,"框架原理\n"],[-1,41,"**"],[1,43,"作用\n\n"],[1,46," "],[-1,48," "],[1,50," "],[-1,52," "],[1,69," "],[1,70," "],[-1,71," "],[-1,73," "],[1,79," "],[-1,81," "],[1,90," "],[-1,92," "],[1,94," "],[-1,96," "],[1,129," "],[-1,131," "],[1,135," "],[-1,137," "],[-1,141,"使用"],[1,145,"使用"],[-1,157,"请求"],[1,161,"请求"],[-1,169,"\n\n"],[-1,173,"s"],[1,174,"\n"],[1,176,"sp"],[-1,188,"，m"],[1,193,"my"],[-1,212,"**"],[-1,234,"Sp"],[1,236,"\n\n\n1"]],[24,24],[240,240]]],[1570878121351,[null,[[1,24,"\n*原理*"],[-1,24,"框架原理\n"],[1,41,"**"],[-1,41,"作用\n\n"],[-1,48," "],[1,51," "],[-1,52," "],[1,55," "],[-1,71," "],[-1,73," "],[1,75," "],[1,76," "],[-1,81," "],[1,84," "],[-1,92," "],[1,95," "],[-1,96," "],[1,99," "],[-1,131," "],[1,134," "],[-1,137," "],[1,140," "],[1,143,"使用"],[-1,145,"使用"],[1,159,"请求"],[-1,161,"请求"],[1,171,"\n\n"],[1,173,"s"],[-1,173,"\n"],[-1,176,"sp"],[1,190,"，m"],[-1,193,"my"],[1,214,"**"],[1,234,"Sp"],[-1,234,"\n\n\n1"]],[240,240],[24,24]]],[1570878067969,["GJX@GJXAIOU",[[-1,221,"Spring MVC "]],[221,232],[221,221]]],[1570878071035,["GJX@GJXAIOU",[[1,221,"实现"]],[221,221],[223,223]]],[1570878073641,["GJX@GJXAIOU",[[1,228,"\n"]],[226,226],[227,227]]],[1570878088284,["GJX@GJXAIOU",[[1,227,"#### 1.spring MVC"]],[227,227],[244,244]]],[1570878092962,["GJX@GJXAIOU",[[-1,246,"1."]],[246,248],[246,246]]],[1570878093883,["GJX@GJXAIOU",[[1,246,"- "]],[246,246],[248,248]]],[1570878181353,[null,[[-1,24,"\n*原理*"],[1,29,"框架原理\n"],[-1,41,"**"],[1,43,"作用\n\n"],[1,46," "],[1,48,"是"],[-1,49,"是"],[-1,52," "],[1,69," "],[1,70," "],[-1,71," "],[-1,73," "],[1,79," "],[-1,81," "],[1,90," "],[-1,92," "],[1,94," "],[-1,96," "],[1,129," "],[-1,131," "],[1,135," "],[-1,137," "],[1,141,"- "],[-1,143,"- "],[1,157,"**"],[-1,159,"**"],[-1,169,"\n\n"],[-1,173,"s"],[1,174,"\n"],[1,176,"sp"],[-1,188,"，m"],[1,193,"my"],[-1,212,"**"],[-1,225,"Sp"],[1,227,"\n\n"],[-1,244,"."],[1,245,"\n"],[1,248,"客户"]],[24,24],[250,250]]],[1570878181353,[null,[[1,24,"\n*原理*"],[-1,24,"框架原理\n"],[1,41,"**"],[-1,41,"作用\n\n"],[-1,48," "],[-1,51,"是"],[1,53,"是"],[1,55," "],[-1,71," "],[-1,73," "],[1,75," "],[1,76," "],[-1,81," "],[1,84," "],[-1,92," "],[1,95," "],[-1,96," "],[1,99," "],[-1,131," "],[1,134," "],[-1,137," "],[1,140," "],[-1,143,"- "],[1,147,"- "],[-1,159,"**"],[1,163,"**"],[1,171,"\n\n"],[1,173,"s"],[-1,173,"\n"],[-1,176,"sp"],[1,190,"，m"],[-1,193,"my"],[1,214,"**"],[1,225,"Sp"],[-1,225,"\n\n"],[1,244,"."],[-1,244,"\n"],[-1,248,"客户"]],[250,250],[24,24]]],[1570878134809,["GJX@GJXAIOU",[[1,273,"，"]],[273,273],[274,274]]],[1570878135937,["GJX@GJXAIOU",[[-1,273,"，"]],[274,274],[273,273]]],[1570878141691,["GJX@GJXAIOU",[[1,273,"前端控制器，"]],[273,273],[279,279]]],[1570878142360,["GJX@GJXAIOU",[[-1,278,"，"]],[279,279],[278,278]]],[1570878143166,["GJX@GJXAIOU",[[1,278,"即"]],[278,278],[279,279]]],[1570878163108,["GJX@GJXAIOU",[[1,283,"，这里是吸纳"]],[283,283],[289,289]]],[1570878164997,["GJX@GJXAIOU",[[-1,284,"这里是吸纳"]],[289,289],[284,284]]],[1570878167460,["GJX@GJXAIOU",[[1,284,"这里是"]],[284,284],[287,287]]],[1570878178265,["GJX@GJXAIOU",[[-1,286,"是"]],[287,287],[286,286]]],[1570878180299,["GJX@GJXAIOU",[[1,286,"可以设置"]],[286,286],[290,290]]],[1570878241354,[null,[[-1,24,"\n*原理*"],[1,29,"框架原理\n"],[-1,41,"**"],[1,43,"作用\n\n"],[1,46," "],[-1,48," "],[1,50," "],[-1,52," "],[1,69," "],[-1,70,"m"],[1,72,"m"],[-1,73," "],[1,79," "],[-1,81," "],[1,90," "],[1,92,"C"],[-1,93,"C"],[-1,96," "],[1,129," "],[-1,131," "],[1,135," "],[-1,137," "],[-1,141,"使用"],[1,145,"使用"],[1,157,"**"],[-1,159,"**"],[-1,169,"\n\n"],[-1,173,"s"],[1,174,"\n"],[1,176,"sp"],[-1,188,"，m"],[1,193,"my"],[-1,212,"**"],[-1,225,"Sp"],[1,227,"\n\n"],[-1,244,"."],[1,245,"\n"],[1,248,"客户"],[-1,271,"分发"],[1,279,"分发"],[-1,281,"\n\n"],[1,290,"\n\n"]],[24,24],[292,292]]],[1570878241354,[null,[[1,24,"\n*原理*"],[-1,24,"框架原理\n"],[1,41,"**"],[-1,41,"作用\n\n"],[-1,48," "],[1,51," "],[-1,52," "],[1,55," "],[-1,71," "],[1,73,"m"],[-1,74,"m"],[1,76," "],[-1,81," "],[1,84," "],[-1,92," "],[-1,95,"C"],[1,97,"C"],[1,99," "],[-1,131," "],[1,134," "],[-1,137," "],[1,140," "],[1,143,"使用"],[-1,145,"使用"],[-1,159,"**"],[1,163,"**"],[1,171,"\n\n"],[1,173,"s"],[-1,173,"\n"],[-1,176,"sp"],[1,190,"，m"],[-1,193,"my"],[1,214,"**"],[1,225,"Sp"],[-1,225,"\n\n"],[1,244,"."],[-1,244,"\n"],[-1,248,"客户"],[1,273,"分发"],[-1,279,"分发"],[1,283,"\n\n"],[-1,290,"\n\n"]],[292,292],[24,24]]],[1570878195809,["GJX@GJXAIOU",[[1,290,"拦截器，对请求进行过滤处理；"]],[290,290],[304,304]]],[1570878204009,["GJX@GJXAIOU",[[-1,306,"2."]],[306,308],[306,306]]],[1570878204354,["GJX@GJXAIOU",[[1,306,"- "]],[306,306],[308,308]]],[1570878205979,["GJX@GJXAIOU",[[1,309," "]],[309,309],[310,310]]],[1570878207626,["GJX@GJXAIOU",[[1,326," "]],[326,326],[327,327]]],[1570878239327,["GJX@GJXAIOU",[[1,346,"通过解析请求，判断西药"]],[346,346],[357,357]]],[1570878301356,[null,[[-1,24,"\n*原理*"],[1,29,"框架原理\n"],[-1,41,"**"],[1,43,"作用\n\n"],[1,46," "],[-1,48," "],[1,50," "],[-1,52," "],[1,69," "],[-1,70,"m"],[1,72,"m"],[-1,73," "],[1,79," "],[-1,81," "],[1,90," "],[-1,92," "],[1,94," "],[-1,96," "],[1,129," "],[-1,131," "],[1,135," "],[-1,137," "],[1,141,"- "],[-1,143,"- "],[1,157,"**"],[-1,159,"**"],[-1,169,"\n\n"],[-1,173,"s"],[1,174,"\n"],[1,176,"sp"],[-1,188,"，m"],[1,193,"my"],[-1,212,"**"],[-1,225,"Sp"],[1,227,"\n\n"],[-1,244,"."],[1,245,"\n"],[1,248,"客户"],[-1,271,"分发"],[1,279,"分发"],[-1,281,"\n\n"],[-1,304,"2."],[1,306,"\n\n"],[1,308,"由 D"],[-1,309," "],[1,324," "],[-1,326," "],[-1,344,"找到"],[1,357,"找到"]],[24,24],[359,359]]],[1570878301356,[null,[[1,24,"\n*原理*"],[-1,24,"框架原理\n"],[1,41,"**"],[-1,41,"作用\n\n"],[-1,48," "],[1,51," "],[-1,52," "],[1,55," "],[-1,71," "],[1,73,"m"],[-1,74,"m"],[1,76," "],[-1,81," "],[1,84," "],[-1,92," "],[1,95," "],[-1,96," "],[1,99," "],[-1,131," "],[1,134," "],[-1,137," "],[1,140," "],[-1,143,"- "],[1,147,"- "],[-1,159,"**"],[1,163,"**"],[1,171,"\n\n"],[1,173,"s"],[-1,173,"\n"],[-1,176,"sp"],[1,190,"，m"],[-1,193,"my"],[1,214,"**"],[1,225,"Sp"],[-1,225,"\n\n"],[1,244,"."],[-1,244,"\n"],[-1,248,"客户"],[1,273,"分发"],[-1,279,"分发"],[1,283,"\n\n"],[1,304,"2."],[-1,304,"\n\n"],[-1,308,"由 D"],[1,312," "],[-1,326," "],[1,329," "],[1,346,"找到"],[-1,357,"找到"]],[359,359],[24,24]]],[1570878241856,["GJX@GJXAIOU",[[-1,355,"西药"]],[357,357],[355,355]]],[1570878252070,["GJX@GJXAIOU",[[1,355,"请求希望执行那个的"]],[355,355],[364,364]]],[1570878253065,["GJX@GJXAIOU",[[-1,361,"那个的"]],[364,364],[361,361]]],[1570878259854,["GJX@GJXAIOU",[[1,361,"的具体方法，即"]],[361,361],[368,368]]],[1570878264932,["GJX@GJXAIOU",[[1,385,"；"]],[385,385],[386,386]]],[1570878270362,["GJX@GJXAIOU",[[1,256," "]],[256,256],[257,257]]],[1570878271658,["GJX@GJXAIOU",[[1,333," "]],[333,333],[334,334]]],[1570878272588,["GJX@GJXAIOU",[[1,377," "]],[377,377],[378,378]]],[1570878274680,["GJX@GJXAIOU",[[-1,391,"3."]],[391,393],[391,391]]],[1570878275050,["GJX@GJXAIOU",[[1,391,"- "]],[391,391],[393,393]]],[1570878276837,["GJX@GJXAIOU",[[1,403," "]],[403,403],[404,404]]],[1570878292002,["GJX@GJXAIOU",[[1,390,"- \n"]],[389,389],[392,392]]],[1570878292652,["GJX@GJXAIOU",[[1,392,"- "]],[392,392],[394,394]]],[1570878299448,["GJX@GJXAIOU",[[-1,391," - "]],[394,394],[391,391]]],[1570878301212,["GJX@GJXAIOU",[[1,391," 通过"]],[391,391],[394,394]]],[1570878361357,[null,[[-1,24,"\n*原理*"],[1,29,"框架原理\n"],[-1,41,"**"],[1,43,"作用\n\n"],[1,46," "],[-1,48," "],[1,50," "],[-1,52," "],[1,69," "],[-1,70,"m"],[1,72,"m"],[-1,73," "],[1,79," "],[-1,81," "],[1,90," "],[1,92,"C"],[-1,93,"C"],[-1,96," "],[1,129," "],[-1,131," "],[1,135," "],[-1,137," "],[-1,141,"使用"],[1,145,"使用"],[1,157,"**"],[-1,159,"**"],[-1,169,"\n\n"],[-1,173,"s"],[1,174,"\n"],[1,176,"sp"],[-1,188,"，m"],[1,193,"my"],[-1,212,"**"],[-1,225,"Sp"],[1,227,"\n\n"],[-1,244,"."],[1,245,"\n"],[1,248,"客户"],[1,254," "],[-1,256," "],[-1,272,"分发"],[1,280,"分发"],[-1,282,"\n\n"],[-1,305,"2."],[1,307,"\n\n"],[1,309,"由 D"],[-1,310," "],[1,325," "],[-1,327," "],[1,331," "],[-1,333," "],[-1,346,"找到"],[1,370,"找到"],[1,375," "],[-1,377," "],[-1,386,"\n\n；3"],[1,390,"；\n"],[-1,395,"."],[1,396,"\n"],[1,398,"Co"],[1,406," "],[-1,408," "]],[24,24],[408,408]]],[1570878361357,[null,[[1,24,"\n*原理*"],[-1,24,"框架原理\n"],[1,41,"**"],[-1,41,"作用\n\n"],[-1,48," "],[1,51," "],[-1,52," "],[1,55," "],[-1,71," "],[1,73,"m"],[-1,74,"m"],[1,76," "],[-1,81," "],[1,84," "],[-1,92," "],[-1,95,"C"],[1,97,"C"],[1,99," "],[-1,131," "],[1,134," "],[-1,137," "],[1,140," "],[1,143,"使用"],[-1,145,"使用"],[-1,159,"**"],[1,163,"**"],[1,171,"\n\n"],[1,173,"s"],[-1,173,"\n"],[-1,176,"sp"],[1,190,"，m"],[-1,193,"my"],[1,214,"**"],[1,225,"Sp"],[-1,225,"\n\n"],[1,244,"."],[-1,244,"\n"],[-1,248,"客户"],[-1,256," "],[1,259," "],[1,274,"分发"],[-1,280,"分发"],[1,284,"\n\n"],[1,305,"2."],[-1,305,"\n\n"],[-1,309,"由 D"],[1,313," "],[-1,327," "],[1,330," "],[-1,333," "],[1,336," "],[1,348,"找到"],[-1,370,"找到"],[-1,377," "],[1,380," "],[1,388,"\n\n；3"],[-1,388,"；\n"],[1,395,"."],[-1,395,"\n"],[-1,398,"Co"],[-1,408," "],[1,411," "]],[408,408],[24,24]]],[1570878319525,["GJX@GJXAIOU",[[1,394," HandlerAdapter 调用具体的 Controller 方法；"]],[394,394],[430,430]]],[1570878325608,["GJX@GJXAIOU",[[-1,306,"\n"]],[306,306],[305,305]]],[1570878327786,["GJX@GJXAIOU",[[-1,430,"\n"]],[430,430],[429,429]]],[1570878347933,["GJX@GJXAIOU",[[1,455," "]],[455,455],[456,456]]],[1570878350102,["GJX@GJXAIOU",[[1,468,"；"]],[468,468],[469,469]]],[1570878356513,["GJX@GJXAIOU",[[-1,470,"\n4"]],[470,472],[470,470]]],[1570878357213,["GJX@GJXAIOU",[[1,470,"- "]],[470,470],[472,472]]],[1570878358352,["GJX@GJXAIOU",[[-1,472,"."]],[473,473],[472,472]]],[1570878421356,[null,[[-1,24,"\n*原理*"],[1,29,"框架原理\n"],[-1,41,"**"],[1,43,"作用\n\n"],[1,46," "],[-1,48," "],[1,50," "],[-1,52," "],[1,69," "],[1,70," "],[-1,71," "],[-1,73," "],[1,79," "],[-1,81," "],[1,90," "],[1,92,"C"],[-1,93,"C"],[-1,96," "],[1,129," "],[-1,131," "],[1,135," "],[-1,137," "],[-1,141,"使用"],[1,145,"使用"],[-1,157,"请求"],[1,161,"请求"],[-1,169,"\n\n"],[-1,173,"s"],[1,174,"\n"],[1,176,"sp"],[-1,188,"，m"],[1,193,"my"],[-1,212,"**"],[-1,225,"Sp"],[1,227,"\n\n"],[-1,244,"."],[1,245,"\n"],[1,248,"客户"],[1,254," "],[-1,256," "],[-1,272,"分发"],[1,280,"分发"],[-1,282,"\n\n"],[-1,305,"2- i "],[1,310,"\n- 由 Di"],[1,324," "],[-1,326," "],[1,330," "],[-1,332," "],[-1,345,"找到"],[1,369,"找到"],[1,374," "],[-1,376," "],[-1,385,"\n\n；3"],[1,389,"；\n"],[1,432,"Co"],[1,440," "],[-1,442," "],[1,453," "],[-1,455," "],[-1,466,"\n\n；4"],[1,470,"；\n"],[1,472,"Di"]],[24,24],[474,474]]],[1570878421356,[null,[[1,24,"\n*原理*"],[-1,24,"框架原理\n"],[1,41,"**"],[-1,41,"作用\n\n"],[-1,48," "],[1,51," "],[-1,52," "],[1,55," "],[-1,71," "],[-1,73," "],[1,75," "],[1,76," "],[-1,81," "],[1,84," "],[-1,92," "],[-1,95,"C"],[1,97,"C"],[1,99," "],[-1,131," "],[1,134," "],[-1,137," "],[1,140," "],[1,143,"使用"],[-1,145,"使用"],[1,159,"请求"],[-1,161,"请求"],[1,171,"\n\n"],[1,173,"s"],[-1,173,"\n"],[-1,176,"sp"],[1,190,"，m"],[-1,193,"my"],[1,214,"**"],[1,225,"Sp"],[-1,225,"\n\n"],[1,244,"."],[-1,244,"\n"],[-1,248,"客户"],[-1,256," "],[1,259," "],[1,274,"分发"],[-1,280,"分发"],[1,284,"\n\n"],[1,305,"2- i "],[-1,305,"\n- 由 Di"],[-1,326," "],[1,329," "],[-1,332," "],[1,335," "],[1,347,"找到"],[-1,369,"找到"],[-1,376," "],[1,379," "],[1,387,"\n\n；3"],[-1,387,"；\n"],[-1,432,"Co"],[-1,442," "],[1,445," "],[-1,455," "],[1,458," "],[1,468,"\n\n；4"],[-1,468,"；\n"],[-1,472,"Di"]],[474,474],[24,24]]],[1570878373929,["GJX@GJXAIOU",[[-1,468,"；"]],[469,469],[468,468]]],[1570878382575,["GJX@GJXAIOU",[[1,468,"，即控制器结果返回得"]],[468,468],[478,478]]],[1570878384136,["GJX@GJXAIOU",[[-1,477,"得"]],[478,478],[477,477]]],[1570878389101,["GJX@GJXAIOU",[[1,477,"给视图解析器；"]],[477,477],[484,484]]],[1570878392852,["GJX@GJXAIOU",[[-1,499,"c"]],[500,500],[499,499]]],[1570878394236,["GJX@GJXAIOU",[[1,499,"v"]],[499,499],[500,500]]],[1570878395460,["GJX@GJXAIOU",[[1,503," "]],[503,503],[504,504]]],[1570878399962,["GJX@GJXAIOU",[[1,526," "]],[526,526],[527,527]]],[1570878405040,["GJX@GJXAIOU",[[-1,533,"\n5."]],[533,536],[533,533]]],[1570878405498,["GJX@GJXAIOU",[[1,533,"- "]],[533,533],[535,535]]],[1570881181414,[null,[[-1,24,"\n*原理*"],[1,29,"框架原理\n"],[-1,41,"**"],[1,43,"作用\n\n"],[1,46," "],[-1,48," "],[1,50," "],[-1,52," "],[1,69," "],[1,70," "],[-1,71," "],[-1,73," "],[1,79," "],[-1,81," "],[1,90," "],[-1,92," "],[1,94," "],[-1,96," "],[1,129," "],[-1,131," "],[1,135," "],[-1,137," "],[-1,141,"使用"],[1,145,"使用"],[-1,157,"请求"],[1,161,"请求"],[-1,169,"\n\n"],[-1,173,"s"],[1,174,"\n"],[1,176,"sp"],[-1,188,"，m"],[1,193,"my"],[-1,212,"**"],[-1,225,"Sp"],[1,227,"\n\n"],[-1,244,"."],[1,245,"\n"],[1,248,"客户"],[1,254," "],[-1,256," "],[-1,272,"分发"],[1,280,"分发"],[-1,282,"\n\n"],[-1,305,"2- i "],[1,310,"\n- 由 Di"],[1,324," "],[-1,326," "],[1,330," "],[-1,332," "],[-1,345,"找到"],[1,369,"找到"],[1,374," "],[-1,376," "],[1,385,"；"],[-1,386,"\n；3"],[1,432,"Co"],[1,440," "],[-1,442," "],[1,453," "],[-1,455," "],[-1,466,"\n\n"],[-1,484,"4"],[1,485,"\n"],[1,487,"Di"],[-1,497,"clvt"],[1,501,"vlet "],[-1,503," "],[1,524," "],[-1,526," "],[-1,531,"\n5"],[1,535,"视图"]],[24,24],[537,537]]],[1570881181414,[null,[[1,24,"\n*原理*"],[-1,24,"框架原理\n"],[1,41,"**"],[-1,41,"作用\n\n"],[-1,48," "],[1,51," "],[-1,52," "],[1,55," "],[-1,71," "],[-1,73," "],[1,75," "],[1,76," "],[-1,81," "],[1,84," "],[-1,92," "],[1,95," "],[-1,96," "],[1,99," "],[-1,131," "],[1,134," "],[-1,137," "],[1,140," "],[1,143,"使用"],[-1,145,"使用"],[1,159,"请求"],[-1,161,"请求"],[1,171,"\n\n"],[1,173,"s"],[-1,173,"\n"],[-1,176,"sp"],[1,190,"，m"],[-1,193,"my"],[1,214,"**"],[1,225,"Sp"],[-1,225,"\n\n"],[1,244,"."],[-1,244,"\n"],[-1,248,"客户"],[-1,256," "],[1,259," "],[1,274,"分发"],[-1,280,"分发"],[1,284,"\n\n"],[1,305,"2- i "],[-1,305,"\n- 由 Di"],[-1,326," "],[1,329," "],[-1,332," "],[1,335," "],[1,347,"找到"],[-1,369,"找到"],[-1,376," "],[1,379," "],[-1,387,"；"],[1,389,"\n；3"],[-1,432,"Co"],[-1,442," "],[1,445," "],[-1,455," "],[1,458," "],[1,468,"\n\n"],[1,484,"4"],[-1,484,"\n"],[-1,487,"Di"],[1,499,"clvt"],[-1,499,"vlet "],[1,506," "],[-1,526," "],[1,529," "],[1,533,"\n5"],[-1,535,"视图"]],[537,537],[24,24]]],[1570881168603,["GJX@GJXAIOU",[[-1,550,"![](https://img-blog.csdn.net/20151118190949363?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)"]],[550,716],[550,550]]],[1570881176081,["GJX@GJXAIOU",[[1,550,"![SpringMVC 流程]($resource/SpringMVC%20%E6%B5%81%E7%A8%8B.png)"]],[550,550],[612,612]]],[1570881241412,[null,[[-1,24,"\n*原理*"],[1,29,"框架原理\n"],[-1,41,"**"],[1,43,"作用\n\n"],[1,46," "],[1,48,"是"],[-1,49,"是"],[-1,52," "],[1,69," "],[1,70," "],[-1,71," "],[-1,73," "],[1,79," "],[-1,81," "],[1,90," "],[-1,92," "],[1,94," "],[-1,96," "],[1,129," "],[-1,131," "],[1,135," "],[-1,137," "],[1,141,"- "],[-1,143,"- "],[-1,157,"请求"],[1,161,"请求"],[-1,169,"\n\n"],[-1,173,"s"],[1,174,"\n"],[1,176,"sp"],[-1,188,"，m"],[1,193,"my"],[-1,212,"**"],[-1,225,"Sp"],[1,227,"\n\n"],[-1,244,"."],[1,245,"\n"],[1,248,"客户"],[1,254," "],[-1,256," "],[-1,272,"分发"],[1,280,"分发"],[-1,282,"\n\n"],[-1,305,"2- i "],[1,310,"\n- 由 Di"],[1,324," "],[-1,326," "],[1,330," "],[-1,332," "],[-1,345,"找到"],[1,369,"找到"],[1,374," "],[-1,376," "],[1,385,"；"],[-1,386,"\n；3"],[1,432,"Co"],[1,440," "],[-1,442," "],[1,453," "],[-1,455," "],[-1,466,"\n\n"],[-1,484,"4"],[1,485,"\n"],[1,487,"Di"],[-1,497,"cl"],[1,500,"le"],[1,501," "],[-1,503," "],[1,524," "],[-1,526," "],[-1,531,"\n5"],[1,535,"视图"],[-1,548,"!["],[1,611,"\n\n"]],[24,24],[613,613]]],[1570881241412,[null,[[1,24,"\n*原理*"],[-1,24,"框架原理\n"],[1,41,"**"],[-1,41,"作用\n\n"],[-1,48," "],[-1,51,"是"],[1,53,"是"],[1,55," "],[-1,71," "],[-1,73," "],[1,75," "],[1,76," "],[-1,81," "],[1,84," "],[-1,92," "],[1,95," "],[-1,96," "],[1,99," "],[-1,131," "],[1,134," "],[-1,137," "],[1,140," "],[-1,143,"- "],[1,147,"- "],[1,159,"请求"],[-1,161,"请求"],[1,171,"\n\n"],[1,173,"s"],[-1,173,"\n"],[-1,176,"sp"],[1,190,"，m"],[-1,193,"my"],[1,214,"**"],[1,225,"Sp"],[-1,225,"\n\n"],[1,244,"."],[-1,244,"\n"],[-1,248,"客户"],[-1,256," "],[1,259," "],[1,274,"分发"],[-1,280,"分发"],[1,284,"\n\n"],[1,305,"2- i "],[-1,305,"\n- 由 Di"],[-1,326," "],[1,329," "],[-1,332," "],[1,335," "],[1,347,"找到"],[-1,369,"找到"],[-1,376," "],[1,379," "],[-1,387,"；"],[1,389,"\n；3"],[-1,432,"Co"],[-1,442," "],[1,445," "],[-1,455," "],[1,458," "],[1,468,"\n\n"],[1,484,"4"],[-1,484,"\n"],[-1,487,"Di"],[1,499,"cl"],[-1,500,"le"],[-1,503," "],[1,506," "],[-1,526," "],[1,529," "],[1,533,"\n5"],[-1,535,"视图"],[1,550,"!["],[-1,611,"\n\n"]],[613,613],[24,24]]],[1570881191569,["GJX@GJXAIOU",[[-1,661,"](http://lib.csdn.net/base/java \"Java 知识库\")"]],[661,704],[661,661]]],[1570881192840,["GJX@GJXAIOU",[[-1,656,"["]],[657,657],[656,656]]],[1570881207248,["GJX@GJXAIOU",[[1,641,"**"],[1,683,"**"]],[641,683],[641,687]]],[1570881212984,["GJX@GJXAIOU",[[-1,227,"#### 1."]],[227,234],[227,227]]],[1570881214978,["GJX@GJXAIOU",[[1,227,"**"],[1,237,"**"]],[227,237],[227,241]]],[1570881217690,["GJX@GJXAIOU",[[1,227,"- "]],[227,227],[229,229]]],[1570881220528,["GJX@GJXAIOU",[[1,245,"  "],[1,305,"  "],[1,388,"  "],[1,429,"  "],[1,484,"  "],[1,532,"  "]],[245,547],[245,559]]],[1570881222152,["GJX@GJXAIOU",[[-1,244,"\n"]],[244,244],[243,243]]],[1570881224915,["GJX@GJXAIOU",[[1,623,"- "]],[623,623],[625,625]]],[1570881228202,["GJX@GJXAIOU",[[1,772,"- "]],[772,772],[774,774]]],[1570881254216,[null,[[-1,24,"\n*原理*"],[1,29,"框架原理\n"],[-1,41,"**"],[1,43,"作用\n\n"],[1,46," "],[-1,48," "],[1,50," "],[-1,52," "],[1,69," "],[-1,70,"m"],[1,72,"m"],[-1,73," "],[1,79," "],[-1,81," "],[1,90," "],[-1,92," "],[1,94," "],[-1,96," "],[1,129," "],[-1,131," "],[1,135," "],[-1,137," "],[1,141,"- "],[-1,143,"- "],[1,157,"**"],[-1,159,"**"],[-1,169,"\n\n"],[-1,173,"s"],[1,174,"\n"],[1,176,"sp"],[-1,188,"，m"],[1,193,"my"],[-1,212,"**"],[-1,225,"Sp"],[1,227,"\n\n"],[-1,243,"."],[1,244,"\n"],[1,248,"客户"],[1,254," "],[-1,256," "],[-1,272,"分发"],[1,280,"分发"],[-1,282,"\n\n"],[-1,305,"2"],[1,306,"\n"],[-1,310,"i "],[1,312,"由 Di"],[1,326," "],[-1,328," "],[1,332," "],[-1,334," "],[-1,347,"找到"],[1,371,"找到"],[1,376," "],[-1,378," "],[-1,387,"\n\n；3"],[1,391,"；\n"],[1,438,"Co"],[1,446," "],[-1,448," "],[1,459," "],[-1,461," "],[-1,472,"\n\n"],[-1,490,"4"],[1,491,"\n"],[1,495,"Di"],[-1,505,"cl"],[1,508,"le"],[1,509," "],[-1,511," "],[1,532," "],[-1,534," "],[-1,539,"\n5"],[1,545,"视图"],[-1,560,"!["],[-1,621,"Sp"],[1,623,"\n\n"],[1,625,"Sp"],[-1,651,"它可"],[1,655,"它可"],[-1,668,"["],[1,670,"a"],[-1,672,"]("],[1,674,"中的"],[1,695,"**"],[-1,697,"**"],[1,770,"- "],[-1,772,"- "]],[24,24],[772,772]]],[1570881254216,[null,[[1,24,"\n*原理*"],[-1,24,"框架原理\n"],[1,41,"**"],[-1,41,"作用\n\n"],[-1,48," "],[1,51," "],[-1,52," "],[1,55," "],[-1,71," "],[1,73,"m"],[-1,74,"m"],[1,76," "],[-1,81," "],[1,84," "],[-1,92," "],[1,95," "],[-1,96," "],[1,99," "],[-1,131," "],[1,134," "],[-1,137," "],[1,140," "],[-1,143,"- "],[1,147,"- "],[-1,159,"**"],[1,163,"**"],[1,171,"\n\n"],[1,173,"s"],[-1,173,"\n"],[-1,176,"sp"],[1,190,"，m"],[-1,193,"my"],[1,214,"**"],[1,225,"Sp"],[-1,225,"\n\n"],[1,243,"."],[-1,243,"\n"],[-1,248,"客户"],[-1,256," "],[1,259," "],[1,274,"分发"],[-1,280,"分发"],[1,284,"\n\n"],[1,305,"2"],[-1,305,"\n"],[1,310,"i "],[-1,310,"由 Di"],[-1,328," "],[1,331," "],[-1,334," "],[1,337," "],[1,349,"找到"],[-1,371,"找到"],[-1,378," "],[1,381," "],[1,389,"\n\n；3"],[-1,389,"；\n"],[-1,438,"Co"],[-1,448," "],[1,451," "],[-1,461," "],[1,464," "],[1,474,"\n\n"],[1,490,"4"],[-1,490,"\n"],[-1,495,"Di"],[1,507,"cl"],[-1,508,"le"],[-1,511," "],[1,514," "],[-1,534," "],[1,537," "],[1,541,"\n5"],[-1,545,"视图"],[1,562,"!["],[1,621,"Sp"],[-1,621,"\n\n"],[-1,625,"Sp"],[1,653,"它可"],[-1,655,"它可"],[1,670,"["],[-1,671,"a"],[1,674,"]("],[-1,674,"中的"],[-1,697,"**"],[1,701,"**"],[-1,772,"- "],[1,776,"- "]],[772,772],[24,24]]],[1570881252384,["GJX@GJXAIOU",[[1,852,"**"],[1,913,"**"]],[852,913],[852,917]]],[1570881314224,[null,[[-1,24,"\n*原理*"],[1,29,"框架原理\n"],[-1,41,"**"],[1,43,"作用\n\n"],[1,46," "],[-1,48," "],[1,50," "],[-1,52," "],[1,69," "],[-1,70,"m"],[1,72,"m"],[-1,73," "],[1,79," "],[-1,81," "],[1,90," "],[-1,92," "],[1,94," "],[-1,96," "],[1,129," "],[-1,131," "],[1,135," "],[-1,137," "],[1,141,"- "],[-1,143,"- "],[-1,157,"请求"],[1,161,"请求"],[-1,169,"\n\n"],[-1,173,"s"],[1,174,"\n"],[1,176,"sp"],[-1,188,"，m"],[1,193,"my"],[-1,212,"**"],[-1,225,"Sp"],[1,227,"\n\n"],[-1,243,"."],[1,244,"\n"],[1,248,"客户"],[1,254," "],[-1,256," "],[-1,272,"分发"],[1,280,"分发"],[-1,282,"\n\n"],[-1,305,"2"],[1,306,"\n"],[-1,310,"i "],[1,312,"由 Di"],[1,326," "],[-1,328," "],[1,332," "],[-1,334," "],[-1,347,"找到"],[1,371,"找到"],[1,376," "],[-1,378," "],[-1,387,"\n\n；3"],[1,391,"；\n"],[1,438,"Co"],[1,446," "],[-1,448," "],[1,459," "],[-1,461," "],[-1,472,"\n\n"],[-1,490,"4"],[1,491,"\n"],[1,495,"Di"],[-1,505,"clvt"],[1,509,"vlet "],[-1,511," "],[1,532," "],[-1,534," "],[-1,539,"\n5"],[1,545,"视图"],[-1,558,"!["],[-1,621,"Sp"],[1,623,"\n\n"],[1,625,"Sp"],[1,651,"**"],[-1,653,"**"],[-1,668,"["],[1,670,"a"],[-1,672,"]("],[1,674,"中的"],[1,695,"**"],[-1,697,"**"],[-1,770,"My"],[1,774,"My"],[1,850,"**"],[-1,852,"**"],[1,913,"**"],[-1,915,"**"]],[24,24],[915,915]]],[1570881314224,[null,[[1,24,"\n*原理*"],[-1,24,"框架原理\n"],[1,41,"**"],[-1,41,"作用\n\n"],[-1,48," "],[1,51," "],[-1,52," "],[1,55," "],[-1,71," "],[1,73,"m"],[-1,74,"m"],[1,76," "],[-1,81," "],[1,84," "],[-1,92," "],[1,95," "],[-1,96," "],[1,99," "],[-1,131," "],[1,134," "],[-1,137," "],[1,140," "],[-1,143,"- "],[1,147,"- "],[1,159,"请求"],[-1,161,"请求"],[1,171,"\n\n"],[1,173,"s"],[-1,173,"\n"],[-1,176,"sp"],[1,190,"，m"],[-1,193,"my"],[1,214,"**"],[1,225,"Sp"],[-1,225,"\n\n"],[1,243,"."],[-1,243,"\n"],[-1,248,"客户"],[-1,256," "],[1,259," "],[1,274,"分发"],[-1,280,"分发"],[1,284,"\n\n"],[1,305,"2"],[-1,305,"\n"],[1,310,"i "],[-1,310,"由 Di"],[-1,328," "],[1,331," "],[-1,334," "],[1,337," "],[1,349,"找到"],[-1,371,"找到"],[-1,378," "],[1,381," "],[1,389,"\n\n；3"],[-1,389,"；\n"],[-1,438,"Co"],[-1,448," "],[1,451," "],[-1,461," "],[1,464," "],[1,474,"\n\n"],[1,490,"4"],[-1,490,"\n"],[-1,495,"Di"],[1,507,"clvt"],[-1,507,"vlet "],[1,514," "],[-1,534," "],[1,537," "],[1,541,"\n5"],[-1,545,"视图"],[1,560,"!["],[1,621,"Sp"],[-1,621,"\n\n"],[-1,625,"Sp"],[-1,653,"**"],[1,657,"**"],[1,670,"["],[-1,671,"a"],[1,674,"]("],[-1,674,"中的"],[-1,697,"**"],[1,701,"**"],[1,772,"My"],[-1,774,"My"],[-1,852,"**"],[1,856,"**"],[-1,915,"**"],[1,919,"**"]],[915,915],[24,24]]],[1570881261883,["GJX@GJXAIOU",[[-1,974,"**使用方法**：\n"]],[974,984],[974,974]]],[1570881263841,["GJX@GJXAIOU",[[1,974,"### （）"]],[974,974],[980,980]]],[1570881266186,["GJX@GJXAIOU",[[1,979,"三"]],[979,979],[980,980]]],[1570881268707,["GJX@GJXAIOU",[[1,981,"使用方法"]],[981,981],[985,985]]],[1570881276802,["GJX@GJXAIOU",[[-1,996,"1.  "]],[996,1000],[996,996]]],[1570881277198,["GJX@GJXAIOU",[[1,996,"- "]],[996,996],[998,998]]],[1570881279603,["GJX@GJXAIOU",[[-1,1055,"2.  "]],[1055,1059],[1055,1055]]],[1570881279986,["GJX@GJXAIOU",[[1,1055,"- "]],[1055,1055],[1057,1057]]],[1570881285512,["GJX@GJXAIOU",[[-1,1150,"3.  "]],[1150,1154],[1150,1150]]],[1570881285873,["GJX@GJXAIOU",[[1,1150,"- "]],[1150,1150],[1152,1152]]],[1570881295431,["GJX@GJXAIOU",[[1,1166,"**"],[1,1193,"**"]],[1166,1193],[1166,1197]]],[1570881300641,["GJX@GJXAIOU",[[-1,1199,"4.  "]],[1199,1203],[1199,1199]]],[1570881301050,["GJX@GJXAIOU",[[1,1199,"- "]],[1199,1199],[1201,1201]]],[1570881307872,["GJX@GJXAIOU",[[-1,1250,"5. "]],[1250,1253],[1250,1250]]],[1570881308122,["GJX@GJXAIOU",[[1,1250,"-"]],[1250,1250],[1251,1251]]],[1570881308363,["GJX@GJXAIOU",[[1,1252," "]],[1251,1251],[1252,1252]]],[1570881312463,["GJX@GJXAIOU",[[-1,1252," "]],[1253,1253],[1252,1252]]],[1570881374228,[null,[[-1,24,"\n*原理*"],[1,29,"框架原理\n"],[-1,41,"**"],[1,43,"作用\n\n"],[1,46," "],[1,48,"是"],[-1,49,"是"],[-1,52," "],[1,69," "],[-1,70,"m"],[1,72,"m"],[-1,73," "],[1,79," "],[-1,81," "],[1,90," "],[-1,92," "],[1,94," "],[-1,96," "],[1,129," "],[-1,131," "],[1,135," "],[-1,137," "],[-1,141,"使用"],[1,145,"使用"],[-1,157,"请求"],[1,161,"请求"],[-1,169,"\n\n"],[-1,173,"s"],[1,174,"\n"],[1,176,"sp"],[-1,188,"，m"],[1,193,"my"],[-1,212,"**"],[-1,225,"Sp"],[1,227,"\n\n"],[-1,243,"."],[1,244,"\n"],[1,248,"客户"],[1,254," "],[-1,256," "],[-1,272,"分发"],[1,280,"分发"],[-1,282,"\n\n"],[-1,305,"2"],[1,306,"\n"],[-1,310,"i "],[1,312,"由 Di"],[1,326," "],[-1,328," "],[1,332," "],[-1,334," "],[-1,347,"找到"],[1,371,"找到"],[1,376," "],[-1,378," "],[-1,387,"\n\n；3"],[1,391,"；\n"],[1,438,"Co"],[1,446," "],[-1,448," "],[1,459," "],[-1,461," "],[-1,472,"\n\n"],[-1,490,"4"],[1,491,"\n"],[1,495,"Di"],[-1,505,"clvt"],[1,509,"vlet "],[-1,511," "],[1,532," "],[-1,534," "],[-1,539,"\n5"],[1,545,"视图"],[-1,560,"!["],[-1,621,"Sp"],[1,623,"\n\n"],[1,625,"Sp"],[-1,651,"它可"],[1,655,"它可"],[-1,668,"["],[1,670,"a"],[-1,672,"]("],[1,674,"中的"],[1,695,"**"],[-1,697,"**"],[1,770,"- "],[-1,772,"- "],[1,850,"**"],[-1,852,"**"],[-1,913,"。在"],[1,917,"。在"],[-1,972,"**"],[1,985,"\n要"],[-1,994,"1."],[1,998,"先写"],[-1,1053,"2."],[1,1057,"写M"],[-1,1148,"3."],[1,1152,"写M"],[1,1164,"**"],[-1,1166,"**"],[-1,1193,"。\n"],[-1,1197,"4."],[1,1199,"。\n"],[1,1201,"写S"],[-1,1248,"5."],[1,1251," 写"]],[24,24],[1253,1253]]],[1570881374228,[null,[[1,24,"\n*原理*"],[-1,24,"框架原理\n"],[1,41,"**"],[-1,41,"作用\n\n"],[-1,48," "],[-1,51,"是"],[1,53,"是"],[1,55," "],[-1,71," "],[1,73,"m"],[-1,74,"m"],[1,76," "],[-1,81," "],[1,84," "],[-1,92," "],[1,95," "],[-1,96," "],[1,99," "],[-1,131," "],[1,134," "],[-1,137," "],[1,140," "],[1,143,"使用"],[-1,145,"使用"],[1,159,"请求"],[-1,161,"请求"],[1,171,"\n\n"],[1,173,"s"],[-1,173,"\n"],[-1,176,"sp"],[1,190,"，m"],[-1,193,"my"],[1,214,"**"],[1,225,"Sp"],[-1,225,"\n\n"],[1,243,"."],[-1,243,"\n"],[-1,248,"客户"],[-1,256," "],[1,259," "],[1,274,"分发"],[-1,280,"分发"],[1,284,"\n\n"],[1,305,"2"],[-1,305,"\n"],[1,310,"i "],[-1,310,"由 Di"],[-1,328," "],[1,331," "],[-1,334," "],[1,337," "],[1,349,"找到"],[-1,371,"找到"],[-1,378," "],[1,381," "],[1,389,"\n\n；3"],[-1,389,"；\n"],[-1,438,"Co"],[-1,448," "],[1,451," "],[-1,461," "],[1,464," "],[1,474,"\n\n"],[1,490,"4"],[-1,490,"\n"],[-1,495,"Di"],[1,507,"clvt"],[-1,507,"vlet "],[1,514," "],[-1,534," "],[1,537," "],[1,541,"\n5"],[-1,545,"视图"],[1,562,"!["],[1,621,"Sp"],[-1,621,"\n\n"],[-1,625,"Sp"],[1,653,"它可"],[-1,655,"它可"],[1,670,"["],[-1,671,"a"],[1,674,"]("],[-1,674,"中的"],[-1,697,"**"],[1,701,"**"],[-1,772,"- "],[1,776,"- "],[-1,852,"**"],[1,856,"**"],[1,915,"。在"],[-1,917,"。在"],[1,974,"**"],[-1,985,"\n要"],[1,996,"1."],[-1,998,"先写"],[1,1055,"2."],[-1,1057,"写M"],[1,1150,"3."],[-1,1152,"写M"],[-1,1166,"**"],[1,1170,"**"],[1,1195,"。\n"],[1,1197,"4."],[-1,1197,"。\n"],[-1,1201,"写S"],[1,1250,"5."],[-1,1251," 写"]],[1253,1253],[24,24]]],[1570881317776,["GJX@GJXAIOU",[[1,1216,"**"],[1,1248,"**"]],[1216,1248],[1216,1252]]],[1570881328194,["GJX@GJXAIOU",[[1,1273,"**"],[1,1283,"**"]],[1273,1283],[1273,1287]]],[1570881337904,["GJX@GJXAIOU",[[1,1288,"**"],[1,1343,"**"]],[1288,1343],[1288,1347]]],[1570881342398,["GJX@GJXAIOU",[[-1,1349,"6. "]],[1349,1352],[1349,1349]]],[1570881342657,["GJX@GJXAIOU",[[1,1349,"-"]],[1349,1349],[1350,1350]]],[1570881342825,["GJX@GJXAIOU",[[1,1351," "]],[1350,1350],[1351,1351]]],[1570881363161,["GJX@GJXAIOU",[[-1,1527,"===================================================================================================================================="]],[1527,1659],[1527,1527]]],[1570881368225,["GJX@GJXAIOU",[[-1,1433,"](http://lib.csdn.net/base/java \"Java 知识库\")="]],[1433,1477],[1433,1433]]],[1570881369111,["GJX@GJXAIOU",[[-1,1428,"["]],[1429,1429],[1428,1428]]],[1570881371464,["GJX@GJXAIOU",[[1,1379,"·"]],[1379,1379],[1380,1380]]],[1570881373196,["GJX@GJXAIOU",[[1,1481,"·"]],[1481,1481],[1482,1482]]],[1570881434237,[null,[[-1,24,"\n*原理*"],[1,29,"框架原理\n"],[-1,41,"**"],[1,43,"作用\n\n"],[1,46," "],[-1,48," "],[1,50," "],[-1,52," "],[1,69," "],[1,70," "],[-1,71," "],[-1,73," "],[1,79," "],[-1,81," "],[1,90," "],[-1,92," "],[1,94," "],[-1,96," "],[1,129," "],[-1,131," "],[1,135," "],[-1,137," "],[-1,141,"使用"],[1,145,"使用"],[-1,157,"请求"],[1,161,"请求"],[-1,169,"\n\n"],[-1,173,"s"],[1,174,"\n"],[1,176,"sp"],[-1,188,"，m"],[1,193,"my"],[-1,212,"**"],[-1,225,"Sp"],[1,227,"\n\n"],[-1,243,"."],[1,244,"\n"],[1,248,"客户"],[1,254," "],[-1,256," "],[-1,272,"分发"],[1,280,"分发"],[-1,282,"\n\n"],[-1,305,"2"],[1,306,"\n"],[1,310,"由 D"],[-1,311," "],[1,326," "],[-1,328," "],[1,332," "],[-1,334," "],[-1,347,"找到"],[1,371,"找到"],[1,376," "],[-1,378," "],[-1,387,"\n\n；3"],[1,391,"；\n"],[1,438,"Co"],[1,446," "],[-1,448," "],[1,459," "],[-1,461," "],[-1,472,"\n\n"],[-1,490,"4"],[1,491,"\n"],[1,495,"Di"],[-1,505,"clvt"],[1,509,"vlet "],[-1,511," "],[1,532," "],[-1,534," "],[-1,539,"\n5"],[1,545,"视图"],[-1,558,"!["],[-1,621,"Sp"],[1,623,"\n\n"],[1,625,"Sp"],[1,651,"**"],[-1,653,"**"],[-1,668,"["],[1,670,"a"],[-1,672,"]("],[1,674,"中的"],[-1,695,"），"],[1,699,"），"],[1,770,"- "],[-1,772,"- "],[1,850,"**"],[-1,852,"**"],[1,913,"**"],[-1,915,"**"],[-1,972,"**"],[1,985,"\n要"],[-1,994,"1."],[1,998,"先写"],[-1,1053,"2."],[1,1057,"写M"],[-1,1148,"3."],[1,1152,"写M"],[1,1164,"**"],[-1,1166,"**"],[-1,1193,"。\n"],[-1,1197,"4."],[1,1199,"。\n"],[1,1201,"写S"],[1,1214,"**"],[-1,1216,"**"],[1,1248,"**"],[-1,1250,"**5."],[1,1255," 写"],[1,1271,"**"],[-1,1273,"**"],[-1,1283,"，获"],[-1,1287,"取"],[1,1288,"，"],[1,1290,"获取"],[-1,1343,"。\n"],[-1,1347,"6.-J "],[1,1352,"。\n-  写J"],[1,1377,"·"],[-1,1379,"·"],[-1,1427,"["],[1,1429,"a"],[-1,1431,"]("],[1,1433,"=="],[1,1479,"·"],[-1,1481,"·=="],[1,1484,"\n\n"]],[24,24],[1486,1486]]],[1570881434237,[null,[[1,24,"\n*原理*"],[-1,24,"框架原理\n"],[1,41,"**"],[-1,41,"作用\n\n"],[-1,48," "],[1,51," "],[-1,52," "],[1,55," "],[-1,71," "],[-1,73," "],[1,75," "],[1,76," "],[-1,81," "],[1,84," "],[-1,92," "],[1,95," "],[-1,96," "],[1,99," "],[-1,131," "],[1,134," "],[-1,137," "],[1,140," "],[1,143,"使用"],[-1,145,"使用"],[1,159,"请求"],[-1,161,"请求"],[1,171,"\n\n"],[1,173,"s"],[-1,173,"\n"],[-1,176,"sp"],[1,190,"，m"],[-1,193,"my"],[1,214,"**"],[1,225,"Sp"],[-1,225,"\n\n"],[1,243,"."],[-1,243,"\n"],[-1,248,"客户"],[-1,256," "],[1,259," "],[1,274,"分发"],[-1,280,"分发"],[1,284,"\n\n"],[1,305,"2"],[-1,305,"\n"],[-1,310,"由 D"],[1,314," "],[-1,328," "],[1,331," "],[-1,334," "],[1,337," "],[1,349,"找到"],[-1,371,"找到"],[-1,378," "],[1,381," "],[1,389,"\n\n；3"],[-1,389,"；\n"],[-1,438,"Co"],[-1,448," "],[1,451," "],[-1,461," "],[1,464," "],[1,474,"\n\n"],[1,490,"4"],[-1,490,"\n"],[-1,495,"Di"],[1,507,"clvt"],[-1,507,"vlet "],[1,514," "],[-1,534," "],[1,537," "],[1,541,"\n5"],[-1,545,"视图"],[1,560,"!["],[1,621,"Sp"],[-1,621,"\n\n"],[-1,625,"Sp"],[-1,653,"**"],[1,657,"**"],[1,670,"["],[-1,671,"a"],[1,674,"]("],[-1,674,"中的"],[1,697,"），"],[-1,699,"），"],[-1,772,"- "],[1,776,"- "],[-1,852,"**"],[1,856,"**"],[-1,915,"**"],[1,919,"**"],[1,974,"**"],[-1,985,"\n要"],[1,996,"1."],[-1,998,"先写"],[1,1055,"2."],[-1,1057,"写M"],[1,1150,"3."],[-1,1152,"写M"],[-1,1166,"**"],[1,1170,"**"],[1,1195,"。\n"],[1,1197,"4."],[-1,1197,"。\n"],[-1,1201,"写S"],[-1,1216,"**"],[1,1220,"**"],[-1,1250,"**"],[1,1254,"**5."],[-1,1255," 写"],[-1,1273,"**"],[1,1277,"**"],[1,1285,"，获"],[1,1287,"取"],[-1,1287,"，"],[-1,1290,"获取"],[1,1345,"。\n"],[1,1347,"6.-J "],[-1,1347,"。\n-  写J"],[-1,1379,"·"],[1,1382,"·"],[1,1429,"["],[-1,1430,"a"],[1,1433,"]("],[-1,1433,"=="],[-1,1481,"·"],[1,1484,"·=="],[-1,1484,"\n\n"]],[1486,1486],[24,24]]],[1570881376417,["GJX@GJXAIOU",[[-1,1379,"·"]],[1380,1380],[1379,1379]]],[1570881376868,["GJX@GJXAIOU",[[1,1379,"`"]],[1379,1379],[1380,1380]]],[1570881379090,["GJX@GJXAIOU",[[-1,1481,"·"]],[1482,1482],[1481,1481]]],[1570881379274,["GJX@GJXAIOU",[[1,1481,"`"]],[1481,1481],[1482,1482]]],[1570881385112,["GJX@GJXAIOU",[[-1,1389,"==="]],[1389,1392],[1389,1389]]],[1570881385666,["GJX@GJXAIOU",[[1,1389,"--"]],[1389,1389],[1391,1391]]],[1570881388931,["GJX@GJXAIOU",[[-1,1400,"==="],[1,1403,"-"]],[1400,1403],[1401,1401]]],[1570881389130,["GJX@GJXAIOU",[[1,1401,"-"]],[1401,1401],[1402,1402]]],[1570881390867,["GJX@GJXAIOU",[[-1,1415,"==="],[1,1418,"-"]],[1415,1418],[1416,1416]]],[1570881391044,["GJX@GJXAIOU",[[1,1416,"-"]],[1416,1416],[1417,1417]]],[1570881393034,["GJX@GJXAIOU",[[1,1432,"--"]],[1432,1432],[1434,1434]]],[1570881394623,["GJX@GJXAIOU",[[-1,1430,"=="]],[1432,1432],[1430,1430]]],[1570881395965,["GJX@GJXAIOU",[[1,1430," "]],[1430,1430],[1431,1431]]],[1570881397785,["GJX@GJXAIOU",[[1,1451,"--"]],[1451,1451],[1453,1453]]],[1570881399904,["GJX@GJXAIOU",[[-1,1448,"==="]],[1451,1451],[1448,1448]]],[1570881402834,["GJX@GJXAIOU",[[-1,1468,"==="]],[1471,1471],[1468,1468]]],[1570881403836,["GJX@GJXAIOU",[[1,1468,"--"]],[1468,1468],[1470,1470]]],[1570881406442,["GJX@GJXAIOU",[[1,1472,"."]],[1472,1472],[1473,1473]]],[1570881412432,["GJX@GJXAIOU",[[-1,1476,". `"]],[1478,1478],[1476,1476]]],[1570881414194,["GJX@GJXAIOU",[[-1,1379,"`"]],[1380,1380],[1379,1379]]],[1570881494235,[null,[[-1,24,"\n*原理*"],[1,29,"框架原理\n"],[-1,41,"**"],[1,43,"作用\n\n"],[1,46," "],[1,48,"是"],[-1,49,"是"],[-1,52," "],[1,69," "],[1,70," "],[-1,71," "],[-1,73," "],[1,79," "],[-1,81," "],[1,90," "],[-1,92," "],[1,94," "],[-1,96," "],[1,129," "],[-1,131," "],[1,135," "],[-1,137," "],[1,141,"- "],[-1,143,"- "],[1,157,"**"],[-1,159,"**"],[-1,169,"\n\n"],[-1,173,"s"],[1,174,"\n"],[1,176,"sp"],[-1,188,"，m"],[1,193,"my"],[-1,212,"**"],[-1,225,"Sp"],[1,227,"\n\n"],[-1,243,"."],[1,244,"\n"],[1,248,"客户"],[1,254," "],[-1,256," "],[-1,272,"分发"],[1,280,"分发"],[-1,282,"\n\n"],[-1,305,"2"],[1,306,"\n"],[-1,310,"i "],[1,312,"由 Di"],[1,326," "],[-1,328," "],[1,332," "],[-1,334," "],[-1,347,"找到"],[1,371,"找到"],[1,376," "],[-1,378," "],[1,387,"；"],[-1,388,"\n；3"],[1,438,"Co"],[1,446," "],[-1,448," "],[1,459," "],[-1,461," "],[-1,472,"\n\n"],[-1,490,"4"],[1,491,"\n"],[1,495,"Di"],[-1,505,"clvt"],[1,509,"vlet "],[-1,511," "],[1,532," "],[-1,534," "],[-1,539,"\n5"],[1,545,"视图"],[-1,558,"!["],[-1,621,"Sp"],[1,623,"\n\n"],[1,625,"Sp"],[-1,651,"它可"],[1,655,"它可"],[-1,668,"["],[1,670,"a"],[-1,672,"]("],[1,674,"中的"],[1,695,"**"],[-1,697,"**"],[-1,770,"My"],[1,774,"My"],[1,850,"**"],[-1,852,"**"],[1,913,"**"],[-1,915,"**"],[-1,972,"**"],[1,985,"\n要"],[-1,994,"1."],[1,998,"先写"],[-1,1053,"2."],[1,1057,"写M"],[-1,1148,"3."],[1,1152,"写M"],[1,1164,"**"],[-1,1166,"**"],[-1,1193,"。\n"],[-1,1197,"4."],[1,1199,"。\n"],[1,1201,"写S"],[1,1214,"**"],[-1,1216,"**"],[-1,1248,"。\n"],[-1,1252,"5.-"],[1,1255,"。\n- 写"],[-1,1271,"连接"],[1,1275,"连接"],[-1,1283,"，获"],[-1,1287,"取"],[1,1288,"，"],[1,1290,"获取"],[-1,1343,"。\n"],[-1,1347,"6.-J "],[1,1352,"。\n-  写J"],[-1,1386,"=="],[1,1390,"> "],[-1,1397,"=="],[1,1401,"> "],[-1,1412,"=="],[1,1416,"> "],[-1,1423,"["],[1,1425,"a"],[-1,1427,"]("],[1,1432,"> "],[-1,1445,"=="],[1,1449,"> "],[-1,1465,"=="],[1,1469,"> ."],[-1,1471,".p. =="],[1,1477,"p\n\n\n\n"]],[24,24],[1482,1482]]],[1570881494235,[null,[[1,24,"\n*原理*"],[-1,24,"框架原理\n"],[1,41,"**"],[-1,41,"作用\n\n"],[-1,48," "],[-1,51,"是"],[1,53,"是"],[1,55," "],[-1,71," "],[-1,73," "],[1,75," "],[1,76," "],[-1,81," "],[1,84," "],[-1,92," "],[1,95," "],[-1,96," "],[1,99," "],[-1,131," "],[1,134," "],[-1,137," "],[1,140," "],[-1,143,"- "],[1,147,"- "],[-1,159,"**"],[1,163,"**"],[1,171,"\n\n"],[1,173,"s"],[-1,173,"\n"],[-1,176,"sp"],[1,190,"，m"],[-1,193,"my"],[1,214,"**"],[1,225,"Sp"],[-1,225,"\n\n"],[1,243,"."],[-1,243,"\n"],[-1,248,"客户"],[-1,256," "],[1,259," "],[1,274,"分发"],[-1,280,"分发"],[1,284,"\n\n"],[1,305,"2"],[-1,305,"\n"],[1,310,"i "],[-1,310,"由 Di"],[-1,328," "],[1,331," "],[-1,334," "],[1,337," "],[1,349,"找到"],[-1,371,"找到"],[-1,378," "],[1,381," "],[-1,389,"；"],[1,391,"\n；3"],[-1,438,"Co"],[-1,448," "],[1,451," "],[-1,461," "],[1,464," "],[1,474,"\n\n"],[1,490,"4"],[-1,490,"\n"],[-1,495,"Di"],[1,507,"clvt"],[-1,507,"vlet "],[1,514," "],[-1,534," "],[1,537," "],[1,541,"\n5"],[-1,545,"视图"],[1,560,"!["],[1,621,"Sp"],[-1,621,"\n\n"],[-1,625,"Sp"],[1,653,"它可"],[-1,655,"它可"],[1,670,"["],[-1,671,"a"],[1,674,"]("],[-1,674,"中的"],[-1,697,"**"],[1,701,"**"],[1,772,"My"],[-1,774,"My"],[-1,852,"**"],[1,856,"**"],[-1,915,"**"],[1,919,"**"],[1,974,"**"],[-1,985,"\n要"],[1,996,"1."],[-1,998,"先写"],[1,1055,"2."],[-1,1057,"写M"],[1,1150,"3."],[-1,1152,"写M"],[-1,1166,"**"],[1,1170,"**"],[1,1195,"。\n"],[1,1197,"4."],[-1,1197,"。\n"],[-1,1201,"写S"],[-1,1216,"**"],[1,1220,"**"],[1,1250,"。\n"],[1,1252,"5.-"],[-1,1252,"。\n- 写"],[1,1273,"连接"],[-1,1275,"连接"],[1,1285,"，获"],[1,1287,"取"],[-1,1287,"，"],[-1,1290,"获取"],[1,1345,"。\n"],[1,1347,"6.-J "],[-1,1347,"。\n-  写J"],[1,1388,"=="],[-1,1390,"> "],[1,1399,"=="],[-1,1401,"> "],[1,1414,"=="],[-1,1416,"> "],[1,1425,"["],[-1,1426,"a"],[1,1429,"]("],[-1,1432,"> "],[1,1447,"=="],[-1,1449,"> "],[1,1467,"=="],[-1,1469,"> ."],[1,1474,".p. =="],[-1,1474,"p\n\n\n\n"]],[1482,1482],[24,24]]],[1570881436951,["GJX@GJXAIOU",[[1,1478,"****"]],[1478,1478],[1480,1480]]],[1570881438738,["GJX@GJXAIOU",[[1,1480,"说明："]],[1480,1480],[1483,1483]]],[1570881442952,["GJX@GJXAIOU",[[1,1513,"2 "]],[1513,1513],[1514,1514]]],[1570881452619,["GJX@GJXAIOU",[[1,1525,"**"],[1,1534,"**"]],[1525,1534],[1525,1538]]],[1570881459197,["GJX@GJXAIOU",[[1,1486,"- "]],[1486,1486],[1488,1488]]],[1570881463706,["GJX@GJXAIOU",[[1,1541,"- "]],[1541,1541],[1543,1543]]],[1570881468305,["GJX@GJXAIOU",[[1,1560,"**"],[1,1575,"**"]],[1560,1575],[1560,1579]]],[1570881473486,["GJX@GJXAIOU",[[1,1580,"-   "]],[1580,1580],[1584,1584]]],[1570881474888,["GJX@GJXAIOU",[[-1,1582,"  "]],[1584,1584],[1582,1582]]],[1570881477905,["GJX@GJXAIOU",[[1,1616,"；"]],[1616,1616],[1617,1617]]],[1570881480480,["GJX@GJXAIOU",[[-1,1606," "]],[1607,1607],[1606,1606]]],[1570881481631,["GJX@GJXAIOU",[[-1,1612," "]],[1613,1613],[1612,1612]]],[1570881484640,["GJX@GJXAIOU",[[1,1601,"**"],[1,1614,"**"]],[1601,1614],[1601,1618]]],[1570881554235,[null,[[-1,24,"\n*原理*"],[1,29,"框架原理\n"],[-1,41,"**"],[1,43,"作用\n\n"],[1,46," "],[-1,48," "],[1,50," "],[-1,52," "],[1,69," "],[1,70," "],[-1,71," "],[-1,73," "],[1,79," "],[-1,81," "],[1,90," "],[-1,92," "],[1,94," "],[-1,96," "],[1,129," "],[-1,131," "],[1,135," "],[-1,137," "],[-1,141,"使用"],[1,145,"使用"],[-1,157,"请求"],[1,161,"请求"],[-1,169,"\n\n"],[-1,173,"s"],[1,174,"\n"],[1,176,"sp"],[-1,188,"，m"],[1,193,"my"],[-1,212,"**"],[-1,225,"Sp"],[1,227,"\n\n"],[-1,243,"."],[1,244,"\n"],[1,248,"客户"],[1,254," "],[-1,256," "],[-1,272,"分发"],[1,280,"分发"],[-1,282,"\n\n"],[-1,305,"2"],[1,306,"\n"],[-1,310,"i "],[1,312,"由 Di"],[1,326," "],[-1,328," "],[1,332," "],[-1,334," "],[-1,347,"找到"],[1,371,"找到"],[1,376," "],[-1,378," "],[1,387,"；"],[-1,388,"\n；3"],[1,438,"Co"],[1,446," "],[-1,448," "],[1,459," "],[-1,461," "],[-1,472,"\n\n"],[-1,490,"4"],[1,491,"\n"],[1,495,"Di"],[-1,505,"clvt"],[1,509,"vlet "],[-1,511," "],[1,532," "],[-1,534," "],[-1,539,"\n5"],[1,545,"视图"],[-1,558,"!["],[-1,621,"Sp"],[1,623,"\n\n"],[1,625,"Sp"],[1,651,"**"],[-1,653,"**"],[-1,668,"["],[1,670,"a"],[-1,672,"]("],[1,674,"中的"],[1,695,"**"],[-1,697,"**"],[1,770,"- "],[-1,772,"- "],[1,850,"**"],[-1,852,"**"],[1,913,"**"],[-1,915,"**"],[-1,972,"**"],[1,985,"\n要"],[-1,994,"1."],[1,998,"先写"],[-1,1053,"2."],[1,1057,"写M"],[-1,1148,"3."],[1,1152,"写M"],[1,1164,"**"],[-1,1166,"**"],[1,1193,"**"],[-1,1195,"**4."],[1,1201,"写S"],[-1,1214,"控制"],[1,1218,"控制"],[-1,1248,"。\n"],[-1,1252,"5.-"],[1,1255,"。\n- 写"],[1,1271,"**"],[-1,1273,"**"],[1,1283,"**"],[-1,1284,"获"],[1,1287,"获"],[-1,1288,"**"],[-1,1343,"。\n"],[-1,1347,"6.-J "],[1,1352,"。\n-  写J"],[-1,1386,"=="],[1,1390,"> "],[-1,1397,"=="],[1,1401,"> "],[-1,1412,"=="],[1,1416,"> "],[-1,1423,"["],[1,1425,"a"],[-1,1427,"]("],[1,1432,"> "],[-1,1445,"=="],[1,1449,"> "],[-1,1465,"=="],[1,1469,"> ."],[-1,1471,".p. ==S"],[1,1478,"p\n\n\n"],[-1,1485,"p"],[1,1486,"\n"],[1,1488,"Sp"],[-1,1513,"类似"],[1,1517,"类似"],[1,1525,"**"],[-1,1527,"**"],[-1,1536,"\nS"],[-1,1540,"p"],[1,1541,"\n"],[1,1543,"Sp"],[1,1558,"**"],[-1,1560,"**"],[-1,1575,"\nm"],[-1,1579,"y"],[1,1580,"\n"],[1,1582,"my"],[1,1599,"**"],[-1,1601,"**"],[-1,1606," "],[1,1608,"数"],[-1,1612," 起\n\n"],[1,1616,"起来"],[1,1619,"\n\n"]],[24,24],[1621,1621]]],[1570881554235,[null,[[1,24,"\n*原理*"],[-1,24,"框架原理\n"],[1,41,"**"],[-1,41,"作用\n\n"],[-1,48," "],[1,51," "],[-1,52," "],[1,55," "],[-1,71," "],[-1,73," "],[1,75," "],[1,76," "],[-1,81," "],[1,84," "],[-1,92," "],[1,95," "],[-1,96," "],[1,99," "],[-1,131," "],[1,134," "],[-1,137," "],[1,140," "],[1,143,"使用"],[-1,145,"使用"],[1,159,"请求"],[-1,161,"请求"],[1,171,"\n\n"],[1,173,"s"],[-1,173,"\n"],[-1,176,"sp"],[1,190,"，m"],[-1,193,"my"],[1,214,"**"],[1,225,"Sp"],[-1,225,"\n\n"],[1,243,"."],[-1,243,"\n"],[-1,248,"客户"],[-1,256," "],[1,259," "],[1,274,"分发"],[-1,280,"分发"],[1,284,"\n\n"],[1,305,"2"],[-1,305,"\n"],[1,310,"i "],[-1,310,"由 Di"],[-1,328," "],[1,331," "],[-1,334," "],[1,337," "],[1,349,"找到"],[-1,371,"找到"],[-1,378," "],[1,381," "],[-1,389,"；"],[1,391,"\n；3"],[-1,438,"Co"],[-1,448," "],[1,451," "],[-1,461," "],[1,464," "],[1,474,"\n\n"],[1,490,"4"],[-1,490,"\n"],[-1,495,"Di"],[1,507,"clvt"],[-1,507,"vlet "],[1,514," "],[-1,534," "],[1,537," "],[1,541,"\n5"],[-1,545,"视图"],[1,560,"!["],[1,621,"Sp"],[-1,621,"\n\n"],[-1,625,"Sp"],[-1,653,"**"],[1,657,"**"],[1,670,"["],[-1,671,"a"],[1,674,"]("],[-1,674,"中的"],[-1,697,"**"],[1,701,"**"],[-1,772,"- "],[1,776,"- "],[-1,852,"**"],[1,856,"**"],[-1,915,"**"],[1,919,"**"],[1,974,"**"],[-1,985,"\n要"],[1,996,"1."],[-1,998,"先写"],[1,1055,"2."],[-1,1057,"写M"],[1,1150,"3."],[-1,1152,"写M"],[-1,1166,"**"],[1,1170,"**"],[-1,1195,"**"],[1,1199,"**4."],[-1,1201,"写S"],[1,1216,"控制"],[-1,1218,"控制"],[1,1250,"。\n"],[1,1252,"5.-"],[-1,1252,"。\n- 写"],[-1,1273,"**"],[1,1277,"**"],[-1,1285,"**"],[1,1288,"获"],[-1,1290,"获"],[1,1292,"**"],[1,1345,"。\n"],[1,1347,"6.-J "],[-1,1347,"。\n-  写J"],[1,1388,"=="],[-1,1390,"> "],[1,1399,"=="],[-1,1401,"> "],[1,1414,"=="],[-1,1416,"> "],[1,1425,"["],[-1,1426,"a"],[1,1429,"]("],[-1,1432,"> "],[1,1447,"=="],[-1,1449,"> "],[1,1467,"=="],[-1,1469,"> ."],[1,1474,".p. ==S"],[-1,1474,"p\n\n\n"],[1,1485,"p"],[-1,1485,"\n"],[-1,1488,"Sp"],[1,1515,"类似"],[-1,1517,"类似"],[-1,1527,"**"],[1,1531,"**"],[1,1538,"\nS"],[1,1540,"p"],[-1,1540,"\n"],[-1,1543,"Sp"],[-1,1560,"**"],[1,1564,"**"],[1,1577,"\nm"],[1,1579,"y"],[-1,1579,"\n"],[-1,1582,"my"],[-1,1601,"**"],[1,1605,"**"],[1,1608," "],[-1,1609,"数"],[1,1614," 起\n\n"],[-1,1614,"起来"],[-1,1619,"\n\n"]],[1621,1621],[24,24]]],[1570881497586,["GJX@GJXAIOU",[[-1,1639,"与"]],[1640,1640],[1639,1639]]],[1570881499293,["GJX@GJXAIOU",[[1,1639,"于"]],[1639,1639],[1640,1640]]],[1570881501996,["GJX@GJXAIOU",[[1,1621,"- "]],[1621,1621],[1623,1623]]],[1570881506481,["GJX@GJXAIOU",[[1,1653,"- "]],[1653,1653],[1655,1655]]],[1570881509575,["GJX@GJXAIOU",[[1,1671,"："]],[1671,1671],[1672,1672]]],[1570881513402,["GJX@GJXAIOU",[[1,1694,"- "]],[1694,1694],[1696,1696]]],[1570881515995,["GJX@GJXAIOU",[[1,1725,"- "]],[1725,1725],[1727,1727]]],[1570881531394,["GJX@GJXAIOU",[[1,1859,"- "]],[1859,1859],[1861,1861]]],[1570881537295,["GJX@GJXAIOU",[[1,1885,"**"],[1,1918,"**"]],[1885,1918],[1885,1922]]],[1570881854244,[null,[[-1,24,"\n*原理*"],[1,29,"框架原理\n"],[-1,41,"**"],[1,43,"作用\n\n"],[1,46," "],[-1,48," "],[1,50," "],[-1,52," "],[1,69," "],[-1,70,"m"],[1,72,"m"],[-1,73," "],[1,79," "],[-1,81," "],[1,90," "],[-1,92," "],[1,94," "],[-1,96," "],[1,129," "],[-1,131," "],[1,135," "],[-1,137," "],[1,141,"- "],[-1,143,"- "],[-1,157,"请求"],[1,161,"请求"],[-1,169,"\n\n"],[-1,173,"s"],[1,174,"\n"],[1,176,"sp"],[-1,188,"，m"],[1,193,"my"],[-1,212,"**"],[-1,225,"Sp"],[1,227,"\n\n"],[-1,243,"."],[1,244,"\n"],[1,248,"客户"],[1,254," "],[-1,256," "],[-1,272,"分发"],[1,280,"分发"],[-1,282,"\n\n"],[-1,305,"2"],[1,306,"\n"],[1,310,"由 D"],[-1,311," "],[1,326," "],[-1,328," "],[1,332," "],[-1,334," "],[-1,347,"找到"],[1,371,"找到"],[1,376," "],[-1,378," "],[1,387,"；"],[-1,388,"\n；3"],[1,438,"Co"],[1,446," "],[-1,448," "],[1,459," "],[-1,461," "],[-1,472,"\n\n"],[-1,490,"4"],[1,491,"\n"],[1,495,"Di"],[-1,505,"clvt"],[1,509,"vlet "],[-1,511," "],[1,532," "],[-1,534," "],[-1,539,"\n5"],[1,545,"视图"],[-1,558,"!["],[-1,621,"Sp"],[1,623,"\n\n"],[1,625,"Sp"],[1,651,"**"],[-1,653,"**"],[-1,668,"["],[1,670,"a"],[-1,672,"]("],[1,674,"中的"],[1,695,"**"],[-1,697,"**"],[-1,770,"My"],[1,774,"My"],[1,850,"**"],[-1,852,"**"],[-1,913,"。在"],[1,917,"。在"],[-1,972,"**"],[1,985,"\n要"],[-1,994,"1."],[1,998,"先写"],[-1,1053,"2."],[1,1057,"写M"],[-1,1148,"3."],[1,1152,"写M"],[1,1164,"**"],[-1,1166,"**"],[-1,1193,"。\n"],[-1,1197,"4."],[1,1199,"。\n"],[1,1201,"写S"],[1,1214,"**"],[-1,1216,"**"],[-1,1248,"。\n"],[-1,1252,"5.-"],[1,1255,"。\n- 写"],[1,1271,"**"],[-1,1273,"**"],[-1,1283,"，获"],[-1,1287,"取"],[1,1288,"，"],[1,1290,"获取"],[1,1343,"**"],[-1,1345,"**6."],[1,1350,"  写"],[-1,1351," "],[-1,1386,"=="],[1,1390,"> "],[-1,1397,"=="],[1,1401,"> "],[-1,1412,"=="],[1,1416,"> "],[-1,1423,"["],[1,1425,"a"],[-1,1427,"]("],[1,1432,"> "],[-1,1445,"=="],[1,1449,"> "],[-1,1465,"=="],[1,1469,"> ."],[-1,1471,".p. ==S"],[1,1478,"p\n\n\n"],[-1,1485,"p"],[1,1486,"\n"],[1,1488,"Sp"],[-1,1513,"类似"],[1,1517,"类似"],[-1,1525,"解析"],[1,1529,"解析"],[-1,1536,"\nS"],[-1,1540,"p"],[1,1541,"\n"],[1,1543,"Sp"],[-1,1558,"管理"],[1,1562,"管理"],[-1,1575,"\nm"],[-1,1579,"y"],[1,1580,"\n"],[1,1582,"my"],[1,1599,"**"],[-1,1601,"**"],[-1,1606," "],[1,1608,"数"],[-1,1612," 起\n\n"],[1,1616,"起来"],[1,1619,"\n\n- "],[-1,1621,"- "],[-1,1639,"与 于"],[1,1642,"于 S"],[-1,1651,"Sp"],[1,1655,"Sp"],[1,1669,"："],[-1,1671,"："],[1,1692,"- "],[-1,1694,"- "],[1,1723,"- "],[-1,1725,"- "],[1,1857,"- "],[-1,1859,"- "],[-1,1883,"它允"],[1,1887,"它允"],[1,1918,"**"],[-1,1920,"**"]],[24,24],[1920,1920]]],[1570881854244,[null,[[1,24,"\n*原理*"],[-1,24,"框架原理\n"],[1,41,"**"],[-1,41,"作用\n\n"],[-1,48," "],[1,51," "],[-1,52," "],[1,55," "],[-1,71," "],[1,73,"m"],[-1,74,"m"],[1,76," "],[-1,81," "],[1,84," "],[-1,92," "],[1,95," "],[-1,96," "],[1,99," "],[-1,131," "],[1,134," "],[-1,137," "],[1,140," "],[-1,143,"- "],[1,147,"- "],[1,159,"请求"],[-1,161,"请求"],[1,171,"\n\n"],[1,173,"s"],[-1,173,"\n"],[-1,176,"sp"],[1,190,"，m"],[-1,193,"my"],[1,214,"**"],[1,225,"Sp"],[-1,225,"\n\n"],[1,243,"."],[-1,243,"\n"],[-1,248,"客户"],[-1,256," "],[1,259," "],[1,274,"分发"],[-1,280,"分发"],[1,284,"\n\n"],[1,305,"2"],[-1,305,"\n"],[-1,310,"由 D"],[1,314," "],[-1,328," "],[1,331," "],[-1,334," "],[1,337," "],[1,349,"找到"],[-1,371,"找到"],[-1,378," "],[1,381," "],[-1,389,"；"],[1,391,"\n；3"],[-1,438,"Co"],[-1,448," "],[1,451," "],[-1,461," "],[1,464," "],[1,474,"\n\n"],[1,490,"4"],[-1,490,"\n"],[-1,495,"Di"],[1,507,"clvt"],[-1,507,"vlet "],[1,514," "],[-1,534," "],[1,537," "],[1,541,"\n5"],[-1,545,"视图"],[1,560,"!["],[1,621,"Sp"],[-1,621,"\n\n"],[-1,625,"Sp"],[-1,653,"**"],[1,657,"**"],[1,670,"["],[-1,671,"a"],[1,674,"]("],[-1,674,"中的"],[-1,697,"**"],[1,701,"**"],[1,772,"My"],[-1,774,"My"],[-1,852,"**"],[1,856,"**"],[1,915,"。在"],[-1,917,"。在"],[1,974,"**"],[-1,985,"\n要"],[1,996,"1."],[-1,998,"先写"],[1,1055,"2."],[-1,1057,"写M"],[1,1150,"3."],[-1,1152,"写M"],[-1,1166,"**"],[1,1170,"**"],[1,1195,"。\n"],[1,1197,"4."],[-1,1197,"。\n"],[-1,1201,"写S"],[-1,1216,"**"],[1,1220,"**"],[1,1250,"。\n"],[1,1252,"5.-"],[-1,1252,"。\n- 写"],[-1,1273,"**"],[1,1277,"**"],[1,1285,"，获"],[1,1287,"取"],[-1,1287,"，"],[-1,1290,"获取"],[-1,1345,"**"],[1,1349,"**6."],[-1,1350,"  写"],[1,1354," "],[1,1388,"=="],[-1,1390,"> "],[1,1399,"=="],[-1,1401,"> "],[1,1414,"=="],[-1,1416,"> "],[1,1425,"["],[-1,1426,"a"],[1,1429,"]("],[-1,1432,"> "],[1,1447,"=="],[-1,1449,"> "],[1,1467,"=="],[-1,1469,"> ."],[1,1474,".p. ==S"],[-1,1474,"p\n\n\n"],[1,1485,"p"],[-1,1485,"\n"],[-1,1488,"Sp"],[1,1515,"类似"],[-1,1517,"类似"],[1,1527,"解析"],[-1,1529,"解析"],[1,1538,"\nS"],[1,1540,"p"],[-1,1540,"\n"],[-1,1543,"Sp"],[1,1560,"管理"],[-1,1562,"管理"],[1,1577,"\nm"],[1,1579,"y"],[-1,1579,"\n"],[-1,1582,"my"],[-1,1601,"**"],[1,1605,"**"],[1,1608," "],[-1,1609,"数"],[1,1614," 起\n\n"],[-1,1614,"起来"],[-1,1619,"\n\n- "],[1,1625,"- "],[1,1641,"与 于"],[-1,1641,"于 S"],[1,1653,"Sp"],[-1,1655,"Sp"],[-1,1671,"："],[1,1674,"："],[-1,1694,"- "],[1,1698,"- "],[-1,1725,"- "],[1,1729,"- "],[-1,1859,"- "],[1,1863,"- "],[1,1885,"它允"],[-1,1887,"它允"],[-1,1920,"**"],[1,1924,"**"]],[1920,1920],[24,24]]],[1570881823104,["GJX@GJXAIOU",[[-1,1983,"**"]],[1985,1985],[1983,1983]]],[1570881824247,["GJX@GJXAIOU",[[-1,1999,"**"]],[2001,2001],[1999,1999]]],[1570881853456,["GJX@GJXAIOU",[[-1,2285,"\n"]],[2285,2285],[2284,2284]]],[1570881914251,[null,[[-1,24,"\n*原理*"],[1,29,"框架原理\n"],[-1,41,"**"],[1,43,"作用\n\n"],[1,46," "],[1,48,"是"],[-1,49,"是"],[-1,52," "],[1,69," "],[1,70," "],[-1,71," "],[-1,73," "],[1,79," "],[-1,81," "],[1,90," "],[-1,92," "],[1,94," "],[-1,96," "],[1,129," "],[-1,131," "],[1,135," "],[-1,137," "],[-1,141,"使用"],[1,145,"使用"],[-1,157,"请求"],[1,161,"请求"],[-1,169,"\n\n"],[-1,173,"s"],[1,174,"\n"],[1,176,"sp"],[-1,188,"，m"],[1,193,"my"],[-1,212,"**"],[-1,225,"Sp"],[1,227,"\n\n"],[-1,243,"."],[1,244,"\n"],[1,248,"客户"],[1,254," "],[-1,256," "],[-1,272,"分发"],[1,280,"分发"],[-1,282,"\n\n"],[-1,305,"2"],[1,306,"\n"],[-1,310,"i "],[1,312,"由 Di"],[1,326," "],[-1,328," "],[1,332," "],[-1,334," "],[-1,347,"找到"],[1,371,"找到"],[1,376," "],[-1,378," "],[-1,387,"\n\n；3"],[1,391,"；\n"],[1,438,"Co"],[1,446," "],[-1,448," "],[1,459," "],[-1,461," "],[-1,472,"\n\n"],[-1,490,"4"],[1,491,"\n"],[1,495,"Di"],[-1,505,"clvt"],[1,509,"vlet "],[-1,511," "],[1,532," "],[-1,534," "],[-1,539,"\n5"],[1,545,"视图"],[-1,560,"!["],[-1,621,"Sp"],[1,623,"\n\n"],[1,625,"Sp"],[-1,651,"它可"],[1,655,"它可"],[-1,668,"["],[1,670,"a"],[-1,672,"]("],[1,674,"中的"],[-1,695,"），"],[1,699,"），"],[1,770,"- "],[-1,772,"- "],[1,850,"**"],[-1,852,"**"],[-1,913,"。在"],[1,917,"。在"],[-1,972,"**"],[1,985,"\n要"],[-1,994,"1."],[1,998,"先写"],[-1,1053,"2."],[1,1057,"写M"],[-1,1148,"3."],[1,1152,"写M"],[-1,1164,"Ma"],[1,1168,"Ma"],[-1,1193,"。\n"],[-1,1197,"4."],[1,1199,"。\n"],[1,1201,"写S"],[1,1214,"**"],[-1,1216,"**"],[-1,1248,"。\n"],[-1,1252,"5.-"],[1,1255,"。\n- 写"],[1,1271,"**"],[-1,1273,"**"],[-1,1283,"，获"],[-1,1287,"取"],[1,1288,"，"],[1,1290,"获取"],[-1,1343,"。\n"],[-1,1347,"6.-J "],[1,1352,"。\n-  写J"],[-1,1386,"=="],[1,1390,"> "],[-1,1397,"=="],[1,1401,"> "],[-1,1412,"=="],[1,1416,"> "],[-1,1423,"["],[1,1425,"a"],[-1,1427,"]("],[1,1432,"> "],[-1,1445,"=="],[1,1449,"> "],[-1,1465,"=="],[1,1469,"> ."],[-1,1471,".p. ==S"],[1,1478,"p\n\n\n"],[-1,1485,"p"],[1,1486,"\n"],[1,1488,"Sp"],[1,1513,"2 "],[-1,1515,"2 "],[1,1525,"**"],[-1,1527,"**"],[-1,1536,"\nS"],[-1,1540,"p"],[1,1541,"\n"],[1,1543,"Sp"],[1,1558,"**"],[-1,1560,"**"],[-1,1575,"\nm"],[-1,1579,"y"],[1,1580,"\n"],[1,1582,"my"],[1,1599,"**"],[-1,1601,"**"],[-1,1606," "],[1,1608,"数"],[-1,1612," 起\n\n**；Sp"],[1,1621,"起来**；\n\n"],[1,1623,"Sp"],[-1,1639,"与 于"],[1,1642,"于 S"],[1,1651,"- "],[-1,1653,"- "],[1,1669,"："],[-1,1671,"："],[-1,1692,"my"],[1,1696,"my"],[1,1723,"- "],[-1,1725,"- "],[1,1857,"- "],[-1,1859,"- "],[-1,1883,"它允"],[1,1887,"它允"],[-1,1918,"，如"],[1,1922,"，如"],[-1,1981,"**"],[1,1983,"持久"],[-1,1997,"**"],[1,1999,"\n\n"],[-1,2283,"\n"],[1,2284," "]],[24,24],[2285,2285]]],[1570881914251,[null,[[1,24,"\n*原理*"],[-1,24,"框架原理\n"],[1,41,"**"],[-1,41,"作用\n\n"],[-1,48," "],[-1,51,"是"],[1,53,"是"],[1,55," "],[-1,71," "],[-1,73," "],[1,75," "],[1,76," "],[-1,81," "],[1,84," "],[-1,92," "],[1,95," "],[-1,96," "],[1,99," "],[-1,131," "],[1,134," "],[-1,137," "],[1,140," "],[1,143,"使用"],[-1,145,"使用"],[1,159,"请求"],[-1,161,"请求"],[1,171,"\n\n"],[1,173,"s"],[-1,173,"\n"],[-1,176,"sp"],[1,190,"，m"],[-1,193,"my"],[1,214,"**"],[1,225,"Sp"],[-1,225,"\n\n"],[1,243,"."],[-1,243,"\n"],[-1,248,"客户"],[-1,256," "],[1,259," "],[1,274,"分发"],[-1,280,"分发"],[1,284,"\n\n"],[1,305,"2"],[-1,305,"\n"],[1,310,"i "],[-1,310,"由 Di"],[-1,328," "],[1,331," "],[-1,334," "],[1,337," "],[1,349,"找到"],[-1,371,"找到"],[-1,378," "],[1,381," "],[1,389,"\n\n；3"],[-1,389,"；\n"],[-1,438,"Co"],[-1,448," "],[1,451," "],[-1,461," "],[1,464," "],[1,474,"\n\n"],[1,490,"4"],[-1,490,"\n"],[-1,495,"Di"],[1,507,"clvt"],[-1,507,"vlet "],[1,514," "],[-1,534," "],[1,537," "],[1,541,"\n5"],[-1,545,"视图"],[1,562,"!["],[1,621,"Sp"],[-1,621,"\n\n"],[-1,625,"Sp"],[1,653,"它可"],[-1,655,"它可"],[1,670,"["],[-1,671,"a"],[1,674,"]("],[-1,674,"中的"],[1,697,"），"],[-1,699,"），"],[-1,772,"- "],[1,776,"- "],[-1,852,"**"],[1,856,"**"],[1,915,"。在"],[-1,917,"。在"],[1,974,"**"],[-1,985,"\n要"],[1,996,"1."],[-1,998,"先写"],[1,1055,"2."],[-1,1057,"写M"],[1,1150,"3."],[-1,1152,"写M"],[1,1166,"Ma"],[-1,1168,"Ma"],[1,1195,"。\n"],[1,1197,"4."],[-1,1197,"。\n"],[-1,1201,"写S"],[-1,1216,"**"],[1,1220,"**"],[1,1250,"。\n"],[1,1252,"5.-"],[-1,1252,"。\n- 写"],[-1,1273,"**"],[1,1277,"**"],[1,1285,"，获"],[1,1287,"取"],[-1,1287,"，"],[-1,1290,"获取"],[1,1345,"。\n"],[1,1347,"6.-J "],[-1,1347,"。\n-  写J"],[1,1388,"=="],[-1,1390,"> "],[1,1399,"=="],[-1,1401,"> "],[1,1414,"=="],[-1,1416,"> "],[1,1425,"["],[-1,1426,"a"],[1,1429,"]("],[-1,1432,"> "],[1,1447,"=="],[-1,1449,"> "],[1,1467,"=="],[-1,1469,"> ."],[1,1474,".p. ==S"],[-1,1474,"p\n\n\n"],[1,1485,"p"],[-1,1485,"\n"],[-1,1488,"Sp"],[-1,1515,"2 "],[1,1519,"2 "],[-1,1527,"**"],[1,1531,"**"],[1,1538,"\nS"],[1,1540,"p"],[-1,1540,"\n"],[-1,1543,"Sp"],[-1,1560,"**"],[1,1564,"**"],[1,1577,"\nm"],[1,1579,"y"],[-1,1579,"\n"],[-1,1582,"my"],[-1,1601,"**"],[1,1605,"**"],[1,1608," "],[-1,1609,"数"],[1,1614," 起\n\n**；Sp"],[-1,1614,"起来**；\n\n"],[-1,1623,"Sp"],[1,1641,"与 于"],[-1,1641,"于 S"],[-1,1653,"- "],[1,1657,"- "],[-1,1671,"："],[1,1674,"："],[1,1694,"my"],[-1,1696,"my"],[-1,1725,"- "],[1,1729,"- "],[-1,1859,"- "],[1,1863,"- "],[1,1885,"它允"],[-1,1887,"它允"],[1,1920,"，如"],[-1,1922,"，如"],[1,1983,"**"],[-1,1983,"持久"],[1,1999,"**"],[-1,1999,"\n\n"],[1,2285,"\n"],[-1,2285," "]],[2285,2285],[24,24]]],[1570881855128,["GJX@GJXAIOU",[[-1,2229,"**"]],[2231,2231],[2229,2229]]],[1570881856183,["GJX@GJXAIOU",[[-1,2241,"**"]],[2243,2243],[2241,2241]]],[1570881860320,["GJX@GJXAIOU",[[-1,2469,"**"]],[2471,2471],[2469,2469]]],[1570881861210,["GJX@GJXAIOU",[[-1,2494,"**"]],[2496,2496],[2494,2494]]],[1570881864888,["GJX@GJXAIOU",[[-1,2543,"\n"]],[2543,2543],[2542,2542]]],[1570881867824,["GJX@GJXAIOU",[[-1,2702,"**"]],[2704,2704],[2702,2702]]],[1570881868560,["GJX@GJXAIOU",[[-1,2707,"**"]],[2709,2709],[2707,2707]]],[1570881873369,["GJX@GJXAIOU",[[-1,2771,"**"]],[2773,2773],[2771,2771]]],[1570881874160,["GJX@GJXAIOU",[[-1,2775,"**"]],[2777,2777],[2775,2775]]],[1570881885679,["GJX@GJXAIOU",[[-1,2982,"\n"]],[2982,2982],[2981,2981]]],[1570881895832,["GJX@GJXAIOU",[[-1,3160,"===================================================================================================================================="]],[3160,3292],[3160,3160]]],[1570881904057,["GJX@GJXAIOU",[[-1,3164,"   "]],[3167,3167],[3164,3164]]],[1570882034288,[null,[[-1,24,"\n*原理*"],[1,29,"框架原理\n"],[-1,41,"**"],[1,43,"作用\n\n"],[1,46," "],[1,48,"是"],[-1,49,"是"],[-1,52," "],[1,69," "],[1,70," "],[-1,71," "],[-1,73," "],[1,79," "],[-1,81," "],[1,90," "],[-1,92," "],[1,94," "],[-1,96," "],[1,129," "],[-1,131," "],[1,135," "],[-1,137," "],[-1,141,"使用"],[1,145,"使用"],[-1,157,"请求"],[1,161,"请求"],[-1,169,"\n\n"],[-1,173,"s"],[1,174,"\n"],[1,176,"sp"],[-1,188,"，m"],[1,193,"my"],[-1,212,"**"],[-1,225,"Sp"],[1,227,"\n\n"],[-1,243,"."],[1,244,"\n"],[1,248,"客户"],[1,254," "],[-1,256," "],[-1,272,"分发"],[1,280,"分发"],[-1,282,"\n\n"],[-1,305,"2"],[1,306,"\n"],[-1,310,"i "],[1,312,"由 Di"],[1,326," "],[-1,328," "],[1,332," "],[-1,334," "],[-1,347,"找到"],[1,371,"找到"],[1,376," "],[-1,378," "],[-1,387,"\n\n；3"],[1,391,"；\n"],[1,438,"Co"],[1,446," "],[-1,448," "],[1,459," "],[-1,461," "],[-1,472,"\n\n"],[-1,490,"4"],[1,491,"\n"],[1,495,"Di"],[-1,505,"clvt"],[1,509,"vlet "],[-1,511," "],[1,532," "],[-1,534," "],[-1,539,"\n5"],[1,545,"视图"],[-1,560,"!["],[-1,621,"Sp"],[1,623,"\n\n"],[1,625,"Sp"],[-1,651,"它可"],[1,655,"它可"],[-1,668,"["],[1,670,"a"],[-1,672,"]("],[1,674,"中的"],[-1,695,"），"],[1,699,"），"],[1,770,"- "],[-1,772,"- "],[1,850,"**"],[-1,852,"**"],[-1,913,"。在"],[1,917,"。在"],[-1,972,"**"],[1,985,"\n要"],[-1,994,"1."],[1,998,"先写"],[-1,1053,"2."],[1,1057,"写M"],[-1,1148,"3."],[1,1152,"写M"],[-1,1164,"Ma"],[1,1168,"Ma"],[-1,1193,"。\n"],[-1,1197,"4."],[1,1199,"。\n"],[1,1201,"写S"],[1,1214,"**"],[-1,1216,"**"],[-1,1248,"。\n"],[-1,1252,"5.-"],[1,1255,"。\n- 写"],[1,1271,"**"],[-1,1273,"**"],[-1,1283,"，获"],[-1,1287,"取"],[1,1288,"，"],[1,1290,"获取"],[-1,1343,"。\n"],[-1,1347,"6.-J "],[1,1352,"。\n-  写J"],[-1,1386,"=="],[1,1390,"> "],[-1,1397,"=="],[1,1401,"> "],[-1,1412,"=="],[1,1416,"> "],[-1,1423,"["],[1,1425,"a"],[-1,1427,"]("],[1,1432,"> "],[-1,1445,"=="],[1,1449,"> "],[-1,1465,"=="],[1,1469,"> ."],[-1,1471,".p. ==S"],[1,1478,"p\n\n\n"],[-1,1485,"p"],[1,1486,"\n"],[1,1488,"Sp"],[1,1513,"2 "],[-1,1515,"2 "],[1,1525,"**"],[-1,1527,"**"],[-1,1536,"\nS"],[-1,1540,"p"],[1,1541,"\n"],[1,1543,"Sp"],[1,1558,"**"],[-1,1560,"**"],[-1,1575,"\nm"],[-1,1579,"y"],[1,1580,"\n"],[1,1582,"my"],[1,1599,"**"],[-1,1601,"**"],[-1,1606," "],[1,1608,"数"],[-1,1612," 起\n\n**；Sp"],[1,1621,"起来**；\n\n"],[1,1623,"Sp"],[-1,1639,"与 于"],[1,1642,"于 S"],[1,1651,"- "],[-1,1653,"- "],[1,1669,"："],[-1,1671,"："],[-1,1692,"my"],[1,1696,"my"],[1,1723,"- "],[-1,1725,"- "],[1,1857,"- "],[-1,1859,"- "],[-1,1883,"它允"],[1,1887,"它允"],[-1,1918,"，如"],[1,1922,"，如"],[-1,1981,"**"],[1,1983,"持久"],[-1,1997,"**"],[1,1999,"\n\n"],[-1,2227,"**"],[1,2229,"业务"],[-1,2239,"**"],[1,2241,"\n\n"],[-1,2279,"\n"],[1,2280," "],[-1,2467,"**"],[1,2469,"表现"],[-1,2492,"**"],[1,2494,"\n\n"],[-1,2541,"\n"],[1,2542," "],[-1,2700,"**ew层**"],[1,2707,"View层\n\n"],[-1,2769,"**联系**"],[1,2775,"各层联系\n\n"],[-1,2980,"\n"],[1,2981," "],[-1,3158,"==**  "],[1,3164,"\n\n**最近"]],[24,24],[3170,3170]]],[1570882034288,[null,[[1,24,"\n*原理*"],[-1,24,"框架原理\n"],[1,41,"**"],[-1,41,"作用\n\n"],[-1,48," "],[-1,51,"是"],[1,53,"是"],[1,55," "],[-1,71," "],[-1,73," "],[1,75," "],[1,76," "],[-1,81," "],[1,84," "],[-1,92," "],[1,95," "],[-1,96," "],[1,99," "],[-1,131," "],[1,134," "],[-1,137," "],[1,140," "],[1,143,"使用"],[-1,145,"使用"],[1,159,"请求"],[-1,161,"请求"],[1,171,"\n\n"],[1,173,"s"],[-1,173,"\n"],[-1,176,"sp"],[1,190,"，m"],[-1,193,"my"],[1,214,"**"],[1,225,"Sp"],[-1,225,"\n\n"],[1,243,"."],[-1,243,"\n"],[-1,248,"客户"],[-1,256," "],[1,259," "],[1,274,"分发"],[-1,280,"分发"],[1,284,"\n\n"],[1,305,"2"],[-1,305,"\n"],[1,310,"i "],[-1,310,"由 Di"],[-1,328," "],[1,331," "],[-1,334," "],[1,337," "],[1,349,"找到"],[-1,371,"找到"],[-1,378," "],[1,381," "],[1,389,"\n\n；3"],[-1,389,"；\n"],[-1,438,"Co"],[-1,448," "],[1,451," "],[-1,461," "],[1,464," "],[1,474,"\n\n"],[1,490,"4"],[-1,490,"\n"],[-1,495,"Di"],[1,507,"clvt"],[-1,507,"vlet "],[1,514," "],[-1,534," "],[1,537," "],[1,541,"\n5"],[-1,545,"视图"],[1,562,"!["],[1,621,"Sp"],[-1,621,"\n\n"],[-1,625,"Sp"],[1,653,"它可"],[-1,655,"它可"],[1,670,"["],[-1,671,"a"],[1,674,"]("],[-1,674,"中的"],[1,697,"），"],[-1,699,"），"],[-1,772,"- "],[1,776,"- "],[-1,852,"**"],[1,856,"**"],[1,915,"。在"],[-1,917,"。在"],[1,974,"**"],[-1,985,"\n要"],[1,996,"1."],[-1,998,"先写"],[1,1055,"2."],[-1,1057,"写M"],[1,1150,"3."],[-1,1152,"写M"],[1,1166,"Ma"],[-1,1168,"Ma"],[1,1195,"。\n"],[1,1197,"4."],[-1,1197,"。\n"],[-1,1201,"写S"],[-1,1216,"**"],[1,1220,"**"],[1,1250,"。\n"],[1,1252,"5.-"],[-1,1252,"。\n- 写"],[-1,1273,"**"],[1,1277,"**"],[1,1285,"，获"],[1,1287,"取"],[-1,1287,"，"],[-1,1290,"获取"],[1,1345,"。\n"],[1,1347,"6.-J "],[-1,1347,"。\n-  写J"],[1,1388,"=="],[-1,1390,"> "],[1,1399,"=="],[-1,1401,"> "],[1,1414,"=="],[-1,1416,"> "],[1,1425,"["],[-1,1426,"a"],[1,1429,"]("],[-1,1432,"> "],[1,1447,"=="],[-1,1449,"> "],[1,1467,"=="],[-1,1469,"> ."],[1,1474,".p. ==S"],[-1,1474,"p\n\n\n"],[1,1485,"p"],[-1,1485,"\n"],[-1,1488,"Sp"],[-1,1515,"2 "],[1,1519,"2 "],[-1,1527,"**"],[1,1531,"**"],[1,1538,"\nS"],[1,1540,"p"],[-1,1540,"\n"],[-1,1543,"Sp"],[-1,1560,"**"],[1,1564,"**"],[1,1577,"\nm"],[1,1579,"y"],[-1,1579,"\n"],[-1,1582,"my"],[-1,1601,"**"],[1,1605,"**"],[1,1608," "],[-1,1609,"数"],[1,1614," 起\n\n**；Sp"],[-1,1614,"起来**；\n\n"],[-1,1623,"Sp"],[1,1641,"与 于"],[-1,1641,"于 S"],[-1,1653,"- "],[1,1657,"- "],[-1,1671,"："],[1,1674,"："],[1,1694,"my"],[-1,1696,"my"],[-1,1725,"- "],[1,1729,"- "],[-1,1859,"- "],[1,1863,"- "],[1,1885,"它允"],[-1,1887,"它允"],[1,1920,"，如"],[-1,1922,"，如"],[1,1983,"**"],[-1,1983,"持久"],[1,1999,"**"],[-1,1999,"\n\n"],[1,2229,"**"],[-1,2229,"业务"],[1,2241,"**"],[-1,2241,"\n\n"],[1,2281,"\n"],[-1,2281," "],[1,2469,"**"],[-1,2469,"表现"],[1,2494,"**"],[-1,2494,"\n\n"],[1,2543,"\n"],[-1,2543," "],[1,2702,"**ew层**"],[-1,2702,"View层\n\n"],[1,2771,"**联系**"],[-1,2771,"各层联系\n\n"],[1,2982,"\n"],[-1,2982," "],[1,3160,"==**  "],[-1,3160,"\n\n**最近"]],[3170,3170],[24,24]]],[1570881998408,["GJX@GJXAIOU",[[1,623,"\n"]],[622,622],[623,623]]],[1570881998555,["GJX@GJXAIOU",[[1,624,"\n"]],[623,623],[624,624]]],[1570881998672,["GJX@GJXAIOU",[[1,625,"\n"]],[624,624],[625,625]]],[1570881998793,["GJX@GJXAIOU",[[1,626,"\n"]],[625,625],[626,626]]],[1570881998914,["GJX@GJXAIOU",[[1,627,"\n"]],[626,626],[627,627]]],[1570881999024,["GJX@GJXAIOU",[[1,628,"\n"]],[627,627],[628,628]]],[1570881999151,["GJX@GJXAIOU",[[1,629,"\n"]],[628,628],[629,629]]],[1570882002588,["GJX@GJXAIOU",[[1,623,"****"]],[623,623],[625,625]]],[1570882005851,["GJX@GJXAIOU",[[1,625,"上面补充："]],[625,625],[630,630]]],[1570882007984,["GJX@GJXAIOU",[[1,639,"\n"]],[632,632],[633,633]]],[1570882014267,["GJX@GJXAIOU",[[1,633,"- 拦截器：拦截器"]],[633,633],[642,642]]],[1570882154285,[null,[[-1,24,"\n*原理*"],[1,29,"框架原理\n"],[-1,41,"**"],[1,43,"作用\n\n"],[1,46," "],[1,48,"是"],[-1,49,"是"],[-1,52," "],[1,69," "],[1,70," "],[-1,71," "],[-1,73," "],[1,79," "],[-1,81," "],[1,90," "],[-1,92," "],[1,94," "],[-1,96," "],[1,129," "],[-1,131," "],[1,135," "],[-1,137," "],[-1,141,"使用"],[1,145,"使用"],[-1,157,"请求"],[1,161,"请求"],[-1,169,"\n\n"],[-1,173,"s"],[1,174,"\n"],[1,176,"sp"],[-1,188,"，m"],[1,193,"my"],[-1,212,"**"],[-1,225,"Sp"],[1,227,"\n\n"],[-1,243,"."],[1,244,"\n"],[1,248,"客户"],[1,254," "],[-1,256," "],[-1,272,"分发"],[1,280,"分发"],[-1,282,"\n\n"],[-1,305,"2"],[1,306,"\n"],[-1,310,"i "],[1,312,"由 Di"],[1,326," "],[-1,328," "],[1,332," "],[-1,334," "],[-1,347,"找到"],[1,371,"找到"],[1,376," "],[-1,378," "],[-1,387,"\n\n；3"],[1,391,"；\n"],[1,438,"Co"],[1,446," "],[-1,448," "],[1,459," "],[-1,461," "],[-1,472,"\n\n"],[-1,490,"4"],[1,491,"\n"],[1,495,"Di"],[-1,505,"clvt"],[1,509,"vlet "],[-1,511," "],[1,532," "],[-1,534," "],[-1,539,"\n5"],[1,545,"视图"],[-1,560,"!["],[-1,621,"Sp"],[1,623,"\n\n"],[1,651,"Sp"],[-1,677,"它可"],[1,681,"它可"],[-1,694,"["],[1,696,"a"],[-1,698,"]("],[1,700,"中的"],[-1,721,"），"],[1,725,"），"],[1,796,"- "],[-1,798,"- "],[1,876,"**"],[-1,878,"**"],[-1,939,"。在"],[1,943,"。在"],[-1,998,"**"],[1,1011,"\n要"],[-1,1020,"1."],[1,1024,"先写"],[-1,1079,"2."],[1,1083,"写M"],[-1,1174,"3."],[1,1178,"写M"],[-1,1190,"Ma"],[1,1194,"Ma"],[-1,1219,"。\n"],[-1,1223,"4."],[1,1225,"。\n"],[1,1227,"写S"],[1,1240,"**"],[-1,1242,"**"],[-1,1274,"。\n"],[-1,1278,"5.-"],[1,1281,"。\n- 写"],[1,1297,"**"],[-1,1299,"**"],[-1,1309,"，获"],[-1,1313,"取"],[1,1314,"，"],[1,1316,"获取"],[-1,1369,"。\n"],[-1,1373,"6.-J "],[1,1378,"。\n-  写J"],[-1,1412,"=="],[1,1416,"> "],[-1,1423,"=="],[1,1427,"> "],[-1,1438,"=="],[1,1442,"> "],[-1,1449,"["],[1,1451,"a"],[-1,1453,"]("],[1,1458,"> "],[-1,1471,"=="],[1,1475,"> "],[-1,1491,"=="],[1,1495,"> ."],[-1,1497,".p. ==S"],[1,1504,"p\n\n\n"],[-1,1511,"p"],[1,1512,"\n"],[1,1514,"Sp"],[1,1539,"2 "],[-1,1541,"2 "],[1,1551,"**"],[-1,1553,"**"],[-1,1562,"\nS"],[-1,1566,"p"],[1,1567,"\n"],[1,1569,"Sp"],[1,1584,"**"],[-1,1586,"**"],[-1,1601,"\nm"],[-1,1605,"y"],[1,1606,"\n"],[1,1608,"my"],[1,1625,"**"],[-1,1627,"**"],[-1,1632," "],[1,1634,"数"],[-1,1638," 起\n\n**；Sp"],[1,1647,"起来**；\n\n"],[1,1649,"Sp"],[-1,1665,"与 于"],[1,1668,"于 S"],[1,1677,"- "],[-1,1679,"- "],[1,1695,"："],[-1,1697,"："],[-1,1718,"my"],[1,1722,"my"],[1,1749,"- "],[-1,1751,"- "],[1,1883,"- "],[-1,1885,"- "],[-1,1909,"它允"],[1,1913,"它允"],[-1,1944,"，如"],[1,1948,"，如"],[-1,2007,"**"],[1,2009,"持久"],[-1,2023,"**"],[1,2025,"\n\n"],[-1,2253,"**"],[1,2255,"业务"],[-1,2265,"**"],[1,2267,"\n\n"],[-1,2305,"\n"],[1,2306," "],[-1,2493,"**"],[1,2495,"表现"],[-1,2518,"**"],[1,2520,"\n\n"],[-1,2567,"\n"],[1,2568," "],[-1,2726,"**ew层**"],[1,2733,"View层\n\n"],[-1,2795,"**联系**"],[1,2801,"各层联系\n\n"],[-1,3006,"\n"],[1,3007," "],[-1,3184,"==**  "],[1,3190,"\n\n**最近"]],[24,24],[3196,3196]]],[1570882154285,[null,[[1,24,"\n*原理*"],[-1,24,"框架原理\n"],[1,41,"**"],[-1,41,"作用\n\n"],[-1,48," "],[-1,51,"是"],[1,53,"是"],[1,55," "],[-1,71," "],[-1,73," "],[1,75," "],[1,76," "],[-1,81," "],[1,84," "],[-1,92," "],[1,95," "],[-1,96," "],[1,99," "],[-1,131," "],[1,134," "],[-1,137," "],[1,140," "],[1,143,"使用"],[-1,145,"使用"],[1,159,"请求"],[-1,161,"请求"],[1,171,"\n\n"],[1,173,"s"],[-1,173,"\n"],[-1,176,"sp"],[1,190,"，m"],[-1,193,"my"],[1,214,"**"],[1,225,"Sp"],[-1,225,"\n\n"],[1,243,"."],[-1,243,"\n"],[-1,248,"客户"],[-1,256," "],[1,259," "],[1,274,"分发"],[-1,280,"分发"],[1,284,"\n\n"],[1,305,"2"],[-1,305,"\n"],[1,310,"i "],[-1,310,"由 Di"],[-1,328," "],[1,331," "],[-1,334," "],[1,337," "],[1,349,"找到"],[-1,371,"找到"],[-1,378," "],[1,381," "],[1,389,"\n\n；3"],[-1,389,"；\n"],[-1,438,"Co"],[-1,448," "],[1,451," "],[-1,461," "],[1,464," "],[1,474,"\n\n"],[1,490,"4"],[-1,490,"\n"],[-1,495,"Di"],[1,507,"clvt"],[-1,507,"vlet "],[1,514," "],[-1,534," "],[1,537," "],[1,541,"\n5"],[-1,545,"视图"],[1,562,"!["],[1,621,"Sp"],[-1,621,"\n\n"],[-1,651,"Sp"],[1,679,"它可"],[-1,681,"它可"],[1,696,"["],[-1,697,"a"],[1,700,"]("],[-1,700,"中的"],[1,723,"），"],[-1,725,"），"],[-1,798,"- "],[1,802,"- "],[-1,878,"**"],[1,882,"**"],[1,941,"。在"],[-1,943,"。在"],[1,1000,"**"],[-1,1011,"\n要"],[1,1022,"1."],[-1,1024,"先写"],[1,1081,"2."],[-1,1083,"写M"],[1,1176,"3."],[-1,1178,"写M"],[1,1192,"Ma"],[-1,1194,"Ma"],[1,1221,"。\n"],[1,1223,"4."],[-1,1223,"。\n"],[-1,1227,"写S"],[-1,1242,"**"],[1,1246,"**"],[1,1276,"。\n"],[1,1278,"5.-"],[-1,1278,"。\n- 写"],[-1,1299,"**"],[1,1303,"**"],[1,1311,"，获"],[1,1313,"取"],[-1,1313,"，"],[-1,1316,"获取"],[1,1371,"。\n"],[1,1373,"6.-J "],[-1,1373,"。\n-  写J"],[1,1414,"=="],[-1,1416,"> "],[1,1425,"=="],[-1,1427,"> "],[1,1440,"=="],[-1,1442,"> "],[1,1451,"["],[-1,1452,"a"],[1,1455,"]("],[-1,1458,"> "],[1,1473,"=="],[-1,1475,"> "],[1,1493,"=="],[-1,1495,"> ."],[1,1500,".p. ==S"],[-1,1500,"p\n\n\n"],[1,1511,"p"],[-1,1511,"\n"],[-1,1514,"Sp"],[-1,1541,"2 "],[1,1545,"2 "],[-1,1553,"**"],[1,1557,"**"],[1,1564,"\nS"],[1,1566,"p"],[-1,1566,"\n"],[-1,1569,"Sp"],[-1,1586,"**"],[1,1590,"**"],[1,1603,"\nm"],[1,1605,"y"],[-1,1605,"\n"],[-1,1608,"my"],[-1,1627,"**"],[1,1631,"**"],[1,1634," "],[-1,1635,"数"],[1,1640," 起\n\n**；Sp"],[-1,1640,"起来**；\n\n"],[-1,1649,"Sp"],[1,1667,"与 于"],[-1,1667,"于 S"],[-1,1679,"- "],[1,1683,"- "],[-1,1697,"："],[1,1700,"："],[1,1720,"my"],[-1,1722,"my"],[-1,1751,"- "],[1,1755,"- "],[-1,1885,"- "],[1,1889,"- "],[1,1911,"它允"],[-1,1913,"它允"],[1,1946,"，如"],[-1,1948,"，如"],[1,2009,"**"],[-1,2009,"持久"],[1,2025,"**"],[-1,2025,"\n\n"],[1,2255,"**"],[-1,2255,"业务"],[1,2267,"**"],[-1,2267,"\n\n"],[1,2307,"\n"],[-1,2307," "],[1,2495,"**"],[-1,2495,"表现"],[1,2520,"**"],[-1,2520,"\n\n"],[1,2569,"\n"],[-1,2569," "],[1,2728,"**ew层**"],[-1,2728,"View层\n\n"],[1,2797,"**联系**"],[-1,2797,"各层联系\n\n"],[1,3008,"\n"],[-1,3008," "],[1,3186,"==**  "],[-1,3186,"\n\n**最近"]],[3196,3196],[24,24]]],[1570882112245,["GJX@GJXAIOU",[[1,642,"主要是在 SpringMVC的"]],[642,642],[657,657]]],[1570882112274,["GJX@GJXAIOU",[[1,656," "]],[657,657],[658,658]]],[1570882118811,["GJX@GJXAIOU",[[1,658," controller处理"]],[658,658],[671,671]]],[1570882118841,["GJX@GJXAIOU",[[1,669," "]],[671,671],[672,672]]],[1570882147465,["GJX@GJXAIOU",[[1,672,"请求之前，对请求做一些处理，"]],[672,672],[686,686]]],[1570882214284,[null,[[-1,24,"\n*原理*"],[1,29,"框架原理\n"],[-1,41,"**"],[1,43,"作用\n\n"],[1,46," "],[1,48,"是"],[-1,49,"是"],[-1,52," "],[1,69," "],[1,70," "],[-1,71," "],[-1,73," "],[1,79," "],[-1,81," "],[1,90," "],[-1,92," "],[1,94," "],[-1,96," "],[1,129," "],[-1,131," "],[1,135," "],[-1,137," "],[-1,141,"使用"],[1,145,"使用"],[-1,157,"请求"],[1,161,"请求"],[-1,169,"\n\n"],[-1,173,"s"],[1,174,"\n"],[1,176,"sp"],[-1,188,"，m"],[1,193,"my"],[-1,212,"**"],[-1,225,"Sp"],[1,227,"\n\n"],[-1,243,"."],[1,244,"\n"],[1,248,"客户"],[1,254," "],[-1,256," "],[-1,272,"分发"],[1,280,"分发"],[-1,282,"\n\n"],[-1,305,"2"],[1,306,"\n"],[-1,310,"i "],[1,312,"由 Di"],[1,326," "],[-1,328," "],[1,332," "],[-1,334," "],[-1,347,"找到"],[1,371,"找到"],[1,376," "],[-1,378," "],[-1,387,"\n\n；3"],[1,391,"；\n"],[1,438,"Co"],[1,446," "],[-1,448," "],[1,459," "],[-1,461," "],[-1,472,"\n\n"],[-1,490,"4"],[1,491,"\n"],[1,495,"Di"],[-1,505,"clvt"],[1,509,"vlet "],[-1,511," "],[1,532," "],[-1,534," "],[-1,539,"\n5"],[1,545,"视图"],[-1,560,"!["],[-1,621,"Sp"],[1,623,"\n\n"],[1,695,"Sp"],[-1,721,"它可"],[1,725,"它可"],[-1,738,"["],[1,740,"a"],[-1,742,"]("],[1,744,"中的"],[-1,765,"），"],[1,769,"），"],[1,840,"- "],[-1,842,"- "],[1,920,"**"],[-1,922,"**"],[-1,983,"。在"],[1,987,"。在"],[-1,1042,"**"],[1,1055,"\n要"],[-1,1064,"1."],[1,1068,"先写"],[-1,1123,"2."],[1,1127,"写M"],[-1,1218,"3."],[1,1222,"写M"],[-1,1234,"Ma"],[1,1238,"Ma"],[-1,1263,"。\n"],[-1,1267,"4."],[1,1269,"。\n"],[1,1271,"写S"],[1,1284,"**"],[-1,1286,"**"],[-1,1318,"。\n"],[-1,1322,"5.-"],[1,1325,"。\n- 写"],[1,1341,"**"],[-1,1343,"**"],[-1,1353,"，获"],[-1,1357,"取"],[1,1358,"，"],[1,1360,"获取"],[-1,1413,"。\n"],[-1,1417,"6.-J "],[1,1422,"。\n-  写J"],[-1,1456,"=="],[1,1460,"> "],[-1,1467,"=="],[1,1471,"> "],[-1,1482,"=="],[1,1486,"> "],[-1,1493,"["],[1,1495,"a"],[-1,1497,"]("],[1,1502,"> "],[-1,1515,"=="],[1,1519,"> "],[-1,1535,"=="],[1,1539,"> ."],[-1,1541,".p. ==S"],[1,1548,"p\n\n\n"],[-1,1555,"p"],[1,1556,"\n"],[1,1558,"Sp"],[1,1583,"2 "],[-1,1585,"2 "],[1,1595,"**"],[-1,1597,"**"],[-1,1606,"\nS"],[-1,1610,"p"],[1,1611,"\n"],[1,1613,"Sp"],[1,1628,"**"],[-1,1630,"**"],[-1,1645,"\nm"],[-1,1649,"y"],[1,1650,"\n"],[1,1652,"my"],[1,1669,"**"],[-1,1671,"**"],[-1,1676," "],[1,1678,"数"],[-1,1682," 起\n\n**；Sp"],[1,1691,"起来**；\n\n"],[1,1693,"Sp"],[-1,1709,"与 于"],[1,1712,"于 S"],[1,1721,"- "],[-1,1723,"- "],[1,1739,"："],[-1,1741,"："],[-1,1762,"my"],[1,1766,"my"],[1,1793,"- "],[-1,1795,"- "],[1,1927,"- "],[-1,1929,"- "],[-1,1953,"它允"],[1,1957,"它允"],[-1,1988,"，如"],[1,1992,"，如"],[-1,2051,"**"],[1,2053,"持久"],[-1,2067,"**"],[1,2069,"\n\n"],[-1,2297,"**"],[1,2299,"业务"],[-1,2309,"**"],[1,2311,"\n\n"],[-1,2349,"\n"],[1,2350," "],[-1,2537,"**"],[1,2539,"表现"],[-1,2562,"**"],[1,2564,"\n\n"],[-1,2611,"\n"],[1,2612," "],[-1,2770,"**ew层**"],[1,2777,"View层\n\n"],[-1,2839,"**联系**"],[1,2845,"各层联系\n\n"],[-1,3050,"\n"],[1,3051," "],[-1,3228,"==**  "],[1,3234,"\n\n**最近"]],[24,24],[3240,3240]]],[1570882214284,[null,[[1,24,"\n*原理*"],[-1,24,"框架原理\n"],[1,41,"**"],[-1,41,"作用\n\n"],[-1,48," "],[-1,51,"是"],[1,53,"是"],[1,55," "],[-1,71," "],[-1,73," "],[1,75," "],[1,76," "],[-1,81," "],[1,84," "],[-1,92," "],[1,95," "],[-1,96," "],[1,99," "],[-1,131," "],[1,134," "],[-1,137," "],[1,140," "],[1,143,"使用"],[-1,145,"使用"],[1,159,"请求"],[-1,161,"请求"],[1,171,"\n\n"],[1,173,"s"],[-1,173,"\n"],[-1,176,"sp"],[1,190,"，m"],[-1,193,"my"],[1,214,"**"],[1,225,"Sp"],[-1,225,"\n\n"],[1,243,"."],[-1,243,"\n"],[-1,248,"客户"],[-1,256," "],[1,259," "],[1,274,"分发"],[-1,280,"分发"],[1,284,"\n\n"],[1,305,"2"],[-1,305,"\n"],[1,310,"i "],[-1,310,"由 Di"],[-1,328," "],[1,331," "],[-1,334," "],[1,337," "],[1,349,"找到"],[-1,371,"找到"],[-1,378," "],[1,381," "],[1,389,"\n\n；3"],[-1,389,"；\n"],[-1,438,"Co"],[-1,448," "],[1,451," "],[-1,461," "],[1,464," "],[1,474,"\n\n"],[1,490,"4"],[-1,490,"\n"],[-1,495,"Di"],[1,507,"clvt"],[-1,507,"vlet "],[1,514," "],[-1,534," "],[1,537," "],[1,541,"\n5"],[-1,545,"视图"],[1,562,"!["],[1,621,"Sp"],[-1,621,"\n\n"],[-1,695,"Sp"],[1,723,"它可"],[-1,725,"它可"],[1,740,"["],[-1,741,"a"],[1,744,"]("],[-1,744,"中的"],[1,767,"），"],[-1,769,"），"],[-1,842,"- "],[1,846,"- "],[-1,922,"**"],[1,926,"**"],[1,985,"。在"],[-1,987,"。在"],[1,1044,"**"],[-1,1055,"\n要"],[1,1066,"1."],[-1,1068,"先写"],[1,1125,"2."],[-1,1127,"写M"],[1,1220,"3."],[-1,1222,"写M"],[1,1236,"Ma"],[-1,1238,"Ma"],[1,1265,"。\n"],[1,1267,"4."],[-1,1267,"。\n"],[-1,1271,"写S"],[-1,1286,"**"],[1,1290,"**"],[1,1320,"。\n"],[1,1322,"5.-"],[-1,1322,"。\n- 写"],[-1,1343,"**"],[1,1347,"**"],[1,1355,"，获"],[1,1357,"取"],[-1,1357,"，"],[-1,1360,"获取"],[1,1415,"。\n"],[1,1417,"6.-J "],[-1,1417,"。\n-  写J"],[1,1458,"=="],[-1,1460,"> "],[1,1469,"=="],[-1,1471,"> "],[1,1484,"=="],[-1,1486,"> "],[1,1495,"["],[-1,1496,"a"],[1,1499,"]("],[-1,1502,"> "],[1,1517,"=="],[-1,1519,"> "],[1,1537,"=="],[-1,1539,"> ."],[1,1544,".p. ==S"],[-1,1544,"p\n\n\n"],[1,1555,"p"],[-1,1555,"\n"],[-1,1558,"Sp"],[-1,1585,"2 "],[1,1589,"2 "],[-1,1597,"**"],[1,1601,"**"],[1,1608,"\nS"],[1,1610,"p"],[-1,1610,"\n"],[-1,1613,"Sp"],[-1,1630,"**"],[1,1634,"**"],[1,1647,"\nm"],[1,1649,"y"],[-1,1649,"\n"],[-1,1652,"my"],[-1,1671,"**"],[1,1675,"**"],[1,1678," "],[-1,1679,"数"],[1,1684," 起\n\n**；Sp"],[-1,1684,"起来**；\n\n"],[-1,1693,"Sp"],[1,1711,"与 于"],[-1,1711,"于 S"],[-1,1723,"- "],[1,1727,"- "],[-1,1741,"："],[1,1744,"："],[1,1764,"my"],[-1,1766,"my"],[-1,1795,"- "],[1,1799,"- "],[-1,1929,"- "],[1,1933,"- "],[1,1955,"它允"],[-1,1957,"它允"],[1,1990,"，如"],[-1,1992,"，如"],[1,2053,"**"],[-1,2053,"持久"],[1,2069,"**"],[-1,2069,"\n\n"],[1,2299,"**"],[-1,2299,"业务"],[1,2311,"**"],[-1,2311,"\n\n"],[1,2351,"\n"],[-1,2351," "],[1,2539,"**"],[-1,2539,"表现"],[1,2564,"**"],[-1,2564,"\n\n"],[1,2613,"\n"],[-1,2613," "],[1,2772,"**ew层**"],[-1,2772,"View层\n\n"],[1,2841,"**联系**"],[-1,2841,"各层联系\n\n"],[1,3052,"\n"],[-1,3052," "],[1,3230,"==**  "],[-1,3230,"\n\n**最近"]],[3240,3240],[24,24]]],[1570882210545,["GJX@GJXAIOU",[[1,686,"拦截器拦截的是 Controller"]],[686,686],[704,704]]],[1570882274290,[null,[[-1,24,"\n*原理*"],[1,29,"框架原理\n"],[-1,41,"**"],[1,43,"作用\n\n"],[1,46," "],[1,48,"是"],[-1,49,"是"],[-1,52," "],[1,69," "],[1,70," "],[-1,71," "],[-1,73," "],[1,79," "],[-1,81," "],[1,90," "],[-1,92," "],[1,94," "],[-1,96," "],[1,129," "],[-1,131," "],[1,135," "],[-1,137," "],[-1,141,"使用"],[1,145,"使用"],[-1,157,"请求"],[1,161,"请求"],[-1,169,"\n\n"],[-1,173,"s"],[1,174,"\n"],[1,176,"sp"],[-1,188,"，m"],[1,193,"my"],[-1,212,"**"],[-1,225,"Sp"],[1,227,"\n\n"],[-1,243,"."],[1,244,"\n"],[1,248,"客户"],[1,254," "],[-1,256," "],[-1,272,"分发"],[1,280,"分发"],[-1,282,"\n\n"],[-1,305,"2"],[1,306,"\n"],[-1,310,"i "],[1,312,"由 Di"],[1,326," "],[-1,328," "],[1,332," "],[-1,334," "],[-1,347,"找到"],[1,371,"找到"],[1,376," "],[-1,378," "],[-1,387,"\n\n；3"],[1,391,"；\n"],[1,438,"Co"],[1,446," "],[-1,448," "],[1,459," "],[-1,461," "],[-1,472,"\n\n"],[-1,490,"4"],[1,491,"\n"],[1,495,"Di"],[-1,505,"clvt"],[1,509,"vlet "],[-1,511," "],[1,532," "],[-1,534," "],[-1,539,"\n5"],[1,545,"视图"],[-1,560,"!["],[-1,621,"Sp"],[1,623,"\n\n"],[1,713,"Sp"],[-1,739,"它可"],[1,743,"它可"],[-1,756,"["],[1,758,"a"],[-1,760,"]("],[1,762,"中的"],[-1,783,"），"],[1,787,"），"],[1,858,"- "],[-1,860,"- "],[1,938,"**"],[-1,940,"**"],[-1,1001,"。在"],[1,1005,"。在"],[-1,1060,"**"],[1,1073,"\n要"],[-1,1082,"1."],[1,1086,"先写"],[-1,1141,"2."],[1,1145,"写M"],[-1,1236,"3."],[1,1240,"写M"],[-1,1252,"Ma"],[1,1256,"Ma"],[-1,1281,"。\n"],[-1,1285,"4."],[1,1287,"。\n"],[1,1289,"写S"],[1,1302,"**"],[-1,1304,"**"],[-1,1336,"。\n"],[-1,1340,"5.-"],[1,1343,"。\n- 写"],[1,1359,"**"],[-1,1361,"**"],[-1,1371,"，获"],[-1,1375,"取"],[1,1376,"，"],[1,1378,"获取"],[-1,1431,"。\n"],[-1,1435,"6.-J "],[1,1440,"。\n-  写J"],[-1,1474,"=="],[1,1478,"> "],[-1,1485,"=="],[1,1489,"> "],[-1,1500,"=="],[1,1504,"> "],[-1,1511,"["],[1,1513,"a"],[-1,1515,"]("],[1,1520,"> "],[-1,1533,"=="],[1,1537,"> "],[-1,1553,"=="],[1,1557,"> ."],[-1,1559,".p. ==S"],[1,1566,"p\n\n\n"],[-1,1573,"p"],[1,1574,"\n"],[1,1576,"Sp"],[1,1601,"2 "],[-1,1603,"2 "],[1,1613,"**"],[-1,1615,"**"],[-1,1624,"\nS"],[-1,1628,"p"],[1,1629,"\n"],[1,1631,"Sp"],[1,1646,"**"],[-1,1648,"**"],[-1,1663,"\nm"],[-1,1667,"y"],[1,1668,"\n"],[1,1670,"my"],[1,1687,"**"],[-1,1689,"**"],[-1,1694," "],[1,1696,"数"],[-1,1700," 起\n\n**；Sp"],[1,1709,"起来**；\n\n"],[1,1711,"Sp"],[-1,1727,"与 于"],[1,1730,"于 S"],[1,1739,"- "],[-1,1741,"- "],[1,1757,"："],[-1,1759,"："],[-1,1780,"my"],[1,1784,"my"],[1,1811,"- "],[-1,1813,"- "],[1,1945,"- "],[-1,1947,"- "],[-1,1971,"它允"],[1,1975,"它允"],[-1,2006,"，如"],[1,2010,"，如"],[-1,2069,"**"],[1,2071,"持久"],[-1,2085,"**"],[1,2087,"\n\n"],[-1,2315,"**"],[1,2317,"业务"],[-1,2327,"**"],[1,2329,"\n\n"],[-1,2367,"\n"],[1,2368," "],[-1,2555,"**"],[1,2557,"表现"],[-1,2580,"**"],[1,2582,"\n\n"],[-1,2629,"\n"],[1,2630," "],[-1,2788,"**ew层**"],[1,2795,"View层\n\n"],[-1,2857,"**联系**"],[1,2863,"各层联系\n\n"],[-1,3068,"\n"],[1,3069," "],[-1,3246,"==**  "],[1,3252,"\n\n**最近"]],[24,24],[3258,3258]]],[1570882274290,[null,[[1,24,"\n*原理*"],[-1,24,"框架原理\n"],[1,41,"**"],[-1,41,"作用\n\n"],[-1,48," "],[-1,51,"是"],[1,53,"是"],[1,55," "],[-1,71," "],[-1,73," "],[1,75," "],[1,76," "],[-1,81," "],[1,84," "],[-1,92," "],[1,95," "],[-1,96," "],[1,99," "],[-1,131," "],[1,134," "],[-1,137," "],[1,140," "],[1,143,"使用"],[-1,145,"使用"],[1,159,"请求"],[-1,161,"请求"],[1,171,"\n\n"],[1,173,"s"],[-1,173,"\n"],[-1,176,"sp"],[1,190,"，m"],[-1,193,"my"],[1,214,"**"],[1,225,"Sp"],[-1,225,"\n\n"],[1,243,"."],[-1,243,"\n"],[-1,248,"客户"],[-1,256," "],[1,259," "],[1,274,"分发"],[-1,280,"分发"],[1,284,"\n\n"],[1,305,"2"],[-1,305,"\n"],[1,310,"i "],[-1,310,"由 Di"],[-1,328," "],[1,331," "],[-1,334," "],[1,337," "],[1,349,"找到"],[-1,371,"找到"],[-1,378," "],[1,381," "],[1,389,"\n\n；3"],[-1,389,"；\n"],[-1,438,"Co"],[-1,448," "],[1,451," "],[-1,461," "],[1,464," "],[1,474,"\n\n"],[1,490,"4"],[-1,490,"\n"],[-1,495,"Di"],[1,507,"clvt"],[-1,507,"vlet "],[1,514," "],[-1,534," "],[1,537," "],[1,541,"\n5"],[-1,545,"视图"],[1,562,"!["],[1,621,"Sp"],[-1,621,"\n\n"],[-1,713,"Sp"],[1,741,"它可"],[-1,743,"它可"],[1,758,"["],[-1,759,"a"],[1,762,"]("],[-1,762,"中的"],[1,785,"），"],[-1,787,"），"],[-1,860,"- "],[1,864,"- "],[-1,940,"**"],[1,944,"**"],[1,1003,"。在"],[-1,1005,"。在"],[1,1062,"**"],[-1,1073,"\n要"],[1,1084,"1."],[-1,1086,"先写"],[1,1143,"2."],[-1,1145,"写M"],[1,1238,"3."],[-1,1240,"写M"],[1,1254,"Ma"],[-1,1256,"Ma"],[1,1283,"。\n"],[1,1285,"4."],[-1,1285,"。\n"],[-1,1289,"写S"],[-1,1304,"**"],[1,1308,"**"],[1,1338,"。\n"],[1,1340,"5.-"],[-1,1340,"。\n- 写"],[-1,1361,"**"],[1,1365,"**"],[1,1373,"，获"],[1,1375,"取"],[-1,1375,"，"],[-1,1378,"获取"],[1,1433,"。\n"],[1,1435,"6.-J "],[-1,1435,"。\n-  写J"],[1,1476,"=="],[-1,1478,"> "],[1,1487,"=="],[-1,1489,"> "],[1,1502,"=="],[-1,1504,"> "],[1,1513,"["],[-1,1514,"a"],[1,1517,"]("],[-1,1520,"> "],[1,1535,"=="],[-1,1537,"> "],[1,1555,"=="],[-1,1557,"> ."],[1,1562,".p. ==S"],[-1,1562,"p\n\n\n"],[1,1573,"p"],[-1,1573,"\n"],[-1,1576,"Sp"],[-1,1603,"2 "],[1,1607,"2 "],[-1,1615,"**"],[1,1619,"**"],[1,1626,"\nS"],[1,1628,"p"],[-1,1628,"\n"],[-1,1631,"Sp"],[-1,1648,"**"],[1,1652,"**"],[1,1665,"\nm"],[1,1667,"y"],[-1,1667,"\n"],[-1,1670,"my"],[-1,1689,"**"],[1,1693,"**"],[1,1696," "],[-1,1697,"数"],[1,1702," 起\n\n**；Sp"],[-1,1702,"起来**；\n\n"],[-1,1711,"Sp"],[1,1729,"与 于"],[-1,1729,"于 S"],[-1,1741,"- "],[1,1745,"- "],[-1,1759,"："],[1,1762,"："],[1,1782,"my"],[-1,1784,"my"],[-1,1813,"- "],[1,1817,"- "],[-1,1947,"- "],[1,1951,"- "],[1,1973,"它允"],[-1,1975,"它允"],[1,2008,"，如"],[-1,2010,"，如"],[1,2071,"**"],[-1,2071,"持久"],[1,2087,"**"],[-1,2087,"\n\n"],[1,2317,"**"],[-1,2317,"业务"],[1,2329,"**"],[-1,2329,"\n\n"],[1,2369,"\n"],[-1,2369," "],[1,2557,"**"],[-1,2557,"表现"],[1,2582,"**"],[-1,2582,"\n\n"],[1,2631,"\n"],[-1,2631," "],[1,2790,"**ew层**"],[-1,2790,"View层\n\n"],[1,2859,"**联系**"],[-1,2859,"各层联系\n\n"],[1,3070,"\n"],[-1,3070," "],[1,3248,"==**  "],[-1,3248,"\n\n**最近"]],[3258,3258],[24,24]]],[1570882225104,["GJX@GJXAIOU",[[1,704,"，拦截器分为（）"]],[704,704],[712,712]]],[1570882225825,["GJX@GJXAIOU",[[-1,710,"（）"]],[712,712],[710,710]]],[1570882229291,["GJX@GJXAIOU",[[1,710,"：hand"]],[710,710],[715,715]]],[1570882230759,["GJX@GJXAIOU",[[-1,711,"hand"]],[715,715],[711,711]]],[1570882241540,["GJX@GJXAIOU",[[1,711,"HandlerInterceptro()"]],[711,711],[731,731]]],[1570882243216,["GJX@GJXAIOU",[[-1,729,"()"]],[731,731],[729,729]]],[1570882243803,["GJX@GJXAIOU",[[1,729,"（）"]],[729,729],[731,731]]],[1570882249074,["GJX@GJXAIOU",[[1,730,"springmvc的"]],[730,730],[740,740]]],[1570882249104,["GJX@GJXAIOU",[[1,739," "]],[740,740],[741,741]]],[1570882263331,["GJX@GJXAIOU",[[1,742,"和 WebRequestIn特rceptor"]],[742,742],[764,764]]],[1570882266651,["GJX@GJXAIOU",[[-1,756,"特"]],[757,757],[756,756]]],[1570882270018,["GJX@GJXAIOU",[[1,756,"te"]],[756,756],[758,758]]],[1570882270163,["GJX@GJXAIOU",[[1,759,"r"]],[758,758],[759,759]]],[1570882271274,["GJX@GJXAIOU",[[-1,759,"r"]],[759,759],[758,758]]],[1570882274138,["GJX@GJXAIOU",[[1,765,"（）"]],[765,765],[767,767]]],[1570882334289,[null,[[-1,24,"\n*原理*"],[1,29,"框架原理\n"],[-1,41,"**"],[1,43,"作用\n\n"],[1,46," "],[1,48,"是"],[-1,49,"是"],[-1,52," "],[1,69," "],[1,70," "],[-1,71," "],[-1,73," "],[1,79," "],[-1,81," "],[1,90," "],[-1,92," "],[1,94," "],[-1,96," "],[1,129," "],[-1,131," "],[1,135," "],[-1,137," "],[-1,141,"使用"],[1,145,"使用"],[-1,157,"请求"],[1,161,"请求"],[-1,169,"\n\n"],[-1,173,"s"],[1,174,"\n"],[1,176,"sp"],[-1,188,"，m"],[1,193,"my"],[-1,212,"**"],[-1,225,"Sp"],[1,227,"\n\n"],[-1,243,"."],[1,244,"\n"],[1,248,"客户"],[1,254," "],[-1,256," "],[-1,272,"分发"],[1,280,"分发"],[-1,282,"\n\n"],[-1,305,"2"],[1,306,"\n"],[-1,310,"i "],[1,312,"由 Di"],[1,326," "],[-1,328," "],[1,332," "],[-1,334," "],[-1,347,"找到"],[1,371,"找到"],[1,376," "],[-1,378," "],[-1,387,"\n\n；3"],[1,391,"；\n"],[1,438,"Co"],[1,446," "],[-1,448," "],[1,459," "],[-1,461," "],[-1,472,"\n\n"],[-1,490,"4"],[1,491,"\n"],[1,495,"Di"],[-1,505,"clvt"],[1,509,"vlet "],[-1,511," "],[1,532," "],[-1,534," "],[-1,539,"\n5"],[1,545,"视图"],[-1,558,"!["],[-1,621,"Sp"],[1,623,"\n\n"],[1,776,"Sp"],[-1,802,"它可"],[1,806,"它可"],[-1,819,"["],[1,821,"a"],[-1,823,"]("],[1,825,"中的"],[-1,846,"），"],[1,850,"），"],[1,921,"- "],[-1,923,"- "],[1,1001,"**"],[-1,1003,"**"],[-1,1064,"。在"],[1,1068,"。在"],[-1,1123,"**"],[1,1136,"\n要"],[-1,1145,"1."],[1,1149,"先写"],[-1,1204,"2."],[1,1208,"写M"],[-1,1299,"3."],[1,1303,"写M"],[-1,1315,"Ma"],[1,1319,"Ma"],[-1,1344,"。\n"],[-1,1348,"4."],[1,1350,"。\n"],[1,1352,"写S"],[1,1365,"**"],[-1,1367,"**"],[-1,1399,"。\n"],[-1,1403,"5.-"],[1,1406,"。\n- 写"],[1,1422,"**"],[-1,1424,"**"],[-1,1434,"，获"],[-1,1438,"取"],[1,1439,"，"],[1,1441,"获取"],[-1,1494,"。\n"],[-1,1498,"6.-J "],[1,1503,"。\n-  写J"],[-1,1537,"=="],[1,1541,"> "],[-1,1548,"=="],[1,1552,"> "],[-1,1563,"=="],[1,1567,"> "],[-1,1574,"["],[1,1576,"a"],[-1,1578,"]("],[1,1583,"> "],[-1,1596,"=="],[1,1600,"> "],[-1,1616,"=="],[1,1620,"> ."],[-1,1622,".p. ==S"],[1,1629,"p\n\n\n"],[-1,1636,"p"],[1,1637,"\n"],[1,1639,"Sp"],[1,1664,"2 "],[-1,1666,"2 "],[1,1676,"**"],[-1,1678,"**"],[-1,1687,"\nS"],[-1,1691,"p"],[1,1692,"\n"],[1,1694,"Sp"],[1,1709,"**"],[-1,1711,"**"],[-1,1726,"\nm"],[-1,1730,"y"],[1,1731,"\n"],[1,1733,"my"],[1,1750,"**"],[-1,1752,"**"],[-1,1757," "],[1,1759,"数"],[-1,1763," 起\n\n**；Sp"],[1,1772,"起来**；\n\n"],[1,1774,"Sp"],[-1,1790,"与 于"],[1,1793,"于 S"],[1,1802,"- "],[-1,1804,"- "],[1,1820,"："],[-1,1822,"："],[-1,1843,"my"],[1,1847,"my"],[1,1874,"- "],[-1,1876,"- "],[1,2008,"- "],[-1,2010,"- "],[-1,2034,"它允"],[1,2038,"它允"],[-1,2069,"，如"],[1,2073,"，如"],[-1,2132,"**"],[1,2134,"持久"],[-1,2148,"**"],[1,2150,"\n\n"],[-1,2378,"**"],[1,2380,"业务"],[-1,2390,"**"],[1,2392,"\n\n"],[-1,2430,"\n"],[1,2431," "],[-1,2618,"**"],[1,2620,"表现"],[-1,2643,"**"],[1,2645,"\n\n"],[-1,2692,"\n"],[1,2693," "],[-1,2851,"**ew层**"],[1,2858,"View层\n\n"],[-1,2920,"**联系**"],[1,2926,"各层联系\n\n"],[-1,3131,"\n"],[1,3132," "],[-1,3309,"==**  "],[1,3315,"\n\n**最近"]],[24,24],[3321,3321]]],[1570882334289,[null,[[1,24,"\n*原理*"],[-1,24,"框架原理\n"],[1,41,"**"],[-1,41,"作用\n\n"],[-1,48," "],[-1,51,"是"],[1,53,"是"],[1,55," "],[-1,71," "],[-1,73," "],[1,75," "],[1,76," "],[-1,81," "],[1,84," "],[-1,92," "],[1,95," "],[-1,96," "],[1,99," "],[-1,131," "],[1,134," "],[-1,137," "],[1,140," "],[1,143,"使用"],[-1,145,"使用"],[1,159,"请求"],[-1,161,"请求"],[1,171,"\n\n"],[1,173,"s"],[-1,173,"\n"],[-1,176,"sp"],[1,190,"，m"],[-1,193,"my"],[1,214,"**"],[1,225,"Sp"],[-1,225,"\n\n"],[1,243,"."],[-1,243,"\n"],[-1,248,"客户"],[-1,256," "],[1,259," "],[1,274,"分发"],[-1,280,"分发"],[1,284,"\n\n"],[1,305,"2"],[-1,305,"\n"],[1,310,"i "],[-1,310,"由 Di"],[-1,328," "],[1,331," "],[-1,334," "],[1,337," "],[1,349,"找到"],[-1,371,"找到"],[-1,378," "],[1,381," "],[1,389,"\n\n；3"],[-1,389,"；\n"],[-1,438,"Co"],[-1,448," "],[1,451," "],[-1,461," "],[1,464," "],[1,474,"\n\n"],[1,490,"4"],[-1,490,"\n"],[-1,495,"Di"],[1,507,"clvt"],[-1,507,"vlet "],[1,514," "],[-1,534," "],[1,537," "],[1,541,"\n5"],[-1,545,"视图"],[1,560,"!["],[1,621,"Sp"],[-1,621,"\n\n"],[-1,776,"Sp"],[1,804,"它可"],[-1,806,"它可"],[1,821,"["],[-1,822,"a"],[1,825,"]("],[-1,825,"中的"],[1,848,"），"],[-1,850,"），"],[-1,923,"- "],[1,927,"- "],[-1,1003,"**"],[1,1007,"**"],[1,1066,"。在"],[-1,1068,"。在"],[1,1125,"**"],[-1,1136,"\n要"],[1,1147,"1."],[-1,1149,"先写"],[1,1206,"2."],[-1,1208,"写M"],[1,1301,"3."],[-1,1303,"写M"],[1,1317,"Ma"],[-1,1319,"Ma"],[1,1346,"。\n"],[1,1348,"4."],[-1,1348,"。\n"],[-1,1352,"写S"],[-1,1367,"**"],[1,1371,"**"],[1,1401,"。\n"],[1,1403,"5.-"],[-1,1403,"。\n- 写"],[-1,1424,"**"],[1,1428,"**"],[1,1436,"，获"],[1,1438,"取"],[-1,1438,"，"],[-1,1441,"获取"],[1,1496,"。\n"],[1,1498,"6.-J "],[-1,1498,"。\n-  写J"],[1,1539,"=="],[-1,1541,"> "],[1,1550,"=="],[-1,1552,"> "],[1,1565,"=="],[-1,1567,"> "],[1,1576,"["],[-1,1577,"a"],[1,1580,"]("],[-1,1583,"> "],[1,1598,"=="],[-1,1600,"> "],[1,1618,"=="],[-1,1620,"> ."],[1,1625,".p. ==S"],[-1,1625,"p\n\n\n"],[1,1636,"p"],[-1,1636,"\n"],[-1,1639,"Sp"],[-1,1666,"2 "],[1,1670,"2 "],[-1,1678,"**"],[1,1682,"**"],[1,1689,"\nS"],[1,1691,"p"],[-1,1691,"\n"],[-1,1694,"Sp"],[-1,1711,"**"],[1,1715,"**"],[1,1728,"\nm"],[1,1730,"y"],[-1,1730,"\n"],[-1,1733,"my"],[-1,1752,"**"],[1,1756,"**"],[1,1759," "],[-1,1760,"数"],[1,1765," 起\n\n**；Sp"],[-1,1765,"起来**；\n\n"],[-1,1774,"Sp"],[1,1792,"与 于"],[-1,1792,"于 S"],[-1,1804,"- "],[1,1808,"- "],[-1,1822,"："],[1,1825,"："],[1,1845,"my"],[-1,1847,"my"],[-1,1876,"- "],[1,1880,"- "],[-1,2010,"- "],[1,2014,"- "],[1,2036,"它允"],[-1,2038,"它允"],[1,2071,"，如"],[-1,2073,"，如"],[1,2134,"**"],[-1,2134,"持久"],[1,2150,"**"],[-1,2150,"\n\n"],[1,2380,"**"],[-1,2380,"业务"],[1,2392,"**"],[-1,2392,"\n\n"],[1,2432,"\n"],[-1,2432," "],[1,2620,"**"],[-1,2620,"表现"],[1,2645,"**"],[-1,2645,"\n\n"],[1,2694,"\n"],[-1,2694," "],[1,2853,"**ew层**"],[-1,2853,"View层\n\n"],[1,2922,"**联系**"],[-1,2922,"各层联系\n\n"],[1,3133,"\n"],[-1,3133," "],[1,3311,"==**  "],[-1,3311,"\n\n**最近"]],[3321,3321],[24,24]]],[1570882277053,["GJX@GJXAIOU",[[1,766,"spring的"]],[766,766],[773,773]]],[1570882277083,["GJX@GJXAIOU",[[1,772," "]],[773,773],[774,774]]],[1570882303138,["GJX@GJXAIOU",[[1,775,"，同时里面一共有三个方法，恶意"]],[775,775],[790,790]]],[1570882303736,["GJX@GJXAIOU",[[-1,788,"恶意"]],[790,790],[788,788]]],[1570882319899,["GJX@GJXAIOU",[[1,788,"可以实现部分，主要是拦截位置不同：preHandle ->进入控制器（controller）-> postHandler -> JSP -> afterCompletion；"]],[788,788],[875,875]]],[1570882323303,["GJX@GJXAIOU",[[-1,804,"："]],[805,805],[804,804]]],[1570882325487,["GJX@GJXAIOU",[[1,804,"，整体 "]],[804,804],[807,807]]],[1570882333393,["GJX@GJXAIOU",[[1,807,"的指向顺序为："]],[807,807],[814,814]]],[1570882394292,[null,[[-1,24,"\n*原理*"],[1,29,"框架原理\n"],[-1,41,"**"],[1,43,"作用\n\n"],[1,46," "],[1,48,"是"],[-1,49,"是"],[-1,52," "],[1,69," "],[1,70," "],[-1,71," "],[-1,73," "],[1,79," "],[-1,81," "],[1,90," "],[-1,92," "],[1,94," "],[-1,96," "],[1,129," "],[-1,131," "],[1,135," "],[-1,137," "],[-1,141,"使用"],[1,145,"使用"],[-1,157,"请求"],[1,161,"请求"],[-1,169,"\n\n"],[-1,173,"s"],[1,174,"\n"],[1,176,"sp"],[-1,188,"，m"],[1,193,"my"],[-1,212,"**"],[-1,225,"Sp"],[1,227,"\n\n"],[-1,243,"."],[1,244,"\n"],[1,248,"客户"],[1,254," "],[-1,256," "],[-1,272,"分发"],[1,280,"分发"],[-1,282,"\n\n"],[-1,305,"2"],[1,306,"\n"],[-1,310,"i "],[1,312,"由 Di"],[1,326," "],[-1,328," "],[1,332," "],[-1,334," "],[-1,347,"找到"],[1,371,"找到"],[1,376," "],[-1,378," "],[-1,387,"\n\n；3"],[1,391,"；\n"],[1,438,"Co"],[1,446," "],[-1,448," "],[1,459," "],[-1,461," "],[-1,472,"\n\n"],[-1,490,"4"],[1,491,"\n"],[1,495,"Di"],[-1,505,"clvt"],[1,509,"vlet "],[-1,511," "],[1,532," "],[-1,534," "],[-1,539,"\n5"],[1,545,"视图"],[-1,558,"!["],[-1,621,"Sp"],[1,623,"\n\n"],[1,894,"Sp"],[-1,920,"它可"],[1,924,"它可"],[-1,937,"["],[1,939,"a"],[-1,941,"]("],[1,943,"中的"],[-1,964,"），"],[1,968,"），"],[1,1039,"- "],[-1,1041,"- "],[1,1119,"**"],[-1,1121,"**"],[-1,1182,"。在"],[1,1186,"。在"],[-1,1241,"**"],[1,1254,"\n要"],[-1,1263,"1."],[1,1267,"先写"],[-1,1322,"2."],[1,1326,"写M"],[-1,1417,"3."],[1,1421,"写M"],[-1,1433,"Ma"],[1,1437,"Ma"],[-1,1462,"。\n"],[-1,1466,"4."],[1,1468,"。\n"],[1,1470,"写S"],[1,1483,"**"],[-1,1485,"**"],[-1,1517,"。\n"],[-1,1521,"5.-"],[1,1524,"。\n- 写"],[1,1540,"**"],[-1,1542,"**"],[-1,1552,"，获"],[-1,1556,"取"],[1,1557,"，"],[1,1559,"获取"],[-1,1612,"。\n"],[-1,1616,"6.-J "],[1,1621,"。\n-  写J"],[-1,1655,"=="],[1,1659,"> "],[-1,1666,"=="],[1,1670,"> "],[-1,1681,"=="],[1,1685,"> "],[-1,1692,"["],[1,1694,"a"],[-1,1696,"]("],[1,1701,"> "],[-1,1714,"=="],[1,1718,"> "],[-1,1734,"=="],[1,1738,"> ."],[-1,1740,".p. ==S"],[1,1747,"p\n\n\n"],[-1,1754,"p"],[1,1755,"\n"],[1,1757,"Sp"],[1,1782,"2 "],[-1,1784,"2 "],[1,1794,"**"],[-1,1796,"**"],[-1,1805,"\nS"],[-1,1809,"p"],[1,1810,"\n"],[1,1812,"Sp"],[1,1827,"**"],[-1,1829,"**"],[-1,1844,"\nm"],[-1,1848,"y"],[1,1849,"\n"],[1,1851,"my"],[1,1868,"**"],[-1,1870,"**"],[-1,1875," "],[1,1877,"数"],[-1,1881," 起\n\n**；Sp"],[1,1890,"起来**；\n\n"],[1,1892,"Sp"],[-1,1908,"与 于"],[1,1911,"于 S"],[1,1920,"- "],[-1,1922,"- "],[1,1938,"："],[-1,1940,"："],[-1,1961,"my"],[1,1965,"my"],[1,1992,"- "],[-1,1994,"- "],[1,2126,"- "],[-1,2128,"- "],[-1,2152,"它允"],[1,2156,"它允"],[-1,2187,"，如"],[1,2191,"，如"],[-1,2250,"**"],[1,2252,"持久"],[-1,2266,"**"],[1,2268,"\n\n"],[-1,2496,"**"],[1,2498,"业务"],[-1,2508,"**"],[1,2510,"\n\n"],[-1,2548,"\n"],[1,2549," "],[-1,2736,"**"],[1,2738,"表现"],[-1,2761,"**"],[1,2763,"\n\n"],[-1,2810,"\n"],[1,2811," "],[-1,2969,"**ew层**"],[1,2976,"View层\n\n"],[-1,3038,"**联系**"],[1,3044,"各层联系\n\n"],[-1,3249,"\n"],[1,3250," "],[-1,3427,"==**  "],[1,3433,"\n\n**最近"]],[24,24],[3439,3439]]],[1570882394292,[null,[[1,24,"\n*原理*"],[-1,24,"框架原理\n"],[1,41,"**"],[-1,41,"作用\n\n"],[-1,48," "],[-1,51,"是"],[1,53,"是"],[1,55," "],[-1,71," "],[-1,73," "],[1,75," "],[1,76," "],[-1,81," "],[1,84," "],[-1,92," "],[1,95," "],[-1,96," "],[1,99," "],[-1,131," "],[1,134," "],[-1,137," "],[1,140," "],[1,143,"使用"],[-1,145,"使用"],[1,159,"请求"],[-1,161,"请求"],[1,171,"\n\n"],[1,173,"s"],[-1,173,"\n"],[-1,176,"sp"],[1,190,"，m"],[-1,193,"my"],[1,214,"**"],[1,225,"Sp"],[-1,225,"\n\n"],[1,243,"."],[-1,243,"\n"],[-1,248,"客户"],[-1,256," "],[1,259," "],[1,274,"分发"],[-1,280,"分发"],[1,284,"\n\n"],[1,305,"2"],[-1,305,"\n"],[1,310,"i "],[-1,310,"由 Di"],[-1,328," "],[1,331," "],[-1,334," "],[1,337," "],[1,349,"找到"],[-1,371,"找到"],[-1,378," "],[1,381," "],[1,389,"\n\n；3"],[-1,389,"；\n"],[-1,438,"Co"],[-1,448," "],[1,451," "],[-1,461," "],[1,464," "],[1,474,"\n\n"],[1,490,"4"],[-1,490,"\n"],[-1,495,"Di"],[1,507,"clvt"],[-1,507,"vlet "],[1,514," "],[-1,534," "],[1,537," "],[1,541,"\n5"],[-1,545,"视图"],[1,560,"!["],[1,621,"Sp"],[-1,621,"\n\n"],[-1,894,"Sp"],[1,922,"它可"],[-1,924,"它可"],[1,939,"["],[-1,940,"a"],[1,943,"]("],[-1,943,"中的"],[1,966,"），"],[-1,968,"），"],[-1,1041,"- "],[1,1045,"- "],[-1,1121,"**"],[1,1125,"**"],[1,1184,"。在"],[-1,1186,"。在"],[1,1243,"**"],[-1,1254,"\n要"],[1,1265,"1."],[-1,1267,"先写"],[1,1324,"2."],[-1,1326,"写M"],[1,1419,"3."],[-1,1421,"写M"],[1,1435,"Ma"],[-1,1437,"Ma"],[1,1464,"。\n"],[1,1466,"4."],[-1,1466,"。\n"],[-1,1470,"写S"],[-1,1485,"**"],[1,1489,"**"],[1,1519,"。\n"],[1,1521,"5.-"],[-1,1521,"。\n- 写"],[-1,1542,"**"],[1,1546,"**"],[1,1554,"，获"],[1,1556,"取"],[-1,1556,"，"],[-1,1559,"获取"],[1,1614,"。\n"],[1,1616,"6.-J "],[-1,1616,"。\n-  写J"],[1,1657,"=="],[-1,1659,"> "],[1,1668,"=="],[-1,1670,"> "],[1,1683,"=="],[-1,1685,"> "],[1,1694,"["],[-1,1695,"a"],[1,1698,"]("],[-1,1701,"> "],[1,1716,"=="],[-1,1718,"> "],[1,1736,"=="],[-1,1738,"> ."],[1,1743,".p. ==S"],[-1,1743,"p\n\n\n"],[1,1754,"p"],[-1,1754,"\n"],[-1,1757,"Sp"],[-1,1784,"2 "],[1,1788,"2 "],[-1,1796,"**"],[1,1800,"**"],[1,1807,"\nS"],[1,1809,"p"],[-1,1809,"\n"],[-1,1812,"Sp"],[-1,1829,"**"],[1,1833,"**"],[1,1846,"\nm"],[1,1848,"y"],[-1,1848,"\n"],[-1,1851,"my"],[-1,1870,"**"],[1,1874,"**"],[1,1877," "],[-1,1878,"数"],[1,1883," 起\n\n**；Sp"],[-1,1883,"起来**；\n\n"],[-1,1892,"Sp"],[1,1910,"与 于"],[-1,1910,"于 S"],[-1,1922,"- "],[1,1926,"- "],[-1,1940,"："],[1,1943,"："],[1,1963,"my"],[-1,1965,"my"],[-1,1994,"- "],[1,1998,"- "],[-1,2128,"- "],[1,2132,"- "],[1,2154,"它允"],[-1,2156,"它允"],[1,2189,"，如"],[-1,2191,"，如"],[1,2252,"**"],[-1,2252,"持久"],[1,2268,"**"],[-1,2268,"\n\n"],[1,2498,"**"],[-1,2498,"业务"],[1,2510,"**"],[-1,2510,"\n\n"],[1,2550,"\n"],[-1,2550," "],[1,2738,"**"],[-1,2738,"表现"],[1,2763,"**"],[-1,2763,"\n\n"],[1,2812,"\n"],[-1,2812," "],[1,2971,"**ew层**"],[-1,2971,"View层\n\n"],[1,3040,"**联系**"],[-1,3040,"各层联系\n\n"],[1,3251,"\n"],[-1,3251," "],[1,3429,"==**  "],[-1,3429,"\n\n**最近"]],[3439,3439],[24,24]]],[1570882358757,["GJX@GJXAIOU",[[1,887,"- 配置文件"]],[887,887],[893,893]]],[1570882359227,["GJX@GJXAIOU",[[1,894,"- \n"]],[893,893],[896,896]]],[1570882360538,["GJX@GJXAIOU",[[1,894,"  "]],[896,896],[898,898]]],[1570882374858,["GJX@GJXAIOU",[[1,898,"web.xml：在 <servlet》"]],[898,898],[917,917]]],[1570882375506,["GJX@GJXAIOU",[[-1,916,"》"]],[917,917],[916,916]]],[1570882377417,["GJX@GJXAIOU",[[1,916,"> zhogn "]],[916,916],[924,924]]],[1570882378495,["GJX@GJXAIOU",[[-1,918,"zhogn "]],[924,924],[918,918]]],[1570882380591,["GJX@GJXAIOU",[[1,918,"中药"]],[918,918],[920,920]]],[1570882381664,["GJX@GJXAIOU",[[-1,919,"药"]],[920,920],[919,919]]],[1570882393954,["GJX@GJXAIOU",[[1,919,"要配置前端控制器，spring"]],[919,919],[934,934]]],[1570882454292,[null,[[-1,24,"\n*原理*"],[1,29,"框架原理\n"],[-1,41,"**"],[1,43,"作用\n\n"],[1,46," "],[1,48,"是"],[-1,49,"是"],[-1,52," "],[1,69," "],[1,70," "],[-1,71," "],[-1,73," "],[1,79," "],[-1,81," "],[1,90," "],[-1,92," "],[1,94," "],[-1,96," "],[1,129," "],[-1,131," "],[1,135," "],[-1,137," "],[-1,141,"使用"],[1,145,"使用"],[-1,157,"请求"],[1,161,"请求"],[-1,169,"\n\n"],[-1,173,"s"],[1,174,"\n"],[1,176,"sp"],[-1,188,"，m"],[1,193,"my"],[-1,212,"**"],[-1,225,"Sp"],[1,227,"\n\n"],[-1,243,"."],[1,244,"\n"],[1,248,"客户"],[1,254," "],[-1,256," "],[-1,272,"分发"],[1,280,"分发"],[-1,282,"\n\n"],[-1,305,"2"],[1,306,"\n"],[-1,310,"i "],[1,312,"由 Di"],[1,326," "],[-1,328," "],[1,332," "],[-1,334," "],[-1,347,"找到"],[1,371,"找到"],[1,376," "],[-1,378," "],[-1,387,"\n\n；3"],[1,391,"；\n"],[1,438,"Co"],[1,446," "],[-1,448," "],[1,459," "],[-1,461," "],[-1,472,"\n\n"],[-1,490,"4"],[1,491,"\n"],[1,495,"Di"],[-1,505,"clvt"],[1,509,"vlet "],[-1,511," "],[1,532," "],[-1,534," "],[-1,539,"\n5"],[1,545,"视图"],[-1,558,"!["],[-1,621,"Sp"],[1,623,"\n\n"],[1,941,"Sp"],[-1,967,"它可"],[1,971,"它可"],[-1,984,"["],[1,986,"a"],[-1,988,"]("],[1,990,"中的"],[-1,1011,"），"],[1,1015,"），"],[1,1086,"- "],[-1,1088,"- "],[1,1166,"**"],[-1,1168,"**"],[-1,1229,"。在"],[1,1233,"。在"],[-1,1288,"**"],[1,1301,"\n要"],[-1,1310,"1."],[1,1314,"先写"],[-1,1369,"2."],[1,1373,"写M"],[-1,1464,"3."],[1,1468,"写M"],[-1,1480,"Ma"],[1,1484,"Ma"],[-1,1509,"。\n"],[-1,1513,"4."],[1,1515,"。\n"],[1,1517,"写S"],[1,1530,"**"],[-1,1532,"**"],[-1,1564,"。\n"],[-1,1568,"5.-"],[1,1571,"。\n- 写"],[1,1587,"**"],[-1,1589,"**"],[-1,1599,"，获"],[-1,1603,"取"],[1,1604,"，"],[1,1606,"获取"],[-1,1659,"。\n"],[-1,1663,"6.-J "],[1,1668,"。\n-  写J"],[-1,1702,"=="],[1,1706,"> "],[-1,1713,"=="],[1,1717,"> "],[-1,1728,"=="],[1,1732,"> "],[-1,1739,"["],[1,1741,"a"],[-1,1743,"]("],[1,1748,"> "],[-1,1761,"=="],[1,1765,"> "],[-1,1781,"=="],[1,1785,"> ."],[-1,1787,".p. ==S"],[1,1794,"p\n\n\n"],[-1,1801,"p"],[1,1802,"\n"],[1,1804,"Sp"],[1,1829,"2 "],[-1,1831,"2 "],[1,1841,"**"],[-1,1843,"**"],[-1,1852,"\nS"],[-1,1856,"p"],[1,1857,"\n"],[1,1859,"Sp"],[1,1874,"**"],[-1,1876,"**"],[-1,1891,"\nm"],[-1,1895,"y"],[1,1896,"\n"],[1,1898,"my"],[1,1915,"**"],[-1,1917,"**"],[-1,1922," "],[1,1924,"数"],[-1,1928," 起\n\n**；Sp"],[1,1937,"起来**；\n\n"],[1,1939,"Sp"],[-1,1955,"与 于"],[1,1958,"于 S"],[1,1967,"- "],[-1,1969,"- "],[1,1985,"："],[-1,1987,"："],[-1,2008,"my"],[1,2012,"my"],[1,2039,"- "],[-1,2041,"- "],[1,2173,"- "],[-1,2175,"- "],[-1,2199,"它允"],[1,2203,"它允"],[-1,2234,"，如"],[1,2238,"，如"],[-1,2297,"**"],[1,2299,"持久"],[-1,2313,"**"],[1,2315,"\n\n"],[-1,2543,"**"],[1,2545,"业务"],[-1,2555,"**"],[1,2557,"\n\n"],[-1,2595,"\n"],[1,2596," "],[-1,2783,"**"],[1,2785,"表现"],[-1,2808,"**"],[1,2810,"\n\n"],[-1,2857,"\n"],[1,2858," "],[-1,3016,"**ew层**"],[1,3023,"View层\n\n"],[-1,3085,"**联系**"],[1,3091,"各层联系\n\n"],[-1,3296,"\n"],[1,3297," "],[-1,3474,"==**  "],[1,3480,"\n\n**最近"]],[24,24],[3486,3486]]],[1570882454292,[null,[[1,24,"\n*原理*"],[-1,24,"框架原理\n"],[1,41,"**"],[-1,41,"作用\n\n"],[-1,48," "],[-1,51,"是"],[1,53,"是"],[1,55," "],[-1,71," "],[-1,73," "],[1,75," "],[1,76," "],[-1,81," "],[1,84," "],[-1,92," "],[1,95," "],[-1,96," "],[1,99," "],[-1,131," "],[1,134," "],[-1,137," "],[1,140," "],[1,143,"使用"],[-1,145,"使用"],[1,159,"请求"],[-1,161,"请求"],[1,171,"\n\n"],[1,173,"s"],[-1,173,"\n"],[-1,176,"sp"],[1,190,"，m"],[-1,193,"my"],[1,214,"**"],[1,225,"Sp"],[-1,225,"\n\n"],[1,243,"."],[-1,243,"\n"],[-1,248,"客户"],[-1,256," "],[1,259," "],[1,274,"分发"],[-1,280,"分发"],[1,284,"\n\n"],[1,305,"2"],[-1,305,"\n"],[1,310,"i "],[-1,310,"由 Di"],[-1,328," "],[1,331," "],[-1,334," "],[1,337," "],[1,349,"找到"],[-1,371,"找到"],[-1,378," "],[1,381," "],[1,389,"\n\n；3"],[-1,389,"；\n"],[-1,438,"Co"],[-1,448," "],[1,451," "],[-1,461," "],[1,464," "],[1,474,"\n\n"],[1,490,"4"],[-1,490,"\n"],[-1,495,"Di"],[1,507,"clvt"],[-1,507,"vlet "],[1,514," "],[-1,534," "],[1,537," "],[1,541,"\n5"],[-1,545,"视图"],[1,560,"!["],[1,621,"Sp"],[-1,621,"\n\n"],[-1,941,"Sp"],[1,969,"它可"],[-1,971,"它可"],[1,986,"["],[-1,987,"a"],[1,990,"]("],[-1,990,"中的"],[1,1013,"），"],[-1,1015,"），"],[-1,1088,"- "],[1,1092,"- "],[-1,1168,"**"],[1,1172,"**"],[1,1231,"。在"],[-1,1233,"。在"],[1,1290,"**"],[-1,1301,"\n要"],[1,1312,"1."],[-1,1314,"先写"],[1,1371,"2."],[-1,1373,"写M"],[1,1466,"3."],[-1,1468,"写M"],[1,1482,"Ma"],[-1,1484,"Ma"],[1,1511,"。\n"],[1,1513,"4."],[-1,1513,"。\n"],[-1,1517,"写S"],[-1,1532,"**"],[1,1536,"**"],[1,1566,"。\n"],[1,1568,"5.-"],[-1,1568,"。\n- 写"],[-1,1589,"**"],[1,1593,"**"],[1,1601,"，获"],[1,1603,"取"],[-1,1603,"，"],[-1,1606,"获取"],[1,1661,"。\n"],[1,1663,"6.-J "],[-1,1663,"。\n-  写J"],[1,1704,"=="],[-1,1706,"> "],[1,1715,"=="],[-1,1717,"> "],[1,1730,"=="],[-1,1732,"> "],[1,1741,"["],[-1,1742,"a"],[1,1745,"]("],[-1,1748,"> "],[1,1763,"=="],[-1,1765,"> "],[1,1783,"=="],[-1,1785,"> ."],[1,1790,".p. ==S"],[-1,1790,"p\n\n\n"],[1,1801,"p"],[-1,1801,"\n"],[-1,1804,"Sp"],[-1,1831,"2 "],[1,1835,"2 "],[-1,1843,"**"],[1,1847,"**"],[1,1854,"\nS"],[1,1856,"p"],[-1,1856,"\n"],[-1,1859,"Sp"],[-1,1876,"**"],[1,1880,"**"],[1,1893,"\nm"],[1,1895,"y"],[-1,1895,"\n"],[-1,1898,"my"],[-1,1917,"**"],[1,1921,"**"],[1,1924," "],[-1,1925,"数"],[1,1930," 起\n\n**；Sp"],[-1,1930,"起来**；\n\n"],[-1,1939,"Sp"],[1,1957,"与 于"],[-1,1957,"于 S"],[-1,1969,"- "],[1,1973,"- "],[-1,1987,"："],[1,1990,"："],[1,2010,"my"],[-1,2012,"my"],[-1,2041,"- "],[1,2045,"- "],[-1,2175,"- "],[1,2179,"- "],[1,2201,"它允"],[-1,2203,"它允"],[1,2236,"，如"],[-1,2238,"，如"],[1,2299,"**"],[-1,2299,"持久"],[1,2315,"**"],[-1,2315,"\n\n"],[1,2545,"**"],[-1,2545,"业务"],[1,2557,"**"],[-1,2557,"\n\n"],[1,2597,"\n"],[-1,2597," "],[1,2785,"**"],[-1,2785,"表现"],[1,2810,"**"],[-1,2810,"\n\n"],[1,2859,"\n"],[-1,2859," "],[1,3018,"**ew层**"],[-1,3018,"View层\n\n"],[1,3087,"**联系**"],[-1,3087,"各层联系\n\n"],[1,3298,"\n"],[-1,3298," "],[1,3476,"==**  "],[-1,3476,"\n\n**最近"]],[3486,3486],[24,24]]],[1570882395923,["GJX@GJXAIOU",[[1,934,"mvc的"]],[934,934],[938,938]]],[1570882395955,["GJX@GJXAIOU",[[1,937," "]],[938,938],[939,939]]],[1570882413603,["GJX@GJXAIOU",[[1,939,"配置文件位置、自启动、拦截器以及编码过滤器；"]],[939,939],[961,961]]],[1570882514291,[null,[[-1,24,"\n*原理*"],[1,29,"框架原理\n"],[-1,41,"**"],[1,43,"作用\n\n"],[1,46," "],[1,48,"是"],[-1,49,"是"],[-1,52," "],[1,69," "],[1,70," "],[-1,71," "],[-1,73," "],[1,79," "],[-1,81," "],[1,90," "],[-1,92," "],[1,94," "],[-1,96," "],[1,129," "],[-1,131," "],[1,135," "],[-1,137," "],[-1,141,"使用"],[1,145,"使用"],[-1,157,"请求"],[1,161,"请求"],[-1,169,"\n\n"],[-1,173,"s"],[1,174,"\n"],[1,176,"sp"],[-1,188,"，m"],[1,193,"my"],[-1,212,"**"],[-1,225,"Sp"],[1,227,"\n\n"],[-1,243,"."],[1,244,"\n"],[1,248,"客户"],[1,254," "],[-1,256," "],[-1,272,"分发"],[1,280,"分发"],[-1,282,"\n\n"],[-1,305,"2"],[1,306,"\n"],[-1,310,"i "],[1,312,"由 Di"],[1,326," "],[-1,328," "],[1,332," "],[-1,334," "],[-1,347,"找到"],[1,371,"找到"],[1,376," "],[-1,378," "],[-1,387,"\n\n；3"],[1,391,"；\n"],[1,438,"Co"],[1,446," "],[-1,448," "],[1,459," "],[-1,461," "],[-1,472,"\n\n"],[-1,490,"4"],[1,491,"\n"],[1,495,"Di"],[-1,505,"clvt"],[1,509,"vlet "],[-1,511," "],[1,532," "],[-1,534," "],[-1,539,"\n5"],[1,545,"视图"],[-1,558,"!["],[-1,621,"Sp"],[1,623,"\n\n"],[1,968,"Sp"],[-1,994,"它可"],[1,998,"它可"],[-1,1011,"["],[1,1013,"a"],[-1,1015,"]("],[1,1017,"中的"],[-1,1038,"），"],[1,1042,"），"],[1,1113,"- "],[-1,1115,"- "],[1,1193,"**"],[-1,1195,"**"],[-1,1256,"。在"],[1,1260,"。在"],[-1,1315,"**"],[1,1328,"\n要"],[-1,1337,"1."],[1,1341,"先写"],[-1,1396,"2."],[1,1400,"写M"],[-1,1491,"3."],[1,1495,"写M"],[-1,1507,"Ma"],[1,1511,"Ma"],[-1,1536,"。\n"],[-1,1540,"4."],[1,1542,"。\n"],[1,1544,"写S"],[1,1557,"**"],[-1,1559,"**"],[-1,1591,"。\n"],[-1,1595,"5.-"],[1,1598,"。\n- 写"],[1,1614,"**"],[-1,1616,"**"],[-1,1626,"，获"],[-1,1630,"取"],[1,1631,"，"],[1,1633,"获取"],[-1,1686,"。\n"],[-1,1690,"6.-J "],[1,1695,"。\n-  写J"],[-1,1729,"=="],[1,1733,"> "],[-1,1740,"=="],[1,1744,"> "],[-1,1755,"=="],[1,1759,"> "],[-1,1766,"["],[1,1768,"a"],[-1,1770,"]("],[1,1775,"> "],[-1,1788,"=="],[1,1792,"> "],[-1,1808,"=="],[1,1812,"> ."],[-1,1814,".p. ==S"],[1,1821,"p\n\n\n"],[-1,1828,"p"],[1,1829,"\n"],[1,1831,"Sp"],[1,1856,"2 "],[-1,1858,"2 "],[1,1868,"**"],[-1,1870,"**"],[-1,1879,"\nS"],[-1,1883,"p"],[1,1884,"\n"],[1,1886,"Sp"],[1,1901,"**"],[-1,1903,"**"],[-1,1918,"\nm"],[-1,1922,"y"],[1,1923,"\n"],[1,1925,"my"],[1,1942,"**"],[-1,1944,"**"],[-1,1949," "],[1,1951,"数"],[-1,1955," 起\n\n**；Sp"],[1,1964,"起来**；\n\n"],[1,1966,"Sp"],[-1,1982,"与 于"],[1,1985,"于 S"],[1,1994,"- "],[-1,1996,"- "],[1,2012,"："],[-1,2014,"："],[-1,2035,"my"],[1,2039,"my"],[1,2066,"- "],[-1,2068,"- "],[1,2200,"- "],[-1,2202,"- "],[-1,2226,"它允"],[1,2230,"它允"],[-1,2261,"，如"],[1,2265,"，如"],[-1,2324,"**"],[1,2326,"持久"],[-1,2340,"**"],[1,2342,"\n\n"],[-1,2570,"**"],[1,2572,"业务"],[-1,2582,"**"],[1,2584,"\n\n"],[-1,2622,"\n"],[1,2623," "],[-1,2810,"**"],[1,2812,"表现"],[-1,2835,"**"],[1,2837,"\n\n"],[-1,2884,"\n"],[1,2885," "],[-1,3043,"**ew层**"],[1,3050,"View层\n\n"],[-1,3112,"**联系**"],[1,3118,"各层联系\n\n"],[-1,3323,"\n"],[1,3324," "],[-1,3501,"==**  "],[1,3507,"\n\n**最近"]],[24,24],[3513,3513]]],[1570882514291,[null,[[1,24,"\n*原理*"],[-1,24,"框架原理\n"],[1,41,"**"],[-1,41,"作用\n\n"],[-1,48," "],[-1,51,"是"],[1,53,"是"],[1,55," "],[-1,71," "],[-1,73," "],[1,75," "],[1,76," "],[-1,81," "],[1,84," "],[-1,92," "],[1,95," "],[-1,96," "],[1,99," "],[-1,131," "],[1,134," "],[-1,137," "],[1,140," "],[1,143,"使用"],[-1,145,"使用"],[1,159,"请求"],[-1,161,"请求"],[1,171,"\n\n"],[1,173,"s"],[-1,173,"\n"],[-1,176,"sp"],[1,190,"，m"],[-1,193,"my"],[1,214,"**"],[1,225,"Sp"],[-1,225,"\n\n"],[1,243,"."],[-1,243,"\n"],[-1,248,"客户"],[-1,256," "],[1,259," "],[1,274,"分发"],[-1,280,"分发"],[1,284,"\n\n"],[1,305,"2"],[-1,305,"\n"],[1,310,"i "],[-1,310,"由 Di"],[-1,328," "],[1,331," "],[-1,334," "],[1,337," "],[1,349,"找到"],[-1,371,"找到"],[-1,378," "],[1,381," "],[1,389,"\n\n；3"],[-1,389,"；\n"],[-1,438,"Co"],[-1,448," "],[1,451," "],[-1,461," "],[1,464," "],[1,474,"\n\n"],[1,490,"4"],[-1,490,"\n"],[-1,495,"Di"],[1,507,"clvt"],[-1,507,"vlet "],[1,514," "],[-1,534," "],[1,537," "],[1,541,"\n5"],[-1,545,"视图"],[1,560,"!["],[1,621,"Sp"],[-1,621,"\n\n"],[-1,968,"Sp"],[1,996,"它可"],[-1,998,"它可"],[1,1013,"["],[-1,1014,"a"],[1,1017,"]("],[-1,1017,"中的"],[1,1040,"），"],[-1,1042,"），"],[-1,1115,"- "],[1,1119,"- "],[-1,1195,"**"],[1,1199,"**"],[1,1258,"。在"],[-1,1260,"。在"],[1,1317,"**"],[-1,1328,"\n要"],[1,1339,"1."],[-1,1341,"先写"],[1,1398,"2."],[-1,1400,"写M"],[1,1493,"3."],[-1,1495,"写M"],[1,1509,"Ma"],[-1,1511,"Ma"],[1,1538,"。\n"],[1,1540,"4."],[-1,1540,"。\n"],[-1,1544,"写S"],[-1,1559,"**"],[1,1563,"**"],[1,1593,"。\n"],[1,1595,"5.-"],[-1,1595,"。\n- 写"],[-1,1616,"**"],[1,1620,"**"],[1,1628,"，获"],[1,1630,"取"],[-1,1630,"，"],[-1,1633,"获取"],[1,1688,"。\n"],[1,1690,"6.-J "],[-1,1690,"。\n-  写J"],[1,1731,"=="],[-1,1733,"> "],[1,1742,"=="],[-1,1744,"> "],[1,1757,"=="],[-1,1759,"> "],[1,1768,"["],[-1,1769,"a"],[1,1772,"]("],[-1,1775,"> "],[1,1790,"=="],[-1,1792,"> "],[1,1810,"=="],[-1,1812,"> ."],[1,1817,".p. ==S"],[-1,1817,"p\n\n\n"],[1,1828,"p"],[-1,1828,"\n"],[-1,1831,"Sp"],[-1,1858,"2 "],[1,1862,"2 "],[-1,1870,"**"],[1,1874,"**"],[1,1881,"\nS"],[1,1883,"p"],[-1,1883,"\n"],[-1,1886,"Sp"],[-1,1903,"**"],[1,1907,"**"],[1,1920,"\nm"],[1,1922,"y"],[-1,1922,"\n"],[-1,1925,"my"],[-1,1944,"**"],[1,1948,"**"],[1,1951," "],[-1,1952,"数"],[1,1957," 起\n\n**；Sp"],[-1,1957,"起来**；\n\n"],[-1,1966,"Sp"],[1,1984,"与 于"],[-1,1984,"于 S"],[-1,1996,"- "],[1,2000,"- "],[-1,2014,"："],[1,2017,"："],[1,2037,"my"],[-1,2039,"my"],[-1,2068,"- "],[1,2072,"- "],[-1,2202,"- "],[1,2206,"- "],[1,2228,"它允"],[-1,2230,"它允"],[1,2263,"，如"],[-1,2265,"，如"],[1,2326,"**"],[-1,2326,"持久"],[1,2342,"**"],[-1,2342,"\n\n"],[1,2572,"**"],[-1,2572,"业务"],[1,2584,"**"],[-1,2584,"\n\n"],[1,2624,"\n"],[-1,2624," "],[1,2812,"**"],[-1,2812,"表现"],[1,2837,"**"],[-1,2837,"\n\n"],[1,2886,"\n"],[-1,2886," "],[1,3045,"**ew层**"],[-1,3045,"View层\n\n"],[1,3114,"**联系**"],[-1,3114,"各层联系\n\n"],[1,3325,"\n"],[-1,3325," "],[1,3503,"==**  "],[-1,3503,"\n\n**最近"]],[3513,3513],[24,24]]],[1570882454491,["GJX@GJXAIOU",[[1,962,"  - \n"]],[961,961],[966,966]]],[1570882455314,["GJX@GJXAIOU",[[1,966,"-"]],[966,966],[967,967]]],[1570882456055,["GJX@GJXAIOU",[[-1,966,"-"]],[967,967],[966,966]]],[1570882462641,["GJX@GJXAIOU",[[1,966,"springmvc.xml ;"]],[966,966],[981,981]]],[1570882463226,["GJX@GJXAIOU",[[-1,980,";"]],[981,981],[980,980]]],[1570882463524,["GJX@GJXAIOU",[[1,980,":"]],[980,980],[981,981]]],[1570882464456,["GJX@GJXAIOU",[[-1,980,":"]],[981,981],[980,980]]],[1570882487891,["GJX@GJXAIOU",[[1,980,"：配置 "]],[980,980],[984,984]]],[1570882491152,["GJX@GJXAIOU",[[-1,983," "]],[984,984],[983,983]]],[1570882493950,["GJX@GJXAIOU",[[1,983,"扫描吧"]],[983,983],[986,986]]],[1570882494424,["GJX@GJXAIOU",[[-1,985,"吧"]],[986,986],[985,985]]],[1570882502429,["GJX@GJXAIOU",[[1,985,"包，即项目中所有controller"]],[985,985],[1003,1003]]],[1570882502460,["GJX@GJXAIOU",[[1,993," "]],[1003,1003],[1004,1004]]],[1570882512168,["GJX@GJXAIOU",[[1,1004," 位置，配置注解驱动（）"]],[1004,1004],[1016,1016]]],[1570882574293,[null,[[-1,24,"\n*原理*"],[1,29,"框架原理\n"],[-1,41,"**"],[1,43,"作用\n\n"],[1,46," "],[1,48,"是"],[-1,49,"是"],[-1,52," "],[1,69," "],[1,70," "],[-1,71," "],[-1,73," "],[1,79," "],[-1,81," "],[1,90," "],[-1,92," "],[1,94," "],[-1,96," "],[1,129," "],[-1,131," "],[1,135," "],[-1,137," "],[-1,141,"使用"],[1,145,"使用"],[-1,157,"请求"],[1,161,"请求"],[-1,169,"\n\n"],[-1,173,"s"],[1,174,"\n"],[1,176,"sp"],[-1,188,"，m"],[1,193,"my"],[-1,212,"**"],[-1,225,"Sp"],[1,227,"\n\n"],[-1,243,"."],[1,244,"\n"],[1,248,"客户"],[1,254," "],[-1,256," "],[-1,272,"分发"],[1,280,"分发"],[-1,282,"\n\n"],[-1,305,"2"],[1,306,"\n"],[-1,310,"i "],[1,312,"由 Di"],[1,326," "],[-1,328," "],[1,332," "],[-1,334," "],[-1,347,"找到"],[1,371,"找到"],[1,376," "],[-1,378," "],[-1,387,"\n\n；3"],[1,391,"；\n"],[1,438,"Co"],[1,446," "],[-1,448," "],[1,459," "],[-1,461," "],[-1,472,"\n\n"],[-1,490,"4"],[1,491,"\n"],[1,495,"Di"],[-1,505,"clvt"],[1,509,"vlet "],[-1,511," "],[1,532," "],[-1,534," "],[-1,539,"\n5"],[1,545,"视图"],[-1,558,"!["],[-1,621,"Sp"],[1,623,"\n\n"],[1,1023,"Sp"],[-1,1049,"它可"],[1,1053,"它可"],[-1,1066,"["],[1,1068,"a"],[-1,1070,"]("],[1,1072,"中的"],[-1,1093,"），"],[1,1097,"），"],[1,1168,"- "],[-1,1170,"- "],[1,1248,"**"],[-1,1250,"**"],[-1,1311,"。在"],[1,1315,"。在"],[-1,1370,"**"],[1,1383,"\n要"],[-1,1392,"1."],[1,1396,"先写"],[-1,1451,"2."],[1,1455,"写M"],[-1,1546,"3."],[1,1550,"写M"],[-1,1562,"Ma"],[1,1566,"Ma"],[-1,1591,"。\n"],[-1,1595,"4."],[1,1597,"。\n"],[1,1599,"写S"],[1,1612,"**"],[-1,1614,"**"],[-1,1646,"。\n"],[-1,1650,"5.-"],[1,1653,"。\n- 写"],[1,1669,"**"],[-1,1671,"**"],[-1,1681,"，获"],[-1,1685,"取"],[1,1686,"，"],[1,1688,"获取"],[-1,1741,"。\n"],[-1,1745,"6.-J "],[1,1750,"。\n-  写J"],[-1,1784,"=="],[1,1788,"> "],[-1,1795,"=="],[1,1799,"> "],[-1,1810,"=="],[1,1814,"> "],[-1,1821,"["],[1,1823,"a"],[-1,1825,"]("],[1,1830,"> "],[-1,1843,"=="],[1,1847,"> "],[-1,1863,"=="],[1,1867,"> ."],[-1,1869,".p. ==S"],[1,1876,"p\n\n\n"],[-1,1883,"p"],[1,1884,"\n"],[1,1886,"Sp"],[1,1911,"2 "],[-1,1913,"2 "],[1,1923,"**"],[-1,1925,"**"],[-1,1934,"\nS"],[-1,1938,"p"],[1,1939,"\n"],[1,1941,"Sp"],[1,1956,"**"],[-1,1958,"**"],[-1,1973,"\nm"],[-1,1977,"y"],[1,1978,"\n"],[1,1980,"my"],[1,1997,"**"],[-1,1999,"**"],[-1,2004," "],[1,2006,"数"],[-1,2010," 起\n\n**；Sp"],[1,2019,"起来**；\n\n"],[1,2021,"Sp"],[-1,2037,"与 于"],[1,2040,"于 S"],[1,2049,"- "],[-1,2051,"- "],[1,2067,"："],[-1,2069,"："],[-1,2090,"my"],[1,2094,"my"],[1,2121,"- "],[-1,2123,"- "],[1,2255,"- "],[-1,2257,"- "],[-1,2281,"它允"],[1,2285,"它允"],[-1,2316,"，如"],[1,2320,"，如"],[-1,2379,"**"],[1,2381,"持久"],[-1,2395,"**"],[1,2397,"\n\n"],[-1,2625,"**"],[1,2627,"业务"],[-1,2637,"**"],[1,2639,"\n\n"],[-1,2677,"\n"],[1,2678," "],[-1,2865,"**"],[1,2867,"表现"],[-1,2890,"**"],[1,2892,"\n\n"],[-1,2939,"\n"],[1,2940," "],[-1,3098,"**ew层**"],[1,3105,"View层\n\n"],[-1,3167,"**联系**"],[1,3173,"各层联系\n\n"],[-1,3378,"\n"],[1,3379," "],[-1,3556,"==**  "],[1,3562,"\n\n**最近"]],[24,24],[3568,3568]]],[1570882574293,[null,[[1,24,"\n*原理*"],[-1,24,"框架原理\n"],[1,41,"**"],[-1,41,"作用\n\n"],[-1,48," "],[-1,51,"是"],[1,53,"是"],[1,55," "],[-1,71," "],[-1,73," "],[1,75," "],[1,76," "],[-1,81," "],[1,84," "],[-1,92," "],[1,95," "],[-1,96," "],[1,99," "],[-1,131," "],[1,134," "],[-1,137," "],[1,140," "],[1,143,"使用"],[-1,145,"使用"],[1,159,"请求"],[-1,161,"请求"],[1,171,"\n\n"],[1,173,"s"],[-1,173,"\n"],[-1,176,"sp"],[1,190,"，m"],[-1,193,"my"],[1,214,"**"],[1,225,"Sp"],[-1,225,"\n\n"],[1,243,"."],[-1,243,"\n"],[-1,248,"客户"],[-1,256," "],[1,259," "],[1,274,"分发"],[-1,280,"分发"],[1,284,"\n\n"],[1,305,"2"],[-1,305,"\n"],[1,310,"i "],[-1,310,"由 Di"],[-1,328," "],[1,331," "],[-1,334," "],[1,337," "],[1,349,"找到"],[-1,371,"找到"],[-1,378," "],[1,381," "],[1,389,"\n\n；3"],[-1,389,"；\n"],[-1,438,"Co"],[-1,448," "],[1,451," "],[-1,461," "],[1,464," "],[1,474,"\n\n"],[1,490,"4"],[-1,490,"\n"],[-1,495,"Di"],[1,507,"clvt"],[-1,507,"vlet "],[1,514," "],[-1,534," "],[1,537," "],[1,541,"\n5"],[-1,545,"视图"],[1,560,"!["],[1,621,"Sp"],[-1,621,"\n\n"],[-1,1023,"Sp"],[1,1051,"它可"],[-1,1053,"它可"],[1,1068,"["],[-1,1069,"a"],[1,1072,"]("],[-1,1072,"中的"],[1,1095,"），"],[-1,1097,"），"],[-1,1170,"- "],[1,1174,"- "],[-1,1250,"**"],[1,1254,"**"],[1,1313,"。在"],[-1,1315,"。在"],[1,1372,"**"],[-1,1383,"\n要"],[1,1394,"1."],[-1,1396,"先写"],[1,1453,"2."],[-1,1455,"写M"],[1,1548,"3."],[-1,1550,"写M"],[1,1564,"Ma"],[-1,1566,"Ma"],[1,1593,"。\n"],[1,1595,"4."],[-1,1595,"。\n"],[-1,1599,"写S"],[-1,1614,"**"],[1,1618,"**"],[1,1648,"。\n"],[1,1650,"5.-"],[-1,1650,"。\n- 写"],[-1,1671,"**"],[1,1675,"**"],[1,1683,"，获"],[1,1685,"取"],[-1,1685,"，"],[-1,1688,"获取"],[1,1743,"。\n"],[1,1745,"6.-J "],[-1,1745,"。\n-  写J"],[1,1786,"=="],[-1,1788,"> "],[1,1797,"=="],[-1,1799,"> "],[1,1812,"=="],[-1,1814,"> "],[1,1823,"["],[-1,1824,"a"],[1,1827,"]("],[-1,1830,"> "],[1,1845,"=="],[-1,1847,"> "],[1,1865,"=="],[-1,1867,"> ."],[1,1872,".p. ==S"],[-1,1872,"p\n\n\n"],[1,1883,"p"],[-1,1883,"\n"],[-1,1886,"Sp"],[-1,1913,"2 "],[1,1917,"2 "],[-1,1925,"**"],[1,1929,"**"],[1,1936,"\nS"],[1,1938,"p"],[-1,1938,"\n"],[-1,1941,"Sp"],[-1,1958,"**"],[1,1962,"**"],[1,1975,"\nm"],[1,1977,"y"],[-1,1977,"\n"],[-1,1980,"my"],[-1,1999,"**"],[1,2003,"**"],[1,2006," "],[-1,2007,"数"],[1,2012," 起\n\n**；Sp"],[-1,2012,"起来**；\n\n"],[-1,2021,"Sp"],[1,2039,"与 于"],[-1,2039,"于 S"],[-1,2051,"- "],[1,2055,"- "],[-1,2069,"："],[1,2072,"："],[1,2092,"my"],[-1,2094,"my"],[-1,2123,"- "],[1,2127,"- "],[-1,2257,"- "],[1,2261,"- "],[1,2283,"它允"],[-1,2285,"它允"],[1,2318,"，如"],[-1,2320,"，如"],[1,2381,"**"],[-1,2381,"持久"],[1,2397,"**"],[-1,2397,"\n\n"],[1,2627,"**"],[-1,2627,"业务"],[1,2639,"**"],[-1,2639,"\n\n"],[1,2679,"\n"],[-1,2679," "],[1,2867,"**"],[-1,2867,"表现"],[1,2892,"**"],[-1,2892,"\n\n"],[1,2941,"\n"],[-1,2941," "],[1,3100,"**ew层**"],[-1,3100,"View层\n\n"],[1,3169,"**联系**"],[-1,3169,"各层联系\n\n"],[1,3380,"\n"],[-1,3380," "],[1,3558,"==**  "],[-1,3558,"\n\n**最近"]],[3568,3568],[24,24]]],[1570882519997,["GJX@GJXAIOU",[[1,1015,"一般使用注解"]],[1015,1015],[1021,1021]]],[1570882537326,["GJX@GJXAIOU",[[1,1022,"，配置不要拦截今天"]],[1022,1022],[1031,1031]]],[1570882537951,["GJX@GJXAIOU",[[-1,1029,"今天"]],[1031,1031],[1029,1029]]],[1570882550165,["GJX@GJXAIOU",[[1,1029,"静态资源、自定义视图解析器（）"]],[1029,1029],[1044,1044]]],[1570882571997,["GJX@GJXAIOU",[[1,1043,"就是前后缀，可以和 controller 的返回值"]],[1043,1043],[1068,1068]]],[1570882634295,[null,[[-1,24,"\n*原理*"],[1,29,"框架原理\n"],[-1,41,"**"],[1,43,"作用\n\n"],[1,46," "],[1,48,"是"],[-1,49,"是"],[-1,52," "],[1,69," "],[1,70," "],[-1,71," "],[-1,73," "],[1,79," "],[-1,81," "],[1,90," "],[-1,92," "],[1,94," "],[-1,96," "],[1,129," "],[-1,131," "],[1,135," "],[-1,137," "],[-1,141,"使用"],[1,145,"使用"],[-1,157,"请求"],[1,161,"请求"],[-1,169,"\n\n"],[-1,173,"s"],[1,174,"\n"],[1,176,"sp"],[-1,188,"，m"],[1,193,"my"],[-1,212,"**"],[-1,225,"Sp"],[1,227,"\n\n"],[-1,243,"."],[1,244,"\n"],[1,248,"客户"],[1,254," "],[-1,256," "],[-1,272,"分发"],[1,280,"分发"],[-1,282,"\n\n"],[-1,305,"2"],[1,306,"\n"],[-1,310,"i "],[1,312,"由 Di"],[1,326," "],[-1,328," "],[1,332," "],[-1,334," "],[-1,347,"找到"],[1,371,"找到"],[1,376," "],[-1,378," "],[-1,387,"\n\n；3"],[1,391,"；\n"],[1,438,"Co"],[1,446," "],[-1,448," "],[1,459," "],[-1,461," "],[-1,472,"\n\n"],[-1,490,"4"],[1,491,"\n"],[1,495,"Di"],[-1,505,"clvt"],[1,509,"vlet "],[-1,511," "],[1,532," "],[-1,534," "],[-1,539,"\n5"],[1,545,"视图"],[-1,558,"!["],[-1,621,"Sp"],[1,623,"\n\n"],[1,1076,"Sp"],[-1,1102,"它可"],[1,1106,"它可"],[-1,1119,"["],[1,1121,"a"],[-1,1123,"]("],[1,1125,"中的"],[-1,1146,"），"],[1,1150,"），"],[1,1221,"- "],[-1,1223,"- "],[1,1301,"**"],[-1,1303,"**"],[-1,1364,"。在"],[1,1368,"。在"],[-1,1423,"**"],[1,1436,"\n要"],[-1,1445,"1."],[1,1449,"先写"],[-1,1504,"2."],[1,1508,"写M"],[-1,1599,"3."],[1,1603,"写M"],[-1,1615,"Ma"],[1,1619,"Ma"],[-1,1644,"。\n"],[-1,1648,"4."],[1,1650,"。\n"],[1,1652,"写S"],[1,1665,"**"],[-1,1667,"**"],[-1,1699,"。\n"],[-1,1703,"5.-"],[1,1706,"。\n- 写"],[1,1722,"**"],[-1,1724,"**"],[-1,1734,"，获"],[-1,1738,"取"],[1,1739,"，"],[1,1741,"获取"],[-1,1794,"。\n"],[-1,1798,"6.-J "],[1,1803,"。\n-  写J"],[-1,1837,"=="],[1,1841,"> "],[-1,1848,"=="],[1,1852,"> "],[-1,1863,"=="],[1,1867,"> "],[-1,1874,"["],[1,1876,"a"],[-1,1878,"]("],[1,1883,"> "],[-1,1896,"=="],[1,1900,"> "],[-1,1916,"=="],[1,1920,"> ."],[-1,1922,".p. ==S"],[1,1929,"p\n\n\n"],[-1,1936,"p"],[1,1937,"\n"],[1,1939,"Sp"],[1,1964,"2 "],[-1,1966,"2 "],[1,1976,"**"],[-1,1978,"**"],[-1,1987,"\nS"],[-1,1991,"p"],[1,1992,"\n"],[1,1994,"Sp"],[1,2009,"**"],[-1,2011,"**"],[-1,2026,"\nm"],[-1,2030,"y"],[1,2031,"\n"],[1,2033,"my"],[1,2050,"**"],[-1,2052,"**"],[-1,2057," "],[1,2059,"数"],[-1,2063," 起\n\n**；Sp"],[1,2072,"起来**；\n\n"],[1,2074,"Sp"],[-1,2090,"与 于"],[1,2093,"于 S"],[1,2102,"- "],[-1,2104,"- "],[1,2120,"："],[-1,2122,"："],[-1,2143,"my"],[1,2147,"my"],[1,2174,"- "],[-1,2176,"- "],[1,2308,"- "],[-1,2310,"- "],[-1,2334,"它允"],[1,2338,"它允"],[-1,2369,"，如"],[1,2373,"，如"],[-1,2432,"**"],[1,2434,"持久"],[-1,2448,"**"],[1,2450,"\n\n"],[-1,2678,"**"],[1,2680,"业务"],[-1,2690,"**"],[1,2692,"\n\n"],[-1,2730,"\n"],[1,2731," "],[-1,2918,"**"],[1,2920,"表现"],[-1,2943,"**"],[1,2945,"\n\n"],[-1,2992,"\n"],[1,2993," "],[-1,3151,"**ew层**"],[1,3158,"View层\n\n"],[-1,3220,"**联系**"],[1,3226,"各层联系\n\n"],[-1,3431,"\n"],[1,3432," "],[-1,3609,"==**  "],[1,3615,"\n\n**最近"]],[24,24],[3621,3621]]],[1570882634295,[null,[[1,24,"\n*原理*"],[-1,24,"框架原理\n"],[1,41,"**"],[-1,41,"作用\n\n"],[-1,48," "],[-1,51,"是"],[1,53,"是"],[1,55," "],[-1,71," "],[-1,73," "],[1,75," "],[1,76," "],[-1,81," "],[1,84," "],[-1,92," "],[1,95," "],[-1,96," "],[1,99," "],[-1,131," "],[1,134," "],[-1,137," "],[1,140," "],[1,143,"使用"],[-1,145,"使用"],[1,159,"请求"],[-1,161,"请求"],[1,171,"\n\n"],[1,173,"s"],[-1,173,"\n"],[-1,176,"sp"],[1,190,"，m"],[-1,193,"my"],[1,214,"**"],[1,225,"Sp"],[-1,225,"\n\n"],[1,243,"."],[-1,243,"\n"],[-1,248,"客户"],[-1,256," "],[1,259," "],[1,274,"分发"],[-1,280,"分发"],[1,284,"\n\n"],[1,305,"2"],[-1,305,"\n"],[1,310,"i "],[-1,310,"由 Di"],[-1,328," "],[1,331," "],[-1,334," "],[1,337," "],[1,349,"找到"],[-1,371,"找到"],[-1,378," "],[1,381," "],[1,389,"\n\n；3"],[-1,389,"；\n"],[-1,438,"Co"],[-1,448," "],[1,451," "],[-1,461," "],[1,464," "],[1,474,"\n\n"],[1,490,"4"],[-1,490,"\n"],[-1,495,"Di"],[1,507,"clvt"],[-1,507,"vlet "],[1,514," "],[-1,534," "],[1,537," "],[1,541,"\n5"],[-1,545,"视图"],[1,560,"!["],[1,621,"Sp"],[-1,621,"\n\n"],[-1,1076,"Sp"],[1,1104,"它可"],[-1,1106,"它可"],[1,1121,"["],[-1,1122,"a"],[1,1125,"]("],[-1,1125,"中的"],[1,1148,"），"],[-1,1150,"），"],[-1,1223,"- "],[1,1227,"- "],[-1,1303,"**"],[1,1307,"**"],[1,1366,"。在"],[-1,1368,"。在"],[1,1425,"**"],[-1,1436,"\n要"],[1,1447,"1."],[-1,1449,"先写"],[1,1506,"2."],[-1,1508,"写M"],[1,1601,"3."],[-1,1603,"写M"],[1,1617,"Ma"],[-1,1619,"Ma"],[1,1646,"。\n"],[1,1648,"4."],[-1,1648,"。\n"],[-1,1652,"写S"],[-1,1667,"**"],[1,1671,"**"],[1,1701,"。\n"],[1,1703,"5.-"],[-1,1703,"。\n- 写"],[-1,1724,"**"],[1,1728,"**"],[1,1736,"，获"],[1,1738,"取"],[-1,1738,"，"],[-1,1741,"获取"],[1,1796,"。\n"],[1,1798,"6.-J "],[-1,1798,"。\n-  写J"],[1,1839,"=="],[-1,1841,"> "],[1,1850,"=="],[-1,1852,"> "],[1,1865,"=="],[-1,1867,"> "],[1,1876,"["],[-1,1877,"a"],[1,1880,"]("],[-1,1883,"> "],[1,1898,"=="],[-1,1900,"> "],[1,1918,"=="],[-1,1920,"> ."],[1,1925,".p. ==S"],[-1,1925,"p\n\n\n"],[1,1936,"p"],[-1,1936,"\n"],[-1,1939,"Sp"],[-1,1966,"2 "],[1,1970,"2 "],[-1,1978,"**"],[1,1982,"**"],[1,1989,"\nS"],[1,1991,"p"],[-1,1991,"\n"],[-1,1994,"Sp"],[-1,2011,"**"],[1,2015,"**"],[1,2028,"\nm"],[1,2030,"y"],[-1,2030,"\n"],[-1,2033,"my"],[-1,2052,"**"],[1,2056,"**"],[1,2059," "],[-1,2060,"数"],[1,2065," 起\n\n**；Sp"],[-1,2065,"起来**；\n\n"],[-1,2074,"Sp"],[1,2092,"与 于"],[-1,2092,"于 S"],[-1,2104,"- "],[1,2108,"- "],[-1,2122,"："],[1,2125,"："],[1,2145,"my"],[-1,2147,"my"],[-1,2176,"- "],[1,2180,"- "],[-1,2310,"- "],[1,2314,"- "],[1,2336,"它允"],[-1,2338,"它允"],[1,2371,"，如"],[-1,2373,"，如"],[1,2434,"**"],[-1,2434,"持久"],[1,2450,"**"],[-1,2450,"\n\n"],[1,2680,"**"],[-1,2680,"业务"],[1,2692,"**"],[-1,2692,"\n\n"],[1,2732,"\n"],[-1,2732," "],[1,2920,"**"],[-1,2920,"表现"],[1,2945,"**"],[-1,2945,"\n\n"],[1,2994,"\n"],[-1,2994," "],[1,3153,"**ew层**"],[-1,3153,"View层\n\n"],[1,3222,"**联系**"],[-1,3222,"各层联系\n\n"],[1,3433,"\n"],[-1,3433," "],[1,3611,"==**  "],[-1,3611,"\n\n**最近"]],[3621,3621],[24,24]]],[1570882583348,["GJX@GJXAIOU",[[1,1068,"相连接，构成完整的页面路径"]],[1068,1068],[1081,1081]]],[1570882586002,["GJX@GJXAIOU",[[1,1082,"；"]],[1082,1082],[1083,1083]]],[1570882591360,["GJX@GJXAIOU",[[1,1084,"  - \n"]],[1083,1083],[1088,1088]]],[1570882599426,["GJX@GJXAIOU",[[1,1088,"controller 中代码示例："]],[1088,1088],[1105,1105]]],[1570882599769,["GJX@GJXAIOU",[[1,1106,"  - \n"]],[1105,1105],[1110,1110]]],[1570882600576,["GJX@GJXAIOU",[[-1,1107," - "]],[1110,1110],[1107,1107]]],[1570882603027,["GJX@GJXAIOU",[[1,1107,"```java"]],[1107,1107],[1114,1114]]],[1570882603298,["GJX@GJXAIOU",[[1,1115," \n"]],[1114,1114],[1116,1116]]],[1570882603475,["GJX@GJXAIOU",[[-1,1115," "],[1,1116,"\n"]],[1116,1116],[1116,1116]]],[1570882603641,["GJX@GJXAIOU",[[1,1121,"\n"]],[1116,1116],[1117,1117]]],[1570882604217,["GJX@GJXAIOU",[[1,1117,"```"]],[1117,1117],[1120,1120]]],[1570882604249,["GJX@GJXAIOU",[[1,1120,"language\n```\n"]],[1120,1120],[1120,1128]]],[1570882607865,["GJX@GJXAIOU",[[-1,1106," ```java"]],[1106,1114],[1106,1106]]],[1570882609291,["GJX@GJXAIOU",[[-1,1108,"\n"]],[1107,1108],[1107,1107]]],[1570882609681,["GJX@GJXAIOU",[[-1,1107,"\n"]],[1107,1107],[1106,1106]]],[1570882610111,["GJX@GJXAIOU",[[-1,1106,"\n"]],[1106,1106],[1105,1105]]],[1570882612784,["GJX@GJXAIOU",[[-1,1109,"language"]],[1117,1117],[1109,1109]]],[1570882613969,["GJX@GJXAIOU",[[1,1109,"java"]],[1109,1109],[1113,1113]]],[1570882614113,["GJX@GJXAIOU",[[1,1114,"\n"]],[1113,1113],[1114,1114]]],[1570882618313,["GJX@GJXAIOU",[[1,1114,"@conr"]],[1114,1114],[1119,1119]]],[1570882618711,["GJX@GJXAIOU",[[-1,1118,"r"]],[1119,1119],[1118,1118]]],[1570882627690,["GJX@GJXAIOU",[[1,1118,"troller // 两"]],[1118,1118],[1130,1130]]],[1570882628361,["GJX@GJXAIOU",[[-1,1129,"两"]],[1130,1130],[1129,1129]]],[1570882633277,["GJX@GJXAIOU",[[1,1129,"将该类"]],[1129,1129],[1132,1132]]],[1570882694303,[null,[[-1,24,"\n*原理*"],[1,29,"框架原理\n"],[-1,41,"**"],[1,43,"作用\n\n"],[1,46," "],[1,48,"是"],[-1,49,"是"],[-1,52," "],[1,69," "],[1,70," "],[-1,71," "],[-1,73," "],[1,79," "],[-1,81," "],[1,90," "],[-1,92," "],[1,94," "],[-1,96," "],[1,129," "],[-1,131," "],[1,135," "],[-1,137," "],[-1,141,"使用"],[1,145,"使用"],[-1,157,"请求"],[1,161,"请求"],[-1,169,"\n\n"],[-1,173,"s"],[1,174,"\n"],[1,176,"sp"],[-1,188,"，m"],[1,193,"my"],[-1,212,"**"],[-1,225,"Sp"],[1,227,"\n\n"],[-1,243,"."],[1,244,"\n"],[1,248,"客户"],[1,254," "],[-1,256," "],[-1,272,"分发"],[1,280,"分发"],[-1,282,"\n\n"],[-1,305,"2"],[1,306,"\n"],[-1,310,"i "],[1,312,"由 Di"],[1,326," "],[-1,328," "],[1,332," "],[-1,334," "],[-1,347,"找到"],[1,371,"找到"],[1,376," "],[-1,378," "],[-1,387,"\n\n；3"],[1,391,"；\n"],[1,438,"Co"],[1,446," "],[-1,448," "],[1,459," "],[-1,461," "],[-1,472,"\n\n"],[-1,490,"4"],[1,491,"\n"],[1,495,"Di"],[-1,505,"clvt"],[1,509,"vlet "],[-1,511," "],[1,532," "],[-1,534," "],[-1,539,"\n5"],[1,545,"视图"],[-1,558,"!["],[-1,621,"Sp"],[1,623,"\n\n"],[1,1144,"Sp"],[-1,1170,"它可"],[1,1174,"它可"],[-1,1187,"["],[1,1189,"a"],[-1,1191,"]("],[1,1193,"中的"],[-1,1214,"），"],[1,1218,"），"],[1,1289,"- "],[-1,1291,"- "],[1,1369,"**"],[-1,1371,"**"],[-1,1432,"。在"],[1,1436,"。在"],[-1,1491,"**"],[1,1504,"\n要"],[-1,1513,"1."],[1,1517,"先写"],[-1,1572,"2."],[1,1576,"写M"],[-1,1667,"3."],[1,1671,"写M"],[-1,1683,"Ma"],[1,1687,"Ma"],[-1,1712,"。\n"],[-1,1716,"4."],[1,1718,"。\n"],[1,1720,"写S"],[1,1733,"**"],[-1,1735,"**"],[-1,1767,"。\n"],[-1,1771,"5.-"],[1,1774,"。\n- 写"],[1,1790,"**"],[-1,1792,"**"],[-1,1802,"，获"],[-1,1806,"取"],[1,1807,"，"],[1,1809,"获取"],[-1,1862,"。\n"],[-1,1866,"6.-J "],[1,1871,"。\n-  写J"],[-1,1905,"=="],[1,1909,"> "],[-1,1916,"=="],[1,1920,"> "],[-1,1931,"=="],[1,1935,"> "],[-1,1942,"["],[1,1944,"a"],[-1,1946,"]("],[1,1951,"> "],[-1,1964,"=="],[1,1968,"> "],[-1,1984,"=="],[1,1988,"> ."],[-1,1990,".p. ==S"],[1,1997,"p\n\n\n"],[-1,2004,"p"],[1,2005,"\n"],[1,2007,"Sp"],[1,2032,"2 "],[-1,2034,"2 "],[1,2044,"**"],[-1,2046,"**"],[-1,2055,"\nS"],[-1,2059,"p"],[1,2060,"\n"],[1,2062,"Sp"],[1,2077,"**"],[-1,2079,"**"],[-1,2094,"\nm"],[-1,2098,"y"],[1,2099,"\n"],[1,2101,"my"],[1,2118,"**"],[-1,2120,"**"],[-1,2125," "],[1,2127,"数"],[-1,2131," 起\n\n**；Sp"],[1,2140,"起来**；\n\n"],[1,2142,"Sp"],[-1,2158,"与 于"],[1,2161,"于 S"],[1,2170,"- "],[-1,2172,"- "],[1,2188,"："],[-1,2190,"："],[-1,2211,"my"],[1,2215,"my"],[1,2242,"- "],[-1,2244,"- "],[1,2376,"- "],[-1,2378,"- "],[-1,2402,"它允"],[1,2406,"它允"],[-1,2437,"，如"],[1,2441,"，如"],[-1,2500,"**"],[1,2502,"持久"],[-1,2516,"**"],[1,2518,"\n\n"],[-1,2746,"**"],[1,2748,"业务"],[-1,2758,"**"],[1,2760,"\n\n"],[-1,2798,"\n"],[1,2799," "],[-1,2986,"**"],[1,2988,"表现"],[-1,3011,"**"],[1,3013,"\n\n"],[-1,3060,"\n"],[1,3061," "],[-1,3219,"**ew层**"],[1,3226,"View层\n\n"],[-1,3288,"**联系**"],[1,3294,"各层联系\n\n"],[-1,3499,"\n"],[1,3500," "],[-1,3677,"==**  "],[1,3683,"\n\n**最近"]],[24,24],[3689,3689]]],[1570882694303,[null,[[1,24,"\n*原理*"],[-1,24,"框架原理\n"],[1,41,"**"],[-1,41,"作用\n\n"],[-1,48," "],[-1,51,"是"],[1,53,"是"],[1,55," "],[-1,71," "],[-1,73," "],[1,75," "],[1,76," "],[-1,81," "],[1,84," "],[-1,92," "],[1,95," "],[-1,96," "],[1,99," "],[-1,131," "],[1,134," "],[-1,137," "],[1,140," "],[1,143,"使用"],[-1,145,"使用"],[1,159,"请求"],[-1,161,"请求"],[1,171,"\n\n"],[1,173,"s"],[-1,173,"\n"],[-1,176,"sp"],[1,190,"，m"],[-1,193,"my"],[1,214,"**"],[1,225,"Sp"],[-1,225,"\n\n"],[1,243,"."],[-1,243,"\n"],[-1,248,"客户"],[-1,256," "],[1,259," "],[1,274,"分发"],[-1,280,"分发"],[1,284,"\n\n"],[1,305,"2"],[-1,305,"\n"],[1,310,"i "],[-1,310,"由 Di"],[-1,328," "],[1,331," "],[-1,334," "],[1,337," "],[1,349,"找到"],[-1,371,"找到"],[-1,378," "],[1,381," "],[1,389,"\n\n；3"],[-1,389,"；\n"],[-1,438,"Co"],[-1,448," "],[1,451," "],[-1,461," "],[1,464," "],[1,474,"\n\n"],[1,490,"4"],[-1,490,"\n"],[-1,495,"Di"],[1,507,"clvt"],[-1,507,"vlet "],[1,514," "],[-1,534," "],[1,537," "],[1,541,"\n5"],[-1,545,"视图"],[1,560,"!["],[1,621,"Sp"],[-1,621,"\n\n"],[-1,1144,"Sp"],[1,1172,"它可"],[-1,1174,"它可"],[1,1189,"["],[-1,1190,"a"],[1,1193,"]("],[-1,1193,"中的"],[1,1216,"），"],[-1,1218,"），"],[-1,1291,"- "],[1,1295,"- "],[-1,1371,"**"],[1,1375,"**"],[1,1434,"。在"],[-1,1436,"。在"],[1,1493,"**"],[-1,1504,"\n要"],[1,1515,"1."],[-1,1517,"先写"],[1,1574,"2."],[-1,1576,"写M"],[1,1669,"3."],[-1,1671,"写M"],[1,1685,"Ma"],[-1,1687,"Ma"],[1,1714,"。\n"],[1,1716,"4."],[-1,1716,"。\n"],[-1,1720,"写S"],[-1,1735,"**"],[1,1739,"**"],[1,1769,"。\n"],[1,1771,"5.-"],[-1,1771,"。\n- 写"],[-1,1792,"**"],[1,1796,"**"],[1,1804,"，获"],[1,1806,"取"],[-1,1806,"，"],[-1,1809,"获取"],[1,1864,"。\n"],[1,1866,"6.-J "],[-1,1866,"。\n-  写J"],[1,1907,"=="],[-1,1909,"> "],[1,1918,"=="],[-1,1920,"> "],[1,1933,"=="],[-1,1935,"> "],[1,1944,"["],[-1,1945,"a"],[1,1948,"]("],[-1,1951,"> "],[1,1966,"=="],[-1,1968,"> "],[1,1986,"=="],[-1,1988,"> ."],[1,1993,".p. ==S"],[-1,1993,"p\n\n\n"],[1,2004,"p"],[-1,2004,"\n"],[-1,2007,"Sp"],[-1,2034,"2 "],[1,2038,"2 "],[-1,2046,"**"],[1,2050,"**"],[1,2057,"\nS"],[1,2059,"p"],[-1,2059,"\n"],[-1,2062,"Sp"],[-1,2079,"**"],[1,2083,"**"],[1,2096,"\nm"],[1,2098,"y"],[-1,2098,"\n"],[-1,2101,"my"],[-1,2120,"**"],[1,2124,"**"],[1,2127," "],[-1,2128,"数"],[1,2133," 起\n\n**；Sp"],[-1,2133,"起来**；\n\n"],[-1,2142,"Sp"],[1,2160,"与 于"],[-1,2160,"于 S"],[-1,2172,"- "],[1,2176,"- "],[-1,2190,"："],[1,2193,"："],[1,2213,"my"],[-1,2215,"my"],[-1,2244,"- "],[1,2248,"- "],[-1,2378,"- "],[1,2382,"- "],[1,2404,"它允"],[-1,2406,"它允"],[1,2439,"，如"],[-1,2441,"，如"],[1,2502,"**"],[-1,2502,"持久"],[1,2518,"**"],[-1,2518,"\n\n"],[1,2748,"**"],[-1,2748,"业务"],[1,2760,"**"],[-1,2760,"\n\n"],[1,2800,"\n"],[-1,2800," "],[1,2988,"**"],[-1,2988,"表现"],[1,3013,"**"],[-1,3013,"\n\n"],[1,3062,"\n"],[-1,3062," "],[1,3221,"**ew层**"],[-1,3221,"View层\n\n"],[1,3290,"**联系**"],[-1,3290,"各层联系\n\n"],[1,3501,"\n"],[-1,3501," "],[1,3679,"==**  "],[-1,3679,"\n\n**最近"]],[3689,3689],[24,24]]],[1570882638139,["GJX@GJXAIOU",[[1,1132,"交给容器管理"]],[1132,1132],[1138,1138]]],[1570882638449,["GJX@GJXAIOU",[[1,1139,"\n"]],[1138,1138],[1139,1139]]],[1570882646577,["GJX@GJXAIOU",[[1,1139,"public class demo(0"]],[1139,1139],[1158,1158]]],[1570882647489,["GJX@GJXAIOU",[[-1,1157,"0"]],[1158,1158],[1157,1157]]],[1570882649282,["GJX@GJXAIOU",[[1,1157,"){"]],[1157,1157],[1159,1159]]],[1570882649539,["GJX@GJXAIOU",[[1,1160,"\n"]],[1159,1159],[1160,1160]]],[1570882650496,["GJX@GJXAIOU",[[1,1161,"\n"]],[1160,1160],[1161,1161]]],[1570882650635,["GJX@GJXAIOU",[[1,1162,"\n"]],[1161,1161],[1162,1162]]],[1570882650947,["GJX@GJXAIOU",[[1,1162,"}"]],[1162,1162],[1163,1163]]],[1570882657962,["GJX@GJXAIOU",[[1,1160,"    public voi"]],[1160,1160],[1174,1174]]],[1570882658655,["GJX@GJXAIOU",[[-1,1171,"voi"]],[1174,1174],[1171,1171]]],[1570882659651,["GJX@GJXAIOU",[[1,1171,"int"]],[1171,1171],[1174,1174]]],[1570882660584,["GJX@GJXAIOU",[[-1,1171,"int"]],[1174,1174],[1171,1171]]],[1570882669626,["GJX@GJXAIOU",[[1,1171,"String hello(0"]],[1171,1171],[1185,1185]]],[1570882670544,["GJX@GJXAIOU",[[-1,1184,"0"]],[1185,1185],[1184,1184]]],[1570882671986,["GJX@GJXAIOU",[[1,1184,"){}"]],[1184,1184],[1187,1187]]],[1570882673545,["GJX@GJXAIOU",[[1,1186,"\n    \n    "]],[1186,1186],[1196,1196]]],[1570882675080,["GJX@GJXAIOU",[[-1,1198,"\n"]],[1198,1198],[1197,1197]]],[1570882686195,["GJX@GJXAIOU",[[1,1191,"    return \"main\";"]],[1191,1191],[1209,1209]]],[1570882688242,["GJX@GJXAIOU",[[1,1160,"\n"]],[1159,1159],[1160,1160]]],[1570882689626,["GJX@GJXAIOU",[[1,1160,"@"]],[1160,1160],[1161,1161]]],[1570882691891,["GJX@GJXAIOU",[[1,1160,"    "]],[1160,1160],[1164,1164]]],[1570882754299,[null,[[-1,24,"\n*原理*"],[1,29,"框架原理\n"],[-1,41,"**"],[1,43,"作用\n\n"],[1,46," "],[1,48,"是"],[-1,49,"是"],[-1,52," "],[1,69," "],[1,70," "],[-1,71," "],[-1,73," "],[1,79," "],[-1,81," "],[1,90," "],[-1,92," "],[1,94," "],[-1,96," "],[1,129," "],[-1,131," "],[1,135," "],[-1,137," "],[-1,141,"使用"],[1,145,"使用"],[-1,157,"请求"],[1,161,"请求"],[-1,169,"\n\n"],[-1,173,"s"],[1,174,"\n"],[1,176,"sp"],[-1,188,"，m"],[1,193,"my"],[-1,212,"**"],[-1,225,"Sp"],[1,227,"\n\n"],[-1,243,"."],[1,244,"\n"],[1,248,"客户"],[1,254," "],[-1,256," "],[-1,272,"分发"],[1,280,"分发"],[-1,282,"\n\n"],[-1,305,"2"],[1,306,"\n"],[-1,310,"i "],[1,312,"由 Di"],[1,326," "],[-1,328," "],[1,332," "],[-1,334," "],[-1,347,"找到"],[1,371,"找到"],[1,376," "],[-1,378," "],[-1,387,"\n\n；3"],[1,391,"；\n"],[1,438,"Co"],[1,446," "],[-1,448," "],[1,459," "],[-1,461," "],[-1,472,"\n\n"],[-1,490,"4"],[1,491,"\n"],[1,495,"Di"],[-1,505,"clvt"],[1,509,"vlet "],[-1,511," "],[1,532," "],[-1,534," "],[-1,539,"\n5"],[1,545,"视图"],[-1,558,"!["],[-1,621,"Sp"],[1,623,"\n\n"],[1,1235,"Sp"],[-1,1261,"它可"],[1,1265,"它可"],[-1,1278,"["],[1,1280,"a"],[-1,1282,"]("],[1,1284,"中的"],[-1,1305,"），"],[1,1309,"），"],[1,1380,"- "],[-1,1382,"- "],[1,1460,"**"],[-1,1462,"**"],[-1,1523,"。在"],[1,1527,"。在"],[-1,1582,"**"],[1,1595,"\n要"],[-1,1604,"1."],[1,1608,"先写"],[-1,1663,"2."],[1,1667,"写M"],[-1,1758,"3."],[1,1762,"写M"],[-1,1774,"Ma"],[1,1778,"Ma"],[-1,1803,"。\n"],[-1,1807,"4."],[1,1809,"。\n"],[1,1811,"写S"],[1,1824,"**"],[-1,1826,"**"],[-1,1858,"。\n"],[-1,1862,"5.-"],[1,1865,"。\n- 写"],[1,1881,"**"],[-1,1883,"**"],[-1,1893,"，获"],[-1,1897,"取"],[1,1898,"，"],[1,1900,"获取"],[-1,1953,"。\n"],[-1,1957,"6.-J "],[1,1962,"。\n-  写J"],[-1,1996,"=="],[1,2000,"> "],[-1,2007,"=="],[1,2011,"> "],[-1,2022,"=="],[1,2026,"> "],[-1,2033,"["],[1,2035,"a"],[-1,2037,"]("],[1,2042,"> "],[-1,2055,"=="],[1,2059,"> "],[-1,2075,"=="],[1,2079,"> ."],[-1,2081,".p. ==S"],[1,2088,"p\n\n\n"],[-1,2095,"p"],[1,2096,"\n"],[1,2098,"Sp"],[1,2123,"2 "],[-1,2125,"2 "],[1,2135,"**"],[-1,2137,"**"],[-1,2146,"\nS"],[-1,2150,"p"],[1,2151,"\n"],[1,2153,"Sp"],[1,2168,"**"],[-1,2170,"**"],[-1,2185,"\nm"],[-1,2189,"y"],[1,2190,"\n"],[1,2192,"my"],[1,2209,"**"],[-1,2211,"**"],[-1,2216," "],[1,2218,"数"],[-1,2222," 起\n\n**；Sp"],[1,2231,"起来**；\n\n"],[1,2233,"Sp"],[-1,2249,"与 于"],[1,2252,"于 S"],[1,2261,"- "],[-1,2263,"- "],[1,2279,"："],[-1,2281,"："],[-1,2302,"my"],[1,2306,"my"],[1,2333,"- "],[-1,2335,"- "],[1,2467,"- "],[-1,2469,"- "],[-1,2493,"它允"],[1,2497,"它允"],[-1,2528,"，如"],[1,2532,"，如"],[-1,2591,"**"],[1,2593,"持久"],[-1,2607,"**"],[1,2609,"\n\n"],[-1,2837,"**"],[1,2839,"业务"],[-1,2849,"**"],[1,2851,"\n\n"],[-1,2889,"\n"],[1,2890," "],[-1,3077,"**"],[1,3079,"表现"],[-1,3102,"**"],[1,3104,"\n\n"],[-1,3151,"\n"],[1,3152," "],[-1,3310,"**ew层**"],[1,3317,"View层\n\n"],[-1,3379,"**联系**"],[1,3385,"各层联系\n\n"],[-1,3590,"\n"],[1,3591," "],[-1,3768,"==**  "],[1,3774,"\n\n**最近"]],[24,24],[3780,3780]]],[1570882754299,[null,[[1,24,"\n*原理*"],[-1,24,"框架原理\n"],[1,41,"**"],[-1,41,"作用\n\n"],[-1,48," "],[-1,51,"是"],[1,53,"是"],[1,55," "],[-1,71," "],[-1,73," "],[1,75," "],[1,76," "],[-1,81," "],[1,84," "],[-1,92," "],[1,95," "],[-1,96," "],[1,99," "],[-1,131," "],[1,134," "],[-1,137," "],[1,140," "],[1,143,"使用"],[-1,145,"使用"],[1,159,"请求"],[-1,161,"请求"],[1,171,"\n\n"],[1,173,"s"],[-1,173,"\n"],[-1,176,"sp"],[1,190,"，m"],[-1,193,"my"],[1,214,"**"],[1,225,"Sp"],[-1,225,"\n\n"],[1,243,"."],[-1,243,"\n"],[-1,248,"客户"],[-1,256," "],[1,259," "],[1,274,"分发"],[-1,280,"分发"],[1,284,"\n\n"],[1,305,"2"],[-1,305,"\n"],[1,310,"i "],[-1,310,"由 Di"],[-1,328," "],[1,331," "],[-1,334," "],[1,337," "],[1,349,"找到"],[-1,371,"找到"],[-1,378," "],[1,381," "],[1,389,"\n\n；3"],[-1,389,"；\n"],[-1,438,"Co"],[-1,448," "],[1,451," "],[-1,461," "],[1,464," "],[1,474,"\n\n"],[1,490,"4"],[-1,490,"\n"],[-1,495,"Di"],[1,507,"clvt"],[-1,507,"vlet "],[1,514," "],[-1,534," "],[1,537," "],[1,541,"\n5"],[-1,545,"视图"],[1,560,"!["],[1,621,"Sp"],[-1,621,"\n\n"],[-1,1235,"Sp"],[1,1263,"它可"],[-1,1265,"它可"],[1,1280,"["],[-1,1281,"a"],[1,1284,"]("],[-1,1284,"中的"],[1,1307,"），"],[-1,1309,"），"],[-1,1382,"- "],[1,1386,"- "],[-1,1462,"**"],[1,1466,"**"],[1,1525,"。在"],[-1,1527,"。在"],[1,1584,"**"],[-1,1595,"\n要"],[1,1606,"1."],[-1,1608,"先写"],[1,1665,"2."],[-1,1667,"写M"],[1,1760,"3."],[-1,1762,"写M"],[1,1776,"Ma"],[-1,1778,"Ma"],[1,1805,"。\n"],[1,1807,"4."],[-1,1807,"。\n"],[-1,1811,"写S"],[-1,1826,"**"],[1,1830,"**"],[1,1860,"。\n"],[1,1862,"5.-"],[-1,1862,"。\n- 写"],[-1,1883,"**"],[1,1887,"**"],[1,1895,"，获"],[1,1897,"取"],[-1,1897,"，"],[-1,1900,"获取"],[1,1955,"。\n"],[1,1957,"6.-J "],[-1,1957,"。\n-  写J"],[1,1998,"=="],[-1,2000,"> "],[1,2009,"=="],[-1,2011,"> "],[1,2024,"=="],[-1,2026,"> "],[1,2035,"["],[-1,2036,"a"],[1,2039,"]("],[-1,2042,"> "],[1,2057,"=="],[-1,2059,"> "],[1,2077,"=="],[-1,2079,"> ."],[1,2084,".p. ==S"],[-1,2084,"p\n\n\n"],[1,2095,"p"],[-1,2095,"\n"],[-1,2098,"Sp"],[-1,2125,"2 "],[1,2129,"2 "],[-1,2137,"**"],[1,2141,"**"],[1,2148,"\nS"],[1,2150,"p"],[-1,2150,"\n"],[-1,2153,"Sp"],[-1,2170,"**"],[1,2174,"**"],[1,2187,"\nm"],[1,2189,"y"],[-1,2189,"\n"],[-1,2192,"my"],[-1,2211,"**"],[1,2215,"**"],[1,2218," "],[-1,2219,"数"],[1,2224," 起\n\n**；Sp"],[-1,2224,"起来**；\n\n"],[-1,2233,"Sp"],[1,2251,"与 于"],[-1,2251,"于 S"],[-1,2263,"- "],[1,2267,"- "],[-1,2281,"："],[1,2284,"："],[1,2304,"my"],[-1,2306,"my"],[-1,2335,"- "],[1,2339,"- "],[-1,2469,"- "],[1,2473,"- "],[1,2495,"它允"],[-1,2497,"它允"],[1,2530,"，如"],[-1,2532,"，如"],[1,2593,"**"],[-1,2593,"持久"],[1,2609,"**"],[-1,2609,"\n\n"],[1,2839,"**"],[-1,2839,"业务"],[1,2851,"**"],[-1,2851,"\n\n"],[1,2891,"\n"],[-1,2891," "],[1,3079,"**"],[-1,3079,"表现"],[1,3104,"**"],[-1,3104,"\n\n"],[1,3153,"\n"],[-1,3153," "],[1,3312,"**ew层**"],[-1,3312,"View层\n\n"],[1,3381,"**联系**"],[-1,3381,"各层联系\n\n"],[1,3592,"\n"],[-1,3592," "],[1,3770,"==**  "],[-1,3770,"\n\n**最近"]],[3780,3780],[24,24]]],[1570882709433,["GJX@GJXAIOU",[[1,1165,"RequestMapping()"]],[1165,1165],[1181,1181]]],[1570882713194,["GJX@GJXAIOU",[[1,1180,"\"A\""]],[1180,1180],[1183,1183]]],[1570882719553,["GJX@GJXAIOU",[[1,1243,"\n"]],[1242,1242],[1243,1243]]],[1570882720696,["GJX@GJXAIOU",[[-1,1243,"\n"]],[1243,1243],[1242,1242]]],[1570882722703,["GJX@GJXAIOU",[[1,1252,"\n"]],[1246,1246],[1247,1247]]],[1570882737065,["GJX@GJXAIOU",[[1,1247,"然后在 jsp 的例如表单中的 acting"]],[1247,1247],[1269,1269]]],[1570882737838,["GJX@GJXAIOU",[[-1,1267,"ng"]],[1269,1269],[1267,1267]]],[1570882739164,["GJX@GJXAIOU",[[1,1267,"ion"]],[1267,1267],[1270,1270]]],[1570882741522,["GJX@GJXAIOU",[[-1,1267,"i"]],[1267,1267],[1266,1266]]],[1570882750853,["GJX@GJXAIOU",[[1,1269," 属性配置为：A，则"]],[1269,1269],[1279,1279]]],[1570882753326,["GJX@GJXAIOU",[[-1,1278,"则"]],[1279,1279],[1278,1278]]],[1570882754088,["GJX@GJXAIOU",[[1,1278,"将"]],[1278,1278],[1279,1279]]],[1570882814297,[null,[[-1,24,"\n*原理*"],[1,29,"框架原理\n"],[-1,41,"**"],[1,43,"作用\n\n"],[1,46," "],[1,48,"是"],[-1,49,"是"],[-1,52," "],[1,69," "],[1,70," "],[-1,71," "],[-1,73," "],[1,79," "],[-1,81," "],[1,90," "],[-1,92," "],[1,94," "],[-1,96," "],[1,129," "],[-1,131," "],[1,135," "],[-1,137," "],[1,141,"- "],[-1,143,"- "],[1,157,"**"],[-1,159,"**"],[-1,169,"\n\n"],[-1,173,"s"],[1,174,"\n"],[1,176,"sp"],[-1,188,"，m"],[1,193,"my"],[-1,212,"**"],[-1,225,"Sp"],[1,227,"\n\n"],[-1,243,"."],[1,244,"\n"],[1,248,"客户"],[1,254," "],[-1,256," "],[-1,272,"分发"],[1,280,"分发"],[-1,282,"\n\n"],[-1,305,"2"],[1,306,"\n"],[-1,310,"i "],[1,312,"由 Di"],[1,326," "],[-1,328," "],[1,332," "],[-1,334," "],[-1,347,"找到"],[1,371,"找到"],[1,376," "],[-1,378," "],[-1,387,"\n\n；3"],[1,391,"；\n"],[1,438,"Co"],[1,446," "],[-1,448," "],[1,459," "],[-1,461," "],[-1,472,"\n\n"],[-1,490,"4"],[1,491,"\n"],[1,495,"Di"],[-1,505,"cl"],[1,508,"le"],[1,509," "],[-1,511," "],[1,532," "],[-1,534," "],[-1,539,"\n5"],[1,545,"视图"],[-1,558,"!["],[-1,621,"Sp"],[1,623,"\n\n"],[1,1287,"Sp"],[1,1313,"**"],[-1,1315,"**"],[-1,1330,"["],[1,1332,"a"],[-1,1334,"]("],[1,1336,"中的"],[-1,1357,"），"],[1,1361,"），"],[1,1432,"- "],[-1,1434,"- "],[1,1512,"**"],[-1,1514,"**"],[-1,1575,"。在"],[1,1579,"。在"],[-1,1634,"**"],[1,1647,"\n要"],[-1,1656,"1."],[1,1660,"先写"],[-1,1715,"2."],[1,1719,"写M"],[-1,1810,"3."],[1,1814,"写M"],[1,1826,"**"],[-1,1828,"**"],[1,1855,"**"],[-1,1857,"**4."],[1,1863,"写S"],[1,1876,"**"],[-1,1878,"**"],[-1,1910,"。\n"],[-1,1914,"5.-"],[1,1917,"。\n- 写"],[1,1933,"**"],[-1,1935,"**"],[-1,1945,"，获"],[-1,1949,"取"],[1,1950,"，"],[1,1952,"获取"],[-1,2005,"。\n"],[-1,2009,"6.-J "],[1,2014,"。\n-  写J"],[-1,2048,"=="],[1,2052,"> "],[-1,2059,"=="],[1,2063,"> "],[-1,2074,"=="],[1,2078,"> "],[-1,2085,"["],[1,2087,"a"],[-1,2089,"]("],[1,2094,"> "],[-1,2107,"=="],[1,2111,"> "],[-1,2127,"=="],[1,2131,"> ."],[-1,2133,".p. ==S"],[1,2140,"p\n\n\n"],[-1,2147,"p"],[1,2148,"\n"],[1,2150,"Sp"],[-1,2175,"类似"],[1,2179,"类似"],[1,2187,"**"],[-1,2189,"**"],[-1,2198,"\nS"],[-1,2202,"p"],[1,2203,"\n"],[1,2205,"Sp"],[1,2220,"**"],[-1,2222,"**"],[-1,2237,"\nm"],[-1,2241,"y"],[1,2242,"\n"],[1,2244,"my"],[1,2261,"**"],[-1,2263,"**"],[-1,2268," "],[1,2270,"数"],[-1,2274," 起\n\n**；Sp"],[1,2283,"起来**；\n\n"],[1,2285,"Sp"],[-1,2301,"与 "],[1,2304," S"],[1,2313,"- "],[-1,2315,"- "],[1,2331,"："],[-1,2333,"："],[1,2354,"- "],[-1,2356,"- "],[1,2385,"- "],[-1,2387,"- "],[1,2519,"- "],[-1,2521,"- "],[1,2545,"**"],[-1,2547,"**"],[1,2580,"**"],[-1,2582,"**"],[-1,2643,"**"],[1,2645,"持久"],[-1,2659,"**"],[1,2661,"\n\n"],[-1,2889,"**"],[1,2891,"业务"],[-1,2901,"**"],[1,2903,"\n\n"],[-1,2941,"\n"],[1,2942," "],[-1,3129,"**"],[1,3131,"表现"],[-1,3154,"**"],[1,3156,"\n\n"],[-1,3203,"\n"],[1,3204," "],[-1,3362,"**ew层**"],[1,3369,"View层\n\n"],[-1,3431,"**联系**"],[1,3437,"各层联系\n\n"],[-1,3642,"\n"],[1,3643," "],[-1,3820,"==**  "],[1,3826,"\n\n**最近"]],[24,24],[3832,3832]]],[1570882814297,[null,[[1,24,"\n*原理*"],[-1,24,"框架原理\n"],[1,41,"**"],[-1,41,"作用\n\n"],[-1,48," "],[-1,51,"是"],[1,53,"是"],[1,55," "],[-1,71," "],[-1,73," "],[1,75," "],[1,76," "],[-1,81," "],[1,84," "],[-1,92," "],[1,95," "],[-1,96," "],[1,99," "],[-1,131," "],[1,134," "],[-1,137," "],[1,140," "],[-1,143,"- "],[1,147,"- "],[-1,159,"**"],[1,163,"**"],[1,171,"\n\n"],[1,173,"s"],[-1,173,"\n"],[-1,176,"sp"],[1,190,"，m"],[-1,193,"my"],[1,214,"**"],[1,225,"Sp"],[-1,225,"\n\n"],[1,243,"."],[-1,243,"\n"],[-1,248,"客户"],[-1,256," "],[1,259," "],[1,274,"分发"],[-1,280,"分发"],[1,284,"\n\n"],[1,305,"2"],[-1,305,"\n"],[1,310,"i "],[-1,310,"由 Di"],[-1,328," "],[1,331," "],[-1,334," "],[1,337," "],[1,349,"找到"],[-1,371,"找到"],[-1,378," "],[1,381," "],[1,389,"\n\n；3"],[-1,389,"；\n"],[-1,438,"Co"],[-1,448," "],[1,451," "],[-1,461," "],[1,464," "],[1,474,"\n\n"],[1,490,"4"],[-1,490,"\n"],[-1,495,"Di"],[1,507,"cl"],[-1,508,"le"],[-1,511," "],[1,514," "],[-1,534," "],[1,537," "],[1,541,"\n5"],[-1,545,"视图"],[1,560,"!["],[1,621,"Sp"],[-1,621,"\n\n"],[-1,1287,"Sp"],[-1,1315,"**"],[1,1319,"**"],[1,1332,"["],[-1,1333,"a"],[1,1336,"]("],[-1,1336,"中的"],[1,1359,"），"],[-1,1361,"），"],[-1,1434,"- "],[1,1438,"- "],[-1,1514,"**"],[1,1518,"**"],[1,1577,"。在"],[-1,1579,"。在"],[1,1636,"**"],[-1,1647,"\n要"],[1,1658,"1."],[-1,1660,"先写"],[1,1717,"2."],[-1,1719,"写M"],[1,1812,"3."],[-1,1814,"写M"],[-1,1828,"**"],[1,1832,"**"],[-1,1857,"**"],[1,1861,"**4."],[-1,1863,"写S"],[-1,1878,"**"],[1,1882,"**"],[1,1912,"。\n"],[1,1914,"5.-"],[-1,1914,"。\n- 写"],[-1,1935,"**"],[1,1939,"**"],[1,1947,"，获"],[1,1949,"取"],[-1,1949,"，"],[-1,1952,"获取"],[1,2007,"。\n"],[1,2009,"6.-J "],[-1,2009,"。\n-  写J"],[1,2050,"=="],[-1,2052,"> "],[1,2061,"=="],[-1,2063,"> "],[1,2076,"=="],[-1,2078,"> "],[1,2087,"["],[-1,2088,"a"],[1,2091,"]("],[-1,2094,"> "],[1,2109,"=="],[-1,2111,"> "],[1,2129,"=="],[-1,2131,"> ."],[1,2136,".p. ==S"],[-1,2136,"p\n\n\n"],[1,2147,"p"],[-1,2147,"\n"],[-1,2150,"Sp"],[1,2177,"类似"],[-1,2179,"类似"],[-1,2189,"**"],[1,2193,"**"],[1,2200,"\nS"],[1,2202,"p"],[-1,2202,"\n"],[-1,2205,"Sp"],[-1,2222,"**"],[1,2226,"**"],[1,2239,"\nm"],[1,2241,"y"],[-1,2241,"\n"],[-1,2244,"my"],[-1,2263,"**"],[1,2267,"**"],[1,2270," "],[-1,2271,"数"],[1,2276," 起\n\n**；Sp"],[-1,2276,"起来**；\n\n"],[-1,2285,"Sp"],[1,2303,"与 "],[-1,2304," S"],[-1,2315,"- "],[1,2319,"- "],[-1,2333,"："],[1,2336,"："],[-1,2356,"- "],[1,2360,"- "],[-1,2387,"- "],[1,2391,"- "],[-1,2521,"- "],[1,2525,"- "],[-1,2547,"**"],[1,2551,"**"],[-1,2582,"**"],[1,2586,"**"],[1,2645,"**"],[-1,2645,"持久"],[1,2661,"**"],[-1,2661,"\n\n"],[1,2891,"**"],[-1,2891,"业务"],[1,2903,"**"],[-1,2903,"\n\n"],[1,2943,"\n"],[-1,2943," "],[1,3131,"**"],[-1,3131,"表现"],[1,3156,"**"],[-1,3156,"\n\n"],[1,3205,"\n"],[-1,3205," "],[1,3364,"**ew层**"],[-1,3364,"View层\n\n"],[1,3433,"**联系**"],[-1,3433,"各层联系\n\n"],[1,3644,"\n"],[-1,3644," "],[1,3822,"==**  "],[-1,3822,"\n\n**最近"]],[3832,3832],[24,24]]],[1570882777869,["GJX@GJXAIOU",[[1,1279,"这个请求和控制器进行映射了，这两个"]],[1279,1279],[1296,1296]]],[1570882779538,["GJX@GJXAIOU",[[-1,1294,"两个"]],[1296,1296],[1294,1294]]],[1570882782535,["GJX@GJXAIOU",[[1,1294,"个迁出"]],[1294,1294],[1297,1297]]],[1570882783134,["GJX@GJXAIOU",[[-1,1295,"迁出"]],[1297,1297],[1295,1295]]],[1570882799291,["GJX@GJXAIOU",[[1,1295,"请求对应会调用 hello 这个控制器；"]],[1295,1295],[1315,1315]]],[1570882874303,[null,[[-1,24,"\n*原理*"],[1,29,"框架原理\n"],[-1,41,"**"],[1,43,"作用\n\n"],[1,46," "],[1,48,"是"],[-1,49,"是"],[-1,52," "],[1,69," "],[1,70," "],[-1,71," "],[-1,73," "],[1,79," "],[-1,81," "],[1,90," "],[-1,92," "],[1,94," "],[-1,96," "],[1,129," "],[-1,131," "],[1,135," "],[-1,137," "],[1,141,"- "],[-1,143,"- "],[1,157,"**"],[-1,159,"**"],[-1,169,"\n\n"],[-1,173,"s"],[1,174,"\n"],[1,176,"sp"],[-1,188,"，m"],[1,193,"my"],[-1,212,"**"],[-1,225,"Sp"],[1,227,"\n\n"],[-1,243,"."],[1,244,"\n"],[1,248,"客户"],[1,254," "],[-1,256," "],[-1,272,"分发"],[1,280,"分发"],[-1,282,"\n\n"],[-1,305,"2"],[1,306,"\n"],[-1,310,"i "],[1,312,"由 Di"],[1,326," "],[-1,328," "],[1,332," "],[-1,334," "],[-1,347,"找到"],[1,371,"找到"],[1,376," "],[-1,378," "],[-1,387,"\n\n；3"],[1,391,"；\n"],[1,438,"Co"],[1,446," "],[-1,448," "],[1,459," "],[-1,461," "],[-1,472,"\n\n"],[-1,490,"4"],[1,491,"\n"],[1,495,"Di"],[-1,505,"cl"],[1,508,"le"],[1,509," "],[-1,511," "],[1,532," "],[-1,534," "],[-1,539,"\n5"],[1,545,"视图"],[-1,558,"!["],[-1,621,"Sp"],[1,623,"\n\n"],[1,1323,"Sp"],[1,1349,"**"],[-1,1351,"**"],[-1,1366,"["],[1,1368,"a"],[-1,1370,"]("],[1,1372,"中的"],[-1,1393,"），"],[1,1397,"），"],[1,1468,"- "],[-1,1470,"- "],[1,1548,"**"],[-1,1550,"**"],[-1,1611,"。在"],[1,1615,"。在"],[-1,1670,"**"],[1,1683,"\n要"],[-1,1692,"1."],[1,1696,"先写"],[-1,1751,"2."],[1,1755,"写M"],[-1,1846,"3."],[1,1850,"写M"],[1,1862,"**"],[-1,1864,"**"],[1,1891,"**"],[-1,1893,"**4."],[1,1899,"写S"],[1,1912,"**"],[-1,1914,"**"],[-1,1946,"。\n"],[-1,1950,"5.-"],[1,1953,"。\n- 写"],[1,1969,"**"],[-1,1971,"**"],[-1,1981,"，获"],[-1,1985,"取"],[1,1986,"，"],[1,1988,"获取"],[-1,2041,"。\n"],[-1,2045,"6.-J "],[1,2050,"。\n-  写J"],[-1,2084,"=="],[1,2088,"> "],[-1,2095,"=="],[1,2099,"> "],[-1,2110,"=="],[1,2114,"> "],[-1,2121,"["],[1,2123,"a"],[-1,2125,"]("],[1,2130,"> "],[-1,2143,"=="],[1,2147,"> "],[-1,2163,"=="],[1,2167,"> ."],[-1,2169,".p. ==S"],[1,2176,"p\n\n\n"],[-1,2183,"p"],[1,2184,"\n"],[1,2186,"Sp"],[-1,2211,"类似"],[1,2215,"类似"],[1,2223,"**"],[-1,2225,"**"],[-1,2234,"\nS"],[-1,2238,"p"],[1,2239,"\n"],[1,2241,"Sp"],[1,2256,"**"],[-1,2258,"**"],[-1,2273,"\nm"],[-1,2277,"y"],[1,2278,"\n"],[1,2280,"my"],[1,2297,"**"],[-1,2299,"**"],[-1,2304," "],[1,2306,"数"],[-1,2310," 起\n\n**；Sp"],[1,2319,"起来**；\n\n"],[1,2321,"Sp"],[-1,2337,"与 "],[1,2340," S"],[1,2349,"- "],[-1,2351,"- "],[1,2367,"："],[-1,2369,"："],[1,2390,"- "],[-1,2392,"- "],[1,2421,"- "],[-1,2423,"- "],[1,2555,"- "],[-1,2557,"- "],[1,2581,"**"],[-1,2583,"**"],[1,2616,"**"],[-1,2618,"**"],[-1,2679,"**"],[1,2681,"持久"],[-1,2695,"**"],[1,2697,"\n\n"],[-1,2925,"**"],[1,2927,"业务"],[-1,2937,"**"],[1,2939,"\n\n"],[-1,2977,"\n"],[1,2978," "],[-1,3165,"**"],[1,3167,"表现"],[-1,3190,"**"],[1,3192,"\n\n"],[-1,3239,"\n"],[1,3240," "],[-1,3398,"**ew层**"],[1,3405,"View层\n\n"],[-1,3467,"**联系**"],[1,3473,"各层联系\n\n"],[-1,3678,"\n"],[1,3679," "],[-1,3856,"==**  "],[1,3862,"\n\n**最近"]],[24,24],[3868,3868]]],[1570882874303,[null,[[1,24,"\n*原理*"],[-1,24,"框架原理\n"],[1,41,"**"],[-1,41,"作用\n\n"],[-1,48," "],[-1,51,"是"],[1,53,"是"],[1,55," "],[-1,71," "],[-1,73," "],[1,75," "],[1,76," "],[-1,81," "],[1,84," "],[-1,92," "],[1,95," "],[-1,96," "],[1,99," "],[-1,131," "],[1,134," "],[-1,137," "],[1,140," "],[-1,143,"- "],[1,147,"- "],[-1,159,"**"],[1,163,"**"],[1,171,"\n\n"],[1,173,"s"],[-1,173,"\n"],[-1,176,"sp"],[1,190,"，m"],[-1,193,"my"],[1,214,"**"],[1,225,"Sp"],[-1,225,"\n\n"],[1,243,"."],[-1,243,"\n"],[-1,248,"客户"],[-1,256," "],[1,259," "],[1,274,"分发"],[-1,280,"分发"],[1,284,"\n\n"],[1,305,"2"],[-1,305,"\n"],[1,310,"i "],[-1,310,"由 Di"],[-1,328," "],[1,331," "],[-1,334," "],[1,337," "],[1,349,"找到"],[-1,371,"找到"],[-1,378," "],[1,381," "],[1,389,"\n\n；3"],[-1,389,"；\n"],[-1,438,"Co"],[-1,448," "],[1,451," "],[-1,461," "],[1,464," "],[1,474,"\n\n"],[1,490,"4"],[-1,490,"\n"],[-1,495,"Di"],[1,507,"cl"],[-1,508,"le"],[-1,511," "],[1,514," "],[-1,534," "],[1,537," "],[1,541,"\n5"],[-1,545,"视图"],[1,560,"!["],[1,621,"Sp"],[-1,621,"\n\n"],[-1,1323,"Sp"],[-1,1351,"**"],[1,1355,"**"],[1,1368,"["],[-1,1369,"a"],[1,1372,"]("],[-1,1372,"中的"],[1,1395,"），"],[-1,1397,"），"],[-1,1470,"- "],[1,1474,"- "],[-1,1550,"**"],[1,1554,"**"],[1,1613,"。在"],[-1,1615,"。在"],[1,1672,"**"],[-1,1683,"\n要"],[1,1694,"1."],[-1,1696,"先写"],[1,1753,"2."],[-1,1755,"写M"],[1,1848,"3."],[-1,1850,"写M"],[-1,1864,"**"],[1,1868,"**"],[-1,1893,"**"],[1,1897,"**4."],[-1,1899,"写S"],[-1,1914,"**"],[1,1918,"**"],[1,1948,"。\n"],[1,1950,"5.-"],[-1,1950,"。\n- 写"],[-1,1971,"**"],[1,1975,"**"],[1,1983,"，获"],[1,1985,"取"],[-1,1985,"，"],[-1,1988,"获取"],[1,2043,"。\n"],[1,2045,"6.-J "],[-1,2045,"。\n-  写J"],[1,2086,"=="],[-1,2088,"> "],[1,2097,"=="],[-1,2099,"> "],[1,2112,"=="],[-1,2114,"> "],[1,2123,"["],[-1,2124,"a"],[1,2127,"]("],[-1,2130,"> "],[1,2145,"=="],[-1,2147,"> "],[1,2165,"=="],[-1,2167,"> ."],[1,2172,".p. ==S"],[-1,2172,"p\n\n\n"],[1,2183,"p"],[-1,2183,"\n"],[-1,2186,"Sp"],[1,2213,"类似"],[-1,2215,"类似"],[-1,2225,"**"],[1,2229,"**"],[1,2236,"\nS"],[1,2238,"p"],[-1,2238,"\n"],[-1,2241,"Sp"],[-1,2258,"**"],[1,2262,"**"],[1,2275,"\nm"],[1,2277,"y"],[-1,2277,"\n"],[-1,2280,"my"],[-1,2299,"**"],[1,2303,"**"],[1,2306," "],[-1,2307,"数"],[1,2312," 起\n\n**；Sp"],[-1,2312,"起来**；\n\n"],[-1,2321,"Sp"],[1,2339,"与 "],[-1,2340," S"],[-1,2351,"- "],[1,2355,"- "],[-1,2369,"："],[1,2372,"："],[-1,2392,"- "],[1,2396,"- "],[-1,2423,"- "],[1,2427,"- "],[-1,2557,"- "],[1,2561,"- "],[-1,2583,"**"],[1,2587,"**"],[-1,2618,"**"],[1,2622,"**"],[1,2681,"**"],[-1,2681,"持久"],[1,2697,"**"],[-1,2697,"\n\n"],[1,2927,"**"],[-1,2927,"业务"],[1,2939,"**"],[-1,2939,"\n\n"],[1,2979,"\n"],[-1,2979," "],[1,3167,"**"],[-1,3167,"表现"],[1,3192,"**"],[-1,3192,"\n\n"],[1,3241,"\n"],[-1,3241," "],[1,3400,"**ew层**"],[-1,3400,"View层\n\n"],[1,3469,"**联系**"],[-1,3469,"各层联系\n\n"],[1,3680,"\n"],[-1,3680," "],[1,3858,"==**  "],[-1,3858,"\n\n**最近"]],[3868,3868],[24,24]]],[1570882832867,["GJX@GJXAIOU",[[1,1317,"- tong"]],[1317,1317],[1323,1323]]],[1570882833758,["GJX@GJXAIOU",[[-1,1318," tong"]],[1323,1323],[1318,1318]]],[1570882841410,["GJX@GJXAIOU",[[1,1318," 同时 springmvc 将jsp"]],[1318,1318],[1336,1336]]],[1570882841443,["GJX@GJXAIOU",[[1,1333," "]],[1336,1336],[1337,1337]]],[1570882862120,["GJX@GJXAIOU",[[1,1337," 中的参数值传递给 controller 中可以采用方法有："]],[1337,1337],[1367,1367]]],[1570882862490,["GJX@GJXAIOU",[[1,1368,"- \n"]],[1367,1367],[1370,1370]]],[1570882863193,["GJX@GJXAIOU",[[1,1368,"  "]],[1370,1370],[1372,1372]]],[1570882867163,["GJX@GJXAIOU",[[1,1372,"Handler"]],[1372,1372],[1379,1379]]],[1570882934303,[null,[[-1,24,"\n*原理*"],[1,29,"框架原理\n"],[-1,41,"**"],[1,43,"作用\n\n"],[1,46," "],[1,48,"是"],[-1,49,"是"],[-1,52," "],[1,69," "],[1,70," "],[-1,71," "],[-1,73," "],[1,79," "],[-1,81," "],[1,90," "],[-1,92," "],[1,94," "],[-1,96," "],[1,129," "],[-1,131," "],[1,135," "],[-1,137," "],[1,141,"- "],[-1,143,"- "],[1,157,"**"],[-1,159,"**"],[-1,169,"\n\n"],[-1,173,"s"],[1,174,"\n"],[1,176,"sp"],[-1,188,"，m"],[1,193,"my"],[-1,212,"**"],[-1,225,"Sp"],[1,227,"\n\n"],[-1,243,"."],[1,244,"\n"],[1,248,"客户"],[1,254," "],[-1,256," "],[-1,272,"分发"],[1,280,"分发"],[-1,282,"\n\n"],[-1,305,"2"],[1,306,"\n"],[-1,310,"i "],[1,312,"由 Di"],[1,326," "],[-1,328," "],[1,332," "],[-1,334," "],[-1,347,"找到"],[1,371,"找到"],[1,376," "],[-1,378," "],[-1,387,"\n\n；3"],[1,391,"；\n"],[1,438,"Co"],[1,446," "],[-1,448," "],[1,459," "],[-1,461," "],[-1,472,"\n\n"],[-1,490,"4"],[1,491,"\n"],[1,495,"Di"],[-1,505,"cl"],[1,508,"le"],[1,509," "],[-1,511," "],[1,532," "],[-1,534," "],[-1,539,"\n5"],[1,545,"视图"],[-1,558,"!["],[-1,621,"Sp"],[1,623,"\n\n"],[1,1385,"Sp"],[1,1411,"**"],[-1,1413,"**"],[-1,1428,"["],[1,1430,"a"],[-1,1432,"]("],[1,1434,"中的"],[-1,1455,"），"],[1,1459,"），"],[1,1530,"- "],[-1,1532,"- "],[1,1610,"**"],[-1,1612,"**"],[-1,1673,"。在"],[1,1677,"。在"],[-1,1732,"**"],[1,1745,"\n要"],[-1,1754,"1."],[1,1758,"先写"],[-1,1813,"2."],[1,1817,"写M"],[-1,1908,"3."],[1,1912,"写M"],[1,1924,"**"],[-1,1926,"**"],[1,1953,"**"],[-1,1955,"**4."],[1,1961,"写S"],[1,1974,"**"],[-1,1976,"**"],[-1,2008,"。\n"],[-1,2012,"5.-"],[1,2015,"。\n- 写"],[1,2031,"**"],[-1,2033,"**"],[-1,2043,"，获"],[-1,2047,"取"],[1,2048,"，"],[1,2050,"获取"],[-1,2103,"。\n"],[-1,2107,"6.-J "],[1,2112,"。\n-  写J"],[-1,2146,"=="],[1,2150,"> "],[-1,2157,"=="],[1,2161,"> "],[-1,2172,"=="],[1,2176,"> "],[-1,2183,"["],[1,2185,"a"],[-1,2187,"]("],[1,2192,"> "],[-1,2205,"=="],[1,2209,"> "],[-1,2225,"=="],[1,2229,"> ."],[-1,2231,".p. ==S"],[1,2238,"p\n\n\n"],[-1,2245,"p"],[1,2246,"\n"],[1,2248,"Sp"],[-1,2273,"类似"],[1,2277,"类似"],[1,2285,"**"],[-1,2287,"**"],[-1,2296,"\nS"],[-1,2300,"p"],[1,2301,"\n"],[1,2303,"Sp"],[1,2318,"**"],[-1,2320,"**"],[-1,2335,"\nm"],[-1,2339,"y"],[1,2340,"\n"],[1,2342,"my"],[1,2359,"**"],[-1,2361,"**"],[-1,2366," "],[1,2368,"数"],[-1,2372," 起\n\n**；Sp"],[1,2381,"起来**；\n\n"],[1,2383,"Sp"],[-1,2399,"与 "],[1,2402," S"],[1,2411,"- "],[-1,2413,"- "],[1,2429,"："],[-1,2431,"："],[1,2452,"- "],[-1,2454,"- "],[1,2483,"- "],[-1,2485,"- "],[1,2617,"- "],[-1,2619,"- "],[1,2643,"**"],[-1,2645,"**"],[1,2678,"**"],[-1,2680,"**"],[-1,2741,"**"],[1,2743,"持久"],[-1,2757,"**"],[1,2759,"\n\n"],[-1,2987,"**"],[1,2989,"业务"],[-1,2999,"**"],[1,3001,"\n\n"],[-1,3039,"\n"],[1,3040," "],[-1,3227,"**"],[1,3229,"表现"],[-1,3252,"**"],[1,3254,"\n\n"],[-1,3301,"\n"],[1,3302," "],[-1,3460,"**ew层**"],[1,3467,"View层\n\n"],[-1,3529,"**联系**"],[1,3535,"各层联系\n\n"],[-1,3740,"\n"],[1,3741," "],[-1,3918,"==**  "],[1,3924,"\n\n**最近"]],[24,24],[3930,3930]]],[1570882934303,[null,[[1,24,"\n*原理*"],[-1,24,"框架原理\n"],[1,41,"**"],[-1,41,"作用\n\n"],[-1,48," "],[-1,51,"是"],[1,53,"是"],[1,55," "],[-1,71," "],[-1,73," "],[1,75," "],[1,76," "],[-1,81," "],[1,84," "],[-1,92," "],[1,95," "],[-1,96," "],[1,99," "],[-1,131," "],[1,134," "],[-1,137," "],[1,140," "],[-1,143,"- "],[1,147,"- "],[-1,159,"**"],[1,163,"**"],[1,171,"\n\n"],[1,173,"s"],[-1,173,"\n"],[-1,176,"sp"],[1,190,"，m"],[-1,193,"my"],[1,214,"**"],[1,225,"Sp"],[-1,225,"\n\n"],[1,243,"."],[-1,243,"\n"],[-1,248,"客户"],[-1,256," "],[1,259," "],[1,274,"分发"],[-1,280,"分发"],[1,284,"\n\n"],[1,305,"2"],[-1,305,"\n"],[1,310,"i "],[-1,310,"由 Di"],[-1,328," "],[1,331," "],[-1,334," "],[1,337," "],[1,349,"找到"],[-1,371,"找到"],[-1,378," "],[1,381," "],[1,389,"\n\n；3"],[-1,389,"；\n"],[-1,438,"Co"],[-1,448," "],[1,451," "],[-1,461," "],[1,464," "],[1,474,"\n\n"],[1,490,"4"],[-1,490,"\n"],[-1,495,"Di"],[1,507,"cl"],[-1,508,"le"],[-1,511," "],[1,514," "],[-1,534," "],[1,537," "],[1,541,"\n5"],[-1,545,"视图"],[1,560,"!["],[1,621,"Sp"],[-1,621,"\n\n"],[-1,1385,"Sp"],[-1,1413,"**"],[1,1417,"**"],[1,1430,"["],[-1,1431,"a"],[1,1434,"]("],[-1,1434,"中的"],[1,1457,"），"],[-1,1459,"），"],[-1,1532,"- "],[1,1536,"- "],[-1,1612,"**"],[1,1616,"**"],[1,1675,"。在"],[-1,1677,"。在"],[1,1734,"**"],[-1,1745,"\n要"],[1,1756,"1."],[-1,1758,"先写"],[1,1815,"2."],[-1,1817,"写M"],[1,1910,"3."],[-1,1912,"写M"],[-1,1926,"**"],[1,1930,"**"],[-1,1955,"**"],[1,1959,"**4."],[-1,1961,"写S"],[-1,1976,"**"],[1,1980,"**"],[1,2010,"。\n"],[1,2012,"5.-"],[-1,2012,"。\n- 写"],[-1,2033,"**"],[1,2037,"**"],[1,2045,"，获"],[1,2047,"取"],[-1,2047,"，"],[-1,2050,"获取"],[1,2105,"。\n"],[1,2107,"6.-J "],[-1,2107,"。\n-  写J"],[1,2148,"=="],[-1,2150,"> "],[1,2159,"=="],[-1,2161,"> "],[1,2174,"=="],[-1,2176,"> "],[1,2185,"["],[-1,2186,"a"],[1,2189,"]("],[-1,2192,"> "],[1,2207,"=="],[-1,2209,"> "],[1,2227,"=="],[-1,2229,"> ."],[1,2234,".p. ==S"],[-1,2234,"p\n\n\n"],[1,2245,"p"],[-1,2245,"\n"],[-1,2248,"Sp"],[1,2275,"类似"],[-1,2277,"类似"],[-1,2287,"**"],[1,2291,"**"],[1,2298,"\nS"],[1,2300,"p"],[-1,2300,"\n"],[-1,2303,"Sp"],[-1,2320,"**"],[1,2324,"**"],[1,2337,"\nm"],[1,2339,"y"],[-1,2339,"\n"],[-1,2342,"my"],[-1,2361,"**"],[1,2365,"**"],[1,2368," "],[-1,2369,"数"],[1,2374," 起\n\n**；Sp"],[-1,2374,"起来**；\n\n"],[-1,2383,"Sp"],[1,2401,"与 "],[-1,2402," S"],[-1,2413,"- "],[1,2417,"- "],[-1,2431,"："],[1,2434,"："],[-1,2454,"- "],[1,2458,"- "],[-1,2485,"- "],[1,2489,"- "],[-1,2619,"- "],[1,2623,"- "],[-1,2645,"**"],[1,2649,"**"],[-1,2680,"**"],[1,2684,"**"],[1,2743,"**"],[-1,2743,"持久"],[1,2759,"**"],[-1,2759,"\n\n"],[1,2989,"**"],[-1,2989,"业务"],[1,3001,"**"],[-1,3001,"\n\n"],[1,3041,"\n"],[-1,3041," "],[1,3229,"**"],[-1,3229,"表现"],[1,3254,"**"],[-1,3254,"\n\n"],[1,3303,"\n"],[-1,3303," "],[1,3462,"**ew层**"],[-1,3462,"View层\n\n"],[1,3531,"**联系**"],[-1,3531,"各层联系\n\n"],[1,3742,"\n"],[-1,3742," "],[1,3920,"==**  "],[-1,3920,"\n\n**最近"]],[3930,3930],[24,24]]],[1570882877992,["GJX@GJXAIOU",[[1,1379,"Menthod;"]],[1379,1379],[1387,1387]]],[1570882878903,["GJX@GJXAIOU",[[-1,1386,";"]],[1387,1387],[1386,1386]]],[1570882879322,["GJX@GJXAIOU",[[1,1386,"；"]],[1386,1386],[1387,1387]]],[1570882879591,["GJX@GJXAIOU",[[1,1388,"  - \n"]],[1387,1387],[1392,1392]]],[1570882882139,["GJX@GJXAIOU",[[1,1392,"Map"]],[1392,1392],[1395,1395]]],[1570882882586,["GJX@GJXAIOU",[[1,1396,"  - \n"]],[1395,1395],[1400,1400]]],[1570882886971,["GJX@GJXAIOU",[[1,1400,"Model接口"]],[1400,1400],[1407,1407]]],[1570882887009,["GJX@GJXAIOU",[[1,1405," "]],[1407,1407],[1408,1408]]],[1570882888336,["GJX@GJXAIOU",[[1,1409,"  - \n"]],[1408,1408],[1413,1413]]],[1570882896164,["GJX@GJXAIOU",[[1,1413,"ModelAndView类"]],[1413,1413],[1426,1426]]],[1570882896196,["GJX@GJXAIOU",[[1,1425," "]],[1426,1426],[1427,1427]]],[1570883054305,[null,[[-1,24,"\n*原理*"],[1,29,"框架原理\n"],[-1,41,"**"],[1,43,"作用\n\n"],[1,46," "],[1,48,"是"],[-1,49,"是"],[-1,52," "],[1,69," "],[1,70," "],[-1,71," "],[-1,73," "],[1,79," "],[-1,81," "],[1,90," "],[-1,92," "],[1,94," "],[-1,96," "],[1,129," "],[-1,131," "],[1,135," "],[-1,137," "],[1,141,"- "],[-1,143,"- "],[1,157,"**"],[-1,159,"**"],[-1,169,"\n\n"],[-1,173,"s"],[1,174,"\n"],[1,176,"sp"],[-1,188,"，m"],[1,193,"my"],[-1,212,"**"],[-1,225,"Sp"],[1,227,"\n\n"],[-1,243,"."],[1,244,"\n"],[1,248,"客户"],[1,254," "],[-1,256," "],[-1,272,"分发"],[1,280,"分发"],[-1,282,"\n\n"],[-1,305,"2"],[1,306,"\n"],[-1,310,"i "],[1,312,"由 Di"],[1,326," "],[-1,328," "],[1,332," "],[-1,334," "],[-1,347,"找到"],[1,371,"找到"],[1,376," "],[-1,378," "],[-1,387,"\n\n；3"],[1,391,"；\n"],[1,438,"Co"],[1,446," "],[-1,448," "],[1,459," "],[-1,461," "],[-1,472,"\n\n"],[-1,490,"4"],[1,491,"\n"],[1,495,"Di"],[-1,505,"cl"],[1,508,"le"],[1,509," "],[-1,511," "],[1,532," "],[-1,534," "],[-1,539,"\n5"],[1,545,"视图"],[-1,558,"!["],[-1,621,"Sp"],[1,623,"\n\n"],[1,1433,"Sp"],[1,1459,"**"],[-1,1461,"**"],[-1,1476,"["],[1,1478,"a"],[-1,1480,"]("],[1,1482,"中的"],[-1,1503,"），"],[1,1507,"），"],[1,1578,"- "],[-1,1580,"- "],[1,1658,"**"],[-1,1660,"**"],[-1,1721,"。在"],[1,1725,"。在"],[-1,1780,"**"],[1,1793,"\n要"],[-1,1802,"1."],[1,1806,"先写"],[-1,1861,"2."],[1,1865,"写M"],[-1,1956,"3."],[1,1960,"写M"],[1,1972,"**"],[-1,1974,"**"],[1,2001,"**"],[-1,2003,"**4."],[1,2009,"写S"],[1,2022,"**"],[-1,2024,"**"],[-1,2056,"。\n"],[-1,2060,"5.-"],[1,2063,"。\n- 写"],[1,2079,"**"],[-1,2081,"**"],[-1,2091,"，获"],[-1,2095,"取"],[1,2096,"，"],[1,2098,"获取"],[-1,2151,"。\n"],[-1,2155,"6.-J "],[1,2160,"。\n-  写J"],[-1,2194,"=="],[1,2198,"> "],[-1,2205,"=="],[1,2209,"> "],[-1,2220,"=="],[1,2224,"> "],[-1,2231,"["],[1,2233,"a"],[-1,2235,"]("],[1,2240,"> "],[-1,2253,"=="],[1,2257,"> "],[-1,2273,"=="],[1,2277,"> ."],[-1,2279,".p. ==S"],[1,2286,"p\n\n\n"],[-1,2293,"p"],[1,2294,"\n"],[1,2296,"Sp"],[-1,2321,"类似"],[1,2325,"类似"],[1,2333,"**"],[-1,2335,"**"],[-1,2344,"\nS"],[-1,2348,"p"],[1,2349,"\n"],[1,2351,"Sp"],[1,2366,"**"],[-1,2368,"**"],[-1,2383,"\nm"],[-1,2387,"y"],[1,2388,"\n"],[1,2390,"my"],[1,2407,"**"],[-1,2409,"**"],[-1,2414," "],[1,2416,"数"],[-1,2420," 起\n\n**；Sp"],[1,2429,"起来**；\n\n"],[1,2431,"Sp"],[-1,2447,"与 "],[1,2450," S"],[1,2459,"- "],[-1,2461,"- "],[1,2477,"："],[-1,2479,"："],[1,2500,"- "],[-1,2502,"- "],[1,2531,"- "],[-1,2533,"- "],[1,2665,"- "],[-1,2667,"- "],[1,2691,"**"],[-1,2693,"**"],[1,2726,"**"],[-1,2728,"**"],[-1,2789,"**"],[1,2791,"持久"],[-1,2805,"**"],[1,2807,"\n\n"],[-1,3035,"**"],[1,3037,"业务"],[-1,3047,"**"],[1,3049,"\n\n"],[-1,3087,"\n"],[1,3088," "],[-1,3275,"**"],[1,3277,"表现"],[-1,3300,"**"],[1,3302,"\n\n"],[-1,3349,"\n"],[1,3350," "],[-1,3508,"**ew层**"],[1,3515,"View层\n\n"],[-1,3577,"**联系**"],[1,3583,"各层联系\n\n"],[-1,3788,"\n"],[1,3789," "],[-1,3966,"==**  "],[1,3972,"\n\n**最近"]],[24,24],[3978,3978]]],[1570883054305,[null,[[1,24,"\n*原理*"],[-1,24,"框架原理\n"],[1,41,"**"],[-1,41,"作用\n\n"],[-1,48," "],[-1,51,"是"],[1,53,"是"],[1,55," "],[-1,71," "],[-1,73," "],[1,75," "],[1,76," "],[-1,81," "],[1,84," "],[-1,92," "],[1,95," "],[-1,96," "],[1,99," "],[-1,131," "],[1,134," "],[-1,137," "],[1,140," "],[-1,143,"- "],[1,147,"- "],[-1,159,"**"],[1,163,"**"],[1,171,"\n\n"],[1,173,"s"],[-1,173,"\n"],[-1,176,"sp"],[1,190,"，m"],[-1,193,"my"],[1,214,"**"],[1,225,"Sp"],[-1,225,"\n\n"],[1,243,"."],[-1,243,"\n"],[-1,248,"客户"],[-1,256," "],[1,259," "],[1,274,"分发"],[-1,280,"分发"],[1,284,"\n\n"],[1,305,"2"],[-1,305,"\n"],[1,310,"i "],[-1,310,"由 Di"],[-1,328," "],[1,331," "],[-1,334," "],[1,337," "],[1,349,"找到"],[-1,371,"找到"],[-1,378," "],[1,381," "],[1,389,"\n\n；3"],[-1,389,"；\n"],[-1,438,"Co"],[-1,448," "],[1,451," "],[-1,461," "],[1,464," "],[1,474,"\n\n"],[1,490,"4"],[-1,490,"\n"],[-1,495,"Di"],[1,507,"cl"],[-1,508,"le"],[-1,511," "],[1,514," "],[-1,534," "],[1,537," "],[1,541,"\n5"],[-1,545,"视图"],[1,560,"!["],[1,621,"Sp"],[-1,621,"\n\n"],[-1,1433,"Sp"],[-1,1461,"**"],[1,1465,"**"],[1,1478,"["],[-1,1479,"a"],[1,1482,"]("],[-1,1482,"中的"],[1,1505,"），"],[-1,1507,"），"],[-1,1580,"- "],[1,1584,"- "],[-1,1660,"**"],[1,1664,"**"],[1,1723,"。在"],[-1,1725,"。在"],[1,1782,"**"],[-1,1793,"\n要"],[1,1804,"1."],[-1,1806,"先写"],[1,1863,"2."],[-1,1865,"写M"],[1,1958,"3."],[-1,1960,"写M"],[-1,1974,"**"],[1,1978,"**"],[-1,2003,"**"],[1,2007,"**4."],[-1,2009,"写S"],[-1,2024,"**"],[1,2028,"**"],[1,2058,"。\n"],[1,2060,"5.-"],[-1,2060,"。\n- 写"],[-1,2081,"**"],[1,2085,"**"],[1,2093,"，获"],[1,2095,"取"],[-1,2095,"，"],[-1,2098,"获取"],[1,2153,"。\n"],[1,2155,"6.-J "],[-1,2155,"。\n-  写J"],[1,2196,"=="],[-1,2198,"> "],[1,2207,"=="],[-1,2209,"> "],[1,2222,"=="],[-1,2224,"> "],[1,2233,"["],[-1,2234,"a"],[1,2237,"]("],[-1,2240,"> "],[1,2255,"=="],[-1,2257,"> "],[1,2275,"=="],[-1,2277,"> ."],[1,2282,".p. ==S"],[-1,2282,"p\n\n\n"],[1,2293,"p"],[-1,2293,"\n"],[-1,2296,"Sp"],[1,2323,"类似"],[-1,2325,"类似"],[-1,2335,"**"],[1,2339,"**"],[1,2346,"\nS"],[1,2348,"p"],[-1,2348,"\n"],[-1,2351,"Sp"],[-1,2368,"**"],[1,2372,"**"],[1,2385,"\nm"],[1,2387,"y"],[-1,2387,"\n"],[-1,2390,"my"],[-1,2409,"**"],[1,2413,"**"],[1,2416," "],[-1,2417,"数"],[1,2422," 起\n\n**；Sp"],[-1,2422,"起来**；\n\n"],[-1,2431,"Sp"],[1,2449,"与 "],[-1,2450," S"],[-1,2461,"- "],[1,2465,"- "],[-1,2479,"："],[1,2482,"："],[-1,2502,"- "],[1,2506,"- "],[-1,2533,"- "],[1,2537,"- "],[-1,2667,"- "],[1,2671,"- "],[-1,2693,"**"],[1,2697,"**"],[-1,2728,"**"],[1,2732,"**"],[1,2791,"**"],[-1,2791,"持久"],[1,2807,"**"],[-1,2807,"\n\n"],[1,3037,"**"],[-1,3037,"业务"],[1,3049,"**"],[-1,3049,"\n\n"],[1,3089,"\n"],[-1,3089," "],[1,3277,"**"],[-1,3277,"表现"],[1,3302,"**"],[-1,3302,"\n\n"],[1,3351,"\n"],[-1,3351," "],[1,3510,"**ew层**"],[-1,3510,"View层\n\n"],[1,3579,"**联系**"],[-1,3579,"各层联系\n\n"],[1,3790,"\n"],[-1,3790," "],[1,3968,"==**  "],[-1,3968,"\n\n**最近"]],[3978,3978],[24,24]]],[1570882995431,["GJX@GJXAIOU",[[1,244,"- \n"]],[243,243],[246,246]]],[1570883005881,["GJX@GJXAIOU",[[1,244,"  "]],[246,246],[248,248]]],[1570883006657,["GJX@GJXAIOU",[[1,248,"*   **DNS**负责域名的解析, 比如访问www.baidu.com 先找到DNS获取相应的服务器IP和端口,\n*   请求消息到达端口以后由**TOMCAT主动去询问**自己占用的端口是否由请求发来,\n*   如果有请求TOMCAT**交给对应的项目**处理"]],[248,248],[381,381]]],[1570883009632,["GJX@GJXAIOU",[[-1,249,"   **"]],[248,253],[248,248]]],[1570883010423,["GJX@GJXAIOU",[[-1,248,"*"]],[249,249],[248,248]]],[1570883011554,["GJX@GJXAIOU",[[-1,251,"**"]],[253,253],[251,251]]],[1570883011994,["GJX@GJXAIOU",[[1,251," "]],[251,251],[252,252]]],[1570883014818,["GJX@GJXAIOU",[[-1,298,","]],[299,299],[298,298]]],[1570883015686,["GJX@GJXAIOU",[[1,298,"；"]],[298,298],[299,299]]],[1570883021242,["GJX@GJXAIOU",[[-1,300,"* "]],[300,302],[300,300]]],[1570883021910,["GJX@GJXAIOU",[[1,300,"-0"]],[300,300],[302,302]]],[1570883023306,["GJX@GJXAIOU",[[-1,301,"0"]],[302,302],[301,301]]],[1570883023836,["GJX@GJXAIOU",[[1,303," "]],[301,301],[302,302]]],[1570883024792,["GJX@GJXAIOU",[[1,300,"  "]],[302,302],[304,304]]],[1570883029376,["GJX@GJXAIOU",[[-1,304,"  "]],[306,306],[304,304]]],[1570883034119,["GJX@GJXAIOU",[[-1,344,","]],[345,345],[344,344]]],[1570883034594,["GJX@GJXAIOU",[[1,344,"；"]],[344,344],[345,345]]],[1570883037130,["GJX@GJXAIOU",[[-1,346,"*   "]],[346,350],[346,346]]],[1570883037841,["GJX@GJXAIOU",[[1,346,"  - "]],[346,346],[350,350]]],[1570883043308,["GJX@GJXAIOU",[[1,374,"；"]],[374,374],[375,375]]],[1570883174315,[null,[[-1,24,"\n*原理*"],[1,29,"框架原理\n"],[-1,41,"**"],[1,43,"作用\n\n"],[1,46," "],[1,48,"是"],[-1,49,"是"],[-1,52," "],[1,69," "],[1,70," "],[-1,71," "],[-1,73," "],[1,79," "],[-1,81," "],[1,90," "],[-1,92," "],[1,94," "],[-1,96," "],[1,129," "],[-1,131," "],[1,135," "],[-1,137," "],[1,141,"- "],[-1,143,"- "],[-1,157,"请求"],[1,161,"请求"],[-1,169,"\n\n"],[-1,173,"s"],[1,174,"\n"],[1,176,"sp"],[-1,188,"，m"],[1,193,"my"],[-1,212,"**"],[-1,225,"Sp"],[1,227,"\n\n"],[-1,243,"."],[1,244,"\n"],[1,380,"客户"],[1,386," "],[-1,388," "],[-1,404,"分发"],[1,412,"分发"],[-1,414,"\n\n"],[-1,437,"2"],[1,438,"\n"],[-1,442,"i "],[1,444,"由 Di"],[1,458," "],[-1,460," "],[1,464," "],[-1,466," "],[-1,479,"找到"],[1,503,"找到"],[1,508," "],[-1,510," "],[-1,519,"\n\n；3"],[1,523,"；\n"],[1,570,"Co"],[1,578," "],[-1,580," "],[1,591," "],[-1,593," "],[-1,604,"\n\n"],[-1,622,"4"],[1,623,"\n"],[1,627,"Di"],[-1,637,"cl"],[1,640,"le"],[1,641," "],[-1,643," "],[1,664," "],[-1,666," "],[-1,671,"\n5"],[1,677,"视图"],[-1,690,"!["],[-1,753,"Sp"],[1,755,"\n\n"],[1,1565,"Sp"],[1,1591,"**"],[-1,1593,"**"],[-1,1608,"["],[1,1610,"a"],[-1,1612,"]("],[1,1614,"中的"],[-1,1635,"），"],[1,1639,"），"],[1,1710,"- "],[-1,1712,"- "],[1,1790,"**"],[-1,1792,"**"],[-1,1853,"。在"],[1,1857,"。在"],[-1,1912,"**"],[1,1925,"\n要"],[-1,1934,"1."],[1,1938,"先写"],[-1,1993,"2."],[1,1997,"写M"],[-1,2088,"3."],[1,2092,"写M"],[1,2104,"**"],[-1,2106,"**"],[1,2133,"**"],[-1,2135,"**4."],[1,2141,"写S"],[1,2154,"**"],[-1,2156,"**"],[-1,2188,"。\n"],[-1,2192,"5.-"],[1,2195,"。\n- 写"],[1,2211,"**"],[-1,2213,"**"],[-1,2223,"，获"],[-1,2227,"取"],[1,2228,"，"],[1,2230,"获取"],[-1,2283,"。\n"],[-1,2287,"6.-J "],[1,2292,"。\n-  写J"],[-1,2326,"=="],[1,2330,"> "],[-1,2337,"=="],[1,2341,"> "],[-1,2352,"=="],[1,2356,"> "],[-1,2363,"["],[1,2365,"a"],[-1,2367,"]("],[1,2372,"> "],[-1,2385,"=="],[1,2389,"> "],[-1,2405,"=="],[1,2409,"> ."],[-1,2411,".p. ==S"],[1,2418,"p\n\n\n"],[-1,2425,"p"],[1,2426,"\n"],[1,2428,"Sp"],[-1,2453,"类似"],[1,2457,"类似"],[1,2465,"**"],[-1,2467,"**"],[-1,2476,"\nS"],[-1,2480,"p"],[1,2481,"\n"],[1,2483,"Sp"],[1,2498,"**"],[-1,2500,"**"],[-1,2515,"\nm"],[-1,2519,"y"],[1,2520,"\n"],[1,2522,"my"],[1,2539,"**"],[-1,2541,"**"],[-1,2546," "],[1,2548,"数"],[-1,2552," 起\n\n**；Sp"],[1,2561,"起来**；\n\n"],[1,2563,"Sp"],[-1,2579,"与 "],[1,2582," S"],[1,2591,"- "],[-1,2593,"- "],[1,2609,"："],[-1,2611,"："],[1,2632,"- "],[-1,2634,"- "],[1,2663,"- "],[-1,2665,"- "],[1,2797,"- "],[-1,2799,"- "],[1,2823,"**"],[-1,2825,"**"],[1,2858,"**"],[-1,2860,"**"],[-1,2921,"**"],[1,2923,"持久"],[-1,2937,"**"],[1,2939,"\n\n"],[-1,3167,"**"],[1,3169,"业务"],[-1,3179,"**"],[1,3181,"\n\n"],[-1,3219,"\n"],[1,3220," "],[-1,3407,"**"],[1,3409,"表现"],[-1,3432,"**"],[1,3434,"\n\n"],[-1,3481,"\n"],[1,3482," "],[-1,3640,"**ew层**"],[1,3647,"View层\n\n"],[-1,3709,"**联系**"],[1,3715,"各层联系\n\n"],[-1,3920,"\n"],[1,3921," "],[-1,4098,"==**  "],[1,4104,"\n\n**最近"]],[24,24],[4110,4110]]],[1570883174316,[null,[[1,24,"\n*原理*"],[-1,24,"框架原理\n"],[1,41,"**"],[-1,41,"作用\n\n"],[-1,48," "],[-1,51,"是"],[1,53,"是"],[1,55," "],[-1,71," "],[-1,73," "],[1,75," "],[1,76," "],[-1,81," "],[1,84," "],[-1,92," "],[1,95," "],[-1,96," "],[1,99," "],[-1,131," "],[1,134," "],[-1,137," "],[1,140," "],[-1,143,"- "],[1,147,"- "],[1,159,"请求"],[-1,161,"请求"],[1,171,"\n\n"],[1,173,"s"],[-1,173,"\n"],[-1,176,"sp"],[1,190,"，m"],[-1,193,"my"],[1,214,"**"],[1,225,"Sp"],[-1,225,"\n\n"],[1,243,"."],[-1,243,"\n"],[-1,380,"客户"],[-1,388," "],[1,391," "],[1,406,"分发"],[-1,412,"分发"],[1,416,"\n\n"],[1,437,"2"],[-1,437,"\n"],[1,442,"i "],[-1,442,"由 Di"],[-1,460," "],[1,463," "],[-1,466," "],[1,469," "],[1,481,"找到"],[-1,503,"找到"],[-1,510," "],[1,513," "],[1,521,"\n\n；3"],[-1,521,"；\n"],[-1,570,"Co"],[-1,580," "],[1,583," "],[-1,593," "],[1,596," "],[1,606,"\n\n"],[1,622,"4"],[-1,622,"\n"],[-1,627,"Di"],[1,639,"cl"],[-1,640,"le"],[-1,643," "],[1,646," "],[-1,666," "],[1,669," "],[1,673,"\n5"],[-1,677,"视图"],[1,692,"!["],[1,753,"Sp"],[-1,753,"\n\n"],[-1,1565,"Sp"],[-1,1593,"**"],[1,1597,"**"],[1,1610,"["],[-1,1611,"a"],[1,1614,"]("],[-1,1614,"中的"],[1,1637,"），"],[-1,1639,"），"],[-1,1712,"- "],[1,1716,"- "],[-1,1792,"**"],[1,1796,"**"],[1,1855,"。在"],[-1,1857,"。在"],[1,1914,"**"],[-1,1925,"\n要"],[1,1936,"1."],[-1,1938,"先写"],[1,1995,"2."],[-1,1997,"写M"],[1,2090,"3."],[-1,2092,"写M"],[-1,2106,"**"],[1,2110,"**"],[-1,2135,"**"],[1,2139,"**4."],[-1,2141,"写S"],[-1,2156,"**"],[1,2160,"**"],[1,2190,"。\n"],[1,2192,"5.-"],[-1,2192,"。\n- 写"],[-1,2213,"**"],[1,2217,"**"],[1,2225,"，获"],[1,2227,"取"],[-1,2227,"，"],[-1,2230,"获取"],[1,2285,"。\n"],[1,2287,"6.-J "],[-1,2287,"。\n-  写J"],[1,2328,"=="],[-1,2330,"> "],[1,2339,"=="],[-1,2341,"> "],[1,2354,"=="],[-1,2356,"> "],[1,2365,"["],[-1,2366,"a"],[1,2369,"]("],[-1,2372,"> "],[1,2387,"=="],[-1,2389,"> "],[1,2407,"=="],[-1,2409,"> ."],[1,2414,".p. ==S"],[-1,2414,"p\n\n\n"],[1,2425,"p"],[-1,2425,"\n"],[-1,2428,"Sp"],[1,2455,"类似"],[-1,2457,"类似"],[-1,2467,"**"],[1,2471,"**"],[1,2478,"\nS"],[1,2480,"p"],[-1,2480,"\n"],[-1,2483,"Sp"],[-1,2500,"**"],[1,2504,"**"],[1,2517,"\nm"],[1,2519,"y"],[-1,2519,"\n"],[-1,2522,"my"],[-1,2541,"**"],[1,2545,"**"],[1,2548," "],[-1,2549,"数"],[1,2554," 起\n\n**；Sp"],[-1,2554,"起来**；\n\n"],[-1,2563,"Sp"],[1,2581,"与 "],[-1,2582," S"],[-1,2593,"- "],[1,2597,"- "],[-1,2611,"："],[1,2614,"："],[-1,2634,"- "],[1,2638,"- "],[-1,2665,"- "],[1,2669,"- "],[-1,2799,"- "],[1,2803,"- "],[-1,2825,"**"],[1,2829,"**"],[-1,2860,"**"],[1,2864,"**"],[1,2923,"**"],[-1,2923,"持久"],[1,2939,"**"],[-1,2939,"\n\n"],[1,3169,"**"],[-1,3169,"业务"],[1,3181,"**"],[-1,3181,"\n\n"],[1,3221,"\n"],[-1,3221," "],[1,3409,"**"],[-1,3409,"表现"],[1,3434,"**"],[-1,3434,"\n\n"],[1,3483,"\n"],[-1,3483," "],[1,3642,"**ew层**"],[-1,3642,"View层\n\n"],[1,3711,"**联系**"],[-1,3711,"各层联系\n\n"],[1,3922,"\n"],[-1,3922," "],[1,4100,"==**  "],[-1,4100,"\n\n**最近"]],[4110,4110],[24,24]]],[1570883121456,["GJX@GJXAIOU",[[1,527,"\n  - "]],[522,522],[527,527]]],[1570883122888,["GJX@GJXAIOU",[[-1,523,"  - "]],[527,527],[523,523]]],[1570883124393,["GJX@GJXAIOU",[[1,523,"这个map表由很多key:value键值对组成, \n\nkey值是controller的名字(@mapping ...), value值是该controller所在类的地址和方法签名\n\n(一个类中可能由很多controller)这个找到controller位置并实例化的过程叫做**反射**\n\n反射得到实例后通过**代理**执行相应的方法即相应controller"]],[523,523],[704,704]]],[1570883127231,["GJX@GJXAIOU",[[-1,549,"\n"]],[549,549],[548,548]]],[1570883128210,["GJX@GJXAIOU",[[-1,613,"\n"]],[613,613],[612,612]]],[1570883129231,["GJX@GJXAIOU",[[-1,666,"\n"]],[666,666],[665,665]]],[1570883474319,[null,[[-1,24,"\n*原理*"],[1,29,"框架原理\n"],[-1,41,"**"],[1,43,"作用\n\n"],[1,46," "],[1,48,"是"],[-1,49,"是"],[-1,52," "],[1,69," "],[1,70," "],[-1,71," "],[-1,73," "],[1,79," "],[-1,81," "],[1,90," "],[-1,92," "],[1,94," "],[-1,96," "],[1,129," "],[-1,131," "],[1,135," "],[-1,137," "],[-1,141,"使用"],[1,145,"使用"],[-1,157,"请求"],[1,161,"请求"],[-1,169,"\n\n"],[-1,173,"s"],[1,174,"\n"],[1,176,"sp"],[-1,188,"，m"],[1,193,"my"],[-1,212,"**"],[-1,225,"Sp"],[1,227,"\n\n"],[-1,243,"."],[1,244,"\n"],[1,380,"客户"],[1,386," "],[-1,388," "],[-1,404,"分发"],[1,412,"分发"],[-1,414,"\n\n"],[-1,437,"2"],[1,438,"\n"],[-1,442,"i "],[1,444,"由 Di"],[1,458," "],[-1,460," "],[1,464," "],[-1,466," "],[-1,479,"找到"],[1,503,"找到"],[1,508," "],[-1,510," "],[-1,519,"\n\n；3"],[1,523,"；\n"],[1,749,"Co"],[1,757," "],[-1,759," "],[1,770," "],[-1,772," "],[-1,783,"\n\n"],[-1,801,"4"],[1,802,"\n"],[1,806,"Di"],[-1,816,"clvt"],[1,820,"vlet "],[-1,822," "],[1,843," "],[-1,845," "],[-1,850,"\n5"],[1,856,"视图"],[-1,869,"!["],[-1,932,"Sp"],[1,934,"\n\n"],[1,1744,"Sp"],[-1,1770,"它可"],[1,1774,"它可"],[-1,1787,"["],[1,1789,"a"],[-1,1791,"]("],[1,1793,"中的"],[-1,1814,"），"],[1,1818,"），"],[1,1889,"- "],[-1,1891,"- "],[1,1969,"**"],[-1,1971,"**"],[-1,2032,"。在"],[1,2036,"。在"],[-1,2091,"**"],[1,2104,"\n要"],[-1,2113,"1."],[1,2117,"先写"],[-1,2172,"2."],[1,2176,"写M"],[-1,2267,"3."],[1,2271,"写M"],[-1,2283,"Ma"],[1,2287,"Ma"],[-1,2312,"。\n"],[-1,2316,"4."],[1,2318,"。\n"],[1,2320,"写S"],[1,2333,"**"],[-1,2335,"**"],[-1,2367,"。\n"],[-1,2371,"5.-"],[1,2374,"。\n- 写"],[1,2390,"**"],[-1,2392,"**"],[-1,2402,"，获"],[-1,2406,"取"],[1,2407,"，"],[1,2409,"获取"],[-1,2462,"。\n"],[-1,2466,"6.-J "],[1,2471,"。\n-  写J"],[-1,2505,"=="],[1,2509,"> "],[-1,2516,"=="],[1,2520,"> "],[-1,2531,"=="],[1,2535,"> "],[-1,2542,"["],[1,2544,"a"],[-1,2546,"]("],[1,2551,"> "],[-1,2564,"=="],[1,2568,"> "],[-1,2584,"=="],[1,2588,"> ."],[-1,2590,".p. ==S"],[1,2597,"p\n\n\n"],[-1,2604,"p"],[1,2605,"\n"],[1,2607,"Sp"],[1,2632,"2 "],[-1,2634,"2 "],[1,2644,"**"],[-1,2646,"**"],[-1,2655,"\nS"],[-1,2659,"p"],[1,2660,"\n"],[1,2662,"Sp"],[1,2677,"**"],[-1,2679,"**"],[-1,2694,"\nm"],[-1,2698,"y"],[1,2699,"\n"],[1,2701,"my"],[1,2718,"**"],[-1,2720,"**"],[-1,2725," "],[1,2727,"数"],[-1,2731," 起\n\n**；Sp"],[1,2740,"起来**；\n\n"],[1,2742,"Sp"],[-1,2758,"与 于"],[1,2761,"于 S"],[1,2770,"- "],[-1,2772,"- "],[1,2788,"："],[-1,2790,"："],[-1,2811,"my"],[1,2815,"my"],[1,2842,"- "],[-1,2844,"- "],[1,2976,"- "],[-1,2978,"- "],[-1,3002,"它允"],[1,3006,"它允"],[-1,3037,"，如"],[1,3041,"，如"],[-1,3100,"**"],[1,3102,"持久"],[-1,3116,"**"],[1,3118,"\n\n"],[-1,3346,"**"],[1,3348,"业务"],[-1,3358,"**"],[1,3360,"\n\n"],[-1,3398,"\n"],[1,3399," "],[-1,3586,"**"],[1,3588,"表现"],[-1,3611,"**"],[1,3613,"\n\n"],[-1,3660,"\n"],[1,3661," "],[-1,3819,"**ew层**"],[1,3826,"View层\n\n"],[-1,3888,"**联系**"],[1,3894,"各层联系\n\n"],[-1,4099,"\n"],[1,4100," "],[-1,4277,"==**  "],[1,4283,"\n\n**最近"]],[24,24],[4289,4289]]],[1570883474319,[null,[[1,24,"\n*原理*"],[-1,24,"框架原理\n"],[1,41,"**"],[-1,41,"作用\n\n"],[-1,48," "],[-1,51,"是"],[1,53,"是"],[1,55," "],[-1,71," "],[-1,73," "],[1,75," "],[1,76," "],[-1,81," "],[1,84," "],[-1,92," "],[1,95," "],[-1,96," "],[1,99," "],[-1,131," "],[1,134," "],[-1,137," "],[1,140," "],[1,143,"使用"],[-1,145,"使用"],[1,159,"请求"],[-1,161,"请求"],[1,171,"\n\n"],[1,173,"s"],[-1,173,"\n"],[-1,176,"sp"],[1,190,"，m"],[-1,193,"my"],[1,214,"**"],[1,225,"Sp"],[-1,225,"\n\n"],[1,243,"."],[-1,243,"\n"],[-1,380,"客户"],[-1,388," "],[1,391," "],[1,406,"分发"],[-1,412,"分发"],[1,416,"\n\n"],[1,437,"2"],[-1,437,"\n"],[1,442,"i "],[-1,442,"由 Di"],[-1,460," "],[1,463," "],[-1,466," "],[1,469," "],[1,481,"找到"],[-1,503,"找到"],[-1,510," "],[1,513," "],[1,521,"\n\n；3"],[-1,521,"；\n"],[-1,749,"Co"],[-1,759," "],[1,762," "],[-1,772," "],[1,775," "],[1,785,"\n\n"],[1,801,"4"],[-1,801,"\n"],[-1,806,"Di"],[1,818,"clvt"],[-1,818,"vlet "],[1,825," "],[-1,845," "],[1,848," "],[1,852,"\n5"],[-1,856,"视图"],[1,871,"!["],[1,932,"Sp"],[-1,932,"\n\n"],[-1,1744,"Sp"],[1,1772,"它可"],[-1,1774,"它可"],[1,1789,"["],[-1,1790,"a"],[1,1793,"]("],[-1,1793,"中的"],[1,1816,"），"],[-1,1818,"），"],[-1,1891,"- "],[1,1895,"- "],[-1,1971,"**"],[1,1975,"**"],[1,2034,"。在"],[-1,2036,"。在"],[1,2093,"**"],[-1,2104,"\n要"],[1,2115,"1."],[-1,2117,"先写"],[1,2174,"2."],[-1,2176,"写M"],[1,2269,"3."],[-1,2271,"写M"],[1,2285,"Ma"],[-1,2287,"Ma"],[1,2314,"。\n"],[1,2316,"4."],[-1,2316,"。\n"],[-1,2320,"写S"],[-1,2335,"**"],[1,2339,"**"],[1,2369,"。\n"],[1,2371,"5.-"],[-1,2371,"。\n- 写"],[-1,2392,"**"],[1,2396,"**"],[1,2404,"，获"],[1,2406,"取"],[-1,2406,"，"],[-1,2409,"获取"],[1,2464,"。\n"],[1,2466,"6.-J "],[-1,2466,"。\n-  写J"],[1,2507,"=="],[-1,2509,"> "],[1,2518,"=="],[-1,2520,"> "],[1,2533,"=="],[-1,2535,"> "],[1,2544,"["],[-1,2545,"a"],[1,2548,"]("],[-1,2551,"> "],[1,2566,"=="],[-1,2568,"> "],[1,2586,"=="],[-1,2588,"> ."],[1,2593,".p. ==S"],[-1,2593,"p\n\n\n"],[1,2604,"p"],[-1,2604,"\n"],[-1,2607,"Sp"],[-1,2634,"2 "],[1,2638,"2 "],[-1,2646,"**"],[1,2650,"**"],[1,2657,"\nS"],[1,2659,"p"],[-1,2659,"\n"],[-1,2662,"Sp"],[-1,2679,"**"],[1,2683,"**"],[1,2696,"\nm"],[1,2698,"y"],[-1,2698,"\n"],[-1,2701,"my"],[-1,2720,"**"],[1,2724,"**"],[1,2727," "],[-1,2728,"数"],[1,2733," 起\n\n**；Sp"],[-1,2733,"起来**；\n\n"],[-1,2742,"Sp"],[1,2760,"与 于"],[-1,2760,"于 S"],[-1,2772,"- "],[1,2776,"- "],[-1,2790,"："],[1,2793,"："],[1,2813,"my"],[-1,2815,"my"],[-1,2844,"- "],[1,2848,"- "],[-1,2978,"- "],[1,2982,"- "],[1,3004,"它允"],[-1,3006,"它允"],[1,3039,"，如"],[-1,3041,"，如"],[1,3102,"**"],[-1,3102,"持久"],[1,3118,"**"],[-1,3118,"\n\n"],[1,3348,"**"],[-1,3348,"业务"],[1,3360,"**"],[-1,3360,"\n\n"],[1,3400,"\n"],[-1,3400," "],[1,3588,"**"],[-1,3588,"表现"],[1,3613,"**"],[-1,3613,"\n\n"],[1,3662,"\n"],[-1,3662," "],[1,3821,"**ew层**"],[-1,3821,"View层\n\n"],[1,3890,"**联系**"],[-1,3890,"各层联系\n\n"],[1,4101,"\n"],[-1,4101," "],[1,4279,"==**  "],[-1,4279,"\n\n**最近"]],[4289,4289],[24,24]]],[1570883453479,["GJX@GJXAIOU",[[1,1552,"    \n"]],[1551,1551],[1556,1556]]],[1570883454071,["GJX@GJXAIOU",[[1,1556,"@RequestMapping(\"A\")\n    public String hello(){\n        return \"main\";\n    }"]],[1556,1556],[1632,1632]]],[1570883456167,["GJX@GJXAIOU",[[-1,1573,"A"]],[1574,1574],[1573,1573]]],[1570883456636,["GJX@GJXAIOU",[[-1,547," "],[1,548," "],[1,1573,"B"]],[1573,1573],[1574,1574]]],[1570883465562,["GJX@GJXAIOU",[[1,612,";"]],[612,612],[613,613]]],[1570883468479,["GJX@GJXAIOU",[[-1,548,"\n"]],[549,549],[548,548]]],[1570883534322,[null,[[-1,24,"\n*原理*"],[1,29,"框架原理\n"],[-1,41,"**"],[1,43,"作用\n\n"],[1,46," "],[1,48,"是"],[-1,49,"是"],[-1,52," "],[1,69," "],[1,70," "],[-1,71," "],[-1,73," "],[1,79," "],[-1,81," "],[1,90," "],[-1,92," "],[1,94," "],[-1,96," "],[1,129," "],[-1,131," "],[1,135," "],[-1,137," "],[-1,141,"使用"],[1,145,"使用"],[-1,157,"请求"],[1,161,"请求"],[-1,169,"\n\n"],[-1,173,"s"],[1,174,"\n"],[1,176,"sp"],[-1,188,"，m"],[1,193,"my"],[-1,212,"**"],[-1,225,"Sp"],[1,227,"\n\n"],[-1,243,"."],[1,244,"\n"],[1,380,"客户"],[1,386," "],[-1,388," "],[-1,404,"分发"],[1,412,"分发"],[-1,414,"\n\n"],[-1,437,"2"],[1,438,"\n"],[-1,442,"i "],[1,444,"由 Di"],[1,458," "],[-1,460," "],[1,464," "],[-1,466," "],[-1,479,"找到"],[1,503,"找到"],[1,508," "],[-1,510," "],[-1,519,"\n\n；3"],[1,523,"；\n"],[1,749,"Co"],[1,757," "],[-1,759," "],[1,770," "],[-1,772," "],[-1,783,"\n\n"],[-1,801,"4"],[1,802,"\n"],[1,806,"Di"],[-1,816,"clvt"],[1,820,"vlet "],[-1,822," "],[1,843," "],[-1,845," "],[-1,850,"\n5"],[1,856,"视图"],[-1,869,"!["],[-1,932,"Sp"],[1,934,"\n\n"],[1,1825,"Sp"],[-1,1851,"它可"],[1,1855,"它可"],[-1,1868,"["],[1,1870,"a"],[-1,1872,"]("],[1,1874,"中的"],[-1,1895,"），"],[1,1899,"），"],[1,1970,"- "],[-1,1972,"- "],[1,2050,"**"],[-1,2052,"**"],[-1,2113,"。在"],[1,2117,"。在"],[-1,2172,"**"],[1,2185,"\n要"],[-1,2194,"1."],[1,2198,"先写"],[-1,2253,"2."],[1,2257,"写M"],[-1,2348,"3."],[1,2352,"写M"],[-1,2364,"Ma"],[1,2368,"Ma"],[-1,2393,"。\n"],[-1,2397,"4."],[1,2399,"。\n"],[1,2401,"写S"],[1,2414,"**"],[-1,2416,"**"],[-1,2448,"。\n"],[-1,2452,"5.-"],[1,2455,"。\n- 写"],[1,2471,"**"],[-1,2473,"**"],[-1,2483,"，获"],[-1,2487,"取"],[1,2488,"，"],[1,2490,"获取"],[-1,2543,"。\n"],[-1,2547,"6.-J "],[1,2552,"。\n-  写J"],[-1,2586,"=="],[1,2590,"> "],[-1,2597,"=="],[1,2601,"> "],[-1,2612,"=="],[1,2616,"> "],[-1,2623,"["],[1,2625,"a"],[-1,2627,"]("],[1,2632,"> "],[-1,2645,"=="],[1,2649,"> "],[-1,2665,"=="],[1,2669,"> ."],[-1,2671,".p. ==S"],[1,2678,"p\n\n\n"],[-1,2685,"p"],[1,2686,"\n"],[1,2688,"Sp"],[1,2713,"2 "],[-1,2715,"2 "],[1,2725,"**"],[-1,2727,"**"],[-1,2736,"\nS"],[-1,2740,"p"],[1,2741,"\n"],[1,2743,"Sp"],[1,2758,"**"],[-1,2760,"**"],[-1,2775,"\nm"],[-1,2779,"y"],[1,2780,"\n"],[1,2782,"my"],[1,2799,"**"],[-1,2801,"**"],[-1,2806," "],[1,2808,"数"],[-1,2812," 起\n\n**；Sp"],[1,2821,"起来**；\n\n"],[1,2823,"Sp"],[-1,2839,"与 于"],[1,2842,"于 S"],[1,2851,"- "],[-1,2853,"- "],[1,2869,"："],[-1,2871,"："],[-1,2892,"my"],[1,2896,"my"],[1,2923,"- "],[-1,2925,"- "],[1,3057,"- "],[-1,3059,"- "],[-1,3083,"它允"],[1,3087,"它允"],[-1,3118,"，如"],[1,3122,"，如"],[-1,3181,"**"],[1,3183,"持久"],[-1,3197,"**"],[1,3199,"\n\n"],[-1,3427,"**"],[1,3429,"业务"],[-1,3439,"**"],[1,3441,"\n\n"],[-1,3479,"\n"],[1,3480," "],[-1,3667,"**"],[1,3669,"表现"],[-1,3692,"**"],[1,3694,"\n\n"],[-1,3741,"\n"],[1,3742," "],[-1,3900,"**ew层**"],[1,3907,"View层\n\n"],[-1,3969,"**联系**"],[1,3975,"各层联系\n\n"],[-1,4180,"\n"],[1,4181," "],[-1,4358,"==**  "],[1,4364,"\n\n**最近"]],[24,24],[4370,4370]]],[1570883534322,[null,[[1,24,"\n*原理*"],[-1,24,"框架原理\n"],[1,41,"**"],[-1,41,"作用\n\n"],[-1,48," "],[-1,51,"是"],[1,53,"是"],[1,55," "],[-1,71," "],[-1,73," "],[1,75," "],[1,76," "],[-1,81," "],[1,84," "],[-1,92," "],[1,95," "],[-1,96," "],[1,99," "],[-1,131," "],[1,134," "],[-1,137," "],[1,140," "],[1,143,"使用"],[-1,145,"使用"],[1,159,"请求"],[-1,161,"请求"],[1,171,"\n\n"],[1,173,"s"],[-1,173,"\n"],[-1,176,"sp"],[1,190,"，m"],[-1,193,"my"],[1,214,"**"],[1,225,"Sp"],[-1,225,"\n\n"],[1,243,"."],[-1,243,"\n"],[-1,380,"客户"],[-1,388," "],[1,391," "],[1,406,"分发"],[-1,412,"分发"],[1,416,"\n\n"],[1,437,"2"],[-1,437,"\n"],[1,442,"i "],[-1,442,"由 Di"],[-1,460," "],[1,463," "],[-1,466," "],[1,469," "],[1,481,"找到"],[-1,503,"找到"],[-1,510," "],[1,513," "],[1,521,"\n\n；3"],[-1,521,"；\n"],[-1,749,"Co"],[-1,759," "],[1,762," "],[-1,772," "],[1,775," "],[1,785,"\n\n"],[1,801,"4"],[-1,801,"\n"],[-1,806,"Di"],[1,818,"clvt"],[-1,818,"vlet "],[1,825," "],[-1,845," "],[1,848," "],[1,852,"\n5"],[-1,856,"视图"],[1,871,"!["],[1,932,"Sp"],[-1,932,"\n\n"],[-1,1825,"Sp"],[1,1853,"它可"],[-1,1855,"它可"],[1,1870,"["],[-1,1871,"a"],[1,1874,"]("],[-1,1874,"中的"],[1,1897,"），"],[-1,1899,"），"],[-1,1972,"- "],[1,1976,"- "],[-1,2052,"**"],[1,2056,"**"],[1,2115,"。在"],[-1,2117,"。在"],[1,2174,"**"],[-1,2185,"\n要"],[1,2196,"1."],[-1,2198,"先写"],[1,2255,"2."],[-1,2257,"写M"],[1,2350,"3."],[-1,2352,"写M"],[1,2366,"Ma"],[-1,2368,"Ma"],[1,2395,"。\n"],[1,2397,"4."],[-1,2397,"。\n"],[-1,2401,"写S"],[-1,2416,"**"],[1,2420,"**"],[1,2450,"。\n"],[1,2452,"5.-"],[-1,2452,"。\n- 写"],[-1,2473,"**"],[1,2477,"**"],[1,2485,"，获"],[1,2487,"取"],[-1,2487,"，"],[-1,2490,"获取"],[1,2545,"。\n"],[1,2547,"6.-J "],[-1,2547,"。\n-  写J"],[1,2588,"=="],[-1,2590,"> "],[1,2599,"=="],[-1,2601,"> "],[1,2614,"=="],[-1,2616,"> "],[1,2625,"["],[-1,2626,"a"],[1,2629,"]("],[-1,2632,"> "],[1,2647,"=="],[-1,2649,"> "],[1,2667,"=="],[-1,2669,"> ."],[1,2674,".p. ==S"],[-1,2674,"p\n\n\n"],[1,2685,"p"],[-1,2685,"\n"],[-1,2688,"Sp"],[-1,2715,"2 "],[1,2719,"2 "],[-1,2727,"**"],[1,2731,"**"],[1,2738,"\nS"],[1,2740,"p"],[-1,2740,"\n"],[-1,2743,"Sp"],[-1,2760,"**"],[1,2764,"**"],[1,2777,"\nm"],[1,2779,"y"],[-1,2779,"\n"],[-1,2782,"my"],[-1,2801,"**"],[1,2805,"**"],[1,2808," "],[-1,2809,"数"],[1,2814," 起\n\n**；Sp"],[-1,2814,"起来**；\n\n"],[-1,2823,"Sp"],[1,2841,"与 于"],[-1,2841,"于 S"],[-1,2853,"- "],[1,2857,"- "],[-1,2871,"："],[1,2874,"："],[1,2894,"my"],[-1,2896,"my"],[-1,2925,"- "],[1,2929,"- "],[-1,3059,"- "],[1,3063,"- "],[1,3085,"它允"],[-1,3087,"它允"],[1,3120,"，如"],[-1,3122,"，如"],[1,3183,"**"],[-1,3183,"持久"],[1,3199,"**"],[-1,3199,"\n\n"],[1,3429,"**"],[-1,3429,"业务"],[1,3441,"**"],[-1,3441,"\n\n"],[1,3481,"\n"],[-1,3481," "],[1,3669,"**"],[-1,3669,"表现"],[1,3694,"**"],[-1,3694,"\n\n"],[1,3743,"\n"],[-1,3743," "],[1,3902,"**ew层**"],[-1,3902,"View层\n\n"],[1,3971,"**联系**"],[-1,3971,"各层联系\n\n"],[1,4182,"\n"],[-1,4182," "],[1,4360,"==**  "],[-1,4360,"\n\n**最近"]],[4370,4370],[24,24]]],[1570883476625,["GJX@GJXAIOU",[[1,701,";"]],[701,701],[702,702]]],[1570884074333,[null,[[-1,24,"\n*原理*"],[1,29,"框架原理\n"],[-1,41,"**"],[1,43,"作用\n\n"],[1,46," "],[1,48,"是"],[-1,49,"是"],[-1,52," "],[1,69," "],[1,70," "],[-1,71," "],[-1,73," "],[1,79," "],[-1,81," "],[1,90," "],[-1,92," "],[1,94," "],[-1,96," "],[1,129," "],[-1,131," "],[1,135," "],[-1,137," "],[-1,141,"使用"],[1,145,"使用"],[-1,157,"请求"],[1,161,"请求"],[-1,169,"\n\n"],[-1,173,"s"],[1,174,"\n"],[1,176,"sp"],[-1,188,"，m"],[1,193,"my"],[-1,212,"**"],[-1,225,"Sp"],[1,227,"\n\n"],[-1,243,"."],[1,244,"\n"],[1,380,"客户"],[1,386," "],[-1,388," "],[-1,404,"分发"],[1,412,"分发"],[-1,414,"\n\n"],[-1,437,"2"],[1,438,"\n"],[-1,442,"i "],[1,444,"由 Di"],[1,458," "],[-1,460," "],[1,464," "],[-1,466," "],[-1,479,"找到"],[1,503,"找到"],[1,508," "],[-1,510," "],[-1,519,"\n\n；3"],[1,523,"；\n"],[1,750,"Co"],[1,758," "],[-1,760," "],[1,771," "],[-1,773," "],[-1,784,"\n\n"],[-1,802,"4"],[1,803,"\n"],[1,807,"Di"],[-1,817,"clvt"],[1,821,"vlet "],[-1,823," "],[1,844," "],[-1,846," "],[-1,851,"\n5"],[1,857,"视图"],[-1,870,"!["],[-1,933,"Sp"],[1,935,"\n\n"],[1,1826,"Sp"],[-1,1852,"它可"],[1,1856,"它可"],[-1,1869,"["],[1,1871,"a"],[-1,1873,"]("],[1,1875,"中的"],[-1,1896,"），"],[1,1900,"），"],[1,1971,"- "],[-1,1973,"- "],[1,2051,"**"],[-1,2053,"**"],[-1,2114,"。在"],[1,2118,"。在"],[-1,2173,"**"],[1,2186,"\n要"],[-1,2195,"1."],[1,2199,"先写"],[-1,2254,"2."],[1,2258,"写M"],[-1,2349,"3."],[1,2353,"写M"],[-1,2365,"Ma"],[1,2369,"Ma"],[-1,2394,"。\n"],[-1,2398,"4."],[1,2400,"。\n"],[1,2402,"写S"],[1,2415,"**"],[-1,2417,"**"],[-1,2449,"。\n"],[-1,2453,"5.-"],[1,2456,"。\n- 写"],[1,2472,"**"],[-1,2474,"**"],[-1,2484,"，获"],[-1,2488,"取"],[1,2489,"，"],[1,2491,"获取"],[-1,2544,"。\n"],[-1,2548,"6.-J "],[1,2553,"。\n-  写J"],[-1,2587,"=="],[1,2591,"> "],[-1,2598,"=="],[1,2602,"> "],[-1,2613,"=="],[1,2617,"> "],[-1,2624,"["],[1,2626,"a"],[-1,2628,"]("],[1,2633,"> "],[-1,2646,"=="],[1,2650,"> "],[-1,2666,"=="],[1,2670,"> ."],[-1,2672,".p. ==S"],[1,2679,"p\n\n\n"],[-1,2686,"p"],[1,2687,"\n"],[1,2689,"Sp"],[1,2714,"2 "],[-1,2716,"2 "],[1,2726,"**"],[-1,2728,"**"],[-1,2737,"\nS"],[-1,2741,"p"],[1,2742,"\n"],[1,2744,"Sp"],[1,2759,"**"],[-1,2761,"**"],[-1,2776,"\nm"],[-1,2780,"y"],[1,2781,"\n"],[1,2783,"my"],[1,2800,"**"],[-1,2802,"**"],[-1,2807," "],[1,2809,"数"],[-1,2813," 起\n\n**；Sp"],[1,2822,"起来**；\n\n"],[1,2824,"Sp"],[-1,2840,"与 于"],[1,2843,"于 S"],[1,2852,"- "],[-1,2854,"- "],[1,2870,"："],[-1,2872,"："],[-1,2893,"my"],[1,2897,"my"],[1,2924,"- "],[-1,2926,"- "],[1,3058,"- "],[-1,3060,"- "],[-1,3084,"它允"],[1,3088,"它允"],[-1,3119,"，如"],[1,3123,"，如"],[-1,3182,"**"],[1,3184,"持久"],[-1,3198,"**"],[1,3200,"\n\n"],[-1,3428,"**"],[1,3430,"业务"],[-1,3440,"**"],[1,3442,"\n\n"],[-1,3480,"\n"],[1,3481," "],[-1,3668,"**"],[1,3670,"表现"],[-1,3693,"**"],[1,3695,"\n\n"],[-1,3742,"\n"],[1,3743," "],[-1,3901,"**ew层**"],[1,3908,"View层\n\n"],[-1,3970,"**联系**"],[1,3976,"各层联系\n\n"],[-1,4181,"\n"],[1,4182," "],[-1,4359,"==**  "],[1,4365,"\n\n**最近"]],[24,24],[4371,4371]]],[1570884074333,[null,[[1,24,"\n*原理*"],[-1,24,"框架原理\n"],[1,41,"**"],[-1,41,"作用\n\n"],[-1,48," "],[-1,51,"是"],[1,53,"是"],[1,55," "],[-1,71," "],[-1,73," "],[1,75," "],[1,76," "],[-1,81," "],[1,84," "],[-1,92," "],[1,95," "],[-1,96," "],[1,99," "],[-1,131," "],[1,134," "],[-1,137," "],[1,140," "],[1,143,"使用"],[-1,145,"使用"],[1,159,"请求"],[-1,161,"请求"],[1,171,"\n\n"],[1,173,"s"],[-1,173,"\n"],[-1,176,"sp"],[1,190,"，m"],[-1,193,"my"],[1,214,"**"],[1,225,"Sp"],[-1,225,"\n\n"],[1,243,"."],[-1,243,"\n"],[-1,380,"客户"],[-1,388," "],[1,391," "],[1,406,"分发"],[-1,412,"分发"],[1,416,"\n\n"],[1,437,"2"],[-1,437,"\n"],[1,442,"i "],[-1,442,"由 Di"],[-1,460," "],[1,463," "],[-1,466," "],[1,469," "],[1,481,"找到"],[-1,503,"找到"],[-1,510," "],[1,513," "],[1,521,"\n\n；3"],[-1,521,"；\n"],[-1,750,"Co"],[-1,760," "],[1,763," "],[-1,773," "],[1,776," "],[1,786,"\n\n"],[1,802,"4"],[-1,802,"\n"],[-1,807,"Di"],[1,819,"clvt"],[-1,819,"vlet "],[1,826," "],[-1,846," "],[1,849," "],[1,853,"\n5"],[-1,857,"视图"],[1,872,"!["],[1,933,"Sp"],[-1,933,"\n\n"],[-1,1826,"Sp"],[1,1854,"它可"],[-1,1856,"它可"],[1,1871,"["],[-1,1872,"a"],[1,1875,"]("],[-1,1875,"中的"],[1,1898,"），"],[-1,1900,"），"],[-1,1973,"- "],[1,1977,"- "],[-1,2053,"**"],[1,2057,"**"],[1,2116,"。在"],[-1,2118,"。在"],[1,2175,"**"],[-1,2186,"\n要"],[1,2197,"1."],[-1,2199,"先写"],[1,2256,"2."],[-1,2258,"写M"],[1,2351,"3."],[-1,2353,"写M"],[1,2367,"Ma"],[-1,2369,"Ma"],[1,2396,"。\n"],[1,2398,"4."],[-1,2398,"。\n"],[-1,2402,"写S"],[-1,2417,"**"],[1,2421,"**"],[1,2451,"。\n"],[1,2453,"5.-"],[-1,2453,"。\n- 写"],[-1,2474,"**"],[1,2478,"**"],[1,2486,"，获"],[1,2488,"取"],[-1,2488,"，"],[-1,2491,"获取"],[1,2546,"。\n"],[1,2548,"6.-J "],[-1,2548,"。\n-  写J"],[1,2589,"=="],[-1,2591,"> "],[1,2600,"=="],[-1,2602,"> "],[1,2615,"=="],[-1,2617,"> "],[1,2626,"["],[-1,2627,"a"],[1,2630,"]("],[-1,2633,"> "],[1,2648,"=="],[-1,2650,"> "],[1,2668,"=="],[-1,2670,"> ."],[1,2675,".p. ==S"],[-1,2675,"p\n\n\n"],[1,2686,"p"],[-1,2686,"\n"],[-1,2689,"Sp"],[-1,2716,"2 "],[1,2720,"2 "],[-1,2728,"**"],[1,2732,"**"],[1,2739,"\nS"],[1,2741,"p"],[-1,2741,"\n"],[-1,2744,"Sp"],[-1,2761,"**"],[1,2765,"**"],[1,2778,"\nm"],[1,2780,"y"],[-1,2780,"\n"],[-1,2783,"my"],[-1,2802,"**"],[1,2806,"**"],[1,2809," "],[-1,2810,"数"],[1,2815," 起\n\n**；Sp"],[-1,2815,"起来**；\n\n"],[-1,2824,"Sp"],[1,2842,"与 于"],[-1,2842,"于 S"],[-1,2854,"- "],[1,2858,"- "],[-1,2872,"："],[1,2875,"："],[1,2895,"my"],[-1,2897,"my"],[-1,2926,"- "],[1,2930,"- "],[-1,3060,"- "],[1,3064,"- "],[1,3086,"它允"],[-1,3088,"它允"],[1,3121,"，如"],[-1,3123,"，如"],[1,3184,"**"],[-1,3184,"持久"],[1,3200,"**"],[-1,3200,"\n\n"],[1,3430,"**"],[-1,3430,"业务"],[1,3442,"**"],[-1,3442,"\n\n"],[1,3482,"\n"],[-1,3482," "],[1,3670,"**"],[-1,3670,"表现"],[1,3695,"**"],[-1,3695,"\n\n"],[1,3744,"\n"],[-1,3744," "],[1,3903,"**ew层**"],[-1,3903,"View层\n\n"],[1,3972,"**联系**"],[-1,3972,"各层联系\n\n"],[1,4183,"\n"],[-1,4183," "],[1,4361,"==**  "],[-1,4361,"\n\n**最近"]],[4371,4371],[24,24]]],[1570884053698,["GJX@GJXAIOU",[[1,4363,"# SSM三大框架的运行流程、原理、核心技术详解！\n\n2018-08-31 10:46:56 [EasyChill](https://me.csdn.net/Song_JiangTao) 阅读数 23260更多\n\n分类专栏： [ssm](https://blog.csdn.net/song_jiangtao/article/category/7649598) [Spring全家桶](https://blog.csdn.net/song_jiangtao/article/category/9293134)\n\n[](http://creativecommons.org/licenses/by-sa/4.0/)版权声明：本文为博主原创文章，遵循[ CC 4.0 BY-SA ](http://creativecommons.org/licenses/by-sa/4.0/)版权协议，转载请附上原文出处链接和本声明。\n\n本文链接：[https://blog.csdn.net/Song_JiangTao/article/details/82252852](https://blog.csdn.net/Song_JiangTao/article/details/82252852) \n\n# 一、Spring部分\n\n#### 1、Spring的运行流程\n\n*   第一步：加载配置文件`ApplicationContext ac = new ClassPathXmlApplicationContext(\"beans.xml\");`，ApplicationContext接口，它由BeanFactory接口派生而来，因而提供了BeanFactory所有的功能。"],[-1,4365,"最近在学习S"],[1,4371,"配置文件中的bean的信息是被加载在HashMap中的，一个bean通常包括，id，class，"],[1,4373,"operty等，bean的id对应HashMap中的key，value呢就是bean**\n\n具体如何加载？源码如下:\n\n```java\nif (beanProperty.element(\"map\") != null){  \nMap<Str"],[-1,4376,"+SpringMVC+MyBatis的整合。以下是参考网上的资料自己实践操作的详细步骤。"],[1,4420,", Object> propertiesMap = new HashMap<String, Object>();  \nElement propertiesListMap = (Element)beanProperty.elements().get(0);  \nIterator<?> propertiesIterator = propertiesListMap .elements().iterator();  \nwhile (propertiesIterator.hasNext()) {  \n\tElement vet = (Element) propertiesIterator.next();  \n\tif(vet.getName().equals(\"entry\")) {  \n\t\tString key = vet.attributeValue(\"key\");  \n\t\tIterator<?> valuesIterator = vet.elements()  .iterator();  \n\t\twhile (valuesIterator.hasNext()) {  \n\t\t\tElement value = (Element) valuesIterator.next();  \n\t\t\tif (value.getName().equals(\"value\")){  \n\t\t\t\tpropertiesMap.put(key, value.getText());  \n\t\t\t}  \n\t\t\tif (value.getName().equals(\"ref\")) {  \n\t\t\t\tpropertiesMap.put(key, new String[]{\n\t\t\t\t\t\tvalue.attributeValue(\"bean\") \n\t\t\t\t\t\t});  \n\t\t\t}  \n\t\t}  \n\t}  \n}  \nbean.getProperties().put(name, propertiesMap);  \n//看完反正我是默默放弃了。。。\n} \n12345678910111213141516171819202122232425\n```\n\n*   第二步：调用getBean方法，getBean是用来获取applicationContext.xml文件里bean的，（）写的是bean的id。一般情况都会强转成我们对应的业务层（接口）。例如`SpringService springService =(SpringService)ac.getBean(\"Service\");`\n*   第三步：这样我们就可以调用业务层(接口实现)的方法。\n\n具体如下：\n![原理图](https://img-blog.csdn.net/20180415194047988?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NvbmdfSmlhbmdUYW8=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70)\nJava反射博大精深，我也不很懂，具体请查看[Java基础之—反射](https://blog.csdn.net/sinat_38259539/article/details/71799078)\n\n**那么bean中的东西到底是怎么注入进去的？**简单来讲，就是在实例化一个bean时，实际上就实例化了类，它通过**反射**调用类中set方法将事先保存在HashMap中的类属性注入到类中。这样就回到了我们Java最原始的地方，**对象.方法，对象.属性"],[-1,4425," 1、基本概念\n\n## 1.1"],[1,4440,"### 2"],[1,4447,"的原理\n\n*"],[1,4448,"  **什么是spring？**"],[1,4450,"*"],[1,4453,"**spring是一个容器框架，它可以接管web层，业务层，dao层，持久层的各个组件，并且可以配置各种bean，"],[1,4454,"并可以维护bean与bean的关系，当我们需要使用某个bean的时候，我们可以直接getBean(id)，使用即可**\n\n*"],[1,4457,"Spring目的：就是让对象与对象（模块与模块）之间的关系没有通过代码来关联，都是通过配置类说明管理的（Spring根据这些配置"],[1,4458,"内部通过反射去动态的组装对象） ，"],[-1,4467,"开源框架，"],[1,4472,"容器，凡是在容器里的对象才会有"],[-1,4478,"是于2003 年兴起的一个轻量级的Java 开发框架，由Rod Johnson 在其著作Expert One-On-One J2EE Development and Design中阐述的部分理念和原型衍生而来。它是为了解决企业应用开发的复杂性而创建的。S"],[1,4605,"所提供的这些服务和功能。\n\n*   层次框架图：\n    ![这里写图片描述](https://img-blog.csdn.net/20180415151535222?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NvbmdfSmlhbmdUYW8=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70)\n    说明：\n\n    *   **web层：** struts充当web层，接管jsp，action，表单，主要体现出mvc的**数据输入**，**数据的处理**，**数据**的显示分离\n    *   **model层：** model层在概念上可以理解为包含了**业务层，dao层，持久层**，需要注意的是，一个项目中，不一定每一个层次都有\n    *   **持久层：**体现oop，主要解决关系模型和对象模型之间的**阻抗**\n\n#### 3、Spring的核心技术\n\n*   IOC\n\n    *   **ioc（inverse of control）控制反转：** 所谓反转就是把创建对象（bean）和维护对象（bean）之间的关系的权利从程序转移到spring的容器（spring-config.xml）\n        ![这里写图片描述](https://img-blog.csdn.net/20180415162059434?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NvbmdfSmlhbmdUYW8=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70)\n        说明：`<bean></bean>`这对标签元素的作用：**当我们加载spring框架时，spring就会自动创建一个bean对象，并放入内存**相当于我们常规的new一个对象，而`<property></property>`中的value则是实现了“**对象.set方法**”，这里也体现了注入了概念\n*   DI\n\n    *   **di（dependency injection）依赖注入：** 实际上di和ioc是同一个概念，spring的设计者，**认为di更准确的表示spring的核心**\n    *   **spring提倡接口编程，在配合di技术就可以达到层与层解耦的目的**，为什么呢？因为层与层之间的关联，由框架帮我们做了，这样代码之间的耦合度降低，代码的复用性提高\n    *   接口编程的好处请访问[Java中接口编程的好处以及实现方式的选择？](https://blog.csdn.net/Song_JiangTao/article/details/82389905) \n*   AOP\n\n    *   **aspect oriented programming（面向切面编程）**\n    *   核心：**在不增加代码的基础上，还增加新功能**\n    *   理解：**面向切面：其实是，把一些公共的“东西”拿出来，比如说，事务，安全，日志，这些方面，如果你用的到，你就引入。** 也就是说：当你需要在执行一个操作（方法）之前想做一些事情（比如，开启事务，记录日志等等），那你就用before，如果想在操作之后做点事情（比如，关闭一些连接等等），那你就用after。其他类似\n\n2019-09-03 补充 ：\n\n内容取自《spring源码解析》\n\nspring整体架构图：\n![spring整体架构图](https://img-blog.csdnimg.cn/20190903142522892.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NvbmdfSmlhbmdUYW8=,size_16,color_FFFFFF,t_70)\n1、core container（核心容器）\n\n核心容器包含了core，beans，context和expression language四个模块\n\ncore和beans模块是框架的基础部分，提供IOC和依赖注入特性。这里的基础概念是BeanFactory，它提供对Factory模式的经典实现来消除对程序性单例模式的需要，并真正地允许你从程序逻辑中分离出依赖关系和配置。\n\n*   core模块主要包含了spring框架基本的黑犀牛工具类，spring的其他组建都要用到这个包里的类，core模块是其他组件的基本核心。当然你也可以在自己应用系统中使用这些工具类。\n\n*   beans模块是所有应用都要用到的，它包含访问配置文件，创建和管理bean以及进行ioc，di操作相关的所有类\n\n*   context模块构建与core和beans模块基础之上，提供了一种类似于JNDI注册器的框架式的对象访问方法。context模块继承了beans的特性，为s"],[-1,4610,"使用基本的JavaBean来完成以前只可能由EJB完成的事情。然而，S"],[1,4645,"核心提供了大量扩展，添加了对国际化（例如资源绑定）、事件传播、资源加载和对context的透明创建的支持。context模块同事也支持j2ee的一些特性，例如EJB，JMX和基础的远程处理，applicationContext接口是context模块的关键。\n\n*   ExpressionLanguage模块提供了强大的表达式语言，用于在运行时查询和操纵对象。他是jsp2.1规范中定义的unifed expression language的扩展。该语言支持设置/获取属性的值，属性的分配，方法的调用 ，访问数组上下文，容器和索引器，逻辑和算数运算符，命名变量以及从spring的ioc容器中根据名称检索对象。它也支持list投影，选择和一般的list聚合\n\n2、Date Access/Integration\n\nDate Access/Integration层包含JDBC，ORM，OXM,JMS和Transaction模块\n\n*   jdbc模块提供了一个jdbc抽象层，他可以消除冗长的jdbc编码和解析数据厂商特有的错误代码。这个模块包含了spring对jdbc数据访问进行封装的所有类。\n\n*   orm模块为流行的对象-关系映射API，如JPA，JDO，Hibernate，iBatis等，提供了一个交互层。利用ORM封装包，可以混合使用所有spring提供的特性进行O/R映射，如前边提到的简单声明性事务管理。spring框架插入了若干个ORM框架 ，从而提供了ORM的对象关系工具，其中包括JDO，hibernate和iBatisSQl Map。所有这些都遵从s"],[-1,4651,"用途不仅限于服务器端的开发。从简单性、可测试性和松耦合的角度而言，任何Java应用都可以从S"],[1,4697,"通用事务和DAO异常层次结构。\n\n*   OXM模块提供了一个对Object/XML映射实现的抽象层，Object/XML映射实现包括JAXB，Castor，XMLBeans，JiBX和XStream。\n\n*   JMS（java massage service）模块主要包含了一些制造和消费消息的特性\n\n*   Transaction模块支持编程和声明性的事务管理，这些事务类必须实现特地的接口。并且对多有的POJO都适用\n\n3、web\n\nweb上下文模块建立在应用程序上下文模块之上，为基于web的应用程序提供了上下文。所以，spring框架支持与Jakarta struts的集成。web模块还简化了处理大部分请求以及将请求参数绑定到域对象的工作。web层包含了web，web-servlet，web-Struts 和web-porlet\n\n*   web模块，提供了基础的面向web的集成特性。例如：多文件上传，使用servlet listeners初始化 Ioc容器已经一个面向web的应用上下文。它还包含s"],[-1,4702,"中受益。 简单来说，S"],[1,4713,"远程支持中的web的相关部分。\n*   web-servlet模块web.servlet.jar：该模块包含spring的model-view-controller（mvc）实现。spring的mbc框架使得模型范围内的代码和webforms之间能够清楚地分离出来。并与spring框架的其他特性集成在一起。\n*   web-Struts模块，该模块提供了对struts的支持，使得类在s"],[-1,4718,"是一个轻量级的控制反转（IoC）和"],[1,4735,"应用中能够与一个典型的struts web层集成在一起。注意，该支持在spring3.0中已被弃用。\n*   web-portlet模块，提供了用于portlet环境和web-servlet模块的MVC的实现。\n\n4、AOP\n\naop模块提供了一个符合aop联盟标准的"],[-1,4739,"（AOP）的容器"],[1,4747,"编程的实现，它让你可以定义例如方法拦截器和切点，从而将逻辑代码分开，降低它们之间的耦合性。利用source-level的元数据功能，还可以将各种行为信息合并到你的代码中，这有点像.Net技术中的attribute概念\n\n通过配置管理特性，springAop模块直接将面向界面的编程功能集成到了spring框架中，所以可以很容易地使用spring"],[1,4749,"管理的任何对象支持aop，springAop模块为基于spring的应用程序中的对象提供了事务管理服务。通过使用springAop，不用历来EJB组件，就可以将声明性事务管理集成到应用程序中"],[1,4752,"*   Aspects模块提供了AspectJ的集成支持。\n*   Instrumentation模块提供了class Instrumentation支持和classloader实现，使用可以再特定的应用服务器上使用。\n\n5、Test\n\ntest模块支持使用JUnit和TestNG对spring组件进行测试。\n\n* * *\n\n# 二、Spring MVC部分\n\n##"],[1,4756,"、Spring MVC的运行流程\n\n*   springMVC框架\n    ![这里写图片描述](https://img-blog"],[1,4757,"csdn.net/"],[1,4758,"0180503140150984?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NvbmdfSmlhbmdUYW8=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70)\n    **框架执行流程（面试必问）**\n    *   1"],[1,4759,"用户发送请求至前端控制器Dispatcher"],[1,4760,"ervlet\n    *   2、Dis"],[1,4761,"atche"],[1,4762,"Servlet收到请求调用HandlerMapp"],[-1,4765,"MVC"],[1,4768,"处理器映射器。\n    *   3、处理器映射器根据请求url找到具体的处理器，生成处理器对象及处理器拦截器(如果有则生成)一并返回给DispatcherServlet。\n    *   4、DispatcherServlet通过HandlerAdapter处理器适配器调用处理器\n    *   5、执行处理器(Controller，也叫后端控制器)。\n    *   6、Controller执行完成返回ModelAndView\n    *   7、HandlerAdapter将controller执行结果ModelAndView返回给DispatcherServlet\n"],[1,4770,"  *"],[1,4773,"8、DispatcherServlet将ModelAndView传给ViewReslover视图解析器"],[1,4774,"    *   9、ViewReslover解析后返回具体View"],[1,4779,"*"],[1,4782,"10、DispatcherServlet对View进行渲染视图（即**将模型数据填充至视图中**）。\n"],[1,4783,"   *   11、DispatcherServlet响应用户\n\n#### 2、"],[-1,4793,"属于"],[1,4795,"的原理\n\n*   1、什么是"],[-1,4801,"FrameWork的后续产品，已经融合在Spring Web Flow里面。Spring MVC 分离了控制器、模型对象、分派器以及处理程序对象的角色，这种分离让它们更容易进行定制。\n\n## 1.3、MyBatis\n\n       MyBatis 本是apache的一个开源项目iBatis, 2010年这个项目由apache software foundation 迁移到了google code，并且改名为MyBatis 。MyBatis是一个基于Java的持久层框架。iBATIS提供的持久层框架包括SQL Maps和Data Access Objects（DAO）MyBatis 消除了几乎所有的JDBC代码和参数的手工设置以及结果集的检索。MyBatis 使用简单的 XML或注解用于配置和原始映射，将接口和 Java 的POJOs（Plain Old Java Objects，普通的 Java对象）映射成数据库中的记录"],[1,5217,"MVC？\n\n*   **springmvc是spring框架的一个模块，springmvc和spring无需通过中间整合层进行整合。**\n\n*   springmvc是一个基于mvc的web框架。\n    ![这里写图片描述](https://img-blog.csdn.net/20180503140031318?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NvbmdfSmlhbmdUYW8=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70)\n\n*   **mvc**\n\n    *   mvc在b/s系统 下的应用：\n        ![这里写图片描述](https://img-blog.csdn.net/20180503140124314?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NvbmdfSmlhbmdUYW8=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70)\n    *   前端控制器DispatcherServlet（不需要程序员开发）\n        *   作用接收请求，响应结果，相当于转发器，中央处理器。有了DispatcherServlet减少了其它组件之间的耦合度。\n    *   处理器映射器HandlerMapping(不需要程序员开发)\n        *   作用：根据请求的url查找Handler\n    *   处理器适配器HandlerAdapter\n        *   作用：按照特定规则（HandlerAdapter要求的规则）去执行Handler\n    *   处理器Handler **(需要程序员开发)**\n        *   注意：编写Handler时按照HandlerAdapter的要求去做，这样适配器才可以去正确执行Handler\n    *   视图解析器View resolver(不需要程序员开发)\n        *   作用：进行视图解析，根据逻辑视图名解析成真正的视图（view）\n    *   视图View **(需要程序员开发)**\n        *   View是一个接口，实现类支持不同的View类型（jsp、freemarker、pdf…）\n*   **struts2与springMVC的区别？**\n\n    1、Struts2是**类级别的拦截**，一个类对应一个request 上下文, SpringMVC是**方法级别的拦截**,一个方法对应一个request上下文,而方法同时又跟一个url对应，,所以说从架构本身上SpringMVC就容易实现restful url,而struts2的架构实现起来要费劲,因为Struts2中Action的一个方法可以对应一个url ,而其类属性却被所有方法共享，这也就无法用注解或其他方式标识其所属方法了。\n\n    2、由上边原因, SpringMVC的**方法之间基本上独立的**,**独享request response数据,**请求数据通过参数获取,处理结果通过ModelMap交回给框架,方法之间不共享变量,而Struts2搞的就比较乱,虽然方法之间也是独立的,但其**所有Action变量是共享的**,这不会影响程序运行,却给我们编码读程序时带来麻烦,每次来了请求就创建一个Action ,**一个Action对象对应一个request 上下文。**\n\n    3、由于Struts2需要针对每个request进行封装,把request , session等servlet生命周期的变量**封装成一个一 个Map** **,供给每个Action使用**,并保证线程安全,所以在原则上,是**比较耗费内存的。**\n\n    4、拦截器实现机制上， Struts2有以自己的**interceptor机制,** SpringMVC用的是**独立的AOP方式**,这样导致Struts2的配置文件量还是比SpringMVC大。\n\n    5、**SpringMVC的入口是servlet ,而Struts2是filter (这里要指出, filter和servlet是不同的。以前认为filter是servlet的一种特殊)**,这就导致 了二者的机制不同,这里就牵涉到servlet和filter的区别了。\n\n    6、**SpringMVC集成了Ajax ,使用非常方便**，只需一个注解@ResponseBody就可以实现，然后直接返回响应文本即可,**而Struts2拦截器集成了Ajax ,在Action中处理时一般必须安装插件或者自己写代码集成进去**,使用起来也相对不方便。\n\n    7、**SpringMVC验证支持JSR303 ,**处理起来相对更加灵活方便,而**Struts2验证比较繁琐,感觉太烦乱。**\n\n    8、**Spring MVC和Spring是无缝的。从这个项目的管理和安全上也比Struts2高**(当然Struts2也可以通过不同的目录结构和相关配置做到SpringMVC-样的效果,但是需要xml配置的地方不少)。\n\n    9、设计思想上, **Struts2更加符合0OP的编程思想**，SpringMVC就比较谨慎,在servlet上扩展。\n\n    10、**SpringMVC开发效率和性能高于Struts2。**\n\n    11、SpringMVC可以认为已经**100%零配置。**\n\n#### 3、Spring MVC的核心技术\n\n*   注解开发（@Controller,@RequestMapping,@ResponseBody。。。。）\n    *   还有Spring的诸多注解，这两者是不需要整合的~\n*   传参，接参（request）\n*   基本配置\n*   文件上传与下载\n    *   Spring MVC中文件上传需要添加Apache Commons FileUpload相关的jar包,\n    *   基于该jar, Spring中提供了MultipartResolver实现类: CommonsMultipartResolver.\n*   拦截器\n*   **其实最核心的还是SpringMVC的执行流程，各个点的作用得搞清楚。**\n\n* * *\n\n# 三、Mybatis部分\n\n#### 1、Mybatis的运行流程\n\n*   **Mybatis运行流程图**：\n    ![这里写图片描述](https://img-blog.csdn.net/20180420191152719?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NvbmdfSmlhbmdUYW8=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70)\n\n第一步：配置文件mybatis.xml，大体如下，\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE configuration PUBLIC \"-//mybatis.org//DTD Config 3.0//EN\"\n        \"http://mybatis.org/dtd/mybatis-3-config.dtd\">\n<configuration>\n    <!-- 引入外部文件\n\t\tresource:引入项目中配置文件\n\t\turl:引入网络中或者路径文件\n\t-->\n    <properties resource=\"jdbc.properties\"/>\n    <settings>\n        <!--<setting name=\"mapUnderscoreToCamelCase\" value=\"true\" />-->\n        <setting name=\"lazyLoadingEnabled\" value=\"true\" />\n        <setting name=\"aggressiveLazyLoading\"  value=\"false\" />\n        <setting name=\"cacheEnabled\" value=\"true\"/>\n    </settings>\n    <typeAliases>\n        <package name=\"com.nuc.entity\"></package>\n    </typeAliases>\n    <!-- - - - - - - 数据库环境配置- - - - - - - - - -->\n    <environments default=\"environments\">\n        <environment id=\"environments\">\n            <transactionManager type=\"JDBC\"/>\n            <dataSource type=\"POOLED\">\n                <property name=\"driver\" value=\"${jdbc.driverClass}\"/>\n                <property name=\"url\" value=\"${jdbc.jdbcUrl}\"/>\n                <property name=\"username\" value=\"${jdbc.user}\"/>\n                <property name=\"password\" value=\"${jdbc.password}\"/>\n            </dataSource>\n        </environment>\n    </environments>\n    <!-- - - - - - - -映射文件路径- - - - - - -->\n    <mappers>\n        <!--自动扫描包下的映射文件，要求：同名，同目录-->\n        <package name=\"com.nuc.mapper\" />\n    </mappers>\n</configuration>\n\n1234567891011121314151617181920212223242526272829303132333435363738\n```\n\n第二步：加载我们的xml文件\n第三步：创建SqlSessionFactoryBuilder\n第四步：创建SqlSessionFactory\n第五步：调用openSession()，开启sqlSession\n第六步：getMapper()来获取我们的mapper（接口），mapper对应的映射文件，在加载mybatis.xml时就会加载\n第七步：使用我们自己的mapper和它对应的xml来完成我们和数据库交互。即增删改查。\n第八步：提交session，关闭session。\n\n代码如下：\n\n```java\nString resource = \"mybatis-config.xml\";\nSqlSession sqlSession = null;\nInputStream inputStream = Resources.getResourceAsStream(resource);//读取mybatis配置文件\n//SqlSessionFactoryBuilder这个类的作用就是为了创建SqlSessionFactory的\nSqlSessionFactoryBuilder builder = new SqlSessionFactoryBuilder();\nSqlSessionFactory factory = builder.build(inputStream);\n/**\n *  factory.openSession(); //需手动提交事务\n *   factory.openSession(true); //系统自动提交事务\n */\nsqlSession = factory.openSession();\nCustomerMapper mapper = sqlSession.getMapper(CustomerMapper.class);\n//增删改查的操作\nsqlSession.commit();//如果没有提交，数据库的数据不会改变\nsqlSession.close();\n\n12345678910111213141516\n```\n\n需要注意的是，sqlSession也自带一些数据交互的操作\n\n#### 2、Mybatis的原理\n\n*   **什么是Mybatis？**\n\n    *   **mybatis专注sql本身**，需要程序员自己编写sql语句，sql修改、优化比较方便。**mybatis是一个不完全 的ORM框架**，虽然程序员自己写sql，mybatis 也可以实现映射（**输入映射、输出映射**）。\n    *   mybatis是一个**持久层的框架**，是apache下的顶级项目。\n    *   mybatis托管到goolecode下，后来托管到github下:[mybatis Github地址](https://github.com/mybatis/mybatis-3/releases)\n    *   mybatis让程序将主要精力放在sql上，通过mybatis提供的映射方式，自由灵活生成（半自动化，大部分需要程序员编写sql）满足需要sql语句。\n    *   mybatis可以将向 preparedStatement中的输入参数自动进行输入映射，将查询结果集灵活映射成java对象。（输出映射）\n*   **mybatis底层实现**\n\n    *   mybatis底层还是采用**原生jdbc**来对数据库进行操作的，只是通过 SqlSessionFactory，SqlSession Executor,StatementHandler，ParameterHandler,ResultHandler和TypeHandler等几个处理器封装了这些过程\n*   **对原生态jdbc程序（单独使用jdbc开发）问题总结：**\n\n    *   1、数据库连接，使用时创建，不使用就关闭，对数据库进行频繁连接开启和关闭，造成数据库资源的浪费\n\n    解决：**使用数据库连接池管理数据库连接**\n\n    *   2、将sql 语句硬编码到Java代码中，如果sql语句修改，需要对java代码重新编译，不利于系统维护\n\n    解决：**将sql语句设置在xml配置文件中，即使sql变化，也无需重新编译**\n\n    *   3、向preparedStatement中设置参数，对占位符位置和设置参数值，硬编码到Java文件中，不利于系统维护\n\n    解决：**将sql语句及占位符，参数全部配置在xml文件中**\n\n    *   4、从resutSet中遍历结果集数据时，存在硬编码，将获取表的字段进行硬编码，不利于系统维护。\n\n    解决：**将查询的结果集，自动映射成java对象**\n\n*   **mybatis工作原理**\n\n    *   mybatis通过配置文件创建sqlsessionFactory，sqlsessionFactory根据配置文件，配置文件来源于两个方面:一个是xml，一个是Java中的注解，获取sqlSession。SQLSession包含了执行sql语句的所有方法，可以通过SQLSession直接运行映射的sql语句，完成对数据的增删改查和事物的提交工作，用完之后关闭SQLSession。\n\n#### 3、Mybatis的核心技术\n\n*   **Mybatis输入映射**\n\n    *   通过parameterType指定输入参数的类型，类型可以是简单类型、hashmap、pojo的包装类型\n*   **Mybatis输出映射**\n\n    *   **一、resultType**\n\n        *   作用:将查询结果按照sql列名pojo属性名一致性映射到pojo中。\n\n        *   **使用resultType进行输出映射，只有查询出来的列名和pojo中的属性名一致，该列才可以映射成功。**\n\n        *   如果查询出来的列名和pojo中的属性名全部不一致，则不会创建pojo对象。\n\n        *   只要查询出来的列名和pojo中的属性有一个一致，就会创建pojo对象\n\n        *   **如果查询出来的列名和pojo的属性名不一致，通过定义一个resultMap对列名和pojo属性名之间作一个映射关系。**\n\n    *   **二、resultMap**\n\n        *   使用association和collection完成**一对一和一对多**高级映射（对结果有特殊的映射要求）。\n        *   association：\n            *   作用：将关联查询信息映射到一个**pojo对象**中。\n            *   场合：为了方便查询关联信息可以使用association将关联订单信息映射为用户对象的pojo属性中，比如：查询订单及关联用户信息。\n            *   **使用resultType无法将查询结果映射到pojo对象的pojo属性中，根据对结果集查询遍历的需要选择使用resultType还是resultMap。**\n        *   collection：\n            *   作用：将关联查询信息映射到一个**list集合**中。\n            *   场合：为了方便查询遍历关联信息可以使用collection将关联信息映射到list集合中，比如：查询用户权限范围模块及模块下的菜单，可使用collection将模块映射到模块list中，将菜单列表映射到模块对象的菜单list属性中，这样的作的目的也是方便对查询结果集进行遍历查询。**如果使用resultType无法将查询结果映射到list集合中。**\n*   Mybatis的动态sql\n\n*   什么是动态sql？\n\n    *   mybatis核心 对sql语句进行灵活操作，通过表达式进行判断，对sql进行灵活拼接、组装。\n    *   包括， where ，if，foreach，choose，when，otherwise，set，trim等标签的使用\n*   **数据模型分析思路**\n\n    *   **1、每张表记录的数据内容**\n        *   分模块对每张表记录的内容进行熟悉，相当 于你学习系统 需求（功能）的过程\n    *   **2、每张表重要的字段设置**\n        *   非空字段、外键字段\n*   **3、数据库级别表与表之间的关系**\n\n    *   外键关系\n*   **4、表与表之间的业务关系**\n\n    *   在分析表与表之间的业务关系时一定要建立 在某个业务意义基础上去分析。\\color{red}{在某个业务意义基础上去分析。}在某个业务意义基础上去分析"]],[4363,5218],[20157,20157]]],[1570884194356,[null,[[-1,24,"\n*原理*"],[1,29,"框架原理\n"],[-1,41,"**"],[1,43,"作用\n\n"],[1,46," "],[1,48,"是"],[-1,49,"是"],[-1,52," "],[1,69," "],[1,70," "],[-1,71," "],[-1,73," "],[1,79," "],[-1,81," "],[1,90," "],[-1,92," "],[1,94," "],[-1,96," "],[1,129," "],[-1,131," "],[1,135," "],[-1,137," "],[-1,141,"使用"],[1,145,"使用"],[-1,157,"请求"],[1,161,"请求"],[-1,169,"\n\n"],[-1,173,"s"],[1,174,"\n"],[1,176,"sp"],[-1,188,"，m"],[1,193,"my"],[-1,212,"**"],[-1,225,"Sp"],[1,227,"\n\n"],[-1,243,"."],[1,244,"\n"],[1,380,"客户"],[1,386," "],[-1,388," "],[-1,404,"分发"],[1,412,"分发"],[-1,414,"\n\n"],[-1,437,"2"],[1,438,"\n"],[-1,442,"i "],[1,444,"由 Di"],[1,458," "],[-1,460," "],[1,464," "],[-1,466," "],[-1,479,"找到"],[1,503,"找到"],[1,508," "],[-1,510," "],[-1,519,"\n\n；3"],[1,523,"；\n"],[1,750,"Co"],[1,758," "],[-1,760," "],[1,771," "],[-1,773," "],[-1,784,"\n\n"],[-1,802,"4"],[1,803,"\n"],[1,807,"Di"],[-1,817,"clvt"],[1,821,"vlet "],[-1,823," "],[1,844," "],[-1,846," "],[-1,851,"\n5"],[1,857,"视图"],[-1,870,"!["],[-1,933,"Sp"],[1,935,"\n\n"],[1,1826,"Sp"],[-1,1852,"它可"],[1,1856,"它可"],[-1,1869,"["],[1,1871,"a"],[-1,1873,"]("],[1,1875,"中的"],[-1,1896,"），"],[1,1900,"），"],[1,1971,"- "],[-1,1973,"- "],[1,2051,"**"],[-1,2053,"**"],[-1,2114,"。在"],[1,2118,"。在"],[-1,2173,"**"],[1,2186,"\n要"],[-1,2195,"1."],[1,2199,"先写"],[-1,2254,"2."],[1,2258,"写M"],[-1,2349,"3."],[1,2353,"写M"],[-1,2365,"Ma"],[1,2369,"Ma"],[-1,2394,"。\n"],[-1,2398,"4."],[1,2400,"。\n"],[1,2402,"写S"],[1,2415,"**"],[-1,2417,"**"],[-1,2449,"。\n"],[-1,2453,"5.-"],[1,2456,"。\n- 写"],[1,2472,"**"],[-1,2474,"**"],[-1,2484,"，获"],[-1,2488,"取"],[1,2489,"，"],[1,2491,"获取"],[-1,2544,"。\n"],[-1,2548,"6.-J "],[1,2553,"。\n-  写J"],[-1,2587,"=="],[1,2591,"> "],[-1,2598,"=="],[1,2602,"> "],[-1,2613,"=="],[1,2617,"> "],[-1,2624,"["],[1,2626,"a"],[-1,2628,"]("],[1,2633,"> "],[-1,2646,"=="],[1,2650,"> "],[-1,2666,"=="],[1,2670,"> ."],[-1,2672,".p. ==S"],[1,2679,"p\n\n\n"],[-1,2686,"p"],[1,2687,"\n"],[1,2689,"Sp"],[1,2714,"2 "],[-1,2716,"2 "],[1,2726,"**"],[-1,2728,"**"],[-1,2737,"\nS"],[-1,2741,"p"],[1,2742,"\n"],[1,2744,"Sp"],[1,2759,"**"],[-1,2761,"**"],[-1,2776,"\nm"],[-1,2780,"y"],[1,2781,"\n"],[1,2783,"my"],[1,2800,"**"],[-1,2802,"**"],[-1,2807," "],[1,2809,"数"],[-1,2813," 起\n\n**；Sp"],[1,2822,"起来**；\n\n"],[1,2824,"Sp"],[-1,2840,"与 于"],[1,2843,"于 S"],[1,2852,"- "],[-1,2854,"- "],[1,2870,"："],[-1,2872,"："],[-1,2893,"my"],[1,2897,"my"],[1,2924,"- "],[-1,2926,"- "],[1,3058,"- "],[-1,3060,"- "],[-1,3084,"它允"],[1,3088,"它允"],[-1,3119,"，如"],[1,3123,"，如"],[-1,3182,"**"],[1,3184,"持久"],[-1,3198,"**"],[1,3200,"\n\n"],[-1,3428,"**"],[1,3430,"业务"],[-1,3440,"**"],[1,3442,"\n\n"],[-1,3480,"\n"],[1,3481," "],[-1,3668,"**"],[1,3670,"表现"],[-1,3693,"**"],[1,3695,"\n\n"],[-1,3742,"\n"],[1,3743," "],[-1,3901,"**ew层**"],[1,3908,"View层\n\n"],[-1,3970,"**联系**"],[1,3976,"各层联系\n\n"],[-1,4181,"\n"],[1,4182," "],[-1,4359,"==**"],[1,4363,"\n\n"],[-1,5091,"  "],[1,5093,"**"],[-1,5141,"in"],[1,5143,"pr"],[1,5262,"in"],[-1,5263,"+S"],[1,6780,"**"],[-1,6783," 1"],[1,6790,"、S"],[-1,6795," \n"],[-1,6803,"\n"],[1,6804," "],[-1,6820,"  "],[1,6822,"\n\n"],[-1,6948,"S"],[1,6949," "],[-1,7013,"p"],[1,7014," "],[1,7031,"Sp"],[-1,7038,"开源"],[1,7055,"Sp"],[-1,7059,"是于"],[1,9222,"pr"],[-1,9225,"使用"],[1,9917,"pr"],[-1,9921,"用途"],[1,10382,"pr"],[-1,10385,"中受"],[1,10581,"pr"],[-1,10584,"是一"],[1,10720,"面向"],[-1,10722,"（A"],[-1,10896,"。\n"],[1,10898,"框架"],[-1,10993,"\n##"],[1,10996,"。\n\n"],[1,11178,"##"],[-1,11182,".2"],[-1,11249,"、"],[1,11250,"."],[-1,11259,"S"],[1,11260,"2"],[-1,11431,"p"],[1,11432,"、"],[-1,11454,"r"],[1,11455,"S"],[-1,11475,"i"],[1,11476,"p"],[-1,11481,"n"],[1,11482,"r"],[1,11506,"in"],[-1,11507,"MV"],[-1,11804,"\n\n"],[1,11806,"  "],[-1,11857," "],[1,11858,"\n"],[-1,11891," "],[1,11892,"\n"],[-1,11899,"S"],[1,11900," "],[-1,11951,"p"],[1,11952," "],[1,11992,"Sp"],[-1,12000,"属于"],[1,12016,"Sp"],[-1,12020,"Fr"],[-1,20156,""],[1,20156,"。"]],[24,24],[20157,20157]]],[1570884194356,[null,[[1,24,"\n*原理*"],[-1,24,"框架原理\n"],[1,41,"**"],[-1,41,"作用\n\n"],[-1,48," "],[-1,51,"是"],[1,53,"是"],[1,55," "],[-1,71," "],[-1,73," "],[1,75," "],[1,76," "],[-1,81," "],[1,84," "],[-1,92," "],[1,95," "],[-1,96," "],[1,99," "],[-1,131," "],[1,134," "],[-1,137," "],[1,140," "],[1,143,"使用"],[-1,145,"使用"],[1,159,"请求"],[-1,161,"请求"],[1,171,"\n\n"],[1,173,"s"],[-1,173,"\n"],[-1,176,"sp"],[1,190,"，m"],[-1,193,"my"],[1,214,"**"],[1,225,"Sp"],[-1,225,"\n\n"],[1,243,"."],[-1,243,"\n"],[-1,380,"客户"],[-1,388," "],[1,391," "],[1,406,"分发"],[-1,412,"分发"],[1,416,"\n\n"],[1,437,"2"],[-1,437,"\n"],[1,442,"i "],[-1,442,"由 Di"],[-1,460," "],[1,463," "],[-1,466," "],[1,469," "],[1,481,"找到"],[-1,503,"找到"],[-1,510," "],[1,513," "],[1,521,"\n\n；3"],[-1,521,"；\n"],[-1,750,"Co"],[-1,760," "],[1,763," "],[-1,773," "],[1,776," "],[1,786,"\n\n"],[1,802,"4"],[-1,802,"\n"],[-1,807,"Di"],[1,819,"clvt"],[-1,819,"vlet "],[1,826," "],[-1,846," "],[1,849," "],[1,853,"\n5"],[-1,857,"视图"],[1,872,"!["],[1,933,"Sp"],[-1,933,"\n\n"],[-1,1826,"Sp"],[1,1854,"它可"],[-1,1856,"它可"],[1,1871,"["],[-1,1872,"a"],[1,1875,"]("],[-1,1875,"中的"],[1,1898,"），"],[-1,1900,"），"],[-1,1973,"- "],[1,1977,"- "],[-1,2053,"**"],[1,2057,"**"],[1,2116,"。在"],[-1,2118,"。在"],[1,2175,"**"],[-1,2186,"\n要"],[1,2197,"1."],[-1,2199,"先写"],[1,2256,"2."],[-1,2258,"写M"],[1,2351,"3."],[-1,2353,"写M"],[1,2367,"Ma"],[-1,2369,"Ma"],[1,2396,"。\n"],[1,2398,"4."],[-1,2398,"。\n"],[-1,2402,"写S"],[-1,2417,"**"],[1,2421,"**"],[1,2451,"。\n"],[1,2453,"5.-"],[-1,2453,"。\n- 写"],[-1,2474,"**"],[1,2478,"**"],[1,2486,"，获"],[1,2488,"取"],[-1,2488,"，"],[-1,2491,"获取"],[1,2546,"。\n"],[1,2548,"6.-J "],[-1,2548,"。\n-  写J"],[1,2589,"=="],[-1,2591,"> "],[1,2600,"=="],[-1,2602,"> "],[1,2615,"=="],[-1,2617,"> "],[1,2626,"["],[-1,2627,"a"],[1,2630,"]("],[-1,2633,"> "],[1,2648,"=="],[-1,2650,"> "],[1,2668,"=="],[-1,2670,"> ."],[1,2675,".p. ==S"],[-1,2675,"p\n\n\n"],[1,2686,"p"],[-1,2686,"\n"],[-1,2689,"Sp"],[-1,2716,"2 "],[1,2720,"2 "],[-1,2728,"**"],[1,2732,"**"],[1,2739,"\nS"],[1,2741,"p"],[-1,2741,"\n"],[-1,2744,"Sp"],[-1,2761,"**"],[1,2765,"**"],[1,2778,"\nm"],[1,2780,"y"],[-1,2780,"\n"],[-1,2783,"my"],[-1,2802,"**"],[1,2806,"**"],[1,2809," "],[-1,2810,"数"],[1,2815," 起\n\n**；Sp"],[-1,2815,"起来**；\n\n"],[-1,2824,"Sp"],[1,2842,"与 于"],[-1,2842,"于 S"],[-1,2854,"- "],[1,2858,"- "],[-1,2872,"："],[1,2875,"："],[1,2895,"my"],[-1,2897,"my"],[-1,2926,"- "],[1,2930,"- "],[-1,3060,"- "],[1,3064,"- "],[1,3086,"它允"],[-1,3088,"它允"],[1,3121,"，如"],[-1,3123,"，如"],[1,3184,"**"],[-1,3184,"持久"],[1,3200,"**"],[-1,3200,"\n\n"],[1,3430,"**"],[-1,3430,"业务"],[1,3442,"**"],[-1,3442,"\n\n"],[1,3482,"\n"],[-1,3482," "],[1,3670,"**"],[-1,3670,"表现"],[1,3695,"**"],[-1,3695,"\n\n"],[1,3744,"\n"],[-1,3744," "],[1,3903,"**ew层**"],[-1,3903,"View层\n\n"],[1,3972,"**联系**"],[-1,3972,"各层联系\n\n"],[1,4183,"\n"],[-1,4183," "],[1,4361,"==**"],[-1,4361,"\n\n"],[1,5091,"  "],[-1,5091,"**"],[1,5141,"in"],[-1,5141,"pr"],[-1,5262,"in"],[1,5265,"+S"],[-1,6780,"**"],[1,6785," 1"],[-1,6790,"、S"],[1,6797," \n"],[1,6803,"\n"],[-1,6803," "],[1,6820,"  "],[-1,6820,"\n\n"],[1,6948,"S"],[-1,6948," "],[1,7013,"p"],[-1,7013," "],[-1,7031,"Sp"],[1,7040,"开源"],[-1,7055,"Sp"],[1,7061,"是于"],[-1,9222,"pr"],[1,9227,"使用"],[-1,9917,"pr"],[1,9923,"用途"],[-1,10382,"pr"],[1,10387,"中受"],[-1,10581,"pr"],[1,10586,"是一"],[-1,10720,"面向"],[1,10724,"（A"],[1,10896,"。\n"],[-1,10896,"框架"],[1,10993,"\n##"],[-1,10993,"。\n\n"],[-1,11178,"##"],[1,11184,".2"],[1,11249,"、"],[-1,11249,"."],[1,11259,"S"],[-1,11259,"2"],[1,11431,"p"],[-1,11431,"、"],[1,11454,"r"],[-1,11454,"S"],[1,11475,"i"],[-1,11475,"p"],[1,11481,"n"],[-1,11481,"r"],[-1,11506,"in"],[1,11509,"MV"],[1,11804,"\n\n"],[-1,11804,"  "],[1,11857," "],[-1,11857,"\n"],[1,11891," "],[-1,11891,"\n"],[1,11899,"S"],[-1,11899," "],[1,11951,"p"],[-1,11951," "],[-1,11992,"Sp"],[1,12002,"属于"],[-1,12016,"Sp"],[1,12022,"Fr"],[1,20156,""],[-1,20156,"。"]],[20157,20157],[24,24]]],[1570884151216,["GJX@GJXAIOU",[[-1,4390,"2018-08-31 10:46:56 [EasyChill](https://me.csdn.net/Song_JiangTao) 阅读数 23260更多\n\n分类专栏： [ssm](https://blog.csdn.net/song_jiangtao/article/category/7649598) [Spring全家桶](https://blog.csdn.net/song_jiangtao/article/category/9293134)\n\n[](http://creativecommons.org/licenses/by-sa/4.0/)版权声明：本文为博主原创文章，遵循[ CC 4.0 BY-SA ](http://creativecommons.org/licenses/by-sa/4.0/)版权协议，转载请附上原文出处链接和本声明。\n\n本文链接：[https://blog.csdn.net/Song_JiangTao/article/details/82252852](https://blog.csdn.net/Song_JiangTao/article/details/82252852) \n"]],[4390,4904],[4390,4390]]],[1570884152158,["GJX@GJXAIOU",[[-1,4390,"\n"]],[4390,4390],[4389,4389]]],[1570884158263,["GJX@GJXAIOU",[[1,4391,"#"]],[4391,4391],[4403,4403]]],[1570884161569,["GJX@GJXAIOU",[[-1,4408,"#"]],[4408,4408],[4407,4407]]],[1570886433574,[null,[[-1,24,"\n*原理*"],[1,29,"框架原理\n"],[-1,41,"**"],[1,43,"作用\n\n"],[1,46," "],[1,48,"是"],[-1,49,"是"],[-1,52," "],[1,69," "],[1,70," "],[-1,71," "],[-1,73," "],[1,79," "],[-1,81," "],[1,90," "],[-1,92," "],[1,94," "],[-1,96," "],[1,129," "],[-1,131," "],[1,135," "],[-1,137," "],[-1,141,"使用"],[1,145,"使用"],[-1,157,"请求"],[1,161,"请求"],[-1,169,"\n\n"],[-1,173,"s"],[1,174,"\n"],[1,176,"sp"],[-1,188,"，m"],[1,193,"my"],[-1,212,"**"],[-1,225,"Sp"],[1,227,"\n\n"],[-1,243,"."],[1,244,"\n"],[1,380,"客户"],[1,386," "],[-1,388," "],[-1,404,"分发"],[1,412,"分发"],[-1,414,"\n\n"],[-1,437,"2"],[1,438,"\n"],[-1,442,"i "],[1,444,"由 Di"],[1,458," "],[-1,460," "],[1,464," "],[-1,466," "],[-1,479,"找到"],[1,503,"找到"],[1,508," "],[-1,510," "],[-1,519,"\n\n；3"],[1,523,"；\n"],[1,750,"Co"],[1,758," "],[-1,760," "],[1,771," "],[-1,773," "],[-1,784,"\n\n"],[-1,802,"4"],[1,803,"\n"],[1,807,"Di"],[-1,817,"clvt"],[1,821,"vlet "],[-1,823," "],[1,844," "],[-1,846," "],[-1,851,"\n5"],[1,857,"视图"],[-1,870,"!["],[-1,933,"Sp"],[1,935,"\n\n"],[1,1826,"Sp"],[-1,1852,"它可"],[1,1856,"它可"],[-1,1869,"["],[1,1871,"a"],[-1,1873,"]("],[1,1875,"中的"],[-1,1896,"），"],[1,1900,"），"],[1,1971,"- "],[-1,1973,"- "],[1,2051,"**"],[-1,2053,"**"],[-1,2114,"。在"],[1,2118,"。在"],[-1,2173,"**"],[1,2186,"\n要"],[-1,2195,"1."],[1,2199,"先写"],[-1,2254,"2."],[1,2258,"写M"],[-1,2349,"3."],[1,2353,"写M"],[-1,2365,"Ma"],[1,2369,"Ma"],[-1,2394,"。\n"],[-1,2398,"4."],[1,2400,"。\n"],[1,2402,"写S"],[1,2415,"**"],[-1,2417,"**"],[-1,2449,"。\n"],[-1,2453,"5.-"],[1,2456,"。\n- 写"],[1,2472,"**"],[-1,2474,"**"],[-1,2484,"，获"],[-1,2488,"取"],[1,2489,"，"],[1,2491,"获取"],[-1,2544,"。\n"],[-1,2548,"6.-J "],[1,2553,"。\n-  写J"],[-1,2587,"=="],[1,2591,"> "],[-1,2598,"=="],[1,2602,"> "],[-1,2613,"=="],[1,2617,"> "],[-1,2624,"["],[1,2626,"a"],[-1,2628,"]("],[1,2633,"> "],[-1,2646,"=="],[1,2650,"> "],[-1,2666,"=="],[1,2670,"> ."],[-1,2672,".p. ==S"],[1,2679,"p\n\n\n"],[-1,2686,"p"],[1,2687,"\n"],[1,2689,"Sp"],[1,2714,"2 "],[-1,2716,"2 "],[1,2726,"**"],[-1,2728,"**"],[-1,2737,"\nS"],[-1,2741,"p"],[1,2742,"\n"],[1,2744,"Sp"],[1,2759,"**"],[-1,2761,"**"],[-1,2776,"\nm"],[-1,2780,"y"],[1,2781,"\n"],[1,2783,"my"],[1,2800,"**"],[-1,2802,"**"],[-1,2807," "],[1,2809,"数"],[-1,2813," 起\n\n**；Sp"],[1,2822,"起来**；\n\n"],[1,2824,"Sp"],[-1,2840,"与 于"],[1,2843,"于 S"],[1,2852,"- "],[-1,2854,"- "],[1,2870,"："],[-1,2872,"："],[-1,2893,"my"],[1,2897,"my"],[1,2924,"- "],[-1,2926,"- "],[1,3058,"- "],[-1,3060,"- "],[-1,3084,"它允"],[1,3088,"它允"],[-1,3119,"，如"],[1,3123,"，如"],[-1,3182,"**"],[1,3184,"持久"],[-1,3198,"**"],[1,3200,"\n\n"],[-1,3428,"**"],[1,3430,"业务"],[-1,3440,"**"],[1,3442,"\n\n"],[-1,3480,"\n"],[1,3481," "],[-1,3668,"**"],[1,3670,"表现"],[-1,3693,"**"],[1,3695,"\n\n"],[-1,3742,"\n"],[1,3743," "],[-1,3901,"**ew层**"],[1,3908,"View层\n\n"],[-1,3970,"**联系**"],[1,3976,"各层联系\n\n"],[-1,4181,"\n"],[1,4182," "],[-1,4359,"==**"],[1,4363,"\n\n"],[-1,4576,"  "],[1,4578,"**"],[-1,4626,"in"],[1,4628,"pr"],[1,4747,"in"],[-1,4748,"+S"],[1,6265,"**"],[-1,6268," 1"],[1,6275,"、S"],[-1,6280," \n"],[-1,6288,"\n"],[1,6289," "],[-1,6305,"  "],[1,6307,"\n\n"],[-1,6433,"S"],[1,6434," "],[-1,6498,"p"],[1,6499," "],[1,6516,"Sp"],[-1,6523,"开源"],[1,6540,"Sp"],[-1,6544,"是于"],[1,8707,"pr"],[-1,8710,"使用"],[1,9402,"pr"],[-1,9406,"用途"],[1,9867,"pr"],[-1,9870,"中受"],[1,10066,"pr"],[-1,10069,"是一"],[1,10205,"面向"],[-1,10207,"（A"],[-1,10381,"。\n"],[1,10383,"框架"],[-1,10478,"\n##"],[1,10481,"。\n\n"],[1,10663,"##"],[-1,10667,".2"],[-1,10734,"、"],[1,10735,"."],[-1,10744,"S"],[1,10745,"2"],[-1,10916,"p"],[1,10917,"、"],[-1,10939,"r"],[1,10940,"S"],[-1,10960,"i"],[1,10961,"p"],[-1,10966,"n"],[1,10967,"r"],[1,10991,"in"],[-1,10992,"MV"],[-1,11289,"\n\n"],[1,11291,"  "],[-1,11342," "],[1,11343,"\n"],[-1,11376," "],[1,11377,"\n"],[-1,11384,"S"],[1,11385," "],[-1,11436,"p"],[1,11437," "],[1,11477,"Sp"],[-1,11485,"属于"],[1,11501,"Sp"],[-1,11505,"Fr"],[-1,19641,""],[1,19641,"。"]],[24,24],[19642,19642]]],[1570886433574,[null,[[1,24,"\n*原理*"],[-1,24,"框架原理\n"],[1,41,"**"],[-1,41,"作用\n\n"],[-1,48," "],[-1,51,"是"],[1,53,"是"],[1,55," "],[-1,71," "],[-1,73," "],[1,75," "],[1,76," "],[-1,81," "],[1,84," "],[-1,92," "],[1,95," "],[-1,96," "],[1,99," "],[-1,131," "],[1,134," "],[-1,137," "],[1,140," "],[1,143,"使用"],[-1,145,"使用"],[1,159,"请求"],[-1,161,"请求"],[1,171,"\n\n"],[1,173,"s"],[-1,173,"\n"],[-1,176,"sp"],[1,190,"，m"],[-1,193,"my"],[1,214,"**"],[1,225,"Sp"],[-1,225,"\n\n"],[1,243,"."],[-1,243,"\n"],[-1,380,"客户"],[-1,388," "],[1,391," "],[1,406,"分发"],[-1,412,"分发"],[1,416,"\n\n"],[1,437,"2"],[-1,437,"\n"],[1,442,"i "],[-1,442,"由 Di"],[-1,460," "],[1,463," "],[-1,466," "],[1,469," "],[1,481,"找到"],[-1,503,"找到"],[-1,510," "],[1,513," "],[1,521,"\n\n；3"],[-1,521,"；\n"],[-1,750,"Co"],[-1,760," "],[1,763," "],[-1,773," "],[1,776," "],[1,786,"\n\n"],[1,802,"4"],[-1,802,"\n"],[-1,807,"Di"],[1,819,"clvt"],[-1,819,"vlet "],[1,826," "],[-1,846," "],[1,849," "],[1,853,"\n5"],[-1,857,"视图"],[1,872,"!["],[1,933,"Sp"],[-1,933,"\n\n"],[-1,1826,"Sp"],[1,1854,"它可"],[-1,1856,"它可"],[1,1871,"["],[-1,1872,"a"],[1,1875,"]("],[-1,1875,"中的"],[1,1898,"），"],[-1,1900,"），"],[-1,1973,"- "],[1,1977,"- "],[-1,2053,"**"],[1,2057,"**"],[1,2116,"。在"],[-1,2118,"。在"],[1,2175,"**"],[-1,2186,"\n要"],[1,2197,"1."],[-1,2199,"先写"],[1,2256,"2."],[-1,2258,"写M"],[1,2351,"3."],[-1,2353,"写M"],[1,2367,"Ma"],[-1,2369,"Ma"],[1,2396,"。\n"],[1,2398,"4."],[-1,2398,"。\n"],[-1,2402,"写S"],[-1,2417,"**"],[1,2421,"**"],[1,2451,"。\n"],[1,2453,"5.-"],[-1,2453,"。\n- 写"],[-1,2474,"**"],[1,2478,"**"],[1,2486,"，获"],[1,2488,"取"],[-1,2488,"，"],[-1,2491,"获取"],[1,2546,"。\n"],[1,2548,"6.-J "],[-1,2548,"。\n-  写J"],[1,2589,"=="],[-1,2591,"> "],[1,2600,"=="],[-1,2602,"> "],[1,2615,"=="],[-1,2617,"> "],[1,2626,"["],[-1,2627,"a"],[1,2630,"]("],[-1,2633,"> "],[1,2648,"=="],[-1,2650,"> "],[1,2668,"=="],[-1,2670,"> ."],[1,2675,".p. ==S"],[-1,2675,"p\n\n\n"],[1,2686,"p"],[-1,2686,"\n"],[-1,2689,"Sp"],[-1,2716,"2 "],[1,2720,"2 "],[-1,2728,"**"],[1,2732,"**"],[1,2739,"\nS"],[1,2741,"p"],[-1,2741,"\n"],[-1,2744,"Sp"],[-1,2761,"**"],[1,2765,"**"],[1,2778,"\nm"],[1,2780,"y"],[-1,2780,"\n"],[-1,2783,"my"],[-1,2802,"**"],[1,2806,"**"],[1,2809," "],[-1,2810,"数"],[1,2815," 起\n\n**；Sp"],[-1,2815,"起来**；\n\n"],[-1,2824,"Sp"],[1,2842,"与 于"],[-1,2842,"于 S"],[-1,2854,"- "],[1,2858,"- "],[-1,2872,"："],[1,2875,"："],[1,2895,"my"],[-1,2897,"my"],[-1,2926,"- "],[1,2930,"- "],[-1,3060,"- "],[1,3064,"- "],[1,3086,"它允"],[-1,3088,"它允"],[1,3121,"，如"],[-1,3123,"，如"],[1,3184,"**"],[-1,3184,"持久"],[1,3200,"**"],[-1,3200,"\n\n"],[1,3430,"**"],[-1,3430,"业务"],[1,3442,"**"],[-1,3442,"\n\n"],[1,3482,"\n"],[-1,3482," "],[1,3670,"**"],[-1,3670,"表现"],[1,3695,"**"],[-1,3695,"\n\n"],[1,3744,"\n"],[-1,3744," "],[1,3903,"**ew层**"],[-1,3903,"View层\n\n"],[1,3972,"**联系**"],[-1,3972,"各层联系\n\n"],[1,4183,"\n"],[-1,4183," "],[1,4361,"==**"],[-1,4361,"\n\n"],[1,4576,"  "],[-1,4576,"**"],[1,4626,"in"],[-1,4626,"pr"],[-1,4747,"in"],[1,4750,"+S"],[-1,6265,"**"],[1,6270," 1"],[-1,6275,"、S"],[1,6282," \n"],[1,6288,"\n"],[-1,6288," "],[1,6305,"  "],[-1,6305,"\n\n"],[1,6433,"S"],[-1,6433," "],[1,6498,"p"],[-1,6498," "],[-1,6516,"Sp"],[1,6525,"开源"],[-1,6540,"Sp"],[1,6546,"是于"],[-1,8707,"pr"],[1,8712,"使用"],[-1,9402,"pr"],[1,9408,"用途"],[-1,9867,"pr"],[1,9872,"中受"],[-1,10066,"pr"],[1,10071,"是一"],[-1,10205,"面向"],[1,10209,"（A"],[1,10381,"。\n"],[-1,10381,"框架"],[1,10478,"\n##"],[-1,10478,"。\n\n"],[-1,10663,"##"],[1,10669,".2"],[1,10734,"、"],[-1,10734,"."],[1,10744,"S"],[-1,10744,"2"],[1,10916,"p"],[-1,10916,"、"],[1,10939,"r"],[-1,10939,"S"],[1,10960,"i"],[-1,10960,"p"],[1,10966,"n"],[-1,10966,"r"],[-1,10991,"in"],[1,10994,"MV"],[1,11289,"\n\n"],[-1,11289,"  "],[1,11342," "],[-1,11342,"\n"],[1,11376," "],[-1,11376,"\n"],[1,11384,"S"],[-1,11384," "],[1,11436,"p"],[-1,11436," "],[-1,11477,"Sp"],[1,11487,"属于"],[-1,11501,"Sp"],[1,11507,"Fr"],[1,19641,""],[-1,19641,"。"]],[19642,19642],[24,24]]],[1570886390166,["GJX@GJXAIOU",[[-1,4434,""],[1,4434,"s"],[-1,6780," "],[1,6781," "],[-1,6869," "],[1,6870," "],[-1,7044," "],[1,7045," "],[-1,7512," "],[1,7513," "],[-1,7921," "],[1,7922," "],[-1,12298," "],[1,12299," "],[-1,12476," "],[1,12477," "],[-1,13115," "],[1,13116," "],[-1,13210," "],[1,13211," "],[-1,13750," "],[1,13751," "],[-1,19586," "],[1,19587," "]],[4434,4434],[4435,4435]]],[1570886390438,["GJX@GJXAIOU",[[1,4435,"p "]],[4435,4435],[4436,4436]]],[1570886391100,["GJX@GJXAIOU",[[1,4436,"ring"]],[4436,4436],[4440,4440]]],[1570886401008,["GJX@GJXAIOU",[[-1,5596,"//看完反正我是默默放弃了。。。"]],[5596,5612],[5596,5596]]],[1570886403743,["GJX@GJXAIOU",[[-1,5600,"12345678910111213141516171819202122232425"]],[5600,5641],[5600,5600]]],[1570886404586,["GJX@GJXAIOU",[[-1,5600,"\n"]],[5600,5600],[5599,5599]]],[1570886405552,["GJX@GJXAIOU",[[-1,5596,"\n"]],[5596,5596],[5595,5595]]],[1570886553576,[null,[[-1,24,"\n*原理*"],[1,29,"框架原理\n"],[-1,41,"**"],[1,43,"作用\n\n"],[1,46," "],[1,48,"是"],[-1,49,"是"],[-1,52," "],[1,69," "],[1,70," "],[-1,71," "],[-1,73," "],[1,79," "],[-1,81," "],[1,90," "],[-1,92," "],[1,94," "],[-1,96," "],[1,129," "],[-1,131," "],[1,135," "],[-1,137," "],[-1,141,"使用"],[1,145,"使用"],[-1,157,"请求"],[1,161,"请求"],[-1,169,"\n\n"],[-1,173,"s"],[1,174,"\n"],[1,176,"sp"],[-1,188,"，m"],[1,193,"my"],[-1,212,"**"],[-1,225,"Sp"],[1,227,"\n\n"],[-1,243,"."],[1,244,"\n"],[1,380,"客户"],[1,386," "],[-1,388," "],[-1,404,"分发"],[1,412,"分发"],[-1,414,"\n\n"],[-1,437,"2"],[1,438,"\n"],[-1,442,"i "],[1,444,"由 Di"],[1,458," "],[-1,460," "],[1,464," "],[-1,466," "],[-1,479,"找到"],[1,503,"找到"],[1,508," "],[-1,510," "],[-1,519,"\n\n；3"],[1,523,"；\n"],[1,750,"Co"],[1,758," "],[-1,760," "],[1,771," "],[-1,773," "],[-1,784,"\n\n"],[-1,802,"4"],[1,803,"\n"],[1,807,"Di"],[-1,817,"clvt"],[1,821,"vlet "],[-1,823," "],[1,844," "],[-1,846," "],[-1,851,"\n5"],[1,857,"视图"],[-1,870,"!["],[-1,933,"Sp"],[1,935,"\n\n"],[1,1826,"Sp"],[-1,1852,"它可"],[1,1856,"它可"],[-1,1869,"["],[1,1871,"a"],[-1,1873,"]("],[1,1875,"中的"],[-1,1896,"），"],[1,1900,"），"],[1,1971,"- "],[-1,1973,"- "],[1,2051,"**"],[-1,2053,"**"],[-1,2114,"。在"],[1,2118,"。在"],[-1,2173,"**"],[1,2186,"\n要"],[-1,2195,"1."],[1,2199,"先写"],[-1,2254,"2."],[1,2258,"写M"],[-1,2349,"3."],[1,2353,"写M"],[-1,2365,"Ma"],[1,2369,"Ma"],[-1,2394,"。\n"],[-1,2398,"4."],[1,2400,"。\n"],[1,2402,"写S"],[1,2415,"**"],[-1,2417,"**"],[-1,2449,"。\n"],[-1,2453,"5.-"],[1,2456,"。\n- 写"],[1,2472,"**"],[-1,2474,"**"],[-1,2484,"，获"],[-1,2488,"取"],[1,2489,"，"],[1,2491,"获取"],[-1,2544,"。\n"],[-1,2548,"6.-J "],[1,2553,"。\n-  写J"],[-1,2587,"=="],[1,2591,"> "],[-1,2598,"=="],[1,2602,"> "],[-1,2613,"=="],[1,2617,"> "],[-1,2624,"["],[1,2626,"a"],[-1,2628,"]("],[1,2633,"> "],[-1,2646,"=="],[1,2650,"> "],[-1,2666,"=="],[1,2670,"> ."],[-1,2672,".p. ==S"],[1,2679,"p\n\n\n"],[-1,2686,"p"],[1,2687,"\n"],[1,2689,"Sp"],[1,2714,"2 "],[-1,2716,"2 "],[1,2726,"**"],[-1,2728,"**"],[-1,2737,"\nS"],[-1,2741,"p"],[1,2742,"\n"],[1,2744,"Sp"],[1,2759,"**"],[-1,2761,"**"],[-1,2776,"\nm"],[-1,2780,"y"],[1,2781,"\n"],[1,2783,"my"],[1,2800,"**"],[-1,2802,"**"],[-1,2807," "],[1,2809,"数"],[-1,2813," 起\n\n**；Sp"],[1,2822,"起来**；\n\n"],[1,2824,"Sp"],[-1,2840,"与 于"],[1,2843,"于 S"],[1,2852,"- "],[-1,2854,"- "],[1,2870,"："],[-1,2872,"："],[-1,2893,"my"],[1,2897,"my"],[1,2924,"- "],[-1,2926,"- "],[1,3058,"- "],[-1,3060,"- "],[-1,3084,"它允"],[1,3088,"它允"],[-1,3119,"，如"],[1,3123,"，如"],[-1,3182,"**"],[1,3184,"持久"],[-1,3198,"**"],[1,3200,"\n\n"],[-1,3428,"**"],[1,3430,"业务"],[-1,3440,"**"],[1,3442,"\n\n"],[-1,3480,"\n"],[1,3481," "],[-1,3668,"**"],[1,3670,"表现"],[-1,3693,"**"],[1,3695,"\n\n"],[-1,3742,"\n"],[1,3743," "],[-1,3901,"**ew层**"],[1,3908,"View层\n\n"],[-1,3970,"**联系**"],[1,3976,"各层联系\n\n"],[-1,4181,"\n"],[1,4182," "],[-1,4359,"==**"],[1,4363,"\n\n"],[-1,4583,"  "],[1,4585,"**"],[-1,4633,"in"],[1,4635,"pr"],[1,4754,"in"],[-1,4755,"+S"],[1,6213,"**"],[-1,6216," 1"],[1,6223,"、S"],[-1,6228," \n"],[-1,6236,"\n"],[1,6237," "],[-1,6253,"  "],[1,6255,"\n\n"],[-1,6381,"S"],[1,6382," "],[-1,6446,"p"],[1,6447," "],[1,6464,"Sp"],[-1,6471,"开源"],[1,6488,"Sp"],[-1,6492,"是于"],[1,8655,"pr"],[-1,8658,"使用"],[1,9350,"pr"],[-1,9354,"用途"],[1,9815,"pr"],[-1,9818,"中受"],[1,10014,"pr"],[-1,10017,"是一"],[1,10153,"面向"],[-1,10155,"（A"],[-1,10329,"。\n"],[1,10331,"框架"],[-1,10426,"\n##"],[1,10429,"。\n\n"],[1,10611,"##"],[-1,10615,".2"],[-1,10682,"、"],[1,10683,"."],[-1,10692,"S"],[1,10693,"2"],[-1,10864,"p"],[1,10865,"、"],[-1,10887,"r"],[1,10888,"S"],[-1,10908,"i"],[1,10909,"p"],[-1,10914,"n"],[1,10915,"r"],[1,10939,"in"],[-1,10940,"MV"],[-1,11237,"\n\n"],[1,11239,"  "],[-1,11290," "],[1,11291,"\n"],[-1,11324," "],[1,11325,"\n"],[-1,11332,"S"],[1,11333," "],[-1,11384,"p"],[1,11385," "],[1,11425,"Sp"],[-1,11433,"属于"],[1,11449,"Sp"],[-1,11453,"Fr"],[-1,19589,""],[1,19589,"。"]],[24,24],[19590,19590]]],[1570886553576,[null,[[1,24,"\n*原理*"],[-1,24,"框架原理\n"],[1,41,"**"],[-1,41,"作用\n\n"],[-1,48," "],[-1,51,"是"],[1,53,"是"],[1,55," "],[-1,71," "],[-1,73," "],[1,75," "],[1,76," "],[-1,81," "],[1,84," "],[-1,92," "],[1,95," "],[-1,96," "],[1,99," "],[-1,131," "],[1,134," "],[-1,137," "],[1,140," "],[1,143,"使用"],[-1,145,"使用"],[1,159,"请求"],[-1,161,"请求"],[1,171,"\n\n"],[1,173,"s"],[-1,173,"\n"],[-1,176,"sp"],[1,190,"，m"],[-1,193,"my"],[1,214,"**"],[1,225,"Sp"],[-1,225,"\n\n"],[1,243,"."],[-1,243,"\n"],[-1,380,"客户"],[-1,388," "],[1,391," "],[1,406,"分发"],[-1,412,"分发"],[1,416,"\n\n"],[1,437,"2"],[-1,437,"\n"],[1,442,"i "],[-1,442,"由 Di"],[-1,460," "],[1,463," "],[-1,466," "],[1,469," "],[1,481,"找到"],[-1,503,"找到"],[-1,510," "],[1,513," "],[1,521,"\n\n；3"],[-1,521,"；\n"],[-1,750,"Co"],[-1,760," "],[1,763," "],[-1,773," "],[1,776," "],[1,786,"\n\n"],[1,802,"4"],[-1,802,"\n"],[-1,807,"Di"],[1,819,"clvt"],[-1,819,"vlet "],[1,826," "],[-1,846," "],[1,849," "],[1,853,"\n5"],[-1,857,"视图"],[1,872,"!["],[1,933,"Sp"],[-1,933,"\n\n"],[-1,1826,"Sp"],[1,1854,"它可"],[-1,1856,"它可"],[1,1871,"["],[-1,1872,"a"],[1,1875,"]("],[-1,1875,"中的"],[1,1898,"），"],[-1,1900,"），"],[-1,1973,"- "],[1,1977,"- "],[-1,2053,"**"],[1,2057,"**"],[1,2116,"。在"],[-1,2118,"。在"],[1,2175,"**"],[-1,2186,"\n要"],[1,2197,"1."],[-1,2199,"先写"],[1,2256,"2."],[-1,2258,"写M"],[1,2351,"3."],[-1,2353,"写M"],[1,2367,"Ma"],[-1,2369,"Ma"],[1,2396,"。\n"],[1,2398,"4."],[-1,2398,"。\n"],[-1,2402,"写S"],[-1,2417,"**"],[1,2421,"**"],[1,2451,"。\n"],[1,2453,"5.-"],[-1,2453,"。\n- 写"],[-1,2474,"**"],[1,2478,"**"],[1,2486,"，获"],[1,2488,"取"],[-1,2488,"，"],[-1,2491,"获取"],[1,2546,"。\n"],[1,2548,"6.-J "],[-1,2548,"。\n-  写J"],[1,2589,"=="],[-1,2591,"> "],[1,2600,"=="],[-1,2602,"> "],[1,2615,"=="],[-1,2617,"> "],[1,2626,"["],[-1,2627,"a"],[1,2630,"]("],[-1,2633,"> "],[1,2648,"=="],[-1,2650,"> "],[1,2668,"=="],[-1,2670,"> ."],[1,2675,".p. ==S"],[-1,2675,"p\n\n\n"],[1,2686,"p"],[-1,2686,"\n"],[-1,2689,"Sp"],[-1,2716,"2 "],[1,2720,"2 "],[-1,2728,"**"],[1,2732,"**"],[1,2739,"\nS"],[1,2741,"p"],[-1,2741,"\n"],[-1,2744,"Sp"],[-1,2761,"**"],[1,2765,"**"],[1,2778,"\nm"],[1,2780,"y"],[-1,2780,"\n"],[-1,2783,"my"],[-1,2802,"**"],[1,2806,"**"],[1,2809," "],[-1,2810,"数"],[1,2815," 起\n\n**；Sp"],[-1,2815,"起来**；\n\n"],[-1,2824,"Sp"],[1,2842,"与 于"],[-1,2842,"于 S"],[-1,2854,"- "],[1,2858,"- "],[-1,2872,"："],[1,2875,"："],[1,2895,"my"],[-1,2897,"my"],[-1,2926,"- "],[1,2930,"- "],[-1,3060,"- "],[1,3064,"- "],[1,3086,"它允"],[-1,3088,"它允"],[1,3121,"，如"],[-1,3123,"，如"],[1,3184,"**"],[-1,3184,"持久"],[1,3200,"**"],[-1,3200,"\n\n"],[1,3430,"**"],[-1,3430,"业务"],[1,3442,"**"],[-1,3442,"\n\n"],[1,3482,"\n"],[-1,3482," "],[1,3670,"**"],[-1,3670,"表现"],[1,3695,"**"],[-1,3695,"\n\n"],[1,3744,"\n"],[-1,3744," "],[1,3903,"**ew层**"],[-1,3903,"View层\n\n"],[1,3972,"**联系**"],[-1,3972,"各层联系\n\n"],[1,4183,"\n"],[-1,4183," "],[1,4361,"==**"],[-1,4361,"\n\n"],[1,4583,"  "],[-1,4583,"**"],[1,4633,"in"],[-1,4633,"pr"],[-1,4754,"in"],[1,4757,"+S"],[-1,6213,"**"],[1,6218," 1"],[-1,6223,"、S"],[1,6230," \n"],[1,6236,"\n"],[-1,6236," "],[1,6253,"  "],[-1,6253,"\n\n"],[1,6381,"S"],[-1,6381," "],[1,6446,"p"],[-1,6446," "],[-1,6464,"Sp"],[1,6473,"开源"],[-1,6488,"Sp"],[1,6494,"是于"],[-1,8655,"pr"],[1,8660,"使用"],[-1,9350,"pr"],[1,9356,"用途"],[-1,9815,"pr"],[1,9820,"中受"],[-1,10014,"pr"],[1,10019,"是一"],[-1,10153,"面向"],[1,10157,"（A"],[1,10329,"。\n"],[-1,10329,"框架"],[1,10426,"\n##"],[-1,10426,"。\n\n"],[-1,10611,"##"],[1,10617,".2"],[1,10682,"、"],[-1,10682,"."],[1,10692,"S"],[-1,10692,"2"],[1,10864,"p"],[-1,10864,"、"],[1,10887,"r"],[-1,10887,"S"],[1,10908,"i"],[-1,10908,"p"],[1,10914,"n"],[-1,10914,"r"],[-1,10939,"in"],[1,10942,"MV"],[1,11237,"\n\n"],[-1,11237,"  "],[1,11290," "],[-1,11290,"\n"],[1,11324," "],[-1,11324,"\n"],[1,11332,"S"],[-1,11332," "],[1,11384,"p"],[-1,11384," "],[-1,11425,"Sp"],[1,11435,"属于"],[-1,11449,"Sp"],[1,11455,"Fr"],[1,19589,""],[-1,19589,"。"]],[19590,19590],[24,24]]],[1570886501152,["GJX@GJXAIOU",[[-1,4409,"1、"]],[4411,4411],[4409,4409]]],[1570886502407,["GJX@GJXAIOU",[[1,4409,"（）"]],[4409,4409],[4411,4411]]],[1570886503843,["GJX@GJXAIOU",[[1,4410,"一"]],[4410,4410],[4411,4411]]],[1570886509257,["GJX@GJXAIOU",[[-1,6221,"#"]],[6221,6222],[6221,6221]]],[1570886511791,["GJX@GJXAIOU",[[-1,6222,"2、"]],[6224,6224],[6222,6222]]],[1570886512975,["GJX@GJXAIOU",[[1,6222,"（）"]],[6222,6222],[6224,6224]]],[1570886514278,["GJX@GJXAIOU",[[1,6223,"二"]],[6223,6223],[6224,6224]]],[1570886613574,[null,[[-1,24,"\n*原理*"],[1,29,"框架原理\n"],[-1,41,"**"],[1,43,"作用\n\n"],[1,46," "],[1,48,"是"],[-1,49,"是"],[-1,52," "],[1,69," "],[1,70," "],[-1,71," "],[-1,73," "],[1,79," "],[-1,81," "],[1,90," "],[-1,92," "],[1,94," "],[-1,96," "],[1,129," "],[-1,131," "],[1,135," "],[-1,137," "],[-1,141,"使用"],[1,145,"使用"],[-1,157,"请求"],[1,161,"请求"],[-1,169,"\n\n"],[-1,173,"s"],[1,174,"\n"],[1,176,"sp"],[-1,188,"，m"],[1,193,"my"],[-1,212,"**"],[-1,225,"Sp"],[1,227,"\n\n"],[-1,243,"."],[1,244,"\n"],[1,380,"客户"],[1,386," "],[-1,388," "],[-1,404,"分发"],[1,412,"分发"],[-1,414,"\n\n"],[-1,437,"2"],[1,438,"\n"],[-1,442,"i "],[1,444,"由 Di"],[1,458," "],[-1,460," "],[1,464," "],[-1,466," "],[-1,479,"找到"],[1,503,"找到"],[1,508," "],[-1,510," "],[-1,519,"\n\n；3"],[1,523,"；\n"],[1,750,"Co"],[1,758," "],[-1,760," "],[1,771," "],[-1,773," "],[-1,784,"\n\n"],[-1,802,"4"],[1,803,"\n"],[1,807,"Di"],[-1,817,"clvt"],[1,821,"vlet "],[-1,823," "],[1,844," "],[-1,846," "],[-1,851,"\n5"],[1,857,"视图"],[-1,870,"!["],[-1,933,"Sp"],[1,935,"\n\n"],[1,1826,"Sp"],[-1,1852,"它可"],[1,1856,"它可"],[-1,1869,"["],[1,1871,"a"],[-1,1873,"]("],[1,1875,"中的"],[-1,1896,"），"],[1,1900,"），"],[1,1971,"- "],[-1,1973,"- "],[1,2051,"**"],[-1,2053,"**"],[-1,2114,"。在"],[1,2118,"。在"],[-1,2173,"**"],[1,2186,"\n要"],[-1,2195,"1."],[1,2199,"先写"],[-1,2254,"2."],[1,2258,"写M"],[-1,2349,"3."],[1,2353,"写M"],[-1,2365,"Ma"],[1,2369,"Ma"],[-1,2394,"。\n"],[-1,2398,"4."],[1,2400,"。\n"],[1,2402,"写S"],[1,2415,"**"],[-1,2417,"**"],[-1,2449,"。\n"],[-1,2453,"5.-"],[1,2456,"。\n- 写"],[1,2472,"**"],[-1,2474,"**"],[-1,2484,"，获"],[-1,2488,"取"],[1,2489,"，"],[1,2491,"获取"],[-1,2544,"。\n"],[-1,2548,"6.-J "],[1,2553,"。\n-  写J"],[-1,2587,"=="],[1,2591,"> "],[-1,2598,"=="],[1,2602,"> "],[-1,2613,"=="],[1,2617,"> "],[-1,2624,"["],[1,2626,"a"],[-1,2628,"]("],[1,2633,"> "],[-1,2646,"=="],[1,2650,"> "],[-1,2666,"=="],[1,2670,"> ."],[-1,2672,".p. ==S"],[1,2679,"p\n\n\n"],[-1,2686,"p"],[1,2687,"\n"],[1,2689,"Sp"],[1,2714,"2 "],[-1,2716,"2 "],[1,2726,"**"],[-1,2728,"**"],[-1,2737,"\nS"],[-1,2741,"p"],[1,2742,"\n"],[1,2744,"Sp"],[1,2759,"**"],[-1,2761,"**"],[-1,2776,"\nm"],[-1,2780,"y"],[1,2781,"\n"],[1,2783,"my"],[1,2800,"**"],[-1,2802,"**"],[-1,2807," "],[1,2809,"数"],[-1,2813," 起\n\n**；Sp"],[1,2822,"起来**；\n\n"],[1,2824,"Sp"],[-1,2840,"与 于"],[1,2843,"于 S"],[1,2852,"- "],[-1,2854,"- "],[1,2870,"："],[-1,2872,"："],[-1,2893,"my"],[1,2897,"my"],[1,2924,"- "],[-1,2926,"- "],[1,3058,"- "],[-1,3060,"- "],[-1,3084,"它允"],[1,3088,"它允"],[-1,3119,"，如"],[1,3123,"，如"],[-1,3182,"**"],[1,3184,"持久"],[-1,3198,"**"],[1,3200,"\n\n"],[-1,3428,"**"],[1,3430,"业务"],[-1,3440,"**"],[1,3442,"\n\n"],[-1,3480,"\n"],[1,3481," "],[-1,3668,"**"],[1,3670,"表现"],[-1,3693,"**"],[1,3695,"\n\n"],[-1,3742,"\n"],[1,3743," "],[-1,3901,"**ew层**"],[1,3908,"View层\n\n"],[-1,3970,"**联系**"],[1,3976,"各层联系\n\n"],[-1,4181,"\n"],[1,4182," "],[-1,4359,"==**"],[1,4363,"\n\n"],[-1,4584,"  "],[1,4586,"**"],[-1,4634,"in"],[1,4636,"pr"],[1,4755,"in"],[-1,4756,"+S"],[1,6214,"**"],[-1,6217," 1"],[1,6225,"Sp"],[-1,6229," \n"],[-1,6237,"\n"],[1,6238," "],[-1,6254,"  "],[1,6256,"\n\n"],[-1,6382,"S"],[1,6383," "],[-1,6447,"p"],[1,6448," "],[1,6465,"Sp"],[-1,6472,"开源"],[1,6489,"Sp"],[-1,6493,"是于"],[1,8656,"pr"],[-1,8659,"使用"],[1,9351,"pr"],[-1,9355,"用途"],[1,9816,"pr"],[-1,9819,"中受"],[1,10015,"pr"],[-1,10018,"是一"],[1,10154,"面向"],[-1,10156,"（A"],[-1,10330,"。\n"],[1,10332,"框架"],[-1,10427,"\n##"],[1,10430,"。\n\n"],[1,10612,"##"],[-1,10616,".2"],[-1,10683,"、"],[1,10684,"."],[-1,10693,"S"],[1,10694,"2"],[-1,10865,"p"],[1,10866,"、"],[-1,10888,"r"],[1,10889,"S"],[-1,10909,"i"],[1,10910,"p"],[-1,10915,"n"],[1,10916,"r"],[1,10940,"in"],[-1,10941,"MV"],[-1,11238,"\n\n"],[1,11240,"  "],[-1,11291," "],[1,11292,"\n"],[-1,11325," "],[1,11326,"\n"],[-1,11333,"S"],[1,11334," "],[-1,11385,"p"],[1,11386," "],[1,11426,"Sp"],[-1,11434,"属于"],[1,11450,"Sp"],[-1,11454,"Fr"],[-1,19590,""],[1,19590,"。"]],[24,24],[19591,19591]]],[1570886613574,[null,[[1,24,"\n*原理*"],[-1,24,"框架原理\n"],[1,41,"**"],[-1,41,"作用\n\n"],[-1,48," "],[-1,51,"是"],[1,53,"是"],[1,55," "],[-1,71," "],[-1,73," "],[1,75," "],[1,76," "],[-1,81," "],[1,84," "],[-1,92," "],[1,95," "],[-1,96," "],[1,99," "],[-1,131," "],[1,134," "],[-1,137," "],[1,140," "],[1,143,"使用"],[-1,145,"使用"],[1,159,"请求"],[-1,161,"请求"],[1,171,"\n\n"],[1,173,"s"],[-1,173,"\n"],[-1,176,"sp"],[1,190,"，m"],[-1,193,"my"],[1,214,"**"],[1,225,"Sp"],[-1,225,"\n\n"],[1,243,"."],[-1,243,"\n"],[-1,380,"客户"],[-1,388," "],[1,391," "],[1,406,"分发"],[-1,412,"分发"],[1,416,"\n\n"],[1,437,"2"],[-1,437,"\n"],[1,442,"i "],[-1,442,"由 Di"],[-1,460," "],[1,463," "],[-1,466," "],[1,469," "],[1,481,"找到"],[-1,503,"找到"],[-1,510," "],[1,513," "],[1,521,"\n\n；3"],[-1,521,"；\n"],[-1,750,"Co"],[-1,760," "],[1,763," "],[-1,773," "],[1,776," "],[1,786,"\n\n"],[1,802,"4"],[-1,802,"\n"],[-1,807,"Di"],[1,819,"clvt"],[-1,819,"vlet "],[1,826," "],[-1,846," "],[1,849," "],[1,853,"\n5"],[-1,857,"视图"],[1,872,"!["],[1,933,"Sp"],[-1,933,"\n\n"],[-1,1826,"Sp"],[1,1854,"它可"],[-1,1856,"它可"],[1,1871,"["],[-1,1872,"a"],[1,1875,"]("],[-1,1875,"中的"],[1,1898,"），"],[-1,1900,"），"],[-1,1973,"- "],[1,1977,"- "],[-1,2053,"**"],[1,2057,"**"],[1,2116,"。在"],[-1,2118,"。在"],[1,2175,"**"],[-1,2186,"\n要"],[1,2197,"1."],[-1,2199,"先写"],[1,2256,"2."],[-1,2258,"写M"],[1,2351,"3."],[-1,2353,"写M"],[1,2367,"Ma"],[-1,2369,"Ma"],[1,2396,"。\n"],[1,2398,"4."],[-1,2398,"。\n"],[-1,2402,"写S"],[-1,2417,"**"],[1,2421,"**"],[1,2451,"。\n"],[1,2453,"5.-"],[-1,2453,"。\n- 写"],[-1,2474,"**"],[1,2478,"**"],[1,2486,"，获"],[1,2488,"取"],[-1,2488,"，"],[-1,2491,"获取"],[1,2546,"。\n"],[1,2548,"6.-J "],[-1,2548,"。\n-  写J"],[1,2589,"=="],[-1,2591,"> "],[1,2600,"=="],[-1,2602,"> "],[1,2615,"=="],[-1,2617,"> "],[1,2626,"["],[-1,2627,"a"],[1,2630,"]("],[-1,2633,"> "],[1,2648,"=="],[-1,2650,"> "],[1,2668,"=="],[-1,2670,"> ."],[1,2675,".p. ==S"],[-1,2675,"p\n\n\n"],[1,2686,"p"],[-1,2686,"\n"],[-1,2689,"Sp"],[-1,2716,"2 "],[1,2720,"2 "],[-1,2728,"**"],[1,2732,"**"],[1,2739,"\nS"],[1,2741,"p"],[-1,2741,"\n"],[-1,2744,"Sp"],[-1,2761,"**"],[1,2765,"**"],[1,2778,"\nm"],[1,2780,"y"],[-1,2780,"\n"],[-1,2783,"my"],[-1,2802,"**"],[1,2806,"**"],[1,2809," "],[-1,2810,"数"],[1,2815," 起\n\n**；Sp"],[-1,2815,"起来**；\n\n"],[-1,2824,"Sp"],[1,2842,"与 于"],[-1,2842,"于 S"],[-1,2854,"- "],[1,2858,"- "],[-1,2872,"："],[1,2875,"："],[1,2895,"my"],[-1,2897,"my"],[-1,2926,"- "],[1,2930,"- "],[-1,3060,"- "],[1,3064,"- "],[1,3086,"它允"],[-1,3088,"它允"],[1,3121,"，如"],[-1,3123,"，如"],[1,3184,"**"],[-1,3184,"持久"],[1,3200,"**"],[-1,3200,"\n\n"],[1,3430,"**"],[-1,3430,"业务"],[1,3442,"**"],[-1,3442,"\n\n"],[1,3482,"\n"],[-1,3482," "],[1,3670,"**"],[-1,3670,"表现"],[1,3695,"**"],[-1,3695,"\n\n"],[1,3744,"\n"],[-1,3744," "],[1,3903,"**ew层**"],[-1,3903,"View层\n\n"],[1,3972,"**联系**"],[-1,3972,"各层联系\n\n"],[1,4183,"\n"],[-1,4183," "],[1,4361,"==**"],[-1,4361,"\n\n"],[1,4584,"  "],[-1,4584,"**"],[1,4634,"in"],[-1,4634,"pr"],[-1,4755,"in"],[1,4758,"+S"],[-1,6214,"**"],[1,6219," 1"],[-1,6225,"Sp"],[1,6231," \n"],[1,6237,"\n"],[-1,6237," "],[1,6254,"  "],[-1,6254,"\n\n"],[1,6382,"S"],[-1,6382," "],[1,6447,"p"],[-1,6447," "],[-1,6465,"Sp"],[1,6474,"开源"],[-1,6489,"Sp"],[1,6495,"是于"],[-1,8656,"pr"],[1,8661,"使用"],[-1,9351,"pr"],[1,9357,"用途"],[-1,9816,"pr"],[1,9821,"中受"],[-1,10015,"pr"],[1,10020,"是一"],[-1,10154,"面向"],[1,10158,"（A"],[1,10330,"。\n"],[-1,10330,"框架"],[1,10427,"\n##"],[-1,10427,"。\n\n"],[-1,10612,"##"],[1,10618,".2"],[1,10683,"、"],[-1,10683,"."],[1,10693,"S"],[-1,10693,"2"],[1,10865,"p"],[-1,10865,"、"],[1,10888,"r"],[-1,10888,"S"],[1,10909,"i"],[-1,10909,"p"],[1,10915,"n"],[-1,10915,"r"],[-1,10940,"in"],[1,10943,"MV"],[1,11238,"\n\n"],[-1,11238,"  "],[1,11291," "],[-1,11291,"\n"],[1,11325," "],[-1,11325,"\n"],[1,11333,"S"],[-1,11333," "],[1,11385,"p"],[-1,11385," "],[-1,11426,"Sp"],[1,11436,"属于"],[-1,11450,"Sp"],[1,11456,"Fr"],[1,19590,""],[-1,19590,"。"]],[19591,19591],[24,24]]],[1570886606273,["GJX@GJXAIOU",[[-1,6927,"#"]],[6928,6928],[6927,6927]]],[1570886611291,["GJX@GJXAIOU",[[-1,6928,"3、"]],[6928,6930],[6928,6928]]],[1570886611900,["GJX@GJXAIOU",[[1,6928,"（）"]],[6928,6928],[6930,6930]]],[1570886673578,[null,[[-1,24,"\n*原理*"],[1,29,"框架原理\n"],[-1,41,"**"],[1,43,"作用\n\n"],[1,46," "],[1,48,"是"],[-1,49,"是"],[-1,52," "],[1,69," "],[1,70," "],[-1,71," "],[-1,73," "],[1,79," "],[-1,81," "],[1,90," "],[-1,92," "],[1,94," "],[-1,96," "],[1,129," "],[-1,131," "],[1,135," "],[-1,137," "],[-1,141,"使用"],[1,145,"使用"],[-1,157,"请求"],[1,161,"请求"],[-1,169,"\n\n"],[-1,173,"s"],[1,174,"\n"],[1,176,"sp"],[-1,188,"，m"],[1,193,"my"],[-1,212,"**"],[-1,225,"Sp"],[1,227,"\n\n"],[-1,243,"."],[1,244,"\n"],[1,380,"客户"],[1,386," "],[-1,388," "],[-1,404,"分发"],[1,412,"分发"],[-1,414,"\n\n"],[-1,437,"2"],[1,438,"\n"],[-1,442,"i "],[1,444,"由 Di"],[1,458," "],[-1,460," "],[1,464," "],[-1,466," "],[-1,479,"找到"],[1,503,"找到"],[1,508," "],[-1,510," "],[-1,519,"\n\n；3"],[1,523,"；\n"],[1,750,"Co"],[1,758," "],[-1,760," "],[1,771," "],[-1,773," "],[-1,784,"\n\n"],[-1,802,"4"],[1,803,"\n"],[1,807,"Di"],[-1,817,"clvt"],[1,821,"vlet "],[-1,823," "],[1,844," "],[-1,846," "],[-1,851,"\n5"],[1,857,"视图"],[-1,870,"!["],[-1,933,"Sp"],[1,935,"\n\n"],[1,1826,"Sp"],[-1,1852,"它可"],[1,1856,"它可"],[-1,1869,"["],[1,1871,"a"],[-1,1873,"]("],[1,1875,"中的"],[-1,1896,"），"],[1,1900,"），"],[1,1971,"- "],[-1,1973,"- "],[1,2051,"**"],[-1,2053,"**"],[-1,2114,"。在"],[1,2118,"。在"],[-1,2173,"**"],[1,2186,"\n要"],[-1,2195,"1."],[1,2199,"先写"],[-1,2254,"2."],[1,2258,"写M"],[-1,2349,"3."],[1,2353,"写M"],[-1,2365,"Ma"],[1,2369,"Ma"],[-1,2394,"。\n"],[-1,2398,"4."],[1,2400,"。\n"],[1,2402,"写S"],[1,2415,"**"],[-1,2417,"**"],[-1,2449,"。\n"],[-1,2453,"5.-"],[1,2456,"。\n- 写"],[1,2472,"**"],[-1,2474,"**"],[-1,2484,"，获"],[-1,2488,"取"],[1,2489,"，"],[1,2491,"获取"],[-1,2544,"。\n"],[-1,2548,"6.-J "],[1,2553,"。\n-  写J"],[-1,2587,"=="],[1,2591,"> "],[-1,2598,"=="],[1,2602,"> "],[-1,2613,"=="],[1,2617,"> "],[-1,2624,"["],[1,2626,"a"],[-1,2628,"]("],[1,2633,"> "],[-1,2646,"=="],[1,2650,"> "],[-1,2666,"=="],[1,2670,"> ."],[-1,2672,".p. ==S"],[1,2679,"p\n\n\n"],[-1,2686,"p"],[1,2687,"\n"],[1,2689,"Sp"],[1,2714,"2 "],[-1,2716,"2 "],[1,2726,"**"],[-1,2728,"**"],[-1,2737,"\nS"],[-1,2741,"p"],[1,2742,"\n"],[1,2744,"Sp"],[1,2759,"**"],[-1,2761,"**"],[-1,2776,"\nm"],[-1,2780,"y"],[1,2781,"\n"],[1,2783,"my"],[1,2800,"**"],[-1,2802,"**"],[-1,2807," "],[1,2809,"数"],[-1,2813," 起\n\n**；Sp"],[1,2822,"起来**；\n\n"],[1,2824,"Sp"],[-1,2840,"与 于"],[1,2843,"于 S"],[1,2852,"- "],[-1,2854,"- "],[1,2870,"："],[-1,2872,"："],[-1,2893,"my"],[1,2897,"my"],[1,2924,"- "],[-1,2926,"- "],[1,3058,"- "],[-1,3060,"- "],[-1,3084,"它允"],[1,3088,"它允"],[-1,3119,"，如"],[1,3123,"，如"],[-1,3182,"**"],[1,3184,"持久"],[-1,3198,"**"],[1,3200,"\n\n"],[-1,3428,"**"],[1,3430,"业务"],[-1,3440,"**"],[1,3442,"\n\n"],[-1,3480,"\n"],[1,3481," "],[-1,3668,"**"],[1,3670,"表现"],[-1,3693,"**"],[1,3695,"\n\n"],[-1,3742,"\n"],[1,3743," "],[-1,3901,"**ew层**"],[1,3908,"View层\n\n"],[-1,3970,"**联系**"],[1,3976,"各层联系\n\n"],[-1,4181,"\n"],[1,4182," "],[-1,4359,"==**"],[1,4363,"\n\n"],[-1,4584,"  "],[1,4586,"**"],[-1,4634,"in"],[1,4636,"pr"],[1,4755,"in"],[-1,4756,"+S"],[1,6214,"**"],[-1,6217," 1"],[1,6225,"Sp"],[-1,6229," \n"],[-1,6237,"\n"],[1,6238," "],[-1,6254,"  "],[1,6256,"\n\n"],[-1,6382,"S"],[1,6383," "],[-1,6447,"p"],[1,6448," "],[1,6465,"Sp"],[-1,6472,"开源"],[1,6489,"Sp"],[-1,6493,"是于"],[1,8655,"pr"],[-1,8658,"使用"],[1,9350,"pr"],[-1,9354,"用途"],[1,9815,"pr"],[-1,9818,"中受"],[1,10014,"pr"],[-1,10017,"是一"],[1,10153,"面向"],[-1,10155,"（A"],[-1,10329,"。\n"],[1,10331,"框架"],[-1,10426,"\n##"],[1,10429,"。\n\n"],[1,10611,"##"],[-1,10615,".2"],[-1,10682,"、"],[1,10683,"."],[-1,10692,"S"],[1,10693,"2"],[-1,10864,"p"],[1,10865,"、"],[-1,10887,"r"],[1,10888,"S"],[-1,10908,"i"],[1,10909,"p"],[-1,10914,"n"],[1,10915,"r"],[1,10939,"in"],[-1,10940,"MV"],[-1,11237,"\n\n"],[1,11239,"  "],[-1,11290," "],[1,11291,"\n"],[-1,11324," "],[1,11325,"\n"],[-1,11332,"S"],[1,11333," "],[-1,11384,"p"],[1,11385," "],[1,11425,"Sp"],[-1,11433,"属于"],[1,11449,"Sp"],[-1,11453,"Fr"],[-1,19589,""],[1,19589,"。"]],[24,24],[19590,19590]]],[1570886673578,[null,[[1,24,"\n*原理*"],[-1,24,"框架原理\n"],[1,41,"**"],[-1,41,"作用\n\n"],[-1,48," "],[-1,51,"是"],[1,53,"是"],[1,55," "],[-1,71," "],[-1,73," "],[1,75," "],[1,76," "],[-1,81," "],[1,84," "],[-1,92," "],[1,95," "],[-1,96," "],[1,99," "],[-1,131," "],[1,134," "],[-1,137," "],[1,140," "],[1,143,"使用"],[-1,145,"使用"],[1,159,"请求"],[-1,161,"请求"],[1,171,"\n\n"],[1,173,"s"],[-1,173,"\n"],[-1,176,"sp"],[1,190,"，m"],[-1,193,"my"],[1,214,"**"],[1,225,"Sp"],[-1,225,"\n\n"],[1,243,"."],[-1,243,"\n"],[-1,380,"客户"],[-1,388," "],[1,391," "],[1,406,"分发"],[-1,412,"分发"],[1,416,"\n\n"],[1,437,"2"],[-1,437,"\n"],[1,442,"i "],[-1,442,"由 Di"],[-1,460," "],[1,463," "],[-1,466," "],[1,469," "],[1,481,"找到"],[-1,503,"找到"],[-1,510," "],[1,513," "],[1,521,"\n\n；3"],[-1,521,"；\n"],[-1,750,"Co"],[-1,760," "],[1,763," "],[-1,773," "],[1,776," "],[1,786,"\n\n"],[1,802,"4"],[-1,802,"\n"],[-1,807,"Di"],[1,819,"clvt"],[-1,819,"vlet "],[1,826," "],[-1,846," "],[1,849," "],[1,853,"\n5"],[-1,857,"视图"],[1,872,"!["],[1,933,"Sp"],[-1,933,"\n\n"],[-1,1826,"Sp"],[1,1854,"它可"],[-1,1856,"它可"],[1,1871,"["],[-1,1872,"a"],[1,1875,"]("],[-1,1875,"中的"],[1,1898,"），"],[-1,1900,"），"],[-1,1973,"- "],[1,1977,"- "],[-1,2053,"**"],[1,2057,"**"],[1,2116,"。在"],[-1,2118,"。在"],[1,2175,"**"],[-1,2186,"\n要"],[1,2197,"1."],[-1,2199,"先写"],[1,2256,"2."],[-1,2258,"写M"],[1,2351,"3."],[-1,2353,"写M"],[1,2367,"Ma"],[-1,2369,"Ma"],[1,2396,"。\n"],[1,2398,"4."],[-1,2398,"。\n"],[-1,2402,"写S"],[-1,2417,"**"],[1,2421,"**"],[1,2451,"。\n"],[1,2453,"5.-"],[-1,2453,"。\n- 写"],[-1,2474,"**"],[1,2478,"**"],[1,2486,"，获"],[1,2488,"取"],[-1,2488,"，"],[-1,2491,"获取"],[1,2546,"。\n"],[1,2548,"6.-J "],[-1,2548,"。\n-  写J"],[1,2589,"=="],[-1,2591,"> "],[1,2600,"=="],[-1,2602,"> "],[1,2615,"=="],[-1,2617,"> "],[1,2626,"["],[-1,2627,"a"],[1,2630,"]("],[-1,2633,"> "],[1,2648,"=="],[-1,2650,"> "],[1,2668,"=="],[-1,2670,"> ."],[1,2675,".p. ==S"],[-1,2675,"p\n\n\n"],[1,2686,"p"],[-1,2686,"\n"],[-1,2689,"Sp"],[-1,2716,"2 "],[1,2720,"2 "],[-1,2728,"**"],[1,2732,"**"],[1,2739,"\nS"],[1,2741,"p"],[-1,2741,"\n"],[-1,2744,"Sp"],[-1,2761,"**"],[1,2765,"**"],[1,2778,"\nm"],[1,2780,"y"],[-1,2780,"\n"],[-1,2783,"my"],[-1,2802,"**"],[1,2806,"**"],[1,2809," "],[-1,2810,"数"],[1,2815," 起\n\n**；Sp"],[-1,2815,"起来**；\n\n"],[-1,2824,"Sp"],[1,2842,"与 于"],[-1,2842,"于 S"],[-1,2854,"- "],[1,2858,"- "],[-1,2872,"："],[1,2875,"："],[1,2895,"my"],[-1,2897,"my"],[-1,2926,"- "],[1,2930,"- "],[-1,3060,"- "],[1,3064,"- "],[1,3086,"它允"],[-1,3088,"它允"],[1,3121,"，如"],[-1,3123,"，如"],[1,3184,"**"],[-1,3184,"持久"],[1,3200,"**"],[-1,3200,"\n\n"],[1,3430,"**"],[-1,3430,"业务"],[1,3442,"**"],[-1,3442,"\n\n"],[1,3482,"\n"],[-1,3482," "],[1,3670,"**"],[-1,3670,"表现"],[1,3695,"**"],[-1,3695,"\n\n"],[1,3744,"\n"],[-1,3744," "],[1,3903,"**ew层**"],[-1,3903,"View层\n\n"],[1,3972,"**联系**"],[-1,3972,"各层联系\n\n"],[1,4183,"\n"],[-1,4183," "],[1,4361,"==**"],[-1,4361,"\n\n"],[1,4584,"  "],[-1,4584,"**"],[1,4634,"in"],[-1,4634,"pr"],[-1,4755,"in"],[1,4758,"+S"],[-1,6214,"**"],[1,6219," 1"],[-1,6225,"Sp"],[1,6231," \n"],[1,6237,"\n"],[-1,6237," "],[1,6254,"  "],[-1,6254,"\n\n"],[1,6382,"S"],[-1,6382," "],[1,6447,"p"],[-1,6447," "],[-1,6465,"Sp"],[1,6474,"开源"],[-1,6489,"Sp"],[1,6495,"是于"],[-1,8655,"pr"],[1,8660,"使用"],[-1,9350,"pr"],[1,9356,"用途"],[-1,9815,"pr"],[1,9820,"中受"],[-1,10014,"pr"],[1,10019,"是一"],[-1,10153,"面向"],[1,10157,"（A"],[1,10329,"。\n"],[-1,10329,"框架"],[1,10426,"\n##"],[-1,10426,"。\n\n"],[-1,10611,"##"],[1,10617,".2"],[1,10682,"、"],[-1,10682,"."],[1,10692,"S"],[-1,10692,"2"],[1,10864,"p"],[-1,10864,"、"],[1,10887,"r"],[-1,10887,"S"],[1,10908,"i"],[-1,10908,"p"],[1,10914,"n"],[-1,10914,"r"],[-1,10939,"in"],[1,10942,"MV"],[1,11237,"\n\n"],[-1,11237,"  "],[1,11290," "],[-1,11290,"\n"],[1,11324," "],[-1,11324,"\n"],[1,11332,"S"],[-1,11332," "],[1,11384,"p"],[-1,11384," "],[-1,11425,"Sp"],[1,11435,"属于"],[-1,11449,"Sp"],[1,11455,"Fr"],[1,19589,""],[-1,19589,"。"]],[19590,19590],[24,24]]],[1570886615235,["GJX@GJXAIOU",[[1,6929,"SA"]],[6929,6929],[6931,6931]]],[1570886617289,["GJX@GJXAIOU",[[-1,6929,"SA"]],[6931,6931],[6929,6929]]],[1570886618435,["GJX@GJXAIOU",[[1,6929,"sN"]],[6929,6929],[6931,6931]]],[1570886619143,["GJX@GJXAIOU",[[-1,6929,"sN"]],[6931,6931],[6929,6929]]],[1570886625418,["GJX@GJXAIOU",[[1,6929,"saa"]],[6929,6929],[6932,6932]]],[1570886627038,["GJX@GJXAIOU",[[-1,6929,"saa"]],[6932,6932],[6929,6929]]],[1570886630264,["GJX@GJXAIOU",[[1,6929,"三"]],[6929,6929],[6930,6930]]],[1570886633423,["GJX@GJXAIOU",[[-1,6952,"\n"]],[6952,6952],[6951,6951]]],[1570887153587,[null,[[-1,24,"\n*原理*"],[1,29,"框架原理\n"],[-1,41,"**"],[1,43,"作用\n\n"],[1,46," "],[1,48,"是"],[-1,49,"是"],[-1,52," "],[1,69," "],[1,70," "],[-1,71," "],[-1,73," "],[1,79," "],[-1,81," "],[1,90," "],[-1,92," "],[1,94," "],[-1,96," "],[1,129," "],[-1,131," "],[1,135," "],[-1,137," "],[-1,141,"使用"],[1,145,"使用"],[-1,157,"请求"],[1,161,"请求"],[-1,169,"\n\n"],[-1,173,"s"],[1,174,"\n"],[1,176,"sp"],[-1,188,"，m"],[1,193,"my"],[-1,212,"**"],[-1,225,"Sp"],[1,227,"\n\n"],[-1,243,"."],[1,244,"\n"],[1,380,"客户"],[1,386," "],[-1,388," "],[-1,404,"分发"],[1,412,"分发"],[-1,414,"\n\n"],[-1,437,"2"],[1,438,"\n"],[-1,442,"i "],[1,444,"由 Di"],[1,458," "],[-1,460," "],[1,464," "],[-1,466," "],[-1,479,"找到"],[1,503,"找到"],[1,508," "],[-1,510," "],[-1,519,"\n\n；3"],[1,523,"；\n"],[1,750,"Co"],[1,758," "],[-1,760," "],[1,771," "],[-1,773," "],[-1,784,"\n\n"],[-1,802,"4"],[1,803,"\n"],[1,807,"Di"],[-1,817,"clvt"],[1,821,"vlet "],[-1,823," "],[1,844," "],[-1,846," "],[-1,851,"\n5"],[1,857,"视图"],[-1,870,"!["],[-1,933,"Sp"],[1,935,"\n\n"],[1,1826,"Sp"],[-1,1852,"它可"],[1,1856,"它可"],[-1,1869,"["],[1,1871,"a"],[-1,1873,"]("],[1,1875,"中的"],[-1,1896,"），"],[1,1900,"），"],[1,1971,"- "],[-1,1973,"- "],[1,2051,"**"],[-1,2053,"**"],[-1,2114,"。在"],[1,2118,"。在"],[-1,2173,"**"],[1,2186,"\n要"],[-1,2195,"1."],[1,2199,"先写"],[-1,2254,"2."],[1,2258,"写M"],[-1,2349,"3."],[1,2353,"写M"],[-1,2365,"Ma"],[1,2369,"Ma"],[-1,2394,"。\n"],[-1,2398,"4."],[1,2400,"。\n"],[1,2402,"写S"],[1,2415,"**"],[-1,2417,"**"],[-1,2449,"。\n"],[-1,2453,"5.-"],[1,2456,"。\n- 写"],[1,2472,"**"],[-1,2474,"**"],[-1,2484,"，获"],[-1,2488,"取"],[1,2489,"，"],[1,2491,"获取"],[-1,2544,"。\n"],[-1,2548,"6.-J "],[1,2553,"。\n-  写J"],[-1,2587,"=="],[1,2591,"> "],[-1,2598,"=="],[1,2602,"> "],[-1,2613,"=="],[1,2617,"> "],[-1,2624,"["],[1,2626,"a"],[-1,2628,"]("],[1,2633,"> "],[-1,2646,"=="],[1,2650,"> "],[-1,2666,"=="],[1,2670,"> ."],[-1,2672,".p. ==S"],[1,2679,"p\n\n\n"],[-1,2686,"p"],[1,2687,"\n"],[1,2689,"Sp"],[1,2714,"2 "],[-1,2716,"2 "],[1,2726,"**"],[-1,2728,"**"],[-1,2737,"\nS"],[-1,2741,"p"],[1,2742,"\n"],[1,2744,"Sp"],[1,2759,"**"],[-1,2761,"**"],[-1,2776,"\nm"],[-1,2780,"y"],[1,2781,"\n"],[1,2783,"my"],[1,2800,"**"],[-1,2802,"**"],[-1,2807," "],[1,2809,"数"],[-1,2813," 起\n\n**；Sp"],[1,2822,"起来**；\n\n"],[1,2824,"Sp"],[-1,2840,"与 于"],[1,2843,"于 S"],[1,2852,"- "],[-1,2854,"- "],[1,2870,"："],[-1,2872,"："],[-1,2893,"my"],[1,2897,"my"],[1,2924,"- "],[-1,2926,"- "],[1,3058,"- "],[-1,3060,"- "],[-1,3084,"它允"],[1,3088,"它允"],[-1,3119,"，如"],[1,3123,"，如"],[-1,3182,"**"],[1,3184,"持久"],[-1,3198,"**"],[1,3200,"\n\n"],[-1,3428,"**"],[1,3430,"业务"],[-1,3440,"**"],[1,3442,"\n\n"],[-1,3480,"\n"],[1,3481," "],[-1,3668,"**"],[1,3670,"表现"],[-1,3693,"**"],[1,3695,"\n\n"],[-1,3742,"\n"],[1,3743," "],[-1,3901,"**ew层**"],[1,3908,"View层\n\n"],[-1,3970,"**联系**"],[1,3976,"各层联系\n\n"],[-1,4181,"\n"],[1,4182," "],[-1,4359,"==**"],[1,4363,"\n\n"],[-1,4584,"  "],[1,4586,"**"],[-1,4634,"in"],[1,4636,"pr"],[1,4755,"in"],[-1,4756,"+S"],[1,6214,"**"],[-1,6217," 1"],[1,6225,"Sp"],[-1,6229," \n"],[-1,6237,"\n"],[1,6238," "],[-1,6254,"  "],[1,6256,"\n\n"],[-1,6382,"S"],[1,6383," "],[-1,6447,"p"],[1,6448," "],[1,6465,"Sp"],[-1,6472,"开源"],[1,6489,"Sp"],[-1,6493,"是于"],[1,8655,"pr"],[-1,8658,"使用"],[1,9350,"pr"],[-1,9354,"用途"],[1,9815,"pr"],[-1,9818,"中受"],[1,10014,"pr"],[-1,10017,"是一"],[1,10153,"面向"],[-1,10155,"（A"],[-1,10329,"。\n"],[1,10331,"框架"],[-1,10426,"\n##"],[1,10429,"。\n\n"],[1,10611,"##"],[-1,10615,".2"],[-1,10682,"、"],[1,10683,"."],[-1,10692,"S"],[1,10693,"2"],[-1,10864,"p"],[1,10865,"、"],[-1,10887,"r"],[1,10888,"S"],[-1,10908,"i"],[1,10909,"p"],[-1,10914,"n"],[1,10915,"r"],[1,10939,"in"],[-1,10940,"MV"],[-1,11237,"\n\n"],[1,11239,"  "],[-1,11290," "],[1,11291,"\n"],[-1,11324," "],[1,11325,"\n"],[-1,11332,"S"],[1,11333," "],[-1,11384,"p"],[1,11385," "],[1,11425,"Sp"],[-1,11433,"属于"],[1,11449,"Sp"],[-1,11453,"Fr"],[-1,19589,""],[1,19589,"。"]],[24,24],[19590,19590]]],[1570887153587,[null,[[1,24,"\n*原理*"],[-1,24,"框架原理\n"],[1,41,"**"],[-1,41,"作用\n\n"],[-1,48," "],[-1,51,"是"],[1,53,"是"],[1,55," "],[-1,71," "],[-1,73," "],[1,75," "],[1,76," "],[-1,81," "],[1,84," "],[-1,92," "],[1,95," "],[-1,96," "],[1,99," "],[-1,131," "],[1,134," "],[-1,137," "],[1,140," "],[1,143,"使用"],[-1,145,"使用"],[1,159,"请求"],[-1,161,"请求"],[1,171,"\n\n"],[1,173,"s"],[-1,173,"\n"],[-1,176,"sp"],[1,190,"，m"],[-1,193,"my"],[1,214,"**"],[1,225,"Sp"],[-1,225,"\n\n"],[1,243,"."],[-1,243,"\n"],[-1,380,"客户"],[-1,388," "],[1,391," "],[1,406,"分发"],[-1,412,"分发"],[1,416,"\n\n"],[1,437,"2"],[-1,437,"\n"],[1,442,"i "],[-1,442,"由 Di"],[-1,460," "],[1,463," "],[-1,466," "],[1,469," "],[1,481,"找到"],[-1,503,"找到"],[-1,510," "],[1,513," "],[1,521,"\n\n；3"],[-1,521,"；\n"],[-1,750,"Co"],[-1,760," "],[1,763," "],[-1,773," "],[1,776," "],[1,786,"\n\n"],[1,802,"4"],[-1,802,"\n"],[-1,807,"Di"],[1,819,"clvt"],[-1,819,"vlet "],[1,826," "],[-1,846," "],[1,849," "],[1,853,"\n5"],[-1,857,"视图"],[1,872,"!["],[1,933,"Sp"],[-1,933,"\n\n"],[-1,1826,"Sp"],[1,1854,"它可"],[-1,1856,"它可"],[1,1871,"["],[-1,1872,"a"],[1,1875,"]("],[-1,1875,"中的"],[1,1898,"），"],[-1,1900,"），"],[-1,1973,"- "],[1,1977,"- "],[-1,2053,"**"],[1,2057,"**"],[1,2116,"。在"],[-1,2118,"。在"],[1,2175,"**"],[-1,2186,"\n要"],[1,2197,"1."],[-1,2199,"先写"],[1,2256,"2."],[-1,2258,"写M"],[1,2351,"3."],[-1,2353,"写M"],[1,2367,"Ma"],[-1,2369,"Ma"],[1,2396,"。\n"],[1,2398,"4."],[-1,2398,"。\n"],[-1,2402,"写S"],[-1,2417,"**"],[1,2421,"**"],[1,2451,"。\n"],[1,2453,"5.-"],[-1,2453,"。\n- 写"],[-1,2474,"**"],[1,2478,"**"],[1,2486,"，获"],[1,2488,"取"],[-1,2488,"，"],[-1,2491,"获取"],[1,2546,"。\n"],[1,2548,"6.-J "],[-1,2548,"。\n-  写J"],[1,2589,"=="],[-1,2591,"> "],[1,2600,"=="],[-1,2602,"> "],[1,2615,"=="],[-1,2617,"> "],[1,2626,"["],[-1,2627,"a"],[1,2630,"]("],[-1,2633,"> "],[1,2648,"=="],[-1,2650,"> "],[1,2668,"=="],[-1,2670,"> ."],[1,2675,".p. ==S"],[-1,2675,"p\n\n\n"],[1,2686,"p"],[-1,2686,"\n"],[-1,2689,"Sp"],[-1,2716,"2 "],[1,2720,"2 "],[-1,2728,"**"],[1,2732,"**"],[1,2739,"\nS"],[1,2741,"p"],[-1,2741,"\n"],[-1,2744,"Sp"],[-1,2761,"**"],[1,2765,"**"],[1,2778,"\nm"],[1,2780,"y"],[-1,2780,"\n"],[-1,2783,"my"],[-1,2802,"**"],[1,2806,"**"],[1,2809," "],[-1,2810,"数"],[1,2815," 起\n\n**；Sp"],[-1,2815,"起来**；\n\n"],[-1,2824,"Sp"],[1,2842,"与 于"],[-1,2842,"于 S"],[-1,2854,"- "],[1,2858,"- "],[-1,2872,"："],[1,2875,"："],[1,2895,"my"],[-1,2897,"my"],[-1,2926,"- "],[1,2930,"- "],[-1,3060,"- "],[1,3064,"- "],[1,3086,"它允"],[-1,3088,"它允"],[1,3121,"，如"],[-1,3123,"，如"],[1,3184,"**"],[-1,3184,"持久"],[1,3200,"**"],[-1,3200,"\n\n"],[1,3430,"**"],[-1,3430,"业务"],[1,3442,"**"],[-1,3442,"\n\n"],[1,3482,"\n"],[-1,3482," "],[1,3670,"**"],[-1,3670,"表现"],[1,3695,"**"],[-1,3695,"\n\n"],[1,3744,"\n"],[-1,3744," "],[1,3903,"**ew层**"],[-1,3903,"View层\n\n"],[1,3972,"**联系**"],[-1,3972,"各层联系\n\n"],[1,4183,"\n"],[-1,4183," "],[1,4361,"==**"],[-1,4361,"\n\n"],[1,4584,"  "],[-1,4584,"**"],[1,4634,"in"],[-1,4634,"pr"],[-1,4755,"in"],[1,4758,"+S"],[-1,6214,"**"],[1,6219," 1"],[-1,6225,"Sp"],[1,6231," \n"],[1,6237,"\n"],[-1,6237," "],[1,6254,"  "],[-1,6254,"\n\n"],[1,6382,"S"],[-1,6382," "],[1,6447,"p"],[-1,6447," "],[-1,6465,"Sp"],[1,6474,"开源"],[-1,6489,"Sp"],[1,6495,"是于"],[-1,8655,"pr"],[1,8660,"使用"],[-1,9350,"pr"],[1,9356,"用途"],[-1,9815,"pr"],[1,9820,"中受"],[-1,10014,"pr"],[1,10019,"是一"],[-1,10153,"面向"],[1,10157,"（A"],[1,10329,"。\n"],[-1,10329,"框架"],[1,10426,"\n##"],[-1,10426,"。\n\n"],[-1,10611,"##"],[1,10617,".2"],[1,10682,"、"],[-1,10682,"."],[1,10692,"S"],[-1,10692,"2"],[1,10864,"p"],[-1,10864,"、"],[1,10887,"r"],[-1,10887,"S"],[1,10908,"i"],[-1,10908,"p"],[1,10914,"n"],[-1,10914,"r"],[-1,10939,"in"],[1,10942,"MV"],[1,11237,"\n\n"],[-1,11237,"  "],[1,11290," "],[-1,11290,"\n"],[1,11324," "],[-1,11324,"\n"],[1,11332,"S"],[-1,11332," "],[1,11384,"p"],[-1,11384," "],[-1,11425,"Sp"],[1,11435,"属于"],[-1,11449,"Sp"],[1,11455,"Fr"],[1,19589,""],[-1,19589,"。"]],[19590,19590],[24,24]]],[1570887117866,["GJX@GJXAIOU",[[-1,18229,"\n"]],[18229,18229],[18228,18228]]],[1570887120177,["GJX@GJXAIOU",[[-1,18254,"\n"]],[18254,18254],[18253,18253]]],[1570887513593,[null,[[-1,24,"\n*原理*"],[1,29,"框架原理\n"],[-1,41,"**"],[1,43,"作用\n\n"],[1,46," "],[1,48,"是"],[-1,49,"是"],[-1,52," "],[1,69," "],[1,70," "],[-1,71," "],[-1,73," "],[1,79," "],[-1,81," "],[1,90," "],[-1,92," "],[1,94," "],[-1,96," "],[1,129," "],[-1,131," "],[1,135," "],[-1,137," "],[-1,141,"使用"],[1,145,"使用"],[-1,157,"请求"],[1,161,"请求"],[-1,169,"\n\n"],[-1,173,"s"],[1,174,"\n"],[1,176,"sp"],[-1,188,"，m"],[1,193,"my"],[-1,212,"**"],[-1,225,"Sp"],[1,227,"\n\n"],[-1,243,"."],[1,244,"\n"],[1,380,"客户"],[1,386," "],[-1,388," "],[-1,404,"分发"],[1,412,"分发"],[-1,414,"\n\n"],[-1,437,"2"],[1,438,"\n"],[-1,442,"i "],[1,444,"由 Di"],[1,458," "],[-1,460," "],[1,464," "],[-1,466," "],[-1,479,"找到"],[1,503,"找到"],[1,508," "],[-1,510," "],[-1,519,"\n\n；3"],[1,523,"；\n"],[1,750,"Co"],[1,758," "],[-1,760," "],[1,771," "],[-1,773," "],[-1,784,"\n\n"],[-1,802,"4"],[1,803,"\n"],[1,807,"Di"],[-1,817,"clvt"],[1,821,"vlet "],[-1,823," "],[1,844," "],[-1,846," "],[-1,851,"\n5"],[1,857,"视图"],[-1,870,"!["],[-1,933,"Sp"],[1,935,"\n\n"],[1,1826,"Sp"],[-1,1852,"它可"],[1,1856,"它可"],[-1,1869,"["],[1,1871,"a"],[-1,1873,"]("],[1,1875,"中的"],[-1,1896,"），"],[1,1900,"），"],[1,1971,"- "],[-1,1973,"- "],[1,2051,"**"],[-1,2053,"**"],[-1,2114,"。在"],[1,2118,"。在"],[-1,2173,"**"],[1,2186,"\n要"],[-1,2195,"1."],[1,2199,"先写"],[-1,2254,"2."],[1,2258,"写M"],[-1,2349,"3."],[1,2353,"写M"],[-1,2365,"Ma"],[1,2369,"Ma"],[-1,2394,"。\n"],[-1,2398,"4."],[1,2400,"。\n"],[1,2402,"写S"],[1,2415,"**"],[-1,2417,"**"],[-1,2449,"。\n"],[-1,2453,"5.-"],[1,2456,"。\n- 写"],[1,2472,"**"],[-1,2474,"**"],[-1,2484,"，获"],[-1,2488,"取"],[1,2489,"，"],[1,2491,"获取"],[-1,2544,"。\n"],[-1,2548,"6.-J "],[1,2553,"。\n-  写J"],[-1,2587,"=="],[1,2591,"> "],[-1,2598,"=="],[1,2602,"> "],[-1,2613,"=="],[1,2617,"> "],[-1,2624,"["],[1,2626,"a"],[-1,2628,"]("],[1,2633,"> "],[-1,2646,"=="],[1,2650,"> "],[-1,2666,"=="],[1,2670,"> ."],[-1,2672,".p. ==S"],[1,2679,"p\n\n\n"],[-1,2686,"p"],[1,2687,"\n"],[1,2689,"Sp"],[1,2714,"2 "],[-1,2716,"2 "],[1,2726,"**"],[-1,2728,"**"],[-1,2737,"\nS"],[-1,2741,"p"],[1,2742,"\n"],[1,2744,"Sp"],[1,2759,"**"],[-1,2761,"**"],[-1,2776,"\nm"],[-1,2780,"y"],[1,2781,"\n"],[1,2783,"my"],[1,2800,"**"],[-1,2802,"**"],[-1,2807," "],[1,2809,"数"],[-1,2813," 起\n\n**；Sp"],[1,2822,"起来**；\n\n"],[1,2824,"Sp"],[-1,2840,"与 于"],[1,2843,"于 S"],[1,2852,"- "],[-1,2854,"- "],[1,2870,"："],[-1,2872,"："],[-1,2893,"my"],[1,2897,"my"],[1,2924,"- "],[-1,2926,"- "],[1,3058,"- "],[-1,3060,"- "],[-1,3084,"它允"],[1,3088,"它允"],[-1,3119,"，如"],[1,3123,"，如"],[-1,3182,"**"],[1,3184,"持久"],[-1,3198,"**"],[1,3200,"\n\n"],[-1,3428,"**"],[1,3430,"业务"],[-1,3440,"**"],[1,3442,"\n\n"],[-1,3480,"\n"],[1,3481," "],[-1,3668,"**"],[1,3670,"表现"],[-1,3693,"**"],[1,3695,"\n\n"],[-1,3742,"\n"],[1,3743," "],[-1,3901,"**ew层**"],[1,3908,"View层\n\n"],[-1,3970,"**联系**"],[1,3976,"各层联系\n\n"],[-1,4181,"\n"],[1,4182," "],[-1,4359,"==**"],[1,4363,"\n\n"],[-1,4584,"  "],[1,4586,"**"],[-1,4634,"in"],[1,4636,"pr"],[1,4755,"in"],[-1,4756,"+S"],[1,6214,"**"],[-1,6217," 1"],[1,6225,"Sp"],[-1,6229," \n"],[-1,6237,"\n"],[1,6238," "],[-1,6254,"  "],[1,6256,"\n\n"],[-1,6382,"S"],[1,6383," "],[-1,6447,"p"],[1,6448," "],[1,6465,"Sp"],[-1,6472,"开源"],[1,6489,"Sp"],[-1,6493,"是于"],[1,8655,"pr"],[-1,8658,"使用"],[1,9350,"pr"],[-1,9354,"用途"],[1,9815,"pr"],[-1,9818,"中受"],[1,10014,"pr"],[-1,10017,"是一"],[1,10153,"面向"],[-1,10155,"（A"],[-1,10329,"。\n"],[1,10331,"框架"],[-1,10426,"\n##"],[1,10429,"。\n\n"],[1,10611,"##"],[-1,10615,".2"],[-1,10682,"、"],[1,10683,"."],[-1,10692,"S"],[1,10693,"2"],[-1,10864,"p"],[1,10865,"、"],[-1,10887,"r"],[1,10888,"S"],[-1,10908,"i"],[1,10909,"p"],[-1,10914,"n"],[1,10915,"r"],[1,10939,"in"],[-1,10940,"MV"],[-1,11237,"\n\n"],[1,11239,"  "],[-1,11290," "],[1,11291,"\n"],[-1,11324," "],[1,11325,"\n"],[-1,11332,"S"],[1,11333," "],[-1,11384,"p"],[1,11385," "],[1,11425,"Sp"],[-1,11433,"属于"],[1,11449,"Sp"],[-1,11453,"Fr"],[-1,19587,""],[1,19587,"。"]],[24,24],[19588,19588]]],[1570887513593,[null,[[1,24,"\n*原理*"],[-1,24,"框架原理\n"],[1,41,"**"],[-1,41,"作用\n\n"],[-1,48," "],[-1,51,"是"],[1,53,"是"],[1,55," "],[-1,71," "],[-1,73," "],[1,75," "],[1,76," "],[-1,81," "],[1,84," "],[-1,92," "],[1,95," "],[-1,96," "],[1,99," "],[-1,131," "],[1,134," "],[-1,137," "],[1,140," "],[1,143,"使用"],[-1,145,"使用"],[1,159,"请求"],[-1,161,"请求"],[1,171,"\n\n"],[1,173,"s"],[-1,173,"\n"],[-1,176,"sp"],[1,190,"，m"],[-1,193,"my"],[1,214,"**"],[1,225,"Sp"],[-1,225,"\n\n"],[1,243,"."],[-1,243,"\n"],[-1,380,"客户"],[-1,388," "],[1,391," "],[1,406,"分发"],[-1,412,"分发"],[1,416,"\n\n"],[1,437,"2"],[-1,437,"\n"],[1,442,"i "],[-1,442,"由 Di"],[-1,460," "],[1,463," "],[-1,466," "],[1,469," "],[1,481,"找到"],[-1,503,"找到"],[-1,510," "],[1,513," "],[1,521,"\n\n；3"],[-1,521,"；\n"],[-1,750,"Co"],[-1,760," "],[1,763," "],[-1,773," "],[1,776," "],[1,786,"\n\n"],[1,802,"4"],[-1,802,"\n"],[-1,807,"Di"],[1,819,"clvt"],[-1,819,"vlet "],[1,826," "],[-1,846," "],[1,849," "],[1,853,"\n5"],[-1,857,"视图"],[1,872,"!["],[1,933,"Sp"],[-1,933,"\n\n"],[-1,1826,"Sp"],[1,1854,"它可"],[-1,1856,"它可"],[1,1871,"["],[-1,1872,"a"],[1,1875,"]("],[-1,1875,"中的"],[1,1898,"），"],[-1,1900,"），"],[-1,1973,"- "],[1,1977,"- "],[-1,2053,"**"],[1,2057,"**"],[1,2116,"。在"],[-1,2118,"。在"],[1,2175,"**"],[-1,2186,"\n要"],[1,2197,"1."],[-1,2199,"先写"],[1,2256,"2."],[-1,2258,"写M"],[1,2351,"3."],[-1,2353,"写M"],[1,2367,"Ma"],[-1,2369,"Ma"],[1,2396,"。\n"],[1,2398,"4."],[-1,2398,"。\n"],[-1,2402,"写S"],[-1,2417,"**"],[1,2421,"**"],[1,2451,"。\n"],[1,2453,"5.-"],[-1,2453,"。\n- 写"],[-1,2474,"**"],[1,2478,"**"],[1,2486,"，获"],[1,2488,"取"],[-1,2488,"，"],[-1,2491,"获取"],[1,2546,"。\n"],[1,2548,"6.-J "],[-1,2548,"。\n-  写J"],[1,2589,"=="],[-1,2591,"> "],[1,2600,"=="],[-1,2602,"> "],[1,2615,"=="],[-1,2617,"> "],[1,2626,"["],[-1,2627,"a"],[1,2630,"]("],[-1,2633,"> "],[1,2648,"=="],[-1,2650,"> "],[1,2668,"=="],[-1,2670,"> ."],[1,2675,".p. ==S"],[-1,2675,"p\n\n\n"],[1,2686,"p"],[-1,2686,"\n"],[-1,2689,"Sp"],[-1,2716,"2 "],[1,2720,"2 "],[-1,2728,"**"],[1,2732,"**"],[1,2739,"\nS"],[1,2741,"p"],[-1,2741,"\n"],[-1,2744,"Sp"],[-1,2761,"**"],[1,2765,"**"],[1,2778,"\nm"],[1,2780,"y"],[-1,2780,"\n"],[-1,2783,"my"],[-1,2802,"**"],[1,2806,"**"],[1,2809," "],[-1,2810,"数"],[1,2815," 起\n\n**；Sp"],[-1,2815,"起来**；\n\n"],[-1,2824,"Sp"],[1,2842,"与 于"],[-1,2842,"于 S"],[-1,2854,"- "],[1,2858,"- "],[-1,2872,"："],[1,2875,"："],[1,2895,"my"],[-1,2897,"my"],[-1,2926,"- "],[1,2930,"- "],[-1,3060,"- "],[1,3064,"- "],[1,3086,"它允"],[-1,3088,"它允"],[1,3121,"，如"],[-1,3123,"，如"],[1,3184,"**"],[-1,3184,"持久"],[1,3200,"**"],[-1,3200,"\n\n"],[1,3430,"**"],[-1,3430,"业务"],[1,3442,"**"],[-1,3442,"\n\n"],[1,3482,"\n"],[-1,3482," "],[1,3670,"**"],[-1,3670,"表现"],[1,3695,"**"],[-1,3695,"\n\n"],[1,3744,"\n"],[-1,3744," "],[1,3903,"**ew层**"],[-1,3903,"View层\n\n"],[1,3972,"**联系**"],[-1,3972,"各层联系\n\n"],[1,4183,"\n"],[-1,4183," "],[1,4361,"==**"],[-1,4361,"\n\n"],[1,4584,"  "],[-1,4584,"**"],[1,4634,"in"],[-1,4634,"pr"],[-1,4755,"in"],[1,4758,"+S"],[-1,6214,"**"],[1,6219," 1"],[-1,6225,"Sp"],[1,6231," \n"],[1,6237,"\n"],[-1,6237," "],[1,6254,"  "],[-1,6254,"\n\n"],[1,6382,"S"],[-1,6382," "],[1,6447,"p"],[-1,6447," "],[-1,6465,"Sp"],[1,6474,"开源"],[-1,6489,"Sp"],[1,6495,"是于"],[-1,8655,"pr"],[1,8660,"使用"],[-1,9350,"pr"],[1,9356,"用途"],[-1,9815,"pr"],[1,9820,"中受"],[-1,10014,"pr"],[1,10019,"是一"],[-1,10153,"面向"],[1,10157,"（A"],[1,10329,"。\n"],[-1,10329,"框架"],[1,10426,"\n##"],[-1,10426,"。\n\n"],[-1,10611,"##"],[1,10617,".2"],[1,10682,"、"],[-1,10682,"."],[1,10692,"S"],[-1,10692,"2"],[1,10864,"p"],[-1,10864,"、"],[1,10887,"r"],[-1,10887,"S"],[1,10908,"i"],[-1,10908,"p"],[1,10914,"n"],[-1,10914,"r"],[-1,10939,"in"],[1,10942,"MV"],[1,11237,"\n\n"],[-1,11237,"  "],[1,11290," "],[-1,11290,"\n"],[1,11324," "],[-1,11324,"\n"],[1,11332,"S"],[-1,11332," "],[1,11384,"p"],[-1,11384," "],[-1,11425,"Sp"],[1,11435,"属于"],[-1,11449,"Sp"],[1,11455,"Fr"],[1,19587,""],[-1,19587,"。"]],[19588,19588],[24,24]]],[1570887479385,["GJX@GJXAIOU",[[1,19588,"\n    * "]],[19588,19588],[19595,19595]]],[1570887479536,["GJX@GJXAIOU",[[-1,19589,"    * "],[1,19595,"\n\n"]],[19595,19595],[19590,19590]]],[1570887479653,["GJX@GJXAIOU",[[1,19591,"\n"]],[19590,19590],[19591,19591]]],[1570887480455,["GJX@GJXAIOU",[[1,19592,"\n"]],[19591,19591],[19592,19592]]],[1570887480636,["GJX@GJXAIOU",[[1,19593,"\n"]],[19592,19592],[19593,19593]]],[1570887486627,["GJX@GJXAIOU",[[1,19593,"## kuangj"]],[19593,19593],[19602,19602]]],[1570887489072,["GJX@GJXAIOU",[[-1,19594,"# kuangj"]],[19602,19602],[19594,19594]]],[1570887490776,["GJX@GJXAIOU",[[1,19594," kuangj"]],[19594,19594],[19601,19601]]],[1570887491885,["GJX@GJXAIOU",[[-1,19595,"kuangj"]],[19601,19601],[19595,19595]]],[1570887494436,["GJX@GJXAIOU",[[1,19595,"狂阶"]],[19595,19595],[19597,19597]]],[1570887499097,["GJX@GJXAIOU",[[-1,19595,"狂阶"]],[19597,19597],[19595,19595]]],[1570887506527,["GJX@GJXAIOU",[[1,19595,"框架整合示例："]],[19595,19595],[19602,19602]]],[1570887507079,["GJX@GJXAIOU",[[-1,19601,"："]],[19602,19602],[19601,19601]]],[1570887507587,["GJX@GJXAIOU",[[1,19602,"\n"]],[19601,19601],[19602,19602]]],[1570887573593,[null,[[-1,24,"\n*原理*"],[1,29,"框架原理\n"],[-1,41,"**"],[1,43,"作用\n\n"],[1,46," "],[1,48,"是"],[-1,49,"是"],[-1,52," "],[1,69," "],[1,70," "],[-1,71," "],[-1,73," "],[1,79," "],[-1,81," "],[1,90," "],[-1,92," "],[1,94," "],[-1,96," "],[1,129," "],[-1,131," "],[1,135," "],[-1,137," "],[-1,141,"使用"],[1,145,"使用"],[-1,157,"请求"],[1,161,"请求"],[-1,169,"\n\n"],[-1,173,"s"],[1,174,"\n"],[1,176,"sp"],[-1,188,"，m"],[1,193,"my"],[-1,212,"**"],[-1,225,"Sp"],[1,227,"\n\n"],[-1,243,"."],[1,244,"\n"],[1,380,"客户"],[1,386," "],[-1,388," "],[-1,404,"分发"],[1,412,"分发"],[-1,414,"\n\n"],[-1,437,"2"],[1,438,"\n"],[-1,442,"i "],[1,444,"由 Di"],[1,458," "],[-1,460," "],[1,464," "],[-1,466," "],[-1,479,"找到"],[1,503,"找到"],[1,508," "],[-1,510," "],[-1,519,"\n\n；3"],[1,523,"；\n"],[1,750,"Co"],[1,758," "],[-1,760," "],[1,771," "],[-1,773," "],[-1,784,"\n\n"],[-1,802,"4"],[1,803,"\n"],[1,807,"Di"],[-1,817,"clvt"],[1,821,"vlet "],[-1,823," "],[1,844," "],[-1,846," "],[-1,851,"\n5"],[1,857,"视图"],[-1,870,"!["],[-1,933,"Sp"],[1,935,"\n\n"],[1,1826,"Sp"],[-1,1852,"它可"],[1,1856,"它可"],[-1,1869,"["],[1,1871,"a"],[-1,1873,"]("],[1,1875,"中的"],[-1,1896,"），"],[1,1900,"），"],[1,1971,"- "],[-1,1973,"- "],[1,2051,"**"],[-1,2053,"**"],[-1,2114,"。在"],[1,2118,"。在"],[-1,2173,"**"],[1,2186,"\n要"],[-1,2195,"1."],[1,2199,"先写"],[-1,2254,"2."],[1,2258,"写M"],[-1,2349,"3."],[1,2353,"写M"],[-1,2365,"Ma"],[1,2369,"Ma"],[-1,2394,"。\n"],[-1,2398,"4."],[1,2400,"。\n"],[1,2402,"写S"],[1,2415,"**"],[-1,2417,"**"],[-1,2449,"。\n"],[-1,2453,"5.-"],[1,2456,"。\n- 写"],[1,2472,"**"],[-1,2474,"**"],[-1,2484,"，获"],[-1,2488,"取"],[1,2489,"，"],[1,2491,"获取"],[-1,2544,"。\n"],[-1,2548,"6.-J "],[1,2553,"。\n-  写J"],[-1,2587,"=="],[1,2591,"> "],[-1,2598,"=="],[1,2602,"> "],[-1,2613,"=="],[1,2617,"> "],[-1,2624,"["],[1,2626,"a"],[-1,2628,"]("],[1,2633,"> "],[-1,2646,"=="],[1,2650,"> "],[-1,2666,"=="],[1,2670,"> ."],[-1,2672,".p. ==S"],[1,2679,"p\n\n\n"],[-1,2686,"p"],[1,2687,"\n"],[1,2689,"Sp"],[1,2714,"2 "],[-1,2716,"2 "],[1,2726,"**"],[-1,2728,"**"],[-1,2737,"\nS"],[-1,2741,"p"],[1,2742,"\n"],[1,2744,"Sp"],[1,2759,"**"],[-1,2761,"**"],[-1,2776,"\nm"],[-1,2780,"y"],[1,2781,"\n"],[1,2783,"my"],[1,2800,"**"],[-1,2802,"**"],[-1,2807," "],[1,2809,"数"],[-1,2813," 起\n\n**；Sp"],[1,2822,"起来**；\n\n"],[1,2824,"Sp"],[-1,2840,"与 于"],[1,2843,"于 S"],[1,2852,"- "],[-1,2854,"- "],[1,2870,"："],[-1,2872,"："],[-1,2893,"my"],[1,2897,"my"],[1,2924,"- "],[-1,2926,"- "],[1,3058,"- "],[-1,3060,"- "],[-1,3084,"它允"],[1,3088,"它允"],[-1,3119,"，如"],[1,3123,"，如"],[-1,3182,"**"],[1,3184,"持久"],[-1,3198,"**"],[1,3200,"\n\n"],[-1,3428,"**"],[1,3430,"业务"],[-1,3440,"**"],[1,3442,"\n\n"],[-1,3480,"\n"],[1,3481," "],[-1,3668,"**"],[1,3670,"表现"],[-1,3693,"**"],[1,3695,"\n\n"],[-1,3742,"\n"],[1,3743," "],[-1,3901,"**ew层**"],[1,3908,"View层\n\n"],[-1,3970,"**联系**"],[1,3976,"各层联系\n\n"],[-1,4181,"\n"],[1,4182," "],[-1,4359,"==**"],[1,4363,"\n\n"],[-1,4584,"  "],[1,4586,"**"],[-1,4634,"in"],[1,4636,"pr"],[1,4755,"in"],[-1,4756,"+S"],[1,6214,"**"],[-1,6217," 1"],[1,6225,"Sp"],[-1,6229," \n"],[-1,6237,"\n"],[1,6238," "],[-1,6254,"  "],[1,6256,"\n\n"],[-1,6382,"S"],[1,6383," "],[-1,6447,"p"],[1,6448," "],[1,6465,"Sp"],[-1,6472,"开源"],[1,6489,"Sp"],[-1,6493,"是于"],[1,8655,"pr"],[-1,8658,"使用"],[1,9350,"pr"],[-1,9354,"用途"],[1,9815,"pr"],[-1,9818,"中受"],[1,10014,"pr"],[-1,10017,"是一"],[1,10153,"面向"],[-1,10155,"（A"],[-1,10329,"。\n"],[1,10331,"框架"],[-1,10426,"\n##"],[1,10429,"。\n\n"],[1,10611,"##"],[-1,10615,".2"],[-1,10682,"、"],[1,10683,"."],[-1,10692,"S"],[1,10693,"2"],[-1,10864,"p"],[1,10865,"、"],[-1,10887,"r"],[1,10888,"S"],[-1,10908,"i"],[1,10909,"p"],[-1,10914,"n"],[1,10915,"r"],[1,10939,"in"],[-1,10940,"MV"],[-1,11237,"\n\n"],[1,11239,"  "],[-1,11290," "],[1,11291,"\n"],[-1,11324," "],[1,11325,"\n"],[-1,11332,"S"],[1,11333," "],[-1,11384,"p"],[1,11385," "],[1,11425,"Sp"],[-1,11433,"属于"],[1,11449,"Sp"],[-1,11453,"Fr"],[1,19587,"。"],[-1,19588," "]],[24,24],[19588,19588]]],[1570887573593,[null,[[1,24,"\n*原理*"],[-1,24,"框架原理\n"],[1,41,"**"],[-1,41,"作用\n\n"],[-1,48," "],[-1,51,"是"],[1,53,"是"],[1,55," "],[-1,71," "],[-1,73," "],[1,75," "],[1,76," "],[-1,81," "],[1,84," "],[-1,92," "],[1,95," "],[-1,96," "],[1,99," "],[-1,131," "],[1,134," "],[-1,137," "],[1,140," "],[1,143,"使用"],[-1,145,"使用"],[1,159,"请求"],[-1,161,"请求"],[1,171,"\n\n"],[1,173,"s"],[-1,173,"\n"],[-1,176,"sp"],[1,190,"，m"],[-1,193,"my"],[1,214,"**"],[1,225,"Sp"],[-1,225,"\n\n"],[1,243,"."],[-1,243,"\n"],[-1,380,"客户"],[-1,388," "],[1,391," "],[1,406,"分发"],[-1,412,"分发"],[1,416,"\n\n"],[1,437,"2"],[-1,437,"\n"],[1,442,"i "],[-1,442,"由 Di"],[-1,460," "],[1,463," "],[-1,466," "],[1,469," "],[1,481,"找到"],[-1,503,"找到"],[-1,510," "],[1,513," "],[1,521,"\n\n；3"],[-1,521,"；\n"],[-1,750,"Co"],[-1,760," "],[1,763," "],[-1,773," "],[1,776," "],[1,786,"\n\n"],[1,802,"4"],[-1,802,"\n"],[-1,807,"Di"],[1,819,"clvt"],[-1,819,"vlet "],[1,826," "],[-1,846," "],[1,849," "],[1,853,"\n5"],[-1,857,"视图"],[1,872,"!["],[1,933,"Sp"],[-1,933,"\n\n"],[-1,1826,"Sp"],[1,1854,"它可"],[-1,1856,"它可"],[1,1871,"["],[-1,1872,"a"],[1,1875,"]("],[-1,1875,"中的"],[1,1898,"），"],[-1,1900,"），"],[-1,1973,"- "],[1,1977,"- "],[-1,2053,"**"],[1,2057,"**"],[1,2116,"。在"],[-1,2118,"。在"],[1,2175,"**"],[-1,2186,"\n要"],[1,2197,"1."],[-1,2199,"先写"],[1,2256,"2."],[-1,2258,"写M"],[1,2351,"3."],[-1,2353,"写M"],[1,2367,"Ma"],[-1,2369,"Ma"],[1,2396,"。\n"],[1,2398,"4."],[-1,2398,"。\n"],[-1,2402,"写S"],[-1,2417,"**"],[1,2421,"**"],[1,2451,"。\n"],[1,2453,"5.-"],[-1,2453,"。\n- 写"],[-1,2474,"**"],[1,2478,"**"],[1,2486,"，获"],[1,2488,"取"],[-1,2488,"，"],[-1,2491,"获取"],[1,2546,"。\n"],[1,2548,"6.-J "],[-1,2548,"。\n-  写J"],[1,2589,"=="],[-1,2591,"> "],[1,2600,"=="],[-1,2602,"> "],[1,2615,"=="],[-1,2617,"> "],[1,2626,"["],[-1,2627,"a"],[1,2630,"]("],[-1,2633,"> "],[1,2648,"=="],[-1,2650,"> "],[1,2668,"=="],[-1,2670,"> ."],[1,2675,".p. ==S"],[-1,2675,"p\n\n\n"],[1,2686,"p"],[-1,2686,"\n"],[-1,2689,"Sp"],[-1,2716,"2 "],[1,2720,"2 "],[-1,2728,"**"],[1,2732,"**"],[1,2739,"\nS"],[1,2741,"p"],[-1,2741,"\n"],[-1,2744,"Sp"],[-1,2761,"**"],[1,2765,"**"],[1,2778,"\nm"],[1,2780,"y"],[-1,2780,"\n"],[-1,2783,"my"],[-1,2802,"**"],[1,2806,"**"],[1,2809," "],[-1,2810,"数"],[1,2815," 起\n\n**；Sp"],[-1,2815,"起来**；\n\n"],[-1,2824,"Sp"],[1,2842,"与 于"],[-1,2842,"于 S"],[-1,2854,"- "],[1,2858,"- "],[-1,2872,"："],[1,2875,"："],[1,2895,"my"],[-1,2897,"my"],[-1,2926,"- "],[1,2930,"- "],[-1,3060,"- "],[1,3064,"- "],[1,3086,"它允"],[-1,3088,"它允"],[1,3121,"，如"],[-1,3123,"，如"],[1,3184,"**"],[-1,3184,"持久"],[1,3200,"**"],[-1,3200,"\n\n"],[1,3430,"**"],[-1,3430,"业务"],[1,3442,"**"],[-1,3442,"\n\n"],[1,3482,"\n"],[-1,3482," "],[1,3670,"**"],[-1,3670,"表现"],[1,3695,"**"],[-1,3695,"\n\n"],[1,3744,"\n"],[-1,3744," "],[1,3903,"**ew层**"],[-1,3903,"View层\n\n"],[1,3972,"**联系**"],[-1,3972,"各层联系\n\n"],[1,4183,"\n"],[-1,4183," "],[1,4361,"==**"],[-1,4361,"\n\n"],[1,4584,"  "],[-1,4584,"**"],[1,4634,"in"],[-1,4634,"pr"],[-1,4755,"in"],[1,4758,"+S"],[-1,6214,"**"],[1,6219," 1"],[-1,6225,"Sp"],[1,6231," \n"],[1,6237,"\n"],[-1,6237," "],[1,6254,"  "],[-1,6254,"\n\n"],[1,6382,"S"],[-1,6382," "],[1,6447,"p"],[-1,6447," "],[-1,6465,"Sp"],[1,6474,"开源"],[-1,6489,"Sp"],[1,6495,"是于"],[-1,8655,"pr"],[1,8660,"使用"],[-1,9350,"pr"],[1,9356,"用途"],[-1,9815,"pr"],[1,9820,"中受"],[-1,10014,"pr"],[1,10019,"是一"],[-1,10153,"面向"],[1,10157,"（A"],[1,10329,"。\n"],[-1,10329,"框架"],[1,10426,"\n##"],[-1,10426,"。\n\n"],[-1,10611,"##"],[1,10617,".2"],[1,10682,"、"],[-1,10682,"."],[1,10692,"S"],[-1,10692,"2"],[1,10864,"p"],[-1,10864,"、"],[1,10887,"r"],[-1,10887,"S"],[1,10908,"i"],[-1,10908,"p"],[1,10914,"n"],[-1,10914,"r"],[-1,10939,"in"],[1,10942,"MV"],[1,11237,"\n\n"],[-1,11237,"  "],[1,11290," "],[-1,11290,"\n"],[1,11324," "],[-1,11324,"\n"],[1,11332,"S"],[-1,11332," "],[1,11384,"p"],[-1,11384," "],[-1,11425,"Sp"],[1,11435,"属于"],[-1,11449,"Sp"],[1,11455,"Fr"],[-1,19587,"。"],[1,19589," "]],[19588,19588],[24,24]]],[1570887535681,["GJX@GJXAIOU",[[1,19603,"\n"]],[19602,19602],[19603,19603]]],[1570887535861,["GJX@GJXAIOU",[[1,19604,"\n"]],[19603,19603],[19604,19604]]],[1570887536043,["GJX@GJXAIOU",[[1,19605,"\n"]],[19604,19604],[19605,19605]]],[1570887536228,["GJX@GJXAIOU",[[1,19606,"\n"]],[19605,19605],[19606,19606]]],[1570887538889,["GJX@GJXAIOU",[[1,19603,"# 3、SSM整合\n\n 下面主要介绍三大框架的整合，至于环境的搭建以及项目的创建，参看上面的博文。这次整合我分了2个配置文件，分别是spring-mybatis.xml，包含spring和mybatis的配置文件，还有个是spring-mvc的配置文件，此外有2个资源文件：jdbc.propertis和log4j.properties。完整目录结构如下（最后附上源码下载地址）：\n\n                                                                        ![](https://images2015.cnblogs.com/blog/441423/201508/441423-20150830174644562-871463833.png)\n\n使用框架的版本：\n\n       Spring 4.0.2 RELEASE\n\n       Spring MVC 4.0.2 RELEASE\n\n       MyBatis 3.2.6\n\n## 3.1、Maven引入需要的JAR包\n\n    在pom.xml中引入jar包\n\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n    <modelVersion>4.0.0</modelVersion>\n    <groupId>com.javen.maven01</groupId>\n    <artifactId>maven01</artifactId>\n    <packaging>war</packaging>\n    <version>0.0.1-SNAPSHOT</version>\n    <name>maven01 Maven Webapp</name>\n    <url>http://maven.apache.org</url>\n\n    <properties>  \n        <!-- spring版本号 -->  \n        <spring.version>4.0.2.RELEASE</spring.version>  \n        <!-- mybatis版本号 -->  \n        <mybatis.version>3.2.6</mybatis.version>  \n        <!-- log4j日志文件管理包版本 -->  \n        <slf4j.version>1.7.7</slf4j.version>  \n        <log4j.version>1.2.17</log4j.version>  \n    </properties> \n\n    <dependencies>\n        <dependency>\n            <groupId>junit</groupId>\n            <artifactId>junit</artifactId>\n            <version>3.8.1</version>\n             <!-- 表示开发的时候引入，发布的时候不会加载此包 -->  \n            <scope>test</scope>\n        </dependency>\n        <!-- <dependency>\n            <groupId>javax.servlet</groupId>\n            <artifactId>javax.servlet-api</artifactId>\n            <version>3.1.0</version>\n        </dependency> -->\n\n         <!-- spring核心包 -->  \n        <dependency>  \n            <groupId>org.springframework</groupId>  \n            <artifactId>spring-core</artifactId>  \n            <version>${spring.version}</version>  \n        </dependency>  \n\n        <dependency>  \n            <groupId>org.springframework</groupId>  \n            <artifactId>spring-web</artifactId>  \n            <version>${spring.version}</version>  \n        </dependency>  \n        <dependency>  \n            <groupId>org.springframework</groupId>  \n            <artifactId>spring-oxm</artifactId>  \n            <version>${spring.version}</version>  \n        </dependency>  \n        <dependency>  \n            <groupId>org.springframework</groupId>  \n            <artifactId>spring-tx</artifactId>  \n            <version>${spring.version}</version>  \n        </dependency>  \n\n        <dependency>  \n            <groupId>org.springframework</groupId>  \n            <artifactId>spring-jdbc</artifactId>  \n            <version>${spring.version}</version>  \n        </dependency>  \n\n        <dependency>  \n            <groupId>org.springframework</groupId>  \n            <artifactId>spring-webmvc</artifactId>  \n            <version>${spring.version}</version>  \n        </dependency>  \n        <dependency>  \n            <groupId>org.springframework</groupId>  \n            <artifactId>spring-aop</artifactId>  \n            <version>${spring.version}</version>  \n        </dependency>  \n\n        <dependency>  \n            <groupId>org.springframework</groupId>  \n            <artifactId>spring-context-support</artifactId>  \n            <version>${spring.version}</version>  \n        </dependency>  \n\n        <dependency>  \n            <groupId>org.springframework</groupId>  \n            <artifactId>spring-test</artifactId>  \n            <version>${spring.version}</version>  \n        </dependency>  \n        <!-- mybatis核心包 -->  \n        <dependency>  \n            <groupId>org.mybatis</groupId>  \n            <artifactId>mybatis</artifactId>  \n            <version>${mybatis.version}</version>  \n        </dependency>  \n         <!-- mybatis/spring包 -->  \n        <dependency>  \n            <groupId>org.mybatis</groupId>  \n            <artifactId>mybatis-spring</artifactId>  \n            <version>1.2.2</version>  \n        </dependency>  \n\n         <!-- 导入java ee jar 包 -->  \n        <dependency>  \n            <groupId>javax</groupId>  \n            <artifactId>javaee-api</artifactId>  \n            <version>7.0</version>  \n        </dependency>  \n\n         <!-- 导入Mysql数据库链接jar包 -->  \n        <dependency>  \n            <groupId>mysql</groupId>  \n            <artifactId>mysql-connector-java</artifactId>  \n            <version>5.1.36</version>  \n        </dependency>  \n        <!-- 导入dbcp的jar包，用来在applicationContext.xml中配置数据库 -->  \n        <dependency>  \n            <groupId>commons-dbcp</groupId>  \n            <artifactId>commons-dbcp</artifactId>  \n            <version>1.2.2</version>  \n        </dependency>  \n\n        <!-- JSTL标签类 -->  \n        <dependency>  \n            <groupId>jstl</groupId>  \n            <artifactId>jstl</artifactId>  \n            <version>1.2</version>  \n        </dependency>  \n        <!-- 日志文件管理包 -->  \n        <!-- log start -->  \n        <dependency>  \n            <groupId>log4j</groupId>  \n            <artifactId>log4j</artifactId>  \n            <version>${log4j.version}</version>  \n        </dependency>  \n\n        <!-- 格式化对象，方便输出日志 -->  \n        <dependency>  \n            <groupId>com.alibaba</groupId>  \n            <artifactId>fastjson</artifactId>  \n            <version>1.1.41</version>  \n        </dependency>  \n\n        <dependency>  \n            <groupId>org.slf4j</groupId>  \n            <artifactId>slf4j-api</artifactId>  \n            <version>${slf4j.version}</version>  \n        </dependency>  \n\n        <dependency>  \n            <groupId>org.slf4j</groupId>  \n            <artifactId>slf4j-log4j12</artifactId>  \n            <version>${slf4j.version}</version>  \n        </dependency>  \n        <!-- log end -->  \n        <!-- 映入JSON -->  \n        <dependency>  \n            <groupId>org.codehaus.jackson</groupId>  \n            <artifactId>jackson-mapper-asl</artifactId>  \n            <version>1.9.13</version>  \n        </dependency>  \n        <!-- 上传组件包 -->  \n        <dependency>  \n            <groupId>commons-fileupload</groupId>  \n            <artifactId>commons-fileupload</artifactId>  \n            <version>1.3.1</version>  \n        </dependency>  \n        <dependency>  \n            <groupId>commons-io</groupId>  \n            <artifactId>commons-io</artifactId>  \n            <version>2.4</version>  \n        </dependency>  \n        <dependency>  \n            <groupId>commons-codec</groupId>  \n            <artifactId>commons-codec</artifactId>  \n            <version>1.9</version>  \n        </dependency>  \n\n    </dependencies>\n\n    <build>\n        <finalName>maven01</finalName>\n        <plugins>\n            <plugin>\n                <groupId>org.eclipse.jetty</groupId>\n                <artifactId>jetty-maven-plugin</artifactId>\n                <version>9.2.8.v20150217</version>\n                <configuration>\n                    <httpConnector>\n                        <port>80</port>\n                    </httpConnector>\n                    <stopKey>shutdown</stopKey>\n                    <stopPort>9966</stopPort>\n                </configuration>\n            </plugin>\n        </plugins>\n    </build>\n\n</project>\n\n## 3.2、整合SpringMVC\n\n### 3.2.1、配置spring-mvc.xml\n\n配置里面的注释也很详细，主要是自动扫描控制器，视图模式，注解的启动这三个。\n\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>  \n<beans xmlns=\"http://www.springframework.org/schema/beans\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:p=\"http://www.springframework.org/schema/p\" xmlns:context=\"http://www.springframework.org/schema/context\" xmlns:mvc=\"http://www.springframework.org/schema/mvc\" xsi:schemaLocation=\"http://www.springframework.org/schema/beans    \n                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd    \n                        http://www.springframework.org/schema/context    \n                        http://www.springframework.org/schema/context/spring-context-3.1.xsd    \n                        http://www.springframework.org/schema/mvc    \n                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd\">  \n    <!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->  \n    <context:component-scan base-package=\"com.javen.controller\" />  \n    <!-- 扩充了注解驱动，可以将请求参数绑定到控制器参数 -->\n    <mvc:annotation-driven/>\n    <!-- 静态资源处理  css js imgs -->\n    <mvc:resources location=\"/resources/**\" mapping=\"/resources\"/>\n\n    <!--避免IE执行AJAX时，返回JSON出现下载文件 -->  \n    <bean id=\"mappingJacksonHttpMessageConverter\" class=\"org.springframework.http.converter.json.MappingJacksonHttpMessageConverter\">  \n        <property name=\"supportedMediaTypes\">  \n            <list>  \n                <value>text/html;charset=UTF-8</value>  \n            </list>  \n        </property>  \n    </bean>  \n    <!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->  \n    <bean class=\"org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter\">  \n        <property name=\"messageConverters\">  \n            <list>  \n                <ref bean=\"mappingJacksonHttpMessageConverter\" /> <!-- JSON转换器 -->  \n            </list>  \n        </property>  \n    </bean>  \n\n    <!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->  \n    <bean id=\"multipartResolver\" class=\"org.springframework.web.multipart.commons.CommonsMultipartResolver\">    \n        <!-- 默认编码 -->  \n        <property name=\"defaultEncoding\" value=\"utf-8\" />    \n        <!-- 文件大小最大值 -->  \n        <property name=\"maxUploadSize\" value=\"10485760000\" />    \n        <!-- 内存中的最大值 -->  \n        <property name=\"maxInMemorySize\" value=\"40960\" />    \n        <!-- 启用是为了推迟文件解析，以便捕获文件大小异常 -->\n        <property name=\"resolveLazily\" value=\"true\"/>\n    </bean>   \n\n    <!-- 配置ViewResolver 。可用多个ViewResolver 。使用order属性排序。   InternalResourceViewResolver 放在最后-->\n    <bean class=\"org.springframework.web.servlet.view.ContentNegotiatingViewResolver\">\n    <property name=\"order\" value=\"1\"></property>\n        <property name=\"mediaTypes\">\n            <map>\n                <!-- 告诉视图解析器，返回的类型为json格式 -->\n                <entry key=\"json\" value=\"application/json\" />\n                <entry key=\"xml\" value=\"application/xml\" />\n                <entry key=\"htm\" value=\"text/htm\" />\n            </map>\n        </property>\n        <property name=\"defaultViews\">\n            <list>\n                <!-- ModelAndView里的数据变成JSON -->\n                <bean class=\"org.springframework.web.servlet.view.json.MappingJacksonJsonView\" />\n            </list>\n        </property>\n        <property name=\"ignoreAcceptHeader\" value=\"true\"></property>\n    </bean>\n\n   <!-- 定义跳转的文件的前后缀 ，视图模式配置-->  \n    <bean class=\"org.springframework.web.servlet.view.InternalResourceViewResolver\">  \n        <!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->  \n        <property name=\"prefix\" value=\"/WEB-INF/jsp/\" />  \n        <property name=\"suffix\" value=\".jsp\" />  \n    </bean>  \n</beans>  \n\n### 3.2.2、配置web.xml文件\n\n 配置的spring-mvc的Servlet就是为了完成SpringMVC+MAVEN的整合。\n\nweb.xml  \n\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>  \n<web-app xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns=\"http://java.sun.com/xml/ns/javaee\" xsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\" version=\"3.0\">  \n    <display-name>Archetype Created Web Application</display-name>  \n    <!-- Spring和mybatis的配置文件 -->  \n   <!-- <context-param>  \n        <param-name>contextConfigLocation</param-name>  \n        <param-value>classpath:spring-mybatis.xml</param-value>  \n    </context-param> -->\n    <!-- 编码过滤器 -->  \n    <filter>  \n        <filter-name>encodingFilter</filter-name>  \n        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>  \n        <async-supported>true</async-supported>  \n        <init-param>  \n            <param-name>encoding</param-name>  \n            <param-value>UTF-8</param-value>  \n        </init-param>  \n    </filter>  \n    <filter-mapping>  \n        <filter-name>encodingFilter</filter-name>  \n        <url-pattern>/*</url-pattern>  \n    </filter-mapping>  \n    <!-- Spring监听器 -->  \n   <!-- <listener>  \n        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>  \n    </listener> -->\n    <!-- 防止Spring内存溢出监听器 -->  \n    <!-- <listener>  \n        <listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>  \n    </listener> --> \n\n    <!-- Spring MVC servlet -->  \n    <servlet>  \n        <servlet-name>SpringMVC</servlet-name>  \n        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>  \n        <init-param>  \n            <param-name>contextConfigLocation</param-name>  \n            <param-value>classpath:spring-mvc.xml</param-value>  \n        </init-param>  \n        <load-on-startup>1</load-on-startup>  \n        <async-supported>true</async-supported>  \n    </servlet>  \n    <servlet-mapping>  \n        <servlet-name>SpringMVC</servlet-name>  \n        <!-- 此处可以可以配置成*.do，对应struts的后缀习惯 -->  \n        <url-pattern>/</url-pattern>  \n    </servlet-mapping>  \n    <welcome-file-list>  \n        <welcome-file>/index.jsp</welcome-file>  \n    </welcome-file-list>  \n\n</web-app>  \n\n### 3.2.3、Log4j的配置\n\n   为了方便调试，一般都会使用日志来输出信息，Log4j是Apache的一个开放源代码项目，通过使用Log4j，我们可以控制日志信息输送的目的地是控制台、文件、GUI组件，甚至是套接口服务器、NT的事件记录器、UNIX Syslog守护进程等；我们也可以控制每一条日志的输出格式；通过定义每一条日志信息的级别，我们能够更加细致地控制日志的生成过程。\n\n      Log4j的配置很简单，而且也是通用的，下面给出一个基本的配置，换到其他项目中也无需做多大的调整，如果想做调整或者想了解Log4j的各种配置，参看我转载的一篇博文，很详细：[http://blog.csdn.net/zhshulin/article/details/37937365](http://blog.csdn.net/zhshulin/article/details/37937365)\n\n下面给出配置文件目录：\n\n ![](https://images2015.cnblogs.com/blog/441423/201508/441423-20150830161022859-271175533.png)\n\nlog4j.properties\n\nlog4j.rootLogger=INFO,Console,File  \n#定义日志输出目的地为控制台  \nlog4j.appender.Console=org.apache.log4j.ConsoleAppender  \nlog4j.appender.Console.Target=System.out  \n#可以灵活地指定日志输出格式，下面一行是指定具体的格式  \nlog4j.appender.Console.layout = org.apache.log4j.PatternLayout  \nlog4j.appender.Console.layout.ConversionPattern=[%c] - %m%n  \n\n#文件大小到达指定尺寸的时候产生一个新的文件  \nlog4j.appender.File = org.apache.log4j.RollingFileAppender  \n#指定输出目录  \nlog4j.appender.File.File = logs/ssm.log  \n#定义文件最大大小  \nlog4j.appender.File.MaxFileSize = 10MB  \n# 输出所以日志，如果换成DEBUG表示输出DEBUG以上级别日志  \nlog4j.appender.File.Threshold = ALL  \nlog4j.appender.File.layout = org.apache.log4j.PatternLayout  \nlog4j.appender.File.layout.ConversionPattern =[%p] [%d{yyyy-MM-dd HH\\:mm\\:ss}][%c]%m%n  \n\n### 3.2.4、使用Jetty测试\n\n**![](https://images2015.cnblogs.com/blog/441423/201508/441423-20150830165405344-862946687.png)**\n\npackage com.javen.model; public class User { private Integer id; private String userName; private String password; private Integer age; public Integer getId() { return id;\n    } public void setId(Integer id) { this.id = id;\n    } public String getUserName() { return userName;\n    } public void setUserName(String userName) { this.userName = userName == null ? null : userName.trim();\n    } public String getPassword() { return password;\n    } public void setPassword(String password) { this.password = password == null ? null : password.trim();\n    } public Integer getAge() { return age;\n    } public void setAge(Integer age) { this.age = age;\n    }\n\n    @Override public String toString() { return \"User [id=\" + id + \", userName=\" + userName + \", password=\"\n                + password + \", age=\" + age + \"]\";\n    }\n\n}\n\npackage com.javen.controller; import javax.servlet.http.HttpServletRequest; import org.slf4j.Logger; import org.slf4j.LoggerFactory; import org.springframework.stereotype.Controller; import org.springframework.ui.Model; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import com.javen.model.User;\n\n@Controller  \n@RequestMapping(\"/user\") // /user/**\npublic class UserController { private static Logger log=LoggerFactory.getLogger(UserController.class); // /user/test?id=1\n    @RequestMapping(value=\"/test\",method=RequestMethod.GET) public String test(HttpServletRequest request,Model model){ int userId = Integer.parseInt(request.getParameter(\"id\"));  \n        System.out.println(\"userId:\"+userId);\n        User user=null; if (userId==1) {\n             user = new User();  \n             user.setAge(11);\n             user.setId(1);\n             user.setPassword(\"123\");\n             user.setUserName(\"javen\");\n        }\n\n        log.debug(user.toString());\n        model.addAttribute(\"user\", user); return \"index\";  \n    }  \n} \n\n**                              ![](https://images2015.cnblogs.com/blog/441423/201508/441423-20150830165700734-984268491.png) ![](https://images2015.cnblogs.com/blog/441423/201508/441423-20150830165755156-107359445.png)**\n\n**在浏览器中输入：http://localhost/user/test?id=1**\n\n**![](https://images2015.cnblogs.com/blog/441423/201508/441423-20150830165857500-208786509.png)**\n\n**到此 SpringMVC+Maven 整合完毕**\n\n### \n3.3 Spring与MyBatis的整合\n\n**   取消****3.2.2 web.xml中注释的代码 **\n\n### 3.3.1、建立JDBC属性文件\n\njdbc.properties（文件编码修改为utf-8）\n\ndriver=com.mysql.jdbc.Driver\nurl=jdbc:mysql://localhost:3306/maven\nusername=root\npassword=root\n#定义初始连接数  \ninitialSize=0 #定义最大连接数  \nmaxActive=20 #定义最大空闲  \nmaxIdle=20 #定义最小空闲  \nminIdle=1 #定义最长等待时间  \nmaxWait=60000  \n\n**此时的目录结构为 **\n\n###                                                               ![](https://images2015.cnblogs.com/blog/441423/201508/441423-20150830170643640-637516889.png)\n\n### 3.3.2、建立spring-mybatis.xml配置文件\n\n    这个文件就是用来完成spring和mybatis的整合的。这里面也没多少行配置，主要的就是自动扫描，自动注入，配置数据库。注释也很详细，大家看看就明白了。\n\nspring-mybatis.xml\n\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>  \n<beans xmlns=\"http://www.springframework.org/schema/beans\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:p=\"http://www.springframework.org/schema/p\" xmlns:context=\"http://www.springframework.org/schema/context\" xmlns:mvc=\"http://www.springframework.org/schema/mvc\" xsi:schemaLocation=\"http://www.springframework.org/schema/beans    \n                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd    \n                        http://www.springframework.org/schema/context    \n                        http://www.springframework.org/schema/context/spring-context-3.1.xsd    \n                        http://www.springframework.org/schema/mvc    \n                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd\">  \n    <!-- 自动扫描 -->  \n    <context:component-scan base-package=\"com.javen\" />  \n\n    <!-- 引入配置文件 -->  \n    <bean id=\"propertyConfigurer\" class=\"org.springframework.beans.factory.config.PropertyPlaceholderConfigurer\">  \n        <property name=\"location\" value=\"classpath:jdbc.properties\" />  \n    </bean>  \n\n    <bean id=\"dataSource\" class=\"org.apache.commons.dbcp.BasicDataSource\" destroy-method=\"close\">  \n        <property name=\"driverClassName\" value=\"${driver}\" />  \n        <property name=\"url\" value=\"${url}\" />  \n        <property name=\"username\" value=\"${username}\" />  \n        <property name=\"password\" value=\"${password}\" />  \n        <!-- 初始化连接大小 -->  \n        <property name=\"initialSize\" value=\"${initialSize}\"></property>  \n        <!-- 连接池最大数量 -->  \n        <property name=\"maxActive\" value=\"${maxActive}\"></property>  \n        <!-- 连接池最大空闲 -->  \n        <property name=\"maxIdle\" value=\"${maxIdle}\"></property>  \n        <!-- 连接池最小空闲 -->  \n        <property name=\"minIdle\" value=\"${minIdle}\"></property>  \n        <!-- 获取连接最大等待时间 -->  \n        <property name=\"maxWait\" value=\"${maxWait}\"></property>  \n    </bean>  \n\n    <!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->  \n    <bean id=\"sqlSessionFactory\" class=\"org.mybatis.spring.SqlSessionFactoryBean\">  \n        <property name=\"dataSource\" ref=\"dataSource\" />  \n        <!-- 自动扫描mapping.xml文件 -->  \n        <property name=\"mapperLocations\" value=\"classpath:com/javen/mapping/*.xml\"></property>  \n    </bean>  \n\n    <!-- DAO接口所在包名，Spring会自动查找其下的类 -->  \n    <bean class=\"org.mybatis.spring.mapper.MapperScannerConfigurer\">  \n        <property name=\"basePackage\" value=\"com.javen.dao\" />  \n        <property name=\"sqlSessionFactoryBeanName\" value=\"sqlSessionFactory\"></property>  \n    </bean>  \n\n    <!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->  \n    <bean id=\"transactionManager\" class=\"org.springframework.jdbc.datasource.DataSourceTransactionManager\">  \n        <property name=\"dataSource\" ref=\"dataSource\" />  \n    </bean>  \n\n</beans>  \n\n### 3.4、JUnit测试\n\n  经过以上步骤，我们已经完成了Spring和mybatis的整合，这样我们就可以编写一段测试代码来试试是否成功了。\n\n#### 3.4.1、创建测试用表\n\n既然我们需要测试，那么我们就需要建立在数据库中建立一个测试表，这个表建的很简单，SQL语句为：\n\n-- ---------------------------- -- Table structure for `user_t` -- ----------------------------\nDROP TABLE IF EXISTS `user_t`; CREATE TABLE `user_t` (\n  `id` int(11) NOT NULL AUTO_INCREMENT,\n  `user_name` varchar(40) NOT NULL,\n  `password` varchar(255) NOT NULL,\n  `age` int(4) NOT NULL, PRIMARY KEY (`id`)\n) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8; -- ---------------------------- -- Records of user_t -- ----------------------------\nINSERT INTO `user_t` VALUES ('1', '测试', '345', '24'); INSERT INTO `user_t` VALUES ('2', 'javen', '123', '10');\n\n#### 3.4.2、利用MyBatis Generator自动创建代码\n\n参考博文：[http://blog.csdn.net/zhshulin/article/details/23912615](http://blog.csdn.net/zhshulin/article/details/23912615)\n\n 这个可根据表自动创建实体类、MyBatis映射文件以及DAO接口，当然，我习惯将生成的接口名改为IUserDao，而不是直接用它生成的UserMapper。如果不想麻烦就可以不改。完成后将文件复制到工程中。如图：\n\n                                                                  ![](https://images2015.cnblogs.com/blog/441423/201508/441423-20150830172815890-478987509.png)\n\n#### 3.4.3、建立Service接口和实现类\n\n**                                                                 ![](https://images2015.cnblogs.com/blog/441423/201508/441423-20150830173103875-2026469790.png)**\n\n下面给出具体的内容：\n\nIUserService.jave\n\npackage com.javen.service; import com.javen.model.User; public interface IUserService { public User getUserById(int userId);  \n} \n\nUserServiceImpl.java\n\npackage com.javen.service.impl; import javax.annotation.Resource; import org.springframework.stereotype.Service; import com.javen.dao.IUserDao; import com.javen.model.User; import com.javen.service.IUserService;\n\n@Service(\"userService\") public class UserServiceImpl implements IUserService {  \n    @Resource private IUserDao userDao; public User getUserById(int userId) { // TODO Auto-generated method stub \n        return this.userDao.selectByPrimaryKey(userId);  \n    }  \n\n} \n\n#### 3.4.4、建立测试类\n\n 测试类在src/test/java中建立，下面测试类中注释掉的部分是不使用Spring时，一般情况下的一种测试方法；如果使用了Spring那么就可以使用注解的方式来引入配置文件和类，然后再将service接口对象注入，就可以进行测试了。\n\n       如果测试成功，表示Spring和Mybatis已经整合成功了。输出信息使用的是Log4j打印到控制台。\n\npackage com.javen.testmybatis; import javax.annotation.Resource; import org.apache.log4j.Logger; import org.junit.Test; import org.junit.runner.RunWith; import org.springframework.test.context.ContextConfiguration; import org.springframework.test.context.junit4.SpringJUnit4ClassRunner; import com.alibaba.fastjson.JSON; import com.javen.model.User; import com.javen.service.IUserService;\n\n@RunWith(SpringJUnit4ClassRunner.class)     //表示继承了SpringJUnit4ClassRunner类 \n@ContextConfiguration(locations = {\"classpath:spring-mybatis.xml\"}) public class TestMyBatis { private static Logger logger = Logger.getLogger(TestMyBatis.class); // private ApplicationContext ac = null; \n @Resource private IUserService userService = null; // @Before // public void before() { // ac = new ClassPathXmlApplicationContext(\"applicationContext.xml\"); // userService = (IUserService) ac.getBean(\"userService\"); // } \n @Test public void test1() {  \n        User user = userService.getUserById(1); // System.out.println(user.getUserName()); // logger.info(\"值：\"+user.getUserName()); \n logger.info(JSON.toJSONString(user));  \n    }  \n} \n\n测试结果 \n\n![](https://images2015.cnblogs.com/blog/441423/201508/441423-20150830173453859-1226139271.png)\n\n#### 3.4.5、建立UserController类\n\nUserController.java  控制器   \n\npackage com.javen.controller; import java.io.File; import java.io.IOException; import java.util.Map; import javax.annotation.Resource; import javax.servlet.http.HttpServletRequest; import org.apache.commons.io.FileUtils; import org.slf4j.Logger; import org.slf4j.LoggerFactory; import org.springframework.http.HttpStatus; import org.springframework.http.ResponseEntity; import org.springframework.stereotype.Controller; import org.springframework.ui.Model; import org.springframework.web.bind.annotation.PathVariable; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.ResponseBody; import org.springframework.web.multipart.MultipartFile; import com.javen.model.User; import com.javen.service.IUserService;\n\n@Controller  \n@RequestMapping(\"/user\") // /user/**\npublic class UserController { private static Logger log=LoggerFactory.getLogger(UserController.class);\n     @Resource private IUserService userService; // /user/test?id=1\n    @RequestMapping(value=\"/test\",method=RequestMethod.GET) public String test(HttpServletRequest request,Model model){ int userId = Integer.parseInt(request.getParameter(\"id\"));  \n        System.out.println(\"userId:\"+userId);\n        User user=null; if (userId==1) {\n             user = new User();  \n             user.setAge(11);\n             user.setId(1);\n             user.setPassword(\"123\");\n             user.setUserName(\"javen\");\n        }\n\n        log.debug(user.toString());\n        model.addAttribute(\"user\", user); return \"index\";  \n    } // /user/showUser?id=1\n    @RequestMapping(value=\"/showUser\",method=RequestMethod.GET) public String toIndex(HttpServletRequest request,Model model){ int userId = Integer.parseInt(request.getParameter(\"id\"));  \n        System.out.println(\"userId:\"+userId);\n        User user = this.userService.getUserById(userId);  \n        log.debug(user.toString());\n        model.addAttribute(\"user\", user); return \"showUser\";  \n    } // /user/showUser2?id=1\n    @RequestMapping(value=\"/showUser2\",method=RequestMethod.GET) public String toIndex2(@RequestParam(\"id\") String id,Model model){ int userId = Integer.parseInt(id);  \n        System.out.println(\"userId:\"+userId);\n        User user = this.userService.getUserById(userId);  \n        log.debug(user.toString());\n        model.addAttribute(\"user\", user); return \"showUser\";  \n    } // /user/showUser3/{id}\n    @RequestMapping(value=\"/showUser3/{id}\",method=RequestMethod.GET) public String toIndex3(@PathVariable(\"id\")String id,Map<String, Object> model){ int userId = Integer.parseInt(id);  \n        System.out.println(\"userId:\"+userId);\n        User user = this.userService.getUserById(userId);  \n        log.debug(user.toString());\n        model.put(\"user\", user); return \"showUser\";  \n    } // /user/{id}\n    @RequestMapping(value=\"/{id}\",method=RequestMethod.GET) public @ResponseBody User getUserInJson(@PathVariable String id,Map<String, Object> model){ int userId = Integer.parseInt(id);  \n        System.out.println(\"userId:\"+userId);\n        User user = this.userService.getUserById(userId);  \n        log.info(user.toString()); return user;  \n    } // /user/{id}\n    @RequestMapping(value=\"/jsontype/{id}\",method=RequestMethod.GET) public ResponseEntity<User>  getUserInJson2(@PathVariable String id,Map<String, Object> model){ int userId = Integer.parseInt(id);  \n        System.out.println(\"userId:\"+userId);\n        User user = this.userService.getUserById(userId);  \n        log.info(user.toString()); return new ResponseEntity<User>(user,HttpStatus.OK);  \n    } //文件上传、\n    @RequestMapping(value=\"/upload\") public String showUploadPage(){ return \"user_admin/file\";\n    }\n\n    @RequestMapping(value=\"/doUpload\",method=RequestMethod.POST) public String doUploadFile(@RequestParam(\"file\")MultipartFile file) throws IOException{ if (!file.isEmpty()) {\n            log.info(\"Process file:{}\",file.getOriginalFilename());\n        }\n        FileUtils.copyInputStreamToFile(file.getInputStream(), new File(\"E:\\\\\",System.currentTimeMillis()+file.getOriginalFilename())); return \"succes\";\n    }\n} \n\n#### 3.4.6、新建jsp页面\n\nfile.jsp\n\n<%@ page language=\"java\" contentType=\"text/html; charset=utf-8\" pageEncoding=\"utf-8\"%>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n<html>\n<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n<title>Insert title here</title>\n</head>\n<body>\n    <h1>上传文件</h1>\n    <form method=\"post\" action=\"/user/doUpload\" enctype=\"multipart/form-data\">\n        <input type=\"file\" name=\"file\"/>\n        <input type=\"submit\" value=\"上传文件\"/>\n\n    </form>\n</body>\n</html>\n\nindex.jsp\n\n<html>\n<body>\n<h2>Hello World!</h2>\n</body>\n</html>\n\nshowUser.jsp\n\n<%@ page language=\"java\" import=\"java.util.*\" pageEncoding=\"utf-8\"%>  \n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\">  \n<html>  \n  <head>  \n    <title>测试</title>  \n  </head>  \n\n  <body> ${user.userName} </body>  \n</html>  \n\n**至此，完成Spring+SpingMVC+mybatis这三大框架整合完成。**\n\n#### 3.4.7、部署项目\n\n**输入地址：http://localhost/user/jsontype/2**\n\n![](https://images2015.cnblogs.com/blog/441423/201508/441423-20150830174520609-1121228290.png)\n\n  项目下载地址：[https://github.com/Javen205/SSM](https://github.com/Javen205/SSM)\n\n**    参考博客：http://blog.csdn.net/gebitan505/article/details/44455235**"]],[19603,19603],[48844,48844]]],[1570887691373,[null,[[-1,24,"\n*原理*"],[1,29,"框架原理\n"],[-1,41,"**"],[1,43,"作用\n\n"],[1,46," "],[1,48,"是"],[-1,49,"是"],[-1,52," "],[1,69," "],[1,70," "],[-1,71," "],[-1,73," "],[1,79," "],[-1,81," "],[1,90," "],[-1,92," "],[1,94," "],[-1,96," "],[1,129," "],[-1,131," "],[1,135," "],[-1,137," "],[-1,141,"使用"],[1,145,"使用"],[-1,157,"请求"],[1,161,"请求"],[-1,169,"\n\n"],[-1,173,"s"],[1,174,"\n"],[1,176,"sp"],[-1,188,"，m"],[1,193,"my"],[-1,212,"**"],[-1,225,"Sp"],[1,227,"\n\n"],[-1,243,"."],[1,244,"\n"],[1,380,"客户"],[1,386," "],[-1,388," "],[-1,404,"分发"],[1,412,"分发"],[-1,414,"\n\n"],[-1,437,"2"],[1,438,"\n"],[-1,442,"i "],[1,444,"由 Di"],[1,458," "],[-1,460," "],[1,464," "],[-1,466," "],[-1,479,"找到"],[1,503,"找到"],[1,508," "],[-1,510," "],[-1,519,"\n\n；3"],[1,523,"；\n"],[1,750,"Co"],[1,758," "],[-1,760," "],[1,771," "],[-1,773," "],[-1,784,"\n\n"],[-1,802,"4"],[1,803,"\n"],[1,807,"Di"],[-1,817,"clvt"],[1,821,"vlet "],[-1,823," "],[1,844," "],[-1,846," "],[-1,851,"\n5"],[1,857,"视图"],[-1,870,"!["],[-1,933,"Sp"],[1,935,"\n\n"],[1,1826,"Sp"],[-1,1852,"它可"],[1,1856,"它可"],[-1,1869,"["],[1,1871,"a"],[-1,1873,"]("],[1,1875,"中的"],[-1,1896,"），"],[1,1900,"），"],[1,1971,"- "],[-1,1973,"- "],[1,2051,"**"],[-1,2053,"**"],[-1,2114,"。在"],[1,2118,"。在"],[-1,2173,"**"],[1,2186,"\n要"],[-1,2195,"1."],[1,2199,"先写"],[-1,2254,"2."],[1,2258,"写M"],[-1,2349,"3."],[1,2353,"写M"],[-1,2365,"Ma"],[1,2369,"Ma"],[-1,2394,"。\n"],[-1,2398,"4."],[1,2400,"。\n"],[1,2402,"写S"],[1,2415,"**"],[-1,2417,"**"],[-1,2449,"。\n"],[-1,2453,"5.-"],[1,2456,"。\n- 写"],[1,2472,"**"],[-1,2474,"**"],[-1,2484,"，获"],[-1,2488,"取"],[1,2489,"，"],[1,2491,"获取"],[-1,2544,"。\n"],[-1,2548,"6.-J "],[1,2553,"。\n-  写J"],[-1,2587,"=="],[1,2591,"> "],[-1,2598,"=="],[1,2602,"> "],[-1,2613,"=="],[1,2617,"> "],[-1,2624,"["],[1,2626,"a"],[-1,2628,"]("],[1,2633,"> "],[-1,2646,"=="],[1,2650,"> "],[-1,2666,"=="],[1,2670,"> ."],[-1,2672,".p. ==S"],[1,2679,"p\n\n\n"],[-1,2686,"p"],[1,2687,"\n"],[1,2689,"Sp"],[1,2714,"2 "],[-1,2716,"2 "],[1,2726,"**"],[-1,2728,"**"],[-1,2737,"\nS"],[-1,2741,"p"],[1,2742,"\n"],[1,2744,"Sp"],[1,2759,"**"],[-1,2761,"**"],[-1,2776,"\nm"],[-1,2780,"y"],[1,2781,"\n"],[1,2783,"my"],[1,2800,"**"],[-1,2802,"**"],[-1,2807," "],[1,2809,"数"],[-1,2813," 起\n\n**；Sp"],[1,2822,"起来**；\n\n"],[1,2824,"Sp"],[-1,2840,"与 于"],[1,2843,"于 S"],[1,2852,"- "],[-1,2854,"- "],[1,2870,"："],[-1,2872,"："],[-1,2893,"my"],[1,2897,"my"],[1,2924,"- "],[-1,2926,"- "],[1,3058,"- "],[-1,3060,"- "],[-1,3084,"它允"],[1,3088,"它允"],[-1,3119,"，如"],[1,3123,"，如"],[-1,3182,"**"],[1,3184,"持久"],[-1,3198,"**"],[1,3200,"\n\n"],[-1,3428,"**"],[1,3430,"业务"],[-1,3440,"**"],[1,3442,"\n\n"],[-1,3480,"\n"],[1,3481," "],[-1,3668,"**"],[1,3670,"表现"],[-1,3693,"**"],[1,3695,"\n\n"],[-1,3742,"\n"],[1,3743," "],[-1,3901,"**ew层**"],[1,3908,"View层\n\n"],[-1,3970,"**联系**"],[1,3976,"各层联系\n\n"],[-1,4181,"\n"],[1,4182," "],[-1,4359,"==**"],[1,4363,"\n\n"],[-1,4584,"  "],[1,4586,"**"],[-1,4634,"in"],[1,4636,"pr"],[1,4755,"in"],[-1,4756,"+S"],[1,6214,"**"],[-1,6217," 1"],[1,6225,"Sp"],[-1,6229," \n"],[-1,6237,"\n"],[1,6238," "],[-1,6254,"  "],[1,6256,"\n\n"],[-1,6382,"S"],[1,6383," "],[-1,6447,"p"],[1,6448," "],[1,6465,"Sp"],[-1,6472,"开源"],[1,6489,"Sp"],[-1,6493,"是于"],[1,8655,"pr"],[-1,8658,"使用"],[1,9350,"pr"],[-1,9354,"用途"],[1,9815,"pr"],[-1,9818,"中受"],[1,10014,"pr"],[-1,10017,"是一"],[1,10153,"面向"],[-1,10155,"（A"],[-1,10329,"。\n"],[1,10331,"框架"],[-1,10426,"\n##"],[1,10429,"。\n\n"],[1,10611,"##"],[-1,10615,".2"],[-1,10682,"、"],[1,10683,"."],[-1,10692,"S"],[1,10693,"2"],[-1,10864,"p"],[1,10865,"、"],[-1,10887,"r"],[1,10888,"S"],[-1,10908,"i"],[1,10909,"p"],[-1,10914,"n"],[1,10915,"r"],[1,10939,"in"],[-1,10940,"MV"],[-1,11237,"\n\n"],[1,11239,"  "],[-1,11290," "],[1,11291,"\n"],[-1,11324," "],[1,11325,"\n"],[-1,11332,"S"],[1,11333," "],[-1,11384,"p"],[1,11385," "],[1,11425,"Sp"],[-1,11433,"属于"],[1,11449,"Sp"],[-1,11453,"Fr"],[1,19587,"。"],[-1,19588," "]],[24,24],[19588,19588]]],[1570887691373,[null,[[1,24,"\n*原理*"],[-1,24,"框架原理\n"],[1,41,"**"],[-1,41,"作用\n\n"],[-1,48," "],[-1,51,"是"],[1,53,"是"],[1,55," "],[-1,71," "],[-1,73," "],[1,75," "],[1,76," "],[-1,81," "],[1,84," "],[-1,92," "],[1,95," "],[-1,96," "],[1,99," "],[-1,131," "],[1,134," "],[-1,137," "],[1,140," "],[1,143,"使用"],[-1,145,"使用"],[1,159,"请求"],[-1,161,"请求"],[1,171,"\n\n"],[1,173,"s"],[-1,173,"\n"],[-1,176,"sp"],[1,190,"，m"],[-1,193,"my"],[1,214,"**"],[1,225,"Sp"],[-1,225,"\n\n"],[1,243,"."],[-1,243,"\n"],[-1,380,"客户"],[-1,388," "],[1,391," "],[1,406,"分发"],[-1,412,"分发"],[1,416,"\n\n"],[1,437,"2"],[-1,437,"\n"],[1,442,"i "],[-1,442,"由 Di"],[-1,460," "],[1,463," "],[-1,466," "],[1,469," "],[1,481,"找到"],[-1,503,"找到"],[-1,510," "],[1,513," "],[1,521,"\n\n；3"],[-1,521,"；\n"],[-1,750,"Co"],[-1,760," "],[1,763," "],[-1,773," "],[1,776," "],[1,786,"\n\n"],[1,802,"4"],[-1,802,"\n"],[-1,807,"Di"],[1,819,"clvt"],[-1,819,"vlet "],[1,826," "],[-1,846," "],[1,849," "],[1,853,"\n5"],[-1,857,"视图"],[1,872,"!["],[1,933,"Sp"],[-1,933,"\n\n"],[-1,1826,"Sp"],[1,1854,"它可"],[-1,1856,"它可"],[1,1871,"["],[-1,1872,"a"],[1,1875,"]("],[-1,1875,"中的"],[1,1898,"），"],[-1,1900,"），"],[-1,1973,"- "],[1,1977,"- "],[-1,2053,"**"],[1,2057,"**"],[1,2116,"。在"],[-1,2118,"。在"],[1,2175,"**"],[-1,2186,"\n要"],[1,2197,"1."],[-1,2199,"先写"],[1,2256,"2."],[-1,2258,"写M"],[1,2351,"3."],[-1,2353,"写M"],[1,2367,"Ma"],[-1,2369,"Ma"],[1,2396,"。\n"],[1,2398,"4."],[-1,2398,"。\n"],[-1,2402,"写S"],[-1,2417,"**"],[1,2421,"**"],[1,2451,"。\n"],[1,2453,"5.-"],[-1,2453,"。\n- 写"],[-1,2474,"**"],[1,2478,"**"],[1,2486,"，获"],[1,2488,"取"],[-1,2488,"，"],[-1,2491,"获取"],[1,2546,"。\n"],[1,2548,"6.-J "],[-1,2548,"。\n-  写J"],[1,2589,"=="],[-1,2591,"> "],[1,2600,"=="],[-1,2602,"> "],[1,2615,"=="],[-1,2617,"> "],[1,2626,"["],[-1,2627,"a"],[1,2630,"]("],[-1,2633,"> "],[1,2648,"=="],[-1,2650,"> "],[1,2668,"=="],[-1,2670,"> ."],[1,2675,".p. ==S"],[-1,2675,"p\n\n\n"],[1,2686,"p"],[-1,2686,"\n"],[-1,2689,"Sp"],[-1,2716,"2 "],[1,2720,"2 "],[-1,2728,"**"],[1,2732,"**"],[1,2739,"\nS"],[1,2741,"p"],[-1,2741,"\n"],[-1,2744,"Sp"],[-1,2761,"**"],[1,2765,"**"],[1,2778,"\nm"],[1,2780,"y"],[-1,2780,"\n"],[-1,2783,"my"],[-1,2802,"**"],[1,2806,"**"],[1,2809," "],[-1,2810,"数"],[1,2815," 起\n\n**；Sp"],[-1,2815,"起来**；\n\n"],[-1,2824,"Sp"],[1,2842,"与 于"],[-1,2842,"于 S"],[-1,2854,"- "],[1,2858,"- "],[-1,2872,"："],[1,2875,"："],[1,2895,"my"],[-1,2897,"my"],[-1,2926,"- "],[1,2930,"- "],[-1,3060,"- "],[1,3064,"- "],[1,3086,"它允"],[-1,3088,"它允"],[1,3121,"，如"],[-1,3123,"，如"],[1,3184,"**"],[-1,3184,"持久"],[1,3200,"**"],[-1,3200,"\n\n"],[1,3430,"**"],[-1,3430,"业务"],[1,3442,"**"],[-1,3442,"\n\n"],[1,3482,"\n"],[-1,3482," "],[1,3670,"**"],[-1,3670,"表现"],[1,3695,"**"],[-1,3695,"\n\n"],[1,3744,"\n"],[-1,3744," "],[1,3903,"**ew层**"],[-1,3903,"View层\n\n"],[1,3972,"**联系**"],[-1,3972,"各层联系\n\n"],[1,4183,"\n"],[-1,4183," "],[1,4361,"==**"],[-1,4361,"\n\n"],[1,4584,"  "],[-1,4584,"**"],[1,4634,"in"],[-1,4634,"pr"],[-1,4755,"in"],[1,4758,"+S"],[-1,6214,"**"],[1,6219," 1"],[-1,6225,"Sp"],[1,6231," \n"],[1,6237,"\n"],[-1,6237," "],[1,6254,"  "],[-1,6254,"\n\n"],[1,6382,"S"],[-1,6382," "],[1,6447,"p"],[-1,6447," "],[-1,6465,"Sp"],[1,6474,"开源"],[-1,6489,"Sp"],[1,6495,"是于"],[-1,8655,"pr"],[1,8660,"使用"],[-1,9350,"pr"],[1,9356,"用途"],[-1,9815,"pr"],[1,9820,"中受"],[-1,10014,"pr"],[1,10019,"是一"],[-1,10153,"面向"],[1,10157,"（A"],[1,10329,"。\n"],[-1,10329,"框架"],[1,10426,"\n##"],[-1,10426,"。\n\n"],[-1,10611,"##"],[1,10617,".2"],[1,10682,"、"],[-1,10682,"."],[1,10692,"S"],[-1,10692,"2"],[1,10864,"p"],[-1,10864,"、"],[1,10887,"r"],[-1,10887,"S"],[1,10908,"i"],[-1,10908,"p"],[1,10914,"n"],[-1,10914,"r"],[-1,10939,"in"],[1,10942,"MV"],[1,11237,"\n\n"],[-1,11237,"  "],[1,11290," "],[-1,11290,"\n"],[1,11324," "],[-1,11324,"\n"],[1,11332,"S"],[-1,11332," "],[1,11384,"p"],[-1,11384," "],[-1,11425,"Sp"],[1,11435,"属于"],[-1,11449,"Sp"],[1,11455,"Fr"],[-1,19587,"。"],[1,19589," "]],[19588,19588],[24,24]]],[1570887677698,["GJX@GJXAIOU",[[1,19603,"\n"]],[19602,19602],[19603,19603]]],[1570887681179,["GJX@GJXAIOU",[[1,19604,"\n"]],[19602,19602],[19603,19603]]],[1570887751382,[null,[[-1,24,"\n*原理*"],[1,29,"框架原理\n"],[-1,41,"**"],[1,43,"作用\n\n"],[1,46," "],[1,48,"是"],[-1,49,"是"],[-1,52," "],[1,69," "],[1,70," "],[-1,71," "],[-1,73," "],[1,79," "],[-1,81," "],[1,90," "],[-1,92," "],[1,94," "],[-1,96," "],[1,129," "],[-1,131," "],[1,135," "],[-1,137," "],[-1,141,"使用"],[1,145,"使用"],[-1,157,"请求"],[1,161,"请求"],[-1,169,"\n\n"],[-1,173,"s"],[1,174,"\n"],[1,176,"sp"],[-1,188,"，m"],[1,193,"my"],[-1,212,"**"],[-1,225,"Sp"],[1,227,"\n\n"],[-1,243,"."],[1,244,"\n"],[1,380,"客户"],[1,386," "],[-1,388," "],[-1,404,"分发"],[1,412,"分发"],[-1,414,"\n\n"],[-1,437,"2"],[1,438,"\n"],[-1,442,"i "],[1,444,"由 Di"],[1,458," "],[-1,460," "],[1,464," "],[-1,466," "],[-1,479,"找到"],[1,503,"找到"],[1,508," "],[-1,510," "],[-1,519,"\n\n；3"],[1,523,"；\n"],[1,750,"Co"],[1,758," "],[-1,760," "],[1,771," "],[-1,773," "],[-1,784,"\n\n"],[-1,802,"4"],[1,803,"\n"],[1,807,"Di"],[-1,817,"clvt"],[1,821,"vlet "],[-1,823," "],[1,844," "],[-1,846," "],[-1,851,"\n5"],[1,857,"视图"],[-1,870,"!["],[-1,933,"Sp"],[1,935,"\n\n"],[1,1826,"Sp"],[-1,1852,"它可"],[1,1856,"它可"],[-1,1869,"["],[1,1871,"a"],[-1,1873,"]("],[1,1875,"中的"],[-1,1896,"），"],[1,1900,"），"],[1,1971,"- "],[-1,1973,"- "],[1,2051,"**"],[-1,2053,"**"],[-1,2114,"。在"],[1,2118,"。在"],[-1,2173,"**"],[1,2186,"\n要"],[-1,2195,"1."],[1,2199,"先写"],[-1,2254,"2."],[1,2258,"写M"],[-1,2349,"3."],[1,2353,"写M"],[-1,2365,"Ma"],[1,2369,"Ma"],[-1,2394,"。\n"],[-1,2398,"4."],[1,2400,"。\n"],[1,2402,"写S"],[1,2415,"**"],[-1,2417,"**"],[-1,2449,"。\n"],[-1,2453,"5.-"],[1,2456,"。\n- 写"],[1,2472,"**"],[-1,2474,"**"],[-1,2484,"，获"],[-1,2488,"取"],[1,2489,"，"],[1,2491,"获取"],[-1,2544,"。\n"],[-1,2548,"6.-J "],[1,2553,"。\n-  写J"],[-1,2587,"=="],[1,2591,"> "],[-1,2598,"=="],[1,2602,"> "],[-1,2613,"=="],[1,2617,"> "],[-1,2624,"["],[1,2626,"a"],[-1,2628,"]("],[1,2633,"> "],[-1,2646,"=="],[1,2650,"> "],[-1,2666,"=="],[1,2670,"> ."],[-1,2672,".p. ==S"],[1,2679,"p\n\n\n"],[-1,2686,"p"],[1,2687,"\n"],[1,2689,"Sp"],[1,2714,"2 "],[-1,2716,"2 "],[1,2726,"**"],[-1,2728,"**"],[-1,2737,"\nS"],[-1,2741,"p"],[1,2742,"\n"],[1,2744,"Sp"],[1,2759,"**"],[-1,2761,"**"],[-1,2776,"\nm"],[-1,2780,"y"],[1,2781,"\n"],[1,2783,"my"],[1,2800,"**"],[-1,2802,"**"],[-1,2807," "],[1,2809,"数"],[-1,2813," 起\n\n**；Sp"],[1,2822,"起来**；\n\n"],[1,2824,"Sp"],[-1,2840,"与 于"],[1,2843,"于 S"],[1,2852,"- "],[-1,2854,"- "],[1,2870,"："],[-1,2872,"："],[-1,2893,"my"],[1,2897,"my"],[1,2924,"- "],[-1,2926,"- "],[1,3058,"- "],[-1,3060,"- "],[-1,3084,"它允"],[1,3088,"它允"],[-1,3119,"，如"],[1,3123,"，如"],[-1,3182,"**"],[1,3184,"持久"],[-1,3198,"**"],[1,3200,"\n\n"],[-1,3428,"**"],[1,3430,"业务"],[-1,3440,"**"],[1,3442,"\n\n"],[-1,3480,"\n"],[1,3481," "],[-1,3668,"**"],[1,3670,"表现"],[-1,3693,"**"],[1,3695,"\n\n"],[-1,3742,"\n"],[1,3743," "],[-1,3901,"**ew层**"],[1,3908,"View层\n\n"],[-1,3970,"**联系**"],[1,3976,"各层联系\n\n"],[-1,4181,"\n"],[1,4182," "],[-1,4359,"==**"],[1,4363,"\n\n"],[-1,4584,"  "],[1,4586,"**"],[-1,4634,"in"],[1,4636,"pr"],[1,4755,"in"],[-1,4756,"+S"],[1,6214,"**"],[-1,6217," 1"],[1,6225,"Sp"],[-1,6229," \n"],[-1,6237,"\n"],[1,6238," "],[-1,6254,"  "],[1,6256,"\n\n"],[-1,6382,"S"],[1,6383," "],[-1,6447,"p"],[1,6448," "],[1,6465,"Sp"],[-1,6472,"开源"],[1,6489,"Sp"],[-1,6493,"是于"],[1,8655,"pr"],[-1,8658,"使用"],[1,9350,"pr"],[-1,9354,"用途"],[1,9815,"pr"],[-1,9818,"中受"],[1,10014,"pr"],[-1,10017,"是一"],[1,10153,"面向"],[-1,10155,"（A"],[-1,10329,"。\n"],[1,10331,"框架"],[-1,10426,"\n##"],[1,10429,"。\n\n"],[1,10611,"##"],[-1,10615,".2"],[-1,10682,"、"],[1,10683,"."],[-1,10692,"S"],[1,10693,"2"],[-1,10864,"p"],[1,10865,"、"],[-1,10887,"r"],[1,10888,"S"],[-1,10908,"i"],[1,10909,"p"],[-1,10914,"n"],[1,10915,"r"],[1,10939,"in"],[-1,10940,"MV"],[-1,11237,"\n\n"],[1,11239,"  "],[-1,11290," "],[1,11291,"\n"],[-1,11324," "],[1,11325,"\n"],[-1,11332,"S"],[1,11333," "],[-1,11384,"p"],[1,11385," "],[1,11425,"Sp"],[-1,11433,"属于"],[1,11449,"Sp"],[-1,11453,"Fr"],[1,19587,"。"],[-1,19588," "]],[24,24],[19588,19588]]],[1570887751382,[null,[[1,24,"\n*原理*"],[-1,24,"框架原理\n"],[1,41,"**"],[-1,41,"作用\n\n"],[-1,48," "],[-1,51,"是"],[1,53,"是"],[1,55," "],[-1,71," "],[-1,73," "],[1,75," "],[1,76," "],[-1,81," "],[1,84," "],[-1,92," "],[1,95," "],[-1,96," "],[1,99," "],[-1,131," "],[1,134," "],[-1,137," "],[1,140," "],[1,143,"使用"],[-1,145,"使用"],[1,159,"请求"],[-1,161,"请求"],[1,171,"\n\n"],[1,173,"s"],[-1,173,"\n"],[-1,176,"sp"],[1,190,"，m"],[-1,193,"my"],[1,214,"**"],[1,225,"Sp"],[-1,225,"\n\n"],[1,243,"."],[-1,243,"\n"],[-1,380,"客户"],[-1,388," "],[1,391," "],[1,406,"分发"],[-1,412,"分发"],[1,416,"\n\n"],[1,437,"2"],[-1,437,"\n"],[1,442,"i "],[-1,442,"由 Di"],[-1,460," "],[1,463," "],[-1,466," "],[1,469," "],[1,481,"找到"],[-1,503,"找到"],[-1,510," "],[1,513," "],[1,521,"\n\n；3"],[-1,521,"；\n"],[-1,750,"Co"],[-1,760," "],[1,763," "],[-1,773," "],[1,776," "],[1,786,"\n\n"],[1,802,"4"],[-1,802,"\n"],[-1,807,"Di"],[1,819,"clvt"],[-1,819,"vlet "],[1,826," "],[-1,846," "],[1,849," "],[1,853,"\n5"],[-1,857,"视图"],[1,872,"!["],[1,933,"Sp"],[-1,933,"\n\n"],[-1,1826,"Sp"],[1,1854,"它可"],[-1,1856,"它可"],[1,1871,"["],[-1,1872,"a"],[1,1875,"]("],[-1,1875,"中的"],[1,1898,"），"],[-1,1900,"），"],[-1,1973,"- "],[1,1977,"- "],[-1,2053,"**"],[1,2057,"**"],[1,2116,"。在"],[-1,2118,"。在"],[1,2175,"**"],[-1,2186,"\n要"],[1,2197,"1."],[-1,2199,"先写"],[1,2256,"2."],[-1,2258,"写M"],[1,2351,"3."],[-1,2353,"写M"],[1,2367,"Ma"],[-1,2369,"Ma"],[1,2396,"。\n"],[1,2398,"4."],[-1,2398,"。\n"],[-1,2402,"写S"],[-1,2417,"**"],[1,2421,"**"],[1,2451,"。\n"],[1,2453,"5.-"],[-1,2453,"。\n- 写"],[-1,2474,"**"],[1,2478,"**"],[1,2486,"，获"],[1,2488,"取"],[-1,2488,"，"],[-1,2491,"获取"],[1,2546,"。\n"],[1,2548,"6.-J "],[-1,2548,"。\n-  写J"],[1,2589,"=="],[-1,2591,"> "],[1,2600,"=="],[-1,2602,"> "],[1,2615,"=="],[-1,2617,"> "],[1,2626,"["],[-1,2627,"a"],[1,2630,"]("],[-1,2633,"> "],[1,2648,"=="],[-1,2650,"> "],[1,2668,"=="],[-1,2670,"> ."],[1,2675,".p. ==S"],[-1,2675,"p\n\n\n"],[1,2686,"p"],[-1,2686,"\n"],[-1,2689,"Sp"],[-1,2716,"2 "],[1,2720,"2 "],[-1,2728,"**"],[1,2732,"**"],[1,2739,"\nS"],[1,2741,"p"],[-1,2741,"\n"],[-1,2744,"Sp"],[-1,2761,"**"],[1,2765,"**"],[1,2778,"\nm"],[1,2780,"y"],[-1,2780,"\n"],[-1,2783,"my"],[-1,2802,"**"],[1,2806,"**"],[1,2809," "],[-1,2810,"数"],[1,2815," 起\n\n**；Sp"],[-1,2815,"起来**；\n\n"],[-1,2824,"Sp"],[1,2842,"与 于"],[-1,2842,"于 S"],[-1,2854,"- "],[1,2858,"- "],[-1,2872,"："],[1,2875,"："],[1,2895,"my"],[-1,2897,"my"],[-1,2926,"- "],[1,2930,"- "],[-1,3060,"- "],[1,3064,"- "],[1,3086,"它允"],[-1,3088,"它允"],[1,3121,"，如"],[-1,3123,"，如"],[1,3184,"**"],[-1,3184,"持久"],[1,3200,"**"],[-1,3200,"\n\n"],[1,3430,"**"],[-1,3430,"业务"],[1,3442,"**"],[-1,3442,"\n\n"],[1,3482,"\n"],[-1,3482," "],[1,3670,"**"],[-1,3670,"表现"],[1,3695,"**"],[-1,3695,"\n\n"],[1,3744,"\n"],[-1,3744," "],[1,3903,"**ew层**"],[-1,3903,"View层\n\n"],[1,3972,"**联系**"],[-1,3972,"各层联系\n\n"],[1,4183,"\n"],[-1,4183," "],[1,4361,"==**"],[-1,4361,"\n\n"],[1,4584,"  "],[-1,4584,"**"],[1,4634,"in"],[-1,4634,"pr"],[-1,4755,"in"],[1,4758,"+S"],[-1,6214,"**"],[1,6219," 1"],[-1,6225,"Sp"],[1,6231," \n"],[1,6237,"\n"],[-1,6237," "],[1,6254,"  "],[-1,6254,"\n\n"],[1,6382,"S"],[-1,6382," "],[1,6447,"p"],[-1,6447," "],[-1,6465,"Sp"],[1,6474,"开源"],[-1,6489,"Sp"],[1,6495,"是于"],[-1,8655,"pr"],[1,8660,"使用"],[-1,9350,"pr"],[1,9356,"用途"],[-1,9815,"pr"],[1,9820,"中受"],[-1,10014,"pr"],[1,10019,"是一"],[-1,10153,"面向"],[1,10157,"（A"],[1,10329,"。\n"],[-1,10329,"框架"],[1,10426,"\n##"],[-1,10426,"。\n\n"],[-1,10611,"##"],[1,10617,".2"],[1,10682,"、"],[-1,10682,"."],[1,10692,"S"],[-1,10692,"2"],[1,10864,"p"],[-1,10864,"、"],[1,10887,"r"],[-1,10887,"S"],[1,10908,"i"],[-1,10908,"p"],[1,10914,"n"],[-1,10914,"r"],[-1,10939,"in"],[1,10942,"MV"],[1,11237,"\n\n"],[-1,11237,"  "],[1,11290," "],[-1,11290,"\n"],[1,11324," "],[-1,11324,"\n"],[1,11332,"S"],[-1,11332," "],[1,11384,"p"],[-1,11384," "],[-1,11425,"Sp"],[1,11435,"属于"],[-1,11449,"Sp"],[1,11455,"Fr"],[-1,19587,"。"],[1,19589," "]],[19588,19588],[24,24]]],[1570887702330,["GJX@GJXAIOU",[[1,19603,"[原文链接](https://blog.csdn.net/weixin_30764137/article/details/96416103)"]],[19603,19603],[19673,19673]]],[1570887811386,[null,[[-1,24,"\n*原理*"],[1,29,"框架原理\n"],[-1,41,"**"],[1,43,"作用\n\n"],[1,46," "],[1,48,"是"],[-1,49,"是"],[-1,52," "],[1,69," "],[1,70," "],[-1,71," "],[-1,73," "],[1,79," "],[-1,81," "],[1,90," "],[-1,92," "],[1,94," "],[-1,96," "],[1,129," "],[-1,131," "],[1,135," "],[-1,137," "],[-1,141,"使用"],[1,145,"使用"],[-1,157,"请求"],[1,161,"请求"],[-1,169,"\n\n"],[-1,173,"s"],[1,174,"\n"],[1,176,"sp"],[-1,188,"，m"],[1,193,"my"],[-1,212,"**"],[-1,225,"Sp"],[1,227,"\n\n"],[-1,243,"."],[1,244,"\n"],[1,380,"客户"],[1,386," "],[-1,388," "],[-1,404,"分发"],[1,412,"分发"],[-1,414,"\n\n"],[-1,437,"2"],[1,438,"\n"],[-1,442,"i "],[1,444,"由 Di"],[1,458," "],[-1,460," "],[1,464," "],[-1,466," "],[-1,479,"找到"],[1,503,"找到"],[1,508," "],[-1,510," "],[-1,519,"\n\n；3"],[1,523,"；\n"],[1,750,"Co"],[1,758," "],[-1,760," "],[1,771," "],[-1,773," "],[-1,784,"\n\n"],[-1,802,"4"],[1,803,"\n"],[1,807,"Di"],[-1,817,"clvt"],[1,821,"vlet "],[-1,823," "],[1,844," "],[-1,846," "],[-1,851,"\n5"],[1,857,"视图"],[-1,870,"!["],[-1,933,"Sp"],[1,935,"\n\n"],[1,1826,"Sp"],[-1,1852,"它可"],[1,1856,"它可"],[-1,1869,"["],[1,1871,"a"],[-1,1873,"]("],[1,1875,"中的"],[-1,1896,"），"],[1,1900,"），"],[1,1971,"- "],[-1,1973,"- "],[1,2051,"**"],[-1,2053,"**"],[-1,2114,"。在"],[1,2118,"。在"],[-1,2173,"**"],[1,2186,"\n要"],[-1,2195,"1."],[1,2199,"先写"],[-1,2254,"2."],[1,2258,"写M"],[-1,2349,"3."],[1,2353,"写M"],[-1,2365,"Ma"],[1,2369,"Ma"],[-1,2394,"。\n"],[-1,2398,"4."],[1,2400,"。\n"],[1,2402,"写S"],[1,2415,"**"],[-1,2417,"**"],[-1,2449,"。\n"],[-1,2453,"5.-"],[1,2456,"。\n- 写"],[1,2472,"**"],[-1,2474,"**"],[-1,2484,"，获"],[-1,2488,"取"],[1,2489,"，"],[1,2491,"获取"],[-1,2544,"。\n"],[-1,2548,"6.-J "],[1,2553,"。\n-  写J"],[-1,2587,"=="],[1,2591,"> "],[-1,2598,"=="],[1,2602,"> "],[-1,2613,"=="],[1,2617,"> "],[-1,2624,"["],[1,2626,"a"],[-1,2628,"]("],[1,2633,"> "],[-1,2646,"=="],[1,2650,"> "],[-1,2666,"=="],[1,2670,"> ."],[-1,2672,".p. ==S"],[1,2679,"p\n\n\n"],[-1,2686,"p"],[1,2687,"\n"],[1,2689,"Sp"],[1,2714,"2 "],[-1,2716,"2 "],[1,2726,"**"],[-1,2728,"**"],[-1,2737,"\nS"],[-1,2741,"p"],[1,2742,"\n"],[1,2744,"Sp"],[1,2759,"**"],[-1,2761,"**"],[-1,2776,"\nm"],[-1,2780,"y"],[1,2781,"\n"],[1,2783,"my"],[1,2800,"**"],[-1,2802,"**"],[-1,2807," "],[1,2809,"数"],[-1,2813," 起\n\n**；Sp"],[1,2822,"起来**；\n\n"],[1,2824,"Sp"],[-1,2840,"与 于"],[1,2843,"于 S"],[1,2852,"- "],[-1,2854,"- "],[1,2870,"："],[-1,2872,"："],[-1,2893,"my"],[1,2897,"my"],[1,2924,"- "],[-1,2926,"- "],[1,3058,"- "],[-1,3060,"- "],[-1,3084,"它允"],[1,3088,"它允"],[-1,3119,"，如"],[1,3123,"，如"],[-1,3182,"**"],[1,3184,"持久"],[-1,3198,"**"],[1,3200,"\n\n"],[-1,3428,"**"],[1,3430,"业务"],[-1,3440,"**"],[1,3442,"\n\n"],[-1,3480,"\n"],[1,3481," "],[-1,3668,"**"],[1,3670,"表现"],[-1,3693,"**"],[1,3695,"\n\n"],[-1,3742,"\n"],[1,3743," "],[-1,3901,"**ew层**"],[1,3908,"View层\n\n"],[-1,3970,"**联系**"],[1,3976,"各层联系\n\n"],[-1,4181,"\n"],[1,4182," "],[-1,4359,"==**"],[1,4363,"\n\n"],[-1,4584,"  "],[1,4586,"**"],[-1,4634,"in"],[1,4636,"pr"],[1,4755,"in"],[-1,4756,"+S"],[1,6214,"**"],[-1,6217," 1"],[1,6225,"Sp"],[-1,6229," \n"],[-1,6237,"\n"],[1,6238," "],[-1,6254,"  "],[1,6256,"\n\n"],[-1,6382,"S"],[1,6383," "],[-1,6447,"p"],[1,6448," "],[1,6465,"Sp"],[-1,6472,"开源"],[1,6489,"Sp"],[-1,6493,"是于"],[1,8655,"pr"],[-1,8658,"使用"],[1,9350,"pr"],[-1,9354,"用途"],[1,9815,"pr"],[-1,9818,"中受"],[1,10014,"pr"],[-1,10017,"是一"],[1,10153,"面向"],[-1,10155,"（A"],[-1,10329,"。\n"],[1,10331,"框架"],[-1,10426,"\n##"],[1,10429,"。\n\n"],[1,10611,"##"],[-1,10615,".2"],[-1,10682,"、"],[1,10683,"."],[-1,10692,"S"],[1,10693,"2"],[-1,10864,"p"],[1,10865,"、"],[-1,10887,"r"],[1,10888,"S"],[-1,10908,"i"],[1,10909,"p"],[-1,10914,"n"],[1,10915,"r"],[1,10939,"in"],[-1,10940,"MV"],[-1,11237,"\n\n"],[1,11239,"  "],[-1,11290," "],[1,11291,"\n"],[-1,11324," "],[1,11325,"\n"],[-1,11332,"S"],[1,11333," "],[-1,11384,"p"],[1,11385," "],[1,11425,"Sp"],[-1,11433,"属于"],[1,11449,"Sp"],[-1,11453,"Fr"],[1,19587,"。"],[-1,19588," "]],[24,24],[19588,19588]]],[1570887811386,[null,[[1,24,"\n*原理*"],[-1,24,"框架原理\n"],[1,41,"**"],[-1,41,"作用\n\n"],[-1,48," "],[-1,51,"是"],[1,53,"是"],[1,55," "],[-1,71," "],[-1,73," "],[1,75," "],[1,76," "],[-1,81," "],[1,84," "],[-1,92," "],[1,95," "],[-1,96," "],[1,99," "],[-1,131," "],[1,134," "],[-1,137," "],[1,140," "],[1,143,"使用"],[-1,145,"使用"],[1,159,"请求"],[-1,161,"请求"],[1,171,"\n\n"],[1,173,"s"],[-1,173,"\n"],[-1,176,"sp"],[1,190,"，m"],[-1,193,"my"],[1,214,"**"],[1,225,"Sp"],[-1,225,"\n\n"],[1,243,"."],[-1,243,"\n"],[-1,380,"客户"],[-1,388," "],[1,391," "],[1,406,"分发"],[-1,412,"分发"],[1,416,"\n\n"],[1,437,"2"],[-1,437,"\n"],[1,442,"i "],[-1,442,"由 Di"],[-1,460," "],[1,463," "],[-1,466," "],[1,469," "],[1,481,"找到"],[-1,503,"找到"],[-1,510," "],[1,513," "],[1,521,"\n\n；3"],[-1,521,"；\n"],[-1,750,"Co"],[-1,760," "],[1,763," "],[-1,773," "],[1,776," "],[1,786,"\n\n"],[1,802,"4"],[-1,802,"\n"],[-1,807,"Di"],[1,819,"clvt"],[-1,819,"vlet "],[1,826," "],[-1,846," "],[1,849," "],[1,853,"\n5"],[-1,857,"视图"],[1,872,"!["],[1,933,"Sp"],[-1,933,"\n\n"],[-1,1826,"Sp"],[1,1854,"它可"],[-1,1856,"它可"],[1,1871,"["],[-1,1872,"a"],[1,1875,"]("],[-1,1875,"中的"],[1,1898,"），"],[-1,1900,"），"],[-1,1973,"- "],[1,1977,"- "],[-1,2053,"**"],[1,2057,"**"],[1,2116,"。在"],[-1,2118,"。在"],[1,2175,"**"],[-1,2186,"\n要"],[1,2197,"1."],[-1,2199,"先写"],[1,2256,"2."],[-1,2258,"写M"],[1,2351,"3."],[-1,2353,"写M"],[1,2367,"Ma"],[-1,2369,"Ma"],[1,2396,"。\n"],[1,2398,"4."],[-1,2398,"。\n"],[-1,2402,"写S"],[-1,2417,"**"],[1,2421,"**"],[1,2451,"。\n"],[1,2453,"5.-"],[-1,2453,"。\n- 写"],[-1,2474,"**"],[1,2478,"**"],[1,2486,"，获"],[1,2488,"取"],[-1,2488,"，"],[-1,2491,"获取"],[1,2546,"。\n"],[1,2548,"6.-J "],[-1,2548,"。\n-  写J"],[1,2589,"=="],[-1,2591,"> "],[1,2600,"=="],[-1,2602,"> "],[1,2615,"=="],[-1,2617,"> "],[1,2626,"["],[-1,2627,"a"],[1,2630,"]("],[-1,2633,"> "],[1,2648,"=="],[-1,2650,"> "],[1,2668,"=="],[-1,2670,"> ."],[1,2675,".p. ==S"],[-1,2675,"p\n\n\n"],[1,2686,"p"],[-1,2686,"\n"],[-1,2689,"Sp"],[-1,2716,"2 "],[1,2720,"2 "],[-1,2728,"**"],[1,2732,"**"],[1,2739,"\nS"],[1,2741,"p"],[-1,2741,"\n"],[-1,2744,"Sp"],[-1,2761,"**"],[1,2765,"**"],[1,2778,"\nm"],[1,2780,"y"],[-1,2780,"\n"],[-1,2783,"my"],[-1,2802,"**"],[1,2806,"**"],[1,2809," "],[-1,2810,"数"],[1,2815," 起\n\n**；Sp"],[-1,2815,"起来**；\n\n"],[-1,2824,"Sp"],[1,2842,"与 于"],[-1,2842,"于 S"],[-1,2854,"- "],[1,2858,"- "],[-1,2872,"："],[1,2875,"："],[1,2895,"my"],[-1,2897,"my"],[-1,2926,"- "],[1,2930,"- "],[-1,3060,"- "],[1,3064,"- "],[1,3086,"它允"],[-1,3088,"它允"],[1,3121,"，如"],[-1,3123,"，如"],[1,3184,"**"],[-1,3184,"持久"],[1,3200,"**"],[-1,3200,"\n\n"],[1,3430,"**"],[-1,3430,"业务"],[1,3442,"**"],[-1,3442,"\n\n"],[1,3482,"\n"],[-1,3482," "],[1,3670,"**"],[-1,3670,"表现"],[1,3695,"**"],[-1,3695,"\n\n"],[1,3744,"\n"],[-1,3744," "],[1,3903,"**ew层**"],[-1,3903,"View层\n\n"],[1,3972,"**联系**"],[-1,3972,"各层联系\n\n"],[1,4183,"\n"],[-1,4183," "],[1,4361,"==**"],[-1,4361,"\n\n"],[1,4584,"  "],[-1,4584,"**"],[1,4634,"in"],[-1,4634,"pr"],[-1,4755,"in"],[1,4758,"+S"],[-1,6214,"**"],[1,6219," 1"],[-1,6225,"Sp"],[1,6231," \n"],[1,6237,"\n"],[-1,6237," "],[1,6254,"  "],[-1,6254,"\n\n"],[1,6382,"S"],[-1,6382," "],[1,6447,"p"],[-1,6447," "],[-1,6465,"Sp"],[1,6474,"开源"],[-1,6489,"Sp"],[1,6495,"是于"],[-1,8655,"pr"],[1,8660,"使用"],[-1,9350,"pr"],[1,9356,"用途"],[-1,9815,"pr"],[1,9820,"中受"],[-1,10014,"pr"],[1,10019,"是一"],[-1,10153,"面向"],[1,10157,"（A"],[1,10329,"。\n"],[-1,10329,"框架"],[1,10426,"\n##"],[-1,10426,"。\n\n"],[-1,10611,"##"],[1,10617,".2"],[1,10682,"、"],[-1,10682,"."],[1,10692,"S"],[-1,10692,"2"],[1,10864,"p"],[-1,10864,"、"],[1,10887,"r"],[-1,10887,"S"],[1,10908,"i"],[-1,10908,"p"],[1,10914,"n"],[-1,10914,"r"],[-1,10939,"in"],[1,10942,"MV"],[1,11237,"\n\n"],[-1,11237,"  "],[1,11290," "],[-1,11290,"\n"],[1,11324," "],[-1,11324,"\n"],[1,11332,"S"],[-1,11332," "],[1,11384,"p"],[-1,11384," "],[-1,11425,"Sp"],[1,11435,"属于"],[-1,11449,"Sp"],[1,11455,"Fr"],[-1,19587,"。"],[1,19589," "]],[19588,19588],[24,24]]],[1570887762751,["GJX@GJXAIOU",[[-1,20043,"\n"]],[20043,20043],[20042,20042]]],[1570887763697,["GJX@GJXAIOU",[[-1,20071,"\n"]],[20071,20071],[20070,20070]]],[1570887764590,["GJX@GJXAIOU",[[-1,20103,"\n"]],[20103,20103],[20102,20102]]],[1570887768143,["GJX@GJXAIOU",[[-1,20043,"       "],[-1,20071,"       "],[-1,20103,"       "]],[20047,20124],[20047,20124]]],[1570887774040,["GJX@GJXAIOU",[[-1,19686," "],[1,19687," "],[-1,19867,"                                                                        "],[1,19939,"                                                                        "],[-1,20049," "],[1,20050," "],[-1,20055," "],[1,20056," "],[-1,20070," MVC "],[1,20075," MVC "],[-1,20080," "],[1,20081," "],[-1,20096," "],[1,20097," "],[-1,20127,"   "],[1,20130,"   "],[1,20147,"·"],[-1,30546," "],[1,30547," "],[-1,30603," "],[1,30604," "],[-1,32819,"   "],[1,32822,"   "],[-1,32929," "],[1,32930," "],[-1,32996,"     "],[1,33001,"     "],[-1,33215," "],[1,33216," "],[-1,36108,"                              "],[1,36138,"                              "],[-1,36231," "],[1,36232," "],[-1,36532,"   "],[1,36535,"   "],[-1,36560," "],[1,36561," "],[-1,36842," "],[1,36843," "],[-1,36851,"                                                              "],[1,36913,"                                                              "],[-1,37044,"   "],[1,37047,"   "],[-1,40009,"  "],[1,40011,"  "],[-1,40853," "],[1,40854," "],[-1,40962,"                                                                  "],[1,41028,"                                                                  "],[-1,41153,"                                                                 "],[1,41218,"                                                                 "],[-1,41997," "],[1,41998," "],[-1,42118,"       "],[1,42125,"       "],[-1,43295," "],[1,43296," "],[-1,43443,"  "],[1,43445,"  "],[-1,43449,"  "],[1,43451,"  "],[-1,48746," "],[1,48747," "],[-1,48825,"   "],[1,48828,"   "]],[20147,20147],[20148,20148]]],[1570887774332,["GJX@GJXAIOU",[[1,20148,"·"]],[20148,20148],[20149,20149]]],[1570887776112,["GJX@GJXAIOU",[[-1,20147,"··"]],[20149,20149],[20147,20147]]],[1570887777791,["GJX@GJXAIOU",[[1,20147,"```"]],[20147,20147],[20150,20150]]],[1570887778105,["GJX@GJXAIOU",[[1,20150,"language\n```\n"]],[20150,20150],[20150,20158]]],[1570887779984,["GJX@GJXAIOU",[[-1,20150,"language"],[1,20158,"x"]],[20150,20158],[20151,20151]]],[1570887780564,["GJX@GJXAIOU",[[1,20151,"ml"]],[20151,20151],[20153,20153]]],[1570887781033,["GJX@GJXAIOU",[[1,20154,"\n"]],[20153,20153],[20154,20154]]],[1570887793887,["GJX@GJXAIOU",[[-1,20160,"<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n    <modelVersion>4.0.0</modelVersion>\n    <groupId>com.javen.maven01</groupId>\n    <artifactId>maven01</artifactId>\n    <packaging>war</packaging>\n    <version>0.0.1-SNAPSHOT</version>\n    <name>maven01 Maven Webapp</name>\n    <url>http://maven.apache.org</url>\n\n    <properties>  \n        <!-- spring版本号 -->  \n        <spring.version>4.0.2.RELEASE</spring.version>  \n        <!-- mybatis版本号 -->  \n        <mybatis.version>3.2.6</mybatis.version>  \n        <!-- log4j日志文件管理包版本 -->  \n        <slf4j.version>1.7.7</slf4j.version>  \n        <log4j.version>1.2.17</log4j.version>  \n    </properties> \n\n    <dependencies>\n        <dependency>\n            <groupId>junit</groupId>\n            <artifactId>junit</artifactId>\n            <version>3.8.1</version>\n             <!-- 表示开发的时候引入，发布的时候不会加载此包 -->  \n            <scope>test</scope>\n        </dependency>\n        <!-- <dependency>\n            <groupId>javax.servlet</groupId>\n            <artifactId>javax.servlet-api</artifactId>\n            <version>3.1.0</version>\n        </dependency> -->\n\n         <!-- spring核心包 -->  \n        <dependency>  \n            <groupId>org.springframework</groupId>  \n            <artifactId>spring-core</artifactId>  \n            <version>${spring.version}</version>  \n        </dependency>  \n\n        <dependency>  \n            <groupId>org.springframework</groupId>  \n            <artifactId>spring-web</artifactId>  \n            <version>${spring.version}</version>  \n        </dependency>  \n        <dependency>  \n            <groupId>org.springframework</groupId>  \n            <artifactId>spring-oxm</artifactId>  \n            <version>${spring.version}</version>  \n        </dependency>  \n        <dependency>  \n            <groupId>org.springframework</groupId>  \n            <artifactId>spring-tx</artifactId>  \n            <version>${spring.version}</version>  \n        </dependency>  \n\n        <dependency>  \n            <groupId>org.springframework</groupId>  \n            <artifactId>spring-jdbc</artifactId>  \n            <version>${spring.version}</version>  \n        </dependency>  \n\n        <dependency>  \n            <groupId>org.springframework</groupId>  \n            <artifactId>spring-webmvc</artifactId>  \n            <version>${spring.version}</version>  \n        </dependency>  \n        <dependency>  \n            <groupId>org.springframework</groupId>  \n            <artifactId>spring-aop</artifactId>  \n            <version>${spring.version}</version>  \n        </dependency>  \n\n        <dependency>  \n            <groupId>org.springframework</groupId>  \n            <artifactId>spring-context-support</artifactId>  \n            <version>${spring.version}</version>  \n        </dependency>  \n\n        <dependency>  \n            <groupId>org.springframework</groupId>  \n            <artifactId>spring-test</artifactId>  \n            <version>${spring.version}</version>  \n        </dependency>  \n        <!-- mybatis核心包 -->  \n        <dependency>  \n            <groupId>org.mybatis</groupId>  \n            <artifactId>mybatis</artifactId>  \n            <version>${mybatis.version}</version>  \n        </dependency>  \n         <!-- mybatis/spring包 -->  \n        <dependency>  \n            <groupId>org.mybatis</groupId>  \n            <artifactId>mybatis-spring</artifactId>  \n            <version>1.2.2</version>  \n        </dependency>  \n\n         <!-- 导入java ee jar 包 -->  \n        <dependency>  \n            <groupId>javax</groupId>  \n            <artifactId>javaee-api</artifactId>  \n            <version>7.0</version>  \n        </dependency>  \n\n         <!-- 导入Mysql数据库链接jar包 -->  \n        <dependency>  \n            <groupId>mysql</groupId>  \n            <artifactId>mysql-connector-java</artifactId>  \n            <version>5.1.36</version>  \n        </dependency>  \n        <!-- 导入dbcp的jar包，用来在applicationContext.xml中配置数据库 -->  \n        <dependency>  \n            <groupId>commons-dbcp</groupId>  \n            <artifactId>commons-dbcp</artifactId>  \n            <version>1.2.2</version>  \n        </dependency>  \n\n        <!-- JSTL标签类 -->  \n        <dependency>  \n            <groupId>jstl</groupId>  \n            <artifactId>jstl</artifactId>  \n            <version>1.2</version>  \n        </dependency>  \n        <!-- 日志文件管理包 -->  \n        <!-- log start -->  \n        <dependency>  \n            <groupId>log4j</groupId>  \n            <artifactId>log4j</artifactId>  \n            <version>${log4j.version}</version>  \n        </dependency>  \n\n        <!-- 格式化对象，方便输出日志 -->  \n        <dependency>  \n            <groupId>com.alibaba</groupId>  \n            <artifactId>fastjson</artifactId>  \n            <version>1.1.41</version>  \n        </dependency>  \n\n        <dependency>  \n            <groupId>org.slf4j</groupId>  \n            <artifactId>slf4j-api</artifactId>  \n            <version>${slf4j.version}</version>  \n        </dependency>  \n\n        <dependency>  \n            <groupId>org.slf4j</groupId>  \n            <artifactId>slf4j-log4j12</artifactId>  \n            <version>${slf4j.version}</version>  \n        </dependency>  \n        <!-- log end -->  \n        <!-- 映入JSON -->  \n        <dependency>  \n            <groupId>org.codehaus.jackson</groupId>  \n            <artifactId>jackson-mapper-asl</artifactId>  \n            <version>1.9.13</version>  \n        </dependency>  \n        <!-- 上传组件包 -->  \n        <dependency>  \n            <groupId>commons-fileupload</groupId>  \n            <artifactId>commons-fileupload</artifactId>  \n            <version>1.3.1</version>  \n        </dependency>  \n        <dependency>  \n            <groupId>commons-io</groupId>  \n            <artifactId>commons-io</artifactId>  \n            <version>2.4</version>  \n        </dependency>  \n        <dependency>  \n            <groupId>commons-codec</groupId>  \n            <artifactId>commons-codec</artifactId>  \n            <version>1.9</version>  \n        </dependency>  \n\n    </dependencies>\n\n    <build>\n        <finalName>maven01</finalName>\n        <plugins>\n            <plugin>\n                <groupId>org.eclipse.jetty</groupId>\n                <artifactId>jetty-maven-plugin</artifactId>\n                <version>9.2.8.v20150217</version>\n                <configuration>\n                    <httpConnector>\n                        <port>80</port>\n                    </httpConnector>\n                    <stopKey>shutdown</stopKey>\n                    <stopPort>9966</stopPort>\n                </configuration>\n            </plugin>\n        </plugins>\n    </build>\n\n</project>"]],[20160,26868],[20160,20160]]],[1570887797462,["GJX@GJXAIOU",[[1,20154,"<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n    <modelVersion>4.0.0</modelVersion>\n    <groupId>com.javen.maven01</groupId>\n    <artifactId>maven01</artifactId>\n    <packaging>war</packaging>\n    <version>0.0.1-SNAPSHOT</version>\n    <name>maven01 Maven Webapp</name>\n    <url>http://maven.apache.org</url>\n\n    <properties>  \n        <!-- spring版本号 -->  \n        <spring.version>4.0.2.RELEASE</spring.version>  \n        <!-- mybatis版本号 -->  \n        <mybatis.version>3.2.6</mybatis.version>  \n        <!-- log4j日志文件管理包版本 -->  \n        <slf4j.version>1.7.7</slf4j.version>  \n        <log4j.version>1.2.17</log4j.version>  \n    </properties> \n\n    <dependencies>\n        <dependency>\n            <groupId>junit</groupId>\n            <artifactId>junit</artifactId>\n            <version>3.8.1</version>\n             <!-- 表示开发的时候引入，发布的时候不会加载此包 -->  \n            <scope>test</scope>\n        </dependency>\n        <!-- <dependency>\n            <groupId>javax.servlet</groupId>\n            <artifactId>javax.servlet-api</artifactId>\n            <version>3.1.0</version>\n        </dependency> -->\n\n         <!-- spring核心包 -->  \n        <dependency>  \n            <groupId>org.springframework</groupId>  \n            <artifactId>spring-core</artifactId>  \n            <version>${spring.version}</version>  \n        </dependency>  \n\n        <dependency>  \n            <groupId>org.springframework</groupId>  \n            <artifactId>spring-web</artifactId>  \n            <version>${spring.version}</version>  \n        </dependency>  \n        <dependency>  \n            <groupId>org.springframework</groupId>  \n            <artifactId>spring-oxm</artifactId>  \n            <version>${spring.version}</version>  \n        </dependency>  \n        <dependency>  \n            <groupId>org.springframework</groupId>  \n            <artifactId>spring-tx</artifactId>  \n            <version>${spring.version}</version>  \n        </dependency>  \n\n        <dependency>  \n            <groupId>org.springframework</groupId>  \n            <artifactId>spring-jdbc</artifactId>  \n            <version>${spring.version}</version>  \n        </dependency>  \n\n        <dependency>  \n            <groupId>org.springframework</groupId>  \n            <artifactId>spring-webmvc</artifactId>  \n            <version>${spring.version}</version>  \n        </dependency>  \n        <dependency>  \n            <groupId>org.springframework</groupId>  \n            <artifactId>spring-aop</artifactId>  \n            <version>${spring.version}</version>  \n        </dependency>  \n\n        <dependency>  \n            <groupId>org.springframework</groupId>  \n            <artifactId>spring-context-support</artifactId>  \n            <version>${spring.version}</version>  \n        </dependency>  \n\n        <dependency>  \n            <groupId>org.springframework</groupId>  \n            <artifactId>spring-test</artifactId>  \n            <version>${spring.version}</version>  \n        </dependency>  \n        <!-- mybatis核心包 -->  \n        <dependency>  \n            <groupId>org.mybatis</groupId>  \n            <artifactId>mybatis</artifactId>  \n            <version>${mybatis.version}</version>  \n        </dependency>  \n         <!-- mybatis/spring包 -->  \n        <dependency>  \n            <groupId>org.mybatis</groupId>  \n            <artifactId>mybatis-spring</artifactId>  \n            <version>1.2.2</version>  \n        </dependency>  \n\n         <!-- 导入java ee jar 包 -->  \n        <dependency>  \n            <groupId>javax</groupId>  \n            <artifactId>javaee-api</artifactId>  \n            <version>7.0</version>  \n        </dependency>  \n\n         <!-- 导入Mysql数据库链接jar包 -->  \n        <dependency>  \n            <groupId>mysql</groupId>  \n            <artifactId>mysql-connector-java</artifactId>  \n            <version>5.1.36</version>  \n        </dependency>  \n        <!-- 导入dbcp的jar包，用来在applicationContext.xml中配置数据库 -->  \n        <dependency>  \n            <groupId>commons-dbcp</groupId>  \n            <artifactId>commons-dbcp</artifactId>  \n            <version>1.2.2</version>  \n        </dependency>  \n\n        <!-- JSTL标签类 -->  \n        <dependency>  \n            <groupId>jstl</groupId>  \n            <artifactId>jstl</artifactId>  \n            <version>1.2</version>  \n        </dependency>  \n        <!-- 日志文件管理包 -->  \n        <!-- log start -->  \n        <dependency>  \n            <groupId>log4j</groupId>  \n            <artifactId>log4j</artifactId>  \n            <version>${log4j.version}</version>  \n        </dependency>  \n\n        <!-- 格式化对象，方便输出日志 -->  \n        <dependency>  \n            <groupId>com.alibaba</groupId>  \n            <artifactId>fastjson</artifactId>  \n            <version>1.1.41</version>  \n        </dependency>  \n\n        <dependency>  \n            <groupId>org.slf4j</groupId>  \n            <artifactId>slf4j-api</artifactId>  \n            <version>${slf4j.version}</version>  \n        </dependency>  \n\n        <dependency>  \n            <groupId>org.slf4j</groupId>  \n            <artifactId>slf4j-log4j12</artifactId>  \n            <version>${slf4j.version}</version>  \n        </dependency>  \n        <!-- log end -->  \n        <!-- 映入JSON -->  \n        <dependency>  \n            <groupId>org.codehaus.jackson</groupId>  \n            <artifactId>jackson-mapper-asl</artifactId>  \n            <version>1.9.13</version>  \n        </dependency>  \n        <!-- 上传组件包 -->  \n        <dependency>  \n            <groupId>commons-fileupload</groupId>  \n            <artifactId>commons-fileupload</artifactId>  \n            <version>1.3.1</version>  \n        </dependency>  \n        <dependency>  \n            <groupId>commons-io</groupId>  \n            <artifactId>commons-io</artifactId>  \n            <version>2.4</version>  \n        </dependency>  \n        <dependency>  \n            <groupId>commons-codec</groupId>  \n            <artifactId>commons-codec</artifactId>  \n            <version>1.9</version>  \n        </dependency>  \n\n    </dependencies>\n\n    <build>\n        <finalName>maven01</finalName>\n        <plugins>\n            <plugin>\n                <groupId>org.eclipse.jetty</groupId>\n                <artifactId>jetty-maven-plugin</artifactId>\n                <version>9.2.8.v20150217</version>\n                <configuration>\n                    <httpConnector>\n                        <port>80</port>\n                    </httpConnector>\n                    <stopKey>shutdown</stopKey>\n                    <stopPort>9966</stopPort>\n                </configuration>\n            </plugin>\n        </plugins>\n    </build>\n\n</project>"]],[20154,20154],[26862,26862]]],[1570887871447,[null,[[-1,24,"\n*原理*"],[1,29,"框架原理\n"],[-1,41,"**"],[1,43,"作用\n\n"],[1,46," "],[1,48,"是"],[-1,49,"是"],[-1,52," "],[1,69," "],[1,70," "],[-1,71," "],[-1,73," "],[1,79," "],[-1,81," "],[1,90," "],[-1,92," "],[1,94," "],[-1,96," "],[1,129," "],[-1,131," "],[1,135," "],[-1,137," "],[-1,141,"使用"],[1,145,"使用"],[-1,157,"请求"],[1,161,"请求"],[-1,169,"\n\n"],[-1,173,"s"],[1,174,"\n"],[1,176,"sp"],[-1,188,"，m"],[1,193,"my"],[-1,212,"**"],[-1,225,"Sp"],[1,227,"\n\n"],[-1,243,"."],[1,244,"\n"],[1,380,"客户"],[1,386," "],[-1,388," "],[-1,404,"分发"],[1,412,"分发"],[-1,414,"\n\n"],[-1,437,"2"],[1,438,"\n"],[-1,442,"i "],[1,444,"由 Di"],[1,458," "],[-1,460," "],[1,464," "],[-1,466," "],[-1,479,"找到"],[1,503,"找到"],[1,508," "],[-1,510," "],[-1,519,"\n\n；3"],[1,523,"；\n"],[1,750,"Co"],[1,758," "],[-1,760," "],[1,771," "],[-1,773," "],[-1,784,"\n\n"],[-1,802,"4"],[1,803,"\n"],[1,807,"Di"],[-1,817,"clvt"],[1,821,"vlet "],[-1,823," "],[1,844," "],[-1,846," "],[-1,851,"\n5"],[1,857,"视图"],[-1,870,"!["],[-1,933,"Sp"],[1,935,"\n\n"],[1,1826,"Sp"],[-1,1852,"它可"],[1,1856,"它可"],[-1,1869,"["],[1,1871,"a"],[-1,1873,"]("],[1,1875,"中的"],[-1,1896,"），"],[1,1900,"），"],[1,1971,"- "],[-1,1973,"- "],[1,2051,"**"],[-1,2053,"**"],[-1,2114,"。在"],[1,2118,"。在"],[-1,2173,"**"],[1,2186,"\n要"],[-1,2195,"1."],[1,2199,"先写"],[-1,2254,"2."],[1,2258,"写M"],[-1,2349,"3."],[1,2353,"写M"],[-1,2365,"Ma"],[1,2369,"Ma"],[-1,2394,"。\n"],[-1,2398,"4."],[1,2400,"。\n"],[1,2402,"写S"],[1,2415,"**"],[-1,2417,"**"],[-1,2449,"。\n"],[-1,2453,"5.-"],[1,2456,"。\n- 写"],[1,2472,"**"],[-1,2474,"**"],[-1,2484,"，获"],[-1,2488,"取"],[1,2489,"，"],[1,2491,"获取"],[-1,2544,"。\n"],[-1,2548,"6.-J "],[1,2553,"。\n-  写J"],[-1,2587,"=="],[1,2591,"> "],[-1,2598,"=="],[1,2602,"> "],[-1,2613,"=="],[1,2617,"> "],[-1,2624,"["],[1,2626,"a"],[-1,2628,"]("],[1,2633,"> "],[-1,2646,"=="],[1,2650,"> "],[-1,2666,"=="],[1,2670,"> ."],[-1,2672,".p. ==S"],[1,2679,"p\n\n\n"],[-1,2686,"p"],[1,2687,"\n"],[1,2689,"Sp"],[1,2714,"2 "],[-1,2716,"2 "],[1,2726,"**"],[-1,2728,"**"],[-1,2737,"\nS"],[-1,2741,"p"],[1,2742,"\n"],[1,2744,"Sp"],[1,2759,"**"],[-1,2761,"**"],[-1,2776,"\nm"],[-1,2780,"y"],[1,2781,"\n"],[1,2783,"my"],[1,2800,"**"],[-1,2802,"**"],[-1,2807," "],[1,2809,"数"],[-1,2813," 起\n\n**；Sp"],[1,2822,"起来**；\n\n"],[1,2824,"Sp"],[-1,2840,"与 于"],[1,2843,"于 S"],[1,2852,"- "],[-1,2854,"- "],[1,2870,"："],[-1,2872,"："],[-1,2893,"my"],[1,2897,"my"],[1,2924,"- "],[-1,2926,"- "],[1,3058,"- "],[-1,3060,"- "],[-1,3084,"它允"],[1,3088,"它允"],[-1,3119,"，如"],[1,3123,"，如"],[-1,3182,"**"],[1,3184,"持久"],[-1,3198,"**"],[1,3200,"\n\n"],[-1,3428,"**"],[1,3430,"业务"],[-1,3440,"**"],[1,3442,"\n\n"],[-1,3480,"\n"],[1,3481," "],[-1,3668,"**"],[1,3670,"表现"],[-1,3693,"**"],[1,3695,"\n\n"],[-1,3742,"\n"],[1,3743," "],[-1,3901,"**ew层**"],[1,3908,"View层\n\n"],[-1,3970,"**联系**"],[1,3976,"各层联系\n\n"],[-1,4181,"\n"],[1,4182," "],[-1,4359,"==**"],[1,4363,"\n\n"],[-1,4584,"  "],[1,4586,"**"],[-1,4634,"in"],[1,4636,"pr"],[1,4755,"in"],[-1,4756,"+S"],[1,6214,"**"],[-1,6217," 1"],[1,6225,"Sp"],[-1,6229," \n"],[-1,6237,"\n"],[1,6238," "],[-1,6254,"  "],[1,6256,"\n\n"],[-1,6382,"S"],[1,6383," "],[-1,6447,"p"],[1,6448," "],[1,6465,"Sp"],[-1,6472,"开源"],[1,6489,"Sp"],[-1,6493,"是于"],[1,8655,"pr"],[-1,8658,"使用"],[1,9350,"pr"],[-1,9354,"用途"],[1,9815,"pr"],[-1,9818,"中受"],[1,10014,"pr"],[-1,10017,"是一"],[1,10153,"面向"],[-1,10155,"（A"],[-1,10329,"。\n"],[1,10331,"框架"],[-1,10426,"\n##"],[1,10429,"。\n\n"],[1,10611,"##"],[-1,10615,".2"],[-1,10682,"、"],[1,10683,"."],[-1,10692,"S"],[1,10693,"2"],[-1,10864,"p"],[1,10865,"、"],[-1,10887,"r"],[1,10888,"S"],[-1,10908,"i"],[1,10909,"p"],[-1,10914,"n"],[1,10915,"r"],[1,10939,"in"],[-1,10940,"MV"],[-1,11237,"\n\n"],[1,11239,"  "],[-1,11290," "],[1,11291,"\n"],[-1,11324," "],[1,11325,"\n"],[-1,11332,"S"],[1,11333," "],[-1,11384,"p"],[1,11385," "],[1,11425,"Sp"],[-1,11433,"属于"],[1,11449,"Sp"],[-1,11453,"Fr"],[1,19587,"。"],[-1,19588," "]],[24,24],[19588,19588]]],[1570887871447,[null,[[1,24,"\n*原理*"],[-1,24,"框架原理\n"],[1,41,"**"],[-1,41,"作用\n\n"],[-1,48," "],[-1,51,"是"],[1,53,"是"],[1,55," "],[-1,71," "],[-1,73," "],[1,75," "],[1,76," "],[-1,81," "],[1,84," "],[-1,92," "],[1,95," "],[-1,96," "],[1,99," "],[-1,131," "],[1,134," "],[-1,137," "],[1,140," "],[1,143,"使用"],[-1,145,"使用"],[1,159,"请求"],[-1,161,"请求"],[1,171,"\n\n"],[1,173,"s"],[-1,173,"\n"],[-1,176,"sp"],[1,190,"，m"],[-1,193,"my"],[1,214,"**"],[1,225,"Sp"],[-1,225,"\n\n"],[1,243,"."],[-1,243,"\n"],[-1,380,"客户"],[-1,388," "],[1,391," "],[1,406,"分发"],[-1,412,"分发"],[1,416,"\n\n"],[1,437,"2"],[-1,437,"\n"],[1,442,"i "],[-1,442,"由 Di"],[-1,460," "],[1,463," "],[-1,466," "],[1,469," "],[1,481,"找到"],[-1,503,"找到"],[-1,510," "],[1,513," "],[1,521,"\n\n；3"],[-1,521,"；\n"],[-1,750,"Co"],[-1,760," "],[1,763," "],[-1,773," "],[1,776," "],[1,786,"\n\n"],[1,802,"4"],[-1,802,"\n"],[-1,807,"Di"],[1,819,"clvt"],[-1,819,"vlet "],[1,826," "],[-1,846," "],[1,849," "],[1,853,"\n5"],[-1,857,"视图"],[1,872,"!["],[1,933,"Sp"],[-1,933,"\n\n"],[-1,1826,"Sp"],[1,1854,"它可"],[-1,1856,"它可"],[1,1871,"["],[-1,1872,"a"],[1,1875,"]("],[-1,1875,"中的"],[1,1898,"），"],[-1,1900,"），"],[-1,1973,"- "],[1,1977,"- "],[-1,2053,"**"],[1,2057,"**"],[1,2116,"。在"],[-1,2118,"。在"],[1,2175,"**"],[-1,2186,"\n要"],[1,2197,"1."],[-1,2199,"先写"],[1,2256,"2."],[-1,2258,"写M"],[1,2351,"3."],[-1,2353,"写M"],[1,2367,"Ma"],[-1,2369,"Ma"],[1,2396,"。\n"],[1,2398,"4."],[-1,2398,"。\n"],[-1,2402,"写S"],[-1,2417,"**"],[1,2421,"**"],[1,2451,"。\n"],[1,2453,"5.-"],[-1,2453,"。\n- 写"],[-1,2474,"**"],[1,2478,"**"],[1,2486,"，获"],[1,2488,"取"],[-1,2488,"，"],[-1,2491,"获取"],[1,2546,"。\n"],[1,2548,"6.-J "],[-1,2548,"。\n-  写J"],[1,2589,"=="],[-1,2591,"> "],[1,2600,"=="],[-1,2602,"> "],[1,2615,"=="],[-1,2617,"> "],[1,2626,"["],[-1,2627,"a"],[1,2630,"]("],[-1,2633,"> "],[1,2648,"=="],[-1,2650,"> "],[1,2668,"=="],[-1,2670,"> ."],[1,2675,".p. ==S"],[-1,2675,"p\n\n\n"],[1,2686,"p"],[-1,2686,"\n"],[-1,2689,"Sp"],[-1,2716,"2 "],[1,2720,"2 "],[-1,2728,"**"],[1,2732,"**"],[1,2739,"\nS"],[1,2741,"p"],[-1,2741,"\n"],[-1,2744,"Sp"],[-1,2761,"**"],[1,2765,"**"],[1,2778,"\nm"],[1,2780,"y"],[-1,2780,"\n"],[-1,2783,"my"],[-1,2802,"**"],[1,2806,"**"],[1,2809," "],[-1,2810,"数"],[1,2815," 起\n\n**；Sp"],[-1,2815,"起来**；\n\n"],[-1,2824,"Sp"],[1,2842,"与 于"],[-1,2842,"于 S"],[-1,2854,"- "],[1,2858,"- "],[-1,2872,"："],[1,2875,"："],[1,2895,"my"],[-1,2897,"my"],[-1,2926,"- "],[1,2930,"- "],[-1,3060,"- "],[1,3064,"- "],[1,3086,"它允"],[-1,3088,"它允"],[1,3121,"，如"],[-1,3123,"，如"],[1,3184,"**"],[-1,3184,"持久"],[1,3200,"**"],[-1,3200,"\n\n"],[1,3430,"**"],[-1,3430,"业务"],[1,3442,"**"],[-1,3442,"\n\n"],[1,3482,"\n"],[-1,3482," "],[1,3670,"**"],[-1,3670,"表现"],[1,3695,"**"],[-1,3695,"\n\n"],[1,3744,"\n"],[-1,3744," "],[1,3903,"**ew层**"],[-1,3903,"View层\n\n"],[1,3972,"**联系**"],[-1,3972,"各层联系\n\n"],[1,4183,"\n"],[-1,4183," "],[1,4361,"==**"],[-1,4361,"\n\n"],[1,4584,"  "],[-1,4584,"**"],[1,4634,"in"],[-1,4634,"pr"],[-1,4755,"in"],[1,4758,"+S"],[-1,6214,"**"],[1,6219," 1"],[-1,6225,"Sp"],[1,6231," \n"],[1,6237,"\n"],[-1,6237," "],[1,6254,"  "],[-1,6254,"\n\n"],[1,6382,"S"],[-1,6382," "],[1,6447,"p"],[-1,6447," "],[-1,6465,"Sp"],[1,6474,"开源"],[-1,6489,"Sp"],[1,6495,"是于"],[-1,8655,"pr"],[1,8660,"使用"],[-1,9350,"pr"],[1,9356,"用途"],[-1,9815,"pr"],[1,9820,"中受"],[-1,10014,"pr"],[1,10019,"是一"],[-1,10153,"面向"],[1,10157,"（A"],[1,10329,"。\n"],[-1,10329,"框架"],[1,10426,"\n##"],[-1,10426,"。\n\n"],[-1,10611,"##"],[1,10617,".2"],[1,10682,"、"],[-1,10682,"."],[1,10692,"S"],[-1,10692,"2"],[1,10864,"p"],[-1,10864,"、"],[1,10887,"r"],[-1,10887,"S"],[1,10908,"i"],[-1,10908,"p"],[1,10914,"n"],[-1,10914,"r"],[-1,10939,"in"],[1,10942,"MV"],[1,11237,"\n\n"],[-1,11237,"  "],[1,11290," "],[-1,11290,"\n"],[1,11324," "],[-1,11324,"\n"],[1,11332,"S"],[-1,11332," "],[1,11384,"p"],[-1,11384," "],[-1,11425,"Sp"],[1,11435,"属于"],[-1,11449,"Sp"],[1,11455,"Fr"],[-1,19587,"。"],[1,19589," "]],[19588,19588],[24,24]]],[1570887837287,["GJX@GJXAIOU",[[1,21416,"======="]],[21416,21416],[21423,21423]]],[1570887839583,["GJX@GJXAIOU",[[1,21433," "]],[21432,21432],[21433,21433]]],[1570887842666,["GJX@GJXAIOU",[[1,21433,"========="]],[21433,21433],[21442,21442]]],[1570887851854,["GJX@GJXAIOU",[[-1,20129,"  "]],[20131,20131],[20129,20129]]],[1570887861392,["GJX@GJXAIOU",[[-1,19936,"   "]],[19870,19870],[19867,19867]]],[1570887861982,["GJX@GJXAIOU",[[-1,19866,"\n"]],[19867,19867],[19866,19866]]],[1570887866151,["GJX@GJXAIOU",[[-1,19867,"                                                                    "]],[19866,19934],[19866,19866]]],[1570887931459,[null,[[-1,24,"\n*原理*"],[1,29,"框架原理\n"],[-1,41,"**"],[1,43,"作用\n\n"],[1,46," "],[1,48,"是"],[-1,49,"是"],[-1,52," "],[1,69," "],[1,70," "],[-1,71," "],[-1,73," "],[1,79," "],[-1,81," "],[1,90," "],[-1,92," "],[1,94," "],[-1,96," "],[1,129," "],[-1,131," "],[1,135," "],[-1,137," "],[-1,141,"使用"],[1,145,"使用"],[-1,157,"请求"],[1,161,"请求"],[-1,169,"\n\n"],[-1,173,"s"],[1,174,"\n"],[1,176,"sp"],[-1,188,"，m"],[1,193,"my"],[-1,212,"**"],[-1,225,"Sp"],[1,227,"\n\n"],[-1,243,"."],[1,244,"\n"],[1,380,"客户"],[1,386," "],[-1,388," "],[-1,404,"分发"],[1,412,"分发"],[-1,414,"\n\n"],[-1,437,"2"],[1,438,"\n"],[-1,442,"i "],[1,444,"由 Di"],[1,458," "],[-1,460," "],[1,464," "],[-1,466," "],[-1,479,"找到"],[1,503,"找到"],[1,508," "],[-1,510," "],[-1,519,"\n\n；3"],[1,523,"；\n"],[1,750,"Co"],[1,758," "],[-1,760," "],[1,771," "],[-1,773," "],[-1,784,"\n\n"],[-1,802,"4"],[1,803,"\n"],[1,807,"Di"],[-1,817,"clvt"],[1,821,"vlet "],[-1,823," "],[1,844," "],[-1,846," "],[-1,851,"\n5"],[1,857,"视图"],[-1,870,"!["],[-1,933,"Sp"],[1,935,"\n\n"],[1,1826,"Sp"],[-1,1852,"它可"],[1,1856,"它可"],[-1,1869,"["],[1,1871,"a"],[-1,1873,"]("],[1,1875,"中的"],[-1,1896,"），"],[1,1900,"），"],[1,1971,"- "],[-1,1973,"- "],[1,2051,"**"],[-1,2053,"**"],[-1,2114,"。在"],[1,2118,"。在"],[-1,2173,"**"],[1,2186,"\n要"],[-1,2195,"1."],[1,2199,"先写"],[-1,2254,"2."],[1,2258,"写M"],[-1,2349,"3."],[1,2353,"写M"],[-1,2365,"Ma"],[1,2369,"Ma"],[-1,2394,"。\n"],[-1,2398,"4."],[1,2400,"。\n"],[1,2402,"写S"],[1,2415,"**"],[-1,2417,"**"],[-1,2449,"。\n"],[-1,2453,"5.-"],[1,2456,"。\n- 写"],[1,2472,"**"],[-1,2474,"**"],[-1,2484,"，获"],[-1,2488,"取"],[1,2489,"，"],[1,2491,"获取"],[-1,2544,"。\n"],[-1,2548,"6.-J "],[1,2553,"。\n-  写J"],[-1,2587,"=="],[1,2591,"> "],[-1,2598,"=="],[1,2602,"> "],[-1,2613,"=="],[1,2617,"> "],[-1,2624,"["],[1,2626,"a"],[-1,2628,"]("],[1,2633,"> "],[-1,2646,"=="],[1,2650,"> "],[-1,2666,"=="],[1,2670,"> ."],[-1,2672,".p. ==S"],[1,2679,"p\n\n\n"],[-1,2686,"p"],[1,2687,"\n"],[1,2689,"Sp"],[1,2714,"2 "],[-1,2716,"2 "],[1,2726,"**"],[-1,2728,"**"],[-1,2737,"\nS"],[-1,2741,"p"],[1,2742,"\n"],[1,2744,"Sp"],[1,2759,"**"],[-1,2761,"**"],[-1,2776,"\nm"],[-1,2780,"y"],[1,2781,"\n"],[1,2783,"my"],[1,2800,"**"],[-1,2802,"**"],[-1,2807," "],[1,2809,"数"],[-1,2813," 起\n\n**；Sp"],[1,2822,"起来**；\n\n"],[1,2824,"Sp"],[-1,2840,"与 于"],[1,2843,"于 S"],[1,2852,"- "],[-1,2854,"- "],[1,2870,"："],[-1,2872,"："],[-1,2893,"my"],[1,2897,"my"],[1,2924,"- "],[-1,2926,"- "],[1,3058,"- "],[-1,3060,"- "],[-1,3084,"它允"],[1,3088,"它允"],[-1,3119,"，如"],[1,3123,"，如"],[-1,3182,"**"],[1,3184,"持久"],[-1,3198,"**"],[1,3200,"\n\n"],[-1,3428,"**"],[1,3430,"业务"],[-1,3440,"**"],[1,3442,"\n\n"],[-1,3480,"\n"],[1,3481," "],[-1,3668,"**"],[1,3670,"表现"],[-1,3693,"**"],[1,3695,"\n\n"],[-1,3742,"\n"],[1,3743," "],[-1,3901,"**ew层**"],[1,3908,"View层\n\n"],[-1,3970,"**联系**"],[1,3976,"各层联系\n\n"],[-1,4181,"\n"],[1,4182," "],[-1,4359,"==**"],[1,4363,"\n\n"],[-1,4584,"  "],[1,4586,"**"],[-1,4634,"in"],[1,4636,"pr"],[1,4755,"in"],[-1,4756,"+S"],[1,6214,"**"],[-1,6217," 1"],[1,6225,"Sp"],[-1,6229," \n"],[-1,6237,"\n"],[1,6238," "],[-1,6254,"  "],[1,6256,"\n\n"],[-1,6382,"S"],[1,6383," "],[-1,6447,"p"],[1,6448," "],[1,6465,"Sp"],[-1,6472,"开源"],[1,6489,"Sp"],[-1,6493,"是于"],[1,8655,"pr"],[-1,8658,"使用"],[1,9350,"pr"],[-1,9354,"用途"],[1,9815,"pr"],[-1,9818,"中受"],[1,10014,"pr"],[-1,10017,"是一"],[1,10153,"面向"],[-1,10155,"（A"],[-1,10329,"。\n"],[1,10331,"框架"],[-1,10426,"\n##"],[1,10429,"。\n\n"],[1,10611,"##"],[-1,10615,".2"],[-1,10682,"、"],[1,10683,"."],[-1,10692,"S"],[1,10693,"2"],[-1,10864,"p"],[1,10865,"、"],[-1,10887,"r"],[1,10888,"S"],[-1,10908,"i"],[1,10909,"p"],[-1,10914,"n"],[1,10915,"r"],[1,10939,"in"],[-1,10940,"MV"],[-1,11237,"\n\n"],[1,11239,"  "],[-1,11290," "],[1,11291,"\n"],[-1,11324," "],[1,11325,"\n"],[-1,11332,"S"],[1,11333," "],[-1,11384,"p"],[1,11385," "],[1,11425,"Sp"],[-1,11433,"属于"],[1,11449,"Sp"],[-1,11453,"Fr"],[1,19587,"。"],[-1,19588," "]],[24,24],[19588,19588]]],[1570887931459,[null,[[1,24,"\n*原理*"],[-1,24,"框架原理\n"],[1,41,"**"],[-1,41,"作用\n\n"],[-1,48," "],[-1,51,"是"],[1,53,"是"],[1,55," "],[-1,71," "],[-1,73," "],[1,75," "],[1,76," "],[-1,81," "],[1,84," "],[-1,92," "],[1,95," "],[-1,96," "],[1,99," "],[-1,131," "],[1,134," "],[-1,137," "],[1,140," "],[1,143,"使用"],[-1,145,"使用"],[1,159,"请求"],[-1,161,"请求"],[1,171,"\n\n"],[1,173,"s"],[-1,173,"\n"],[-1,176,"sp"],[1,190,"，m"],[-1,193,"my"],[1,214,"**"],[1,225,"Sp"],[-1,225,"\n\n"],[1,243,"."],[-1,243,"\n"],[-1,380,"客户"],[-1,388," "],[1,391," "],[1,406,"分发"],[-1,412,"分发"],[1,416,"\n\n"],[1,437,"2"],[-1,437,"\n"],[1,442,"i "],[-1,442,"由 Di"],[-1,460," "],[1,463," "],[-1,466," "],[1,469," "],[1,481,"找到"],[-1,503,"找到"],[-1,510," "],[1,513," "],[1,521,"\n\n；3"],[-1,521,"；\n"],[-1,750,"Co"],[-1,760," "],[1,763," "],[-1,773," "],[1,776," "],[1,786,"\n\n"],[1,802,"4"],[-1,802,"\n"],[-1,807,"Di"],[1,819,"clvt"],[-1,819,"vlet "],[1,826," "],[-1,846," "],[1,849," "],[1,853,"\n5"],[-1,857,"视图"],[1,872,"!["],[1,933,"Sp"],[-1,933,"\n\n"],[-1,1826,"Sp"],[1,1854,"它可"],[-1,1856,"它可"],[1,1871,"["],[-1,1872,"a"],[1,1875,"]("],[-1,1875,"中的"],[1,1898,"），"],[-1,1900,"），"],[-1,1973,"- "],[1,1977,"- "],[-1,2053,"**"],[1,2057,"**"],[1,2116,"。在"],[-1,2118,"。在"],[1,2175,"**"],[-1,2186,"\n要"],[1,2197,"1."],[-1,2199,"先写"],[1,2256,"2."],[-1,2258,"写M"],[1,2351,"3."],[-1,2353,"写M"],[1,2367,"Ma"],[-1,2369,"Ma"],[1,2396,"。\n"],[1,2398,"4."],[-1,2398,"。\n"],[-1,2402,"写S"],[-1,2417,"**"],[1,2421,"**"],[1,2451,"。\n"],[1,2453,"5.-"],[-1,2453,"。\n- 写"],[-1,2474,"**"],[1,2478,"**"],[1,2486,"，获"],[1,2488,"取"],[-1,2488,"，"],[-1,2491,"获取"],[1,2546,"。\n"],[1,2548,"6.-J "],[-1,2548,"。\n-  写J"],[1,2589,"=="],[-1,2591,"> "],[1,2600,"=="],[-1,2602,"> "],[1,2615,"=="],[-1,2617,"> "],[1,2626,"["],[-1,2627,"a"],[1,2630,"]("],[-1,2633,"> "],[1,2648,"=="],[-1,2650,"> "],[1,2668,"=="],[-1,2670,"> ."],[1,2675,".p. ==S"],[-1,2675,"p\n\n\n"],[1,2686,"p"],[-1,2686,"\n"],[-1,2689,"Sp"],[-1,2716,"2 "],[1,2720,"2 "],[-1,2728,"**"],[1,2732,"**"],[1,2739,"\nS"],[1,2741,"p"],[-1,2741,"\n"],[-1,2744,"Sp"],[-1,2761,"**"],[1,2765,"**"],[1,2778,"\nm"],[1,2780,"y"],[-1,2780,"\n"],[-1,2783,"my"],[-1,2802,"**"],[1,2806,"**"],[1,2809," "],[-1,2810,"数"],[1,2815," 起\n\n**；Sp"],[-1,2815,"起来**；\n\n"],[-1,2824,"Sp"],[1,2842,"与 于"],[-1,2842,"于 S"],[-1,2854,"- "],[1,2858,"- "],[-1,2872,"："],[1,2875,"："],[1,2895,"my"],[-1,2897,"my"],[-1,2926,"- "],[1,2930,"- "],[-1,3060,"- "],[1,3064,"- "],[1,3086,"它允"],[-1,3088,"它允"],[1,3121,"，如"],[-1,3123,"，如"],[1,3184,"**"],[-1,3184,"持久"],[1,3200,"**"],[-1,3200,"\n\n"],[1,3430,"**"],[-1,3430,"业务"],[1,3442,"**"],[-1,3442,"\n\n"],[1,3482,"\n"],[-1,3482," "],[1,3670,"**"],[-1,3670,"表现"],[1,3695,"**"],[-1,3695,"\n\n"],[1,3744,"\n"],[-1,3744," "],[1,3903,"**ew层**"],[-1,3903,"View层\n\n"],[1,3972,"**联系**"],[-1,3972,"各层联系\n\n"],[1,4183,"\n"],[-1,4183," "],[1,4361,"==**"],[-1,4361,"\n\n"],[1,4584,"  "],[-1,4584,"**"],[1,4634,"in"],[-1,4634,"pr"],[-1,4755,"in"],[1,4758,"+S"],[-1,6214,"**"],[1,6219," 1"],[-1,6225,"Sp"],[1,6231," \n"],[1,6237,"\n"],[-1,6237," "],[1,6254,"  "],[-1,6254,"\n\n"],[1,6382,"S"],[-1,6382," "],[1,6447,"p"],[-1,6447," "],[-1,6465,"Sp"],[1,6474,"开源"],[-1,6489,"Sp"],[1,6495,"是于"],[-1,8655,"pr"],[1,8660,"使用"],[-1,9350,"pr"],[1,9356,"用途"],[-1,9815,"pr"],[1,9820,"中受"],[-1,10014,"pr"],[1,10019,"是一"],[-1,10153,"面向"],[1,10157,"（A"],[1,10329,"。\n"],[-1,10329,"框架"],[1,10426,"\n##"],[-1,10426,"。\n\n"],[-1,10611,"##"],[1,10617,".2"],[1,10682,"、"],[-1,10682,"."],[1,10692,"S"],[-1,10692,"2"],[1,10864,"p"],[-1,10864,"、"],[1,10887,"r"],[-1,10887,"S"],[1,10908,"i"],[-1,10908,"p"],[1,10914,"n"],[-1,10914,"r"],[-1,10939,"in"],[1,10942,"MV"],[1,11237,"\n\n"],[-1,11237,"  "],[1,11290," "],[-1,11290,"\n"],[1,11324," "],[-1,11324,"\n"],[1,11332,"S"],[-1,11332," "],[1,11384,"p"],[-1,11384," "],[-1,11425,"Sp"],[1,11435,"属于"],[-1,11449,"Sp"],[1,11455,"Fr"],[-1,19587,"。"],[1,19589," "]],[19588,19588],[24,24]]],[1570887897164,["GJX@GJXAIOU",[[1,23214,"\n        "]],[23205,23205],[23214,23214]]],[1570887897474,["GJX@GJXAIOU",[[-1,23206,"        "],[1,23214,"\n"]],[23214,23214],[23207,23207]]],[1570887903543,["GJX@GJXAIOU",[[1,23221,"========="]],[23221,23221],[23230,23230]]],[1570887910790,["GJX@GJXAIOU",[[1,23240,"================="]],[23240,23240],[23257,23257]]],[1570887911534,["GJX@GJXAIOU",[[1,23240,"  "]],[23257,23257],[23242,23242]]],[1570887914236,["GJX@GJXAIOU",[[1,23230,"  "]],[23230,23230],[23232,23232]]],[1570888111454,[null,[[-1,24,"\n*原理*"],[1,29,"框架原理\n"],[-1,41,"**"],[1,43,"作用\n\n"],[1,46," "],[1,48,"是"],[-1,49,"是"],[-1,52," "],[1,69," "],[1,70," "],[-1,71," "],[-1,73," "],[1,79," "],[-1,81," "],[1,90," "],[-1,92," "],[1,94," "],[-1,96," "],[1,129," "],[-1,131," "],[1,135," "],[-1,137," "],[-1,141,"使用"],[1,145,"使用"],[-1,157,"请求"],[1,161,"请求"],[-1,169,"\n\n"],[-1,173,"s"],[1,174,"\n"],[1,176,"sp"],[-1,188,"，m"],[1,193,"my"],[-1,212,"**"],[-1,225,"Sp"],[1,227,"\n\n"],[-1,243,"."],[1,244,"\n"],[1,380,"客户"],[1,386," "],[-1,388," "],[-1,404,"分发"],[1,412,"分发"],[-1,414,"\n\n"],[-1,437,"2"],[1,438,"\n"],[-1,442,"i "],[1,444,"由 Di"],[1,458," "],[-1,460," "],[1,464," "],[-1,466," "],[-1,479,"找到"],[1,503,"找到"],[1,508," "],[-1,510," "],[-1,519,"\n\n；3"],[1,523,"；\n"],[1,750,"Co"],[1,758," "],[-1,760," "],[1,771," "],[-1,773," "],[-1,784,"\n\n"],[-1,802,"4"],[1,803,"\n"],[1,807,"Di"],[-1,817,"clvt"],[1,821,"vlet "],[-1,823," "],[1,844," "],[-1,846," "],[-1,851,"\n5"],[1,857,"视图"],[-1,870,"!["],[-1,933,"Sp"],[1,935,"\n\n"],[1,1826,"Sp"],[-1,1852,"它可"],[1,1856,"它可"],[-1,1869,"["],[1,1871,"a"],[-1,1873,"]("],[1,1875,"中的"],[-1,1896,"），"],[1,1900,"），"],[1,1971,"- "],[-1,1973,"- "],[1,2051,"**"],[-1,2053,"**"],[-1,2114,"。在"],[1,2118,"。在"],[-1,2173,"**"],[1,2186,"\n要"],[-1,2195,"1."],[1,2199,"先写"],[-1,2254,"2."],[1,2258,"写M"],[-1,2349,"3."],[1,2353,"写M"],[-1,2365,"Ma"],[1,2369,"Ma"],[-1,2394,"。\n"],[-1,2398,"4."],[1,2400,"。\n"],[1,2402,"写S"],[1,2415,"**"],[-1,2417,"**"],[-1,2449,"。\n"],[-1,2453,"5.-"],[1,2456,"。\n- 写"],[1,2472,"**"],[-1,2474,"**"],[-1,2484,"，获"],[-1,2488,"取"],[1,2489,"，"],[1,2491,"获取"],[-1,2544,"。\n"],[-1,2548,"6.-J "],[1,2553,"。\n-  写J"],[-1,2587,"=="],[1,2591,"> "],[-1,2598,"=="],[1,2602,"> "],[-1,2613,"=="],[1,2617,"> "],[-1,2624,"["],[1,2626,"a"],[-1,2628,"]("],[1,2633,"> "],[-1,2646,"=="],[1,2650,"> "],[-1,2666,"=="],[1,2670,"> ."],[-1,2672,".p. ==S"],[1,2679,"p\n\n\n"],[-1,2686,"p"],[1,2687,"\n"],[1,2689,"Sp"],[1,2714,"2 "],[-1,2716,"2 "],[1,2726,"**"],[-1,2728,"**"],[-1,2737,"\nS"],[-1,2741,"p"],[1,2742,"\n"],[1,2744,"Sp"],[1,2759,"**"],[-1,2761,"**"],[-1,2776,"\nm"],[-1,2780,"y"],[1,2781,"\n"],[1,2783,"my"],[1,2800,"**"],[-1,2802,"**"],[-1,2807," "],[1,2809,"数"],[-1,2813," 起\n\n**；Sp"],[1,2822,"起来**；\n\n"],[1,2824,"Sp"],[-1,2840,"与 于"],[1,2843,"于 S"],[1,2852,"- "],[-1,2854,"- "],[1,2870,"："],[-1,2872,"："],[-1,2893,"my"],[1,2897,"my"],[1,2924,"- "],[-1,2926,"- "],[1,3058,"- "],[-1,3060,"- "],[-1,3084,"它允"],[1,3088,"它允"],[-1,3119,"，如"],[1,3123,"，如"],[-1,3182,"**"],[1,3184,"持久"],[-1,3198,"**"],[1,3200,"\n\n"],[-1,3428,"**"],[1,3430,"业务"],[-1,3440,"**"],[1,3442,"\n\n"],[-1,3480,"\n"],[1,3481," "],[-1,3668,"**"],[1,3670,"表现"],[-1,3693,"**"],[1,3695,"\n\n"],[-1,3742,"\n"],[1,3743," "],[-1,3901,"**ew层**"],[1,3908,"View层\n\n"],[-1,3970,"**联系**"],[1,3976,"各层联系\n\n"],[-1,4181,"\n"],[1,4182," "],[-1,4359,"==**"],[1,4363,"\n\n"],[-1,4584,"  "],[1,4586,"**"],[-1,4634,"in"],[1,4636,"pr"],[1,4755,"in"],[-1,4756,"+S"],[1,6214,"**"],[-1,6217," 1"],[1,6225,"Sp"],[-1,6229," \n"],[-1,6237,"\n"],[1,6238," "],[-1,6254,"  "],[1,6256,"\n\n"],[-1,6382,"S"],[1,6383," "],[-1,6447,"p"],[1,6448," "],[1,6465,"Sp"],[-1,6472,"开源"],[1,6489,"Sp"],[-1,6493,"是于"],[1,8655,"pr"],[-1,8658,"使用"],[1,9350,"pr"],[-1,9354,"用途"],[1,9815,"pr"],[-1,9818,"中受"],[1,10014,"pr"],[-1,10017,"是一"],[1,10153,"面向"],[-1,10155,"（A"],[-1,10329,"。\n"],[1,10331,"框架"],[-1,10426,"\n##"],[1,10429,"。\n\n"],[1,10611,"##"],[-1,10615,".2"],[-1,10682,"、"],[1,10683,"."],[-1,10692,"S"],[1,10693,"2"],[-1,10864,"p"],[1,10865,"、"],[-1,10887,"r"],[1,10888,"S"],[-1,10908,"i"],[1,10909,"p"],[-1,10914,"n"],[1,10915,"r"],[1,10939,"in"],[-1,10940,"MV"],[-1,11237,"\n\n"],[1,11239,"  "],[-1,11290," "],[1,11291,"\n"],[-1,11324," "],[1,11325,"\n"],[-1,11332,"S"],[1,11333," "],[-1,11384,"p"],[1,11385," "],[1,11425,"Sp"],[-1,11433,"属于"],[1,11449,"Sp"],[-1,11453,"Fr"],[1,19587,"。"],[-1,19588," "]],[24,24],[19588,19588]]],[1570888111455,[null,[[1,24,"\n*原理*"],[-1,24,"框架原理\n"],[1,41,"**"],[-1,41,"作用\n\n"],[-1,48," "],[-1,51,"是"],[1,53,"是"],[1,55," "],[-1,71," "],[-1,73," "],[1,75," "],[1,76," "],[-1,81," "],[1,84," "],[-1,92," "],[1,95," "],[-1,96," "],[1,99," "],[-1,131," "],[1,134," "],[-1,137," "],[1,140," "],[1,143,"使用"],[-1,145,"使用"],[1,159,"请求"],[-1,161,"请求"],[1,171,"\n\n"],[1,173,"s"],[-1,173,"\n"],[-1,176,"sp"],[1,190,"，m"],[-1,193,"my"],[1,214,"**"],[1,225,"Sp"],[-1,225,"\n\n"],[1,243,"."],[-1,243,"\n"],[-1,380,"客户"],[-1,388," "],[1,391," "],[1,406,"分发"],[-1,412,"分发"],[1,416,"\n\n"],[1,437,"2"],[-1,437,"\n"],[1,442,"i "],[-1,442,"由 Di"],[-1,460," "],[1,463," "],[-1,466," "],[1,469," "],[1,481,"找到"],[-1,503,"找到"],[-1,510," "],[1,513," "],[1,521,"\n\n；3"],[-1,521,"；\n"],[-1,750,"Co"],[-1,760," "],[1,763," "],[-1,773," "],[1,776," "],[1,786,"\n\n"],[1,802,"4"],[-1,802,"\n"],[-1,807,"Di"],[1,819,"clvt"],[-1,819,"vlet "],[1,826," "],[-1,846," "],[1,849," "],[1,853,"\n5"],[-1,857,"视图"],[1,872,"!["],[1,933,"Sp"],[-1,933,"\n\n"],[-1,1826,"Sp"],[1,1854,"它可"],[-1,1856,"它可"],[1,1871,"["],[-1,1872,"a"],[1,1875,"]("],[-1,1875,"中的"],[1,1898,"），"],[-1,1900,"），"],[-1,1973,"- "],[1,1977,"- "],[-1,2053,"**"],[1,2057,"**"],[1,2116,"。在"],[-1,2118,"。在"],[1,2175,"**"],[-1,2186,"\n要"],[1,2197,"1."],[-1,2199,"先写"],[1,2256,"2."],[-1,2258,"写M"],[1,2351,"3."],[-1,2353,"写M"],[1,2367,"Ma"],[-1,2369,"Ma"],[1,2396,"。\n"],[1,2398,"4."],[-1,2398,"。\n"],[-1,2402,"写S"],[-1,2417,"**"],[1,2421,"**"],[1,2451,"。\n"],[1,2453,"5.-"],[-1,2453,"。\n- 写"],[-1,2474,"**"],[1,2478,"**"],[1,2486,"，获"],[1,2488,"取"],[-1,2488,"，"],[-1,2491,"获取"],[1,2546,"。\n"],[1,2548,"6.-J "],[-1,2548,"。\n-  写J"],[1,2589,"=="],[-1,2591,"> "],[1,2600,"=="],[-1,2602,"> "],[1,2615,"=="],[-1,2617,"> "],[1,2626,"["],[-1,2627,"a"],[1,2630,"]("],[-1,2633,"> "],[1,2648,"=="],[-1,2650,"> "],[1,2668,"=="],[-1,2670,"> ."],[1,2675,".p. ==S"],[-1,2675,"p\n\n\n"],[1,2686,"p"],[-1,2686,"\n"],[-1,2689,"Sp"],[-1,2716,"2 "],[1,2720,"2 "],[-1,2728,"**"],[1,2732,"**"],[1,2739,"\nS"],[1,2741,"p"],[-1,2741,"\n"],[-1,2744,"Sp"],[-1,2761,"**"],[1,2765,"**"],[1,2778,"\nm"],[1,2780,"y"],[-1,2780,"\n"],[-1,2783,"my"],[-1,2802,"**"],[1,2806,"**"],[1,2809," "],[-1,2810,"数"],[1,2815," 起\n\n**；Sp"],[-1,2815,"起来**；\n\n"],[-1,2824,"Sp"],[1,2842,"与 于"],[-1,2842,"于 S"],[-1,2854,"- "],[1,2858,"- "],[-1,2872,"："],[1,2875,"："],[1,2895,"my"],[-1,2897,"my"],[-1,2926,"- "],[1,2930,"- "],[-1,3060,"- "],[1,3064,"- "],[1,3086,"它允"],[-1,3088,"它允"],[1,3121,"，如"],[-1,3123,"，如"],[1,3184,"**"],[-1,3184,"持久"],[1,3200,"**"],[-1,3200,"\n\n"],[1,3430,"**"],[-1,3430,"业务"],[1,3442,"**"],[-1,3442,"\n\n"],[1,3482,"\n"],[-1,3482," "],[1,3670,"**"],[-1,3670,"表现"],[1,3695,"**"],[-1,3695,"\n\n"],[1,3744,"\n"],[-1,3744," "],[1,3903,"**ew层**"],[-1,3903,"View层\n\n"],[1,3972,"**联系**"],[-1,3972,"各层联系\n\n"],[1,4183,"\n"],[-1,4183," "],[1,4361,"==**"],[-1,4361,"\n\n"],[1,4584,"  "],[-1,4584,"**"],[1,4634,"in"],[-1,4634,"pr"],[-1,4755,"in"],[1,4758,"+S"],[-1,6214,"**"],[1,6219," 1"],[-1,6225,"Sp"],[1,6231," \n"],[1,6237,"\n"],[-1,6237," "],[1,6254,"  "],[-1,6254,"\n\n"],[1,6382,"S"],[-1,6382," "],[1,6447,"p"],[-1,6447," "],[-1,6465,"Sp"],[1,6474,"开源"],[-1,6489,"Sp"],[1,6495,"是于"],[-1,8655,"pr"],[1,8660,"使用"],[-1,9350,"pr"],[1,9356,"用途"],[-1,9815,"pr"],[1,9820,"中受"],[-1,10014,"pr"],[1,10019,"是一"],[-1,10153,"面向"],[1,10157,"（A"],[1,10329,"。\n"],[-1,10329,"框架"],[1,10426,"\n##"],[-1,10426,"。\n\n"],[-1,10611,"##"],[1,10617,".2"],[1,10682,"、"],[-1,10682,"."],[1,10692,"S"],[-1,10692,"2"],[1,10864,"p"],[-1,10864,"、"],[1,10887,"r"],[-1,10887,"S"],[1,10908,"i"],[-1,10908,"p"],[1,10914,"n"],[-1,10914,"r"],[-1,10939,"in"],[1,10942,"MV"],[1,11237,"\n\n"],[-1,11237,"  "],[1,11290," "],[-1,11290,"\n"],[1,11324," "],[-1,11324,"\n"],[1,11332,"S"],[-1,11332," "],[1,11384,"p"],[-1,11384," "],[-1,11425,"Sp"],[1,11435,"属于"],[-1,11449,"Sp"],[1,11455,"Fr"],[-1,19587,"。"],[1,19589," "]],[19588,19588],[24,24]]],[1570888072657,["GJX@GJXAIOU",[[1,25649,"\n        "]],[25640,25640],[25649,25649]]],[1570888076122,["GJX@GJXAIOU",[[1,25663,"===="]],[25663,25663],[25667,25667]]],[1570888079953,["GJX@GJXAIOU",[[1,25672,"========"]],[25672,25672],[25680,25680]]],[1570888102759,["GJX@GJXAIOU",[[1,26929,"**"],[1,26947,"**"]],[26929,26947],[26929,26951]]],[1570888105715,["GJX@GJXAIOU",[[1,26956,"```"]],[26956,26956],[26959,26959]]],[1570888106053,["GJX@GJXAIOU",[[1,26959,"language\n```\n"]],[26959,26959],[26959,26967]]],[1570888107783,["GJX@GJXAIOU",[[-1,26959,"language"],[1,26967,"s"]],[26959,26967],[26960,26960]]],[1570888108680,["GJX@GJXAIOU",[[-1,26959,"s"]],[26960,26960],[26959,26959]]],[1570888109727,["GJX@GJXAIOU",[[1,26959,"xml"]],[26959,26959],[26962,26962]]],[1570888110198,["GJX@GJXAIOU",[[1,26963,"\n"]],[26962,26962],[26963,26963]]],[1570888171455,[null,[[-1,24,"\n*原理*"],[1,29,"框架原理\n"],[-1,41,"**"],[1,43,"作用\n\n"],[1,46," "],[1,48,"是"],[-1,49,"是"],[-1,52," "],[1,69," "],[1,70," "],[-1,71," "],[-1,73," "],[1,79," "],[-1,81," "],[1,90," "],[-1,92," "],[1,94," "],[-1,96," "],[1,129," "],[-1,131," "],[1,135," "],[-1,137," "],[-1,141,"使用"],[1,145,"使用"],[-1,157,"请求"],[1,161,"请求"],[-1,169,"\n\n"],[-1,173,"s"],[1,174,"\n"],[1,176,"sp"],[-1,188,"，m"],[1,193,"my"],[-1,212,"**"],[-1,225,"Sp"],[1,227,"\n\n"],[-1,243,"."],[1,244,"\n"],[1,380,"客户"],[1,386," "],[-1,388," "],[-1,404,"分发"],[1,412,"分发"],[-1,414,"\n\n"],[-1,437,"2"],[1,438,"\n"],[-1,442,"i "],[1,444,"由 Di"],[1,458," "],[-1,460," "],[1,464," "],[-1,466," "],[-1,479,"找到"],[1,503,"找到"],[1,508," "],[-1,510," "],[-1,519,"\n\n；3"],[1,523,"；\n"],[1,750,"Co"],[1,758," "],[-1,760," "],[1,771," "],[-1,773," "],[-1,784,"\n\n"],[-1,802,"4"],[1,803,"\n"],[1,807,"Di"],[-1,817,"clvt"],[1,821,"vlet "],[-1,823," "],[1,844," "],[-1,846," "],[-1,851,"\n5"],[1,857,"视图"],[-1,870,"!["],[-1,933,"Sp"],[1,935,"\n\n"],[1,1826,"Sp"],[-1,1852,"它可"],[1,1856,"它可"],[-1,1869,"["],[1,1871,"a"],[-1,1873,"]("],[1,1875,"中的"],[-1,1896,"），"],[1,1900,"），"],[1,1971,"- "],[-1,1973,"- "],[1,2051,"**"],[-1,2053,"**"],[-1,2114,"。在"],[1,2118,"。在"],[-1,2173,"**"],[1,2186,"\n要"],[-1,2195,"1."],[1,2199,"先写"],[-1,2254,"2."],[1,2258,"写M"],[-1,2349,"3."],[1,2353,"写M"],[-1,2365,"Ma"],[1,2369,"Ma"],[-1,2394,"。\n"],[-1,2398,"4."],[1,2400,"。\n"],[1,2402,"写S"],[1,2415,"**"],[-1,2417,"**"],[-1,2449,"。\n"],[-1,2453,"5.-"],[1,2456,"。\n- 写"],[1,2472,"**"],[-1,2474,"**"],[-1,2484,"，获"],[-1,2488,"取"],[1,2489,"，"],[1,2491,"获取"],[-1,2544,"。\n"],[-1,2548,"6.-J "],[1,2553,"。\n-  写J"],[-1,2587,"=="],[1,2591,"> "],[-1,2598,"=="],[1,2602,"> "],[-1,2613,"=="],[1,2617,"> "],[-1,2624,"["],[1,2626,"a"],[-1,2628,"]("],[1,2633,"> "],[-1,2646,"=="],[1,2650,"> "],[-1,2666,"=="],[1,2670,"> ."],[-1,2672,".p. ==S"],[1,2679,"p\n\n\n"],[-1,2686,"p"],[1,2687,"\n"],[1,2689,"Sp"],[1,2714,"2 "],[-1,2716,"2 "],[1,2726,"**"],[-1,2728,"**"],[-1,2737,"\nS"],[-1,2741,"p"],[1,2742,"\n"],[1,2744,"Sp"],[1,2759,"**"],[-1,2761,"**"],[-1,2776,"\nm"],[-1,2780,"y"],[1,2781,"\n"],[1,2783,"my"],[1,2800,"**"],[-1,2802,"**"],[-1,2807," "],[1,2809,"数"],[-1,2813," 起\n\n**；Sp"],[1,2822,"起来**；\n\n"],[1,2824,"Sp"],[-1,2840,"与 于"],[1,2843,"于 S"],[1,2852,"- "],[-1,2854,"- "],[1,2870,"："],[-1,2872,"："],[-1,2893,"my"],[1,2897,"my"],[1,2924,"- "],[-1,2926,"- "],[1,3058,"- "],[-1,3060,"- "],[-1,3084,"它允"],[1,3088,"它允"],[-1,3119,"，如"],[1,3123,"，如"],[-1,3182,"**"],[1,3184,"持久"],[-1,3198,"**"],[1,3200,"\n\n"],[-1,3428,"**"],[1,3430,"业务"],[-1,3440,"**"],[1,3442,"\n\n"],[-1,3480,"\n"],[1,3481," "],[-1,3668,"**"],[1,3670,"表现"],[-1,3693,"**"],[1,3695,"\n\n"],[-1,3742,"\n"],[1,3743," "],[-1,3901,"**ew层**"],[1,3908,"View层\n\n"],[-1,3970,"**联系**"],[1,3976,"各层联系\n\n"],[-1,4181,"\n"],[1,4182," "],[-1,4359,"==**"],[1,4363,"\n\n"],[-1,4584,"  "],[1,4586,"**"],[-1,4634,"in"],[1,4636,"pr"],[1,4755,"in"],[-1,4756,"+S"],[1,6214,"**"],[-1,6217," 1"],[1,6225,"Sp"],[-1,6229," \n"],[-1,6237,"\n"],[1,6238," "],[-1,6254,"  "],[1,6256,"\n\n"],[-1,6382,"S"],[1,6383," "],[-1,6447,"p"],[1,6448," "],[1,6465,"Sp"],[-1,6472,"开源"],[1,6489,"Sp"],[-1,6493,"是于"],[1,8655,"pr"],[-1,8658,"使用"],[1,9350,"pr"],[-1,9354,"用途"],[1,9815,"pr"],[-1,9818,"中受"],[1,10014,"pr"],[-1,10017,"是一"],[1,10153,"面向"],[-1,10155,"（A"],[-1,10329,"。\n"],[1,10331,"框架"],[-1,10426,"\n##"],[1,10429,"。\n\n"],[1,10611,"##"],[-1,10615,".2"],[-1,10682,"、"],[1,10683,"."],[-1,10692,"S"],[1,10693,"2"],[-1,10864,"p"],[1,10865,"、"],[-1,10887,"r"],[1,10888,"S"],[-1,10908,"i"],[1,10909,"p"],[-1,10914,"n"],[1,10915,"r"],[1,10939,"in"],[-1,10940,"MV"],[-1,11237,"\n\n"],[1,11239,"  "],[-1,11290," "],[1,11291,"\n"],[-1,11324," "],[1,11325,"\n"],[-1,11332,"S"],[1,11333," "],[-1,11384,"p"],[1,11385," "],[1,11425,"Sp"],[-1,11433,"属于"],[1,11449,"Sp"],[-1,11453,"Fr"],[1,19587,"。"],[-1,19588," "]],[24,24],[19588,19588]]],[1570888171455,[null,[[1,24,"\n*原理*"],[-1,24,"框架原理\n"],[1,41,"**"],[-1,41,"作用\n\n"],[-1,48," "],[-1,51,"是"],[1,53,"是"],[1,55," "],[-1,71," "],[-1,73," "],[1,75," "],[1,76," "],[-1,81," "],[1,84," "],[-1,92," "],[1,95," "],[-1,96," "],[1,99," "],[-1,131," "],[1,134," "],[-1,137," "],[1,140," "],[1,143,"使用"],[-1,145,"使用"],[1,159,"请求"],[-1,161,"请求"],[1,171,"\n\n"],[1,173,"s"],[-1,173,"\n"],[-1,176,"sp"],[1,190,"，m"],[-1,193,"my"],[1,214,"**"],[1,225,"Sp"],[-1,225,"\n\n"],[1,243,"."],[-1,243,"\n"],[-1,380,"客户"],[-1,388," "],[1,391," "],[1,406,"分发"],[-1,412,"分发"],[1,416,"\n\n"],[1,437,"2"],[-1,437,"\n"],[1,442,"i "],[-1,442,"由 Di"],[-1,460," "],[1,463," "],[-1,466," "],[1,469," "],[1,481,"找到"],[-1,503,"找到"],[-1,510," "],[1,513," "],[1,521,"\n\n；3"],[-1,521,"；\n"],[-1,750,"Co"],[-1,760," "],[1,763," "],[-1,773," "],[1,776," "],[1,786,"\n\n"],[1,802,"4"],[-1,802,"\n"],[-1,807,"Di"],[1,819,"clvt"],[-1,819,"vlet "],[1,826," "],[-1,846," "],[1,849," "],[1,853,"\n5"],[-1,857,"视图"],[1,872,"!["],[1,933,"Sp"],[-1,933,"\n\n"],[-1,1826,"Sp"],[1,1854,"它可"],[-1,1856,"它可"],[1,1871,"["],[-1,1872,"a"],[1,1875,"]("],[-1,1875,"中的"],[1,1898,"），"],[-1,1900,"），"],[-1,1973,"- "],[1,1977,"- "],[-1,2053,"**"],[1,2057,"**"],[1,2116,"。在"],[-1,2118,"。在"],[1,2175,"**"],[-1,2186,"\n要"],[1,2197,"1."],[-1,2199,"先写"],[1,2256,"2."],[-1,2258,"写M"],[1,2351,"3."],[-1,2353,"写M"],[1,2367,"Ma"],[-1,2369,"Ma"],[1,2396,"。\n"],[1,2398,"4."],[-1,2398,"。\n"],[-1,2402,"写S"],[-1,2417,"**"],[1,2421,"**"],[1,2451,"。\n"],[1,2453,"5.-"],[-1,2453,"。\n- 写"],[-1,2474,"**"],[1,2478,"**"],[1,2486,"，获"],[1,2488,"取"],[-1,2488,"，"],[-1,2491,"获取"],[1,2546,"。\n"],[1,2548,"6.-J "],[-1,2548,"。\n-  写J"],[1,2589,"=="],[-1,2591,"> "],[1,2600,"=="],[-1,2602,"> "],[1,2615,"=="],[-1,2617,"> "],[1,2626,"["],[-1,2627,"a"],[1,2630,"]("],[-1,2633,"> "],[1,2648,"=="],[-1,2650,"> "],[1,2668,"=="],[-1,2670,"> ."],[1,2675,".p. ==S"],[-1,2675,"p\n\n\n"],[1,2686,"p"],[-1,2686,"\n"],[-1,2689,"Sp"],[-1,2716,"2 "],[1,2720,"2 "],[-1,2728,"**"],[1,2732,"**"],[1,2739,"\nS"],[1,2741,"p"],[-1,2741,"\n"],[-1,2744,"Sp"],[-1,2761,"**"],[1,2765,"**"],[1,2778,"\nm"],[1,2780,"y"],[-1,2780,"\n"],[-1,2783,"my"],[-1,2802,"**"],[1,2806,"**"],[1,2809," "],[-1,2810,"数"],[1,2815," 起\n\n**；Sp"],[-1,2815,"起来**；\n\n"],[-1,2824,"Sp"],[1,2842,"与 于"],[-1,2842,"于 S"],[-1,2854,"- "],[1,2858,"- "],[-1,2872,"："],[1,2875,"："],[1,2895,"my"],[-1,2897,"my"],[-1,2926,"- "],[1,2930,"- "],[-1,3060,"- "],[1,3064,"- "],[1,3086,"它允"],[-1,3088,"它允"],[1,3121,"，如"],[-1,3123,"，如"],[1,3184,"**"],[-1,3184,"持久"],[1,3200,"**"],[-1,3200,"\n\n"],[1,3430,"**"],[-1,3430,"业务"],[1,3442,"**"],[-1,3442,"\n\n"],[1,3482,"\n"],[-1,3482," "],[1,3670,"**"],[-1,3670,"表现"],[1,3695,"**"],[-1,3695,"\n\n"],[1,3744,"\n"],[-1,3744," "],[1,3903,"**ew层**"],[-1,3903,"View层\n\n"],[1,3972,"**联系**"],[-1,3972,"各层联系\n\n"],[1,4183,"\n"],[-1,4183," "],[1,4361,"==**"],[-1,4361,"\n\n"],[1,4584,"  "],[-1,4584,"**"],[1,4634,"in"],[-1,4634,"pr"],[-1,4755,"in"],[1,4758,"+S"],[-1,6214,"**"],[1,6219," 1"],[-1,6225,"Sp"],[1,6231," \n"],[1,6237,"\n"],[-1,6237," "],[1,6254,"  "],[-1,6254,"\n\n"],[1,6382,"S"],[-1,6382," "],[1,6447,"p"],[-1,6447," "],[-1,6465,"Sp"],[1,6474,"开源"],[-1,6489,"Sp"],[1,6495,"是于"],[-1,8655,"pr"],[1,8660,"使用"],[-1,9350,"pr"],[1,9356,"用途"],[-1,9815,"pr"],[1,9820,"中受"],[-1,10014,"pr"],[1,10019,"是一"],[-1,10153,"面向"],[1,10157,"（A"],[1,10329,"。\n"],[-1,10329,"框架"],[1,10426,"\n##"],[-1,10426,"。\n\n"],[-1,10611,"##"],[1,10617,".2"],[1,10682,"、"],[-1,10682,"."],[1,10692,"S"],[-1,10692,"2"],[1,10864,"p"],[-1,10864,"、"],[1,10887,"r"],[-1,10887,"S"],[1,10908,"i"],[-1,10908,"p"],[1,10914,"n"],[-1,10914,"r"],[-1,10939,"in"],[1,10942,"MV"],[1,11237,"\n\n"],[-1,11237,"  "],[1,11290," "],[-1,11290,"\n"],[1,11324," "],[-1,11324,"\n"],[1,11332,"S"],[-1,11332," "],[1,11384,"p"],[-1,11384," "],[-1,11425,"Sp"],[1,11435,"属于"],[-1,11449,"Sp"],[1,11455,"Fr"],[-1,19587,"。"],[1,19589," "]],[19588,19588],[24,24]]],[1570888121026,["GJX@GJXAIOU",[[-1,26969,"<?xml version=\"1.0\" encoding=\"UTF-8\"?>  \n<beans xmlns=\"http://www.springframework.org/schema/beans\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:p=\"http://www.springframework.org/schema/p\" xmlns:context=\"http://www.springframework.org/schema/context\" xmlns:mvc=\"http://www.springframework.org/schema/mvc\" xsi:schemaLocation=\"http://www.springframework.org/schema/beans    \n                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd    \n                        http://www.springframework.org/schema/context    \n                        http://www.springframework.org/schema/context/spring-context-3.1.xsd    \n                        http://www.springframework.org/schema/mvc    \n                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd\">  \n    <!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->  \n    <context:component-scan base-package=\"com.javen.controller\" />  \n    <!-- 扩充了注解驱动，可以将请求参数绑定到控制器参数 -->\n    <mvc:annotation-driven/>\n    <!-- 静态资源处理  css js imgs -->\n    <mvc:resources location=\"/resources/**\" mapping=\"/resources\"/>\n\n    <!--避免IE执行AJAX时，返回JSON出现下载文件 -->  \n    <bean id=\"mappingJacksonHttpMessageConverter\" class=\"org.springframework.http.converter.json.MappingJacksonHttpMessageConverter\">  \n        <property name=\"supportedMediaTypes\">  \n            <list>  \n                <value>text/html;charset=UTF-8</value>  \n            </list>  \n        </property>  \n    </bean>  \n    <!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->  \n    <bean class=\"org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter\">  \n        <property name=\"messageConverters\">  \n            <list>  \n                <ref bean=\"mappingJacksonHttpMessageConverter\" /> <!-- JSON转换器 -->  \n            </list>  \n        </property>  \n    </bean>  \n\n    <!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->  \n    <bean id=\"multipartResolver\" class=\"org.springframework.web.multipart.commons.CommonsMultipartResolver\">    \n        <!-- 默认编码 -->  \n        <property name=\"defaultEncoding\" value=\"utf-8\" />    \n        <!-- 文件大小最大值 -->  \n        <property name=\"maxUploadSize\" value=\"10485760000\" />    \n        <!-- 内存中的最大值 -->  \n        <property name=\"maxInMemorySize\" value=\"40960\" />    \n        <!-- 启用是为了推迟文件解析，以便捕获文件大小异常 -->\n        <property name=\"resolveLazily\" value=\"true\"/>\n    </bean>   \n\n    <!-- 配置ViewResolver 。可用多个ViewResolver 。使用order属性排序。   InternalResourceViewResolver 放在最后-->\n    <bean class=\"org.springframework.web.servlet.view.ContentNegotiatingViewResolver\">\n    <property name=\"order\" value=\"1\"></property>\n        <property name=\"mediaTypes\">\n            <map>\n                <!-- 告诉视图解析器，返回的类型为json格式 -->\n                <entry key=\"json\" value=\"application/json\" />\n                <entry key=\"xml\" value=\"application/xml\" />\n                <entry key=\"htm\" value=\"text/htm\" />\n            </map>\n        </property>\n        <property name=\"defaultViews\">\n            <list>\n                <!-- ModelAndView里的数据变成JSON -->\n                <bean class=\"org.springframework.web.servlet.view.json.MappingJacksonJsonView\" />\n            </list>\n        </property>\n        <property name=\"ignoreAcceptHeader\" value=\"true\"></property>\n    </bean>\n\n   <!-- 定义跳转的文件的前后缀 ，视图模式配置-->  \n    <bean class=\"org.springframework.web.servlet.view.InternalResourceViewResolver\">  \n        <!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->  \n        <property name=\"prefix\" value=\"/WEB-INF/jsp/\" />  \n        <property name=\"suffix\" value=\".jsp\" />  \n    </bean>  \n</beans>  "]],[26969,30545],[26969,26969]]],[1570888124956,["GJX@GJXAIOU",[[1,26963,"<?xml version=\"1.0\" encoding=\"UTF-8\"?>  \n<beans xmlns=\"http://www.springframework.org/schema/beans\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:p=\"http://www.springframework.org/schema/p\" xmlns:context=\"http://www.springframework.org/schema/context\" xmlns:mvc=\"http://www.springframework.org/schema/mvc\" xsi:schemaLocation=\"http://www.springframework.org/schema/beans    \n                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd    \n                        http://www.springframework.org/schema/context    \n                        http://www.springframework.org/schema/context/spring-context-3.1.xsd    \n                        http://www.springframework.org/schema/mvc    \n                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd\">  \n    <!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->  \n    <context:component-scan base-package=\"com.javen.controller\" />  \n    <!-- 扩充了注解驱动，可以将请求参数绑定到控制器参数 -->\n    <mvc:annotation-driven/>\n    <!-- 静态资源处理  css js imgs -->\n    <mvc:resources location=\"/resources/**\" mapping=\"/resources\"/>\n\n    <!--避免IE执行AJAX时，返回JSON出现下载文件 -->  \n    <bean id=\"mappingJacksonHttpMessageConverter\" class=\"org.springframework.http.converter.json.MappingJacksonHttpMessageConverter\">  \n        <property name=\"supportedMediaTypes\">  \n            <list>  \n                <value>text/html;charset=UTF-8</value>  \n            </list>  \n        </property>  \n    </bean>  \n    <!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->  \n    <bean class=\"org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter\">  \n        <property name=\"messageConverters\">  \n            <list>  \n                <ref bean=\"mappingJacksonHttpMessageConverter\" /> <!-- JSON转换器 -->  \n            </list>  \n        </property>  \n    </bean>  \n\n    <!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->  \n    <bean id=\"multipartResolver\" class=\"org.springframework.web.multipart.commons.CommonsMultipartResolver\">    \n        <!-- 默认编码 -->  \n        <property name=\"defaultEncoding\" value=\"utf-8\" />    \n        <!-- 文件大小最大值 -->  \n        <property name=\"maxUploadSize\" value=\"10485760000\" />    \n        <!-- 内存中的最大值 -->  \n        <property name=\"maxInMemorySize\" value=\"40960\" />    \n        <!-- 启用是为了推迟文件解析，以便捕获文件大小异常 -->\n        <property name=\"resolveLazily\" value=\"true\"/>\n    </bean>   \n\n    <!-- 配置ViewResolver 。可用多个ViewResolver 。使用order属性排序。   InternalResourceViewResolver 放在最后-->\n    <bean class=\"org.springframework.web.servlet.view.ContentNegotiatingViewResolver\">\n    <property name=\"order\" value=\"1\"></property>\n        <property name=\"mediaTypes\">\n            <map>\n                <!-- 告诉视图解析器，返回的类型为json格式 -->\n                <entry key=\"json\" value=\"application/json\" />\n                <entry key=\"xml\" value=\"application/xml\" />\n                <entry key=\"htm\" value=\"text/htm\" />\n            </map>\n        </property>\n        <property name=\"defaultViews\">\n            <list>\n                <!-- ModelAndView里的数据变成JSON -->\n                <bean class=\"org.springframework.web.servlet.view.json.MappingJacksonJsonView\" />\n            </list>\n        </property>\n        <property name=\"ignoreAcceptHeader\" value=\"true\"></property>\n    </bean>\n\n   <!-- 定义跳转的文件的前后缀 ，视图模式配置-->  \n    <bean class=\"org.springframework.web.servlet.view.InternalResourceViewResolver\">  \n        <!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->  \n        <property name=\"prefix\" value=\"/WEB-INF/jsp/\" />  \n        <property name=\"suffix\" value=\".jsp\" />  \n    </bean>  \n</beans>  "]],[26963,26963],[30539,30539]]],[1570888231456,[null,[[-1,24,"\n*原理*"],[1,29,"框架原理\n"],[-1,41,"**"],[1,43,"作用\n\n"],[1,46," "],[1,48,"是"],[-1,49,"是"],[-1,52," "],[1,69," "],[1,70," "],[-1,71," "],[-1,73," "],[1,79," "],[-1,81," "],[1,90," "],[-1,92," "],[1,94," "],[-1,96," "],[1,129," "],[-1,131," "],[1,135," "],[-1,137," "],[-1,141,"使用"],[1,145,"使用"],[-1,157,"请求"],[1,161,"请求"],[-1,169,"\n\n"],[-1,173,"s"],[1,174,"\n"],[1,176,"sp"],[-1,188,"，m"],[1,193,"my"],[-1,212,"**"],[-1,225,"Sp"],[1,227,"\n\n"],[-1,243,"."],[1,244,"\n"],[1,380,"客户"],[1,386," "],[-1,388," "],[-1,404,"分发"],[1,412,"分发"],[-1,414,"\n\n"],[-1,437,"2"],[1,438,"\n"],[-1,442,"i "],[1,444,"由 Di"],[1,458," "],[-1,460," "],[1,464," "],[-1,466," "],[-1,479,"找到"],[1,503,"找到"],[1,508," "],[-1,510," "],[-1,519,"\n\n；3"],[1,523,"；\n"],[1,750,"Co"],[1,758," "],[-1,760," "],[1,771," "],[-1,773," "],[-1,784,"\n\n"],[-1,802,"4"],[1,803,"\n"],[1,807,"Di"],[-1,817,"clvt"],[1,821,"vlet "],[-1,823," "],[1,844," "],[-1,846," "],[-1,851,"\n5"],[1,857,"视图"],[-1,870,"!["],[-1,933,"Sp"],[1,935,"\n\n"],[1,1826,"Sp"],[-1,1852,"它可"],[1,1856,"它可"],[-1,1869,"["],[1,1871,"a"],[-1,1873,"]("],[1,1875,"中的"],[-1,1896,"），"],[1,1900,"），"],[1,1971,"- "],[-1,1973,"- "],[1,2051,"**"],[-1,2053,"**"],[-1,2114,"。在"],[1,2118,"。在"],[-1,2173,"**"],[1,2186,"\n要"],[-1,2195,"1."],[1,2199,"先写"],[-1,2254,"2."],[1,2258,"写M"],[-1,2349,"3."],[1,2353,"写M"],[-1,2365,"Ma"],[1,2369,"Ma"],[-1,2394,"。\n"],[-1,2398,"4."],[1,2400,"。\n"],[1,2402,"写S"],[1,2415,"**"],[-1,2417,"**"],[-1,2449,"。\n"],[-1,2453,"5.-"],[1,2456,"。\n- 写"],[1,2472,"**"],[-1,2474,"**"],[-1,2484,"，获"],[-1,2488,"取"],[1,2489,"，"],[1,2491,"获取"],[-1,2544,"。\n"],[-1,2548,"6.-J "],[1,2553,"。\n-  写J"],[-1,2587,"=="],[1,2591,"> "],[-1,2598,"=="],[1,2602,"> "],[-1,2613,"=="],[1,2617,"> "],[-1,2624,"["],[1,2626,"a"],[-1,2628,"]("],[1,2633,"> "],[-1,2646,"=="],[1,2650,"> "],[-1,2666,"=="],[1,2670,"> ."],[-1,2672,".p. ==S"],[1,2679,"p\n\n\n"],[-1,2686,"p"],[1,2687,"\n"],[1,2689,"Sp"],[1,2714,"2 "],[-1,2716,"2 "],[1,2726,"**"],[-1,2728,"**"],[-1,2737,"\nS"],[-1,2741,"p"],[1,2742,"\n"],[1,2744,"Sp"],[1,2759,"**"],[-1,2761,"**"],[-1,2776,"\nm"],[-1,2780,"y"],[1,2781,"\n"],[1,2783,"my"],[1,2800,"**"],[-1,2802,"**"],[-1,2807," "],[1,2809,"数"],[-1,2813," 起\n\n**；Sp"],[1,2822,"起来**；\n\n"],[1,2824,"Sp"],[-1,2840,"与 于"],[1,2843,"于 S"],[1,2852,"- "],[-1,2854,"- "],[1,2870,"："],[-1,2872,"："],[-1,2893,"my"],[1,2897,"my"],[1,2924,"- "],[-1,2926,"- "],[1,3058,"- "],[-1,3060,"- "],[-1,3084,"它允"],[1,3088,"它允"],[-1,3119,"，如"],[1,3123,"，如"],[-1,3182,"**"],[1,3184,"持久"],[-1,3198,"**"],[1,3200,"\n\n"],[-1,3428,"**"],[1,3430,"业务"],[-1,3440,"**"],[1,3442,"\n\n"],[-1,3480,"\n"],[1,3481," "],[-1,3668,"**"],[1,3670,"表现"],[-1,3693,"**"],[1,3695,"\n\n"],[-1,3742,"\n"],[1,3743," "],[-1,3901,"**ew层**"],[1,3908,"View层\n\n"],[-1,3970,"**联系**"],[1,3976,"各层联系\n\n"],[-1,4181,"\n"],[1,4182," "],[-1,4359,"==**"],[1,4363,"\n\n"],[-1,4584,"  "],[1,4586,"**"],[-1,4634,"in"],[1,4636,"pr"],[1,4755,"in"],[-1,4756,"+S"],[1,6214,"**"],[-1,6217," 1"],[1,6225,"Sp"],[-1,6229," \n"],[-1,6237,"\n"],[1,6238," "],[-1,6254,"  "],[1,6256,"\n\n"],[-1,6382,"S"],[1,6383," "],[-1,6447,"p"],[1,6448," "],[1,6465,"Sp"],[-1,6472,"开源"],[1,6489,"Sp"],[-1,6493,"是于"],[1,8655,"pr"],[-1,8658,"使用"],[1,9350,"pr"],[-1,9354,"用途"],[1,9815,"pr"],[-1,9818,"中受"],[1,10014,"pr"],[-1,10017,"是一"],[1,10153,"面向"],[-1,10155,"（A"],[-1,10329,"。\n"],[1,10331,"框架"],[-1,10426,"\n##"],[1,10429,"。\n\n"],[1,10611,"##"],[-1,10615,".2"],[-1,10682,"、"],[1,10683,"."],[-1,10692,"S"],[1,10693,"2"],[-1,10864,"p"],[1,10865,"、"],[-1,10887,"r"],[1,10888,"S"],[-1,10908,"i"],[1,10909,"p"],[-1,10914,"n"],[1,10915,"r"],[1,10939,"in"],[-1,10940,"MV"],[-1,11237,"\n\n"],[1,11239,"  "],[-1,11290," "],[1,11291,"\n"],[-1,11324," "],[1,11325,"\n"],[-1,11332,"S"],[1,11333," "],[-1,11384,"p"],[1,11385," "],[1,11425,"Sp"],[-1,11433,"属于"],[1,11449,"Sp"],[-1,11453,"Fr"],[1,19587,"。"],[-1,19588," "]],[24,24],[19588,19588]]],[1570888231456,[null,[[1,24,"\n*原理*"],[-1,24,"框架原理\n"],[1,41,"**"],[-1,41,"作用\n\n"],[-1,48," "],[-1,51,"是"],[1,53,"是"],[1,55," "],[-1,71," "],[-1,73," "],[1,75," "],[1,76," "],[-1,81," "],[1,84," "],[-1,92," "],[1,95," "],[-1,96," "],[1,99," "],[-1,131," "],[1,134," "],[-1,137," "],[1,140," "],[1,143,"使用"],[-1,145,"使用"],[1,159,"请求"],[-1,161,"请求"],[1,171,"\n\n"],[1,173,"s"],[-1,173,"\n"],[-1,176,"sp"],[1,190,"，m"],[-1,193,"my"],[1,214,"**"],[1,225,"Sp"],[-1,225,"\n\n"],[1,243,"."],[-1,243,"\n"],[-1,380,"客户"],[-1,388," "],[1,391," "],[1,406,"分发"],[-1,412,"分发"],[1,416,"\n\n"],[1,437,"2"],[-1,437,"\n"],[1,442,"i "],[-1,442,"由 Di"],[-1,460," "],[1,463," "],[-1,466," "],[1,469," "],[1,481,"找到"],[-1,503,"找到"],[-1,510," "],[1,513," "],[1,521,"\n\n；3"],[-1,521,"；\n"],[-1,750,"Co"],[-1,760," "],[1,763," "],[-1,773," "],[1,776," "],[1,786,"\n\n"],[1,802,"4"],[-1,802,"\n"],[-1,807,"Di"],[1,819,"clvt"],[-1,819,"vlet "],[1,826," "],[-1,846," "],[1,849," "],[1,853,"\n5"],[-1,857,"视图"],[1,872,"!["],[1,933,"Sp"],[-1,933,"\n\n"],[-1,1826,"Sp"],[1,1854,"它可"],[-1,1856,"它可"],[1,1871,"["],[-1,1872,"a"],[1,1875,"]("],[-1,1875,"中的"],[1,1898,"），"],[-1,1900,"），"],[-1,1973,"- "],[1,1977,"- "],[-1,2053,"**"],[1,2057,"**"],[1,2116,"。在"],[-1,2118,"。在"],[1,2175,"**"],[-1,2186,"\n要"],[1,2197,"1."],[-1,2199,"先写"],[1,2256,"2."],[-1,2258,"写M"],[1,2351,"3."],[-1,2353,"写M"],[1,2367,"Ma"],[-1,2369,"Ma"],[1,2396,"。\n"],[1,2398,"4."],[-1,2398,"。\n"],[-1,2402,"写S"],[-1,2417,"**"],[1,2421,"**"],[1,2451,"。\n"],[1,2453,"5.-"],[-1,2453,"。\n- 写"],[-1,2474,"**"],[1,2478,"**"],[1,2486,"，获"],[1,2488,"取"],[-1,2488,"，"],[-1,2491,"获取"],[1,2546,"。\n"],[1,2548,"6.-J "],[-1,2548,"。\n-  写J"],[1,2589,"=="],[-1,2591,"> "],[1,2600,"=="],[-1,2602,"> "],[1,2615,"=="],[-1,2617,"> "],[1,2626,"["],[-1,2627,"a"],[1,2630,"]("],[-1,2633,"> "],[1,2648,"=="],[-1,2650,"> "],[1,2668,"=="],[-1,2670,"> ."],[1,2675,".p. ==S"],[-1,2675,"p\n\n\n"],[1,2686,"p"],[-1,2686,"\n"],[-1,2689,"Sp"],[-1,2716,"2 "],[1,2720,"2 "],[-1,2728,"**"],[1,2732,"**"],[1,2739,"\nS"],[1,2741,"p"],[-1,2741,"\n"],[-1,2744,"Sp"],[-1,2761,"**"],[1,2765,"**"],[1,2778,"\nm"],[1,2780,"y"],[-1,2780,"\n"],[-1,2783,"my"],[-1,2802,"**"],[1,2806,"**"],[1,2809," "],[-1,2810,"数"],[1,2815," 起\n\n**；Sp"],[-1,2815,"起来**；\n\n"],[-1,2824,"Sp"],[1,2842,"与 于"],[-1,2842,"于 S"],[-1,2854,"- "],[1,2858,"- "],[-1,2872,"："],[1,2875,"："],[1,2895,"my"],[-1,2897,"my"],[-1,2926,"- "],[1,2930,"- "],[-1,3060,"- "],[1,3064,"- "],[1,3086,"它允"],[-1,3088,"它允"],[1,3121,"，如"],[-1,3123,"，如"],[1,3184,"**"],[-1,3184,"持久"],[1,3200,"**"],[-1,3200,"\n\n"],[1,3430,"**"],[-1,3430,"业务"],[1,3442,"**"],[-1,3442,"\n\n"],[1,3482,"\n"],[-1,3482," "],[1,3670,"**"],[-1,3670,"表现"],[1,3695,"**"],[-1,3695,"\n\n"],[1,3744,"\n"],[-1,3744," "],[1,3903,"**ew层**"],[-1,3903,"View层\n\n"],[1,3972,"**联系**"],[-1,3972,"各层联系\n\n"],[1,4183,"\n"],[-1,4183," "],[1,4361,"==**"],[-1,4361,"\n\n"],[1,4584,"  "],[-1,4584,"**"],[1,4634,"in"],[-1,4634,"pr"],[-1,4755,"in"],[1,4758,"+S"],[-1,6214,"**"],[1,6219," 1"],[-1,6225,"Sp"],[1,6231," \n"],[1,6237,"\n"],[-1,6237," "],[1,6254,"  "],[-1,6254,"\n\n"],[1,6382,"S"],[-1,6382," "],[1,6447,"p"],[-1,6447," "],[-1,6465,"Sp"],[1,6474,"开源"],[-1,6489,"Sp"],[1,6495,"是于"],[-1,8655,"pr"],[1,8660,"使用"],[-1,9350,"pr"],[1,9356,"用途"],[-1,9815,"pr"],[1,9820,"中受"],[-1,10014,"pr"],[1,10019,"是一"],[-1,10153,"面向"],[1,10157,"（A"],[1,10329,"。\n"],[-1,10329,"框架"],[1,10426,"\n##"],[-1,10426,"。\n\n"],[-1,10611,"##"],[1,10617,".2"],[1,10682,"、"],[-1,10682,"."],[1,10692,"S"],[-1,10692,"2"],[1,10864,"p"],[-1,10864,"、"],[1,10887,"r"],[-1,10887,"S"],[1,10908,"i"],[-1,10908,"p"],[1,10914,"n"],[-1,10914,"r"],[-1,10939,"in"],[1,10942,"MV"],[1,11237,"\n\n"],[-1,11237,"  "],[1,11290," "],[-1,11290,"\n"],[1,11324," "],[-1,11324,"\n"],[1,11332,"S"],[-1,11332," "],[1,11384,"p"],[-1,11384," "],[-1,11425,"Sp"],[1,11435,"属于"],[-1,11449,"Sp"],[1,11455,"Fr"],[-1,19587,"。"],[1,19589," "]],[19588,19588],[24,24]]],[1570888226758,["GJX@GJXAIOU",[[1,30629,"```"]],[30629,30629],[30632,30632]]],[1570888227174,["GJX@GJXAIOU",[[1,30632,"language\n```\n"]],[30632,30632],[30632,30640]]],[1570888229006,["GJX@GJXAIOU",[[-1,30632,"language"],[1,30640,"x"]],[30632,30640],[30633,30633]]],[1570888229602,["GJX@GJXAIOU",[[1,30633,"ml"]],[30633,30633],[30635,30635]]],[1570888230523,["GJX@GJXAIOU",[[1,30636,"\n"]],[30635,30635],[30636,30636]]],[1570888291457,[null,[[-1,24,"\n*原理*"],[1,29,"框架原理\n"],[-1,41,"**"],[1,43,"作用\n\n"],[1,46," "],[1,48,"是"],[-1,49,"是"],[-1,52," "],[1,69," "],[1,70," "],[-1,71," "],[-1,73," "],[1,79," "],[-1,81," "],[1,90," "],[-1,92," "],[1,94," "],[-1,96," "],[1,129," "],[-1,131," "],[1,135," "],[-1,137," "],[-1,141,"使用"],[1,145,"使用"],[-1,157,"请求"],[1,161,"请求"],[-1,169,"\n\n"],[-1,173,"s"],[1,174,"\n"],[1,176,"sp"],[-1,188,"，m"],[1,193,"my"],[-1,212,"**"],[-1,225,"Sp"],[1,227,"\n\n"],[-1,243,"."],[1,244,"\n"],[1,380,"客户"],[1,386," "],[-1,388," "],[-1,404,"分发"],[1,412,"分发"],[-1,414,"\n\n"],[-1,437,"2"],[1,438,"\n"],[-1,442,"i "],[1,444,"由 Di"],[1,458," "],[-1,460," "],[1,464," "],[-1,466," "],[-1,479,"找到"],[1,503,"找到"],[1,508," "],[-1,510," "],[-1,519,"\n\n；3"],[1,523,"；\n"],[1,750,"Co"],[1,758," "],[-1,760," "],[1,771," "],[-1,773," "],[-1,784,"\n\n"],[-1,802,"4"],[1,803,"\n"],[1,807,"Di"],[-1,817,"clvt"],[1,821,"vlet "],[-1,823," "],[1,844," "],[-1,846," "],[-1,851,"\n5"],[1,857,"视图"],[-1,870,"!["],[-1,933,"Sp"],[1,935,"\n\n"],[1,1826,"Sp"],[-1,1852,"它可"],[1,1856,"它可"],[-1,1869,"["],[1,1871,"a"],[-1,1873,"]("],[1,1875,"中的"],[-1,1896,"），"],[1,1900,"），"],[1,1971,"- "],[-1,1973,"- "],[1,2051,"**"],[-1,2053,"**"],[-1,2114,"。在"],[1,2118,"。在"],[-1,2173,"**"],[1,2186,"\n要"],[-1,2195,"1."],[1,2199,"先写"],[-1,2254,"2."],[1,2258,"写M"],[-1,2349,"3."],[1,2353,"写M"],[-1,2365,"Ma"],[1,2369,"Ma"],[-1,2394,"。\n"],[-1,2398,"4."],[1,2400,"。\n"],[1,2402,"写S"],[1,2415,"**"],[-1,2417,"**"],[-1,2449,"。\n"],[-1,2453,"5.-"],[1,2456,"。\n- 写"],[1,2472,"**"],[-1,2474,"**"],[-1,2484,"，获"],[-1,2488,"取"],[1,2489,"，"],[1,2491,"获取"],[-1,2544,"。\n"],[-1,2548,"6.-J "],[1,2553,"。\n-  写J"],[-1,2587,"=="],[1,2591,"> "],[-1,2598,"=="],[1,2602,"> "],[-1,2613,"=="],[1,2617,"> "],[-1,2624,"["],[1,2626,"a"],[-1,2628,"]("],[1,2633,"> "],[-1,2646,"=="],[1,2650,"> "],[-1,2666,"=="],[1,2670,"> ."],[-1,2672,".p. ==S"],[1,2679,"p\n\n\n"],[-1,2686,"p"],[1,2687,"\n"],[1,2689,"Sp"],[1,2714,"2 "],[-1,2716,"2 "],[1,2726,"**"],[-1,2728,"**"],[-1,2737,"\nS"],[-1,2741,"p"],[1,2742,"\n"],[1,2744,"Sp"],[1,2759,"**"],[-1,2761,"**"],[-1,2776,"\nm"],[-1,2780,"y"],[1,2781,"\n"],[1,2783,"my"],[1,2800,"**"],[-1,2802,"**"],[-1,2807," "],[1,2809,"数"],[-1,2813," 起\n\n**；Sp"],[1,2822,"起来**；\n\n"],[1,2824,"Sp"],[-1,2840,"与 于"],[1,2843,"于 S"],[1,2852,"- "],[-1,2854,"- "],[1,2870,"："],[-1,2872,"："],[-1,2893,"my"],[1,2897,"my"],[1,2924,"- "],[-1,2926,"- "],[1,3058,"- "],[-1,3060,"- "],[-1,3084,"它允"],[1,3088,"它允"],[-1,3119,"，如"],[1,3123,"，如"],[-1,3182,"**"],[1,3184,"持久"],[-1,3198,"**"],[1,3200,"\n\n"],[-1,3428,"**"],[1,3430,"业务"],[-1,3440,"**"],[1,3442,"\n\n"],[-1,3480,"\n"],[1,3481," "],[-1,3668,"**"],[1,3670,"表现"],[-1,3693,"**"],[1,3695,"\n\n"],[-1,3742,"\n"],[1,3743," "],[-1,3901,"**ew层**"],[1,3908,"View层\n\n"],[-1,3970,"**联系**"],[1,3976,"各层联系\n\n"],[-1,4181,"\n"],[1,4182," "],[-1,4359,"==**"],[1,4363,"\n\n"],[-1,4584,"  "],[1,4586,"**"],[-1,4634,"in"],[1,4636,"pr"],[1,4755,"in"],[-1,4756,"+S"],[1,6214,"**"],[-1,6217," 1"],[1,6225,"Sp"],[-1,6229," \n"],[-1,6237,"\n"],[1,6238," "],[-1,6254,"  "],[1,6256,"\n\n"],[-1,6382,"S"],[1,6383," "],[-1,6447,"p"],[1,6448," "],[1,6465,"Sp"],[-1,6472,"开源"],[1,6489,"Sp"],[-1,6493,"是于"],[1,8655,"pr"],[-1,8658,"使用"],[1,9350,"pr"],[-1,9354,"用途"],[1,9815,"pr"],[-1,9818,"中受"],[1,10014,"pr"],[-1,10017,"是一"],[1,10153,"面向"],[-1,10155,"（A"],[-1,10329,"。\n"],[1,10331,"框架"],[-1,10426,"\n##"],[1,10429,"。\n\n"],[1,10611,"##"],[-1,10615,".2"],[-1,10682,"、"],[1,10683,"."],[-1,10692,"S"],[1,10693,"2"],[-1,10864,"p"],[1,10865,"、"],[-1,10887,"r"],[1,10888,"S"],[-1,10908,"i"],[1,10909,"p"],[-1,10914,"n"],[1,10915,"r"],[1,10939,"in"],[-1,10940,"MV"],[-1,11237,"\n\n"],[1,11239,"  "],[-1,11290," "],[1,11291,"\n"],[-1,11324," "],[1,11325,"\n"],[-1,11332,"S"],[1,11333," "],[-1,11384,"p"],[1,11385," "],[1,11425,"Sp"],[-1,11433,"属于"],[1,11449,"Sp"],[-1,11453,"Fr"],[1,19587,"。"],[-1,19588," "]],[24,24],[19588,19588]]],[1570888291457,[null,[[1,24,"\n*原理*"],[-1,24,"框架原理\n"],[1,41,"**"],[-1,41,"作用\n\n"],[-1,48," "],[-1,51,"是"],[1,53,"是"],[1,55," "],[-1,71," "],[-1,73," "],[1,75," "],[1,76," "],[-1,81," "],[1,84," "],[-1,92," "],[1,95," "],[-1,96," "],[1,99," "],[-1,131," "],[1,134," "],[-1,137," "],[1,140," "],[1,143,"使用"],[-1,145,"使用"],[1,159,"请求"],[-1,161,"请求"],[1,171,"\n\n"],[1,173,"s"],[-1,173,"\n"],[-1,176,"sp"],[1,190,"，m"],[-1,193,"my"],[1,214,"**"],[1,225,"Sp"],[-1,225,"\n\n"],[1,243,"."],[-1,243,"\n"],[-1,380,"客户"],[-1,388," "],[1,391," "],[1,406,"分发"],[-1,412,"分发"],[1,416,"\n\n"],[1,437,"2"],[-1,437,"\n"],[1,442,"i "],[-1,442,"由 Di"],[-1,460," "],[1,463," "],[-1,466," "],[1,469," "],[1,481,"找到"],[-1,503,"找到"],[-1,510," "],[1,513," "],[1,521,"\n\n；3"],[-1,521,"；\n"],[-1,750,"Co"],[-1,760," "],[1,763," "],[-1,773," "],[1,776," "],[1,786,"\n\n"],[1,802,"4"],[-1,802,"\n"],[-1,807,"Di"],[1,819,"clvt"],[-1,819,"vlet "],[1,826," "],[-1,846," "],[1,849," "],[1,853,"\n5"],[-1,857,"视图"],[1,872,"!["],[1,933,"Sp"],[-1,933,"\n\n"],[-1,1826,"Sp"],[1,1854,"它可"],[-1,1856,"它可"],[1,1871,"["],[-1,1872,"a"],[1,1875,"]("],[-1,1875,"中的"],[1,1898,"），"],[-1,1900,"），"],[-1,1973,"- "],[1,1977,"- "],[-1,2053,"**"],[1,2057,"**"],[1,2116,"。在"],[-1,2118,"。在"],[1,2175,"**"],[-1,2186,"\n要"],[1,2197,"1."],[-1,2199,"先写"],[1,2256,"2."],[-1,2258,"写M"],[1,2351,"3."],[-1,2353,"写M"],[1,2367,"Ma"],[-1,2369,"Ma"],[1,2396,"。\n"],[1,2398,"4."],[-1,2398,"。\n"],[-1,2402,"写S"],[-1,2417,"**"],[1,2421,"**"],[1,2451,"。\n"],[1,2453,"5.-"],[-1,2453,"。\n- 写"],[-1,2474,"**"],[1,2478,"**"],[1,2486,"，获"],[1,2488,"取"],[-1,2488,"，"],[-1,2491,"获取"],[1,2546,"。\n"],[1,2548,"6.-J "],[-1,2548,"。\n-  写J"],[1,2589,"=="],[-1,2591,"> "],[1,2600,"=="],[-1,2602,"> "],[1,2615,"=="],[-1,2617,"> "],[1,2626,"["],[-1,2627,"a"],[1,2630,"]("],[-1,2633,"> "],[1,2648,"=="],[-1,2650,"> "],[1,2668,"=="],[-1,2670,"> ."],[1,2675,".p. ==S"],[-1,2675,"p\n\n\n"],[1,2686,"p"],[-1,2686,"\n"],[-1,2689,"Sp"],[-1,2716,"2 "],[1,2720,"2 "],[-1,2728,"**"],[1,2732,"**"],[1,2739,"\nS"],[1,2741,"p"],[-1,2741,"\n"],[-1,2744,"Sp"],[-1,2761,"**"],[1,2765,"**"],[1,2778,"\nm"],[1,2780,"y"],[-1,2780,"\n"],[-1,2783,"my"],[-1,2802,"**"],[1,2806,"**"],[1,2809," "],[-1,2810,"数"],[1,2815," 起\n\n**；Sp"],[-1,2815,"起来**；\n\n"],[-1,2824,"Sp"],[1,2842,"与 于"],[-1,2842,"于 S"],[-1,2854,"- "],[1,2858,"- "],[-1,2872,"："],[1,2875,"："],[1,2895,"my"],[-1,2897,"my"],[-1,2926,"- "],[1,2930,"- "],[-1,3060,"- "],[1,3064,"- "],[1,3086,"它允"],[-1,3088,"它允"],[1,3121,"，如"],[-1,3123,"，如"],[1,3184,"**"],[-1,3184,"持久"],[1,3200,"**"],[-1,3200,"\n\n"],[1,3430,"**"],[-1,3430,"业务"],[1,3442,"**"],[-1,3442,"\n\n"],[1,3482,"\n"],[-1,3482," "],[1,3670,"**"],[-1,3670,"表现"],[1,3695,"**"],[-1,3695,"\n\n"],[1,3744,"\n"],[-1,3744," "],[1,3903,"**ew层**"],[-1,3903,"View层\n\n"],[1,3972,"**联系**"],[-1,3972,"各层联系\n\n"],[1,4183,"\n"],[-1,4183," "],[1,4361,"==**"],[-1,4361,"\n\n"],[1,4584,"  "],[-1,4584,"**"],[1,4634,"in"],[-1,4634,"pr"],[-1,4755,"in"],[1,4758,"+S"],[-1,6214,"**"],[1,6219," 1"],[-1,6225,"Sp"],[1,6231," \n"],[1,6237,"\n"],[-1,6237," "],[1,6254,"  "],[-1,6254,"\n\n"],[1,6382,"S"],[-1,6382," "],[1,6447,"p"],[-1,6447," "],[-1,6465,"Sp"],[1,6474,"开源"],[-1,6489,"Sp"],[1,6495,"是于"],[-1,8655,"pr"],[1,8660,"使用"],[-1,9350,"pr"],[1,9356,"用途"],[-1,9815,"pr"],[1,9820,"中受"],[-1,10014,"pr"],[1,10019,"是一"],[-1,10153,"面向"],[1,10157,"（A"],[1,10329,"。\n"],[-1,10329,"框架"],[1,10426,"\n##"],[-1,10426,"。\n\n"],[-1,10611,"##"],[1,10617,".2"],[1,10682,"、"],[-1,10682,"."],[1,10692,"S"],[-1,10692,"2"],[1,10864,"p"],[-1,10864,"、"],[1,10887,"r"],[-1,10887,"S"],[1,10908,"i"],[-1,10908,"p"],[1,10914,"n"],[-1,10914,"r"],[-1,10939,"in"],[1,10942,"MV"],[1,11237,"\n\n"],[-1,11237,"  "],[1,11290," "],[-1,11290,"\n"],[1,11324," "],[-1,11324,"\n"],[1,11332,"S"],[-1,11332," "],[1,11384,"p"],[-1,11384," "],[-1,11425,"Sp"],[1,11435,"属于"],[-1,11449,"Sp"],[1,11455,"Fr"],[-1,19587,"。"],[1,19589," "]],[19588,19588],[24,24]]],[1570888237144,["GJX@GJXAIOU",[[-1,30642,"<?xml version=\"1.0\" encoding=\"UTF-8\"?>  \n<web-app xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns=\"http://java.sun.com/xml/ns/javaee\" xsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\" version=\"3.0\">  \n    <display-name>Archetype Created Web Application</display-name>  \n    <!-- Spring和mybatis的配置文件 -->  \n   <!-- <context-param>  \n        <param-name>contextConfigLocation</param-name>  \n        <param-value>classpath:spring-mybatis.xml</param-value>  \n    </context-param> -->\n    <!-- 编码过滤器 -->  \n    <filter>  \n        <filter-name>encodingFilter</filter-name>  \n        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>  \n        <async-supported>true</async-supported>  \n        <init-param>  \n            <param-name>encoding</param-name>  \n            <param-value>UTF-8</param-value>  \n        </init-param>  \n    </filter>  \n    <filter-mapping>  \n        <filter-name>encodingFilter</filter-name>  \n        <url-pattern>/*</url-pattern>  \n    </filter-mapping>  \n    <!-- Spring监听器 -->  \n   <!-- <listener>  \n        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>  \n    </listener> -->\n    <!-- 防止Spring内存溢出监听器 -->  \n    <!-- <listener>  \n        <listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>  \n    </listener> --> \n\n    <!-- Spring MVC servlet -->  \n    <servlet>  \n        <servlet-name>SpringMVC</servlet-name>  \n        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>  \n        <init-param>  \n            <param-name>contextConfigLocation</param-name>  \n            <param-value>classpath:spring-mvc.xml</param-value>  \n        </init-param>  \n        <load-on-startup>1</load-on-startup>  \n        <async-supported>true</async-supported>  \n    </servlet>  \n    <servlet-mapping>  \n        <servlet-name>SpringMVC</servlet-name>  \n        <!-- 此处可以可以配置成*.do，对应struts的后缀习惯 -->  \n        <url-pattern>/</url-pattern>  \n    </servlet-mapping>  \n    <welcome-file-list>  \n        <welcome-file>/index.jsp</welcome-file>  \n    </welcome-file-list>  \n\n</web-app>  "]],[30642,32833],[30642,30642]]],[1570888240591,["GJX@GJXAIOU",[[1,30636,"<?xml version=\"1.0\" encoding=\"UTF-8\"?>  \n<web-app xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns=\"http://java.sun.com/xml/ns/javaee\" xsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\" version=\"3.0\">  \n    <display-name>Archetype Created Web Application</display-name>  \n    <!-- Spring和mybatis的配置文件 -->  \n   <!-- <context-param>  \n        <param-name>contextConfigLocation</param-name>  \n        <param-value>classpath:spring-mybatis.xml</param-value>  \n    </context-param> -->\n    <!-- 编码过滤器 -->  \n    <filter>  \n        <filter-name>encodingFilter</filter-name>  \n        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>  \n        <async-supported>true</async-supported>  \n        <init-param>  \n            <param-name>encoding</param-name>  \n            <param-value>UTF-8</param-value>  \n        </init-param>  \n    </filter>  \n    <filter-mapping>  \n        <filter-name>encodingFilter</filter-name>  \n        <url-pattern>/*</url-pattern>  \n    </filter-mapping>  \n    <!-- Spring监听器 -->  \n   <!-- <listener>  \n        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>  \n    </listener> -->\n    <!-- 防止Spring内存溢出监听器 -->  \n    <!-- <listener>  \n        <listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>  \n    </listener> --> \n\n    <!-- Spring MVC servlet -->  \n    <servlet>  \n        <servlet-name>SpringMVC</servlet-name>  \n        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>  \n        <init-param>  \n            <param-name>contextConfigLocation</param-name>  \n            <param-value>classpath:spring-mvc.xml</param-value>  \n        </init-param>  \n        <load-on-startup>1</load-on-startup>  \n        <async-supported>true</async-supported>  \n    </servlet>  \n    <servlet-mapping>  \n        <servlet-name>SpringMVC</servlet-name>  \n        <!-- 此处可以可以配置成*.do，对应struts的后缀习惯 -->  \n        <url-pattern>/</url-pattern>  \n    </servlet-mapping>  \n    <welcome-file-list>  \n        <welcome-file>/index.jsp</welcome-file>  \n    </welcome-file-list>  \n\n</web-app>  "]],[30636,30636],[32827,32827]]],[1570888244343,["GJX@GJXAIOU",[[-1,32834,"\n"]],[32833,32833],[32832,32832]]],[1570888244626,["GJX@GJXAIOU",[[-1,32833,"\n"]],[32832,32832],[32831,32831]]],[1570888351551,[null,[[-1,24,"\n*原理*"],[1,29,"框架原理\n"],[-1,41,"**"],[1,43,"作用\n\n"],[1,46," "],[1,48,"是"],[-1,49,"是"],[-1,52," "],[1,69," "],[1,70," "],[-1,71," "],[-1,73," "],[1,79," "],[-1,81," "],[1,90," "],[-1,92," "],[1,94," "],[-1,96," "],[1,129," "],[-1,131," "],[1,135," "],[-1,137," "],[-1,141,"使用"],[1,145,"使用"],[-1,157,"请求"],[1,161,"请求"],[-1,169,"\n\n"],[-1,173,"s"],[1,174,"\n"],[1,176,"sp"],[-1,188,"，m"],[1,193,"my"],[-1,212,"**"],[-1,225,"Sp"],[1,227,"\n\n"],[-1,243,"."],[1,244,"\n"],[1,380,"客户"],[1,386," "],[-1,388," "],[-1,404,"分发"],[1,412,"分发"],[-1,414,"\n\n"],[-1,437,"2"],[1,438,"\n"],[-1,442,"i "],[1,444,"由 Di"],[1,458," "],[-1,460," "],[1,464," "],[-1,466," "],[-1,479,"找到"],[1,503,"找到"],[1,508," "],[-1,510," "],[-1,519,"\n\n；3"],[1,523,"；\n"],[1,750,"Co"],[1,758," "],[-1,760," "],[1,771," "],[-1,773," "],[-1,784,"\n\n"],[-1,802,"4"],[1,803,"\n"],[1,807,"Di"],[-1,817,"clvt"],[1,821,"vlet "],[-1,823," "],[1,844," "],[-1,846," "],[-1,851,"\n5"],[1,857,"视图"],[-1,870,"!["],[-1,933,"Sp"],[1,935,"\n\n"],[1,1826,"Sp"],[-1,1852,"它可"],[1,1856,"它可"],[-1,1869,"["],[1,1871,"a"],[-1,1873,"]("],[1,1875,"中的"],[-1,1896,"），"],[1,1900,"），"],[1,1971,"- "],[-1,1973,"- "],[1,2051,"**"],[-1,2053,"**"],[-1,2114,"。在"],[1,2118,"。在"],[-1,2173,"**"],[1,2186,"\n要"],[-1,2195,"1."],[1,2199,"先写"],[-1,2254,"2."],[1,2258,"写M"],[-1,2349,"3."],[1,2353,"写M"],[-1,2365,"Ma"],[1,2369,"Ma"],[-1,2394,"。\n"],[-1,2398,"4."],[1,2400,"。\n"],[1,2402,"写S"],[1,2415,"**"],[-1,2417,"**"],[-1,2449,"。\n"],[-1,2453,"5.-"],[1,2456,"。\n- 写"],[1,2472,"**"],[-1,2474,"**"],[-1,2484,"，获"],[-1,2488,"取"],[1,2489,"，"],[1,2491,"获取"],[-1,2544,"。\n"],[-1,2548,"6.-J "],[1,2553,"。\n-  写J"],[-1,2587,"=="],[1,2591,"> "],[-1,2598,"=="],[1,2602,"> "],[-1,2613,"=="],[1,2617,"> "],[-1,2624,"["],[1,2626,"a"],[-1,2628,"]("],[1,2633,"> "],[-1,2646,"=="],[1,2650,"> "],[-1,2666,"=="],[1,2670,"> ."],[-1,2672,".p. ==S"],[1,2679,"p\n\n\n"],[-1,2686,"p"],[1,2687,"\n"],[1,2689,"Sp"],[1,2714,"2 "],[-1,2716,"2 "],[1,2726,"**"],[-1,2728,"**"],[-1,2737,"\nS"],[-1,2741,"p"],[1,2742,"\n"],[1,2744,"Sp"],[1,2759,"**"],[-1,2761,"**"],[-1,2776,"\nm"],[-1,2780,"y"],[1,2781,"\n"],[1,2783,"my"],[1,2800,"**"],[-1,2802,"**"],[-1,2807," "],[1,2809,"数"],[-1,2813," 起\n\n**；Sp"],[1,2822,"起来**；\n\n"],[1,2824,"Sp"],[-1,2840,"与 于"],[1,2843,"于 S"],[1,2852,"- "],[-1,2854,"- "],[1,2870,"："],[-1,2872,"："],[-1,2893,"my"],[1,2897,"my"],[1,2924,"- "],[-1,2926,"- "],[1,3058,"- "],[-1,3060,"- "],[-1,3084,"它允"],[1,3088,"它允"],[-1,3119,"，如"],[1,3123,"，如"],[-1,3182,"**"],[1,3184,"持久"],[-1,3198,"**"],[1,3200,"\n\n"],[-1,3428,"**"],[1,3430,"业务"],[-1,3440,"**"],[1,3442,"\n\n"],[-1,3480,"\n"],[1,3481," "],[-1,3668,"**"],[1,3670,"表现"],[-1,3693,"**"],[1,3695,"\n\n"],[-1,3742,"\n"],[1,3743," "],[-1,3901,"**ew层**"],[1,3908,"View层\n\n"],[-1,3970,"**联系**"],[1,3976,"各层联系\n\n"],[-1,4181,"\n"],[1,4182," "],[-1,4359,"==**"],[1,4363,"\n\n"],[-1,4584,"  "],[1,4586,"**"],[-1,4634,"in"],[1,4636,"pr"],[1,4755,"in"],[-1,4756,"+S"],[1,6214,"**"],[-1,6217," 1"],[1,6225,"Sp"],[-1,6229," \n"],[-1,6237,"\n"],[1,6238," "],[-1,6254,"  "],[1,6256,"\n\n"],[-1,6382,"S"],[1,6383," "],[-1,6447,"p"],[1,6448," "],[1,6465,"Sp"],[-1,6472,"开源"],[1,6489,"Sp"],[-1,6493,"是于"],[1,8655,"pr"],[-1,8658,"使用"],[1,9350,"pr"],[-1,9354,"用途"],[1,9815,"pr"],[-1,9818,"中受"],[1,10014,"pr"],[-1,10017,"是一"],[1,10153,"面向"],[-1,10155,"（A"],[-1,10329,"。\n"],[1,10331,"框架"],[-1,10426,"\n##"],[1,10429,"。\n\n"],[1,10611,"##"],[-1,10615,".2"],[-1,10682,"、"],[1,10683,"."],[-1,10692,"S"],[1,10693,"2"],[-1,10864,"p"],[1,10865,"、"],[-1,10887,"r"],[1,10888,"S"],[-1,10908,"i"],[1,10909,"p"],[-1,10914,"n"],[1,10915,"r"],[1,10939,"in"],[-1,10940,"MV"],[-1,11237,"\n\n"],[1,11239,"  "],[-1,11290," "],[1,11291,"\n"],[-1,11324," "],[1,11325,"\n"],[-1,11332,"S"],[1,11333," "],[-1,11384,"p"],[1,11385," "],[1,11425,"Sp"],[-1,11433,"属于"],[1,11449,"Sp"],[-1,11453,"Fr"],[1,19587,"。"],[-1,19588," "]],[24,24],[19588,19588]]],[1570888351551,[null,[[1,24,"\n*原理*"],[-1,24,"框架原理\n"],[1,41,"**"],[-1,41,"作用\n\n"],[-1,48," "],[-1,51,"是"],[1,53,"是"],[1,55," "],[-1,71," "],[-1,73," "],[1,75," "],[1,76," "],[-1,81," "],[1,84," "],[-1,92," "],[1,95," "],[-1,96," "],[1,99," "],[-1,131," "],[1,134," "],[-1,137," "],[1,140," "],[1,143,"使用"],[-1,145,"使用"],[1,159,"请求"],[-1,161,"请求"],[1,171,"\n\n"],[1,173,"s"],[-1,173,"\n"],[-1,176,"sp"],[1,190,"，m"],[-1,193,"my"],[1,214,"**"],[1,225,"Sp"],[-1,225,"\n\n"],[1,243,"."],[-1,243,"\n"],[-1,380,"客户"],[-1,388," "],[1,391," "],[1,406,"分发"],[-1,412,"分发"],[1,416,"\n\n"],[1,437,"2"],[-1,437,"\n"],[1,442,"i "],[-1,442,"由 Di"],[-1,460," "],[1,463," "],[-1,466," "],[1,469," "],[1,481,"找到"],[-1,503,"找到"],[-1,510," "],[1,513," "],[1,521,"\n\n；3"],[-1,521,"；\n"],[-1,750,"Co"],[-1,760," "],[1,763," "],[-1,773," "],[1,776," "],[1,786,"\n\n"],[1,802,"4"],[-1,802,"\n"],[-1,807,"Di"],[1,819,"clvt"],[-1,819,"vlet "],[1,826," "],[-1,846," "],[1,849," "],[1,853,"\n5"],[-1,857,"视图"],[1,872,"!["],[1,933,"Sp"],[-1,933,"\n\n"],[-1,1826,"Sp"],[1,1854,"它可"],[-1,1856,"它可"],[1,1871,"["],[-1,1872,"a"],[1,1875,"]("],[-1,1875,"中的"],[1,1898,"），"],[-1,1900,"），"],[-1,1973,"- "],[1,1977,"- "],[-1,2053,"**"],[1,2057,"**"],[1,2116,"。在"],[-1,2118,"。在"],[1,2175,"**"],[-1,2186,"\n要"],[1,2197,"1."],[-1,2199,"先写"],[1,2256,"2."],[-1,2258,"写M"],[1,2351,"3."],[-1,2353,"写M"],[1,2367,"Ma"],[-1,2369,"Ma"],[1,2396,"。\n"],[1,2398,"4."],[-1,2398,"。\n"],[-1,2402,"写S"],[-1,2417,"**"],[1,2421,"**"],[1,2451,"。\n"],[1,2453,"5.-"],[-1,2453,"。\n- 写"],[-1,2474,"**"],[1,2478,"**"],[1,2486,"，获"],[1,2488,"取"],[-1,2488,"，"],[-1,2491,"获取"],[1,2546,"。\n"],[1,2548,"6.-J "],[-1,2548,"。\n-  写J"],[1,2589,"=="],[-1,2591,"> "],[1,2600,"=="],[-1,2602,"> "],[1,2615,"=="],[-1,2617,"> "],[1,2626,"["],[-1,2627,"a"],[1,2630,"]("],[-1,2633,"> "],[1,2648,"=="],[-1,2650,"> "],[1,2668,"=="],[-1,2670,"> ."],[1,2675,".p. ==S"],[-1,2675,"p\n\n\n"],[1,2686,"p"],[-1,2686,"\n"],[-1,2689,"Sp"],[-1,2716,"2 "],[1,2720,"2 "],[-1,2728,"**"],[1,2732,"**"],[1,2739,"\nS"],[1,2741,"p"],[-1,2741,"\n"],[-1,2744,"Sp"],[-1,2761,"**"],[1,2765,"**"],[1,2778,"\nm"],[1,2780,"y"],[-1,2780,"\n"],[-1,2783,"my"],[-1,2802,"**"],[1,2806,"**"],[1,2809," "],[-1,2810,"数"],[1,2815," 起\n\n**；Sp"],[-1,2815,"起来**；\n\n"],[-1,2824,"Sp"],[1,2842,"与 于"],[-1,2842,"于 S"],[-1,2854,"- "],[1,2858,"- "],[-1,2872,"："],[1,2875,"："],[1,2895,"my"],[-1,2897,"my"],[-1,2926,"- "],[1,2930,"- "],[-1,3060,"- "],[1,3064,"- "],[1,3086,"它允"],[-1,3088,"它允"],[1,3121,"，如"],[-1,3123,"，如"],[1,3184,"**"],[-1,3184,"持久"],[1,3200,"**"],[-1,3200,"\n\n"],[1,3430,"**"],[-1,3430,"业务"],[1,3442,"**"],[-1,3442,"\n\n"],[1,3482,"\n"],[-1,3482," "],[1,3670,"**"],[-1,3670,"表现"],[1,3695,"**"],[-1,3695,"\n\n"],[1,3744,"\n"],[-1,3744," "],[1,3903,"**ew层**"],[-1,3903,"View层\n\n"],[1,3972,"**联系**"],[-1,3972,"各层联系\n\n"],[1,4183,"\n"],[-1,4183," "],[1,4361,"==**"],[-1,4361,"\n\n"],[1,4584,"  "],[-1,4584,"**"],[1,4634,"in"],[-1,4634,"pr"],[-1,4755,"in"],[1,4758,"+S"],[-1,6214,"**"],[1,6219," 1"],[-1,6225,"Sp"],[1,6231," \n"],[1,6237,"\n"],[-1,6237," "],[1,6254,"  "],[-1,6254,"\n\n"],[1,6382,"S"],[-1,6382," "],[1,6447,"p"],[-1,6447," "],[-1,6465,"Sp"],[1,6474,"开源"],[-1,6489,"Sp"],[1,6495,"是于"],[-1,8655,"pr"],[1,8660,"使用"],[-1,9350,"pr"],[1,9356,"用途"],[-1,9815,"pr"],[1,9820,"中受"],[-1,10014,"pr"],[1,10019,"是一"],[-1,10153,"面向"],[1,10157,"（A"],[1,10329,"。\n"],[-1,10329,"框架"],[1,10426,"\n##"],[-1,10426,"。\n\n"],[-1,10611,"##"],[1,10617,".2"],[1,10682,"、"],[-1,10682,"."],[1,10692,"S"],[-1,10692,"2"],[1,10864,"p"],[-1,10864,"、"],[1,10887,"r"],[-1,10887,"S"],[1,10908,"i"],[-1,10908,"p"],[1,10914,"n"],[-1,10914,"r"],[-1,10939,"in"],[1,10942,"MV"],[1,11237,"\n\n"],[-1,11237,"  "],[1,11290," "],[-1,11290,"\n"],[1,11324," "],[-1,11324,"\n"],[1,11332,"S"],[-1,11332," "],[1,11384,"p"],[-1,11384," "],[-1,11425,"Sp"],[1,11435,"属于"],[-1,11449,"Sp"],[1,11455,"Fr"],[-1,19587,"。"],[1,19589," "]],[19588,19588],[24,24]]],[1570888304322,["GJX@GJXAIOU",[[-1,33031,"     "]],[33031,33036],[33031,33031]]],[1570888313792,["GJX@GJXAIOU",[[1,33357,"```"]],[33357,33357],[33360,33360]]],[1570888313966,["GJX@GJXAIOU",[[1,33360,"language\n```\n"]],[33360,33360],[33360,33368]]],[1570888315167,["GJX@GJXAIOU",[[-1,33360,"language"],[1,33368,"p"]],[33360,33368],[33361,33361]]],[1570888318701,["GJX@GJXAIOU",[[1,33361,"roperties"]],[33361,33361],[33370,33370]]],[1570888319921,["GJX@GJXAIOU",[[1,33371,"\n"]],[33370,33370],[33371,33371]]],[1570888351010,["GJX@GJXAIOU",[[-1,33377,"log4j.rootLogger=INFO,Console,File  \n#定义日志输出目的地为控制台  \nlog4j.appender.Console=org.apache.log4j.ConsoleAppender  \nlog4j.appender.Console.Target=System.out  \n#可以灵活地指定日志输出格式，下面一行是指定具体的格式  \nlog4j.appender.Console.layout = org.apache.log4j.PatternLayout  \nlog4j.appender.Console.layout.ConversionPattern=[%c] - %m%n  \n\n#文件大小到达指定尺寸的时候产生一个新的文件  \nlog4j.appender.File = org.apache.log4j.RollingFileAppender  \n#指定输出目录  \nlog4j.appender.File.File = logs/ssm.log  \n#定义文件最大大小  \nlog4j.appender.File.MaxFileSize = 10MB  \n# 输出所以日志，如果换成DEBUG表示输出DEBUG以上级别日志  \nlog4j.appender.File.Threshold = ALL  \nlog4j.appender.File.layout = org.apache.log4j.PatternLayout  \nlog4j.appender.File.layout.ConversionPattern =[%p] [%d{yyyy-MM-dd HH\\:mm\\:ss}][%c]%m%n  "]],[33377,34105],[33377,33377]]],[1570888411556,[null,[[-1,24,"\n*原理*"],[1,29,"框架原理\n"],[-1,41,"**"],[1,43,"作用\n\n"],[1,46," "],[1,48,"是"],[-1,49,"是"],[-1,52," "],[1,69," "],[1,70," "],[-1,71," "],[-1,73," "],[1,79," "],[-1,81," "],[1,90," "],[-1,92," "],[1,94," "],[-1,96," "],[1,129," "],[-1,131," "],[1,135," "],[-1,137," "],[-1,141,"使用"],[1,145,"使用"],[-1,157,"请求"],[1,161,"请求"],[-1,169,"\n\n"],[-1,173,"s"],[1,174,"\n"],[1,176,"sp"],[-1,188,"，m"],[1,193,"my"],[-1,212,"**"],[-1,225,"Sp"],[1,227,"\n\n"],[-1,243,"."],[1,244,"\n"],[1,380,"客户"],[1,386," "],[-1,388," "],[-1,404,"分发"],[1,412,"分发"],[-1,414,"\n\n"],[-1,437,"2"],[1,438,"\n"],[-1,442,"i "],[1,444,"由 Di"],[1,458," "],[-1,460," "],[1,464," "],[-1,466," "],[-1,479,"找到"],[1,503,"找到"],[1,508," "],[-1,510," "],[-1,519,"\n\n；3"],[1,523,"；\n"],[1,750,"Co"],[1,758," "],[-1,760," "],[1,771," "],[-1,773," "],[-1,784,"\n\n"],[-1,802,"4"],[1,803,"\n"],[1,807,"Di"],[-1,817,"clvt"],[1,821,"vlet "],[-1,823," "],[1,844," "],[-1,846," "],[-1,851,"\n5"],[1,857,"视图"],[-1,870,"!["],[-1,933,"Sp"],[1,935,"\n\n"],[1,1826,"Sp"],[-1,1852,"它可"],[1,1856,"它可"],[-1,1869,"["],[1,1871,"a"],[-1,1873,"]("],[1,1875,"中的"],[-1,1896,"），"],[1,1900,"），"],[1,1971,"- "],[-1,1973,"- "],[1,2051,"**"],[-1,2053,"**"],[-1,2114,"。在"],[1,2118,"。在"],[-1,2173,"**"],[1,2186,"\n要"],[-1,2195,"1."],[1,2199,"先写"],[-1,2254,"2."],[1,2258,"写M"],[-1,2349,"3."],[1,2353,"写M"],[-1,2365,"Ma"],[1,2369,"Ma"],[-1,2394,"。\n"],[-1,2398,"4."],[1,2400,"。\n"],[1,2402,"写S"],[1,2415,"**"],[-1,2417,"**"],[-1,2449,"。\n"],[-1,2453,"5.-"],[1,2456,"。\n- 写"],[1,2472,"**"],[-1,2474,"**"],[-1,2484,"，获"],[-1,2488,"取"],[1,2489,"，"],[1,2491,"获取"],[-1,2544,"。\n"],[-1,2548,"6.-J "],[1,2553,"。\n-  写J"],[-1,2587,"=="],[1,2591,"> "],[-1,2598,"=="],[1,2602,"> "],[-1,2613,"=="],[1,2617,"> "],[-1,2624,"["],[1,2626,"a"],[-1,2628,"]("],[1,2633,"> "],[-1,2646,"=="],[1,2650,"> "],[-1,2666,"=="],[1,2670,"> ."],[-1,2672,".p. ==S"],[1,2679,"p\n\n\n"],[-1,2686,"p"],[1,2687,"\n"],[1,2689,"Sp"],[1,2714,"2 "],[-1,2716,"2 "],[1,2726,"**"],[-1,2728,"**"],[-1,2737,"\nS"],[-1,2741,"p"],[1,2742,"\n"],[1,2744,"Sp"],[1,2759,"**"],[-1,2761,"**"],[-1,2776,"\nm"],[-1,2780,"y"],[1,2781,"\n"],[1,2783,"my"],[1,2800,"**"],[-1,2802,"**"],[-1,2807," "],[1,2809,"数"],[-1,2813," 起\n\n**；Sp"],[1,2822,"起来**；\n\n"],[1,2824,"Sp"],[-1,2840,"与 于"],[1,2843,"于 S"],[1,2852,"- "],[-1,2854,"- "],[1,2870,"："],[-1,2872,"："],[-1,2893,"my"],[1,2897,"my"],[1,2924,"- "],[-1,2926,"- "],[1,3058,"- "],[-1,3060,"- "],[-1,3084,"它允"],[1,3088,"它允"],[-1,3119,"，如"],[1,3123,"，如"],[-1,3182,"**"],[1,3184,"持久"],[-1,3198,"**"],[1,3200,"\n\n"],[-1,3428,"**"],[1,3430,"业务"],[-1,3440,"**"],[1,3442,"\n\n"],[-1,3480,"\n"],[1,3481," "],[-1,3668,"**"],[1,3670,"表现"],[-1,3693,"**"],[1,3695,"\n\n"],[-1,3742,"\n"],[1,3743," "],[-1,3901,"**ew层**"],[1,3908,"View层\n\n"],[-1,3970,"**联系**"],[1,3976,"各层联系\n\n"],[-1,4181,"\n"],[1,4182," "],[-1,4359,"==**"],[1,4363,"\n\n"],[-1,4584,"  "],[1,4586,"**"],[-1,4634,"in"],[1,4636,"pr"],[1,4755,"in"],[-1,4756,"+S"],[1,6214,"**"],[-1,6217," 1"],[1,6225,"Sp"],[-1,6229," \n"],[-1,6237,"\n"],[1,6238," "],[-1,6254,"  "],[1,6256,"\n\n"],[-1,6382,"S"],[1,6383," "],[-1,6447,"p"],[1,6448," "],[1,6465,"Sp"],[-1,6472,"开源"],[1,6489,"Sp"],[-1,6493,"是于"],[1,8655,"pr"],[-1,8658,"使用"],[1,9350,"pr"],[-1,9354,"用途"],[1,9815,"pr"],[-1,9818,"中受"],[1,10014,"pr"],[-1,10017,"是一"],[1,10153,"面向"],[-1,10155,"（A"],[-1,10329,"。\n"],[1,10331,"框架"],[-1,10426,"\n##"],[1,10429,"。\n\n"],[1,10611,"##"],[-1,10615,".2"],[-1,10682,"、"],[1,10683,"."],[-1,10692,"S"],[1,10693,"2"],[-1,10864,"p"],[1,10865,"、"],[-1,10887,"r"],[1,10888,"S"],[-1,10908,"i"],[1,10909,"p"],[-1,10914,"n"],[1,10915,"r"],[1,10939,"in"],[-1,10940,"MV"],[-1,11237,"\n\n"],[1,11239,"  "],[-1,11290," "],[1,11291,"\n"],[-1,11324," "],[1,11325,"\n"],[-1,11332,"S"],[1,11333," "],[-1,11384,"p"],[1,11385," "],[1,11425,"Sp"],[-1,11433,"属于"],[1,11449,"Sp"],[-1,11453,"Fr"],[1,19587,"。"],[-1,19588," "]],[24,24],[19588,19588]]],[1570888411556,[null,[[1,24,"\n*原理*"],[-1,24,"框架原理\n"],[1,41,"**"],[-1,41,"作用\n\n"],[-1,48," "],[-1,51,"是"],[1,53,"是"],[1,55," "],[-1,71," "],[-1,73," "],[1,75," "],[1,76," "],[-1,81," "],[1,84," "],[-1,92," "],[1,95," "],[-1,96," "],[1,99," "],[-1,131," "],[1,134," "],[-1,137," "],[1,140," "],[1,143,"使用"],[-1,145,"使用"],[1,159,"请求"],[-1,161,"请求"],[1,171,"\n\n"],[1,173,"s"],[-1,173,"\n"],[-1,176,"sp"],[1,190,"，m"],[-1,193,"my"],[1,214,"**"],[1,225,"Sp"],[-1,225,"\n\n"],[1,243,"."],[-1,243,"\n"],[-1,380,"客户"],[-1,388," "],[1,391," "],[1,406,"分发"],[-1,412,"分发"],[1,416,"\n\n"],[1,437,"2"],[-1,437,"\n"],[1,442,"i "],[-1,442,"由 Di"],[-1,460," "],[1,463," "],[-1,466," "],[1,469," "],[1,481,"找到"],[-1,503,"找到"],[-1,510," "],[1,513," "],[1,521,"\n\n；3"],[-1,521,"；\n"],[-1,750,"Co"],[-1,760," "],[1,763," "],[-1,773," "],[1,776," "],[1,786,"\n\n"],[1,802,"4"],[-1,802,"\n"],[-1,807,"Di"],[1,819,"clvt"],[-1,819,"vlet "],[1,826," "],[-1,846," "],[1,849," "],[1,853,"\n5"],[-1,857,"视图"],[1,872,"!["],[1,933,"Sp"],[-1,933,"\n\n"],[-1,1826,"Sp"],[1,1854,"它可"],[-1,1856,"它可"],[1,1871,"["],[-1,1872,"a"],[1,1875,"]("],[-1,1875,"中的"],[1,1898,"），"],[-1,1900,"），"],[-1,1973,"- "],[1,1977,"- "],[-1,2053,"**"],[1,2057,"**"],[1,2116,"。在"],[-1,2118,"。在"],[1,2175,"**"],[-1,2186,"\n要"],[1,2197,"1."],[-1,2199,"先写"],[1,2256,"2."],[-1,2258,"写M"],[1,2351,"3."],[-1,2353,"写M"],[1,2367,"Ma"],[-1,2369,"Ma"],[1,2396,"。\n"],[1,2398,"4."],[-1,2398,"。\n"],[-1,2402,"写S"],[-1,2417,"**"],[1,2421,"**"],[1,2451,"。\n"],[1,2453,"5.-"],[-1,2453,"。\n- 写"],[-1,2474,"**"],[1,2478,"**"],[1,2486,"，获"],[1,2488,"取"],[-1,2488,"，"],[-1,2491,"获取"],[1,2546,"。\n"],[1,2548,"6.-J "],[-1,2548,"。\n-  写J"],[1,2589,"=="],[-1,2591,"> "],[1,2600,"=="],[-1,2602,"> "],[1,2615,"=="],[-1,2617,"> "],[1,2626,"["],[-1,2627,"a"],[1,2630,"]("],[-1,2633,"> "],[1,2648,"=="],[-1,2650,"> "],[1,2668,"=="],[-1,2670,"> ."],[1,2675,".p. ==S"],[-1,2675,"p\n\n\n"],[1,2686,"p"],[-1,2686,"\n"],[-1,2689,"Sp"],[-1,2716,"2 "],[1,2720,"2 "],[-1,2728,"**"],[1,2732,"**"],[1,2739,"\nS"],[1,2741,"p"],[-1,2741,"\n"],[-1,2744,"Sp"],[-1,2761,"**"],[1,2765,"**"],[1,2778,"\nm"],[1,2780,"y"],[-1,2780,"\n"],[-1,2783,"my"],[-1,2802,"**"],[1,2806,"**"],[1,2809," "],[-1,2810,"数"],[1,2815," 起\n\n**；Sp"],[-1,2815,"起来**；\n\n"],[-1,2824,"Sp"],[1,2842,"与 于"],[-1,2842,"于 S"],[-1,2854,"- "],[1,2858,"- "],[-1,2872,"："],[1,2875,"："],[1,2895,"my"],[-1,2897,"my"],[-1,2926,"- "],[1,2930,"- "],[-1,3060,"- "],[1,3064,"- "],[1,3086,"它允"],[-1,3088,"它允"],[1,3121,"，如"],[-1,3123,"，如"],[1,3184,"**"],[-1,3184,"持久"],[1,3200,"**"],[-1,3200,"\n\n"],[1,3430,"**"],[-1,3430,"业务"],[1,3442,"**"],[-1,3442,"\n\n"],[1,3482,"\n"],[-1,3482," "],[1,3670,"**"],[-1,3670,"表现"],[1,3695,"**"],[-1,3695,"\n\n"],[1,3744,"\n"],[-1,3744," "],[1,3903,"**ew层**"],[-1,3903,"View层\n\n"],[1,3972,"**联系**"],[-1,3972,"各层联系\n\n"],[1,4183,"\n"],[-1,4183," "],[1,4361,"==**"],[-1,4361,"\n\n"],[1,4584,"  "],[-1,4584,"**"],[1,4634,"in"],[-1,4634,"pr"],[-1,4755,"in"],[1,4758,"+S"],[-1,6214,"**"],[1,6219," 1"],[-1,6225,"Sp"],[1,6231," \n"],[1,6237,"\n"],[-1,6237," "],[1,6254,"  "],[-1,6254,"\n\n"],[1,6382,"S"],[-1,6382," "],[1,6447,"p"],[-1,6447," "],[-1,6465,"Sp"],[1,6474,"开源"],[-1,6489,"Sp"],[1,6495,"是于"],[-1,8655,"pr"],[1,8660,"使用"],[-1,9350,"pr"],[1,9356,"用途"],[-1,9815,"pr"],[1,9820,"中受"],[-1,10014,"pr"],[1,10019,"是一"],[-1,10153,"面向"],[1,10157,"（A"],[1,10329,"。\n"],[-1,10329,"框架"],[1,10426,"\n##"],[-1,10426,"。\n\n"],[-1,10611,"##"],[1,10617,".2"],[1,10682,"、"],[-1,10682,"."],[1,10692,"S"],[-1,10692,"2"],[1,10864,"p"],[-1,10864,"、"],[1,10887,"r"],[-1,10887,"S"],[1,10908,"i"],[-1,10908,"p"],[1,10914,"n"],[-1,10914,"r"],[-1,10939,"in"],[1,10942,"MV"],[1,11237,"\n\n"],[-1,11237,"  "],[1,11290," "],[-1,11290,"\n"],[1,11324," "],[-1,11324,"\n"],[1,11332,"S"],[-1,11332," "],[1,11384,"p"],[-1,11384," "],[-1,11425,"Sp"],[1,11435,"属于"],[-1,11449,"Sp"],[1,11455,"Fr"],[-1,19587,"。"],[1,19589," "]],[19588,19588],[24,24]]],[1570888352704,["GJX@GJXAIOU",[[1,33371,"log4j.rootLogger=INFO,Console,File  \n#定义日志输出目的地为控制台  \nlog4j.appender.Console=org.apache.log4j.ConsoleAppender  \nlog4j.appender.Console.Target=System.out  \n#可以灵活地指定日志输出格式，下面一行是指定具体的格式  \nlog4j.appender.Console.layout = org.apache.log4j.PatternLayout  \nlog4j.appender.Console.layout.ConversionPattern=[%c] - %m%n  \n\n#文件大小到达指定尺寸的时候产生一个新的文件  \nlog4j.appender.File = org.apache.log4j.RollingFileAppender  \n#指定输出目录  \nlog4j.appender.File.File = logs/ssm.log  \n#定义文件最大大小  \nlog4j.appender.File.MaxFileSize = 10MB  \n# 输出所以日志，如果换成DEBUG表示输出DEBUG以上级别日志  \nlog4j.appender.File.Threshold = ALL  \nlog4j.appender.File.layout = org.apache.log4j.PatternLayout  \nlog4j.appender.File.layout.ConversionPattern =[%p] [%d{yyyy-MM-dd HH\\:mm\\:ss}][%c]%m%n  "]],[33371,33371],[34099,34099]]],[1570888381296,["GJX@GJXAIOU",[[-1,34128,"**"]],[34130,34130],[34128,34128]]],[1570888382738,["GJX@GJXAIOU",[[-1,34221,"**"]],[34223,34223],[34221,34221]]],[1570888471553,[null,[[-1,24,"\n*原理*"],[1,29,"框架原理\n"],[-1,41,"**"],[1,43,"作用\n\n"],[1,46," "],[1,48,"是"],[-1,49,"是"],[-1,52," "],[1,69," "],[1,70," "],[-1,71," "],[-1,73," "],[1,79," "],[-1,81," "],[1,90," "],[-1,92," "],[1,94," "],[-1,96," "],[1,129," "],[-1,131," "],[1,135," "],[-1,137," "],[-1,141,"使用"],[1,145,"使用"],[-1,157,"请求"],[1,161,"请求"],[-1,169,"\n\n"],[-1,173,"s"],[1,174,"\n"],[1,176,"sp"],[-1,188,"，m"],[1,193,"my"],[-1,212,"**"],[-1,225,"Sp"],[1,227,"\n\n"],[-1,243,"."],[1,244,"\n"],[1,380,"客户"],[1,386," "],[-1,388," "],[-1,404,"分发"],[1,412,"分发"],[-1,414,"\n\n"],[-1,437,"2"],[1,438,"\n"],[-1,442,"i "],[1,444,"由 Di"],[1,458," "],[-1,460," "],[1,464," "],[-1,466," "],[-1,479,"找到"],[1,503,"找到"],[1,508," "],[-1,510," "],[-1,519,"\n\n；3"],[1,523,"；\n"],[1,750,"Co"],[1,758," "],[-1,760," "],[1,771," "],[-1,773," "],[-1,784,"\n\n"],[-1,802,"4"],[1,803,"\n"],[1,807,"Di"],[-1,817,"clvt"],[1,821,"vlet "],[-1,823," "],[1,844," "],[-1,846," "],[-1,851,"\n5"],[1,857,"视图"],[-1,870,"!["],[-1,933,"Sp"],[1,935,"\n\n"],[1,1826,"Sp"],[-1,1852,"它可"],[1,1856,"它可"],[-1,1869,"["],[1,1871,"a"],[-1,1873,"]("],[1,1875,"中的"],[-1,1896,"），"],[1,1900,"），"],[1,1971,"- "],[-1,1973,"- "],[1,2051,"**"],[-1,2053,"**"],[-1,2114,"。在"],[1,2118,"。在"],[-1,2173,"**"],[1,2186,"\n要"],[-1,2195,"1."],[1,2199,"先写"],[-1,2254,"2."],[1,2258,"写M"],[-1,2349,"3."],[1,2353,"写M"],[-1,2365,"Ma"],[1,2369,"Ma"],[-1,2394,"。\n"],[-1,2398,"4."],[1,2400,"。\n"],[1,2402,"写S"],[1,2415,"**"],[-1,2417,"**"],[-1,2449,"。\n"],[-1,2453,"5.-"],[1,2456,"。\n- 写"],[1,2472,"**"],[-1,2474,"**"],[-1,2484,"，获"],[-1,2488,"取"],[1,2489,"，"],[1,2491,"获取"],[-1,2544,"。\n"],[-1,2548,"6.-J "],[1,2553,"。\n-  写J"],[-1,2587,"=="],[1,2591,"> "],[-1,2598,"=="],[1,2602,"> "],[-1,2613,"=="],[1,2617,"> "],[-1,2624,"["],[1,2626,"a"],[-1,2628,"]("],[1,2633,"> "],[-1,2646,"=="],[1,2650,"> "],[-1,2666,"=="],[1,2670,"> ."],[-1,2672,".p. ==S"],[1,2679,"p\n\n\n"],[-1,2686,"p"],[1,2687,"\n"],[1,2689,"Sp"],[1,2714,"2 "],[-1,2716,"2 "],[1,2726,"**"],[-1,2728,"**"],[-1,2737,"\nS"],[-1,2741,"p"],[1,2742,"\n"],[1,2744,"Sp"],[1,2759,"**"],[-1,2761,"**"],[-1,2776,"\nm"],[-1,2780,"y"],[1,2781,"\n"],[1,2783,"my"],[1,2800,"**"],[-1,2802,"**"],[-1,2807," "],[1,2809,"数"],[-1,2813," 起\n\n**；Sp"],[1,2822,"起来**；\n\n"],[1,2824,"Sp"],[-1,2840,"与 于"],[1,2843,"于 S"],[1,2852,"- "],[-1,2854,"- "],[1,2870,"："],[-1,2872,"："],[-1,2893,"my"],[1,2897,"my"],[1,2924,"- "],[-1,2926,"- "],[1,3058,"- "],[-1,3060,"- "],[-1,3084,"它允"],[1,3088,"它允"],[-1,3119,"，如"],[1,3123,"，如"],[-1,3182,"**"],[1,3184,"持久"],[-1,3198,"**"],[1,3200,"\n\n"],[-1,3428,"**"],[1,3430,"业务"],[-1,3440,"**"],[1,3442,"\n\n"],[-1,3480,"\n"],[1,3481," "],[-1,3668,"**"],[1,3670,"表现"],[-1,3693,"**"],[1,3695,"\n\n"],[-1,3742,"\n"],[1,3743," "],[-1,3901,"**ew层**"],[1,3908,"View层\n\n"],[-1,3970,"**联系**"],[1,3976,"各层联系\n\n"],[-1,4181,"\n"],[1,4182," "],[-1,4359,"==**"],[1,4363,"\n\n"],[-1,4584,"  "],[1,4586,"**"],[-1,4634,"in"],[1,4636,"pr"],[1,4755,"in"],[-1,4756,"+S"],[1,6214,"**"],[-1,6217," 1"],[1,6225,"Sp"],[-1,6229," \n"],[-1,6237,"\n"],[1,6238," "],[-1,6254,"  "],[1,6256,"\n\n"],[-1,6382,"S"],[1,6383," "],[-1,6447,"p"],[1,6448," "],[1,6465,"Sp"],[-1,6472,"开源"],[1,6489,"Sp"],[-1,6493,"是于"],[1,8655,"pr"],[-1,8658,"使用"],[1,9350,"pr"],[-1,9354,"用途"],[1,9815,"pr"],[-1,9818,"中受"],[1,10014,"pr"],[-1,10017,"是一"],[1,10153,"面向"],[-1,10155,"（A"],[-1,10329,"。\n"],[1,10331,"框架"],[-1,10426,"\n##"],[1,10429,"。\n\n"],[1,10611,"##"],[-1,10615,".2"],[-1,10682,"、"],[1,10683,"."],[-1,10692,"S"],[1,10693,"2"],[-1,10864,"p"],[1,10865,"、"],[-1,10887,"r"],[1,10888,"S"],[-1,10908,"i"],[1,10909,"p"],[-1,10914,"n"],[1,10915,"r"],[1,10939,"in"],[-1,10940,"MV"],[-1,11237,"\n\n"],[1,11239,"  "],[-1,11290," "],[1,11291,"\n"],[-1,11324," "],[1,11325,"\n"],[-1,11332,"S"],[1,11333," "],[-1,11384,"p"],[1,11385," "],[1,11425,"Sp"],[-1,11433,"属于"],[1,11449,"Sp"],[-1,11453,"Fr"],[1,19587,"。"],[-1,19588," "]],[24,24],[19588,19588]]],[1570888471553,[null,[[1,24,"\n*原理*"],[-1,24,"框架原理\n"],[1,41,"**"],[-1,41,"作用\n\n"],[-1,48," "],[-1,51,"是"],[1,53,"是"],[1,55," "],[-1,71," "],[-1,73," "],[1,75," "],[1,76," "],[-1,81," "],[1,84," "],[-1,92," "],[1,95," "],[-1,96," "],[1,99," "],[-1,131," "],[1,134," "],[-1,137," "],[1,140," "],[1,143,"使用"],[-1,145,"使用"],[1,159,"请求"],[-1,161,"请求"],[1,171,"\n\n"],[1,173,"s"],[-1,173,"\n"],[-1,176,"sp"],[1,190,"，m"],[-1,193,"my"],[1,214,"**"],[1,225,"Sp"],[-1,225,"\n\n"],[1,243,"."],[-1,243,"\n"],[-1,380,"客户"],[-1,388," "],[1,391," "],[1,406,"分发"],[-1,412,"分发"],[1,416,"\n\n"],[1,437,"2"],[-1,437,"\n"],[1,442,"i "],[-1,442,"由 Di"],[-1,460," "],[1,463," "],[-1,466," "],[1,469," "],[1,481,"找到"],[-1,503,"找到"],[-1,510," "],[1,513," "],[1,521,"\n\n；3"],[-1,521,"；\n"],[-1,750,"Co"],[-1,760," "],[1,763," "],[-1,773," "],[1,776," "],[1,786,"\n\n"],[1,802,"4"],[-1,802,"\n"],[-1,807,"Di"],[1,819,"clvt"],[-1,819,"vlet "],[1,826," "],[-1,846," "],[1,849," "],[1,853,"\n5"],[-1,857,"视图"],[1,872,"!["],[1,933,"Sp"],[-1,933,"\n\n"],[-1,1826,"Sp"],[1,1854,"它可"],[-1,1856,"它可"],[1,1871,"["],[-1,1872,"a"],[1,1875,"]("],[-1,1875,"中的"],[1,1898,"），"],[-1,1900,"），"],[-1,1973,"- "],[1,1977,"- "],[-1,2053,"**"],[1,2057,"**"],[1,2116,"。在"],[-1,2118,"。在"],[1,2175,"**"],[-1,2186,"\n要"],[1,2197,"1."],[-1,2199,"先写"],[1,2256,"2."],[-1,2258,"写M"],[1,2351,"3."],[-1,2353,"写M"],[1,2367,"Ma"],[-1,2369,"Ma"],[1,2396,"。\n"],[1,2398,"4."],[-1,2398,"。\n"],[-1,2402,"写S"],[-1,2417,"**"],[1,2421,"**"],[1,2451,"。\n"],[1,2453,"5.-"],[-1,2453,"。\n- 写"],[-1,2474,"**"],[1,2478,"**"],[1,2486,"，获"],[1,2488,"取"],[-1,2488,"，"],[-1,2491,"获取"],[1,2546,"。\n"],[1,2548,"6.-J "],[-1,2548,"。\n-  写J"],[1,2589,"=="],[-1,2591,"> "],[1,2600,"=="],[-1,2602,"> "],[1,2615,"=="],[-1,2617,"> "],[1,2626,"["],[-1,2627,"a"],[1,2630,"]("],[-1,2633,"> "],[1,2648,"=="],[-1,2650,"> "],[1,2668,"=="],[-1,2670,"> ."],[1,2675,".p. ==S"],[-1,2675,"p\n\n\n"],[1,2686,"p"],[-1,2686,"\n"],[-1,2689,"Sp"],[-1,2716,"2 "],[1,2720,"2 "],[-1,2728,"**"],[1,2732,"**"],[1,2739,"\nS"],[1,2741,"p"],[-1,2741,"\n"],[-1,2744,"Sp"],[-1,2761,"**"],[1,2765,"**"],[1,2778,"\nm"],[1,2780,"y"],[-1,2780,"\n"],[-1,2783,"my"],[-1,2802,"**"],[1,2806,"**"],[1,2809," "],[-1,2810,"数"],[1,2815," 起\n\n**；Sp"],[-1,2815,"起来**；\n\n"],[-1,2824,"Sp"],[1,2842,"与 于"],[-1,2842,"于 S"],[-1,2854,"- "],[1,2858,"- "],[-1,2872,"："],[1,2875,"："],[1,2895,"my"],[-1,2897,"my"],[-1,2926,"- "],[1,2930,"- "],[-1,3060,"- "],[1,3064,"- "],[1,3086,"它允"],[-1,3088,"它允"],[1,3121,"，如"],[-1,3123,"，如"],[1,3184,"**"],[-1,3184,"持久"],[1,3200,"**"],[-1,3200,"\n\n"],[1,3430,"**"],[-1,3430,"业务"],[1,3442,"**"],[-1,3442,"\n\n"],[1,3482,"\n"],[-1,3482," "],[1,3670,"**"],[-1,3670,"表现"],[1,3695,"**"],[-1,3695,"\n\n"],[1,3744,"\n"],[-1,3744," "],[1,3903,"**ew层**"],[-1,3903,"View层\n\n"],[1,3972,"**联系**"],[-1,3972,"各层联系\n\n"],[1,4183,"\n"],[-1,4183," "],[1,4361,"==**"],[-1,4361,"\n\n"],[1,4584,"  "],[-1,4584,"**"],[1,4634,"in"],[-1,4634,"pr"],[-1,4755,"in"],[1,4758,"+S"],[-1,6214,"**"],[1,6219," 1"],[-1,6225,"Sp"],[1,6231," \n"],[1,6237,"\n"],[-1,6237," "],[1,6254,"  "],[-1,6254,"\n\n"],[1,6382,"S"],[-1,6382," "],[1,6447,"p"],[-1,6447," "],[-1,6465,"Sp"],[1,6474,"开源"],[-1,6489,"Sp"],[1,6495,"是于"],[-1,8655,"pr"],[1,8660,"使用"],[-1,9350,"pr"],[1,9356,"用途"],[-1,9815,"pr"],[1,9820,"中受"],[-1,10014,"pr"],[1,10019,"是一"],[-1,10153,"面向"],[1,10157,"（A"],[1,10329,"。\n"],[-1,10329,"框架"],[1,10426,"\n##"],[-1,10426,"。\n\n"],[-1,10611,"##"],[1,10617,".2"],[1,10682,"、"],[-1,10682,"."],[1,10692,"S"],[-1,10692,"2"],[1,10864,"p"],[-1,10864,"、"],[1,10887,"r"],[-1,10887,"S"],[1,10908,"i"],[-1,10908,"p"],[1,10914,"n"],[-1,10914,"r"],[-1,10939,"in"],[1,10942,"MV"],[1,11237,"\n\n"],[-1,11237,"  "],[1,11290," "],[-1,11290,"\n"],[1,11324," "],[-1,11324,"\n"],[1,11332,"S"],[-1,11332," "],[1,11384,"p"],[-1,11384," "],[-1,11425,"Sp"],[1,11435,"属于"],[-1,11449,"Sp"],[1,11455,"Fr"],[-1,19587,"。"],[1,19589," "]],[19588,19588],[24,24]]],[1570888417449,["GJX@GJXAIOU",[[1,34222,"```"]],[34222,34222],[34225,34225]]],[1570888417638,["GJX@GJXAIOU",[[1,34225,"language\n```\n"]],[34225,34225],[34225,34233]]],[1570888421345,["GJX@GJXAIOU",[[-1,34225,"language"],[1,34233,"j"]],[34225,34233],[34226,34226]]],[1570888422266,["GJX@GJXAIOU",[[1,34226,"ava"]],[34226,34226],[34229,34229]]],[1570888422752,["GJX@GJXAIOU",[[1,34230,"\n"]],[34229,34229],[34230,34230]]],[1570888436205,["GJX@GJXAIOU",[[1,34230,"package com.javen.model;\n\npublic class User {\n    private Integer id;\n\n    private String userName;\n\n    private String password;\n\n    private Integer age;\n\n    public Integer getId() {\n        return id;\n    }\n\n    public void setId(Integer id) {\n        this.id = id;\n    }\n\n    public String getUserName() {\n        return userName;\n    }\n\n    public void setUserName(String userName) {\n        this.userName = userName == null ? null : userName.trim();\n    }\n\n    public String getPassword() {\n        return password;\n    }\n\n    public void setPassword(String password) {\n        this.password = password == null ? null : password.trim();\n    }\n\n    public Integer getAge() {\n        return age;\n    }\n\n    public void setAge(Integer age) {\n        this.age = age;\n    }\n\n    @Override\n    public String toString() {\n        return \"User [id=\" + id + \", userName=\" + userName + \", password=\"\n                + password + \", age=\" + age + \"]\";\n    }\n    \n    \n}"]],[34230,34230],[35195,35195]]],[1570888470606,["GJX@GJXAIOU",[[1,34222,"\n"]],[34222,34222],[34223,34223]]],[1570888531555,[null,[[-1,24,"\n*原理*"],[1,29,"框架原理\n"],[-1,41,"**"],[1,43,"作用\n\n"],[1,46," "],[1,48,"是"],[-1,49,"是"],[-1,52," "],[1,69," "],[1,70," "],[-1,71," "],[-1,73," "],[1,79," "],[-1,81," "],[1,90," "],[-1,92," "],[1,94," "],[-1,96," "],[1,129," "],[-1,131," "],[1,135," "],[-1,137," "],[-1,141,"使用"],[1,145,"使用"],[-1,157,"请求"],[1,161,"请求"],[-1,169,"\n\n"],[-1,173,"s"],[1,174,"\n"],[1,176,"sp"],[-1,188,"，m"],[1,193,"my"],[-1,212,"**"],[-1,225,"Sp"],[1,227,"\n\n"],[-1,243,"."],[1,244,"\n"],[1,380,"客户"],[1,386," "],[-1,388," "],[-1,404,"分发"],[1,412,"分发"],[-1,414,"\n\n"],[-1,437,"2"],[1,438,"\n"],[-1,442,"i "],[1,444,"由 Di"],[1,458," "],[-1,460," "],[1,464," "],[-1,466," "],[-1,479,"找到"],[1,503,"找到"],[1,508," "],[-1,510," "],[-1,519,"\n\n；3"],[1,523,"；\n"],[1,750,"Co"],[1,758," "],[-1,760," "],[1,771," "],[-1,773," "],[-1,784,"\n\n"],[-1,802,"4"],[1,803,"\n"],[1,807,"Di"],[-1,817,"clvt"],[1,821,"vlet "],[-1,823," "],[1,844," "],[-1,846," "],[-1,851,"\n5"],[1,857,"视图"],[-1,870,"!["],[-1,933,"Sp"],[1,935,"\n\n"],[1,1826,"Sp"],[-1,1852,"它可"],[1,1856,"它可"],[-1,1869,"["],[1,1871,"a"],[-1,1873,"]("],[1,1875,"中的"],[-1,1896,"），"],[1,1900,"），"],[1,1971,"- "],[-1,1973,"- "],[1,2051,"**"],[-1,2053,"**"],[-1,2114,"。在"],[1,2118,"。在"],[-1,2173,"**"],[1,2186,"\n要"],[-1,2195,"1."],[1,2199,"先写"],[-1,2254,"2."],[1,2258,"写M"],[-1,2349,"3."],[1,2353,"写M"],[-1,2365,"Ma"],[1,2369,"Ma"],[-1,2394,"。\n"],[-1,2398,"4."],[1,2400,"。\n"],[1,2402,"写S"],[1,2415,"**"],[-1,2417,"**"],[-1,2449,"。\n"],[-1,2453,"5.-"],[1,2456,"。\n- 写"],[1,2472,"**"],[-1,2474,"**"],[-1,2484,"，获"],[-1,2488,"取"],[1,2489,"，"],[1,2491,"获取"],[-1,2544,"。\n"],[-1,2548,"6.-J "],[1,2553,"。\n-  写J"],[-1,2587,"=="],[1,2591,"> "],[-1,2598,"=="],[1,2602,"> "],[-1,2613,"=="],[1,2617,"> "],[-1,2624,"["],[1,2626,"a"],[-1,2628,"]("],[1,2633,"> "],[-1,2646,"=="],[1,2650,"> "],[-1,2666,"=="],[1,2670,"> ."],[-1,2672,".p. ==S"],[1,2679,"p\n\n\n"],[-1,2686,"p"],[1,2687,"\n"],[1,2689,"Sp"],[1,2714,"2 "],[-1,2716,"2 "],[1,2726,"**"],[-1,2728,"**"],[-1,2737,"\nS"],[-1,2741,"p"],[1,2742,"\n"],[1,2744,"Sp"],[1,2759,"**"],[-1,2761,"**"],[-1,2776,"\nm"],[-1,2780,"y"],[1,2781,"\n"],[1,2783,"my"],[1,2800,"**"],[-1,2802,"**"],[-1,2807," "],[1,2809,"数"],[-1,2813," 起\n\n**；Sp"],[1,2822,"起来**；\n\n"],[1,2824,"Sp"],[-1,2840,"与 于"],[1,2843,"于 S"],[1,2852,"- "],[-1,2854,"- "],[1,2870,"："],[-1,2872,"："],[-1,2893,"my"],[1,2897,"my"],[1,2924,"- "],[-1,2926,"- "],[1,3058,"- "],[-1,3060,"- "],[-1,3084,"它允"],[1,3088,"它允"],[-1,3119,"，如"],[1,3123,"，如"],[-1,3182,"**"],[1,3184,"持久"],[-1,3198,"**"],[1,3200,"\n\n"],[-1,3428,"**"],[1,3430,"业务"],[-1,3440,"**"],[1,3442,"\n\n"],[-1,3480,"\n"],[1,3481," "],[-1,3668,"**"],[1,3670,"表现"],[-1,3693,"**"],[1,3695,"\n\n"],[-1,3742,"\n"],[1,3743," "],[-1,3901,"**ew层**"],[1,3908,"View层\n\n"],[-1,3970,"**联系**"],[1,3976,"各层联系\n\n"],[-1,4181,"\n"],[1,4182," "],[-1,4359,"==**"],[1,4363,"\n\n"],[-1,4584,"  "],[1,4586,"**"],[-1,4634,"in"],[1,4636,"pr"],[1,4755,"in"],[-1,4756,"+S"],[1,6214,"**"],[-1,6217," 1"],[1,6225,"Sp"],[-1,6229," \n"],[-1,6237,"\n"],[1,6238," "],[-1,6254,"  "],[1,6256,"\n\n"],[-1,6382,"S"],[1,6383," "],[-1,6447,"p"],[1,6448," "],[1,6465,"Sp"],[-1,6472,"开源"],[1,6489,"Sp"],[-1,6493,"是于"],[1,8655,"pr"],[-1,8658,"使用"],[1,9350,"pr"],[-1,9354,"用途"],[1,9815,"pr"],[-1,9818,"中受"],[1,10014,"pr"],[-1,10017,"是一"],[1,10153,"面向"],[-1,10155,"（A"],[-1,10329,"。\n"],[1,10331,"框架"],[-1,10426,"\n##"],[1,10429,"。\n\n"],[1,10611,"##"],[-1,10615,".2"],[-1,10682,"、"],[1,10683,"."],[-1,10692,"S"],[1,10693,"2"],[-1,10864,"p"],[1,10865,"、"],[-1,10887,"r"],[1,10888,"S"],[-1,10908,"i"],[1,10909,"p"],[-1,10914,"n"],[1,10915,"r"],[1,10939,"in"],[-1,10940,"MV"],[-1,11237,"\n\n"],[1,11239,"  "],[-1,11290," "],[1,11291,"\n"],[-1,11324," "],[1,11325,"\n"],[-1,11332,"S"],[1,11333," "],[-1,11384,"p"],[1,11385," "],[1,11425,"Sp"],[-1,11433,"属于"],[1,11449,"Sp"],[-1,11453,"Fr"],[1,19587,"。"],[-1,19588," "]],[24,24],[19588,19588]]],[1570888531555,[null,[[1,24,"\n*原理*"],[-1,24,"框架原理\n"],[1,41,"**"],[-1,41,"作用\n\n"],[-1,48," "],[-1,51,"是"],[1,53,"是"],[1,55," "],[-1,71," "],[-1,73," "],[1,75," "],[1,76," "],[-1,81," "],[1,84," "],[-1,92," "],[1,95," "],[-1,96," "],[1,99," "],[-1,131," "],[1,134," "],[-1,137," "],[1,140," "],[1,143,"使用"],[-1,145,"使用"],[1,159,"请求"],[-1,161,"请求"],[1,171,"\n\n"],[1,173,"s"],[-1,173,"\n"],[-1,176,"sp"],[1,190,"，m"],[-1,193,"my"],[1,214,"**"],[1,225,"Sp"],[-1,225,"\n\n"],[1,243,"."],[-1,243,"\n"],[-1,380,"客户"],[-1,388," "],[1,391," "],[1,406,"分发"],[-1,412,"分发"],[1,416,"\n\n"],[1,437,"2"],[-1,437,"\n"],[1,442,"i "],[-1,442,"由 Di"],[-1,460," "],[1,463," "],[-1,466," "],[1,469," "],[1,481,"找到"],[-1,503,"找到"],[-1,510," "],[1,513," "],[1,521,"\n\n；3"],[-1,521,"；\n"],[-1,750,"Co"],[-1,760," "],[1,763," "],[-1,773," "],[1,776," "],[1,786,"\n\n"],[1,802,"4"],[-1,802,"\n"],[-1,807,"Di"],[1,819,"clvt"],[-1,819,"vlet "],[1,826," "],[-1,846," "],[1,849," "],[1,853,"\n5"],[-1,857,"视图"],[1,872,"!["],[1,933,"Sp"],[-1,933,"\n\n"],[-1,1826,"Sp"],[1,1854,"它可"],[-1,1856,"它可"],[1,1871,"["],[-1,1872,"a"],[1,1875,"]("],[-1,1875,"中的"],[1,1898,"），"],[-1,1900,"），"],[-1,1973,"- "],[1,1977,"- "],[-1,2053,"**"],[1,2057,"**"],[1,2116,"。在"],[-1,2118,"。在"],[1,2175,"**"],[-1,2186,"\n要"],[1,2197,"1."],[-1,2199,"先写"],[1,2256,"2."],[-1,2258,"写M"],[1,2351,"3."],[-1,2353,"写M"],[1,2367,"Ma"],[-1,2369,"Ma"],[1,2396,"。\n"],[1,2398,"4."],[-1,2398,"。\n"],[-1,2402,"写S"],[-1,2417,"**"],[1,2421,"**"],[1,2451,"。\n"],[1,2453,"5.-"],[-1,2453,"。\n- 写"],[-1,2474,"**"],[1,2478,"**"],[1,2486,"，获"],[1,2488,"取"],[-1,2488,"，"],[-1,2491,"获取"],[1,2546,"。\n"],[1,2548,"6.-J "],[-1,2548,"。\n-  写J"],[1,2589,"=="],[-1,2591,"> "],[1,2600,"=="],[-1,2602,"> "],[1,2615,"=="],[-1,2617,"> "],[1,2626,"["],[-1,2627,"a"],[1,2630,"]("],[-1,2633,"> "],[1,2648,"=="],[-1,2650,"> "],[1,2668,"=="],[-1,2670,"> ."],[1,2675,".p. ==S"],[-1,2675,"p\n\n\n"],[1,2686,"p"],[-1,2686,"\n"],[-1,2689,"Sp"],[-1,2716,"2 "],[1,2720,"2 "],[-1,2728,"**"],[1,2732,"**"],[1,2739,"\nS"],[1,2741,"p"],[-1,2741,"\n"],[-1,2744,"Sp"],[-1,2761,"**"],[1,2765,"**"],[1,2778,"\nm"],[1,2780,"y"],[-1,2780,"\n"],[-1,2783,"my"],[-1,2802,"**"],[1,2806,"**"],[1,2809," "],[-1,2810,"数"],[1,2815," 起\n\n**；Sp"],[-1,2815,"起来**；\n\n"],[-1,2824,"Sp"],[1,2842,"与 于"],[-1,2842,"于 S"],[-1,2854,"- "],[1,2858,"- "],[-1,2872,"："],[1,2875,"："],[1,2895,"my"],[-1,2897,"my"],[-1,2926,"- "],[1,2930,"- "],[-1,3060,"- "],[1,3064,"- "],[1,3086,"它允"],[-1,3088,"它允"],[1,3121,"，如"],[-1,3123,"，如"],[1,3184,"**"],[-1,3184,"持久"],[1,3200,"**"],[-1,3200,"\n\n"],[1,3430,"**"],[-1,3430,"业务"],[1,3442,"**"],[-1,3442,"\n\n"],[1,3482,"\n"],[-1,3482," "],[1,3670,"**"],[-1,3670,"表现"],[1,3695,"**"],[-1,3695,"\n\n"],[1,3744,"\n"],[-1,3744," "],[1,3903,"**ew层**"],[-1,3903,"View层\n\n"],[1,3972,"**联系**"],[-1,3972,"各层联系\n\n"],[1,4183,"\n"],[-1,4183," "],[1,4361,"==**"],[-1,4361,"\n\n"],[1,4584,"  "],[-1,4584,"**"],[1,4634,"in"],[-1,4634,"pr"],[-1,4755,"in"],[1,4758,"+S"],[-1,6214,"**"],[1,6219," 1"],[-1,6225,"Sp"],[1,6231," \n"],[1,6237,"\n"],[-1,6237," "],[1,6254,"  "],[-1,6254,"\n\n"],[1,6382,"S"],[-1,6382," "],[1,6447,"p"],[-1,6447," "],[-1,6465,"Sp"],[1,6474,"开源"],[-1,6489,"Sp"],[1,6495,"是于"],[-1,8655,"pr"],[1,8660,"使用"],[-1,9350,"pr"],[1,9356,"用途"],[-1,9815,"pr"],[1,9820,"中受"],[-1,10014,"pr"],[1,10019,"是一"],[-1,10153,"面向"],[1,10157,"（A"],[1,10329,"。\n"],[-1,10329,"框架"],[1,10426,"\n##"],[-1,10426,"。\n\n"],[-1,10611,"##"],[1,10617,".2"],[1,10682,"、"],[-1,10682,"."],[1,10692,"S"],[-1,10692,"2"],[1,10864,"p"],[-1,10864,"、"],[1,10887,"r"],[-1,10887,"S"],[1,10908,"i"],[-1,10908,"p"],[1,10914,"n"],[-1,10914,"r"],[-1,10939,"in"],[1,10942,"MV"],[1,11237,"\n\n"],[-1,11237,"  "],[1,11290," "],[-1,11290,"\n"],[1,11324," "],[-1,11324,"\n"],[1,11332,"S"],[-1,11332," "],[1,11384,"p"],[-1,11384," "],[-1,11425,"Sp"],[1,11435,"属于"],[-1,11449,"Sp"],[1,11455,"Fr"],[-1,19587,"。"],[1,19589," "]],[19588,19588],[24,24]]],[1570888473611,["GJX@GJXAIOU",[[1,34190,"com."]],[34190,34190],[34194,34194]]],[1570888476474,["GJX@GJXAIOU",[[-1,34189,"2com."]],[34194,34194],[34189,34189]]],[1570888477943,["GJX@GJXAIOU",[[1,34189,"2"]],[34189,34189],[34190,34190]]],[1570888481198,["GJX@GJXAIOU",[[1,34222,"com"]],[34222,34222],[34225,34225]]],[1570888484423,["GJX@GJXAIOU",[[-1,34222,"com"]],[34225,34225],[34222,34222]]],[1570888490556,["GJX@GJXAIOU",[[1,34222,"实体类：user.ja"]],[34222,34222],[34233,34233]]],[1570888494070,["GJX@GJXAIOU",[[-1,34225,"：user.ja"]],[34233,34233],[34225,34225]]],[1570888494704,["GJX@GJXAIOU",[[1,34225,"U"]],[34225,34225],[34226,34226]]],[1570888494895,["GJX@GJXAIOU",[[1,34225," "]],[34226,34226],[34227,34227]]],[1570888498652,["GJX@GJXAIOU",[[1,34227,"ser.java"]],[34227,34227],[34235,34235]]],[1570888651586,[null,[[-1,24,"\n*原理*"],[1,29,"框架原理\n"],[-1,41,"**"],[1,43,"作用\n\n"],[1,46," "],[1,48,"是"],[-1,49,"是"],[-1,52," "],[1,69," "],[1,70," "],[-1,71," "],[-1,73," "],[1,79," "],[-1,81," "],[1,90," "],[-1,92," "],[1,94," "],[-1,96," "],[1,129," "],[-1,131," "],[1,135," "],[-1,137," "],[-1,141,"使用"],[1,145,"使用"],[-1,157,"请求"],[1,161,"请求"],[-1,169,"\n\n"],[-1,173,"s"],[1,174,"\n"],[1,176,"sp"],[-1,188,"，m"],[1,193,"my"],[-1,212,"**"],[-1,225,"Sp"],[1,227,"\n\n"],[-1,243,"."],[1,244,"\n"],[1,380,"客户"],[1,386," "],[-1,388," "],[-1,404,"分发"],[1,412,"分发"],[-1,414,"\n\n"],[-1,437,"2"],[1,438,"\n"],[-1,442,"i "],[1,444,"由 Di"],[1,458," "],[-1,460," "],[1,464," "],[-1,466," "],[-1,479,"找到"],[1,503,"找到"],[1,508," "],[-1,510," "],[-1,519,"\n\n；3"],[1,523,"；\n"],[1,750,"Co"],[1,758," "],[-1,760," "],[1,771," "],[-1,773," "],[-1,784,"\n\n"],[-1,802,"4"],[1,803,"\n"],[1,807,"Di"],[-1,817,"clvt"],[1,821,"vlet "],[-1,823," "],[1,844," "],[-1,846," "],[-1,851,"\n5"],[1,857,"视图"],[-1,870,"!["],[-1,933,"Sp"],[1,935,"\n\n"],[1,1826,"Sp"],[-1,1852,"它可"],[1,1856,"它可"],[-1,1869,"["],[1,1871,"a"],[-1,1873,"]("],[1,1875,"中的"],[-1,1896,"），"],[1,1900,"），"],[1,1971,"- "],[-1,1973,"- "],[1,2051,"**"],[-1,2053,"**"],[-1,2114,"。在"],[1,2118,"。在"],[-1,2173,"**"],[1,2186,"\n要"],[-1,2195,"1."],[1,2199,"先写"],[-1,2254,"2."],[1,2258,"写M"],[-1,2349,"3."],[1,2353,"写M"],[-1,2365,"Ma"],[1,2369,"Ma"],[-1,2394,"。\n"],[-1,2398,"4."],[1,2400,"。\n"],[1,2402,"写S"],[1,2415,"**"],[-1,2417,"**"],[-1,2449,"。\n"],[-1,2453,"5.-"],[1,2456,"。\n- 写"],[1,2472,"**"],[-1,2474,"**"],[-1,2484,"，获"],[-1,2488,"取"],[1,2489,"，"],[1,2491,"获取"],[-1,2544,"。\n"],[-1,2548,"6.-J "],[1,2553,"。\n-  写J"],[-1,2587,"=="],[1,2591,"> "],[-1,2598,"=="],[1,2602,"> "],[-1,2613,"=="],[1,2617,"> "],[-1,2624,"["],[1,2626,"a"],[-1,2628,"]("],[1,2633,"> "],[-1,2646,"=="],[1,2650,"> "],[-1,2666,"=="],[1,2670,"> ."],[-1,2672,".p. ==S"],[1,2679,"p\n\n\n"],[-1,2686,"p"],[1,2687,"\n"],[1,2689,"Sp"],[1,2714,"2 "],[-1,2716,"2 "],[1,2726,"**"],[-1,2728,"**"],[-1,2737,"\nS"],[-1,2741,"p"],[1,2742,"\n"],[1,2744,"Sp"],[1,2759,"**"],[-1,2761,"**"],[-1,2776,"\nm"],[-1,2780,"y"],[1,2781,"\n"],[1,2783,"my"],[1,2800,"**"],[-1,2802,"**"],[-1,2807," "],[1,2809,"数"],[-1,2813," 起\n\n**；Sp"],[1,2822,"起来**；\n\n"],[1,2824,"Sp"],[-1,2840,"与 于"],[1,2843,"于 S"],[1,2852,"- "],[-1,2854,"- "],[1,2870,"："],[-1,2872,"："],[-1,2893,"my"],[1,2897,"my"],[1,2924,"- "],[-1,2926,"- "],[1,3058,"- "],[-1,3060,"- "],[-1,3084,"它允"],[1,3088,"它允"],[-1,3119,"，如"],[1,3123,"，如"],[-1,3182,"**"],[1,3184,"持久"],[-1,3198,"**"],[1,3200,"\n\n"],[-1,3428,"**"],[1,3430,"业务"],[-1,3440,"**"],[1,3442,"\n\n"],[-1,3480,"\n"],[1,3481," "],[-1,3668,"**"],[1,3670,"表现"],[-1,3693,"**"],[1,3695,"\n\n"],[-1,3742,"\n"],[1,3743," "],[-1,3901,"**ew层**"],[1,3908,"View层\n\n"],[-1,3970,"**联系**"],[1,3976,"各层联系\n\n"],[-1,4181,"\n"],[1,4182," "],[-1,4359,"==**"],[1,4363,"\n\n"],[-1,4584,"  "],[1,4586,"**"],[-1,4634,"in"],[1,4636,"pr"],[1,4755,"in"],[-1,4756,"+S"],[1,6214,"**"],[-1,6217," 1"],[1,6225,"Sp"],[-1,6229," \n"],[-1,6237,"\n"],[1,6238," "],[-1,6254,"  "],[1,6256,"\n\n"],[-1,6382,"S"],[1,6383," "],[-1,6447,"p"],[1,6448," "],[1,6465,"Sp"],[-1,6472,"开源"],[1,6489,"Sp"],[-1,6493,"是于"],[1,8655,"pr"],[-1,8658,"使用"],[1,9350,"pr"],[-1,9354,"用途"],[1,9815,"pr"],[-1,9818,"中受"],[1,10014,"pr"],[-1,10017,"是一"],[1,10153,"面向"],[-1,10155,"（A"],[-1,10329,"。\n"],[1,10331,"框架"],[-1,10426,"\n##"],[1,10429,"。\n\n"],[1,10611,"##"],[-1,10615,".2"],[-1,10682,"、"],[1,10683,"."],[-1,10692,"S"],[1,10693,"2"],[-1,10864,"p"],[1,10865,"、"],[-1,10887,"r"],[1,10888,"S"],[-1,10908,"i"],[1,10909,"p"],[-1,10914,"n"],[1,10915,"r"],[1,10939,"in"],[-1,10940,"MV"],[-1,11237,"\n\n"],[1,11239,"  "],[-1,11290," "],[1,11291,"\n"],[-1,11324," "],[1,11325,"\n"],[-1,11332,"S"],[1,11333," "],[-1,11384,"p"],[1,11385," "],[1,11425,"Sp"],[-1,11433,"属于"],[1,11449,"Sp"],[-1,11453,"Fr"],[1,19587,"。"],[-1,19588," "]],[24,24],[19588,19588]]],[1570888651586,[null,[[1,24,"\n*原理*"],[-1,24,"框架原理\n"],[1,41,"**"],[-1,41,"作用\n\n"],[-1,48," "],[-1,51,"是"],[1,53,"是"],[1,55," "],[-1,71," "],[-1,73," "],[1,75," "],[1,76," "],[-1,81," "],[1,84," "],[-1,92," "],[1,95," "],[-1,96," "],[1,99," "],[-1,131," "],[1,134," "],[-1,137," "],[1,140," "],[1,143,"使用"],[-1,145,"使用"],[1,159,"请求"],[-1,161,"请求"],[1,171,"\n\n"],[1,173,"s"],[-1,173,"\n"],[-1,176,"sp"],[1,190,"，m"],[-1,193,"my"],[1,214,"**"],[1,225,"Sp"],[-1,225,"\n\n"],[1,243,"."],[-1,243,"\n"],[-1,380,"客户"],[-1,388," "],[1,391," "],[1,406,"分发"],[-1,412,"分发"],[1,416,"\n\n"],[1,437,"2"],[-1,437,"\n"],[1,442,"i "],[-1,442,"由 Di"],[-1,460," "],[1,463," "],[-1,466," "],[1,469," "],[1,481,"找到"],[-1,503,"找到"],[-1,510," "],[1,513," "],[1,521,"\n\n；3"],[-1,521,"；\n"],[-1,750,"Co"],[-1,760," "],[1,763," "],[-1,773," "],[1,776," "],[1,786,"\n\n"],[1,802,"4"],[-1,802,"\n"],[-1,807,"Di"],[1,819,"clvt"],[-1,819,"vlet "],[1,826," "],[-1,846," "],[1,849," "],[1,853,"\n5"],[-1,857,"视图"],[1,872,"!["],[1,933,"Sp"],[-1,933,"\n\n"],[-1,1826,"Sp"],[1,1854,"它可"],[-1,1856,"它可"],[1,1871,"["],[-1,1872,"a"],[1,1875,"]("],[-1,1875,"中的"],[1,1898,"），"],[-1,1900,"），"],[-1,1973,"- "],[1,1977,"- "],[-1,2053,"**"],[1,2057,"**"],[1,2116,"。在"],[-1,2118,"。在"],[1,2175,"**"],[-1,2186,"\n要"],[1,2197,"1."],[-1,2199,"先写"],[1,2256,"2."],[-1,2258,"写M"],[1,2351,"3."],[-1,2353,"写M"],[1,2367,"Ma"],[-1,2369,"Ma"],[1,2396,"。\n"],[1,2398,"4."],[-1,2398,"。\n"],[-1,2402,"写S"],[-1,2417,"**"],[1,2421,"**"],[1,2451,"。\n"],[1,2453,"5.-"],[-1,2453,"。\n- 写"],[-1,2474,"**"],[1,2478,"**"],[1,2486,"，获"],[1,2488,"取"],[-1,2488,"，"],[-1,2491,"获取"],[1,2546,"。\n"],[1,2548,"6.-J "],[-1,2548,"。\n-  写J"],[1,2589,"=="],[-1,2591,"> "],[1,2600,"=="],[-1,2602,"> "],[1,2615,"=="],[-1,2617,"> "],[1,2626,"["],[-1,2627,"a"],[1,2630,"]("],[-1,2633,"> "],[1,2648,"=="],[-1,2650,"> "],[1,2668,"=="],[-1,2670,"> ."],[1,2675,".p. ==S"],[-1,2675,"p\n\n\n"],[1,2686,"p"],[-1,2686,"\n"],[-1,2689,"Sp"],[-1,2716,"2 "],[1,2720,"2 "],[-1,2728,"**"],[1,2732,"**"],[1,2739,"\nS"],[1,2741,"p"],[-1,2741,"\n"],[-1,2744,"Sp"],[-1,2761,"**"],[1,2765,"**"],[1,2778,"\nm"],[1,2780,"y"],[-1,2780,"\n"],[-1,2783,"my"],[-1,2802,"**"],[1,2806,"**"],[1,2809," "],[-1,2810,"数"],[1,2815," 起\n\n**；Sp"],[-1,2815,"起来**；\n\n"],[-1,2824,"Sp"],[1,2842,"与 于"],[-1,2842,"于 S"],[-1,2854,"- "],[1,2858,"- "],[-1,2872,"："],[1,2875,"："],[1,2895,"my"],[-1,2897,"my"],[-1,2926,"- "],[1,2930,"- "],[-1,3060,"- "],[1,3064,"- "],[1,3086,"它允"],[-1,3088,"它允"],[1,3121,"，如"],[-1,3123,"，如"],[1,3184,"**"],[-1,3184,"持久"],[1,3200,"**"],[-1,3200,"\n\n"],[1,3430,"**"],[-1,3430,"业务"],[1,3442,"**"],[-1,3442,"\n\n"],[1,3482,"\n"],[-1,3482," "],[1,3670,"**"],[-1,3670,"表现"],[1,3695,"**"],[-1,3695,"\n\n"],[1,3744,"\n"],[-1,3744," "],[1,3903,"**ew层**"],[-1,3903,"View层\n\n"],[1,3972,"**联系**"],[-1,3972,"各层联系\n\n"],[1,4183,"\n"],[-1,4183," "],[1,4361,"==**"],[-1,4361,"\n\n"],[1,4584,"  "],[-1,4584,"**"],[1,4634,"in"],[-1,4634,"pr"],[-1,4755,"in"],[1,4758,"+S"],[-1,6214,"**"],[1,6219," 1"],[-1,6225,"Sp"],[1,6231," \n"],[1,6237,"\n"],[-1,6237," "],[1,6254,"  "],[-1,6254,"\n\n"],[1,6382,"S"],[-1,6382," "],[1,6447,"p"],[-1,6447," "],[-1,6465,"Sp"],[1,6474,"开源"],[-1,6489,"Sp"],[1,6495,"是于"],[-1,8655,"pr"],[1,8660,"使用"],[-1,9350,"pr"],[1,9356,"用途"],[-1,9815,"pr"],[1,9820,"中受"],[-1,10014,"pr"],[1,10019,"是一"],[-1,10153,"面向"],[1,10157,"（A"],[1,10329,"。\n"],[-1,10329,"框架"],[1,10426,"\n##"],[-1,10426,"。\n\n"],[-1,10611,"##"],[1,10617,".2"],[1,10682,"、"],[-1,10682,"."],[1,10692,"S"],[-1,10692,"2"],[1,10864,"p"],[-1,10864,"、"],[1,10887,"r"],[-1,10887,"S"],[1,10908,"i"],[-1,10908,"p"],[1,10914,"n"],[-1,10914,"r"],[-1,10939,"in"],[1,10942,"MV"],[1,11237,"\n\n"],[-1,11237,"  "],[1,11290," "],[-1,11290,"\n"],[1,11324," "],[-1,11324,"\n"],[1,11332,"S"],[-1,11332," "],[1,11384,"p"],[-1,11384," "],[-1,11425,"Sp"],[1,11435,"属于"],[-1,11449,"Sp"],[1,11455,"Fr"],[-1,19587,"。"],[1,19589," "]],[19588,19588],[24,24]]],[1570888622160,["GJX@GJXAIOU",[[-1,35215,"package com.javen.model; public class User { private Integer id; private String userName; private String password; private Integer age; public Integer getId() { return id;\n    } public void setId(Integer id) { this.id = id;\n    } public String getUserName() { return userName;\n    } public void setUserName(String userName) { this.userName = userName == null ? null : userName.trim();\n    } public String getPassword() { return password;\n    } public void setPassword(String password) { this.password = password == null ? null : password.trim();\n    } public Integer getAge() { return age;\n    } public void setAge(Integer age) { this.age = age;\n    }\n\n    @Override public String toString() { return \"User [id=\" + id + \", userName=\" + userName + \", password=\"\n                + password + \", age=\" + age + \"]\";\n    }\n\n}"]],[35215,36035],[35215,35215]]],[1570888711582,[null,[[-1,24,"\n*原理*"],[1,29,"框架原理\n"],[-1,41,"**"],[1,43,"作用\n\n"],[1,46," "],[1,48,"是"],[-1,49,"是"],[-1,52," "],[1,69," "],[1,70," "],[-1,71," "],[-1,73," "],[1,79," "],[-1,81," "],[1,90," "],[-1,92," "],[1,94," "],[-1,96," "],[1,129," "],[-1,131," "],[1,135," "],[-1,137," "],[-1,141,"使用"],[1,145,"使用"],[-1,157,"请求"],[1,161,"请求"],[-1,169,"\n\n"],[-1,173,"s"],[1,174,"\n"],[1,176,"sp"],[-1,188,"，m"],[1,193,"my"],[-1,212,"**"],[-1,225,"Sp"],[1,227,"\n\n"],[-1,243,"."],[1,244,"\n"],[1,380,"客户"],[1,386," "],[-1,388," "],[-1,404,"分发"],[1,412,"分发"],[-1,414,"\n\n"],[-1,437,"2"],[1,438,"\n"],[-1,442,"i "],[1,444,"由 Di"],[1,458," "],[-1,460," "],[1,464," "],[-1,466," "],[-1,479,"找到"],[1,503,"找到"],[1,508," "],[-1,510," "],[-1,519,"\n\n；3"],[1,523,"；\n"],[1,750,"Co"],[1,758," "],[-1,760," "],[1,771," "],[-1,773," "],[-1,784,"\n\n"],[-1,802,"4"],[1,803,"\n"],[1,807,"Di"],[-1,817,"clvt"],[1,821,"vlet "],[-1,823," "],[1,844," "],[-1,846," "],[-1,851,"\n5"],[1,857,"视图"],[-1,870,"!["],[-1,933,"Sp"],[1,935,"\n\n"],[1,1826,"Sp"],[-1,1852,"它可"],[1,1856,"它可"],[-1,1869,"["],[1,1871,"a"],[-1,1873,"]("],[1,1875,"中的"],[-1,1896,"），"],[1,1900,"），"],[1,1971,"- "],[-1,1973,"- "],[1,2051,"**"],[-1,2053,"**"],[-1,2114,"。在"],[1,2118,"。在"],[-1,2173,"**"],[1,2186,"\n要"],[-1,2195,"1."],[1,2199,"先写"],[-1,2254,"2."],[1,2258,"写M"],[-1,2349,"3."],[1,2353,"写M"],[-1,2365,"Ma"],[1,2369,"Ma"],[-1,2394,"。\n"],[-1,2398,"4."],[1,2400,"。\n"],[1,2402,"写S"],[1,2415,"**"],[-1,2417,"**"],[-1,2449,"。\n"],[-1,2453,"5.-"],[1,2456,"。\n- 写"],[1,2472,"**"],[-1,2474,"**"],[-1,2484,"，获"],[-1,2488,"取"],[1,2489,"，"],[1,2491,"获取"],[-1,2544,"。\n"],[-1,2548,"6.-J "],[1,2553,"。\n-  写J"],[-1,2587,"=="],[1,2591,"> "],[-1,2598,"=="],[1,2602,"> "],[-1,2613,"=="],[1,2617,"> "],[-1,2624,"["],[1,2626,"a"],[-1,2628,"]("],[1,2633,"> "],[-1,2646,"=="],[1,2650,"> "],[-1,2666,"=="],[1,2670,"> ."],[-1,2672,".p. ==S"],[1,2679,"p\n\n\n"],[-1,2686,"p"],[1,2687,"\n"],[1,2689,"Sp"],[1,2714,"2 "],[-1,2716,"2 "],[1,2726,"**"],[-1,2728,"**"],[-1,2737,"\nS"],[-1,2741,"p"],[1,2742,"\n"],[1,2744,"Sp"],[1,2759,"**"],[-1,2761,"**"],[-1,2776,"\nm"],[-1,2780,"y"],[1,2781,"\n"],[1,2783,"my"],[1,2800,"**"],[-1,2802,"**"],[-1,2807," "],[1,2809,"数"],[-1,2813," 起\n\n**；Sp"],[1,2822,"起来**；\n\n"],[1,2824,"Sp"],[-1,2840,"与 于"],[1,2843,"于 S"],[1,2852,"- "],[-1,2854,"- "],[1,2870,"："],[-1,2872,"："],[-1,2893,"my"],[1,2897,"my"],[1,2924,"- "],[-1,2926,"- "],[1,3058,"- "],[-1,3060,"- "],[-1,3084,"它允"],[1,3088,"它允"],[-1,3119,"，如"],[1,3123,"，如"],[-1,3182,"**"],[1,3184,"持久"],[-1,3198,"**"],[1,3200,"\n\n"],[-1,3428,"**"],[1,3430,"业务"],[-1,3440,"**"],[1,3442,"\n\n"],[-1,3480,"\n"],[1,3481," "],[-1,3668,"**"],[1,3670,"表现"],[-1,3693,"**"],[1,3695,"\n\n"],[-1,3742,"\n"],[1,3743," "],[-1,3901,"**ew层**"],[1,3908,"View层\n\n"],[-1,3970,"**联系**"],[1,3976,"各层联系\n\n"],[-1,4181,"\n"],[1,4182," "],[-1,4359,"==**"],[1,4363,"\n\n"],[-1,4584,"  "],[1,4586,"**"],[-1,4634,"in"],[1,4636,"pr"],[1,4755,"in"],[-1,4756,"+S"],[1,6214,"**"],[-1,6217," 1"],[1,6225,"Sp"],[-1,6229," \n"],[-1,6237,"\n"],[1,6238," "],[-1,6254,"  "],[1,6256,"\n\n"],[-1,6382,"S"],[1,6383," "],[-1,6447,"p"],[1,6448," "],[1,6465,"Sp"],[-1,6472,"开源"],[1,6489,"Sp"],[-1,6493,"是于"],[1,8655,"pr"],[-1,8658,"使用"],[1,9350,"pr"],[-1,9354,"用途"],[1,9815,"pr"],[-1,9818,"中受"],[1,10014,"pr"],[-1,10017,"是一"],[1,10153,"面向"],[-1,10155,"（A"],[-1,10329,"。\n"],[1,10331,"框架"],[-1,10426,"\n##"],[1,10429,"。\n\n"],[1,10611,"##"],[-1,10615,".2"],[-1,10682,"、"],[1,10683,"."],[-1,10692,"S"],[1,10693,"2"],[-1,10864,"p"],[1,10865,"、"],[-1,10887,"r"],[1,10888,"S"],[-1,10908,"i"],[1,10909,"p"],[-1,10914,"n"],[1,10915,"r"],[1,10939,"in"],[-1,10940,"MV"],[-1,11237,"\n\n"],[1,11239,"  "],[-1,11290," "],[1,11291,"\n"],[-1,11324," "],[1,11325,"\n"],[-1,11332,"S"],[1,11333," "],[-1,11384,"p"],[1,11385," "],[1,11425,"Sp"],[-1,11433,"属于"],[1,11449,"Sp"],[-1,11453,"Fr"],[1,19587,"。"],[-1,19588," "]],[24,24],[19588,19588]]],[1570888711582,[null,[[1,24,"\n*原理*"],[-1,24,"框架原理\n"],[1,41,"**"],[-1,41,"作用\n\n"],[-1,48," "],[-1,51,"是"],[1,53,"是"],[1,55," "],[-1,71," "],[-1,73," "],[1,75," "],[1,76," "],[-1,81," "],[1,84," "],[-1,92," "],[1,95," "],[-1,96," "],[1,99," "],[-1,131," "],[1,134," "],[-1,137," "],[1,140," "],[1,143,"使用"],[-1,145,"使用"],[1,159,"请求"],[-1,161,"请求"],[1,171,"\n\n"],[1,173,"s"],[-1,173,"\n"],[-1,176,"sp"],[1,190,"，m"],[-1,193,"my"],[1,214,"**"],[1,225,"Sp"],[-1,225,"\n\n"],[1,243,"."],[-1,243,"\n"],[-1,380,"客户"],[-1,388," "],[1,391," "],[1,406,"分发"],[-1,412,"分发"],[1,416,"\n\n"],[1,437,"2"],[-1,437,"\n"],[1,442,"i "],[-1,442,"由 Di"],[-1,460," "],[1,463," "],[-1,466," "],[1,469," "],[1,481,"找到"],[-1,503,"找到"],[-1,510," "],[1,513," "],[1,521,"\n\n；3"],[-1,521,"；\n"],[-1,750,"Co"],[-1,760," "],[1,763," "],[-1,773," "],[1,776," "],[1,786,"\n\n"],[1,802,"4"],[-1,802,"\n"],[-1,807,"Di"],[1,819,"clvt"],[-1,819,"vlet "],[1,826," "],[-1,846," "],[1,849," "],[1,853,"\n5"],[-1,857,"视图"],[1,872,"!["],[1,933,"Sp"],[-1,933,"\n\n"],[-1,1826,"Sp"],[1,1854,"它可"],[-1,1856,"它可"],[1,1871,"["],[-1,1872,"a"],[1,1875,"]("],[-1,1875,"中的"],[1,1898,"），"],[-1,1900,"），"],[-1,1973,"- "],[1,1977,"- "],[-1,2053,"**"],[1,2057,"**"],[1,2116,"。在"],[-1,2118,"。在"],[1,2175,"**"],[-1,2186,"\n要"],[1,2197,"1."],[-1,2199,"先写"],[1,2256,"2."],[-1,2258,"写M"],[1,2351,"3."],[-1,2353,"写M"],[1,2367,"Ma"],[-1,2369,"Ma"],[1,2396,"。\n"],[1,2398,"4."],[-1,2398,"。\n"],[-1,2402,"写S"],[-1,2417,"**"],[1,2421,"**"],[1,2451,"。\n"],[1,2453,"5.-"],[-1,2453,"。\n- 写"],[-1,2474,"**"],[1,2478,"**"],[1,2486,"，获"],[1,2488,"取"],[-1,2488,"，"],[-1,2491,"获取"],[1,2546,"。\n"],[1,2548,"6.-J "],[-1,2548,"。\n-  写J"],[1,2589,"=="],[-1,2591,"> "],[1,2600,"=="],[-1,2602,"> "],[1,2615,"=="],[-1,2617,"> "],[1,2626,"["],[-1,2627,"a"],[1,2630,"]("],[-1,2633,"> "],[1,2648,"=="],[-1,2650,"> "],[1,2668,"=="],[-1,2670,"> ."],[1,2675,".p. ==S"],[-1,2675,"p\n\n\n"],[1,2686,"p"],[-1,2686,"\n"],[-1,2689,"Sp"],[-1,2716,"2 "],[1,2720,"2 "],[-1,2728,"**"],[1,2732,"**"],[1,2739,"\nS"],[1,2741,"p"],[-1,2741,"\n"],[-1,2744,"Sp"],[-1,2761,"**"],[1,2765,"**"],[1,2778,"\nm"],[1,2780,"y"],[-1,2780,"\n"],[-1,2783,"my"],[-1,2802,"**"],[1,2806,"**"],[1,2809," "],[-1,2810,"数"],[1,2815," 起\n\n**；Sp"],[-1,2815,"起来**；\n\n"],[-1,2824,"Sp"],[1,2842,"与 于"],[-1,2842,"于 S"],[-1,2854,"- "],[1,2858,"- "],[-1,2872,"："],[1,2875,"："],[1,2895,"my"],[-1,2897,"my"],[-1,2926,"- "],[1,2930,"- "],[-1,3060,"- "],[1,3064,"- "],[1,3086,"它允"],[-1,3088,"它允"],[1,3121,"，如"],[-1,3123,"，如"],[1,3184,"**"],[-1,3184,"持久"],[1,3200,"**"],[-1,3200,"\n\n"],[1,3430,"**"],[-1,3430,"业务"],[1,3442,"**"],[-1,3442,"\n\n"],[1,3482,"\n"],[-1,3482," "],[1,3670,"**"],[-1,3670,"表现"],[1,3695,"**"],[-1,3695,"\n\n"],[1,3744,"\n"],[-1,3744," "],[1,3903,"**ew层**"],[-1,3903,"View层\n\n"],[1,3972,"**联系**"],[-1,3972,"各层联系\n\n"],[1,4183,"\n"],[-1,4183," "],[1,4361,"==**"],[-1,4361,"\n\n"],[1,4584,"  "],[-1,4584,"**"],[1,4634,"in"],[-1,4634,"pr"],[-1,4755,"in"],[1,4758,"+S"],[-1,6214,"**"],[1,6219," 1"],[-1,6225,"Sp"],[1,6231," \n"],[1,6237,"\n"],[-1,6237," "],[1,6254,"  "],[-1,6254,"\n\n"],[1,6382,"S"],[-1,6382," "],[1,6447,"p"],[-1,6447," "],[-1,6465,"Sp"],[1,6474,"开源"],[-1,6489,"Sp"],[1,6495,"是于"],[-1,8655,"pr"],[1,8660,"使用"],[-1,9350,"pr"],[1,9356,"用途"],[-1,9815,"pr"],[1,9820,"中受"],[-1,10014,"pr"],[1,10019,"是一"],[-1,10153,"面向"],[1,10157,"（A"],[1,10329,"。\n"],[-1,10329,"框架"],[1,10426,"\n##"],[-1,10426,"。\n\n"],[-1,10611,"##"],[1,10617,".2"],[1,10682,"、"],[-1,10682,"."],[1,10692,"S"],[-1,10692,"2"],[1,10864,"p"],[-1,10864,"、"],[1,10887,"r"],[-1,10887,"S"],[1,10908,"i"],[-1,10908,"p"],[1,10914,"n"],[-1,10914,"r"],[-1,10939,"in"],[1,10942,"MV"],[1,11237,"\n\n"],[-1,11237,"  "],[1,11290," "],[-1,11290,"\n"],[1,11324," "],[-1,11324,"\n"],[1,11332,"S"],[-1,11332," "],[1,11384,"p"],[-1,11384," "],[-1,11425,"Sp"],[1,11435,"属于"],[-1,11449,"Sp"],[1,11455,"Fr"],[-1,19587,"。"],[1,19589," "]],[19588,19588],[24,24]]],[1570888668093,["GJX@GJXAIOU",[[1,35215,"UserContrller"]],[35215,35215],[35228,35228]]],[1570888671237,["GJX@GJXAIOU",[[1,35224,"o"]],[35224,35224],[35225,35225]]],[1570888675045,["GJX@GJXAIOU",[[1,35229,".java"]],[35229,35229],[35234,35234]]],[1570888675856,["GJX@GJXAIOU",[[1,35236,"\n"]],[35234,35234],[35235,35235]]],[1570888678021,["GJX@GJXAIOU",[[1,35235,"```"]],[35235,35235],[35238,35238]]],[1570888678315,["GJX@GJXAIOU",[[1,35238,"language\n```\n"]],[35238,35238],[35238,35246]]],[1570888679019,["GJX@GJXAIOU",[[-1,35238,"language"],[1,35246,"j"]],[35238,35246],[35239,35239]]],[1570888679922,["GJX@GJXAIOU",[[1,35239,"ava"]],[35239,35239],[35242,35242]]],[1570888680222,["GJX@GJXAIOU",[[1,35243,"\n"]],[35242,35242],[35243,35243]]],[1570888682854,["GJX@GJXAIOU",[[1,35243,"package com.javen.controller;\nimport javax.servlet.http.HttpServletRequest;\n\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.springframework.stereotype.Controller;  \nimport org.springframework.ui.Model;  \nimport org.springframework.web.bind.annotation.RequestMapping;  \nimport org.springframework.web.bind.annotation.RequestMethod;\nimport com.javen.model.User;\n  \n  \n@Controller  \n@RequestMapping(\"/user\")  \n// /user/**\npublic class UserController {  \n    private static Logger log=LoggerFactory.getLogger(UserController.class);\n      \n    \n    // /user/test?id=1\n    @RequestMapping(value=\"/test\",method=RequestMethod.GET)  \n    public String test(HttpServletRequest request,Model model){  \n        int userId = Integer.parseInt(request.getParameter(\"id\"));  \n        System.out.println(\"userId:\"+userId);\n        User user=null;\n        if (userId==1) {\n             user = new User();  \n             user.setAge(11);\n             user.setId(1);\n             user.setPassword(\"123\");\n             user.setUserName(\"javen\");\n        }\n       \n        log.debug(user.toString());\n        model.addAttribute(\"user\", user);  \n        return \"index\";  \n    }  \n}  "]],[35243,35243],[36424,36424]]],[1570888689326,["GJX@GJXAIOU",[[-1,36431,"package com.javen.controller; import javax.servlet.http.HttpServletRequest; import org.slf4j.Logger; import org.slf4j.LoggerFactory; import org.springframework.stereotype.Controller; import org.springframework.ui.Model; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import com.javen.model.User;\n\n@Controller  \n@RequestMapping(\"/user\") // /user/**\npublic class UserController { private static Logger log=LoggerFactory.getLogger(UserController.class); // /user/test?id=1\n    @RequestMapping(value=\"/test\",method=RequestMethod.GET) public String test(HttpServletRequest request,Model model){ int userId = Integer.parseInt(request.getParameter(\"id\"));  \n        System.out.println(\"userId:\"+userId);\n        User user=null; if (userId==1) {\n             user = new User();  \n             user.setAge(11);\n             user.setId(1);\n             user.setPassword(\"123\");\n             user.setUserName(\"javen\");\n        }\n\n        log.debug(user.toString());\n        model.addAttribute(\"user\", user); return \"index\";  \n    }  \n} "]],[36431,37534],[36431,36431]]],[1570888771586,[null,[[-1,24,"\n*原理*"],[1,29,"框架原理\n"],[-1,41,"**"],[1,43,"作用\n\n"],[1,46," "],[1,48,"是"],[-1,49,"是"],[-1,52," "],[1,69," "],[1,70," "],[-1,71," "],[-1,73," "],[1,79," "],[-1,81," "],[1,90," "],[-1,92," "],[1,94," "],[-1,96," "],[1,129," "],[-1,131," "],[1,135," "],[-1,137," "],[-1,141,"使用"],[1,145,"使用"],[-1,157,"请求"],[1,161,"请求"],[-1,169,"\n\n"],[-1,173,"s"],[1,174,"\n"],[1,176,"sp"],[-1,188,"，m"],[1,193,"my"],[-1,212,"**"],[-1,225,"Sp"],[1,227,"\n\n"],[-1,243,"."],[1,244,"\n"],[1,380,"客户"],[1,386," "],[-1,388," "],[-1,404,"分发"],[1,412,"分发"],[-1,414,"\n\n"],[-1,437,"2"],[1,438,"\n"],[-1,442,"i "],[1,444,"由 Di"],[1,458," "],[-1,460," "],[1,464," "],[-1,466," "],[-1,479,"找到"],[1,503,"找到"],[1,508," "],[-1,510," "],[-1,519,"\n\n；3"],[1,523,"；\n"],[1,750,"Co"],[1,758," "],[-1,760," "],[1,771," "],[-1,773," "],[-1,784,"\n\n"],[-1,802,"4"],[1,803,"\n"],[1,807,"Di"],[-1,817,"clvt"],[1,821,"vlet "],[-1,823," "],[1,844," "],[-1,846," "],[-1,851,"\n5"],[1,857,"视图"],[-1,870,"!["],[-1,933,"Sp"],[1,935,"\n\n"],[1,1826,"Sp"],[-1,1852,"它可"],[1,1856,"它可"],[-1,1869,"["],[1,1871,"a"],[-1,1873,"]("],[1,1875,"中的"],[-1,1896,"），"],[1,1900,"），"],[1,1971,"- "],[-1,1973,"- "],[1,2051,"**"],[-1,2053,"**"],[-1,2114,"。在"],[1,2118,"。在"],[-1,2173,"**"],[1,2186,"\n要"],[-1,2195,"1."],[1,2199,"先写"],[-1,2254,"2."],[1,2258,"写M"],[-1,2349,"3."],[1,2353,"写M"],[-1,2365,"Ma"],[1,2369,"Ma"],[-1,2394,"。\n"],[-1,2398,"4."],[1,2400,"。\n"],[1,2402,"写S"],[1,2415,"**"],[-1,2417,"**"],[-1,2449,"。\n"],[-1,2453,"5.-"],[1,2456,"。\n- 写"],[1,2472,"**"],[-1,2474,"**"],[-1,2484,"，获"],[-1,2488,"取"],[1,2489,"，"],[1,2491,"获取"],[-1,2544,"。\n"],[-1,2548,"6.-J "],[1,2553,"。\n-  写J"],[-1,2587,"=="],[1,2591,"> "],[-1,2598,"=="],[1,2602,"> "],[-1,2613,"=="],[1,2617,"> "],[-1,2624,"["],[1,2626,"a"],[-1,2628,"]("],[1,2633,"> "],[-1,2646,"=="],[1,2650,"> "],[-1,2666,"=="],[1,2670,"> ."],[-1,2672,".p. ==S"],[1,2679,"p\n\n\n"],[-1,2686,"p"],[1,2687,"\n"],[1,2689,"Sp"],[1,2714,"2 "],[-1,2716,"2 "],[1,2726,"**"],[-1,2728,"**"],[-1,2737,"\nS"],[-1,2741,"p"],[1,2742,"\n"],[1,2744,"Sp"],[1,2759,"**"],[-1,2761,"**"],[-1,2776,"\nm"],[-1,2780,"y"],[1,2781,"\n"],[1,2783,"my"],[1,2800,"**"],[-1,2802,"**"],[-1,2807," "],[1,2809,"数"],[-1,2813," 起\n\n**；Sp"],[1,2822,"起来**；\n\n"],[1,2824,"Sp"],[-1,2840,"与 于"],[1,2843,"于 S"],[1,2852,"- "],[-1,2854,"- "],[1,2870,"："],[-1,2872,"："],[-1,2893,"my"],[1,2897,"my"],[1,2924,"- "],[-1,2926,"- "],[1,3058,"- "],[-1,3060,"- "],[-1,3084,"它允"],[1,3088,"它允"],[-1,3119,"，如"],[1,3123,"，如"],[-1,3182,"**"],[1,3184,"持久"],[-1,3198,"**"],[1,3200,"\n\n"],[-1,3428,"**"],[1,3430,"业务"],[-1,3440,"**"],[1,3442,"\n\n"],[-1,3480,"\n"],[1,3481," "],[-1,3668,"**"],[1,3670,"表现"],[-1,3693,"**"],[1,3695,"\n\n"],[-1,3742,"\n"],[1,3743," "],[-1,3901,"**ew层**"],[1,3908,"View层\n\n"],[-1,3970,"**联系**"],[1,3976,"各层联系\n\n"],[-1,4181,"\n"],[1,4182," "],[-1,4359,"==**"],[1,4363,"\n\n"],[-1,4584,"  "],[1,4586,"**"],[-1,4634,"in"],[1,4636,"pr"],[1,4755,"in"],[-1,4756,"+S"],[1,6214,"**"],[-1,6217," 1"],[1,6225,"Sp"],[-1,6229," \n"],[-1,6237,"\n"],[1,6238," "],[-1,6254,"  "],[1,6256,"\n\n"],[-1,6382,"S"],[1,6383," "],[-1,6447,"p"],[1,6448," "],[1,6465,"Sp"],[-1,6472,"开源"],[1,6489,"Sp"],[-1,6493,"是于"],[1,8655,"pr"],[-1,8658,"使用"],[1,9350,"pr"],[-1,9354,"用途"],[1,9815,"pr"],[-1,9818,"中受"],[1,10014,"pr"],[-1,10017,"是一"],[1,10153,"面向"],[-1,10155,"（A"],[-1,10329,"。\n"],[1,10331,"框架"],[-1,10426,"\n##"],[1,10429,"。\n\n"],[1,10611,"##"],[-1,10615,".2"],[-1,10682,"、"],[1,10683,"."],[-1,10692,"S"],[1,10693,"2"],[-1,10864,"p"],[1,10865,"、"],[-1,10887,"r"],[1,10888,"S"],[-1,10908,"i"],[1,10909,"p"],[-1,10914,"n"],[1,10915,"r"],[1,10939,"in"],[-1,10940,"MV"],[-1,11237,"\n\n"],[1,11239,"  "],[-1,11290," "],[1,11291,"\n"],[-1,11324," "],[1,11325,"\n"],[-1,11332,"S"],[1,11333," "],[-1,11384,"p"],[1,11385," "],[1,11425,"Sp"],[-1,11433,"属于"],[1,11449,"Sp"],[-1,11453,"Fr"],[1,19587,"。"],[-1,19588," "]],[24,24],[19588,19588]]],[1570888771586,[null,[[1,24,"\n*原理*"],[-1,24,"框架原理\n"],[1,41,"**"],[-1,41,"作用\n\n"],[-1,48," "],[-1,51,"是"],[1,53,"是"],[1,55," "],[-1,71," "],[-1,73," "],[1,75," "],[1,76," "],[-1,81," "],[1,84," "],[-1,92," "],[1,95," "],[-1,96," "],[1,99," "],[-1,131," "],[1,134," "],[-1,137," "],[1,140," "],[1,143,"使用"],[-1,145,"使用"],[1,159,"请求"],[-1,161,"请求"],[1,171,"\n\n"],[1,173,"s"],[-1,173,"\n"],[-1,176,"sp"],[1,190,"，m"],[-1,193,"my"],[1,214,"**"],[1,225,"Sp"],[-1,225,"\n\n"],[1,243,"."],[-1,243,"\n"],[-1,380,"客户"],[-1,388," "],[1,391," "],[1,406,"分发"],[-1,412,"分发"],[1,416,"\n\n"],[1,437,"2"],[-1,437,"\n"],[1,442,"i "],[-1,442,"由 Di"],[-1,460," "],[1,463," "],[-1,466," "],[1,469," "],[1,481,"找到"],[-1,503,"找到"],[-1,510," "],[1,513," "],[1,521,"\n\n；3"],[-1,521,"；\n"],[-1,750,"Co"],[-1,760," "],[1,763," "],[-1,773," "],[1,776," "],[1,786,"\n\n"],[1,802,"4"],[-1,802,"\n"],[-1,807,"Di"],[1,819,"clvt"],[-1,819,"vlet "],[1,826," "],[-1,846," "],[1,849," "],[1,853,"\n5"],[-1,857,"视图"],[1,872,"!["],[1,933,"Sp"],[-1,933,"\n\n"],[-1,1826,"Sp"],[1,1854,"它可"],[-1,1856,"它可"],[1,1871,"["],[-1,1872,"a"],[1,1875,"]("],[-1,1875,"中的"],[1,1898,"），"],[-1,1900,"），"],[-1,1973,"- "],[1,1977,"- "],[-1,2053,"**"],[1,2057,"**"],[1,2116,"。在"],[-1,2118,"。在"],[1,2175,"**"],[-1,2186,"\n要"],[1,2197,"1."],[-1,2199,"先写"],[1,2256,"2."],[-1,2258,"写M"],[1,2351,"3."],[-1,2353,"写M"],[1,2367,"Ma"],[-1,2369,"Ma"],[1,2396,"。\n"],[1,2398,"4."],[-1,2398,"。\n"],[-1,2402,"写S"],[-1,2417,"**"],[1,2421,"**"],[1,2451,"。\n"],[1,2453,"5.-"],[-1,2453,"。\n- 写"],[-1,2474,"**"],[1,2478,"**"],[1,2486,"，获"],[1,2488,"取"],[-1,2488,"，"],[-1,2491,"获取"],[1,2546,"。\n"],[1,2548,"6.-J "],[-1,2548,"。\n-  写J"],[1,2589,"=="],[-1,2591,"> "],[1,2600,"=="],[-1,2602,"> "],[1,2615,"=="],[-1,2617,"> "],[1,2626,"["],[-1,2627,"a"],[1,2630,"]("],[-1,2633,"> "],[1,2648,"=="],[-1,2650,"> "],[1,2668,"=="],[-1,2670,"> ."],[1,2675,".p. ==S"],[-1,2675,"p\n\n\n"],[1,2686,"p"],[-1,2686,"\n"],[-1,2689,"Sp"],[-1,2716,"2 "],[1,2720,"2 "],[-1,2728,"**"],[1,2732,"**"],[1,2739,"\nS"],[1,2741,"p"],[-1,2741,"\n"],[-1,2744,"Sp"],[-1,2761,"**"],[1,2765,"**"],[1,2778,"\nm"],[1,2780,"y"],[-1,2780,"\n"],[-1,2783,"my"],[-1,2802,"**"],[1,2806,"**"],[1,2809," "],[-1,2810,"数"],[1,2815," 起\n\n**；Sp"],[-1,2815,"起来**；\n\n"],[-1,2824,"Sp"],[1,2842,"与 于"],[-1,2842,"于 S"],[-1,2854,"- "],[1,2858,"- "],[-1,2872,"："],[1,2875,"："],[1,2895,"my"],[-1,2897,"my"],[-1,2926,"- "],[1,2930,"- "],[-1,3060,"- "],[1,3064,"- "],[1,3086,"它允"],[-1,3088,"它允"],[1,3121,"，如"],[-1,3123,"，如"],[1,3184,"**"],[-1,3184,"持久"],[1,3200,"**"],[-1,3200,"\n\n"],[1,3430,"**"],[-1,3430,"业务"],[1,3442,"**"],[-1,3442,"\n\n"],[1,3482,"\n"],[-1,3482," "],[1,3670,"**"],[-1,3670,"表现"],[1,3695,"**"],[-1,3695,"\n\n"],[1,3744,"\n"],[-1,3744," "],[1,3903,"**ew层**"],[-1,3903,"View层\n\n"],[1,3972,"**联系**"],[-1,3972,"各层联系\n\n"],[1,4183,"\n"],[-1,4183," "],[1,4361,"==**"],[-1,4361,"\n\n"],[1,4584,"  "],[-1,4584,"**"],[1,4634,"in"],[-1,4634,"pr"],[-1,4755,"in"],[1,4758,"+S"],[-1,6214,"**"],[1,6219," 1"],[-1,6225,"Sp"],[1,6231," \n"],[1,6237,"\n"],[-1,6237," "],[1,6254,"  "],[-1,6254,"\n\n"],[1,6382,"S"],[-1,6382," "],[1,6447,"p"],[-1,6447," "],[-1,6465,"Sp"],[1,6474,"开源"],[-1,6489,"Sp"],[1,6495,"是于"],[-1,8655,"pr"],[1,8660,"使用"],[-1,9350,"pr"],[1,9356,"用途"],[-1,9815,"pr"],[1,9820,"中受"],[-1,10014,"pr"],[1,10019,"是一"],[-1,10153,"面向"],[1,10157,"（A"],[1,10329,"。\n"],[-1,10329,"框架"],[1,10426,"\n##"],[-1,10426,"。\n\n"],[-1,10611,"##"],[1,10617,".2"],[1,10682,"、"],[-1,10682,"."],[1,10692,"S"],[-1,10692,"2"],[1,10864,"p"],[-1,10864,"、"],[1,10887,"r"],[-1,10887,"S"],[1,10908,"i"],[-1,10908,"p"],[1,10914,"n"],[-1,10914,"r"],[-1,10939,"in"],[1,10942,"MV"],[1,11237,"\n\n"],[-1,11237,"  "],[1,11290," "],[-1,11290,"\n"],[1,11324," "],[-1,11324,"\n"],[1,11332,"S"],[-1,11332," "],[1,11384,"p"],[-1,11384," "],[-1,11425,"Sp"],[1,11435,"属于"],[-1,11449,"Sp"],[1,11455,"Fr"],[-1,19587,"。"],[1,19589," "]],[19588,19588],[24,24]]],[1570888738278,["GJX@GJXAIOU",[[-1,37174,"###                      "]],[37174,37199],[37174,37174]]],[1570888744134,["GJX@GJXAIOU",[[-1,37175,"                                        "]],[37174,37214],[37174,37174]]],[1570888748352,["GJX@GJXAIOU",[[-1,37306,"    "]],[37306,37310],[37306,37306]]],[1570888764703,["GJX@GJXAIOU",[[-1,36864,"****"]],[36868,36868],[36864,36864]]],[1570888766518,["GJX@GJXAIOU",[[1,36864," "]],[36864,36864],[36865,36865]]],[1570888768759,["GJX@GJXAIOU",[[-1,36857,"**   "]],[36857,36862],[36857,36857]]],[1570888770326,["GJX@GJXAIOU",[[-1,36879," **"]],[36879,36882],[36879,36879]]],[1570888831589,[null,[[-1,24,"\n*原理*"],[1,29,"框架原理\n"],[-1,41,"**"],[1,43,"作用\n\n"],[1,46," "],[1,48,"是"],[-1,49,"是"],[-1,52," "],[1,69," "],[1,70," "],[-1,71," "],[-1,73," "],[1,79," "],[-1,81," "],[1,90," "],[-1,92," "],[1,94," "],[-1,96," "],[1,129," "],[-1,131," "],[1,135," "],[-1,137," "],[-1,141,"使用"],[1,145,"使用"],[-1,157,"请求"],[1,161,"请求"],[-1,169,"\n\n"],[-1,173,"s"],[1,174,"\n"],[1,176,"sp"],[-1,188,"，m"],[1,193,"my"],[-1,212,"**"],[-1,225,"Sp"],[1,227,"\n\n"],[-1,243,"."],[1,244,"\n"],[1,380,"客户"],[1,386," "],[-1,388," "],[-1,404,"分发"],[1,412,"分发"],[-1,414,"\n\n"],[-1,437,"2"],[1,438,"\n"],[-1,442,"i "],[1,444,"由 Di"],[1,458," "],[-1,460," "],[1,464," "],[-1,466," "],[-1,479,"找到"],[1,503,"找到"],[1,508," "],[-1,510," "],[-1,519,"\n\n；3"],[1,523,"；\n"],[1,750,"Co"],[1,758," "],[-1,760," "],[1,771," "],[-1,773," "],[-1,784,"\n\n"],[-1,802,"4"],[1,803,"\n"],[1,807,"Di"],[-1,817,"clvt"],[1,821,"vlet "],[-1,823," "],[1,844," "],[-1,846," "],[-1,851,"\n5"],[1,857,"视图"],[-1,870,"!["],[-1,933,"Sp"],[1,935,"\n\n"],[1,1826,"Sp"],[-1,1852,"它可"],[1,1856,"它可"],[-1,1869,"["],[1,1871,"a"],[-1,1873,"]("],[1,1875,"中的"],[-1,1896,"），"],[1,1900,"），"],[1,1971,"- "],[-1,1973,"- "],[1,2051,"**"],[-1,2053,"**"],[-1,2114,"。在"],[1,2118,"。在"],[-1,2173,"**"],[1,2186,"\n要"],[-1,2195,"1."],[1,2199,"先写"],[-1,2254,"2."],[1,2258,"写M"],[-1,2349,"3."],[1,2353,"写M"],[-1,2365,"Ma"],[1,2369,"Ma"],[-1,2394,"。\n"],[-1,2398,"4."],[1,2400,"。\n"],[1,2402,"写S"],[1,2415,"**"],[-1,2417,"**"],[-1,2449,"。\n"],[-1,2453,"5.-"],[1,2456,"。\n- 写"],[1,2472,"**"],[-1,2474,"**"],[-1,2484,"，获"],[-1,2488,"取"],[1,2489,"，"],[1,2491,"获取"],[-1,2544,"。\n"],[-1,2548,"6.-J "],[1,2553,"。\n-  写J"],[-1,2587,"=="],[1,2591,"> "],[-1,2598,"=="],[1,2602,"> "],[-1,2613,"=="],[1,2617,"> "],[-1,2624,"["],[1,2626,"a"],[-1,2628,"]("],[1,2633,"> "],[-1,2646,"=="],[1,2650,"> "],[-1,2666,"=="],[1,2670,"> ."],[-1,2672,".p. ==S"],[1,2679,"p\n\n\n"],[-1,2686,"p"],[1,2687,"\n"],[1,2689,"Sp"],[1,2714,"2 "],[-1,2716,"2 "],[1,2726,"**"],[-1,2728,"**"],[-1,2737,"\nS"],[-1,2741,"p"],[1,2742,"\n"],[1,2744,"Sp"],[1,2759,"**"],[-1,2761,"**"],[-1,2776,"\nm"],[-1,2780,"y"],[1,2781,"\n"],[1,2783,"my"],[1,2800,"**"],[-1,2802,"**"],[-1,2807," "],[1,2809,"数"],[-1,2813," 起\n\n**；Sp"],[1,2822,"起来**；\n\n"],[1,2824,"Sp"],[-1,2840,"与 于"],[1,2843,"于 S"],[1,2852,"- "],[-1,2854,"- "],[1,2870,"："],[-1,2872,"："],[-1,2893,"my"],[1,2897,"my"],[1,2924,"- "],[-1,2926,"- "],[1,3058,"- "],[-1,3060,"- "],[-1,3084,"它允"],[1,3088,"它允"],[-1,3119,"，如"],[1,3123,"，如"],[-1,3182,"**"],[1,3184,"持久"],[-1,3198,"**"],[1,3200,"\n\n"],[-1,3428,"**"],[1,3430,"业务"],[-1,3440,"**"],[1,3442,"\n\n"],[-1,3480,"\n"],[1,3481," "],[-1,3668,"**"],[1,3670,"表现"],[-1,3693,"**"],[1,3695,"\n\n"],[-1,3742,"\n"],[1,3743," "],[-1,3901,"**ew层**"],[1,3908,"View层\n\n"],[-1,3970,"**联系**"],[1,3976,"各层联系\n\n"],[-1,4181,"\n"],[1,4182," "],[-1,4359,"==**"],[1,4363,"\n\n"],[-1,4584,"  "],[1,4586,"**"],[-1,4634,"in"],[1,4636,"pr"],[1,4755,"in"],[-1,4756,"+S"],[1,6214,"**"],[-1,6217," 1"],[1,6225,"Sp"],[-1,6229," \n"],[-1,6237,"\n"],[1,6238," "],[-1,6254,"  "],[1,6256,"\n\n"],[-1,6382,"S"],[1,6383," "],[-1,6447,"p"],[1,6448," "],[1,6465,"Sp"],[-1,6472,"开源"],[1,6489,"Sp"],[-1,6493,"是于"],[1,8655,"pr"],[-1,8658,"使用"],[1,9350,"pr"],[-1,9354,"用途"],[1,9815,"pr"],[-1,9818,"中受"],[1,10014,"pr"],[-1,10017,"是一"],[1,10153,"面向"],[-1,10155,"（A"],[-1,10329,"。\n"],[1,10331,"框架"],[-1,10426,"\n##"],[1,10429,"。\n\n"],[1,10611,"##"],[-1,10615,".2"],[-1,10682,"、"],[1,10683,"."],[-1,10692,"S"],[1,10693,"2"],[-1,10864,"p"],[1,10865,"、"],[-1,10887,"r"],[1,10888,"S"],[-1,10908,"i"],[1,10909,"p"],[-1,10914,"n"],[1,10915,"r"],[1,10939,"in"],[-1,10940,"MV"],[-1,11237,"\n\n"],[1,11239,"  "],[-1,11290," "],[1,11291,"\n"],[-1,11324," "],[1,11325,"\n"],[-1,11332,"S"],[1,11333," "],[-1,11384,"p"],[1,11385," "],[1,11425,"Sp"],[-1,11433,"属于"],[1,11449,"Sp"],[-1,11453,"Fr"],[1,19587,"。"],[-1,19588," "]],[24,24],[19588,19588]]],[1570888831589,[null,[[1,24,"\n*原理*"],[-1,24,"框架原理\n"],[1,41,"**"],[-1,41,"作用\n\n"],[-1,48," "],[-1,51,"是"],[1,53,"是"],[1,55," "],[-1,71," "],[-1,73," "],[1,75," "],[1,76," "],[-1,81," "],[1,84," "],[-1,92," "],[1,95," "],[-1,96," "],[1,99," "],[-1,131," "],[1,134," "],[-1,137," "],[1,140," "],[1,143,"使用"],[-1,145,"使用"],[1,159,"请求"],[-1,161,"请求"],[1,171,"\n\n"],[1,173,"s"],[-1,173,"\n"],[-1,176,"sp"],[1,190,"，m"],[-1,193,"my"],[1,214,"**"],[1,225,"Sp"],[-1,225,"\n\n"],[1,243,"."],[-1,243,"\n"],[-1,380,"客户"],[-1,388," "],[1,391," "],[1,406,"分发"],[-1,412,"分发"],[1,416,"\n\n"],[1,437,"2"],[-1,437,"\n"],[1,442,"i "],[-1,442,"由 Di"],[-1,460," "],[1,463," "],[-1,466," "],[1,469," "],[1,481,"找到"],[-1,503,"找到"],[-1,510," "],[1,513," "],[1,521,"\n\n；3"],[-1,521,"；\n"],[-1,750,"Co"],[-1,760," "],[1,763," "],[-1,773," "],[1,776," "],[1,786,"\n\n"],[1,802,"4"],[-1,802,"\n"],[-1,807,"Di"],[1,819,"clvt"],[-1,819,"vlet "],[1,826," "],[-1,846," "],[1,849," "],[1,853,"\n5"],[-1,857,"视图"],[1,872,"!["],[1,933,"Sp"],[-1,933,"\n\n"],[-1,1826,"Sp"],[1,1854,"它可"],[-1,1856,"它可"],[1,1871,"["],[-1,1872,"a"],[1,1875,"]("],[-1,1875,"中的"],[1,1898,"），"],[-1,1900,"），"],[-1,1973,"- "],[1,1977,"- "],[-1,2053,"**"],[1,2057,"**"],[1,2116,"。在"],[-1,2118,"。在"],[1,2175,"**"],[-1,2186,"\n要"],[1,2197,"1."],[-1,2199,"先写"],[1,2256,"2."],[-1,2258,"写M"],[1,2351,"3."],[-1,2353,"写M"],[1,2367,"Ma"],[-1,2369,"Ma"],[1,2396,"。\n"],[1,2398,"4."],[-1,2398,"。\n"],[-1,2402,"写S"],[-1,2417,"**"],[1,2421,"**"],[1,2451,"。\n"],[1,2453,"5.-"],[-1,2453,"。\n- 写"],[-1,2474,"**"],[1,2478,"**"],[1,2486,"，获"],[1,2488,"取"],[-1,2488,"，"],[-1,2491,"获取"],[1,2546,"。\n"],[1,2548,"6.-J "],[-1,2548,"。\n-  写J"],[1,2589,"=="],[-1,2591,"> "],[1,2600,"=="],[-1,2602,"> "],[1,2615,"=="],[-1,2617,"> "],[1,2626,"["],[-1,2627,"a"],[1,2630,"]("],[-1,2633,"> "],[1,2648,"=="],[-1,2650,"> "],[1,2668,"=="],[-1,2670,"> ."],[1,2675,".p. ==S"],[-1,2675,"p\n\n\n"],[1,2686,"p"],[-1,2686,"\n"],[-1,2689,"Sp"],[-1,2716,"2 "],[1,2720,"2 "],[-1,2728,"**"],[1,2732,"**"],[1,2739,"\nS"],[1,2741,"p"],[-1,2741,"\n"],[-1,2744,"Sp"],[-1,2761,"**"],[1,2765,"**"],[1,2778,"\nm"],[1,2780,"y"],[-1,2780,"\n"],[-1,2783,"my"],[-1,2802,"**"],[1,2806,"**"],[1,2809," "],[-1,2810,"数"],[1,2815," 起\n\n**；Sp"],[-1,2815,"起来**；\n\n"],[-1,2824,"Sp"],[1,2842,"与 于"],[-1,2842,"于 S"],[-1,2854,"- "],[1,2858,"- "],[-1,2872,"："],[1,2875,"："],[1,2895,"my"],[-1,2897,"my"],[-1,2926,"- "],[1,2930,"- "],[-1,3060,"- "],[1,3064,"- "],[1,3086,"它允"],[-1,3088,"它允"],[1,3121,"，如"],[-1,3123,"，如"],[1,3184,"**"],[-1,3184,"持久"],[1,3200,"**"],[-1,3200,"\n\n"],[1,3430,"**"],[-1,3430,"业务"],[1,3442,"**"],[-1,3442,"\n\n"],[1,3482,"\n"],[-1,3482," "],[1,3670,"**"],[-1,3670,"表现"],[1,3695,"**"],[-1,3695,"\n\n"],[1,3744,"\n"],[-1,3744," "],[1,3903,"**ew层**"],[-1,3903,"View层\n\n"],[1,3972,"**联系**"],[-1,3972,"各层联系\n\n"],[1,4183,"\n"],[-1,4183," "],[1,4361,"==**"],[-1,4361,"\n\n"],[1,4584,"  "],[-1,4584,"**"],[1,4634,"in"],[-1,4634,"pr"],[-1,4755,"in"],[1,4758,"+S"],[-1,6214,"**"],[1,6219," 1"],[-1,6225,"Sp"],[1,6231," \n"],[1,6237,"\n"],[-1,6237," "],[1,6254,"  "],[-1,6254,"\n\n"],[1,6382,"S"],[-1,6382," "],[1,6447,"p"],[-1,6447," "],[-1,6465,"Sp"],[1,6474,"开源"],[-1,6489,"Sp"],[1,6495,"是于"],[-1,8655,"pr"],[1,8660,"使用"],[-1,9350,"pr"],[1,9356,"用途"],[-1,9815,"pr"],[1,9820,"中受"],[-1,10014,"pr"],[1,10019,"是一"],[-1,10153,"面向"],[1,10157,"（A"],[1,10329,"。\n"],[-1,10329,"框架"],[1,10426,"\n##"],[-1,10426,"。\n\n"],[-1,10611,"##"],[1,10617,".2"],[1,10682,"、"],[-1,10682,"."],[1,10692,"S"],[-1,10692,"2"],[1,10864,"p"],[-1,10864,"、"],[1,10887,"r"],[-1,10887,"S"],[1,10908,"i"],[-1,10908,"p"],[1,10914,"n"],[-1,10914,"r"],[-1,10939,"in"],[1,10942,"MV"],[1,11237,"\n\n"],[-1,11237,"  "],[1,11290," "],[-1,11290,"\n"],[1,11324," "],[-1,11324,"\n"],[1,11332,"S"],[-1,11332," "],[1,11384,"p"],[-1,11384," "],[-1,11425,"Sp"],[1,11435,"属于"],[-1,11449,"Sp"],[1,11455,"Fr"],[-1,19587,"。"],[1,19589," "]],[19588,19588],[24,24]]],[1570888774478,["GJX@GJXAIOU",[[-1,36833,"\n"]],[36834,36834],[36833,36833]]],[1570888781978,["GJX@GJXAIOU",[[-1,36656,"**"]],[36658,36658],[36656,36656]]],[1570888785224,["GJX@GJXAIOU",[[-1,36433,"**                             "]],[36433,36464],[36433,36433]]],[1570888786680,["GJX@GJXAIOU",[[-1,36432,"\n"]],[36432,36432],[36431,36431]]],[1570888787210,["GJX@GJXAIOU",[[-1,36431,"\n"]],[36431,36431],[36430,36430]]],[1570888789111,["GJX@GJXAIOU",[[-1,36619,"**"]],[36621,36621],[36619,36619]]],[1570888791054,["GJX@GJXAIOU",[[-1,36660,"**"]],[36662,36662],[36660,36660]]],[1570888794767,["GJX@GJXAIOU",[[-1,36662,"**"]],[36664,36664],[36662,36662]]],[1570888796487,["GJX@GJXAIOU",[[-1,36755,"**"]],[36757,36757],[36755,36755]]],[1570888805911,["GJX@GJXAIOU",[[1,36889,"```"]],[36889,36889],[36892,36892]]],[1570888806066,["GJX@GJXAIOU",[[1,36892,"language\n```\n"]],[36892,36892],[36892,36900]]],[1570888807016,["GJX@GJXAIOU",[[-1,36892,"language"],[1,36900,"p"]],[36892,36900],[36893,36893]]],[1570888810973,["GJX@GJXAIOU",[[1,36893,"roperties"]],[36893,36893],[36902,36902]]],[1570888811915,["GJX@GJXAIOU",[[1,36903,"\n"]],[36902,36902],[36903,36903]]],[1570888822157,["GJX@GJXAIOU",[[-1,36909,"driver=com.mysql.jdbc.Driver\nurl=jdbc:mysql://localhost:3306/maven\nusername=root\npassword=root\n#定义初始连接数  \ninitialSize=0 #定义最大连接数  \nmaxActive=20 #定义最大空闲  \nmaxIdle=20 #定义最小空闲  \nminIdle=1 #定义最长等待时间  \nmaxWait=60000  "]],[36909,37121],[36909,36909]]],[1570888824544,["GJX@GJXAIOU",[[1,36903,"driver=com.mysql.jdbc.Driver\nurl=jdbc:mysql://localhost:3306/maven\nusername=root\npassword=root\n#定义初始连接数  \ninitialSize=0 #定义最大连接数  \nmaxActive=20 #定义最大空闲  \nmaxIdle=20 #定义最小空闲  \nminIdle=1 #定义最长等待时间  \nmaxWait=60000  "]],[36903,36903],[37115,37115]]],[1570888827945,["GJX@GJXAIOU",[[-1,37122,"\n"]],[37122,37122],[37121,37121]]],[1570888828542,["GJX@GJXAIOU",[[-1,37121,"\n"]],[37121,37121],[37120,37120]]],[1570888891588,[null,[[-1,24,"\n*原理*"],[1,29,"框架原理\n"],[-1,41,"**"],[1,43,"作用\n\n"],[1,46," "],[1,48,"是"],[-1,49,"是"],[-1,52," "],[1,69," "],[1,70," "],[-1,71," "],[-1,73," "],[1,79," "],[-1,81," "],[1,90," "],[-1,92," "],[1,94," "],[-1,96," "],[1,129," "],[-1,131," "],[1,135," "],[-1,137," "],[-1,141,"使用"],[1,145,"使用"],[-1,157,"请求"],[1,161,"请求"],[-1,169,"\n\n"],[-1,173,"s"],[1,174,"\n"],[1,176,"sp"],[-1,188,"，m"],[1,193,"my"],[-1,212,"**"],[-1,225,"Sp"],[1,227,"\n\n"],[-1,243,"."],[1,244,"\n"],[1,380,"客户"],[1,386," "],[-1,388," "],[-1,404,"分发"],[1,412,"分发"],[-1,414,"\n\n"],[-1,437,"2"],[1,438,"\n"],[-1,442,"i "],[1,444,"由 Di"],[1,458," "],[-1,460," "],[1,464," "],[-1,466," "],[-1,479,"找到"],[1,503,"找到"],[1,508," "],[-1,510," "],[-1,519,"\n\n；3"],[1,523,"；\n"],[1,750,"Co"],[1,758," "],[-1,760," "],[1,771," "],[-1,773," "],[-1,784,"\n\n"],[-1,802,"4"],[1,803,"\n"],[1,807,"Di"],[-1,817,"clvt"],[1,821,"vlet "],[-1,823," "],[1,844," "],[-1,846," "],[-1,851,"\n5"],[1,857,"视图"],[-1,870,"!["],[-1,933,"Sp"],[1,935,"\n\n"],[1,1826,"Sp"],[-1,1852,"它可"],[1,1856,"它可"],[-1,1869,"["],[1,1871,"a"],[-1,1873,"]("],[1,1875,"中的"],[-1,1896,"），"],[1,1900,"），"],[1,1971,"- "],[-1,1973,"- "],[1,2051,"**"],[-1,2053,"**"],[-1,2114,"。在"],[1,2118,"。在"],[-1,2173,"**"],[1,2186,"\n要"],[-1,2195,"1."],[1,2199,"先写"],[-1,2254,"2."],[1,2258,"写M"],[-1,2349,"3."],[1,2353,"写M"],[-1,2365,"Ma"],[1,2369,"Ma"],[-1,2394,"。\n"],[-1,2398,"4."],[1,2400,"。\n"],[1,2402,"写S"],[1,2415,"**"],[-1,2417,"**"],[-1,2449,"。\n"],[-1,2453,"5.-"],[1,2456,"。\n- 写"],[1,2472,"**"],[-1,2474,"**"],[-1,2484,"，获"],[-1,2488,"取"],[1,2489,"，"],[1,2491,"获取"],[-1,2544,"。\n"],[-1,2548,"6.-J "],[1,2553,"。\n-  写J"],[-1,2587,"=="],[1,2591,"> "],[-1,2598,"=="],[1,2602,"> "],[-1,2613,"=="],[1,2617,"> "],[-1,2624,"["],[1,2626,"a"],[-1,2628,"]("],[1,2633,"> "],[-1,2646,"=="],[1,2650,"> "],[-1,2666,"=="],[1,2670,"> ."],[-1,2672,".p. ==S"],[1,2679,"p\n\n\n"],[-1,2686,"p"],[1,2687,"\n"],[1,2689,"Sp"],[1,2714,"2 "],[-1,2716,"2 "],[1,2726,"**"],[-1,2728,"**"],[-1,2737,"\nS"],[-1,2741,"p"],[1,2742,"\n"],[1,2744,"Sp"],[1,2759,"**"],[-1,2761,"**"],[-1,2776,"\nm"],[-1,2780,"y"],[1,2781,"\n"],[1,2783,"my"],[1,2800,"**"],[-1,2802,"**"],[-1,2807," "],[1,2809,"数"],[-1,2813," 起\n\n**；Sp"],[1,2822,"起来**；\n\n"],[1,2824,"Sp"],[-1,2840,"与 于"],[1,2843,"于 S"],[1,2852,"- "],[-1,2854,"- "],[1,2870,"："],[-1,2872,"："],[-1,2893,"my"],[1,2897,"my"],[1,2924,"- "],[-1,2926,"- "],[1,3058,"- "],[-1,3060,"- "],[-1,3084,"它允"],[1,3088,"它允"],[-1,3119,"，如"],[1,3123,"，如"],[-1,3182,"**"],[1,3184,"持久"],[-1,3198,"**"],[1,3200,"\n\n"],[-1,3428,"**"],[1,3430,"业务"],[-1,3440,"**"],[1,3442,"\n\n"],[-1,3480,"\n"],[1,3481," "],[-1,3668,"**"],[1,3670,"表现"],[-1,3693,"**"],[1,3695,"\n\n"],[-1,3742,"\n"],[1,3743," "],[-1,3901,"**ew层**"],[1,3908,"View层\n\n"],[-1,3970,"**联系**"],[1,3976,"各层联系\n\n"],[-1,4181,"\n"],[1,4182," "],[-1,4359,"==**"],[1,4363,"\n\n"],[-1,4584,"  "],[1,4586,"**"],[-1,4634,"in"],[1,4636,"pr"],[1,4755,"in"],[-1,4756,"+S"],[1,6214,"**"],[-1,6217," 1"],[1,6225,"Sp"],[-1,6229," \n"],[-1,6237,"\n"],[1,6238," "],[-1,6254,"  "],[1,6256,"\n\n"],[-1,6382,"S"],[1,6383," "],[-1,6447,"p"],[1,6448," "],[1,6465,"Sp"],[-1,6472,"开源"],[1,6489,"Sp"],[-1,6493,"是于"],[1,8655,"pr"],[-1,8658,"使用"],[1,9350,"pr"],[-1,9354,"用途"],[1,9815,"pr"],[-1,9818,"中受"],[1,10014,"pr"],[-1,10017,"是一"],[1,10153,"面向"],[-1,10155,"（A"],[-1,10329,"。\n"],[1,10331,"框架"],[-1,10426,"\n##"],[1,10429,"。\n\n"],[1,10611,"##"],[-1,10615,".2"],[-1,10682,"、"],[1,10683,"."],[-1,10692,"S"],[1,10693,"2"],[-1,10864,"p"],[1,10865,"、"],[-1,10887,"r"],[1,10888,"S"],[-1,10908,"i"],[1,10909,"p"],[-1,10914,"n"],[1,10915,"r"],[1,10939,"in"],[-1,10940,"MV"],[-1,11237,"\n\n"],[1,11239,"  "],[-1,11290," "],[1,11291,"\n"],[-1,11324," "],[1,11325,"\n"],[-1,11332,"S"],[1,11333," "],[-1,11384,"p"],[1,11385," "],[1,11425,"Sp"],[-1,11433,"属于"],[1,11449,"Sp"],[-1,11453,"Fr"],[1,19587,"。"],[-1,19588," "]],[24,24],[19588,19588]]],[1570888891588,[null,[[1,24,"\n*原理*"],[-1,24,"框架原理\n"],[1,41,"**"],[-1,41,"作用\n\n"],[-1,48," "],[-1,51,"是"],[1,53,"是"],[1,55," "],[-1,71," "],[-1,73," "],[1,75," "],[1,76," "],[-1,81," "],[1,84," "],[-1,92," "],[1,95," "],[-1,96," "],[1,99," "],[-1,131," "],[1,134," "],[-1,137," "],[1,140," "],[1,143,"使用"],[-1,145,"使用"],[1,159,"请求"],[-1,161,"请求"],[1,171,"\n\n"],[1,173,"s"],[-1,173,"\n"],[-1,176,"sp"],[1,190,"，m"],[-1,193,"my"],[1,214,"**"],[1,225,"Sp"],[-1,225,"\n\n"],[1,243,"."],[-1,243,"\n"],[-1,380,"客户"],[-1,388," "],[1,391," "],[1,406,"分发"],[-1,412,"分发"],[1,416,"\n\n"],[1,437,"2"],[-1,437,"\n"],[1,442,"i "],[-1,442,"由 Di"],[-1,460," "],[1,463," "],[-1,466," "],[1,469," "],[1,481,"找到"],[-1,503,"找到"],[-1,510," "],[1,513," "],[1,521,"\n\n；3"],[-1,521,"；\n"],[-1,750,"Co"],[-1,760," "],[1,763," "],[-1,773," "],[1,776," "],[1,786,"\n\n"],[1,802,"4"],[-1,802,"\n"],[-1,807,"Di"],[1,819,"clvt"],[-1,819,"vlet "],[1,826," "],[-1,846," "],[1,849," "],[1,853,"\n5"],[-1,857,"视图"],[1,872,"!["],[1,933,"Sp"],[-1,933,"\n\n"],[-1,1826,"Sp"],[1,1854,"它可"],[-1,1856,"它可"],[1,1871,"["],[-1,1872,"a"],[1,1875,"]("],[-1,1875,"中的"],[1,1898,"），"],[-1,1900,"），"],[-1,1973,"- "],[1,1977,"- "],[-1,2053,"**"],[1,2057,"**"],[1,2116,"。在"],[-1,2118,"。在"],[1,2175,"**"],[-1,2186,"\n要"],[1,2197,"1."],[-1,2199,"先写"],[1,2256,"2."],[-1,2258,"写M"],[1,2351,"3."],[-1,2353,"写M"],[1,2367,"Ma"],[-1,2369,"Ma"],[1,2396,"。\n"],[1,2398,"4."],[-1,2398,"。\n"],[-1,2402,"写S"],[-1,2417,"**"],[1,2421,"**"],[1,2451,"。\n"],[1,2453,"5.-"],[-1,2453,"。\n- 写"],[-1,2474,"**"],[1,2478,"**"],[1,2486,"，获"],[1,2488,"取"],[-1,2488,"，"],[-1,2491,"获取"],[1,2546,"。\n"],[1,2548,"6.-J "],[-1,2548,"。\n-  写J"],[1,2589,"=="],[-1,2591,"> "],[1,2600,"=="],[-1,2602,"> "],[1,2615,"=="],[-1,2617,"> "],[1,2626,"["],[-1,2627,"a"],[1,2630,"]("],[-1,2633,"> "],[1,2648,"=="],[-1,2650,"> "],[1,2668,"=="],[-1,2670,"> ."],[1,2675,".p. ==S"],[-1,2675,"p\n\n\n"],[1,2686,"p"],[-1,2686,"\n"],[-1,2689,"Sp"],[-1,2716,"2 "],[1,2720,"2 "],[-1,2728,"**"],[1,2732,"**"],[1,2739,"\nS"],[1,2741,"p"],[-1,2741,"\n"],[-1,2744,"Sp"],[-1,2761,"**"],[1,2765,"**"],[1,2778,"\nm"],[1,2780,"y"],[-1,2780,"\n"],[-1,2783,"my"],[-1,2802,"**"],[1,2806,"**"],[1,2809," "],[-1,2810,"数"],[1,2815," 起\n\n**；Sp"],[-1,2815,"起来**；\n\n"],[-1,2824,"Sp"],[1,2842,"与 于"],[-1,2842,"于 S"],[-1,2854,"- "],[1,2858,"- "],[-1,2872,"："],[1,2875,"："],[1,2895,"my"],[-1,2897,"my"],[-1,2926,"- "],[1,2930,"- "],[-1,3060,"- "],[1,3064,"- "],[1,3086,"它允"],[-1,3088,"它允"],[1,3121,"，如"],[-1,3123,"，如"],[1,3184,"**"],[-1,3184,"持久"],[1,3200,"**"],[-1,3200,"\n\n"],[1,3430,"**"],[-1,3430,"业务"],[1,3442,"**"],[-1,3442,"\n\n"],[1,3482,"\n"],[-1,3482," "],[1,3670,"**"],[-1,3670,"表现"],[1,3695,"**"],[-1,3695,"\n\n"],[1,3744,"\n"],[-1,3744," "],[1,3903,"**ew层**"],[-1,3903,"View层\n\n"],[1,3972,"**联系**"],[-1,3972,"各层联系\n\n"],[1,4183,"\n"],[-1,4183," "],[1,4361,"==**"],[-1,4361,"\n\n"],[1,4584,"  "],[-1,4584,"**"],[1,4634,"in"],[-1,4634,"pr"],[-1,4755,"in"],[1,4758,"+S"],[-1,6214,"**"],[1,6219," 1"],[-1,6225,"Sp"],[1,6231," \n"],[1,6237,"\n"],[-1,6237," "],[1,6254,"  "],[-1,6254,"\n\n"],[1,6382,"S"],[-1,6382," "],[1,6447,"p"],[-1,6447," "],[-1,6465,"Sp"],[1,6474,"开源"],[-1,6489,"Sp"],[1,6495,"是于"],[-1,8655,"pr"],[1,8660,"使用"],[-1,9350,"pr"],[1,9356,"用途"],[-1,9815,"pr"],[1,9820,"中受"],[-1,10014,"pr"],[1,10019,"是一"],[-1,10153,"面向"],[1,10157,"（A"],[1,10329,"。\n"],[-1,10329,"框架"],[1,10426,"\n##"],[-1,10426,"。\n\n"],[-1,10611,"##"],[1,10617,".2"],[1,10682,"、"],[-1,10682,"."],[1,10692,"S"],[-1,10692,"2"],[1,10864,"p"],[-1,10864,"、"],[1,10887,"r"],[-1,10887,"S"],[1,10908,"i"],[-1,10908,"p"],[1,10914,"n"],[-1,10914,"r"],[-1,10939,"in"],[1,10942,"MV"],[1,11237,"\n\n"],[-1,11237,"  "],[1,11290," "],[-1,11290,"\n"],[1,11324," "],[-1,11324,"\n"],[1,11332,"S"],[-1,11332," "],[1,11384,"p"],[-1,11384," "],[-1,11425,"Sp"],[1,11435,"属于"],[-1,11449,"Sp"],[1,11455,"Fr"],[-1,19587,"。"],[1,19589," "]],[19588,19588],[24,24]]],[1570888840814,["GJX@GJXAIOU",[[-1,37131," "]],[37132,37132],[37131,37131]]],[1570888858839,["GJX@GJXAIOU",[[1,37365,"```"]],[37365,37365],[37368,37368]]],[1570888859005,["GJX@GJXAIOU",[[1,37368,"language\n```\n"]],[37368,37368],[37368,37376]]],[1570888859750,["GJX@GJXAIOU",[[-1,37368,"language"],[1,37376,"x"]],[37368,37376],[37369,37369]]],[1570888860350,["GJX@GJXAIOU",[[1,37369,"ml"]],[37369,37369],[37371,37371]]],[1570888860900,["GJX@GJXAIOU",[[1,37372,"\n"]],[37371,37371],[37372,37372]]],[1570888868897,["GJX@GJXAIOU",[[-1,37378,"<?xml version=\"1.0\" encoding=\"UTF-8\"?>  \n<beans xmlns=\"http://www.springframework.org/schema/beans\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:p=\"http://www.springframework.org/schema/p\" xmlns:context=\"http://www.springframework.org/schema/context\" xmlns:mvc=\"http://www.springframework.org/schema/mvc\" xsi:schemaLocation=\"http://www.springframework.org/schema/beans    \n                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd    \n                        http://www.springframework.org/schema/context    \n                        http://www.springframework.org/schema/context/spring-context-3.1.xsd    \n                        http://www.springframework.org/schema/mvc    \n                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd\">  \n    <!-- 自动扫描 -->  \n    <context:component-scan base-package=\"com.javen\" />  \n\n    <!-- 引入配置文件 -->  \n    <bean id=\"propertyConfigurer\" class=\"org.springframework.beans.factory.config.PropertyPlaceholderConfigurer\">  \n        <property name=\"location\" value=\"classpath:jdbc.properties\" />  \n    </bean>  \n\n    <bean id=\"dataSource\" class=\"org.apache.commons.dbcp.BasicDataSource\" destroy-method=\"close\">  \n        <property name=\"driverClassName\" value=\"${driver}\" />  \n        <property name=\"url\" value=\"${url}\" />  \n        <property name=\"username\" value=\"${username}\" />  \n        <property name=\"password\" value=\"${password}\" />  \n        <!-- 初始化连接大小 -->  \n        <property name=\"initialSize\" value=\"${initialSize}\"></property>  \n        <!-- 连接池最大数量 -->  \n        <property name=\"maxActive\" value=\"${maxActive}\"></property>  \n        <!-- 连接池最大空闲 -->  \n        <property name=\"maxIdle\" value=\"${maxIdle}\"></property>  \n        <!-- 连接池最小空闲 -->  \n        <property name=\"minIdle\" value=\"${minIdle}\"></property>  \n        <!-- 获取连接最大等待时间 -->  \n        <property name=\"maxWait\" value=\"${maxWait}\"></property>  \n    </bean>  \n\n    <!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->  \n    <bean id=\"sqlSessionFactory\" class=\"org.mybatis.spring.SqlSessionFactoryBean\">  \n        <property name=\"dataSource\" ref=\"dataSource\" />  \n        <!-- 自动扫描mapping.xml文件 -->  \n        <property name=\"mapperLocations\" value=\"classpath:com/javen/mapping/*.xml\"></property>  \n    </bean>  \n\n    <!-- DAO接口所在包名，Spring会自动查找其下的类 -->  \n    <bean class=\"org.mybatis.spring.mapper.MapperScannerConfigurer\">  \n        <property name=\"basePackage\" value=\"com.javen.dao\" />  \n        <property name=\"sqlSessionFactoryBeanName\" value=\"sqlSessionFactory\"></property>  \n    </bean>  \n\n    <!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->  \n    <bean id=\"transactionManager\" class=\"org.springframework.jdbc.datasource.DataSourceTransactionManager\">  \n        <property name=\"dataSource\" ref=\"dataSource\" />  \n    </bean>  \n\n</beans>  \n"]],[37378,40222],[37378,37378]]],[1570888872335,["GJX@GJXAIOU",[[1,37372,"<?xml version=\"1.0\" encoding=\"UTF-8\"?>  \n<beans xmlns=\"http://www.springframework.org/schema/beans\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:p=\"http://www.springframework.org/schema/p\" xmlns:context=\"http://www.springframework.org/schema/context\" xmlns:mvc=\"http://www.springframework.org/schema/mvc\" xsi:schemaLocation=\"http://www.springframework.org/schema/beans    \n                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd    \n                        http://www.springframework.org/schema/context    \n                        http://www.springframework.org/schema/context/spring-context-3.1.xsd    \n                        http://www.springframework.org/schema/mvc    \n                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd\">  \n    <!-- 自动扫描 -->  \n    <context:component-scan base-package=\"com.javen\" />  \n\n    <!-- 引入配置文件 -->  \n    <bean id=\"propertyConfigurer\" class=\"org.springframework.beans.factory.config.PropertyPlaceholderConfigurer\">  \n        <property name=\"location\" value=\"classpath:jdbc.properties\" />  \n    </bean>  \n\n    <bean id=\"dataSource\" class=\"org.apache.commons.dbcp.BasicDataSource\" destroy-method=\"close\">  \n        <property name=\"driverClassName\" value=\"${driver}\" />  \n        <property name=\"url\" value=\"${url}\" />  \n        <property name=\"username\" value=\"${username}\" />  \n        <property name=\"password\" value=\"${password}\" />  \n        <!-- 初始化连接大小 -->  \n        <property name=\"initialSize\" value=\"${initialSize}\"></property>  \n        <!-- 连接池最大数量 -->  \n        <property name=\"maxActive\" value=\"${maxActive}\"></property>  \n        <!-- 连接池最大空闲 -->  \n        <property name=\"maxIdle\" value=\"${maxIdle}\"></property>  \n        <!-- 连接池最小空闲 -->  \n        <property name=\"minIdle\" value=\"${minIdle}\"></property>  \n        <!-- 获取连接最大等待时间 -->  \n        <property name=\"maxWait\" value=\"${maxWait}\"></property>  \n    </bean>  \n\n    <!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->  \n    <bean id=\"sqlSessionFactory\" class=\"org.mybatis.spring.SqlSessionFactoryBean\">  \n        <property name=\"dataSource\" ref=\"dataSource\" />  \n        <!-- 自动扫描mapping.xml文件 -->  \n        <property name=\"mapperLocations\" value=\"classpath:com/javen/mapping/*.xml\"></property>  \n    </bean>  \n\n    <!-- DAO接口所在包名，Spring会自动查找其下的类 -->  \n    <bean class=\"org.mybatis.spring.mapper.MapperScannerConfigurer\">  \n        <property name=\"basePackage\" value=\"com.javen.dao\" />  \n        <property name=\"sqlSessionFactoryBeanName\" value=\"sqlSessionFactory\"></property>  \n    </bean>  \n\n    <!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->  \n    <bean id=\"transactionManager\" class=\"org.springframework.jdbc.datasource.DataSourceTransactionManager\">  \n        <property name=\"dataSource\" ref=\"dataSource\" />  \n    </bean>  \n\n</beans>  \n"]],[37372,37372],[40216,40216]]],[1570888951593,[null,[[-1,24,"\n*原理*"],[1,29,"框架原理\n"],[-1,41,"**"],[1,43,"作用\n\n"],[1,46," "],[1,48,"是"],[-1,49,"是"],[-1,52," "],[1,69," "],[1,70," "],[-1,71," "],[-1,73," "],[1,79," "],[-1,81," "],[1,90," "],[-1,92," "],[1,94," "],[-1,96," "],[1,129," "],[-1,131," "],[1,135," "],[-1,137," "],[-1,141,"使用"],[1,145,"使用"],[-1,157,"请求"],[1,161,"请求"],[-1,169,"\n\n"],[-1,173,"s"],[1,174,"\n"],[1,176,"sp"],[-1,188,"，m"],[1,193,"my"],[-1,212,"**"],[-1,225,"Sp"],[1,227,"\n\n"],[-1,243,"."],[1,244,"\n"],[1,380,"客户"],[1,386," "],[-1,388," "],[-1,404,"分发"],[1,412,"分发"],[-1,414,"\n\n"],[-1,437,"2"],[1,438,"\n"],[-1,442,"i "],[1,444,"由 Di"],[1,458," "],[-1,460," "],[1,464," "],[-1,466," "],[-1,479,"找到"],[1,503,"找到"],[1,508," "],[-1,510," "],[-1,519,"\n\n；3"],[1,523,"；\n"],[1,750,"Co"],[1,758," "],[-1,760," "],[1,771," "],[-1,773," "],[-1,784,"\n\n"],[-1,802,"4"],[1,803,"\n"],[1,807,"Di"],[-1,817,"clvt"],[1,821,"vlet "],[-1,823," "],[1,844," "],[-1,846," "],[-1,851,"\n5"],[1,857,"视图"],[-1,870,"!["],[-1,933,"Sp"],[1,935,"\n\n"],[1,1826,"Sp"],[-1,1852,"它可"],[1,1856,"它可"],[-1,1869,"["],[1,1871,"a"],[-1,1873,"]("],[1,1875,"中的"],[-1,1896,"），"],[1,1900,"），"],[1,1971,"- "],[-1,1973,"- "],[1,2051,"**"],[-1,2053,"**"],[-1,2114,"。在"],[1,2118,"。在"],[-1,2173,"**"],[1,2186,"\n要"],[-1,2195,"1."],[1,2199,"先写"],[-1,2254,"2."],[1,2258,"写M"],[-1,2349,"3."],[1,2353,"写M"],[-1,2365,"Ma"],[1,2369,"Ma"],[-1,2394,"。\n"],[-1,2398,"4."],[1,2400,"。\n"],[1,2402,"写S"],[1,2415,"**"],[-1,2417,"**"],[-1,2449,"。\n"],[-1,2453,"5.-"],[1,2456,"。\n- 写"],[1,2472,"**"],[-1,2474,"**"],[-1,2484,"，获"],[-1,2488,"取"],[1,2489,"，"],[1,2491,"获取"],[-1,2544,"。\n"],[-1,2548,"6.-J "],[1,2553,"。\n-  写J"],[-1,2587,"=="],[1,2591,"> "],[-1,2598,"=="],[1,2602,"> "],[-1,2613,"=="],[1,2617,"> "],[-1,2624,"["],[1,2626,"a"],[-1,2628,"]("],[1,2633,"> "],[-1,2646,"=="],[1,2650,"> "],[-1,2666,"=="],[1,2670,"> ."],[-1,2672,".p. ==S"],[1,2679,"p\n\n\n"],[-1,2686,"p"],[1,2687,"\n"],[1,2689,"Sp"],[1,2714,"2 "],[-1,2716,"2 "],[1,2726,"**"],[-1,2728,"**"],[-1,2737,"\nS"],[-1,2741,"p"],[1,2742,"\n"],[1,2744,"Sp"],[1,2759,"**"],[-1,2761,"**"],[-1,2776,"\nm"],[-1,2780,"y"],[1,2781,"\n"],[1,2783,"my"],[1,2800,"**"],[-1,2802,"**"],[-1,2807," "],[1,2809,"数"],[-1,2813," 起\n\n**；Sp"],[1,2822,"起来**；\n\n"],[1,2824,"Sp"],[-1,2840,"与 于"],[1,2843,"于 S"],[1,2852,"- "],[-1,2854,"- "],[1,2870,"："],[-1,2872,"："],[-1,2893,"my"],[1,2897,"my"],[1,2924,"- "],[-1,2926,"- "],[1,3058,"- "],[-1,3060,"- "],[-1,3084,"它允"],[1,3088,"它允"],[-1,3119,"，如"],[1,3123,"，如"],[-1,3182,"**"],[1,3184,"持久"],[-1,3198,"**"],[1,3200,"\n\n"],[-1,3428,"**"],[1,3430,"业务"],[-1,3440,"**"],[1,3442,"\n\n"],[-1,3480,"\n"],[1,3481," "],[-1,3668,"**"],[1,3670,"表现"],[-1,3693,"**"],[1,3695,"\n\n"],[-1,3742,"\n"],[1,3743," "],[-1,3901,"**ew层**"],[1,3908,"View层\n\n"],[-1,3970,"**联系**"],[1,3976,"各层联系\n\n"],[-1,4181,"\n"],[1,4182," "],[-1,4359,"==**"],[1,4363,"\n\n"],[-1,4584,"  "],[1,4586,"**"],[-1,4634,"in"],[1,4636,"pr"],[1,4755,"in"],[-1,4756,"+S"],[1,6214,"**"],[-1,6217," 1"],[1,6225,"Sp"],[-1,6229," \n"],[-1,6237,"\n"],[1,6238," "],[-1,6254,"  "],[1,6256,"\n\n"],[-1,6382,"S"],[1,6383," "],[-1,6447,"p"],[1,6448," "],[1,6465,"Sp"],[-1,6472,"开源"],[1,6489,"Sp"],[-1,6493,"是于"],[1,8655,"pr"],[-1,8658,"使用"],[1,9350,"pr"],[-1,9354,"用途"],[1,9815,"pr"],[-1,9818,"中受"],[1,10014,"pr"],[-1,10017,"是一"],[1,10153,"面向"],[-1,10155,"（A"],[-1,10329,"。\n"],[1,10331,"框架"],[-1,10426,"\n##"],[1,10429,"。\n\n"],[1,10611,"##"],[-1,10615,".2"],[-1,10682,"、"],[1,10683,"."],[-1,10692,"S"],[1,10693,"2"],[-1,10864,"p"],[1,10865,"、"],[-1,10887,"r"],[1,10888,"S"],[-1,10908,"i"],[1,10909,"p"],[-1,10914,"n"],[1,10915,"r"],[1,10939,"in"],[-1,10940,"MV"],[-1,11237,"\n\n"],[1,11239,"  "],[-1,11290," "],[1,11291,"\n"],[-1,11324," "],[1,11325,"\n"],[-1,11332,"S"],[1,11333," "],[-1,11384,"p"],[1,11385," "],[1,11425,"Sp"],[-1,11433,"属于"],[1,11449,"Sp"],[-1,11453,"Fr"],[1,19587,"。"],[-1,19588," "]],[24,24],[19588,19588]]],[1570888951593,[null,[[1,24,"\n*原理*"],[-1,24,"框架原理\n"],[1,41,"**"],[-1,41,"作用\n\n"],[-1,48," "],[-1,51,"是"],[1,53,"是"],[1,55," "],[-1,71," "],[-1,73," "],[1,75," "],[1,76," "],[-1,81," "],[1,84," "],[-1,92," "],[1,95," "],[-1,96," "],[1,99," "],[-1,131," "],[1,134," "],[-1,137," "],[1,140," "],[1,143,"使用"],[-1,145,"使用"],[1,159,"请求"],[-1,161,"请求"],[1,171,"\n\n"],[1,173,"s"],[-1,173,"\n"],[-1,176,"sp"],[1,190,"，m"],[-1,193,"my"],[1,214,"**"],[1,225,"Sp"],[-1,225,"\n\n"],[1,243,"."],[-1,243,"\n"],[-1,380,"客户"],[-1,388," "],[1,391," "],[1,406,"分发"],[-1,412,"分发"],[1,416,"\n\n"],[1,437,"2"],[-1,437,"\n"],[1,442,"i "],[-1,442,"由 Di"],[-1,460," "],[1,463," "],[-1,466," "],[1,469," "],[1,481,"找到"],[-1,503,"找到"],[-1,510," "],[1,513," "],[1,521,"\n\n；3"],[-1,521,"；\n"],[-1,750,"Co"],[-1,760," "],[1,763," "],[-1,773," "],[1,776," "],[1,786,"\n\n"],[1,802,"4"],[-1,802,"\n"],[-1,807,"Di"],[1,819,"clvt"],[-1,819,"vlet "],[1,826," "],[-1,846," "],[1,849," "],[1,853,"\n5"],[-1,857,"视图"],[1,872,"!["],[1,933,"Sp"],[-1,933,"\n\n"],[-1,1826,"Sp"],[1,1854,"它可"],[-1,1856,"它可"],[1,1871,"["],[-1,1872,"a"],[1,1875,"]("],[-1,1875,"中的"],[1,1898,"），"],[-1,1900,"），"],[-1,1973,"- "],[1,1977,"- "],[-1,2053,"**"],[1,2057,"**"],[1,2116,"。在"],[-1,2118,"。在"],[1,2175,"**"],[-1,2186,"\n要"],[1,2197,"1."],[-1,2199,"先写"],[1,2256,"2."],[-1,2258,"写M"],[1,2351,"3."],[-1,2353,"写M"],[1,2367,"Ma"],[-1,2369,"Ma"],[1,2396,"。\n"],[1,2398,"4."],[-1,2398,"。\n"],[-1,2402,"写S"],[-1,2417,"**"],[1,2421,"**"],[1,2451,"。\n"],[1,2453,"5.-"],[-1,2453,"。\n- 写"],[-1,2474,"**"],[1,2478,"**"],[1,2486,"，获"],[1,2488,"取"],[-1,2488,"，"],[-1,2491,"获取"],[1,2546,"。\n"],[1,2548,"6.-J "],[-1,2548,"。\n-  写J"],[1,2589,"=="],[-1,2591,"> "],[1,2600,"=="],[-1,2602,"> "],[1,2615,"=="],[-1,2617,"> "],[1,2626,"["],[-1,2627,"a"],[1,2630,"]("],[-1,2633,"> "],[1,2648,"=="],[-1,2650,"> "],[1,2668,"=="],[-1,2670,"> ."],[1,2675,".p. ==S"],[-1,2675,"p\n\n\n"],[1,2686,"p"],[-1,2686,"\n"],[-1,2689,"Sp"],[-1,2716,"2 "],[1,2720,"2 "],[-1,2728,"**"],[1,2732,"**"],[1,2739,"\nS"],[1,2741,"p"],[-1,2741,"\n"],[-1,2744,"Sp"],[-1,2761,"**"],[1,2765,"**"],[1,2778,"\nm"],[1,2780,"y"],[-1,2780,"\n"],[-1,2783,"my"],[-1,2802,"**"],[1,2806,"**"],[1,2809," "],[-1,2810,"数"],[1,2815," 起\n\n**；Sp"],[-1,2815,"起来**；\n\n"],[-1,2824,"Sp"],[1,2842,"与 于"],[-1,2842,"于 S"],[-1,2854,"- "],[1,2858,"- "],[-1,2872,"："],[1,2875,"："],[1,2895,"my"],[-1,2897,"my"],[-1,2926,"- "],[1,2930,"- "],[-1,3060,"- "],[1,3064,"- "],[1,3086,"它允"],[-1,3088,"它允"],[1,3121,"，如"],[-1,3123,"，如"],[1,3184,"**"],[-1,3184,"持久"],[1,3200,"**"],[-1,3200,"\n\n"],[1,3430,"**"],[-1,3430,"业务"],[1,3442,"**"],[-1,3442,"\n\n"],[1,3482,"\n"],[-1,3482," "],[1,3670,"**"],[-1,3670,"表现"],[1,3695,"**"],[-1,3695,"\n\n"],[1,3744,"\n"],[-1,3744," "],[1,3903,"**ew层**"],[-1,3903,"View层\n\n"],[1,3972,"**联系**"],[-1,3972,"各层联系\n\n"],[1,4183,"\n"],[-1,4183," "],[1,4361,"==**"],[-1,4361,"\n\n"],[1,4584,"  "],[-1,4584,"**"],[1,4634,"in"],[-1,4634,"pr"],[-1,4755,"in"],[1,4758,"+S"],[-1,6214,"**"],[1,6219," 1"],[-1,6225,"Sp"],[1,6231," \n"],[1,6237,"\n"],[-1,6237," "],[1,6254,"  "],[-1,6254,"\n\n"],[1,6382,"S"],[-1,6382," "],[1,6447,"p"],[-1,6447," "],[-1,6465,"Sp"],[1,6474,"开源"],[-1,6489,"Sp"],[1,6495,"是于"],[-1,8655,"pr"],[1,8660,"使用"],[-1,9350,"pr"],[1,9356,"用途"],[-1,9815,"pr"],[1,9820,"中受"],[-1,10014,"pr"],[1,10019,"是一"],[-1,10153,"面向"],[1,10157,"（A"],[1,10329,"。\n"],[-1,10329,"框架"],[1,10426,"\n##"],[-1,10426,"。\n\n"],[-1,10611,"##"],[1,10617,".2"],[1,10682,"、"],[-1,10682,"."],[1,10692,"S"],[-1,10692,"2"],[1,10864,"p"],[-1,10864,"、"],[1,10887,"r"],[-1,10887,"S"],[1,10908,"i"],[-1,10908,"p"],[1,10914,"n"],[-1,10914,"r"],[-1,10939,"in"],[1,10942,"MV"],[1,11237,"\n\n"],[-1,11237,"  "],[1,11290," "],[-1,11290,"\n"],[1,11324," "],[-1,11324,"\n"],[1,11332,"S"],[-1,11332," "],[1,11384,"p"],[-1,11384," "],[-1,11425,"Sp"],[1,11435,"属于"],[-1,11449,"Sp"],[1,11455,"Fr"],[-1,19587,"。"],[1,19589," "]],[19588,19588],[24,24]]],[1570888898672,["GJX@GJXAIOU",[[1,40367,"```"]],[40367,40367],[40370,40370]]],[1570888899022,["GJX@GJXAIOU",[[1,40370,"language\n```\n"]],[40370,40370],[40370,40378]]],[1570888900328,["GJX@GJXAIOU",[[-1,40370,"language"],[1,40378,"s"]],[40370,40378],[40371,40371]]],[1570888901201,["GJX@GJXAIOU",[[1,40371,"wl"]],[40371,40371],[40373,40373]]],[1570888902863,["GJX@GJXAIOU",[[-1,40371,"wl"]],[40373,40373],[40371,40371]]],[1570888903796,["GJX@GJXAIOU",[[1,40371,"ql"]],[40371,40371],[40373,40373]]],[1570888905016,["GJX@GJXAIOU",[[1,40374,"\n"]],[40373,40373],[40374,40374]]],[1570888916510,["GJX@GJXAIOU",[[-1,40380,"-- ---------------------------- -- Table structure for `user_t` -- ----------------------------\nDROP TABLE IF EXISTS `user_t`; CREATE TABLE `user_t` (\n  `id` int(11) NOT NULL AUTO_INCREMENT,\n  `user_name` varchar(40) NOT NULL,\n  `password` varchar(255) NOT NULL,\n  `age` int(4) NOT NULL, PRIMARY KEY (`id`)\n) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8; -- ---------------------------- -- Records of user_t -- ----------------------------\nINSERT INTO `user_t` VALUES ('1', '测试', '345', '24'); INSERT INTO `user_t` VALUES ('2', 'javen', '123', '10');"]],[40380,40937],[40380,40380]]],[1570888920204,["GJX@GJXAIOU",[[1,40374,"-- ---------------------------- -- Table structure for `user_t` -- ----------------------------\nDROP TABLE IF EXISTS `user_t`; CREATE TABLE `user_t` (\n  `id` int(11) NOT NULL AUTO_INCREMENT,\n  `user_name` varchar(40) NOT NULL,\n  `password` varchar(255) NOT NULL,\n  `age` int(4) NOT NULL, PRIMARY KEY (`id`)\n) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8; -- ---------------------------- -- Records of user_t -- ----------------------------\nINSERT INTO `user_t` VALUES ('1', '测试', '345', '24'); INSERT INTO `user_t` VALUES ('2', 'javen', '123', '10');"]],[40374,40374],[40931,40931]]],[1570888929966,["GJX@GJXAIOU",[[-1,40386,"-------------------"]],[40381,40400],[40381,40381]]],[1570888933274,["GJX@GJXAIOU",[[-1,40379,"-------"]],[40378,40385],[40378,40378]]],[1570888938850,["GJX@GJXAIOU",[[1,40412,"\n"]],[40412,40412],[40413,40413]]],[1570888941130,["GJX@GJXAIOU",[[1,40383,"\n"]],[40383,40383],[40384,40384]]],[1570888945649,["GJX@GJXAIOU",[[-1,40423,"----------------------"]],[40429,40445],[40423,40423]]],[1570889011595,[null,[[-1,24,"\n*原理*"],[1,29,"框架原理\n"],[-1,41,"**"],[1,43,"作用\n\n"],[1,46," "],[1,48,"是"],[-1,49,"是"],[-1,52," "],[1,69," "],[1,70," "],[-1,71," "],[-1,73," "],[1,79," "],[-1,81," "],[1,90," "],[-1,92," "],[1,94," "],[-1,96," "],[1,129," "],[-1,131," "],[1,135," "],[-1,137," "],[-1,141,"使用"],[1,145,"使用"],[-1,157,"请求"],[1,161,"请求"],[-1,169,"\n\n"],[-1,173,"s"],[1,174,"\n"],[1,176,"sp"],[-1,188,"，m"],[1,193,"my"],[-1,212,"**"],[-1,225,"Sp"],[1,227,"\n\n"],[-1,243,"."],[1,244,"\n"],[1,380,"客户"],[1,386," "],[-1,388," "],[-1,404,"分发"],[1,412,"分发"],[-1,414,"\n\n"],[-1,437,"2"],[1,438,"\n"],[-1,442,"i "],[1,444,"由 Di"],[1,458," "],[-1,460," "],[1,464," "],[-1,466," "],[-1,479,"找到"],[1,503,"找到"],[1,508," "],[-1,510," "],[-1,519,"\n\n；3"],[1,523,"；\n"],[1,750,"Co"],[1,758," "],[-1,760," "],[1,771," "],[-1,773," "],[-1,784,"\n\n"],[-1,802,"4"],[1,803,"\n"],[1,807,"Di"],[-1,817,"clvt"],[1,821,"vlet "],[-1,823," "],[1,844," "],[-1,846," "],[-1,851,"\n5"],[1,857,"视图"],[-1,870,"!["],[-1,933,"Sp"],[1,935,"\n\n"],[1,1826,"Sp"],[-1,1852,"它可"],[1,1856,"它可"],[-1,1869,"["],[1,1871,"a"],[-1,1873,"]("],[1,1875,"中的"],[-1,1896,"），"],[1,1900,"），"],[1,1971,"- "],[-1,1973,"- "],[1,2051,"**"],[-1,2053,"**"],[-1,2114,"。在"],[1,2118,"。在"],[-1,2173,"**"],[1,2186,"\n要"],[-1,2195,"1."],[1,2199,"先写"],[-1,2254,"2."],[1,2258,"写M"],[-1,2349,"3."],[1,2353,"写M"],[-1,2365,"Ma"],[1,2369,"Ma"],[-1,2394,"。\n"],[-1,2398,"4."],[1,2400,"。\n"],[1,2402,"写S"],[1,2415,"**"],[-1,2417,"**"],[-1,2449,"。\n"],[-1,2453,"5.-"],[1,2456,"。\n- 写"],[1,2472,"**"],[-1,2474,"**"],[-1,2484,"，获"],[-1,2488,"取"],[1,2489,"，"],[1,2491,"获取"],[-1,2544,"。\n"],[-1,2548,"6.-J "],[1,2553,"。\n-  写J"],[-1,2587,"=="],[1,2591,"> "],[-1,2598,"=="],[1,2602,"> "],[-1,2613,"=="],[1,2617,"> "],[-1,2624,"["],[1,2626,"a"],[-1,2628,"]("],[1,2633,"> "],[-1,2646,"=="],[1,2650,"> "],[-1,2666,"=="],[1,2670,"> ."],[-1,2672,".p. ==S"],[1,2679,"p\n\n\n"],[-1,2686,"p"],[1,2687,"\n"],[1,2689,"Sp"],[1,2714,"2 "],[-1,2716,"2 "],[1,2726,"**"],[-1,2728,"**"],[-1,2737,"\nS"],[-1,2741,"p"],[1,2742,"\n"],[1,2744,"Sp"],[1,2759,"**"],[-1,2761,"**"],[-1,2776,"\nm"],[-1,2780,"y"],[1,2781,"\n"],[1,2783,"my"],[1,2800,"**"],[-1,2802,"**"],[-1,2807," "],[1,2809,"数"],[-1,2813," 起\n\n**；Sp"],[1,2822,"起来**；\n\n"],[1,2824,"Sp"],[-1,2840,"与 于"],[1,2843,"于 S"],[1,2852,"- "],[-1,2854,"- "],[1,2870,"："],[-1,2872,"："],[-1,2893,"my"],[1,2897,"my"],[1,2924,"- "],[-1,2926,"- "],[1,3058,"- "],[-1,3060,"- "],[-1,3084,"它允"],[1,3088,"它允"],[-1,3119,"，如"],[1,3123,"，如"],[-1,3182,"**"],[1,3184,"持久"],[-1,3198,"**"],[1,3200,"\n\n"],[-1,3428,"**"],[1,3430,"业务"],[-1,3440,"**"],[1,3442,"\n\n"],[-1,3480,"\n"],[1,3481," "],[-1,3668,"**"],[1,3670,"表现"],[-1,3693,"**"],[1,3695,"\n\n"],[-1,3742,"\n"],[1,3743," "],[-1,3901,"**ew层**"],[1,3908,"View层\n\n"],[-1,3970,"**联系**"],[1,3976,"各层联系\n\n"],[-1,4181,"\n"],[1,4182," "],[-1,4359,"==**"],[1,4363,"\n\n"],[-1,4584,"  "],[1,4586,"**"],[-1,4634,"in"],[1,4636,"pr"],[1,4755,"in"],[-1,4756,"+S"],[1,6214,"**"],[-1,6217," 1"],[1,6225,"Sp"],[-1,6229," \n"],[-1,6237,"\n"],[1,6238," "],[-1,6254,"  "],[1,6256,"\n\n"],[-1,6382,"S"],[1,6383," "],[-1,6447,"p"],[1,6448," "],[1,6465,"Sp"],[-1,6472,"开源"],[1,6489,"Sp"],[-1,6493,"是于"],[1,8655,"pr"],[-1,8658,"使用"],[1,9350,"pr"],[-1,9354,"用途"],[1,9815,"pr"],[-1,9818,"中受"],[1,10014,"pr"],[-1,10017,"是一"],[1,10153,"面向"],[-1,10155,"（A"],[-1,10329,"。\n"],[1,10331,"框架"],[-1,10426,"\n##"],[1,10429,"。\n\n"],[1,10611,"##"],[-1,10615,".2"],[-1,10682,"、"],[1,10683,"."],[-1,10692,"S"],[1,10693,"2"],[-1,10864,"p"],[1,10865,"、"],[-1,10887,"r"],[1,10888,"S"],[-1,10908,"i"],[1,10909,"p"],[-1,10914,"n"],[1,10915,"r"],[1,10939,"in"],[-1,10940,"MV"],[-1,11237,"\n\n"],[1,11239,"  "],[-1,11290," "],[1,11291,"\n"],[-1,11324," "],[1,11325,"\n"],[-1,11332,"S"],[1,11333," "],[-1,11384,"p"],[1,11385," "],[1,11425,"Sp"],[-1,11433,"属于"],[1,11449,"Sp"],[-1,11453,"Fr"],[1,19587,"。"],[-1,19588," "]],[24,24],[19588,19588]]],[1570889011595,[null,[[1,24,"\n*原理*"],[-1,24,"框架原理\n"],[1,41,"**"],[-1,41,"作用\n\n"],[-1,48," "],[-1,51,"是"],[1,53,"是"],[1,55," "],[-1,71," "],[-1,73," "],[1,75," "],[1,76," "],[-1,81," "],[1,84," "],[-1,92," "],[1,95," "],[-1,96," "],[1,99," "],[-1,131," "],[1,134," "],[-1,137," "],[1,140," "],[1,143,"使用"],[-1,145,"使用"],[1,159,"请求"],[-1,161,"请求"],[1,171,"\n\n"],[1,173,"s"],[-1,173,"\n"],[-1,176,"sp"],[1,190,"，m"],[-1,193,"my"],[1,214,"**"],[1,225,"Sp"],[-1,225,"\n\n"],[1,243,"."],[-1,243,"\n"],[-1,380,"客户"],[-1,388," "],[1,391," "],[1,406,"分发"],[-1,412,"分发"],[1,416,"\n\n"],[1,437,"2"],[-1,437,"\n"],[1,442,"i "],[-1,442,"由 Di"],[-1,460," "],[1,463," "],[-1,466," "],[1,469," "],[1,481,"找到"],[-1,503,"找到"],[-1,510," "],[1,513," "],[1,521,"\n\n；3"],[-1,521,"；\n"],[-1,750,"Co"],[-1,760," "],[1,763," "],[-1,773," "],[1,776," "],[1,786,"\n\n"],[1,802,"4"],[-1,802,"\n"],[-1,807,"Di"],[1,819,"clvt"],[-1,819,"vlet "],[1,826," "],[-1,846," "],[1,849," "],[1,853,"\n5"],[-1,857,"视图"],[1,872,"!["],[1,933,"Sp"],[-1,933,"\n\n"],[-1,1826,"Sp"],[1,1854,"它可"],[-1,1856,"它可"],[1,1871,"["],[-1,1872,"a"],[1,1875,"]("],[-1,1875,"中的"],[1,1898,"），"],[-1,1900,"），"],[-1,1973,"- "],[1,1977,"- "],[-1,2053,"**"],[1,2057,"**"],[1,2116,"。在"],[-1,2118,"。在"],[1,2175,"**"],[-1,2186,"\n要"],[1,2197,"1."],[-1,2199,"先写"],[1,2256,"2."],[-1,2258,"写M"],[1,2351,"3."],[-1,2353,"写M"],[1,2367,"Ma"],[-1,2369,"Ma"],[1,2396,"。\n"],[1,2398,"4."],[-1,2398,"。\n"],[-1,2402,"写S"],[-1,2417,"**"],[1,2421,"**"],[1,2451,"。\n"],[1,2453,"5.-"],[-1,2453,"。\n- 写"],[-1,2474,"**"],[1,2478,"**"],[1,2486,"，获"],[1,2488,"取"],[-1,2488,"，"],[-1,2491,"获取"],[1,2546,"。\n"],[1,2548,"6.-J "],[-1,2548,"。\n-  写J"],[1,2589,"=="],[-1,2591,"> "],[1,2600,"=="],[-1,2602,"> "],[1,2615,"=="],[-1,2617,"> "],[1,2626,"["],[-1,2627,"a"],[1,2630,"]("],[-1,2633,"> "],[1,2648,"=="],[-1,2650,"> "],[1,2668,"=="],[-1,2670,"> ."],[1,2675,".p. ==S"],[-1,2675,"p\n\n\n"],[1,2686,"p"],[-1,2686,"\n"],[-1,2689,"Sp"],[-1,2716,"2 "],[1,2720,"2 "],[-1,2728,"**"],[1,2732,"**"],[1,2739,"\nS"],[1,2741,"p"],[-1,2741,"\n"],[-1,2744,"Sp"],[-1,2761,"**"],[1,2765,"**"],[1,2778,"\nm"],[1,2780,"y"],[-1,2780,"\n"],[-1,2783,"my"],[-1,2802,"**"],[1,2806,"**"],[1,2809," "],[-1,2810,"数"],[1,2815," 起\n\n**；Sp"],[-1,2815,"起来**；\n\n"],[-1,2824,"Sp"],[1,2842,"与 于"],[-1,2842,"于 S"],[-1,2854,"- "],[1,2858,"- "],[-1,2872,"："],[1,2875,"："],[1,2895,"my"],[-1,2897,"my"],[-1,2926,"- "],[1,2930,"- "],[-1,3060,"- "],[1,3064,"- "],[1,3086,"它允"],[-1,3088,"它允"],[1,3121,"，如"],[-1,3123,"，如"],[1,3184,"**"],[-1,3184,"持久"],[1,3200,"**"],[-1,3200,"\n\n"],[1,3430,"**"],[-1,3430,"业务"],[1,3442,"**"],[-1,3442,"\n\n"],[1,3482,"\n"],[-1,3482," "],[1,3670,"**"],[-1,3670,"表现"],[1,3695,"**"],[-1,3695,"\n\n"],[1,3744,"\n"],[-1,3744," "],[1,3903,"**ew层**"],[-1,3903,"View层\n\n"],[1,3972,"**联系**"],[-1,3972,"各层联系\n\n"],[1,4183,"\n"],[-1,4183," "],[1,4361,"==**"],[-1,4361,"\n\n"],[1,4584,"  "],[-1,4584,"**"],[1,4634,"in"],[-1,4634,"pr"],[-1,4755,"in"],[1,4758,"+S"],[-1,6214,"**"],[1,6219," 1"],[-1,6225,"Sp"],[1,6231," \n"],[1,6237,"\n"],[-1,6237," "],[1,6254,"  "],[-1,6254,"\n\n"],[1,6382,"S"],[-1,6382," "],[1,6447,"p"],[-1,6447," "],[-1,6465,"Sp"],[1,6474,"开源"],[-1,6489,"Sp"],[1,6495,"是于"],[-1,8655,"pr"],[1,8660,"使用"],[-1,9350,"pr"],[1,9356,"用途"],[-1,9815,"pr"],[1,9820,"中受"],[-1,10014,"pr"],[1,10019,"是一"],[-1,10153,"面向"],[1,10157,"（A"],[1,10329,"。\n"],[-1,10329,"框架"],[1,10426,"\n##"],[-1,10426,"。\n\n"],[-1,10611,"##"],[1,10617,".2"],[1,10682,"、"],[-1,10682,"."],[1,10692,"S"],[-1,10692,"2"],[1,10864,"p"],[-1,10864,"、"],[1,10887,"r"],[-1,10887,"S"],[1,10908,"i"],[-1,10908,"p"],[1,10914,"n"],[-1,10914,"r"],[-1,10939,"in"],[1,10942,"MV"],[1,11237,"\n\n"],[-1,11237,"  "],[1,11290," "],[-1,11290,"\n"],[1,11324," "],[-1,11324,"\n"],[1,11332,"S"],[-1,11332," "],[1,11384,"p"],[-1,11384," "],[-1,11425,"Sp"],[1,11435,"属于"],[-1,11449,"Sp"],[1,11455,"Fr"],[-1,19587,"。"],[1,19589," "]],[19588,19588],[24,24]]],[1570888956514,["GJX@GJXAIOU",[[1,40690,"\n"]],[40690,40690],[40691,40691]]],[1570888961594,["GJX@GJXAIOU",[[1,40723,"\n"]],[40723,40723],[40724,40724]]],[1570888966145,["GJX@GJXAIOU",[[1,40384,"-- "]],[40384,40384],[40387,40387]]],[1570888970217,["GJX@GJXAIOU",[[1,40751,"\n"]],[40751,40751],[40752,40752]]],[1570888972278,["GJX@GJXAIOU",[[1,40694,"\n"]],[40694,40694],[40695,40695]]],[1570888975935,["GJX@GJXAIOU",[[1,40782,"\n"]],[40782,40782],[40783,40783]]],[1570888989165,["GJX@GJXAIOU",[[-1,41232," "]],[41168,41168],[41167,41167]]],[1570888989806,["GJX@GJXAIOU",[[-1,41166,"\n"]],[41167,41167],[41166,41166]]],[1570888994343,["GJX@GJXAIOU",[[-1,41167,"                                                                "]],[41166,41230],[41166,41166]]],[1570889007703,["GJX@GJXAIOU",[[-1,41166," "]],[41166,41167],[41166,41166]]],[1570889008094,["GJX@GJXAIOU",[[1,41166,"\n"]],[41166,41166],[41167,41167]]],[1570889071595,[null,[[-1,24,"\n*原理*"],[1,29,"框架原理\n"],[-1,41,"**"],[1,43,"作用\n\n"],[1,46," "],[1,48,"是"],[-1,49,"是"],[-1,52," "],[1,69," "],[1,70," "],[-1,71," "],[-1,73," "],[1,79," "],[-1,81," "],[1,90," "],[-1,92," "],[1,94," "],[-1,96," "],[1,129," "],[-1,131," "],[1,135," "],[-1,137," "],[-1,141,"使用"],[1,145,"使用"],[-1,157,"请求"],[1,161,"请求"],[-1,169,"\n\n"],[-1,173,"s"],[1,174,"\n"],[1,176,"sp"],[-1,188,"，m"],[1,193,"my"],[-1,212,"**"],[-1,225,"Sp"],[1,227,"\n\n"],[-1,243,"."],[1,244,"\n"],[1,380,"客户"],[1,386," "],[-1,388," "],[-1,404,"分发"],[1,412,"分发"],[-1,414,"\n\n"],[-1,437,"2"],[1,438,"\n"],[-1,442,"i "],[1,444,"由 Di"],[1,458," "],[-1,460," "],[1,464," "],[-1,466," "],[-1,479,"找到"],[1,503,"找到"],[1,508," "],[-1,510," "],[-1,519,"\n\n；3"],[1,523,"；\n"],[1,750,"Co"],[1,758," "],[-1,760," "],[1,771," "],[-1,773," "],[-1,784,"\n\n"],[-1,802,"4"],[1,803,"\n"],[1,807,"Di"],[-1,817,"clvt"],[1,821,"vlet "],[-1,823," "],[1,844," "],[-1,846," "],[-1,851,"\n5"],[1,857,"视图"],[-1,870,"!["],[-1,933,"Sp"],[1,935,"\n\n"],[1,1826,"Sp"],[-1,1852,"它可"],[1,1856,"它可"],[-1,1869,"["],[1,1871,"a"],[-1,1873,"]("],[1,1875,"中的"],[-1,1896,"），"],[1,1900,"），"],[1,1971,"- "],[-1,1973,"- "],[1,2051,"**"],[-1,2053,"**"],[-1,2114,"。在"],[1,2118,"。在"],[-1,2173,"**"],[1,2186,"\n要"],[-1,2195,"1."],[1,2199,"先写"],[-1,2254,"2."],[1,2258,"写M"],[-1,2349,"3."],[1,2353,"写M"],[-1,2365,"Ma"],[1,2369,"Ma"],[-1,2394,"。\n"],[-1,2398,"4."],[1,2400,"。\n"],[1,2402,"写S"],[1,2415,"**"],[-1,2417,"**"],[-1,2449,"。\n"],[-1,2453,"5.-"],[1,2456,"。\n- 写"],[1,2472,"**"],[-1,2474,"**"],[-1,2484,"，获"],[-1,2488,"取"],[1,2489,"，"],[1,2491,"获取"],[-1,2544,"。\n"],[-1,2548,"6.-J "],[1,2553,"。\n-  写J"],[-1,2587,"=="],[1,2591,"> "],[-1,2598,"=="],[1,2602,"> "],[-1,2613,"=="],[1,2617,"> "],[-1,2624,"["],[1,2626,"a"],[-1,2628,"]("],[1,2633,"> "],[-1,2646,"=="],[1,2650,"> "],[-1,2666,"=="],[1,2670,"> ."],[-1,2672,".p. ==S"],[1,2679,"p\n\n\n"],[-1,2686,"p"],[1,2687,"\n"],[1,2689,"Sp"],[1,2714,"2 "],[-1,2716,"2 "],[1,2726,"**"],[-1,2728,"**"],[-1,2737,"\nS"],[-1,2741,"p"],[1,2742,"\n"],[1,2744,"Sp"],[1,2759,"**"],[-1,2761,"**"],[-1,2776,"\nm"],[-1,2780,"y"],[1,2781,"\n"],[1,2783,"my"],[1,2800,"**"],[-1,2802,"**"],[-1,2807," "],[1,2809,"数"],[-1,2813," 起\n\n**；Sp"],[1,2822,"起来**；\n\n"],[1,2824,"Sp"],[-1,2840,"与 于"],[1,2843,"于 S"],[1,2852,"- "],[-1,2854,"- "],[1,2870,"："],[-1,2872,"："],[-1,2893,"my"],[1,2897,"my"],[1,2924,"- "],[-1,2926,"- "],[1,3058,"- "],[-1,3060,"- "],[-1,3084,"它允"],[1,3088,"它允"],[-1,3119,"，如"],[1,3123,"，如"],[-1,3182,"**"],[1,3184,"持久"],[-1,3198,"**"],[1,3200,"\n\n"],[-1,3428,"**"],[1,3430,"业务"],[-1,3440,"**"],[1,3442,"\n\n"],[-1,3480,"\n"],[1,3481," "],[-1,3668,"**"],[1,3670,"表现"],[-1,3693,"**"],[1,3695,"\n\n"],[-1,3742,"\n"],[1,3743," "],[-1,3901,"**ew层**"],[1,3908,"View层\n\n"],[-1,3970,"**联系**"],[1,3976,"各层联系\n\n"],[-1,4181,"\n"],[1,4182," "],[-1,4359,"==**"],[1,4363,"\n\n"],[-1,4584,"  "],[1,4586,"**"],[-1,4634,"in"],[1,4636,"pr"],[1,4755,"in"],[-1,4756,"+S"],[1,6214,"**"],[-1,6217," 1"],[1,6225,"Sp"],[-1,6229," \n"],[-1,6237,"\n"],[1,6238," "],[-1,6254,"  "],[1,6256,"\n\n"],[-1,6382,"S"],[1,6383," "],[-1,6447,"p"],[1,6448," "],[1,6465,"Sp"],[-1,6472,"开源"],[1,6489,"Sp"],[-1,6493,"是于"],[1,8655,"pr"],[-1,8658,"使用"],[1,9350,"pr"],[-1,9354,"用途"],[1,9815,"pr"],[-1,9818,"中受"],[1,10014,"pr"],[-1,10017,"是一"],[1,10153,"面向"],[-1,10155,"（A"],[-1,10329,"。\n"],[1,10331,"框架"],[-1,10426,"\n##"],[1,10429,"。\n\n"],[1,10611,"##"],[-1,10615,".2"],[-1,10682,"、"],[1,10683,"."],[-1,10692,"S"],[1,10693,"2"],[-1,10864,"p"],[1,10865,"、"],[-1,10887,"r"],[1,10888,"S"],[-1,10908,"i"],[1,10909,"p"],[-1,10914,"n"],[1,10915,"r"],[1,10939,"in"],[-1,10940,"MV"],[-1,11237,"\n\n"],[1,11239,"  "],[-1,11290," "],[1,11291,"\n"],[-1,11324," "],[1,11325,"\n"],[-1,11332,"S"],[1,11333," "],[-1,11384,"p"],[1,11385," "],[1,11425,"Sp"],[-1,11433,"属于"],[1,11449,"Sp"],[-1,11453,"Fr"],[1,19587,"。"],[-1,19588," "]],[24,24],[19588,19588]]],[1570889071595,[null,[[1,24,"\n*原理*"],[-1,24,"框架原理\n"],[1,41,"**"],[-1,41,"作用\n\n"],[-1,48," "],[-1,51,"是"],[1,53,"是"],[1,55," "],[-1,71," "],[-1,73," "],[1,75," "],[1,76," "],[-1,81," "],[1,84," "],[-1,92," "],[1,95," "],[-1,96," "],[1,99," "],[-1,131," "],[1,134," "],[-1,137," "],[1,140," "],[1,143,"使用"],[-1,145,"使用"],[1,159,"请求"],[-1,161,"请求"],[1,171,"\n\n"],[1,173,"s"],[-1,173,"\n"],[-1,176,"sp"],[1,190,"，m"],[-1,193,"my"],[1,214,"**"],[1,225,"Sp"],[-1,225,"\n\n"],[1,243,"."],[-1,243,"\n"],[-1,380,"客户"],[-1,388," "],[1,391," "],[1,406,"分发"],[-1,412,"分发"],[1,416,"\n\n"],[1,437,"2"],[-1,437,"\n"],[1,442,"i "],[-1,442,"由 Di"],[-1,460," "],[1,463," "],[-1,466," "],[1,469," "],[1,481,"找到"],[-1,503,"找到"],[-1,510," "],[1,513," "],[1,521,"\n\n；3"],[-1,521,"；\n"],[-1,750,"Co"],[-1,760," "],[1,763," "],[-1,773," "],[1,776," "],[1,786,"\n\n"],[1,802,"4"],[-1,802,"\n"],[-1,807,"Di"],[1,819,"clvt"],[-1,819,"vlet "],[1,826," "],[-1,846," "],[1,849," "],[1,853,"\n5"],[-1,857,"视图"],[1,872,"!["],[1,933,"Sp"],[-1,933,"\n\n"],[-1,1826,"Sp"],[1,1854,"它可"],[-1,1856,"它可"],[1,1871,"["],[-1,1872,"a"],[1,1875,"]("],[-1,1875,"中的"],[1,1898,"），"],[-1,1900,"），"],[-1,1973,"- "],[1,1977,"- "],[-1,2053,"**"],[1,2057,"**"],[1,2116,"。在"],[-1,2118,"。在"],[1,2175,"**"],[-1,2186,"\n要"],[1,2197,"1."],[-1,2199,"先写"],[1,2256,"2."],[-1,2258,"写M"],[1,2351,"3."],[-1,2353,"写M"],[1,2367,"Ma"],[-1,2369,"Ma"],[1,2396,"。\n"],[1,2398,"4."],[-1,2398,"。\n"],[-1,2402,"写S"],[-1,2417,"**"],[1,2421,"**"],[1,2451,"。\n"],[1,2453,"5.-"],[-1,2453,"。\n- 写"],[-1,2474,"**"],[1,2478,"**"],[1,2486,"，获"],[1,2488,"取"],[-1,2488,"，"],[-1,2491,"获取"],[1,2546,"。\n"],[1,2548,"6.-J "],[-1,2548,"。\n-  写J"],[1,2589,"=="],[-1,2591,"> "],[1,2600,"=="],[-1,2602,"> "],[1,2615,"=="],[-1,2617,"> "],[1,2626,"["],[-1,2627,"a"],[1,2630,"]("],[-1,2633,"> "],[1,2648,"=="],[-1,2650,"> "],[1,2668,"=="],[-1,2670,"> ."],[1,2675,".p. ==S"],[-1,2675,"p\n\n\n"],[1,2686,"p"],[-1,2686,"\n"],[-1,2689,"Sp"],[-1,2716,"2 "],[1,2720,"2 "],[-1,2728,"**"],[1,2732,"**"],[1,2739,"\nS"],[1,2741,"p"],[-1,2741,"\n"],[-1,2744,"Sp"],[-1,2761,"**"],[1,2765,"**"],[1,2778,"\nm"],[1,2780,"y"],[-1,2780,"\n"],[-1,2783,"my"],[-1,2802,"**"],[1,2806,"**"],[1,2809," "],[-1,2810,"数"],[1,2815," 起\n\n**；Sp"],[-1,2815,"起来**；\n\n"],[-1,2824,"Sp"],[1,2842,"与 于"],[-1,2842,"于 S"],[-1,2854,"- "],[1,2858,"- "],[-1,2872,"："],[1,2875,"："],[1,2895,"my"],[-1,2897,"my"],[-1,2926,"- "],[1,2930,"- "],[-1,3060,"- "],[1,3064,"- "],[1,3086,"它允"],[-1,3088,"它允"],[1,3121,"，如"],[-1,3123,"，如"],[1,3184,"**"],[-1,3184,"持久"],[1,3200,"**"],[-1,3200,"\n\n"],[1,3430,"**"],[-1,3430,"业务"],[1,3442,"**"],[-1,3442,"\n\n"],[1,3482,"\n"],[-1,3482," "],[1,3670,"**"],[-1,3670,"表现"],[1,3695,"**"],[-1,3695,"\n\n"],[1,3744,"\n"],[-1,3744," "],[1,3903,"**ew层**"],[-1,3903,"View层\n\n"],[1,3972,"**联系**"],[-1,3972,"各层联系\n\n"],[1,4183,"\n"],[-1,4183," "],[1,4361,"==**"],[-1,4361,"\n\n"],[1,4584,"  "],[-1,4584,"**"],[1,4634,"in"],[-1,4634,"pr"],[-1,4755,"in"],[1,4758,"+S"],[-1,6214,"**"],[1,6219," 1"],[-1,6225,"Sp"],[1,6231," \n"],[1,6237,"\n"],[-1,6237," "],[1,6254,"  "],[-1,6254,"\n\n"],[1,6382,"S"],[-1,6382," "],[1,6447,"p"],[-1,6447," "],[-1,6465,"Sp"],[1,6474,"开源"],[-1,6489,"Sp"],[1,6495,"是于"],[-1,8655,"pr"],[1,8660,"使用"],[-1,9350,"pr"],[1,9356,"用途"],[-1,9815,"pr"],[1,9820,"中受"],[-1,10014,"pr"],[1,10019,"是一"],[-1,10153,"面向"],[1,10157,"（A"],[1,10329,"。\n"],[-1,10329,"框架"],[1,10426,"\n##"],[-1,10426,"。\n\n"],[-1,10611,"##"],[1,10617,".2"],[1,10682,"、"],[-1,10682,"."],[1,10692,"S"],[-1,10692,"2"],[1,10864,"p"],[-1,10864,"、"],[1,10887,"r"],[-1,10887,"S"],[1,10908,"i"],[-1,10908,"p"],[1,10914,"n"],[-1,10914,"r"],[-1,10939,"in"],[1,10942,"MV"],[1,11237,"\n\n"],[-1,11237,"  "],[1,11290," "],[-1,11290,"\n"],[1,11324," "],[-1,11324,"\n"],[1,11332,"S"],[-1,11332," "],[1,11384,"p"],[-1,11384," "],[-1,11425,"Sp"],[1,11435,"属于"],[-1,11449,"Sp"],[1,11455,"Fr"],[-1,19587,"。"],[1,19589," "]],[19588,19588],[24,24]]],[1570889012274,["GJX@GJXAIOU",[[-1,41290,"**                                                                 "]],[41290,41357],[41290,41290]]],[1570889015550,["GJX@GJXAIOU",[[-1,41384,"**"]],[41386,41386],[41384,41384]]],[1570889025221,["GJX@GJXAIOU",[[1,41416,"··"]],[41416,41416],[41418,41418]]],[1570889027406,["GJX@GJXAIOU",[[-1,41416,"··"]],[41418,41418],[41416,41416]]],[1570889029546,["GJX@GJXAIOU",[[1,41416,"```"]],[41416,41416],[41419,41419]]],[1570889029663,["GJX@GJXAIOU",[[1,41419,"language\n```\n"]],[41419,41419],[41419,41427]]],[1570889030485,["GJX@GJXAIOU",[[-1,41419,"language"],[1,41427,"j"]],[41419,41427],[41420,41420]]],[1570889031192,["GJX@GJXAIOU",[[1,41420,"ava"]],[41420,41420],[41423,41423]]],[1570889034865,["GJX@GJXAIOU",[[-1,41414,"e"]],[41415,41415],[41414,41414]]],[1570889035095,["GJX@GJXAIOU",[[1,41414,"a"]],[41414,41414],[41415,41415]]],[1570889037045,["GJX@GJXAIOU",[[1,41424,"\n"]],[41423,41423],[41424,41424]]],[1570889046902,["GJX@GJXAIOU",[[1,41424,"package com.javen.service;  \n\nimport com.javen.model.User;\n  \n  \npublic interface IUserService {  \n    public User getUserById(int userId);  \n}  \nUserServiceImpl.java\n\npackage com.javen.service.impl;\nimport javax.annotation.Resource;  \n\nimport org.springframework.stereotype.Service;  \nimport com.javen.dao.IUserDao;\nimport com.javen.model.User;\nimport com.javen.service.IUserService;\n  \n  \n@Service(\"userService\")  \npublic class UserServiceImpl implements IUserService {  \n    @Resource  \n    private IUserDao userDao;  \n    \n    public User getUserById(int userId) {  \n        // TODO Auto-generated method stub  \n        return this.userDao.selectByPrimaryKey(userId);  \n    }  \n  \n}  "]],[41424,41424],[42112,42112]]],[1570889051838,["GJX@GJXAIOU",[[-1,42118,"package com.javen.service; import com.javen.model.User; public interface IUserService { public User getUserById(int userId);  \n} \n\nUserServiceImpl.java\n\npackage com.javen.service.impl; import javax.annotation.Resource; import org.springframework.stereotype.Service; import com.javen.dao.IUserDao; import com.javen.model.User; import com.javen.service.IUserService;\n\n@Service(\"userService\") public class UserServiceImpl implements IUserService {  \n    @Resource private IUserDao userDao; public User getUserById(int userId) { // TODO Auto-generated method stub \n        return this.userDao.selectByPrimaryKey(userId);  \n    }  \n\n} "]],[42118,42748],[42118,42118]]],[1570889053823,["GJX@GJXAIOU",[[-1,42119,"\n"]],[42119,42119],[42118,42118]]],[1570889054415,["GJX@GJXAIOU",[[-1,42118,"\n"]],[42118,42118],[42117,42117]]],[1570889067728,["GJX@GJXAIOU",[[-1,42257,"       "]],[42257,42264],[42257,42257]]],[1570889131539,[null,[[-1,24,"\n*原理*"],[1,29,"框架原理\n"],[-1,41,"**"],[1,43,"作用\n\n"],[1,46," "],[1,48,"是"],[-1,49,"是"],[-1,52," "],[1,69," "],[1,70," "],[-1,71," "],[-1,73," "],[1,79," "],[-1,81," "],[1,90," "],[-1,92," "],[1,94," "],[-1,96," "],[1,129," "],[-1,131," "],[1,135," "],[-1,137," "],[-1,141,"使用"],[1,145,"使用"],[-1,157,"请求"],[1,161,"请求"],[-1,169,"\n\n"],[-1,173,"s"],[1,174,"\n"],[1,176,"sp"],[-1,188,"，m"],[1,193,"my"],[-1,212,"**"],[-1,225,"Sp"],[1,227,"\n\n"],[-1,243,"."],[1,244,"\n"],[1,380,"客户"],[1,386," "],[-1,388," "],[-1,404,"分发"],[1,412,"分发"],[-1,414,"\n\n"],[-1,437,"2"],[1,438,"\n"],[-1,442,"i "],[1,444,"由 Di"],[1,458," "],[-1,460," "],[1,464," "],[-1,466," "],[-1,479,"找到"],[1,503,"找到"],[1,508," "],[-1,510," "],[-1,519,"\n\n；3"],[1,523,"；\n"],[1,750,"Co"],[1,758," "],[-1,760," "],[1,771," "],[-1,773," "],[-1,784,"\n\n"],[-1,802,"4"],[1,803,"\n"],[1,807,"Di"],[-1,817,"clvt"],[1,821,"vlet "],[-1,823," "],[1,844," "],[-1,846," "],[-1,851,"\n5"],[1,857,"视图"],[-1,870,"!["],[-1,933,"Sp"],[1,935,"\n\n"],[1,1826,"Sp"],[-1,1852,"它可"],[1,1856,"它可"],[-1,1869,"["],[1,1871,"a"],[-1,1873,"]("],[1,1875,"中的"],[-1,1896,"），"],[1,1900,"），"],[1,1971,"- "],[-1,1973,"- "],[1,2051,"**"],[-1,2053,"**"],[-1,2114,"。在"],[1,2118,"。在"],[-1,2173,"**"],[1,2186,"\n要"],[-1,2195,"1."],[1,2199,"先写"],[-1,2254,"2."],[1,2258,"写M"],[-1,2349,"3."],[1,2353,"写M"],[-1,2365,"Ma"],[1,2369,"Ma"],[-1,2394,"。\n"],[-1,2398,"4."],[1,2400,"。\n"],[1,2402,"写S"],[1,2415,"**"],[-1,2417,"**"],[-1,2449,"。\n"],[-1,2453,"5.-"],[1,2456,"。\n- 写"],[1,2472,"**"],[-1,2474,"**"],[-1,2484,"，获"],[-1,2488,"取"],[1,2489,"，"],[1,2491,"获取"],[-1,2544,"。\n"],[-1,2548,"6.-J "],[1,2553,"。\n-  写J"],[-1,2587,"=="],[1,2591,"> "],[-1,2598,"=="],[1,2602,"> "],[-1,2613,"=="],[1,2617,"> "],[-1,2624,"["],[1,2626,"a"],[-1,2628,"]("],[1,2633,"> "],[-1,2646,"=="],[1,2650,"> "],[-1,2666,"=="],[1,2670,"> ."],[-1,2672,".p. ==S"],[1,2679,"p\n\n\n"],[-1,2686,"p"],[1,2687,"\n"],[1,2689,"Sp"],[1,2714,"2 "],[-1,2716,"2 "],[1,2726,"**"],[-1,2728,"**"],[-1,2737,"\nS"],[-1,2741,"p"],[1,2742,"\n"],[1,2744,"Sp"],[1,2759,"**"],[-1,2761,"**"],[-1,2776,"\nm"],[-1,2780,"y"],[1,2781,"\n"],[1,2783,"my"],[1,2800,"**"],[-1,2802,"**"],[-1,2807," "],[1,2809,"数"],[-1,2813," 起\n\n**；Sp"],[1,2822,"起来**；\n\n"],[1,2824,"Sp"],[-1,2840,"与 于"],[1,2843,"于 S"],[1,2852,"- "],[-1,2854,"- "],[1,2870,"："],[-1,2872,"："],[-1,2893,"my"],[1,2897,"my"],[1,2924,"- "],[-1,2926,"- "],[1,3058,"- "],[-1,3060,"- "],[-1,3084,"它允"],[1,3088,"它允"],[-1,3119,"，如"],[1,3123,"，如"],[-1,3182,"**"],[1,3184,"持久"],[-1,3198,"**"],[1,3200,"\n\n"],[-1,3428,"**"],[1,3430,"业务"],[-1,3440,"**"],[1,3442,"\n\n"],[-1,3480,"\n"],[1,3481," "],[-1,3668,"**"],[1,3670,"表现"],[-1,3693,"**"],[1,3695,"\n\n"],[-1,3742,"\n"],[1,3743," "],[-1,3901,"**ew层**"],[1,3908,"View层\n\n"],[-1,3970,"**联系**"],[1,3976,"各层联系\n\n"],[-1,4181,"\n"],[1,4182," "],[-1,4359,"==**"],[1,4363,"\n\n"],[-1,4584,"  "],[1,4586,"**"],[-1,4634,"in"],[1,4636,"pr"],[1,4755,"in"],[-1,4756,"+S"],[1,6214,"**"],[-1,6217," 1"],[1,6225,"Sp"],[-1,6229," \n"],[-1,6237,"\n"],[1,6238," "],[-1,6254,"  "],[1,6256,"\n\n"],[-1,6382,"S"],[1,6383," "],[-1,6447,"p"],[1,6448," "],[1,6465,"Sp"],[-1,6472,"开源"],[1,6489,"Sp"],[-1,6493,"是于"],[1,8655,"pr"],[-1,8658,"使用"],[1,9350,"pr"],[-1,9354,"用途"],[1,9815,"pr"],[-1,9818,"中受"],[1,10014,"pr"],[-1,10017,"是一"],[1,10153,"面向"],[-1,10155,"（A"],[-1,10329,"。\n"],[1,10331,"框架"],[-1,10426,"\n##"],[1,10429,"。\n\n"],[1,10611,"##"],[-1,10615,".2"],[-1,10682,"、"],[1,10683,"."],[-1,10692,"S"],[1,10693,"2"],[-1,10864,"p"],[1,10865,"、"],[-1,10887,"r"],[1,10888,"S"],[-1,10908,"i"],[1,10909,"p"],[-1,10914,"n"],[1,10915,"r"],[1,10939,"in"],[-1,10940,"MV"],[-1,11237,"\n\n"],[1,11239,"  "],[-1,11290," "],[1,11291,"\n"],[-1,11324," "],[1,11325,"\n"],[-1,11332,"S"],[1,11333," "],[-1,11384,"p"],[1,11385," "],[1,11425,"Sp"],[-1,11433,"属于"],[1,11449,"Sp"],[-1,11453,"Fr"],[1,19587,"。"],[-1,19588," "]],[24,24],[19588,19588]]],[1570889131539,[null,[[1,24,"\n*原理*"],[-1,24,"框架原理\n"],[1,41,"**"],[-1,41,"作用\n\n"],[-1,48," "],[-1,51,"是"],[1,53,"是"],[1,55," "],[-1,71," "],[-1,73," "],[1,75," "],[1,76," "],[-1,81," "],[1,84," "],[-1,92," "],[1,95," "],[-1,96," "],[1,99," "],[-1,131," "],[1,134," "],[-1,137," "],[1,140," "],[1,143,"使用"],[-1,145,"使用"],[1,159,"请求"],[-1,161,"请求"],[1,171,"\n\n"],[1,173,"s"],[-1,173,"\n"],[-1,176,"sp"],[1,190,"，m"],[-1,193,"my"],[1,214,"**"],[1,225,"Sp"],[-1,225,"\n\n"],[1,243,"."],[-1,243,"\n"],[-1,380,"客户"],[-1,388," "],[1,391," "],[1,406,"分发"],[-1,412,"分发"],[1,416,"\n\n"],[1,437,"2"],[-1,437,"\n"],[1,442,"i "],[-1,442,"由 Di"],[-1,460," "],[1,463," "],[-1,466," "],[1,469," "],[1,481,"找到"],[-1,503,"找到"],[-1,510," "],[1,513," "],[1,521,"\n\n；3"],[-1,521,"；\n"],[-1,750,"Co"],[-1,760," "],[1,763," "],[-1,773," "],[1,776," "],[1,786,"\n\n"],[1,802,"4"],[-1,802,"\n"],[-1,807,"Di"],[1,819,"clvt"],[-1,819,"vlet "],[1,826," "],[-1,846," "],[1,849," "],[1,853,"\n5"],[-1,857,"视图"],[1,872,"!["],[1,933,"Sp"],[-1,933,"\n\n"],[-1,1826,"Sp"],[1,1854,"它可"],[-1,1856,"它可"],[1,1871,"["],[-1,1872,"a"],[1,1875,"]("],[-1,1875,"中的"],[1,1898,"），"],[-1,1900,"），"],[-1,1973,"- "],[1,1977,"- "],[-1,2053,"**"],[1,2057,"**"],[1,2116,"。在"],[-1,2118,"。在"],[1,2175,"**"],[-1,2186,"\n要"],[1,2197,"1."],[-1,2199,"先写"],[1,2256,"2."],[-1,2258,"写M"],[1,2351,"3."],[-1,2353,"写M"],[1,2367,"Ma"],[-1,2369,"Ma"],[1,2396,"。\n"],[1,2398,"4."],[-1,2398,"。\n"],[-1,2402,"写S"],[-1,2417,"**"],[1,2421,"**"],[1,2451,"。\n"],[1,2453,"5.-"],[-1,2453,"。\n- 写"],[-1,2474,"**"],[1,2478,"**"],[1,2486,"，获"],[1,2488,"取"],[-1,2488,"，"],[-1,2491,"获取"],[1,2546,"。\n"],[1,2548,"6.-J "],[-1,2548,"。\n-  写J"],[1,2589,"=="],[-1,2591,"> "],[1,2600,"=="],[-1,2602,"> "],[1,2615,"=="],[-1,2617,"> "],[1,2626,"["],[-1,2627,"a"],[1,2630,"]("],[-1,2633,"> "],[1,2648,"=="],[-1,2650,"> "],[1,2668,"=="],[-1,2670,"> ."],[1,2675,".p. ==S"],[-1,2675,"p\n\n\n"],[1,2686,"p"],[-1,2686,"\n"],[-1,2689,"Sp"],[-1,2716,"2 "],[1,2720,"2 "],[-1,2728,"**"],[1,2732,"**"],[1,2739,"\nS"],[1,2741,"p"],[-1,2741,"\n"],[-1,2744,"Sp"],[-1,2761,"**"],[1,2765,"**"],[1,2778,"\nm"],[1,2780,"y"],[-1,2780,"\n"],[-1,2783,"my"],[-1,2802,"**"],[1,2806,"**"],[1,2809," "],[-1,2810,"数"],[1,2815," 起\n\n**；Sp"],[-1,2815,"起来**；\n\n"],[-1,2824,"Sp"],[1,2842,"与 于"],[-1,2842,"于 S"],[-1,2854,"- "],[1,2858,"- "],[-1,2872,"："],[1,2875,"："],[1,2895,"my"],[-1,2897,"my"],[-1,2926,"- "],[1,2930,"- "],[-1,3060,"- "],[1,3064,"- "],[1,3086,"它允"],[-1,3088,"它允"],[1,3121,"，如"],[-1,3123,"，如"],[1,3184,"**"],[-1,3184,"持久"],[1,3200,"**"],[-1,3200,"\n\n"],[1,3430,"**"],[-1,3430,"业务"],[1,3442,"**"],[-1,3442,"\n\n"],[1,3482,"\n"],[-1,3482," "],[1,3670,"**"],[-1,3670,"表现"],[1,3695,"**"],[-1,3695,"\n\n"],[1,3744,"\n"],[-1,3744," "],[1,3903,"**ew层**"],[-1,3903,"View层\n\n"],[1,3972,"**联系**"],[-1,3972,"各层联系\n\n"],[1,4183,"\n"],[-1,4183," "],[1,4361,"==**"],[-1,4361,"\n\n"],[1,4584,"  "],[-1,4584,"**"],[1,4634,"in"],[-1,4634,"pr"],[-1,4755,"in"],[1,4758,"+S"],[-1,6214,"**"],[1,6219," 1"],[-1,6225,"Sp"],[1,6231," \n"],[1,6237,"\n"],[-1,6237," "],[1,6254,"  "],[-1,6254,"\n\n"],[1,6382,"S"],[-1,6382," "],[1,6447,"p"],[-1,6447," "],[-1,6465,"Sp"],[1,6474,"开源"],[-1,6489,"Sp"],[1,6495,"是于"],[-1,8655,"pr"],[1,8660,"使用"],[-1,9350,"pr"],[1,9356,"用途"],[-1,9815,"pr"],[1,9820,"中受"],[-1,10014,"pr"],[1,10019,"是一"],[-1,10153,"面向"],[1,10157,"（A"],[1,10329,"。\n"],[-1,10329,"框架"],[1,10426,"\n##"],[-1,10426,"。\n\n"],[-1,10611,"##"],[1,10617,".2"],[1,10682,"、"],[-1,10682,"."],[1,10692,"S"],[-1,10692,"2"],[1,10864,"p"],[-1,10864,"、"],[1,10887,"r"],[-1,10887,"S"],[1,10908,"i"],[-1,10908,"p"],[1,10914,"n"],[-1,10914,"r"],[-1,10939,"in"],[1,10942,"MV"],[1,11237,"\n\n"],[-1,11237,"  "],[1,11290," "],[-1,11290,"\n"],[1,11324," "],[-1,11324,"\n"],[1,11332,"S"],[-1,11332," "],[1,11384,"p"],[-1,11384," "],[-1,11425,"Sp"],[1,11435,"属于"],[-1,11449,"Sp"],[1,11455,"Fr"],[-1,19587,"。"],[1,19589," "]],[19588,19588],[24,24]]],[1570889073016,["GJX@GJXAIOU",[[1,42310,"\n"]],[42309,42309],[42310,42310]]],[1570889074508,["GJX@GJXAIOU",[[1,42310,"```"]],[42310,42310],[42313,42313]]],[1570889074810,["GJX@GJXAIOU",[[1,42313,"language\n```\n"]],[42313,42313],[42313,42321]]],[1570889075728,["GJX@GJXAIOU",[[-1,42313,"language"],[1,42321,"j"]],[42313,42321],[42314,42314]]],[1570889076441,["GJX@GJXAIOU",[[1,42314,"ava"]],[42314,42314],[42317,42317]]],[1570889076898,["GJX@GJXAIOU",[[1,42318,"\n"]],[42317,42317],[42318,42318]]],[1570889085712,["GJX@GJXAIOU",[[1,42318,"package com.javen.testmybatis;\n\nimport javax.annotation.Resource;  \n\nimport org.apache.log4j.Logger;  \nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.springframework.test.context.ContextConfiguration;  \nimport org.springframework.test.context.junit4.SpringJUnit4ClassRunner;  \nimport com.alibaba.fastjson.JSON;  \nimport com.javen.model.User;\nimport com.javen.service.IUserService;\n  \n@RunWith(SpringJUnit4ClassRunner.class)     //表示继承了SpringJUnit4ClassRunner类  \n@ContextConfiguration(locations = {\"classpath:spring-mybatis.xml\"})  \n  \npublic class TestMyBatis {  \n    private static Logger logger = Logger.getLogger(TestMyBatis.class);  \n//  private ApplicationContext ac = null;  \n    @Resource  \n    private IUserService userService = null;  \n  \n//  @Before  \n//  public void before() {  \n//      ac = new ClassPathXmlApplicationContext(\"applicationContext.xml\");  \n//      userService = (IUserService) ac.getBean(\"userService\");  \n//  }  \n  \n    @Test  \n    public void test1() {  \n        User user = userService.getUserById(1);  \n        // System.out.println(user.getUserName());  \n        // logger.info(\"值：\"+user.getUserName());  \n        logger.info(JSON.toJSONString(user));  \n    }  \n}  "]],[42318,42318],[43536,43536]]],[1570889090902,["GJX@GJXAIOU",[[-1,43542,"package com.javen.testmybatis; import javax.annotation.Resource; import org.apache.log4j.Logger; import org.junit.Test; import org.junit.runner.RunWith; import org.springframework.test.context.ContextConfiguration; import org.springframework.test.context.junit4.SpringJUnit4ClassRunner; import com.alibaba.fastjson.JSON; import com.javen.model.User; import com.javen.service.IUserService;\n\n@RunWith(SpringJUnit4ClassRunner.class)     //表示继承了SpringJUnit4ClassRunner类 \n@ContextConfiguration(locations = {\"classpath:spring-mybatis.xml\"}) public class TestMyBatis { private static Logger logger = Logger.getLogger(TestMyBatis.class); // private ApplicationContext ac = null; \n @Resource private IUserService userService = null; // @Before // public void before() { // ac = new ClassPathXmlApplicationContext(\"applicationContext.xml\"); // userService = (IUserService) ac.getBean(\"userService\"); // } \n @Test public void test1() {  \n        User user = userService.getUserById(1); // System.out.println(user.getUserName()); // logger.info(\"值：\"+user.getUserName()); \n logger.info(JSON.toJSONString(user));  \n    }  \n} \n"]],[43542,44654],[43542,43542]]],[1570889096230,["GJX@GJXAIOU",[[1,43704,"```"]],[43704,43704],[43707,43707]]],[1570889096532,["GJX@GJXAIOU",[[1,43707,"language\n```\n"]],[43707,43707],[43707,43715]]],[1570889097577,["GJX@GJXAIOU",[[-1,43707,"language"],[1,43715,"j"]],[43707,43715],[43708,43708]]],[1570889098329,["GJX@GJXAIOU",[[1,43708,"ava"]],[43708,43708],[43711,43711]]],[1570889098564,["GJX@GJXAIOU",[[1,43712,"\n"]],[43711,43711],[43712,43712]]],[1570889117825,["GJX@GJXAIOU",[[1,43712,"package com.javen.testmybatis;\n\nimport javax.annotation.Resource;  \n\nimport org.apache.log4j.Logger;  \nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.springframework.test.context.ContextConfiguration;  \nimport org.springframework.test.context.junit4.SpringJUnit4ClassRunner;  \nimport com.alibaba.fastjson.JSON;  \nimport com.javen.model.User;\nimport com.javen.service.IUserService;\n  \n@RunWith(SpringJUnit4ClassRunner.class)     //表示继承了SpringJUnit4ClassRunner类  \n@ContextConfiguration(locations = {\"classpath:spring-mybatis.xml\"})  \n  \npublic class TestMyBatis {  \n    private static Logger logger = Logger.getLogger(TestMyBatis.class);  \n//  private ApplicationContext ac = null;  \n    @Resource  \n    private IUserService userService = null;  \n  \n//  @Before  \n//  public void before() {  \n//      ac = new ClassPathXmlApplicationContext(\"applicationContext.xml\");  \n//      userService = (IUserService) ac.getBean(\"userService\");  \n//  }  \n  \n    @Test  \n    public void test1() {  \n        User user = userService.getUserById(1);  \n        // System.out.println(user.getUserName());  \n        // logger.info(\"值：\"+user.getUserName());  \n        logger.info(JSON.toJSONString(user));  \n    }  \n}  "]],[43712,43712],[44930,44930]]],[1570889126914,["GJX@GJXAIOU",[[-1,44936,"package com.javen.controller; import java.io.File; import java.io.IOException; import java.util.Map; import javax.annotation.Resource; import javax.servlet.http.HttpServletRequest; import org.apache.commons.io.FileUtils; import org.slf4j.Logger; import org.slf4j.LoggerFactory; import org.springframework.http.HttpStatus; import org.springframework.http.ResponseEntity; import org.springframework.stereotype.Controller; import org.springframework.ui.Model; import org.springframework.web.bind.annotation.PathVariable; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.ResponseBody; import org.springframework.web.multipart.MultipartFile; import com.javen.model.User; import com.javen.service.IUserService;\n\n@Controller  \n@RequestMapping(\"/user\") // /user/**\npublic class UserController { private static Logger log=LoggerFactory.getLogger(UserController.class);\n     @Resource private IUserService userService; // /user/test?id=1\n    @RequestMapping(value=\"/test\",method=RequestMethod.GET) public String test(HttpServletRequest request,Model model){ int userId = Integer.parseInt(request.getParameter(\"id\"));  \n        System.out.println(\"userId:\"+userId);\n        User user=null; if (userId==1) {\n             user = new User();  \n             user.setAge(11);\n             user.setId(1);\n             user.setPassword(\"123\");\n             user.setUserName(\"javen\");\n        }\n\n        log.debug(user.toString());\n        model.addAttribute(\"user\", user); return \"index\";  \n    } // /user/showUser?id=1\n    @RequestMapping(value=\"/showUser\",method=RequestMethod.GET) public String toIndex(HttpServletRequest request,Model model){ int userId = Integer.parseInt(request.getParameter(\"id\"));  \n        System.out.println(\"userId:\"+userId);\n        User user = this.userService.getUserById(userId);  \n        log.debug(user.toString());\n        model.addAttribute(\"user\", user); return \"showUser\";  \n    } // /user/showUser2?id=1\n    @RequestMapping(value=\"/showUser2\",method=RequestMethod.GET) public String toIndex2(@RequestParam(\"id\") String id,Model model){ int userId = Integer.parseInt(id);  \n        System.out.println(\"userId:\"+userId);\n        User user = this.userService.getUserById(userId);  \n        log.debug(user.toString());\n        model.addAttribute(\"user\", user); return \"showUser\";  \n    } // /user/showUser3/{id}\n    @RequestMapping(value=\"/showUser3/{id}\",method=RequestMethod.GET) public String toIndex3(@PathVariable(\"id\")String id,Map<String, Object> model){ int userId = Integer.parseInt(id);  \n        System.out.println(\"userId:\"+userId);\n        User user = this.userService.getUserById(userId);  \n        log.debug(user.toString());\n        model.put(\"user\", user); return \"showUser\";  \n    } // /user/{id}\n    @RequestMapping(value=\"/{id}\",method=RequestMethod.GET) public @ResponseBody User getUserInJson(@PathVariable String id,Map<String, Object> model){ int userId = Integer.parseInt(id);  \n        System.out.println(\"userId:\"+userId);\n        User user = this.userService.getUserById(userId);  \n        log.info(user.toString()); return user;  \n    } // /user/{id}\n    @RequestMapping(value=\"/jsontype/{id}\",method=RequestMethod.GET) public ResponseEntity<User>  getUserInJson2(@PathVariable String id,Map<String, Object> model){ int userId = Integer.parseInt(id);  \n        System.out.println(\"userId:\"+userId);\n        User user = this.userService.getUserById(userId);  \n        log.info(user.toString()); return new ResponseEntity<User>(user,HttpStatus.OK);  \n    } //文件上传、\n    @RequestMapping(value=\"/upload\") public String showUploadPage(){ return \"user_admin/file\";\n    }\n\n    @RequestMapping(value=\"/doUpload\",method=RequestMethod.POST) public String doUploadFile(@RequestParam(\"file\")MultipartFile file) throws IOException{ if (!file.isEmpty()) {\n            log.info(\"Process file:{}\",file.getOriginalFilename());\n        }\n        FileUtils.copyInputStreamToFile(file.getInputStream(), new File(\"E:\\\\\",System.currentTimeMillis()+file.getOriginalFilename())); return \"succes\";\n    }\n} \n"]],[44936,49147],[44936,44936]]],[1570889191544,[null,[[-1,24,"\n*原理*"],[1,29,"框架原理\n"],[-1,41,"**"],[1,43,"作用\n\n"],[1,46," "],[1,48,"是"],[-1,49,"是"],[-1,52," "],[1,69," "],[1,70," "],[-1,71," "],[-1,73," "],[1,79," "],[-1,81," "],[1,90," "],[-1,92," "],[1,94," "],[-1,96," "],[1,129," "],[-1,131," "],[1,135," "],[-1,137," "],[-1,141,"使用"],[1,145,"使用"],[-1,157,"请求"],[1,161,"请求"],[-1,169,"\n\n"],[-1,173,"s"],[1,174,"\n"],[1,176,"sp"],[-1,188,"，m"],[1,193,"my"],[-1,212,"**"],[-1,225,"Sp"],[1,227,"\n\n"],[-1,243,"."],[1,244,"\n"],[1,380,"客户"],[1,386," "],[-1,388," "],[-1,404,"分发"],[1,412,"分发"],[-1,414,"\n\n"],[-1,437,"2"],[1,438,"\n"],[-1,442,"i "],[1,444,"由 Di"],[1,458," "],[-1,460," "],[1,464," "],[-1,466," "],[-1,479,"找到"],[1,503,"找到"],[1,508," "],[-1,510," "],[-1,519,"\n\n；3"],[1,523,"；\n"],[1,750,"Co"],[1,758," "],[-1,760," "],[1,771," "],[-1,773," "],[-1,784,"\n\n"],[-1,802,"4"],[1,803,"\n"],[1,807,"Di"],[-1,817,"clvt"],[1,821,"vlet "],[-1,823," "],[1,844," "],[-1,846," "],[-1,851,"\n5"],[1,857,"视图"],[-1,870,"!["],[-1,933,"Sp"],[1,935,"\n\n"],[1,1826,"Sp"],[-1,1852,"它可"],[1,1856,"它可"],[-1,1869,"["],[1,1871,"a"],[-1,1873,"]("],[1,1875,"中的"],[-1,1896,"），"],[1,1900,"），"],[1,1971,"- "],[-1,1973,"- "],[1,2051,"**"],[-1,2053,"**"],[-1,2114,"。在"],[1,2118,"。在"],[-1,2173,"**"],[1,2186,"\n要"],[-1,2195,"1."],[1,2199,"先写"],[-1,2254,"2."],[1,2258,"写M"],[-1,2349,"3."],[1,2353,"写M"],[-1,2365,"Ma"],[1,2369,"Ma"],[-1,2394,"。\n"],[-1,2398,"4."],[1,2400,"。\n"],[1,2402,"写S"],[1,2415,"**"],[-1,2417,"**"],[-1,2449,"。\n"],[-1,2453,"5.-"],[1,2456,"。\n- 写"],[1,2472,"**"],[-1,2474,"**"],[-1,2484,"，获"],[-1,2488,"取"],[1,2489,"，"],[1,2491,"获取"],[-1,2544,"。\n"],[-1,2548,"6.-J "],[1,2553,"。\n-  写J"],[-1,2587,"=="],[1,2591,"> "],[-1,2598,"=="],[1,2602,"> "],[-1,2613,"=="],[1,2617,"> "],[-1,2624,"["],[1,2626,"a"],[-1,2628,"]("],[1,2633,"> "],[-1,2646,"=="],[1,2650,"> "],[-1,2666,"=="],[1,2670,"> ."],[-1,2672,".p. ==S"],[1,2679,"p\n\n\n"],[-1,2686,"p"],[1,2687,"\n"],[1,2689,"Sp"],[1,2714,"2 "],[-1,2716,"2 "],[1,2726,"**"],[-1,2728,"**"],[-1,2737,"\nS"],[-1,2741,"p"],[1,2742,"\n"],[1,2744,"Sp"],[1,2759,"**"],[-1,2761,"**"],[-1,2776,"\nm"],[-1,2780,"y"],[1,2781,"\n"],[1,2783,"my"],[1,2800,"**"],[-1,2802,"**"],[-1,2807," "],[1,2809,"数"],[-1,2813," 起\n\n**；Sp"],[1,2822,"起来**；\n\n"],[1,2824,"Sp"],[-1,2840,"与 于"],[1,2843,"于 S"],[1,2852,"- "],[-1,2854,"- "],[1,2870,"："],[-1,2872,"："],[-1,2893,"my"],[1,2897,"my"],[1,2924,"- "],[-1,2926,"- "],[1,3058,"- "],[-1,3060,"- "],[-1,3084,"它允"],[1,3088,"它允"],[-1,3119,"，如"],[1,3123,"，如"],[-1,3182,"**"],[1,3184,"持久"],[-1,3198,"**"],[1,3200,"\n\n"],[-1,3428,"**"],[1,3430,"业务"],[-1,3440,"**"],[1,3442,"\n\n"],[-1,3480,"\n"],[1,3481," "],[-1,3668,"**"],[1,3670,"表现"],[-1,3693,"**"],[1,3695,"\n\n"],[-1,3742,"\n"],[1,3743," "],[-1,3901,"**ew层**"],[1,3908,"View层\n\n"],[-1,3970,"**联系**"],[1,3976,"各层联系\n\n"],[-1,4181,"\n"],[1,4182," "],[-1,4359,"==**"],[1,4363,"\n\n"],[-1,4584,"  "],[1,4586,"**"],[-1,4634,"in"],[1,4636,"pr"],[1,4755,"in"],[-1,4756,"+S"],[1,6214,"**"],[-1,6217," 1"],[1,6225,"Sp"],[-1,6229," \n"],[-1,6237,"\n"],[1,6238," "],[-1,6254,"  "],[1,6256,"\n\n"],[-1,6382,"S"],[1,6383," "],[-1,6447,"p"],[1,6448," "],[1,6465,"Sp"],[-1,6472,"开源"],[1,6489,"Sp"],[-1,6493,"是于"],[1,8655,"pr"],[-1,8658,"使用"],[1,9350,"pr"],[-1,9354,"用途"],[1,9815,"pr"],[-1,9818,"中受"],[1,10014,"pr"],[-1,10017,"是一"],[1,10153,"面向"],[-1,10155,"（A"],[-1,10329,"。\n"],[1,10331,"框架"],[-1,10426,"\n##"],[1,10429,"。\n\n"],[1,10611,"##"],[-1,10615,".2"],[-1,10682,"、"],[1,10683,"."],[-1,10692,"S"],[1,10693,"2"],[-1,10864,"p"],[1,10865,"、"],[-1,10887,"r"],[1,10888,"S"],[-1,10908,"i"],[1,10909,"p"],[-1,10914,"n"],[1,10915,"r"],[1,10939,"in"],[-1,10940,"MV"],[-1,11237,"\n\n"],[1,11239,"  "],[-1,11290," "],[1,11291,"\n"],[-1,11324," "],[1,11325,"\n"],[-1,11332,"S"],[1,11333," "],[-1,11384,"p"],[1,11385," "],[1,11425,"Sp"],[-1,11433,"属于"],[1,11449,"Sp"],[-1,11453,"Fr"],[1,19587,"。"],[-1,19588," "]],[24,24],[19588,19588]]],[1570889191544,[null,[[1,24,"\n*原理*"],[-1,24,"框架原理\n"],[1,41,"**"],[-1,41,"作用\n\n"],[-1,48," "],[-1,51,"是"],[1,53,"是"],[1,55," "],[-1,71," "],[-1,73," "],[1,75," "],[1,76," "],[-1,81," "],[1,84," "],[-1,92," "],[1,95," "],[-1,96," "],[1,99," "],[-1,131," "],[1,134," "],[-1,137," "],[1,140," "],[1,143,"使用"],[-1,145,"使用"],[1,159,"请求"],[-1,161,"请求"],[1,171,"\n\n"],[1,173,"s"],[-1,173,"\n"],[-1,176,"sp"],[1,190,"，m"],[-1,193,"my"],[1,214,"**"],[1,225,"Sp"],[-1,225,"\n\n"],[1,243,"."],[-1,243,"\n"],[-1,380,"客户"],[-1,388," "],[1,391," "],[1,406,"分发"],[-1,412,"分发"],[1,416,"\n\n"],[1,437,"2"],[-1,437,"\n"],[1,442,"i "],[-1,442,"由 Di"],[-1,460," "],[1,463," "],[-1,466," "],[1,469," "],[1,481,"找到"],[-1,503,"找到"],[-1,510," "],[1,513," "],[1,521,"\n\n；3"],[-1,521,"；\n"],[-1,750,"Co"],[-1,760," "],[1,763," "],[-1,773," "],[1,776," "],[1,786,"\n\n"],[1,802,"4"],[-1,802,"\n"],[-1,807,"Di"],[1,819,"clvt"],[-1,819,"vlet "],[1,826," "],[-1,846," "],[1,849," "],[1,853,"\n5"],[-1,857,"视图"],[1,872,"!["],[1,933,"Sp"],[-1,933,"\n\n"],[-1,1826,"Sp"],[1,1854,"它可"],[-1,1856,"它可"],[1,1871,"["],[-1,1872,"a"],[1,1875,"]("],[-1,1875,"中的"],[1,1898,"），"],[-1,1900,"），"],[-1,1973,"- "],[1,1977,"- "],[-1,2053,"**"],[1,2057,"**"],[1,2116,"。在"],[-1,2118,"。在"],[1,2175,"**"],[-1,2186,"\n要"],[1,2197,"1."],[-1,2199,"先写"],[1,2256,"2."],[-1,2258,"写M"],[1,2351,"3."],[-1,2353,"写M"],[1,2367,"Ma"],[-1,2369,"Ma"],[1,2396,"。\n"],[1,2398,"4."],[-1,2398,"。\n"],[-1,2402,"写S"],[-1,2417,"**"],[1,2421,"**"],[1,2451,"。\n"],[1,2453,"5.-"],[-1,2453,"。\n- 写"],[-1,2474,"**"],[1,2478,"**"],[1,2486,"，获"],[1,2488,"取"],[-1,2488,"，"],[-1,2491,"获取"],[1,2546,"。\n"],[1,2548,"6.-J "],[-1,2548,"。\n-  写J"],[1,2589,"=="],[-1,2591,"> "],[1,2600,"=="],[-1,2602,"> "],[1,2615,"=="],[-1,2617,"> "],[1,2626,"["],[-1,2627,"a"],[1,2630,"]("],[-1,2633,"> "],[1,2648,"=="],[-1,2650,"> "],[1,2668,"=="],[-1,2670,"> ."],[1,2675,".p. ==S"],[-1,2675,"p\n\n\n"],[1,2686,"p"],[-1,2686,"\n"],[-1,2689,"Sp"],[-1,2716,"2 "],[1,2720,"2 "],[-1,2728,"**"],[1,2732,"**"],[1,2739,"\nS"],[1,2741,"p"],[-1,2741,"\n"],[-1,2744,"Sp"],[-1,2761,"**"],[1,2765,"**"],[1,2778,"\nm"],[1,2780,"y"],[-1,2780,"\n"],[-1,2783,"my"],[-1,2802,"**"],[1,2806,"**"],[1,2809," "],[-1,2810,"数"],[1,2815," 起\n\n**；Sp"],[-1,2815,"起来**；\n\n"],[-1,2824,"Sp"],[1,2842,"与 于"],[-1,2842,"于 S"],[-1,2854,"- "],[1,2858,"- "],[-1,2872,"："],[1,2875,"："],[1,2895,"my"],[-1,2897,"my"],[-1,2926,"- "],[1,2930,"- "],[-1,3060,"- "],[1,3064,"- "],[1,3086,"它允"],[-1,3088,"它允"],[1,3121,"，如"],[-1,3123,"，如"],[1,3184,"**"],[-1,3184,"持久"],[1,3200,"**"],[-1,3200,"\n\n"],[1,3430,"**"],[-1,3430,"业务"],[1,3442,"**"],[-1,3442,"\n\n"],[1,3482,"\n"],[-1,3482," "],[1,3670,"**"],[-1,3670,"表现"],[1,3695,"**"],[-1,3695,"\n\n"],[1,3744,"\n"],[-1,3744," "],[1,3903,"**ew层**"],[-1,3903,"View层\n\n"],[1,3972,"**联系**"],[-1,3972,"各层联系\n\n"],[1,4183,"\n"],[-1,4183," "],[1,4361,"==**"],[-1,4361,"\n\n"],[1,4584,"  "],[-1,4584,"**"],[1,4634,"in"],[-1,4634,"pr"],[-1,4755,"in"],[1,4758,"+S"],[-1,6214,"**"],[1,6219," 1"],[-1,6225,"Sp"],[1,6231," \n"],[1,6237,"\n"],[-1,6237," "],[1,6254,"  "],[-1,6254,"\n\n"],[1,6382,"S"],[-1,6382," "],[1,6447,"p"],[-1,6447," "],[-1,6465,"Sp"],[1,6474,"开源"],[-1,6489,"Sp"],[1,6495,"是于"],[-1,8655,"pr"],[1,8660,"使用"],[-1,9350,"pr"],[1,9356,"用途"],[-1,9815,"pr"],[1,9820,"中受"],[-1,10014,"pr"],[1,10019,"是一"],[-1,10153,"面向"],[1,10157,"（A"],[1,10329,"。\n"],[-1,10329,"框架"],[1,10426,"\n##"],[-1,10426,"。\n\n"],[-1,10611,"##"],[1,10617,".2"],[1,10682,"、"],[-1,10682,"."],[1,10692,"S"],[-1,10692,"2"],[1,10864,"p"],[-1,10864,"、"],[1,10887,"r"],[-1,10887,"S"],[1,10908,"i"],[-1,10908,"p"],[1,10914,"n"],[-1,10914,"r"],[-1,10939,"in"],[1,10942,"MV"],[1,11237,"\n\n"],[-1,11237,"  "],[1,11290," "],[-1,11290,"\n"],[1,11324," "],[-1,11324,"\n"],[1,11332,"S"],[-1,11332," "],[1,11384,"p"],[-1,11384," "],[-1,11425,"Sp"],[1,11435,"属于"],[-1,11449,"Sp"],[1,11455,"Fr"],[-1,19587,"。"],[1,19589," "]],[19588,19588],[24,24]]],[1570889139460,["GJX@GJXAIOU",[[1,44966,"  "]],[44966,44966],[44968,44968]]],[1570889142403,["GJX@GJXAIOU",[[1,44966,"```"]],[44966,44966],[44969,44969]]],[1570889142680,["GJX@GJXAIOU",[[1,44969,"language\n```\n"]],[44969,44969],[44969,44977]]],[1570889143317,["GJX@GJXAIOU",[[-1,44969,"language"],[1,44977,"j"]],[44969,44977],[44970,44970]]],[1570889143803,["GJX@GJXAIOU",[[1,44970,"sp"]],[44970,44970],[44972,44972]]],[1570889144232,["GJX@GJXAIOU",[[1,44973,"\n"]],[44972,44972],[44973,44973]]],[1570889152520,["GJX@GJXAIOU",[[1,44973,"<%@ page language=\"java\" contentType=\"text/html; charset=utf-8\" pageEncoding=\"utf-8\"%>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n<html>\n<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n<title>Insert title here</title>\n</head>\n<body>\n    <h1>上传文件</h1>\n    <form method=\"post\" action=\"/user/doUpload\" enctype=\"multipart/form-data\">\n        <input type=\"file\" name=\"file\"/>\n        <input type=\"submit\" value=\"上传文件\"/>\n\n    </form>\n</body>\n</html>\n\nindex.jsp\n\n<html>\n<body>\n<h2>Hello World!</h2>\n</body>\n</html>\n\nshowUser.jsp\n\n<%@ page language=\"java\" import=\"java.util.*\" pageEncoding=\"utf-8\"%>  \n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\">  \n<html>  \n  <head>  \n    <title>测试</title>  \n  </head>  \n\n  <body> ${user.userName} </body>  \n</html>"]],[44973,44973],[45820,45820]]],[1570889168759,["GJX@GJXAIOU",[[-1,45828,"<%@ page language=\"java\" contentType=\"text/html; charset=utf-8\" pageEncoding=\"utf-8\"%>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n<html>\n<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n<title>Insert title here</title>\n</head>\n<body>\n    <h1>上传文件</h1>\n    <form method=\"post\" action=\"/user/doUpload\" enctype=\"multipart/form-data\">\n        <input type=\"file\" name=\"file\"/>\n        <input type=\"submit\" value=\"上传文件\"/>\n\n    </form>\n</body>\n</html>\n\nindex.jsp\n\n<html>\n<body>\n<h2>Hello World!</h2>\n</body>\n</html>\n\nshowUser.jsp\n\n<%@ page language=\"java\" import=\"java.util.*\" pageEncoding=\"utf-8\"%>  \n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\">  \n<html>  \n  <head>  \n    <title>测试</title>  \n  </head>  \n\n  <body> ${user.userName} </body>  \n</html>  \n"]],[45828,46678],[45828,45828]]],[1570889183800,["GJX@GJXAIOU",[[1,45582,"```jsp"]],[45582,45582],[45588,45588]]],[1570889187840,["GJX@GJXAIOU",[[1,45582,"\n"]],[45582,45582],[45583,45583]]],[1570889190917,["GJX@GJXAIOU",[[1,45568,"```"]],[45568,45568],[45571,45571]]],[1570889251542,[null,[[-1,24,"\n*原理*"],[1,29,"框架原理\n"],[-1,41,"**"],[1,43,"作用\n\n"],[1,46," "],[1,48,"是"],[-1,49,"是"],[-1,52," "],[1,69," "],[1,70," "],[-1,71," "],[-1,73," "],[1,79," "],[-1,81," "],[1,90," "],[-1,92," "],[1,94," "],[-1,96," "],[1,129," "],[-1,131," "],[1,135," "],[-1,137," "],[-1,141,"使用"],[1,145,"使用"],[-1,157,"请求"],[1,161,"请求"],[-1,169,"\n\n"],[-1,173,"s"],[1,174,"\n"],[1,176,"sp"],[-1,188,"，m"],[1,193,"my"],[-1,212,"**"],[-1,225,"Sp"],[1,227,"\n\n"],[-1,243,"."],[1,244,"\n"],[1,380,"客户"],[1,386," "],[-1,388," "],[-1,404,"分发"],[1,412,"分发"],[-1,414,"\n\n"],[-1,437,"2"],[1,438,"\n"],[-1,442,"i "],[1,444,"由 Di"],[1,458," "],[-1,460," "],[1,464," "],[-1,466," "],[-1,479,"找到"],[1,503,"找到"],[1,508," "],[-1,510," "],[-1,519,"\n\n；3"],[1,523,"；\n"],[1,750,"Co"],[1,758," "],[-1,760," "],[1,771," "],[-1,773," "],[-1,784,"\n\n"],[-1,802,"4"],[1,803,"\n"],[1,807,"Di"],[-1,817,"clvt"],[1,821,"vlet "],[-1,823," "],[1,844," "],[-1,846," "],[-1,851,"\n5"],[1,857,"视图"],[-1,870,"!["],[-1,933,"Sp"],[1,935,"\n\n"],[1,1826,"Sp"],[-1,1852,"它可"],[1,1856,"它可"],[-1,1869,"["],[1,1871,"a"],[-1,1873,"]("],[1,1875,"中的"],[-1,1896,"），"],[1,1900,"），"],[1,1971,"- "],[-1,1973,"- "],[1,2051,"**"],[-1,2053,"**"],[-1,2114,"。在"],[1,2118,"。在"],[-1,2173,"**"],[1,2186,"\n要"],[-1,2195,"1."],[1,2199,"先写"],[-1,2254,"2."],[1,2258,"写M"],[-1,2349,"3."],[1,2353,"写M"],[-1,2365,"Ma"],[1,2369,"Ma"],[-1,2394,"。\n"],[-1,2398,"4."],[1,2400,"。\n"],[1,2402,"写S"],[1,2415,"**"],[-1,2417,"**"],[-1,2449,"。\n"],[-1,2453,"5.-"],[1,2456,"。\n- 写"],[1,2472,"**"],[-1,2474,"**"],[-1,2484,"，获"],[-1,2488,"取"],[1,2489,"，"],[1,2491,"获取"],[-1,2544,"。\n"],[-1,2548,"6.-J "],[1,2553,"。\n-  写J"],[-1,2587,"=="],[1,2591,"> "],[-1,2598,"=="],[1,2602,"> "],[-1,2613,"=="],[1,2617,"> "],[-1,2624,"["],[1,2626,"a"],[-1,2628,"]("],[1,2633,"> "],[-1,2646,"=="],[1,2650,"> "],[-1,2666,"=="],[1,2670,"> ."],[-1,2672,".p. ==S"],[1,2679,"p\n\n\n"],[-1,2686,"p"],[1,2687,"\n"],[1,2689,"Sp"],[1,2714,"2 "],[-1,2716,"2 "],[1,2726,"**"],[-1,2728,"**"],[-1,2737,"\nS"],[-1,2741,"p"],[1,2742,"\n"],[1,2744,"Sp"],[1,2759,"**"],[-1,2761,"**"],[-1,2776,"\nm"],[-1,2780,"y"],[1,2781,"\n"],[1,2783,"my"],[1,2800,"**"],[-1,2802,"**"],[-1,2807," "],[1,2809,"数"],[-1,2813," 起\n\n**；Sp"],[1,2822,"起来**；\n\n"],[1,2824,"Sp"],[-1,2840,"与 于"],[1,2843,"于 S"],[1,2852,"- "],[-1,2854,"- "],[1,2870,"："],[-1,2872,"："],[-1,2893,"my"],[1,2897,"my"],[1,2924,"- "],[-1,2926,"- "],[1,3058,"- "],[-1,3060,"- "],[-1,3084,"它允"],[1,3088,"它允"],[-1,3119,"，如"],[1,3123,"，如"],[-1,3182,"**"],[1,3184,"持久"],[-1,3198,"**"],[1,3200,"\n\n"],[-1,3428,"**"],[1,3430,"业务"],[-1,3440,"**"],[1,3442,"\n\n"],[-1,3480,"\n"],[1,3481," "],[-1,3668,"**"],[1,3670,"表现"],[-1,3693,"**"],[1,3695,"\n\n"],[-1,3742,"\n"],[1,3743," "],[-1,3901,"**ew层**"],[1,3908,"View层\n\n"],[-1,3970,"**联系**"],[1,3976,"各层联系\n\n"],[-1,4181,"\n"],[1,4182," "],[-1,4359,"==**"],[1,4363,"\n\n"],[-1,4584,"  "],[1,4586,"**"],[-1,4634,"in"],[1,4636,"pr"],[1,4755,"in"],[-1,4756,"+S"],[1,6214,"**"],[-1,6217," 1"],[1,6225,"Sp"],[-1,6229," \n"],[-1,6237,"\n"],[1,6238," "],[-1,6254,"  "],[1,6256,"\n\n"],[-1,6382,"S"],[1,6383," "],[-1,6447,"p"],[1,6448," "],[1,6465,"Sp"],[-1,6472,"开源"],[1,6489,"Sp"],[-1,6493,"是于"],[1,8655,"pr"],[-1,8658,"使用"],[1,9350,"pr"],[-1,9354,"用途"],[1,9815,"pr"],[-1,9818,"中受"],[1,10014,"pr"],[-1,10017,"是一"],[1,10153,"面向"],[-1,10155,"（A"],[-1,10329,"。\n"],[1,10331,"框架"],[-1,10426,"\n##"],[1,10429,"。\n\n"],[1,10611,"##"],[-1,10615,".2"],[-1,10682,"、"],[1,10683,"."],[-1,10692,"S"],[1,10693,"2"],[-1,10864,"p"],[1,10865,"、"],[-1,10887,"r"],[1,10888,"S"],[-1,10908,"i"],[1,10909,"p"],[-1,10914,"n"],[1,10915,"r"],[1,10939,"in"],[-1,10940,"MV"],[-1,11237,"\n\n"],[1,11239,"  "],[-1,11290," "],[1,11291,"\n"],[-1,11324," "],[1,11325,"\n"],[-1,11332,"S"],[1,11333," "],[-1,11384,"p"],[1,11385," "],[1,11425,"Sp"],[-1,11433,"属于"],[1,11449,"Sp"],[-1,11453,"Fr"],[1,19587,"。"],[-1,19588," "]],[24,24],[19588,19588]]],[1570889251542,[null,[[1,24,"\n*原理*"],[-1,24,"框架原理\n"],[1,41,"**"],[-1,41,"作用\n\n"],[-1,48," "],[-1,51,"是"],[1,53,"是"],[1,55," "],[-1,71," "],[-1,73," "],[1,75," "],[1,76," "],[-1,81," "],[1,84," "],[-1,92," "],[1,95," "],[-1,96," "],[1,99," "],[-1,131," "],[1,134," "],[-1,137," "],[1,140," "],[1,143,"使用"],[-1,145,"使用"],[1,159,"请求"],[-1,161,"请求"],[1,171,"\n\n"],[1,173,"s"],[-1,173,"\n"],[-1,176,"sp"],[1,190,"，m"],[-1,193,"my"],[1,214,"**"],[1,225,"Sp"],[-1,225,"\n\n"],[1,243,"."],[-1,243,"\n"],[-1,380,"客户"],[-1,388," "],[1,391," "],[1,406,"分发"],[-1,412,"分发"],[1,416,"\n\n"],[1,437,"2"],[-1,437,"\n"],[1,442,"i "],[-1,442,"由 Di"],[-1,460," "],[1,463," "],[-1,466," "],[1,469," "],[1,481,"找到"],[-1,503,"找到"],[-1,510," "],[1,513," "],[1,521,"\n\n；3"],[-1,521,"；\n"],[-1,750,"Co"],[-1,760," "],[1,763," "],[-1,773," "],[1,776," "],[1,786,"\n\n"],[1,802,"4"],[-1,802,"\n"],[-1,807,"Di"],[1,819,"clvt"],[-1,819,"vlet "],[1,826," "],[-1,846," "],[1,849," "],[1,853,"\n5"],[-1,857,"视图"],[1,872,"!["],[1,933,"Sp"],[-1,933,"\n\n"],[-1,1826,"Sp"],[1,1854,"它可"],[-1,1856,"它可"],[1,1871,"["],[-1,1872,"a"],[1,1875,"]("],[-1,1875,"中的"],[1,1898,"），"],[-1,1900,"），"],[-1,1973,"- "],[1,1977,"- "],[-1,2053,"**"],[1,2057,"**"],[1,2116,"。在"],[-1,2118,"。在"],[1,2175,"**"],[-1,2186,"\n要"],[1,2197,"1."],[-1,2199,"先写"],[1,2256,"2."],[-1,2258,"写M"],[1,2351,"3."],[-1,2353,"写M"],[1,2367,"Ma"],[-1,2369,"Ma"],[1,2396,"。\n"],[1,2398,"4."],[-1,2398,"。\n"],[-1,2402,"写S"],[-1,2417,"**"],[1,2421,"**"],[1,2451,"。\n"],[1,2453,"5.-"],[-1,2453,"。\n- 写"],[-1,2474,"**"],[1,2478,"**"],[1,2486,"，获"],[1,2488,"取"],[-1,2488,"，"],[-1,2491,"获取"],[1,2546,"。\n"],[1,2548,"6.-J "],[-1,2548,"。\n-  写J"],[1,2589,"=="],[-1,2591,"> "],[1,2600,"=="],[-1,2602,"> "],[1,2615,"=="],[-1,2617,"> "],[1,2626,"["],[-1,2627,"a"],[1,2630,"]("],[-1,2633,"> "],[1,2648,"=="],[-1,2650,"> "],[1,2668,"=="],[-1,2670,"> ."],[1,2675,".p. ==S"],[-1,2675,"p\n\n\n"],[1,2686,"p"],[-1,2686,"\n"],[-1,2689,"Sp"],[-1,2716,"2 "],[1,2720,"2 "],[-1,2728,"**"],[1,2732,"**"],[1,2739,"\nS"],[1,2741,"p"],[-1,2741,"\n"],[-1,2744,"Sp"],[-1,2761,"**"],[1,2765,"**"],[1,2778,"\nm"],[1,2780,"y"],[-1,2780,"\n"],[-1,2783,"my"],[-1,2802,"**"],[1,2806,"**"],[1,2809," "],[-1,2810,"数"],[1,2815," 起\n\n**；Sp"],[-1,2815,"起来**；\n\n"],[-1,2824,"Sp"],[1,2842,"与 于"],[-1,2842,"于 S"],[-1,2854,"- "],[1,2858,"- "],[-1,2872,"："],[1,2875,"："],[1,2895,"my"],[-1,2897,"my"],[-1,2926,"- "],[1,2930,"- "],[-1,3060,"- "],[1,3064,"- "],[1,3086,"它允"],[-1,3088,"它允"],[1,3121,"，如"],[-1,3123,"，如"],[1,3184,"**"],[-1,3184,"持久"],[1,3200,"**"],[-1,3200,"\n\n"],[1,3430,"**"],[-1,3430,"业务"],[1,3442,"**"],[-1,3442,"\n\n"],[1,3482,"\n"],[-1,3482," "],[1,3670,"**"],[-1,3670,"表现"],[1,3695,"**"],[-1,3695,"\n\n"],[1,3744,"\n"],[-1,3744," "],[1,3903,"**ew层**"],[-1,3903,"View层\n\n"],[1,3972,"**联系**"],[-1,3972,"各层联系\n\n"],[1,4183,"\n"],[-1,4183," "],[1,4361,"==**"],[-1,4361,"\n\n"],[1,4584,"  "],[-1,4584,"**"],[1,4634,"in"],[-1,4634,"pr"],[-1,4755,"in"],[1,4758,"+S"],[-1,6214,"**"],[1,6219," 1"],[-1,6225,"Sp"],[1,6231," \n"],[1,6237,"\n"],[-1,6237," "],[1,6254,"  "],[-1,6254,"\n\n"],[1,6382,"S"],[-1,6382," "],[1,6447,"p"],[-1,6447," "],[-1,6465,"Sp"],[1,6474,"开源"],[-1,6489,"Sp"],[1,6495,"是于"],[-1,8655,"pr"],[1,8660,"使用"],[-1,9350,"pr"],[1,9356,"用途"],[-1,9815,"pr"],[1,9820,"中受"],[-1,10014,"pr"],[1,10019,"是一"],[-1,10153,"面向"],[1,10157,"（A"],[1,10329,"。\n"],[-1,10329,"框架"],[1,10426,"\n##"],[-1,10426,"。\n\n"],[-1,10611,"##"],[1,10617,".2"],[1,10682,"、"],[-1,10682,"."],[1,10692,"S"],[-1,10692,"2"],[1,10864,"p"],[-1,10864,"、"],[1,10887,"r"],[-1,10887,"S"],[1,10908,"i"],[-1,10908,"p"],[1,10914,"n"],[-1,10914,"r"],[-1,10939,"in"],[1,10942,"MV"],[1,11237,"\n\n"],[-1,11237,"  "],[1,11290," "],[-1,11290,"\n"],[1,11324," "],[-1,11324,"\n"],[1,11332,"S"],[-1,11332," "],[1,11384,"p"],[-1,11384," "],[-1,11425,"Sp"],[1,11435,"属于"],[-1,11449,"Sp"],[1,11455,"Fr"],[-1,19587,"。"],[1,19589," "]],[19588,19588],[24,24]]],[1570889194274,["GJX@GJXAIOU",[[1,45572,"\n"]],[45572,45572],[45573,45573]]]],null,"GJX@GJXAIOU"],["09859976-1e41-4f88-803c-c99faf7f6c22",1571274401999,"# SSM框架原理,作用及使用方法\n\n## 一、框架原理\n\n### （一）SSM 作用\n\nSSM 框架是 spring MVC ，spring 和 mybatis 框架的整合，是标准的 MVC 模式，将整个系统划分为表现层，controller层，service 层，DAO 层四层\n\n- 使用spring MVC负责**请求的转发和视图管理**\n- spring实现业务对象管理\n- mybatis作为数据对象的持久化引擎\n\n### （二）实现原理\n\n- **spring MVC**\n  - DNS 负责域名的解析, 比如访问www.baidu.com 先找到DNS获取相应的服务器IP和端口；\n  - 请求消息到达端口以后由**TOMCAT主动去询问**自己占用的端口是否由请求发来；\n  - 如果有请求TOMCAT**交给对应的项目**处理；\n  - 客户端发送请求到 DispacherServlet（前端控制器即分发器），这里可以设置拦截器，对请求进行过滤处理；\n  - 由 DispacherServlet 控制器查询 HanderMapping，通过解析请求，判断请求希望执行的具体方法，即找到处理请求的 Controller；\n这个map表由很多key:value键值对组成, key值是controller的名字(@mapping ...), value值是该controller所在类的地址和方法签名;\n(一个类中可能由很多controller)这个找到controller位置并实例化的过程叫做**反射**\n反射得到实例后通过**代理**执行相应的方法即相应controller;\n  - 通过 HandlerAdapter 调用具体的 Controller 方法；\n  - Controller 调用业务逻辑处理后，返回 ModelAndView，即控制器结果返回给视图解析器；\n  - DispacherServlet 查询视图解析器，找到ModelAndView 指定的视图\n  - 视图负责将结果显示到客户端\n\n![SpringMVC 流程]($resource/SpringMVC%20%E6%B5%81%E7%A8%8B.png)\n\n**上面补充：**\n- 拦截器：拦截器主要是在 SpringMVC 的 controller 处理请求之前，对请求做一些处理，拦截器拦截的是 Controller，拦截器分为：HandlerInterceptro（springmvc 的）和 WebRequestInterceptor（spring 的），同时里面一共有三个方法，可以实现部分，主要是拦截位置不同，整体的指向顺序为： preHandle ->进入控制器（controller）-> postHandler -> JSP -> afterCompletion；\n\n- 配置文件\n  - web.xml：在 <servlet> 中要配置前端控制器，springmvc 的配置文件位置、自启动、拦截器以及编码过滤器；\n  - springmvc.xml ：配置扫描包，即项目中所有 controller 位置，配置注解驱动（一般使用注解），配置不要拦截静态资源、自定义视图解析器（就是前后缀，可以和 controller 的返回值相连接，构成完整的页面路径）；\n  - controller 中代码示例：\n```java\n@controller // 将该类交给容器管理\npublic class demo(){\n    @RequestMapping(\"A\")\n    public String hello(){\n        return \"main\";\n    }\n    @RequestMapping(\"B\")\n    public String hello(){\n        return \"main\";\n    }\n}\n```\n然后在 jsp 的例如表单中的 action 属性配置为：A，将这个请求和控制器进行映射了，这个请求对应会调用 hello 这个控制器；\n\n- 同时 springmvc 将 jsp 中的参数值传递给 controller 中可以采用方法有：\n  - HandlerMenthod；\n  - Map\n  - Model 接口\n  - ModelAndView 类\n\n\n\n- Spring：我们平时开发接触最多的估计就是IOC容器，**它可以装载bean（也就是我们Java中的类，当然也包括service dao里面的**），有了这个机制，我们就不用在每次使用这个类的时候为它初始化，很少看到关键字new。另外spring的aop，事务管理等等都是我们经常用到的。\n\n- Mybatis：mybatis是对jdbc的封装，它让数据库底层操作变的透明。mybatis的操作都是围绕一个sqlSessionFactory实例展开的。**mybatis通过配置文件关联到各实体类的Mapper文件，Mapper文件中配置了每个类对数据库所需进行的sql语句映射**。在每次与数据库交互时，通过sqlSessionFactory拿到一个sqlSession，再执行sql命令。\n\n### （三）使用方法\n要完成一个功能：\n\n- 先写实体类entity，定义对象的属性，（可以参照数据库中表的字段来设置，数据库的设计应该在所有编码开始之前）。\n- 写Mapper.xml（Mybatis），其中定义你的功能，对应要对数据库进行的那些操作，比如 insert、selectAll、selectByKey、delete、update等。\n- 写Mapper.java，将**Mapper.xml中的操作按照id映射成Java函数**。\n- 写Service.java，为**控制层提供服务，接受控制层的参数，完成相应的功能，并返回给控制层**。\n- 写Controller.java，**连接页面请求和服务层**，**获取页面请求的参数，通过自动装配，映射不同的URL到相应的处理函数，并获取参数，对参数进行处理，之后传给服务层**。\n-  写JSP页面调用，请求哪些参数，需要获取什么数据。\n\nDataBase --> Entity --> Mapper.xml --> Mapper.Java --> Service.java --> Controller.java --> .Jsp\n\n\n**说明：**\n- Spring MVC  拥有控制器，作用跟Struts2 类似，接收外部请求，**解析参数传给服务层**\n- Spring 容器属于协调上下文，**管理对象间的依赖，提供事务机制**\n- mybatis 属于orm持久层框架，**将业务实体与数据表联合起来**；\n\n- Spring MVC  控制层，想当于 Struts的作用\n- Spring 控制反转和依赖注入：  创建对象交由容器管理，达到了解耦的作用\n- mybatis 主要用来操作数据库（数据库的增删改查）\n\n- IOC:控制反转，是一种降低对象之间耦合关系的设计思想，面试的时候最好能说出来个例子，加深理解。例子：租房子，以前租房子需要一个房子一个房子找，费时费力，然后现在加入一个房屋中介，把你需要的房型告诉中介，就可以直接选到需要的房子，中介就相当于spring容器。\n\n- AOP:面向切面编程，是面向对象开发的一种补充，**它允许开发人员在不改变原来模型的基础上动态的修改模型以满足新的需求**，如：动态的增加日志、安全或异常处理等。AOP使业务逻辑各部分间的耦合度降低，提高程序可重用性，提高开发效率。\n\n### 持久层：DAO层（mapper）\n\n*   DAO层：DAO层主要是做数据持久层的工作，负责与数据库进行联络的一些任务都封装在此，\n\n    *   DAO层的设计首先是设计DAO的接口，\n    *   然后在Spring的配置文件中定义此接口的实现类，\n    *   然后就可在模块中调用此接口来进行数据业务的处理，而不用关心此接口的具体实现类是哪个类，显得结构非常清晰，\n    *   DAO层的数据源配置，以及有关数据库连接的参数都在Spring的配置文件中进行配置。\n\n### 业务层：Service层\n\n*   Service层：Service层主要负责业务模块的逻辑应用设计。\n    *   首先设计接口，再设计其实现的类\n    *   接着再在Spring的配置文件中配置其实现的关联。这样我们就可以在应用中调用Service接口来进行业务处理。\n    *   Service层的业务实现，具体要调用到已定义的DAO层的接口，\n    *   封装Service层的业务逻辑有利于通用的业务逻辑的独立性和重复利用性，程序显得非常简洁。\n\n### 表现层：Controller层（Handler层）\n\n*   Controller层:Controller层负责具体的**业务模块流程的控制**，\n    *   在此层里面要调用Service层的接口来控制业务流程，\n    *   控制的配置也同样是在Spring的配置文件里面进行，针对具体的业务流程，会有不同的控制器，我们具体的设计过程中可以将流程进行抽象归纳，设计出可以重复利用的子单元流程模块，这样不仅使程序结构变得清晰，也大大减少了代码量。\n\n### View层\n\n*   View层 此层与控制层结合比较紧密，需要二者结合起来协同工发。View层主要负责前台jsp页面的表示.\n\n### 各层联系\n\n*   DAO层，Service层这两个层次都可以单独开发，互相的耦合度很低，完全可以独立进行，这样的一种模式在开发大项目的过程中尤其有优势\n*   Controller，View层因为耦合度比较高，因而要结合在一起开发，但是也可以看作一个整体独立于前两个层进行开发。这样，在层与层之前我们只需要知道接口的定义，调用接口即可完成所需要的逻辑单元应用，一切显得非常清晰简单。\n\n*   Service逻辑层设计\n    *   Service层是建立在DAO层之上的，建立了DAO层后才可以建立Service层，而Service层又是在Controller层之下的，因而Service层应该既调用DAO层的接口，又要提供接口给Controller层的类来进行调用，它刚好处于一个中间层的位置。每个模型都有一个Service接口，每个接口分别封装各自的业务处理方法。\n\n\n\n# SSM三大框架的运行流程、原理、核心技术详解！\n\n## 一、Spring部分\n\n### （一）Spring的运行流程\n\n*   第一步：加载spring 配置文件`ApplicationContext ac = new ClassPathXmlApplicationContext(\"beans.xml\");`，ApplicationContext接口，它由BeanFactory接口派生而来，因而提供了BeanFactory所有的功能。**配置文件中的bean的信息是被加载在HashMap中的，一个bean通常包括，id，class，property等，bean的id对应HashMap中的key，value呢就是bean**\n\n具体如何加载？源码如下:\n\n```java\nif (beanProperty.element(\"map\") != null){  \nMap<String, Object> propertiesMap = new HashMap<String, Object>();  \nElement propertiesListMap = (Element)beanProperty.elements().get(0);  \nIterator<?> propertiesIterator = propertiesListMap .elements().iterator();  \nwhile (propertiesIterator.hasNext()) {  \n\tElement vet = (Element) propertiesIterator.next();  \n\tif(vet.getName().equals(\"entry\")) {  \n\t\tString key = vet.attributeValue(\"key\");  \n\t\tIterator<?> valuesIterator = vet.elements()  .iterator();  \n\t\twhile (valuesIterator.hasNext()) {  \n\t\t\tElement value = (Element) valuesIterator.next();  \n\t\t\tif (value.getName().equals(\"value\")){  \n\t\t\t\tpropertiesMap.put(key, value.getText());  \n\t\t\t}  \n\t\t\tif (value.getName().equals(\"ref\")) {  \n\t\t\t\tpropertiesMap.put(key, new String[]{\n\t\t\t\t\t\tvalue.attributeValue(\"bean\") \n\t\t\t\t\t\t});  \n\t\t\t}  \n\t\t}  \n\t}  \n}  \nbean.getProperties().put(name, propertiesMap);  \n} \n```\n\n*   第二步：调用getBean方法，getBean是用来获取applicationContext.xml文件里bean的，（）写的是bean的id。一般情况都会强转成我们对应的业务层（接口）。例如`SpringService springService =(SpringService)ac.getBean(\"Service\");`\n*   第三步：这样我们就可以调用业务层(接口实现)的方法。\n\n具体如下：\n![原理图](https://img-blog.csdn.net/20180415194047988?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NvbmdfSmlhbmdUYW8=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70)\nJava反射博大精深，我也不很懂，具体请查看[Java基础之—反射](https://blog.csdn.net/sinat_38259539/article/details/71799078)\n\n**那么bean中的东西到底是怎么注入进去的？**简单来讲，就是在实例化一个bean时，实际上就实例化了类，它通过**反射**调用类中set方法将事先保存在HashMap中的类属性注入到类中。这样就回到了我们Java最原始的地方，**对象.方法，对象.属性**\n\n### （二）Spring的原理\n\n*   **什么是spring？**\n\n*   **spring是一个容器框架，它可以接管web层，业务层，dao层，持久层的各个组件，并且可以配置各种bean， 并可以维护bean与bean的关系，当我们需要使用某个bean的时候，我们可以直接getBean(id)，使用即可**\n\n*   Spring目的：就是让对象与对象（模块与模块）之间的关系没有通过代码来关联，都是通过配置类说明管理的（Spring根据这些配置 内部通过反射去动态的组装对象） ，Spring是一个容器，凡是在容器里的对象才会有Spring所提供的这些服务和功能。\n\n*   层次框架图：\n    ![这里写图片描述](https://img-blog.csdn.net/20180415151535222?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NvbmdfSmlhbmdUYW8=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70)\n    说明：\n\n    *   **web层：** struts充当web层，接管jsp，action，表单，主要体现出mvc的**数据输入**，**数据的处理**，**数据**的显示分离\n    *   **model层：** model层在概念上可以理解为包含了**业务层，dao层，持久层**，需要注意的是，一个项目中，不一定每一个层次都有\n    *   **持久层：**体现oop，主要解决关系模型和对象模型之间的**阻抗**\n\n### （三）Spring的核心技术\n\n*   IOC\n    *   **ioc（inverse of control）控制反转：** 所谓反转就是把创建对象（bean）和维护对象（bean）之间的关系的权利从程序转移到spring的容器（spring-config.xml）\n        ![这里写图片描述](https://img-blog.csdn.net/20180415162059434?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NvbmdfSmlhbmdUYW8=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70)\n        说明：`<bean></bean>`这对标签元素的作用：**当我们加载spring框架时，spring就会自动创建一个bean对象，并放入内存**相当于我们常规的new一个对象，而`<property></property>`中的value则是实现了“**对象.set方法**”，这里也体现了注入了概念\n*   DI\n\n    *   **di（dependency injection）依赖注入：** 实际上di和ioc是同一个概念，spring的设计者，**认为di更准确的表示spring的核心**\n    *   **spring提倡接口编程，在配合di技术就可以达到层与层解耦的目的**，为什么呢？因为层与层之间的关联，由框架帮我们做了，这样代码之间的耦合度降低，代码的复用性提高\n    *   接口编程的好处请访问[Java中接口编程的好处以及实现方式的选择？](https://blog.csdn.net/Song_JiangTao/article/details/82389905) \n*   AOP\n\n    *   **aspect oriented programming（面向切面编程）**\n    *   核心：**在不增加代码的基础上，还增加新功能**\n    *   理解：**面向切面：其实是，把一些公共的“东西”拿出来，比如说，事务，安全，日志，这些方面，如果你用的到，你就引入。** 也就是说：当你需要在执行一个操作（方法）之前想做一些事情（比如，开启事务，记录日志等等），那你就用before，如果想在操作之后做点事情（比如，关闭一些连接等等），那你就用after。其他类似\n\n2019-09-03 补充 ：\n\n内容取自《spring源码解析》\n\nspring整体架构图：\n![spring整体架构图](https://img-blog.csdnimg.cn/20190903142522892.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NvbmdfSmlhbmdUYW8=,size_16,color_FFFFFF,t_70)\n1、core container（核心容器）\n\n核心容器包含了core，beans，context和expression language四个模块\n\ncore和beans模块是框架的基础部分，提供IOC和依赖注入特性。这里的基础概念是BeanFactory，它提供对Factory模式的经典实现来消除对程序性单例模式的需要，并真正地允许你从程序逻辑中分离出依赖关系和配置。\n\n*   core模块主要包含了spring框架基本的黑犀牛工具类，spring的其他组建都要用到这个包里的类，core模块是其他组件的基本核心。当然你也可以在自己应用系统中使用这些工具类。\n\n*   beans模块是所有应用都要用到的，它包含访问配置文件，创建和管理bean以及进行ioc，di操作相关的所有类\n\n*   context模块构建与core和beans模块基础之上，提供了一种类似于JNDI注册器的框架式的对象访问方法。context模块继承了beans的特性，为spring核心提供了大量扩展，添加了对国际化（例如资源绑定）、事件传播、资源加载和对context的透明创建的支持。context模块同事也支持j2ee的一些特性，例如EJB，JMX和基础的远程处理，applicationContext接口是context模块的关键。\n\n*   ExpressionLanguage模块提供了强大的表达式语言，用于在运行时查询和操纵对象。他是jsp2.1规范中定义的unifed expression language的扩展。该语言支持设置/获取属性的值，属性的分配，方法的调用 ，访问数组上下文，容器和索引器，逻辑和算数运算符，命名变量以及从spring的ioc容器中根据名称检索对象。它也支持list投影，选择和一般的list聚合\n\n2、Date Access/Integration\n\nDate Access/Integration层包含JDBC，ORM，OXM,JMS和Transaction模块\n\n*   jdbc模块提供了一个jdbc抽象层，他可以消除冗长的jdbc编码和解析数据厂商特有的错误代码。这个模块包含了spring对jdbc数据访问进行封装的所有类。\n\n*   orm模块为流行的对象-关系映射API，如JPA，JDO，Hibernate，iBatis等，提供了一个交互层。利用ORM封装包，可以混合使用所有spring提供的特性进行O/R映射，如前边提到的简单声明性事务管理。spring框架插入了若干个ORM框架 ，从而提供了ORM的对象关系工具，其中包括JDO，hibernate和iBatisSQl Map。所有这些都遵从spring的通用事务和DAO异常层次结构。\n\n*   OXM模块提供了一个对Object/XML映射实现的抽象层，Object/XML映射实现包括JAXB，Castor，XMLBeans，JiBX和XStream。\n\n*   JMS（java massage service）模块主要包含了一些制造和消费消息的特性\n\n*   Transaction模块支持编程和声明性的事务管理，这些事务类必须实现特地的接口。并且对多有的POJO都适用\n\n3、web\n\nweb上下文模块建立在应用程序上下文模块之上，为基于web的应用程序提供了上下文。所以，spring框架支持与Jakarta struts的集成。web模块还简化了处理大部分请求以及将请求参数绑定到域对象的工作。web层包含了web，web-servlet，web-Struts 和web-porlet\n\n*   web模块，提供了基础的面向web的集成特性。例如：多文件上传，使用servlet listeners初始化 Ioc容器已经一个面向web的应用上下文。它还包含spring远程支持中的web的相关部分。\n*   web-servlet模块web.servlet.jar：该模块包含spring的model-view-controller（mvc）实现。spring的mbc框架使得模型范围内的代码和webforms之间能够清楚地分离出来。并与spring框架的其他特性集成在一起。\n*   web-Struts模块，该模块提供了对struts的支持，使得类在spring应用中能够与一个典型的struts web层集成在一起。注意，该支持在spring3.0中已被弃用。\n*   web-portlet模块，提供了用于portlet环境和web-servlet模块的MVC的实现。\n\n4、AOP\n\naop模块提供了一个符合aop联盟标准的面向切面编程的实现，它让你可以定义例如方法拦截器和切点，从而将逻辑代码分开，降低它们之间的耦合性。利用source-level的元数据功能，还可以将各种行为信息合并到你的代码中，这有点像.Net技术中的attribute概念\n\n通过配置管理特性，springAop模块直接将面向界面的编程功能集成到了spring框架中，所以可以很容易地使用spring框架管理的任何对象支持aop，springAop模块为基于spring的应用程序中的对象提供了事务管理服务。通过使用springAop，不用历来EJB组件，就可以将声明性事务管理集成到应用程序中。\n\n*   Aspects模块提供了AspectJ的集成支持。\n*   Instrumentation模块提供了class Instrumentation支持和classloader实现，使用可以再特定的应用服务器上使用。\n\n5、Test\n\ntest模块支持使用JUnit和TestNG对spring组件进行测试。\n\n* * *\n\n# 二、Spring MVC部分\n\n#### 1、Spring MVC的运行流程\n\n*   springMVC框架\n    ![这里写图片描述](https://img-blog.csdn.net/20180503140150984?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NvbmdfSmlhbmdUYW8=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70)\n    **框架执行流程（面试必问）**\n    *   1、用户发送请求至前端控制器DispatcherServlet\n    *   2、DispatcherServlet收到请求调用HandlerMapping处理器映射器。\n    *   3、处理器映射器根据请求url找到具体的处理器，生成处理器对象及处理器拦截器(如果有则生成)一并返回给DispatcherServlet。\n    *   4、DispatcherServlet通过HandlerAdapter处理器适配器调用处理器\n    *   5、执行处理器(Controller，也叫后端控制器)。\n    *   6、Controller执行完成返回ModelAndView\n    *   7、HandlerAdapter将controller执行结果ModelAndView返回给DispatcherServlet\n    *   8、DispatcherServlet将ModelAndView传给ViewReslover视图解析器\n    *   9、ViewReslover解析后返回具体View\n    *   10、DispatcherServlet对View进行渲染视图（即**将模型数据填充至视图中**）。\n    *   11、DispatcherServlet响应用户\n\n#### 2、Spring MVC的原理\n\n*   1、什么是SpringMVC？\n\n*   **springmvc是spring框架的一个模块，springmvc和spring无需通过中间整合层进行整合。**\n\n*   springmvc是一个基于mvc的web框架。\n    ![这里写图片描述](https://img-blog.csdn.net/20180503140031318?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NvbmdfSmlhbmdUYW8=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70)\n\n*   **mvc**\n\n    *   mvc在b/s系统 下的应用：\n        ![这里写图片描述](https://img-blog.csdn.net/20180503140124314?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NvbmdfSmlhbmdUYW8=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70)\n    *   前端控制器DispatcherServlet（不需要程序员开发）\n        *   作用接收请求，响应结果，相当于转发器，中央处理器。有了DispatcherServlet减少了其它组件之间的耦合度。\n    *   处理器映射器HandlerMapping(不需要程序员开发)\n        *   作用：根据请求的url查找Handler\n    *   处理器适配器HandlerAdapter\n        *   作用：按照特定规则（HandlerAdapter要求的规则）去执行Handler\n    *   处理器Handler **(需要程序员开发)**\n        *   注意：编写Handler时按照HandlerAdapter的要求去做，这样适配器才可以去正确执行Handler\n    *   视图解析器View resolver(不需要程序员开发)\n        *   作用：进行视图解析，根据逻辑视图名解析成真正的视图（view）\n    *   视图View **(需要程序员开发)**\n        *   View是一个接口，实现类支持不同的View类型（jsp、freemarker、pdf…）\n*   **struts2与springMVC的区别？**\n\n    1、Struts2是**类级别的拦截**，一个类对应一个request 上下文, SpringMVC是**方法级别的拦截**,一个方法对应一个request上下文,而方法同时又跟一个url对应，,所以说从架构本身上SpringMVC就容易实现restful url,而struts2的架构实现起来要费劲,因为Struts2中Action的一个方法可以对应一个url ,而其类属性却被所有方法共享，这也就无法用注解或其他方式标识其所属方法了。\n\n    2、由上边原因, SpringMVC的**方法之间基本上独立的**,**独享request response数据,**请求数据通过参数获取,处理结果通过ModelMap交回给框架,方法之间不共享变量,而Struts2搞的就比较乱,虽然方法之间也是独立的,但其**所有Action变量是共享的**,这不会影响程序运行,却给我们编码读程序时带来麻烦,每次来了请求就创建一个Action ,**一个Action对象对应一个request 上下文。**\n\n    3、由于Struts2需要针对每个request进行封装,把request , session等servlet生命周期的变量**封装成一个一 个Map** **,供给每个Action使用**,并保证线程安全,所以在原则上,是**比较耗费内存的。**\n\n    4、拦截器实现机制上， Struts2有以自己的**interceptor机制,** SpringMVC用的是**独立的AOP方式**,这样导致Struts2的配置文件量还是比SpringMVC大。\n\n    5、**SpringMVC的入口是servlet ,而Struts2是filter (这里要指出, filter和servlet是不同的。以前认为filter是servlet的一种特殊)**,这就导致 了二者的机制不同,这里就牵涉到servlet和filter的区别了。\n\n    6、**SpringMVC集成了Ajax ,使用非常方便**，只需一个注解@ResponseBody就可以实现，然后直接返回响应文本即可,**而Struts2拦截器集成了Ajax ,在Action中处理时一般必须安装插件或者自己写代码集成进去**,使用起来也相对不方便。\n\n    7、**SpringMVC验证支持JSR303 ,**处理起来相对更加灵活方便,而**Struts2验证比较繁琐,感觉太烦乱。**\n\n    8、**Spring MVC和Spring是无缝的。从这个项目的管理和安全上也比Struts2高**(当然Struts2也可以通过不同的目录结构和相关配置做到SpringMVC-样的效果,但是需要xml配置的地方不少)。\n\n    9、设计思想上, **Struts2更加符合0OP的编程思想**，SpringMVC就比较谨慎,在servlet上扩展。\n\n    10、**SpringMVC开发效率和性能高于Struts2。**\n\n    11、SpringMVC可以认为已经**100%零配置。**\n\n#### 3、Spring MVC的核心技术\n\n*   注解开发（@Controller,@RequestMapping,@ResponseBody。。。。）\n    *   还有Spring的诸多注解，这两者是不需要整合的~\n*   传参，接参（request）\n*   基本配置\n*   文件上传与下载\n    *   Spring MVC中文件上传需要添加Apache Commons FileUpload相关的jar包,\n    *   基于该jar, Spring中提供了MultipartResolver实现类: CommonsMultipartResolver.\n*   拦截器\n*   **其实最核心的还是SpringMVC的执行流程，各个点的作用得搞清楚。**\n\n* * *\n\n# 三、Mybatis部分\n\n#### 1、Mybatis的运行流程\n\n*   **Mybatis运行流程图**：\n    ![这里写图片描述](https://img-blog.csdn.net/20180420191152719?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NvbmdfSmlhbmdUYW8=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70)\n\n第一步：配置文件mybatis.xml，大体如下，\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE configuration PUBLIC \"-//mybatis.org//DTD Config 3.0//EN\"\n        \"http://mybatis.org/dtd/mybatis-3-config.dtd\">\n<configuration>\n    <!-- 引入外部文件\n\t\tresource:引入项目中配置文件\n\t\turl:引入网络中或者路径文件\n\t-->\n    <properties resource=\"jdbc.properties\"/>\n    <settings>\n        <!--<setting name=\"mapUnderscoreToCamelCase\" value=\"true\" />-->\n        <setting name=\"lazyLoadingEnabled\" value=\"true\" />\n        <setting name=\"aggressiveLazyLoading\"  value=\"false\" />\n        <setting name=\"cacheEnabled\" value=\"true\"/>\n    </settings>\n    <typeAliases>\n        <package name=\"com.nuc.entity\"></package>\n    </typeAliases>\n    <!-- - - - - - - 数据库环境配置- - - - - - - - - -->\n    <environments default=\"environments\">\n        <environment id=\"environments\">\n            <transactionManager type=\"JDBC\"/>\n            <dataSource type=\"POOLED\">\n                <property name=\"driver\" value=\"${jdbc.driverClass}\"/>\n                <property name=\"url\" value=\"${jdbc.jdbcUrl}\"/>\n                <property name=\"username\" value=\"${jdbc.user}\"/>\n                <property name=\"password\" value=\"${jdbc.password}\"/>\n            </dataSource>\n        </environment>\n    </environments>\n    <!-- - - - - - - -映射文件路径- - - - - - -->\n    <mappers>\n        <!--自动扫描包下的映射文件，要求：同名，同目录-->\n        <package name=\"com.nuc.mapper\" />\n    </mappers>\n</configuration>\n\n1234567891011121314151617181920212223242526272829303132333435363738\n```\n\n第二步：加载我们的xml文件\n第三步：创建SqlSessionFactoryBuilder\n第四步：创建SqlSessionFactory\n第五步：调用openSession()，开启sqlSession\n第六步：getMapper()来获取我们的mapper（接口），mapper对应的映射文件，在加载mybatis.xml时就会加载\n第七步：使用我们自己的mapper和它对应的xml来完成我们和数据库交互。即增删改查。\n第八步：提交session，关闭session。\n\n代码如下：\n\n```java\nString resource = \"mybatis-config.xml\";\nSqlSession sqlSession = null;\nInputStream inputStream = Resources.getResourceAsStream(resource);//读取mybatis配置文件\n//SqlSessionFactoryBuilder这个类的作用就是为了创建SqlSessionFactory的\nSqlSessionFactoryBuilder builder = new SqlSessionFactoryBuilder();\nSqlSessionFactory factory = builder.build(inputStream);\n/**\n *  factory.openSession(); //需手动提交事务\n *   factory.openSession(true); //系统自动提交事务\n */\nsqlSession = factory.openSession();\nCustomerMapper mapper = sqlSession.getMapper(CustomerMapper.class);\n//增删改查的操作\nsqlSession.commit();//如果没有提交，数据库的数据不会改变\nsqlSession.close();\n\n12345678910111213141516\n```\n\n需要注意的是，sqlSession也自带一些数据交互的操作\n\n#### 2、Mybatis的原理\n\n*   **什么是Mybatis？**\n\n    *   **mybatis专注sql本身**，需要程序员自己编写sql语句，sql修改、优化比较方便。**mybatis是一个不完全 的ORM框架**，虽然程序员自己写sql，mybatis 也可以实现映射（**输入映射、输出映射**）。\n    *   mybatis是一个**持久层的框架**，是apache下的顶级项目。\n    *   mybatis托管到goolecode下，后来托管到github下:[mybatis Github地址](https://github.com/mybatis/mybatis-3/releases)\n    *   mybatis让程序将主要精力放在sql上，通过mybatis提供的映射方式，自由灵活生成（半自动化，大部分需要程序员编写sql）满足需要sql语句。\n    *   mybatis可以将向 preparedStatement中的输入参数自动进行输入映射，将查询结果集灵活映射成java对象。（输出映射）\n*   **mybatis底层实现**\n\n    *   mybatis底层还是采用**原生jdbc**来对数据库进行操作的，只是通过 SqlSessionFactory，SqlSession Executor,StatementHandler，ParameterHandler,ResultHandler和TypeHandler等几个处理器封装了这些过程\n*   **对原生态jdbc程序（单独使用jdbc开发）问题总结：**\n\n    *   1、数据库连接，使用时创建，不使用就关闭，对数据库进行频繁连接开启和关闭，造成数据库资源的浪费\n\n    解决：**使用数据库连接池管理数据库连接**\n\n    *   2、将sql 语句硬编码到Java代码中，如果sql语句修改，需要对java代码重新编译，不利于系统维护\n\n    解决：**将sql语句设置在xml配置文件中，即使sql变化，也无需重新编译**\n\n    *   3、向preparedStatement中设置参数，对占位符位置和设置参数值，硬编码到Java文件中，不利于系统维护\n\n    解决：**将sql语句及占位符，参数全部配置在xml文件中**\n\n    *   4、从resutSet中遍历结果集数据时，存在硬编码，将获取表的字段进行硬编码，不利于系统维护。\n\n    解决：**将查询的结果集，自动映射成java对象**\n\n*   **mybatis工作原理**\n\n    *   mybatis通过配置文件创建sqlsessionFactory，sqlsessionFactory根据配置文件，配置文件来源于两个方面:一个是xml，一个是Java中的注解，获取sqlSession。SQLSession包含了执行sql语句的所有方法，可以通过SQLSession直接运行映射的sql语句，完成对数据的增删改查和事物的提交工作，用完之后关闭SQLSession。\n\n#### 3、Mybatis的核心技术\n\n*   **Mybatis输入映射**\n\n    *   通过parameterType指定输入参数的类型，类型可以是简单类型、hashmap、pojo的包装类型\n*   **Mybatis输出映射**\n    *   **一、resultType**\n        *   作用:将查询结果按照sql列名pojo属性名一致性映射到pojo中。\n\n        *   **使用resultType进行输出映射，只有查询出来的列名和pojo中的属性名一致，该列才可以映射成功。**\n\n        *   如果查询出来的列名和pojo中的属性名全部不一致，则不会创建pojo对象。\n\n        *   只要查询出来的列名和pojo中的属性有一个一致，就会创建pojo对象\n\n        *   **如果查询出来的列名和pojo的属性名不一致，通过定义一个resultMap对列名和pojo属性名之间作一个映射关系。**\n\n    *   **二、resultMap**\n\n        *   使用association和collection完成**一对一和一对多**高级映射（对结果有特殊的映射要求）。\n        *   association：\n            *   作用：将关联查询信息映射到一个**pojo对象**中。\n            *   场合：为了方便查询关联信息可以使用association将关联订单信息映射为用户对象的pojo属性中，比如：查询订单及关联用户信息。\n            *   **使用resultType无法将查询结果映射到pojo对象的pojo属性中，根据对结果集查询遍历的需要选择使用resultType还是resultMap。**\n        *   collection：\n            *   作用：将关联查询信息映射到一个**list集合**中。\n            *   场合：为了方便查询遍历关联信息可以使用collection将关联信息映射到list集合中，比如：查询用户权限范围模块及模块下的菜单，可使用collection将模块映射到模块list中，将菜单列表映射到模块对象的菜单list属性中，这样的作的目的也是方便对查询结果集进行遍历查询。**如果使用resultType无法将查询结果映射到list集合中。**\n*   Mybatis的动态sql\n\n*   什么是动态sql？\n\n    *   mybatis核心 对sql语句进行灵活操作，通过表达式进行判断，对sql进行灵活拼接、组装。\n    *   包括， where ，if，foreach，choose，when，otherwise，set，trim等标签的使用\n*   **数据模型分析思路**\n\n    *   **1、每张表记录的数据内容**\n        *   分模块对每张表记录的内容进行熟悉，相当 于你学习系统 需求（功能）的过程\n    *   **2、每张表重要的字段设置**\n        *   非空字段、外键字段\n*   **3、数据库级别表与表之间的关系**\n\n    *   外键关系\n*   **4、表与表之间的业务关系**\n\n    *   在分析表与表之间的业务关系时一定要建立 在某个业务意义基础上去分析。\\color{red}{在某个业务意义基础上去分析。}在某个业务意义基础上去分析。\n\n\n\n\n# 框架整合示例\n\n[原文链接](https://blog.csdn.net/weixin_30764137/article/details/96416103)\n\n# 3、SSM整合\n\n 下面主要介绍三大框架的整合，至于环境的搭建以及项目的创建，参看上面的博文。这次整合我分了2个配置文件，分别是spring-mybatis.xml，包含spring和mybatis的配置文件，还有个是spring-mvc的配置文件，此外有2个资源文件：jdbc.propertis和log4j.properties。完整目录结构如下（最后附上源码下载地址）：\n ![](https://images2015.cnblogs.com/blog/441423/201508/441423-20150830174644562-871463833.png)\n\n使用框架的版本：\nSpring 4.0.2 RELEASE\nSpring MVC 4.0.2 RELEASE\nMyBatis 3.2.6\n\n## 3.1、Maven引入需要的JAR包\n\n  在pom.xml中引入jar包\n```xml\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n    <modelVersion>4.0.0</modelVersion>\n    <groupId>com.javen.maven01</groupId>\n    <artifactId>maven01</artifactId>\n    <packaging>war</packaging>\n    <version>0.0.1-SNAPSHOT</version>\n    <name>maven01 Maven Webapp</name>\n    <url>http://maven.apache.org</url>\n\n    <properties>  \n        <!-- spring版本号 -->  \n        <spring.version>4.0.2.RELEASE</spring.version>  \n        <!-- mybatis版本号 -->  \n        <mybatis.version>3.2.6</mybatis.version>  \n        <!-- log4j日志文件管理包版本 -->  \n        <slf4j.version>1.7.7</slf4j.version>  \n        <log4j.version>1.2.17</log4j.version>  \n    </properties> \n\n    <dependencies>\n        <dependency>\n            <groupId>junit</groupId>\n            <artifactId>junit</artifactId>\n            <version>3.8.1</version>\n             <!-- 表示开发的时候引入，发布的时候不会加载此包 -->  \n            <scope>test</scope>\n        </dependency>\n        <!-- <dependency>\n            <groupId>javax.servlet</groupId>\n            <artifactId>javax.servlet-api</artifactId>\n            <version>3.1.0</version>\n        </dependency> -->\n\n         <!-- =======spring核心包 ========= -->  \n        <dependency>  \n            <groupId>org.springframework</groupId>  \n            <artifactId>spring-core</artifactId>  \n            <version>${spring.version}</version>  \n        </dependency>  \n\n        <dependency>  \n            <groupId>org.springframework</groupId>  \n            <artifactId>spring-web</artifactId>  \n            <version>${spring.version}</version>  \n        </dependency>  \n        <dependency>  \n            <groupId>org.springframework</groupId>  \n            <artifactId>spring-oxm</artifactId>  \n            <version>${spring.version}</version>  \n        </dependency>  \n        <dependency>  \n            <groupId>org.springframework</groupId>  \n            <artifactId>spring-tx</artifactId>  \n            <version>${spring.version}</version>  \n        </dependency>  \n\n        <dependency>  \n            <groupId>org.springframework</groupId>  \n            <artifactId>spring-jdbc</artifactId>  \n            <version>${spring.version}</version>  \n        </dependency>  \n\n        <dependency>  \n            <groupId>org.springframework</groupId>  \n            <artifactId>spring-webmvc</artifactId>  \n            <version>${spring.version}</version>  \n        </dependency>  \n        <dependency>  \n            <groupId>org.springframework</groupId>  \n            <artifactId>spring-aop</artifactId>  \n            <version>${spring.version}</version>  \n        </dependency>  \n\n        <dependency>  \n            <groupId>org.springframework</groupId>  \n            <artifactId>spring-context-support</artifactId>  \n            <version>${spring.version}</version>  \n        </dependency>  \n\n        <dependency>  \n            <groupId>org.springframework</groupId>  \n            <artifactId>spring-test</artifactId>  \n            <version>${spring.version}</version>  \n        </dependency>  \n\n\n        <!-- =========  mybatis核心包  ================= -->  \n        <dependency>  \n            <groupId>org.mybatis</groupId>  \n            <artifactId>mybatis</artifactId>  \n            <version>${mybatis.version}</version>  \n        </dependency>  \n         <!-- mybatis/spring包 -->  \n        <dependency>  \n            <groupId>org.mybatis</groupId>  \n            <artifactId>mybatis-spring</artifactId>  \n            <version>1.2.2</version>  \n        </dependency>  \n\n         <!-- 导入java ee jar 包 -->  \n        <dependency>  \n            <groupId>javax</groupId>  \n            <artifactId>javaee-api</artifactId>  \n            <version>7.0</version>  \n        </dependency>  \n\n         <!-- 导入Mysql数据库链接jar包 -->  \n        <dependency>  \n            <groupId>mysql</groupId>  \n            <artifactId>mysql-connector-java</artifactId>  \n            <version>5.1.36</version>  \n        </dependency>  \n        <!-- 导入dbcp的jar包，用来在applicationContext.xml中配置数据库 -->  \n        <dependency>  \n            <groupId>commons-dbcp</groupId>  \n            <artifactId>commons-dbcp</artifactId>  \n            <version>1.2.2</version>  \n        </dependency>  \n\n        <!-- JSTL标签类 -->  \n        <dependency>  \n            <groupId>jstl</groupId>  \n            <artifactId>jstl</artifactId>  \n            <version>1.2</version>  \n        </dependency>  \n        <!-- 日志文件管理包 -->  \n        <!-- log start -->  \n        <dependency>  \n            <groupId>log4j</groupId>  \n            <artifactId>log4j</artifactId>  \n            <version>${log4j.version}</version>  \n        </dependency>  \n\n        <!-- 格式化对象，方便输出日志 -->  \n        <dependency>  \n            <groupId>com.alibaba</groupId>  \n            <artifactId>fastjson</artifactId>  \n            <version>1.1.41</version>  \n        </dependency>  \n\n        <dependency>  \n            <groupId>org.slf4j</groupId>  \n            <artifactId>slf4j-api</artifactId>  \n            <version>${slf4j.version}</version>  \n        </dependency>  \n\n        <dependency>  \n            <groupId>org.slf4j</groupId>  \n            <artifactId>slf4j-log4j12</artifactId>  \n            <version>${slf4j.version}</version>  \n        </dependency>  \n        <!-- log end -->  \n        <!-- 映入JSON -->  \n        <dependency>  \n            <groupId>org.codehaus.jackson</groupId>  \n            <artifactId>jackson-mapper-asl</artifactId>  \n            <version>1.9.13</version>  \n        </dependency>  \n        \n        <!-- ====上传组件包======== -->  \n        <dependency>  \n            <groupId>commons-fileupload</groupId>  \n            <artifactId>commons-fileupload</artifactId>  \n            <version>1.3.1</version>  \n        </dependency>  \n        <dependency>  \n            <groupId>commons-io</groupId>  \n            <artifactId>commons-io</artifactId>  \n            <version>2.4</version>  \n        </dependency>  \n        <dependency>  \n            <groupId>commons-codec</groupId>  \n            <artifactId>commons-codec</artifactId>  \n            <version>1.9</version>  \n        </dependency>  \n\n    </dependencies>\n\n    <build>\n        <finalName>maven01</finalName>\n        <plugins>\n            <plugin>\n                <groupId>org.eclipse.jetty</groupId>\n                <artifactId>jetty-maven-plugin</artifactId>\n                <version>9.2.8.v20150217</version>\n                <configuration>\n                    <httpConnector>\n                        <port>80</port>\n                    </httpConnector>\n                    <stopKey>shutdown</stopKey>\n                    <stopPort>9966</stopPort>\n                </configuration>\n            </plugin>\n        </plugins>\n    </build>\n\n</project>\n```\n\n\n\n## 3.2、整合SpringMVC\n\n### 3.2.1、配置spring-mvc.xml\n\n配置里面的注释也很详细，主要是**自动扫描控制器，视图模式，注解的启动**这三个。\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>  \n<beans xmlns=\"http://www.springframework.org/schema/beans\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:p=\"http://www.springframework.org/schema/p\" xmlns:context=\"http://www.springframework.org/schema/context\" xmlns:mvc=\"http://www.springframework.org/schema/mvc\" xsi:schemaLocation=\"http://www.springframework.org/schema/beans    \n                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd    \n                        http://www.springframework.org/schema/context    \n                        http://www.springframework.org/schema/context/spring-context-3.1.xsd    \n                        http://www.springframework.org/schema/mvc    \n                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd\">  \n    <!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->  \n    <context:component-scan base-package=\"com.javen.controller\" />  \n    <!-- 扩充了注解驱动，可以将请求参数绑定到控制器参数 -->\n    <mvc:annotation-driven/>\n    <!-- 静态资源处理  css js imgs -->\n    <mvc:resources location=\"/resources/**\" mapping=\"/resources\"/>\n\n    <!--避免IE执行AJAX时，返回JSON出现下载文件 -->  \n    <bean id=\"mappingJacksonHttpMessageConverter\" class=\"org.springframework.http.converter.json.MappingJacksonHttpMessageConverter\">  \n        <property name=\"supportedMediaTypes\">  \n            <list>  \n                <value>text/html;charset=UTF-8</value>  \n            </list>  \n        </property>  \n    </bean>  \n    <!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->  \n    <bean class=\"org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter\">  \n        <property name=\"messageConverters\">  \n            <list>  \n                <ref bean=\"mappingJacksonHttpMessageConverter\" /> <!-- JSON转换器 -->  \n            </list>  \n        </property>  \n    </bean>  \n\n    <!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->  \n    <bean id=\"multipartResolver\" class=\"org.springframework.web.multipart.commons.CommonsMultipartResolver\">    \n        <!-- 默认编码 -->  \n        <property name=\"defaultEncoding\" value=\"utf-8\" />    \n        <!-- 文件大小最大值 -->  \n        <property name=\"maxUploadSize\" value=\"10485760000\" />    \n        <!-- 内存中的最大值 -->  \n        <property name=\"maxInMemorySize\" value=\"40960\" />    \n        <!-- 启用是为了推迟文件解析，以便捕获文件大小异常 -->\n        <property name=\"resolveLazily\" value=\"true\"/>\n    </bean>   \n\n    <!-- 配置ViewResolver 。可用多个ViewResolver 。使用order属性排序。   InternalResourceViewResolver 放在最后-->\n    <bean class=\"org.springframework.web.servlet.view.ContentNegotiatingViewResolver\">\n    <property name=\"order\" value=\"1\"></property>\n        <property name=\"mediaTypes\">\n            <map>\n                <!-- 告诉视图解析器，返回的类型为json格式 -->\n                <entry key=\"json\" value=\"application/json\" />\n                <entry key=\"xml\" value=\"application/xml\" />\n                <entry key=\"htm\" value=\"text/htm\" />\n            </map>\n        </property>\n        <property name=\"defaultViews\">\n            <list>\n                <!-- ModelAndView里的数据变成JSON -->\n                <bean class=\"org.springframework.web.servlet.view.json.MappingJacksonJsonView\" />\n            </list>\n        </property>\n        <property name=\"ignoreAcceptHeader\" value=\"true\"></property>\n    </bean>\n\n   <!-- 定义跳转的文件的前后缀 ，视图模式配置-->  \n    <bean class=\"org.springframework.web.servlet.view.InternalResourceViewResolver\">  \n        <!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->  \n        <property name=\"prefix\" value=\"/WEB-INF/jsp/\" />  \n        <property name=\"suffix\" value=\".jsp\" />  \n    </bean>  \n</beans>  \n```\n\n\n\n### 3.2.2、配置web.xml文件\n\n 配置的spring-mvc的Servlet就是为了完成SpringMVC+MAVEN的整合。\n\nweb.xml  \n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>  \n<web-app xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns=\"http://java.sun.com/xml/ns/javaee\" xsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\" version=\"3.0\">  \n    <display-name>Archetype Created Web Application</display-name>  \n    <!-- Spring和mybatis的配置文件 -->  \n   <!-- <context-param>  \n        <param-name>contextConfigLocation</param-name>  \n        <param-value>classpath:spring-mybatis.xml</param-value>  \n    </context-param> -->\n    <!-- 编码过滤器 -->  \n    <filter>  \n        <filter-name>encodingFilter</filter-name>  \n        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>  \n        <async-supported>true</async-supported>  \n        <init-param>  \n            <param-name>encoding</param-name>  \n            <param-value>UTF-8</param-value>  \n        </init-param>  \n    </filter>  \n    <filter-mapping>  \n        <filter-name>encodingFilter</filter-name>  \n        <url-pattern>/*</url-pattern>  \n    </filter-mapping>  \n    <!-- Spring监听器 -->  \n   <!-- <listener>  \n        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>  \n    </listener> -->\n    <!-- 防止Spring内存溢出监听器 -->  \n    <!-- <listener>  \n        <listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>  \n    </listener> --> \n\n    <!-- Spring MVC servlet -->  \n    <servlet>  \n        <servlet-name>SpringMVC</servlet-name>  \n        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>  \n        <init-param>  \n            <param-name>contextConfigLocation</param-name>  \n            <param-value>classpath:spring-mvc.xml</param-value>  \n        </init-param>  \n        <load-on-startup>1</load-on-startup>  \n        <async-supported>true</async-supported>  \n    </servlet>  \n    <servlet-mapping>  \n        <servlet-name>SpringMVC</servlet-name>  \n        <!-- 此处可以可以配置成*.do，对应struts的后缀习惯 -->  \n        <url-pattern>/</url-pattern>  \n    </servlet-mapping>  \n    <welcome-file-list>  \n        <welcome-file>/index.jsp</welcome-file>  \n    </welcome-file-list>  \n\n</web-app>  \n```\n\n### 3.2.3、Log4j的配置\n\n   为了方便调试，一般都会使用日志来输出信息，Log4j是Apache的一个开放源代码项目，通过使用Log4j，我们可以控制日志信息输送的目的地是控制台、文件、GUI组件，甚至是套接口服务器、NT的事件记录器、UNIX Syslog守护进程等；我们也可以控制每一条日志的输出格式；通过定义每一条日志信息的级别，我们能够更加细致地控制日志的生成过程。\n\n Log4j的配置很简单，而且也是通用的，下面给出一个基本的配置，换到其他项目中也无需做多大的调整，如果想做调整或者想了解Log4j的各种配置，参看我转载的一篇博文，很详细：[http://blog.csdn.net/zhshulin/article/details/37937365](http://blog.csdn.net/zhshulin/article/details/37937365)\n\n下面给出配置文件目录：\n\n ![](https://images2015.cnblogs.com/blog/441423/201508/441423-20150830161022859-271175533.png)\n\nlog4j.properties\n```properties\nlog4j.rootLogger=INFO,Console,File  \n#定义日志输出目的地为控制台  \nlog4j.appender.Console=org.apache.log4j.ConsoleAppender  \nlog4j.appender.Console.Target=System.out  \n#可以灵活地指定日志输出格式，下面一行是指定具体的格式  \nlog4j.appender.Console.layout = org.apache.log4j.PatternLayout  \nlog4j.appender.Console.layout.ConversionPattern=[%c] - %m%n  \n\n#文件大小到达指定尺寸的时候产生一个新的文件  \nlog4j.appender.File = org.apache.log4j.RollingFileAppender  \n#指定输出目录  \nlog4j.appender.File.File = logs/ssm.log  \n#定义文件最大大小  \nlog4j.appender.File.MaxFileSize = 10MB  \n# 输出所以日志，如果换成DEBUG表示输出DEBUG以上级别日志  \nlog4j.appender.File.Threshold = ALL  \nlog4j.appender.File.layout = org.apache.log4j.PatternLayout  \nlog4j.appender.File.layout.ConversionPattern =[%p] [%d{yyyy-MM-dd HH\\:mm\\:ss}][%c]%m%n  \n```\n\n\n\n### 3.2.4、使用Jetty测试\n\n![](https://images2015.cnblogs.com/blog/441423/201508/441423-20150830165405344-862946687.png)\n实体类 User.java\n```java\npackage com.javen.model;\n\npublic class User {\n    private Integer id;\n\n    private String userName;\n\n    private String password;\n\n    private Integer age;\n\n    public Integer getId() {\n        return id;\n    }\n\n    public void setId(Integer id) {\n        this.id = id;\n    }\n\n    public String getUserName() {\n        return userName;\n    }\n\n    public void setUserName(String userName) {\n        this.userName = userName == null ? null : userName.trim();\n    }\n\n    public String getPassword() {\n        return password;\n    }\n\n    public void setPassword(String password) {\n        this.password = password == null ? null : password.trim();\n    }\n\n    public Integer getAge() {\n        return age;\n    }\n\n    public void setAge(Integer age) {\n        this.age = age;\n    }\n\n    @Override\n    public String toString() {\n        return \"User [id=\" + id + \", userName=\" + userName + \", password=\"\n                + password + \", age=\" + age + \"]\";\n    }\n    \n    \n}\n```\n\nUserController.java\n```java\npackage com.javen.controller;\nimport javax.servlet.http.HttpServletRequest;\n\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.springframework.stereotype.Controller;  \nimport org.springframework.ui.Model;  \nimport org.springframework.web.bind.annotation.RequestMapping;  \nimport org.springframework.web.bind.annotation.RequestMethod;\nimport com.javen.model.User;\n  \n  \n@Controller  \n@RequestMapping(\"/user\")  \n// /user/**\npublic class UserController {  \n    private static Logger log=LoggerFactory.getLogger(UserController.class);\n      \n    \n    // /user/test?id=1\n    @RequestMapping(value=\"/test\",method=RequestMethod.GET)  \n    public String test(HttpServletRequest request,Model model){  \n        int userId = Integer.parseInt(request.getParameter(\"id\"));  \n        System.out.println(\"userId:\"+userId);\n        User user=null;\n        if (userId==1) {\n             user = new User();  \n             user.setAge(11);\n             user.setId(1);\n             user.setPassword(\"123\");\n             user.setUserName(\"javen\");\n        }\n       \n        log.debug(user.toString());\n        model.addAttribute(\"user\", user);  \n        return \"index\";  \n    }  \n}  \n```\n\n\n ![](https://images2015.cnblogs.com/blog/441423/201508/441423-20150830165700734-984268491.png) ![](https://images2015.cnblogs.com/blog/441423/201508/441423-20150830165755156-107359445.png)\n\n在浏览器中输入：http://localhost/user/test?id=1\n\n![](https://images2015.cnblogs.com/blog/441423/201508/441423-20150830165857500-208786509.png)\n\n**到此 SpringMVC+Maven 整合完毕**\n\n### 3.3 Spring与MyBatis的整合\n\n取消 3.2.2 web.xml中注释的代码\n\n### 3.3.1、建立JDBC属性文件\n\njdbc.properties（文件编码修改为utf-8）\n```properties\ndriver=com.mysql.jdbc.Driver\nurl=jdbc:mysql://localhost:3306/maven\nusername=root\npassword=root\n#定义初始连接数  \ninitialSize=0 #定义最大连接数  \nmaxActive=20 #定义最大空闲  \nmaxIdle=20 #定义最小空闲  \nminIdle=1 #定义最长等待时间  \nmaxWait=60000  \n```\n\n**此时的目录结构为**\n\n ![](https://images2015.cnblogs.com/blog/441423/201508/441423-20150830170643640-637516889.png)\n\n### 3.3.2、建立spring-mybatis.xml配置文件\n\n这个文件就是用来完成spring和mybatis的整合的。这里面也没多少行配置，主要的就是自动扫描，自动注入，配置数据库。注释也很详细，大家看看就明白了。\n\nspring-mybatis.xml\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>  \n<beans xmlns=\"http://www.springframework.org/schema/beans\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:p=\"http://www.springframework.org/schema/p\" xmlns:context=\"http://www.springframework.org/schema/context\" xmlns:mvc=\"http://www.springframework.org/schema/mvc\" xsi:schemaLocation=\"http://www.springframework.org/schema/beans    \n                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd    \n                        http://www.springframework.org/schema/context    \n                        http://www.springframework.org/schema/context/spring-context-3.1.xsd    \n                        http://www.springframework.org/schema/mvc    \n                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd\">  \n    <!-- 自动扫描 -->  \n    <context:component-scan base-package=\"com.javen\" />  \n\n    <!-- 引入配置文件 -->  \n    <bean id=\"propertyConfigurer\" class=\"org.springframework.beans.factory.config.PropertyPlaceholderConfigurer\">  \n        <property name=\"location\" value=\"classpath:jdbc.properties\" />  \n    </bean>  \n\n    <bean id=\"dataSource\" class=\"org.apache.commons.dbcp.BasicDataSource\" destroy-method=\"close\">  \n        <property name=\"driverClassName\" value=\"${driver}\" />  \n        <property name=\"url\" value=\"${url}\" />  \n        <property name=\"username\" value=\"${username}\" />  \n        <property name=\"password\" value=\"${password}\" />  \n        <!-- 初始化连接大小 -->  \n        <property name=\"initialSize\" value=\"${initialSize}\"></property>  \n        <!-- 连接池最大数量 -->  \n        <property name=\"maxActive\" value=\"${maxActive}\"></property>  \n        <!-- 连接池最大空闲 -->  \n        <property name=\"maxIdle\" value=\"${maxIdle}\"></property>  \n        <!-- 连接池最小空闲 -->  \n        <property name=\"minIdle\" value=\"${minIdle}\"></property>  \n        <!-- 获取连接最大等待时间 -->  \n        <property name=\"maxWait\" value=\"${maxWait}\"></property>  \n    </bean>  \n\n    <!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->  \n    <bean id=\"sqlSessionFactory\" class=\"org.mybatis.spring.SqlSessionFactoryBean\">  \n        <property name=\"dataSource\" ref=\"dataSource\" />  \n        <!-- 自动扫描mapping.xml文件 -->  \n        <property name=\"mapperLocations\" value=\"classpath:com/javen/mapping/*.xml\"></property>  \n    </bean>  \n\n    <!-- DAO接口所在包名，Spring会自动查找其下的类 -->  \n    <bean class=\"org.mybatis.spring.mapper.MapperScannerConfigurer\">  \n        <property name=\"basePackage\" value=\"com.javen.dao\" />  \n        <property name=\"sqlSessionFactoryBeanName\" value=\"sqlSessionFactory\"></property>  \n    </bean>  \n\n    <!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->  \n    <bean id=\"transactionManager\" class=\"org.springframework.jdbc.datasource.DataSourceTransactionManager\">  \n        <property name=\"dataSource\" ref=\"dataSource\" />  \n    </bean>  \n\n</beans>  \n\n```\n\n\n### 3.4、JUnit测试\n\n  经过以上步骤，我们已经完成了Spring和mybatis的整合，这样我们就可以编写一段测试代码来试试是否成功了。\n\n#### 3.4.1、创建测试用表\n\n既然我们需要测试，那么我们就需要建立在数据库中建立一个测试表，这个表建的很简单，SQL语句为：\n```sql\n-- -- -- \n-- Table structure for `user_t` \n-- ------\nDROP TABLE IF EXISTS `user_t`; CREATE TABLE `user_t` (\n  `id` int(11) NOT NULL AUTO_INCREMENT,\n  `user_name` varchar(40) NOT NULL,\n  `password` varchar(255) NOT NULL,\n  `age` int(4) NOT NULL, PRIMARY KEY (`id`)\n) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8; \n\n-- ---------------------------- \n-- Records of user_t -- \n----------------------------\n\nINSERT INTO `user_t` VALUES ('1', '测试', '345', '24'); INSERT INTO `user_t` VALUES ('2', 'javen', '123', '10');\n```\n\n\n\n#### 3.4.2、利用MyBatis Generator自动创建代码\n\n参考博文：[http://blog.csdn.net/zhshulin/article/details/23912615](http://blog.csdn.net/zhshulin/article/details/23912615)\n\n 这个可根据表自动创建实体类、MyBatis映射文件以及DAO接口，当然，我习惯将生成的接口名改为IUserDao，而不是直接用它生成的UserMapper。如果不想麻烦就可以不改。完成后将文件复制到工程中。如图：\n\n![](https://images2015.cnblogs.com/blog/441423/201508/441423-20150830172815890-478987509.png)\n\n#### 3.4.3、建立Service接口和实现类\n\n![](https://images2015.cnblogs.com/blog/441423/201508/441423-20150830173103875-2026469790.png)\n\n下面给出具体的内容：\n\nIUserService.java\n```java\npackage com.javen.service;  \n\nimport com.javen.model.User;\n  \n  \npublic interface IUserService {  \n    public User getUserById(int userId);  \n}  \nUserServiceImpl.java\n\npackage com.javen.service.impl;\nimport javax.annotation.Resource;  \n\nimport org.springframework.stereotype.Service;  \nimport com.javen.dao.IUserDao;\nimport com.javen.model.User;\nimport com.javen.service.IUserService;\n  \n  \n@Service(\"userService\")  \npublic class UserServiceImpl implements IUserService {  \n    @Resource  \n    private IUserDao userDao;  \n    \n    public User getUserById(int userId) {  \n        // TODO Auto-generated method stub  \n        return this.userDao.selectByPrimaryKey(userId);  \n    }  \n  \n}  \n```\n\n#### 3.4.4、建立测试类\n\n 测试类在src/test/java中建立，下面测试类中注释掉的部分是不使用Spring时，一般情况下的一种测试方法；如果使用了Spring那么就可以使用注解的方式来引入配置文件和类，然后再将service接口对象注入，就可以进行测试了。\n\n如果测试成功，表示Spring和Mybatis已经整合成功了。输出信息使用的是Log4j打印到控制台。\n\n```java\npackage com.javen.testmybatis;\n\nimport javax.annotation.Resource;  \n\nimport org.apache.log4j.Logger;  \nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.springframework.test.context.ContextConfiguration;  \nimport org.springframework.test.context.junit4.SpringJUnit4ClassRunner;  \nimport com.alibaba.fastjson.JSON;  \nimport com.javen.model.User;\nimport com.javen.service.IUserService;\n  \n@RunWith(SpringJUnit4ClassRunner.class)     //表示继承了SpringJUnit4ClassRunner类  \n@ContextConfiguration(locations = {\"classpath:spring-mybatis.xml\"})  \n  \npublic class TestMyBatis {  \n    private static Logger logger = Logger.getLogger(TestMyBatis.class);  \n//  private ApplicationContext ac = null;  \n    @Resource  \n    private IUserService userService = null;  \n  \n//  @Before  \n//  public void before() {  \n//      ac = new ClassPathXmlApplicationContext(\"applicationContext.xml\");  \n//      userService = (IUserService) ac.getBean(\"userService\");  \n//  }  \n  \n    @Test  \n    public void test1() {  \n        User user = userService.getUserById(1);  \n        // System.out.println(user.getUserName());  \n        // logger.info(\"值：\"+user.getUserName());  \n        logger.info(JSON.toJSONString(user));  \n    }  \n}  \n```\n\n\n测试结果 \n\n![](https://images2015.cnblogs.com/blog/441423/201508/441423-20150830173453859-1226139271.png)\n\n#### 3.4.5、建立UserController类\n\nUserController.java  控制器   \n```java\npackage com.javen.testmybatis;\n\nimport javax.annotation.Resource;  \n\nimport org.apache.log4j.Logger;  \nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.springframework.test.context.ContextConfiguration;  \nimport org.springframework.test.context.junit4.SpringJUnit4ClassRunner;  \nimport com.alibaba.fastjson.JSON;  \nimport com.javen.model.User;\nimport com.javen.service.IUserService;\n  \n@RunWith(SpringJUnit4ClassRunner.class)     //表示继承了SpringJUnit4ClassRunner类  \n@ContextConfiguration(locations = {\"classpath:spring-mybatis.xml\"})  \n  \npublic class TestMyBatis {  \n    private static Logger logger = Logger.getLogger(TestMyBatis.class);  \n//  private ApplicationContext ac = null;  \n    @Resource  \n    private IUserService userService = null;  \n  \n//  @Before  \n//  public void before() {  \n//      ac = new ClassPathXmlApplicationContext(\"applicationContext.xml\");  \n//      userService = (IUserService) ac.getBean(\"userService\");  \n//  }  \n  \n    @Test  \n    public void test1() {  \n        User user = userService.getUserById(1);  \n        // System.out.println(user.getUserName());  \n        // logger.info(\"值：\"+user.getUserName());  \n        logger.info(JSON.toJSONString(user));  \n    }  \n}  \n```\n\n\n#### 3.4.6、新建jsp页面\n\nfile.jsp\n```jsp\n<%@ page language=\"java\" contentType=\"text/html; charset=utf-8\" pageEncoding=\"utf-8\"%>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n<html>\n<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n<title>Insert title here</title>\n</head>\n<body>\n    <h1>上传文件</h1>\n    <form method=\"post\" action=\"/user/doUpload\" enctype=\"multipart/form-data\">\n        <input type=\"file\" name=\"file\"/>\n        <input type=\"submit\" value=\"上传文件\"/>\n\n    </form>\n</body>\n</html>\n\nindex.jsp\n\n<html>\n<body>\n<h2>Hello World!</h2>\n</body>\n</html>\n```\n\nshowUser.jsp\n\n```jsp\n<%@ page language=\"java\" import=\"java.util.*\" pageEncoding=\"utf-8\"%>  \n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\">  \n<html>  \n  <head>  \n    <title>测试</title>  \n  </head>  \n\n  <body> ${user.userName} </body>  \n</html>\n```\n  \n\n**至此，完成Spring+SpingMVC+mybatis这三大框架整合完成。**\n\n#### 3.4.7、部署项目\n\n**输入地址：http://localhost/user/jsontype/2**\n\n![](https://images2015.cnblogs.com/blog/441423/201508/441423-20150830174520609-1121228290.png)\n\n  项目下载地址：[https://github.com/Javen205/SSM](https://github.com/Javen205/SSM)\n\n**    参考博客：http://blog.csdn.net/gebitan505/article/details/44455235**\n\n\n\n",[[1571274364273,["GJX@GJXAIOU",[[1,141,"；"]],[141,141],[142,142]]],[1571274543782,["GJX@GJXAIOU",[[-1,1824,"\n"]],[1823,1823],[1822,1822]]],[1571274544533,["GJX@GJXAIOU",[[-1,1823,"\n"]],[1822,1822],[1821,1821]]]],null,"GJX@GJXAIOU"],["bdf770dd-5125-4a1f-afa5-8fe7149a1e49",1573979343139,"# SSM框架原理,作用及使用方法\n\n## 一、框架原理\n\n### （一）SSM 作用\n\nSSM 框架是 spring MVC ，spring 和 mybatis 框架的整合，是标准的 MVC 模式，将整个系统划分为表现层，controller层，service 层，DAO 层四层；\n\n- 使用spring MVC负责**请求的转发和视图管理**\n- spring实现业务对象管理\n- mybatis作为数据对象的持久化引擎\n\n### （二）实现原理\n\n- **spring MVC**\n  - DNS 负责域名的解析, 比如访问www.baidu.com 先找到DNS获取相应的服务器IP和端口；\n  - 请求消息到达端口以后由**TOMCAT主动去询问**自己占用的端口是否由请求发来；\n  - 如果有请求TOMCAT**交给对应的项目**处理；\n  - 客户端发送请求到 DispacherServlet（前端控制器即分发器），这里可以设置拦截器，对请求进行过滤处理；\n  - 由 DispacherServlet 控制器查询 HanderMapping，通过解析请求，判断请求希望执行的具体方法，即找到处理请求的 Controller；\n这个map表由很多key:value键值对组成, key值是controller的名字(@mapping ...), value值是该controller所在类的地址和方法签名;\n(一个类中可能由很多controller)这个找到controller位置并实例化的过程叫做**反射**\n反射得到实例后通过**代理**执行相应的方法即相应controller;\n  - 通过 HandlerAdapter 调用具体的 Controller 方法；\n  - Controller 调用业务逻辑处理后，返回 ModelAndView，即控制器结果返回给视图解析器；\n  - DispacherServlet 查询视图解析器，找到ModelAndView 指定的视图\n  - 视图负责将结果显示到客户端\n\n![SpringMVC 流程](%E6%A1%86%E6%9E%B6%E6%95%B4%E5%90%88%EF%BC%9ASSM%E6%A1%86%E6%9E%B6%E5%8E%9F%E7%90%86,%E4%BD%9C%E7%94%A8%E5%8F%8A%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95.resource/SpringMVC%20%E6%B5%81%E7%A8%8B.png)\n\n**上面补充：**\n- 拦截器：拦截器主要是在 SpringMVC 的 controller 处理请求之前，对请求做一些处理，拦截器拦截的是 Controller，拦截器分为：HandlerInterceptro（springmvc 的）和 WebRequestInterceptor（spring 的），同时里面一共有三个方法，可以实现部分，主要是拦截位置不同，整体的指向顺序为： preHandle ->进入控制器（controller）-> postHandler -> JSP -> afterCompletion；\n\n- **配置文件**\n  - web.xml：在 <servlet> 中要配置前端控制器，springmvc 的配置文件位置、自启动、拦截器以及编码过滤器；\n  - springmvc.xml ：配置扫描包，即项目中所有 controller 位置，配置注解驱动（一般使用注解），配置不要拦截静态资源、自定义视图解析器（就是前后缀，可以和 controller 的返回值相连接，构成完整的页面路径）；\n  - controller 中代码示例：\n```java\n@controller // 将该类交给容器管理\npublic class demo(){\n    @RequestMapping(\"A\")\n    public String hello(){\n        return \"main\";\n    }\n    @RequestMapping(\"B\")\n    public String hello(){\n        return \"main\";\n    }\n}\n```\n然后在 jsp 的例如表单中的 action 属性配置为：A，将这个请求和控制器进行映射了，这个请求对应会调用 hello 这个控制器；\n\n- 同时 springmvc 将 jsp 中的参数值传递给 controller 中可以采用方法有：\n  - HandlerMenthod；\n  - Map\n  - Model 接口\n  - ModelAndView 类\n\n- Spring：我们平时开发接触最多的估计就是IOC容器，**它可以装载bean（也就是我们Java中的类，当然也包括service dao里面的**），有了这个机制，我们就不用在每次使用这个类的时候为它初始化，很少看到关键字new。另外spring的aop，事务管理等等都是我们经常用到的。\n\n- Mybatis：mybatis是对jdbc的封装，它让数据库底层操作变的透明。mybatis的操作都是围绕一个sqlSessionFactory实例展开的。**mybatis通过配置文件关联到各实体类的Mapper文件，Mapper文件中配置了每个类对数据库所需进行的sql语句映射**。在每次与数据库交互时，通过sqlSessionFactory拿到一个sqlSession，再执行sql命令。\n\n### （三）使用方法\n要完成一个功能：\n\n- 先写实体类entity，定义对象的属性，（可以参照数据库中表的字段来设置，数据库的设计应该在所有编码开始之前）。\n- 写Mapper.xml（Mybatis），其中定义你的功能，对应要对数据库进行的那些操作，比如 insert、selectAll、selectByKey、delete、update等。\n- 写Mapper.java，将**Mapper.xml中的操作按照id映射成Java函数**。\n- 写Service.java，为==**控制层提供服务，接受控制层的参数，完成相应的功能，并返回给控制层**==。\n- 写Controller.java，**连接页面请求和服务层**，**获取页面请求的参数，通过自动装配，映射不同的URL到相应的处理函数，并获取参数，对参数进行处理，之后传给服务层**。\n-  写JSP页面调用，请求哪些参数，需要获取什么数据。\n\nDataBase --> Entity --> Mapper.xml --> Mapper.Java --> Service.java --> Controller.java --> .Jsp\n\n\n**说明：**\n- Spring MVC  拥有控制器，作用跟Struts2 类似，接收外部请求，**解析参数传给服务层**\n- Spring 容器属于协调上下文，**管理对象间的依赖，提供事务机制**\n- mybatis 属于orm持久层框架，**将业务实体与数据表联合起来**；\n\n- Spring MVC  控制层，想当于 Struts的作用\n- Spring 控制反转和依赖注入：  创建对象交由容器管理，达到了解耦的作用\n- mybatis 主要用来操作数据库（数据库的增删改查）\n\n- IOC:控制反转，是一种降低对象之间耦合关系的设计思想，面试的时候最好能说出来个例子，加深理解。例子：租房子，以前租房子需要一个房子一个房子找，费时费力，然后现在加入一个房屋中介，把你需要的房型告诉中介，就可以直接选到需要的房子，中介就相当于spring容器。\n\n- AOP:面向切面编程，是面向对象开发的一种补充，**它允许开发人员在不改变原来模型的基础上动态的修改模型以满足新的需求**，如：动态的增加日志、安全或异常处理等。AOP使业务逻辑各部分间的耦合度降低，提高程序可重用性，提高开发效率。\n\n### 持久层（数据访问层）：DAO层（mapper）（Data Access Object）\n\n*   DAO层：==DAO层主要是做数据持久层的工作，负责与数据库进行联络的一些任务都封装在此==，\n\n    *   DAO层的设计首先是设计DAO的接口，\n    *   然后在Spring的配置文件中定义此接口的实现类，\n    *   然后就可在模块中调用此接口来进行数据业务的处理，而不用关心此接口的具体实现类是哪个类，显得结构非常清晰，\n    *   DAO层的数据源配置，以及有关数据库连接的参数都在Spring的配置文件中进行配置。\n\n### 业务逻辑层：Service层\n\n*   Service层：==Service层主要负责业务模块的逻辑应用设计==。\n    *   首先设计接口，再设计其实现的类\n    *   接着再在Spring的配置文件中配置其实现的关联。这样我们就可以在应用中调用Service接口来进行业务处理。\n    *   Service层的业务实现，具体要调用到已定义的DAO层的接口，\n    *   封装Service层的业务逻辑有利于通用的业务逻辑的独立性和重复利用性，程序显得非常简洁。\n\n## 表现控制层：Controller层（Handler层）\n\n*   Controller层:==Controller层负责具体的**业务模块流程的控制**==，\n    *   在此层里面要调用Service层的接口来控制业务流程，\n    *   控制的配置也同样是在Spring的配置文件里面进行，针对具体的业务流程，会有不同的控制器，我们具体的设计过程中可以将流程进行抽象归纳，设计出可以重复利用的子单元流程模块，这样不仅使程序结构变得清晰，也大大减少了代码量。\n\n### View层\n\n*   View层 此层与控制层结合比较紧密，需要二者结合起来协同工发。==View层主要负责前台jsp页面的表示==.\n\n### 各层联系\n\n*   DAO层，Service层这两个层次都可以单独开发，互相的耦合度很低，完全可以独立进行，这样的一种模式在开发大项目的过程中尤其有优势\n*   Controller，View层因为耦合度比较高，因而要结合在一起开发，但是也可以看作一个整体独立于前两个层进行开发。这样，在层与层之前我们只需要知道接口的定义，调用接口即可完成所需要的逻辑单元应用，一切显得非常清晰简单。\n\n*   Service逻辑层设计\n    *   Service层是建立在DAO层之上的，建立了DAO层后才可以建立Service层，而Service层又是在Controller层之下的，因而Service层应该既调用DAO层的接口，又要提供接口给Controller层的类来进行调用，它刚好处于一个中间层的位置。每个模型都有一个Service接口，每个接口分别封装各自的业务处理方法。\n\n\n\n# SSM三大框架的运行流程、原理、核心技术详解！\n\n## 一、Spring部分\n\n### （一）Spring的运行流程\n\n*   第一步：加载spring 配置文件`ApplicationContext ac = new ClassPathXmlApplicationContext(\"beans.xml\");`，ApplicationContext接口，它由BeanFactory接口派生而来，因而提供了BeanFactory所有的功能。**配置文件中的bean的信息是被加载在HashMap中的，一个bean通常包括，id，class，property等，bean的id对应HashMap中的key，value呢就是bean**\n\n具体如何加载？源码如下:\n\n```java\nif (beanProperty.element(\"map\") != null){  \nMap<String, Object> propertiesMap = new HashMap<String, Object>();  \nElement propertiesListMap = (Element)beanProperty.elements().get(0);  \nIterator<?> propertiesIterator = propertiesListMap .elements().iterator();  \nwhile (propertiesIterator.hasNext()) {  \n\tElement vet = (Element) propertiesIterator.next();  \n\tif(vet.getName().equals(\"entry\")) {  \n\t\tString key = vet.attributeValue(\"key\");  \n\t\tIterator<?> valuesIterator = vet.elements()  .iterator();  \n\t\twhile (valuesIterator.hasNext()) {  \n\t\t\tElement value = (Element) valuesIterator.next();  \n\t\t\tif (value.getName().equals(\"value\")){  \n\t\t\t\tpropertiesMap.put(key, value.getText());  \n\t\t\t}  \n\t\t\tif (value.getName().equals(\"ref\")) {  \n\t\t\t\tpropertiesMap.put(key, new String[]{\n\t\t\t\t\t\tvalue.attributeValue(\"bean\") \n\t\t\t\t\t\t});  \n\t\t\t}  \n\t\t}  \n\t}  \n}  \nbean.getProperties().put(name, propertiesMap);  \n} \n```\n\n*   第二步：调用getBean方法，getBean是用来获取applicationContext.xml文件里bean的，（）写的是bean的id。一般情况都会强转成我们对应的业务层（接口）。例如`SpringService springService =(SpringService)ac.getBean(\"Service\");`\n*   第三步：这样我们就可以调用业务层(接口实现)的方法。\n\n具体如下：\n![原理图](%E6%A1%86%E6%9E%B6%E6%95%B4%E5%90%88%EF%BC%9ASSM%E6%A1%86%E6%9E%B6%E5%8E%9F%E7%90%86,%E4%BD%9C%E7%94%A8%E5%8F%8A%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95.resource/20180415194047988.png)\nJava反射博大精深，我也不很懂，具体请查看[Java基础之—反射](https://blog.csdn.net/sinat_38259539/article/details/71799078)\n\n**那么bean中的东西到底是怎么注入进去的？**简单来讲，就是在实例化一个bean时，实际上就实例化了类，它通过**反射**调用类中set方法将事先保存在HashMap中的类属性注入到类中。这样就回到了我们Java最原始的地方，**对象.方法，对象.属性**\n\n### （二）Spring的原理\n\n*   **什么是spring？**\n\n*   **spring是一个容器框架，它可以接管web层，业务层，dao层，持久层的各个组件，并且可以配置各种bean， 并可以维护bean与bean的关系，当我们需要使用某个bean的时候，我们可以直接getBean(id)，使用即可**\n\n*   Spring目的：就是让对象与对象（模块与模块）之间的关系没有通过代码来关联，都是通过配置类说明管理的（Spring根据这些配置 内部通过反射去动态的组装对象） ，Spring是一个容器，凡是在容器里的对象才会有Spring所提供的这些服务和功能。\n\n*   层次框架图：\n    ![这里写图片描述](%E6%A1%86%E6%9E%B6%E6%95%B4%E5%90%88%EF%BC%9ASSM%E6%A1%86%E6%9E%B6%E5%8E%9F%E7%90%86,%E4%BD%9C%E7%94%A8%E5%8F%8A%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95.resource/20180415151535222.png)\n    说明：\n*   **web层：** struts充当web层，接管jsp，action，表单，主要体现出mvc的**数据输入**，**数据的处理**，**数据**的显示分离\n    *   **model层：** model层在概念上可以理解为包含了**业务层，dao层，持久层**，需要注意的是，一个项目中，不一定每一个层次都有\n    *   **持久层：**体现oop，主要解决关系模型和对象模型之间的**阻抗**\n\n### （三）Spring的核心技术\n\n*   IOC\n    *   **ioc（inverse of control）控制反转：** 所谓反转就是把创建对象（bean）和维护对象（bean）之间的关系的权利从程序转移到spring的容器（spring-config.xml）\n        ![这里写图片描述](%E6%A1%86%E6%9E%B6%E6%95%B4%E5%90%88%EF%BC%9ASSM%E6%A1%86%E6%9E%B6%E5%8E%9F%E7%90%86,%E4%BD%9C%E7%94%A8%E5%8F%8A%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95.resource/20180415162059434.png)\n        说明：`<bean></bean>`这对标签元素的作用：**当我们加载spring框架时，spring就会自动创建一个bean对象，并放入内存**相当于我们常规的new一个对象，而`<property></property>`中的value则是实现了“**对象.set方法**”，这里也体现了注入了概念\n*   DI\n\n    *   **di（dependency injection）依赖注入：** 实际上di和ioc是同一个概念，spring的设计者，**认为di更准确的表示spring的核心**\n    *   **spring提倡接口编程，在配合di技术就可以达到层与层解耦的目的**，为什么呢？因为层与层之间的关联，由框架帮我们做了，这样代码之间的耦合度降低，代码的复用性提高\n    *   接口编程的好处请访问[Java中接口编程的好处以及实现方式的选择？](https://blog.csdn.net/Song_JiangTao/article/details/82389905) \n*   AOP\n\n    *   **aspect oriented programming（面向切面编程）**\n    *   核心：**在不增加代码的基础上，还增加新功能**\n    *   理解：**面向切面：其实是，把一些公共的“东西”拿出来，比如说，事务，安全，日志，这些方面，如果你用的到，你就引入。** 也就是说：当你需要在执行一个操作（方法）之前想做一些事情（比如，开启事务，记录日志等等），那你就用before，如果想在操作之后做点事情（比如，关闭一些连接等等），那你就用after。其他类似\n\n### （四）spring整体架构图\n\n![spring整体架构图](%E6%A1%86%E6%9E%B6%E6%95%B4%E5%90%88%EF%BC%9ASSM%E6%A1%86%E6%9E%B6%E5%8E%9F%E7%90%86,%E4%BD%9C%E7%94%A8%E5%8F%8A%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95.resource/20190903142522892.png)\n\n#### 1、core container（核心容器）\n\n核心容器包含了core，beans，context和expression language四个模块\n\ncore和beans模块是框架的基础部分，提供IOC和依赖注入特性。这里的基础概念是BeanFactory，它提供对Factory模式的经典实现来消除对程序性单例模式的需要，并真正地允许你从程序逻辑中分离出依赖关系和配置。\n\n*   core模块主要包含了spring框架基本的黑犀牛工具类，spring的其他组建都要用到这个包里的类，core模块是其他组件的基本核心。当然你也可以在自己应用系统中使用这些工具类。\n\n*   beans模块是所有应用都要用到的，它包含访问配置文件，创建和管理bean以及进行ioc，di操作相关的所有类\n\n*   context模块构建与core和beans模块基础之上，提供了一种类似于JNDI注册器的框架式的对象访问方法。context模块继承了beans的特性，为spring核心提供了大量扩展，添加了对国际化（例如资源绑定）、事件传播、资源加载和对context的透明创建的支持。context模块同事也支持j2ee的一些特性，例如EJB，JMX和基础的远程处理，applicationContext接口是context模块的关键。\n\n*   ExpressionLanguage模块提供了强大的表达式语言，用于在运行时查询和操纵对象。他是jsp2.1规范中定义的unifed expression language的扩展。该语言支持设置/获取属性的值，属性的分配，方法的调用 ，访问数组上下文，容器和索引器，逻辑和算数运算符，命名变量以及从spring的ioc容器中根据名称检索对象。它也支持list投影，选择和一般的list聚合\n\n#### 2、Date Access/Integration\n\nDate Access/Integration层包含JDBC，ORM，OXM,JMS和Transaction模块\n\n*   jdbc模块提供了一个jdbc抽象层，他可以消除冗长的jdbc编码和解析数据厂商特有的错误代码。这个模块包含了spring对jdbc数据访问进行封装的所有类。\n\n*   orm模块为流行的对象-关系映射API，如JPA，JDO，Hibernate，iBatis等，提供了一个交互层。利用ORM封装包，可以混合使用所有spring提供的特性进行O/R映射，如前边提到的简单声明性事务管理。spring框架插入了若干个ORM框架 ，从而提供了ORM的对象关系工具，其中包括JDO，hibernate和iBatisSQl Map。所有这些都遵从spring的通用事务和DAO异常层次结构。\n\n*   OXM模块提供了一个对Object/XML映射实现的抽象层，Object/XML映射实现包括JAXB，Castor，XMLBeans，JiBX和XStream。\n\n*   JMS（java massage service）模块主要包含了一些制造和消费消息的特性\n\n*   Transaction模块支持编程和声明性的事务管理，这些事务类必须实现特地的接口。并且对多有的POJO都适用\n\n#### 3、web\n\nweb上下文模块建立在应用程序上下文模块之上，为基于web的应用程序提供了上下文。所以，spring框架支持与Jakarta struts的集成。web模块还简化了处理大部分请求以及将请求参数绑定到域对象的工作。web层包含了web，web-servlet，web-Struts 和web-porlet\n\n*   web模块，提供了基础的面向web的集成特性。例如：多文件上传，使用servlet listeners初始化 Ioc容器已经一个面向web的应用上下文。它还包含spring远程支持中的web的相关部分。\n*   web-servlet模块web.servlet.jar：该模块包含spring的model-view-controller（mvc）实现。spring的mbc框架使得模型范围内的代码和webforms之间能够清楚地分离出来。并与spring框架的其他特性集成在一起。\n*   web-Struts模块，该模块提供了对struts的支持，使得类在spring应用中能够与一个典型的struts web层集成在一起。注意，该支持在spring3.0中已被弃用。\n*   web-portlet模块，提供了用于portlet环境和web-servlet模块的MVC的实现。\n\n#### 4、AOP\n\naop模块提供了一个符合aop联盟标准的面向切面编程的实现，它让你可以定义例如方法拦截器和切点，从而将逻辑代码分开，降低它们之间的耦合性。利用source-level的元数据功能，还可以将各种行为信息合并到你的代码中，这有点像.Net技术中的attribute概念\n\n通过配置管理特性，springAop模块直接将面向界面的编程功能集成到了spring框架中，所以可以很容易地使用spring框架管理的任何对象支持aop，springAop模块为基于spring的应用程序中的对象提供了事务管理服务。通过使用springAop，不用历来EJB组件，就可以将声明性事务管理集成到应用程序中。\n\n*   Aspects模块提供了AspectJ的集成支持。\n*   Instrumentation模块提供了class Instrumentation支持和classloader实现，使用可以再特定的应用服务器上使用。\n\n#### 5、Test\n\ntest模块支持使用JUnit和TestNG对spring组件进行测试。\n\n* * *\n\n# 二、Spring MVC部分\n\n### （一）Spring MVC的运行流程\n\n*   springMVC框架\n    ![这里写图片描述](%E6%A1%86%E6%9E%B6%E6%95%B4%E5%90%88%EF%BC%9ASSM%E6%A1%86%E6%9E%B6%E5%8E%9F%E7%90%86,%E4%BD%9C%E7%94%A8%E5%8F%8A%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95.resource/20180503140150984.png)\n    ==**框架执行流程（面试必问）**==\n    *   1、用户发送请求至前端控制器DispatcherServlet\n    *   2、DispatcherServlet收到请求调用HandlerMapping处理器映射器。\n    *   3、处理器映射器根据请求url找到具体的处理器，生成处理器对象及处理器拦截器(如果有则生成)一并返回给DispatcherServlet。\n    *   4、DispatcherServlet通过HandlerAdapter处理器适配器调用处理器\n    *   5、执行处理器(Controller，也叫后端控制器)。\n    *   6、Controller执行完成返回ModelAndView\n    *   7、HandlerAdapter将controller执行结果ModelAndView返回给DispatcherServlet\n    *   8、DispatcherServlet将ModelAndView传给ViewReslover视图解析器\n    *   9、ViewReslover解析后返回具体View\n    *   10、DispatcherServlet对View进行渲染视图（即**将模型数据填充至视图中**）。\n    *   11、DispatcherServlet响应用户\n\n### （二）Spring MVC的原理\n\n*   1、什么是SpringMVC？\n\n*   **springmvc是spring框架的一个模块，springmvc和spring无需通过中间整合层进行整合。**\n\n*   springmvc是一个基于mvc的web框架。\n    ![这里写图片描述](%E6%A1%86%E6%9E%B6%E6%95%B4%E5%90%88%EF%BC%9ASSM%E6%A1%86%E6%9E%B6%E5%8E%9F%E7%90%86,%E4%BD%9C%E7%94%A8%E5%8F%8A%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95.resource/20180503140031318.png)\n\n*   **mvc**\n\n    *   mvc在b/s系统 下的应用：\n        ![这里写图片描述](%E6%A1%86%E6%9E%B6%E6%95%B4%E5%90%88%EF%BC%9ASSM%E6%A1%86%E6%9E%B6%E5%8E%9F%E7%90%86,%E4%BD%9C%E7%94%A8%E5%8F%8A%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95.resource/20180503140124314.png)\n    *   前端控制器DispatcherServlet（不需要程序员开发）\n        *   作用接收请求，响应结果，相当于转发器，中央处理器。有了DispatcherServlet减少了其它组件之间的耦合度。\n    *   处理器映射器HandlerMapping(不需要程序员开发)\n        *   作用：根据请求的url查找Handler\n    *   处理器适配器HandlerAdapter\n        *   作用：按照特定规则（HandlerAdapter要求的规则）去执行Handler\n    *   处理器Handler **(需要程序员开发)**\n        *   注意：编写Handler时按照HandlerAdapter的要求去做，这样适配器才可以去正确执行Handler\n    *   视图解析器View resolver(不需要程序员开发)\n        *   作用：进行视图解析，根据逻辑视图名解析成真正的视图（view）\n    *   视图View **(需要程序员开发)**\n        *   View是一个接口，实现类支持不同的View类型（jsp、freemarker、pdf…）\n*   **struts2与springMVC的区别？**\n\n    1、Struts2是**类级别的拦截**，一个类对应一个request 上下文, SpringMVC是**方法级别的拦截**,一个方法对应一个request上下文,而方法同时又跟一个url对应，,所以说从架构本身上SpringMVC就容易实现restful url,而struts2的架构实现起来要费劲,因为Struts2中Action的一个方法可以对应一个url ,而其类属性却被所有方法共享，这也就无法用注解或其他方式标识其所属方法了。\n\n    2、由上边原因, SpringMVC的**方法之间基本上独立的**,**独享request response数据,**请求数据通过参数获取,处理结果通过ModelMap交回给框架,方法之间不共享变量,而Struts2搞的就比较乱,虽然方法之间也是独立的,但其**所有Action变量是共享的**,这不会影响程序运行,却给我们编码读程序时带来麻烦,每次来了请求就创建一个Action ,**一个Action对象对应一个request 上下文。**\n\n    3、由于Struts2需要针对每个request进行封装,把request , session等servlet生命周期的变量**封装成一个一 个Map** **,供给每个Action使用**,并保证线程安全,所以在原则上,是**比较耗费内存的。**\n\n    4、拦截器实现机制上， Struts2有以自己的**interceptor机制,** SpringMVC用的是**独立的AOP方式**,这样导致Struts2的配置文件量还是比SpringMVC大。\n\n    5、**SpringMVC的入口是servlet ,而Struts2是filter (这里要指出, filter和servlet是不同的。以前认为filter是servlet的一种特殊)**,这就导致 了二者的机制不同,这里就牵涉到servlet和filter的区别了。\n\n    6、**SpringMVC集成了Ajax ,使用非常方便**，只需一个注解@ResponseBody就可以实现，然后直接返回响应文本即可,**而Struts2拦截器集成了Ajax ,在Action中处理时一般必须安装插件或者自己写代码集成进去**,使用起来也相对不方便。\n\n    7、**SpringMVC验证支持JSR303 ,**处理起来相对更加灵活方便,而**Struts2验证比较繁琐,感觉太烦乱。**\n\n    8、**Spring MVC和Spring是无缝的。从这个项目的管理和安全上也比Struts2高**(当然Struts2也可以通过不同的目录结构和相关配置做到SpringMVC-样的效果,但是需要xml配置的地方不少)。\n\n    9、设计思想上, **Struts2更加符合0OP的编程思想**，SpringMVC就比较谨慎,在servlet上扩展。\n\n    10、**SpringMVC开发效率和性能高于Struts2。**\n\n    11、SpringMVC可以认为已经**100%零配置。**\n\n### （三）Spring MVC的核心技术\n\n*   注解开发（@Controller,@RequestMapping,@ResponseBody。。。。）\n    \n    *   还有Spring的诸多注解，这两者是不需要整合的~\n*   传参，接参（request）\n*   基本配置\n*   文件上传与下载\n    *   Spring MVC中文件上传需要添加Apache Commons FileUpload相关的jar包,\n    *   基于该jar, Spring中提供了MultipartResolver实现类: CommonsMultipartResolver.\n*   拦截器\n* **其实最核心的还是SpringMVC的执行流程，各个点的作用得搞清楚。**\n\n  \n\n\n# 三、Mybatis 部分\n\n### （一）Mybatis的运行流程\n\n*   **Mybatis运行流程图**：\n    ![这里写图片描述](%E6%A1%86%E6%9E%B6%E6%95%B4%E5%90%88%EF%BC%9ASSM%E6%A1%86%E6%9E%B6%E5%8E%9F%E7%90%86,%E4%BD%9C%E7%94%A8%E5%8F%8A%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95.resource/20180420191152719.png)\n\n第一步：配置文件mybatis.xml，大体如下，\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE configuration PUBLIC \"-//mybatis.org//DTD Config 3.0//EN\"\n        \"http://mybatis.org/dtd/mybatis-3-config.dtd\">\n<configuration>\n    <!-- 引入外部文件\n\t\tresource:引入项目中配置文件\n\t\turl:引入网络中或者路径文件\n\t-->\n    <properties resource=\"jdbc.properties\"/>\n    <settings>\n        <!--<setting name=\"mapUnderscoreToCamelCase\" value=\"true\" />-->\n        <setting name=\"lazyLoadingEnabled\" value=\"true\" />\n        <setting name=\"aggressiveLazyLoading\"  value=\"false\" />\n        <setting name=\"cacheEnabled\" value=\"true\"/>\n    </settings>\n    <typeAliases>\n        <package name=\"com.nuc.entity\"></package>\n    </typeAliases>\n    <!-- - - - - - - 数据库环境配置- - - - - - - - - -->\n    <environments default=\"environments\">\n        <environment id=\"environments\">\n            <transactionManager type=\"JDBC\"/>\n            <dataSource type=\"POOLED\">\n                <property name=\"driver\" value=\"${jdbc.driverClass}\"/>\n                <property name=\"url\" value=\"${jdbc.jdbcUrl}\"/>\n                <property name=\"username\" value=\"${jdbc.user}\"/>\n                <property name=\"password\" value=\"${jdbc.password}\"/>\n            </dataSource>\n        </environment>\n    </environments>\n    <!-- - - - - - - -映射文件路径- - - - - - -->\n    <mappers>\n        <!--自动扫描包下的映射文件，要求：同名，同目录-->\n        <package name=\"com.nuc.mapper\" />\n    </mappers>\n</configuration>\n```\n\n第二步：加载我们的xml文件\n第三步：创建SqlSessionFactoryBuilder\n第四步：创建SqlSessionFactory\n第五步：调用openSession()，开启sqlSession\n第六步：getMapper()来获取我们的mapper（接口），mapper对应的映射文件，在加载mybatis.xml时就会加载\n第七步：使用我们自己的mapper和它对应的xml来完成我们和数据库交互。即增删改查。\n第八步：提交session，关闭session。\n\n代码如下：\n\n```java\nString resource = \"mybatis-config.xml\";\nSqlSession sqlSession = null;\nInputStream inputStream = Resources.getResourceAsStream(resource);//读取mybatis配置文件\n//SqlSessionFactoryBuilder这个类的作用就是为了创建SqlSessionFactory的\nSqlSessionFactoryBuilder builder = new SqlSessionFactoryBuilder();\nSqlSessionFactory factory = builder.build(inputStream);\n/**\n *  factory.openSession(); //需手动提交事务\n *   factory.openSession(true); //系统自动提交事务\n */\nsqlSession = factory.openSession();\nCustomerMapper mapper = sqlSession.getMapper(CustomerMapper.class);\n//增删改查的操作\nsqlSession.commit();//如果没有提交，数据库的数据不会改变\nsqlSession.close();\n```\n\n需要注意的是，sqlSession也自带一些数据交互的操作\n\n### （二）Mybatis的原理\n\n*   **什么是Mybatis？**\n\n    *   **mybatis专注sql本身**，需要程序员自己编写sql语句，sql修改、优化比较方便。==**mybatis是一个不完全 的ORM框架**==，虽然程序员自己写sql，mybatis 也可以实现映射（**输入映射、输出映射**）。\n    *   mybatis是一个**持久层的框架**，是apache下的顶级项目。\n    *   mybatis托管到goolecode下，后来托管到github下:[mybatis Github地址](https://github.com/mybatis/mybatis-3/releases)\n    *   mybatis让程序将主要精力放在sql上，通过mybatis提供的映射方式，自由灵活生成（半自动化，大部分需要程序员编写sql）满足需要sql语句。\n    *   mybatis可以将向 preparedStatement 中的输入参数自动进行输入映射，将查询结果集灵活映射成java对象。（输出映射）\n*   **mybatis底层实现**\n\n    *   mybatis底层还是采用**原生jdbc**来对数据库进行操作的，只是通过 SqlSessionFactory，SqlSession Executor,StatementHandler，ParameterHandler,ResultHandler和TypeHandler等几个处理器封装了这些过程\n*   **对原生态jdbc程序（单独使用jdbc开发）问题总结：**\n\n    * 数据库连接，使用时创建，不使用就关闭，对数据库进行频繁连接开启和关闭，造成数据库资源的浪费\n\n       解决：**使用数据库连接池管理数据库连接**\n\n    * 将sql 语句硬编码到Java代码中，如果sql语句修改，需要对java代码重新编译，不利于系统维护\n\n      解决：**将sql语句设置在xml配置文件中，即使sql变化，也无需重新编译**\n\n    * 向preparedStatement中设置参数，对占位符位置和设置参数值，硬编码到Java文件中，不利于系统维护\n\n      解决：**将sql语句及占位符，参数全部配置在xml文件中**\n\n    * 从resutSet中遍历结果集数据时，存在硬编码，将获取表的字段进行硬编码，不利于系统维护。\n\n      解决：**将查询的结果集，自动映射成java对象**\n\n*   **mybatis工作原理**\n\n    *   mybatis通过配置文件创建sqlsessionFactory，sqlsessionFactory根据配置文件，配置文件来源于两个方面:一个是xml，一个是Java中的注解，获取sqlSession。SQLSession包含了执行sql语句的所有方法，可以通过SQLSession直接运行映射的sql语句，完成对数据的增删改查和事物的提交工作，用完之后关闭SQLSession。\n\n### （三）Mybatis的核心技术\n\n*   **Mybatis输入映射**\n\n    *   通过parameterType指定输入参数的类型，类型可以是简单类型、hashmap、pojo的包装类型\n*   **Mybatis输出映射**\n    *   **一、resultType**\n        *   作用:将查询结果按照sql列名pojo属性名一致性映射到pojo中。\n\n        *   **使用resultType进行输出映射，只有查询出来的列名和pojo中的属性名一致，该列才可以映射成功。**\n\n        *   如果查询出来的列名和pojo中的属性名全部不一致，则不会创建pojo对象。\n\n        *   只要查询出来的列名和pojo中的属性有一个一致，就会创建pojo对象\n\n        *   **如果查询出来的列名和pojo的属性名不一致，通过定义一个resultMap对列名和pojo属性名之间作一个映射关系。**\n\n    *   **二、resultMap**\n\n        *   使用association和collection完成**一对一和一对多**高级映射（对结果有特殊的映射要求）。\n        *   association：\n            *   作用：将关联查询信息映射到一个**pojo对象**中。\n            *   场合：为了方便查询关联信息可以使用association将关联订单信息映射为用户对象的pojo属性中，比如：查询订单及关联用户信息。\n            *   **使用resultType无法将查询结果映射到pojo对象的pojo属性中，根据对结果集查询遍历的需要选择使用resultType还是resultMap。**\n        *   collection：\n            *   作用：将关联查询信息映射到一个**list集合**中。\n            *   场合：为了方便查询遍历关联信息可以使用collection将关联信息映射到list集合中，比如：查询用户权限范围模块及模块下的菜单，可使用collection将模块映射到模块list中，将菜单列表映射到模块对象的菜单list属性中，这样的作的目的也是方便对查询结果集进行遍历查询。**如果使用resultType无法将查询结果映射到list集合中。**\n*   Mybatis的动态sql\n\n*   什么是动态sql？\n\n    *   mybatis核心 对sql语句进行灵活操作，通过表达式进行判断，对sql进行灵活拼接、组装。\n    *   包括， where ，if，foreach，choose，when，otherwise，set，trim等标签的使用\n*   **数据模型分析思路**\n*   **1、每张表记录的数据内容**\n        *   分模块对每张表记录的内容进行熟悉，相当 于你学习系统 需求（功能）的过程\n    *   **2、每张表重要的字段设置**\n        *   非空字段、外键字段\n*   **3、数据库级别表与表之间的关系**\n\n    *   外键关系\n*   **4、表与表之间的业务关系**\n\n    *   在分析表与表之间的业务关系时一定要建立 在某个业务意义基础上去分析。\\color{red}{在某个业务意义基础上去分析。}在某个业务意义基础上去分析。\n\n\n\n\n# 框架整合示例\n\n[原文链接](https://blog.csdn.net/weixin_30764137/article/details/96416103)\n\n# 3、SSM整合\n\n 下面主要介绍三大框架的整合，至于环境的搭建以及项目的创建，参看上面的博文。这次整合我分了2个配置文件，分别是spring-mybatis.xml，包含spring和mybatis的配置文件，还有个是spring-mvc的配置文件，此外有2个资源文件：jdbc.propertis和log4j.properties。完整目录结构如下（最后附上源码下载地址）：\n ![](%E6%A1%86%E6%9E%B6%E6%95%B4%E5%90%88%EF%BC%9ASSM%E6%A1%86%E6%9E%B6%E5%8E%9F%E7%90%86,%E4%BD%9C%E7%94%A8%E5%8F%8A%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95.resource/441423-20150830174644562-871463833.png)\n\n使用框架的版本：\nSpring 4.0.2 RELEASE\nSpring MVC 4.0.2 RELEASE\nMyBatis 3.2.6\n\n## 3.1、Maven引入需要的JAR包\n\n  在pom.xml中引入jar包\n```xml\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n    <modelVersion>4.0.0</modelVersion>\n    <groupId>com.javen.maven01</groupId>\n    <artifactId>maven01</artifactId>\n    <packaging>war</packaging>\n    <version>0.0.1-SNAPSHOT</version>\n    <name>maven01 Maven Webapp</name>\n    <url>http://maven.apache.org</url>\n\n    <properties>  \n        <!-- spring版本号 -->  \n        <spring.version>4.0.2.RELEASE</spring.version>  \n        <!-- mybatis版本号 -->  \n        <mybatis.version>3.2.6</mybatis.version>  \n        <!-- log4j日志文件管理包版本 -->  \n        <slf4j.version>1.7.7</slf4j.version>  \n        <log4j.version>1.2.17</log4j.version>  \n    </properties> \n\n    <dependencies>\n        <dependency>\n            <groupId>junit</groupId>\n            <artifactId>junit</artifactId>\n            <version>3.8.1</version>\n             <!-- 表示开发的时候引入，发布的时候不会加载此包 -->  \n            <scope>test</scope>\n        </dependency>\n        <!-- <dependency>\n            <groupId>javax.servlet</groupId>\n            <artifactId>javax.servlet-api</artifactId>\n            <version>3.1.0</version>\n        </dependency> -->\n\n         <!-- =======spring核心包 ========= -->  \n        <dependency>  \n            <groupId>org.springframework</groupId>  \n            <artifactId>spring-core</artifactId>  \n            <version>${spring.version}</version>  \n        </dependency>  \n\n        <dependency>  \n            <groupId>org.springframework</groupId>  \n            <artifactId>spring-web</artifactId>  \n            <version>${spring.version}</version>  \n        </dependency>  \n        <dependency>  \n            <groupId>org.springframework</groupId>  \n            <artifactId>spring-oxm</artifactId>  \n            <version>${spring.version}</version>  \n        </dependency>  \n        <dependency>  \n            <groupId>org.springframework</groupId>  \n            <artifactId>spring-tx</artifactId>  \n            <version>${spring.version}</version>  \n        </dependency>  \n\n        <dependency>  \n            <groupId>org.springframework</groupId>  \n            <artifactId>spring-jdbc</artifactId>  \n            <version>${spring.version}</version>  \n        </dependency>  \n\n        <dependency>  \n            <groupId>org.springframework</groupId>  \n            <artifactId>spring-webmvc</artifactId>  \n            <version>${spring.version}</version>  \n        </dependency>  \n        <dependency>  \n            <groupId>org.springframework</groupId>  \n            <artifactId>spring-aop</artifactId>  \n            <version>${spring.version}</version>  \n        </dependency>  \n\n        <dependency>  \n            <groupId>org.springframework</groupId>  \n            <artifactId>spring-context-support</artifactId>  \n            <version>${spring.version}</version>  \n        </dependency>  \n\n        <dependency>  \n            <groupId>org.springframework</groupId>  \n            <artifactId>spring-test</artifactId>  \n            <version>${spring.version}</version>  \n        </dependency>  \n\n\n        <!-- =========  mybatis核心包  ================= -->  \n        <dependency>  \n            <groupId>org.mybatis</groupId>  \n            <artifactId>mybatis</artifactId>  \n            <version>${mybatis.version}</version>  \n        </dependency>  \n         <!-- mybatis/spring包 -->  \n        <dependency>  \n            <groupId>org.mybatis</groupId>  \n            <artifactId>mybatis-spring</artifactId>  \n            <version>1.2.2</version>  \n        </dependency>  \n\n         <!-- 导入java ee jar 包 -->  \n        <dependency>  \n            <groupId>javax</groupId>  \n            <artifactId>javaee-api</artifactId>  \n            <version>7.0</version>  \n        </dependency>  \n\n         <!-- 导入Mysql数据库链接jar包 -->  \n        <dependency>  \n            <groupId>mysql</groupId>  \n            <artifactId>mysql-connector-java</artifactId>  \n            <version>5.1.36</version>  \n        </dependency>  \n        <!-- 导入dbcp的jar包，用来在applicationContext.xml中配置数据库 -->  \n        <dependency>  \n            <groupId>commons-dbcp</groupId>  \n            <artifactId>commons-dbcp</artifactId>  \n            <version>1.2.2</version>  \n        </dependency>  \n\n        <!-- JSTL标签类 -->  \n        <dependency>  \n            <groupId>jstl</groupId>  \n            <artifactId>jstl</artifactId>  \n            <version>1.2</version>  \n        </dependency>  \n        <!-- 日志文件管理包 -->  \n        <!-- log start -->  \n        <dependency>  \n            <groupId>log4j</groupId>  \n            <artifactId>log4j</artifactId>  \n            <version>${log4j.version}</version>  \n        </dependency>  \n\n        <!-- 格式化对象，方便输出日志 -->  \n        <dependency>  \n            <groupId>com.alibaba</groupId>  \n            <artifactId>fastjson</artifactId>  \n            <version>1.1.41</version>  \n        </dependency>  \n\n        <dependency>  \n            <groupId>org.slf4j</groupId>  \n            <artifactId>slf4j-api</artifactId>  \n            <version>${slf4j.version}</version>  \n        </dependency>  \n\n        <dependency>  \n            <groupId>org.slf4j</groupId>  \n            <artifactId>slf4j-log4j12</artifactId>  \n            <version>${slf4j.version}</version>  \n        </dependency>  \n        <!-- log end -->  \n        <!-- 映入JSON -->  \n        <dependency>  \n            <groupId>org.codehaus.jackson</groupId>  \n            <artifactId>jackson-mapper-asl</artifactId>  \n            <version>1.9.13</version>  \n        </dependency>  \n        \n        <!-- ====上传组件包======== -->  \n        <dependency>  \n            <groupId>commons-fileupload</groupId>  \n            <artifactId>commons-fileupload</artifactId>  \n            <version>1.3.1</version>  \n        </dependency>  \n        <dependency>  \n            <groupId>commons-io</groupId>  \n            <artifactId>commons-io</artifactId>  \n            <version>2.4</version>  \n        </dependency>  \n        <dependency>  \n            <groupId>commons-codec</groupId>  \n            <artifactId>commons-codec</artifactId>  \n            <version>1.9</version>  \n        </dependency>  \n\n    </dependencies>\n\n    <build>\n        <finalName>maven01</finalName>\n        <plugins>\n            <plugin>\n                <groupId>org.eclipse.jetty</groupId>\n                <artifactId>jetty-maven-plugin</artifactId>\n                <version>9.2.8.v20150217</version>\n                <configuration>\n                    <httpConnector>\n                        <port>80</port>\n                    </httpConnector>\n                    <stopKey>shutdown</stopKey>\n                    <stopPort>9966</stopPort>\n                </configuration>\n            </plugin>\n        </plugins>\n    </build>\n\n</project>\n```\n\n\n\n## 3.2、整合SpringMVC\n\n### 3.2.1、配置spring-mvc.xml\n\n配置里面的注释也很详细，主要是**自动扫描控制器，视图模式，注解的启动**这三个。\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>  \n<beans xmlns=\"http://www.springframework.org/schema/beans\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:p=\"http://www.springframework.org/schema/p\" xmlns:context=\"http://www.springframework.org/schema/context\" xmlns:mvc=\"http://www.springframework.org/schema/mvc\" xsi:schemaLocation=\"http://www.springframework.org/schema/beans    \n                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd    \n                        http://www.springframework.org/schema/context    \n                        http://www.springframework.org/schema/context/spring-context-3.1.xsd    \n                        http://www.springframework.org/schema/mvc    \n                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd\">  \n    <!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->  \n    <context:component-scan base-package=\"com.javen.controller\" />  \n    <!-- 扩充了注解驱动，可以将请求参数绑定到控制器参数 -->\n    <mvc:annotation-driven/>\n    <!-- 静态资源处理  css js imgs -->\n    <mvc:resources location=\"/resources/**\" mapping=\"/resources\"/>\n\n    <!--避免IE执行AJAX时，返回JSON出现下载文件 -->  \n    <bean id=\"mappingJacksonHttpMessageConverter\" class=\"org.springframework.http.converter.json.MappingJacksonHttpMessageConverter\">  \n        <property name=\"supportedMediaTypes\">  \n            <list>  \n                <value>text/html;charset=UTF-8</value>  \n            </list>  \n        </property>  \n    </bean>  \n    <!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->  \n    <bean class=\"org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter\">  \n        <property name=\"messageConverters\">  \n            <list>  \n                <ref bean=\"mappingJacksonHttpMessageConverter\" /> <!-- JSON转换器 -->  \n            </list>  \n        </property>  \n    </bean>  \n\n    <!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->  \n    <bean id=\"multipartResolver\" class=\"org.springframework.web.multipart.commons.CommonsMultipartResolver\">    \n        <!-- 默认编码 -->  \n        <property name=\"defaultEncoding\" value=\"utf-8\" />    \n        <!-- 文件大小最大值 -->  \n        <property name=\"maxUploadSize\" value=\"10485760000\" />    \n        <!-- 内存中的最大值 -->  \n        <property name=\"maxInMemorySize\" value=\"40960\" />    \n        <!-- 启用是为了推迟文件解析，以便捕获文件大小异常 -->\n        <property name=\"resolveLazily\" value=\"true\"/>\n    </bean>   \n\n    <!-- 配置ViewResolver 。可用多个ViewResolver 。使用order属性排序。   InternalResourceViewResolver 放在最后-->\n    <bean class=\"org.springframework.web.servlet.view.ContentNegotiatingViewResolver\">\n    <property name=\"order\" value=\"1\"></property>\n        <property name=\"mediaTypes\">\n            <map>\n                <!-- 告诉视图解析器，返回的类型为json格式 -->\n                <entry key=\"json\" value=\"application/json\" />\n                <entry key=\"xml\" value=\"application/xml\" />\n                <entry key=\"htm\" value=\"text/htm\" />\n            </map>\n        </property>\n        <property name=\"defaultViews\">\n            <list>\n                <!-- ModelAndView里的数据变成JSON -->\n                <bean class=\"org.springframework.web.servlet.view.json.MappingJacksonJsonView\" />\n            </list>\n        </property>\n        <property name=\"ignoreAcceptHeader\" value=\"true\"></property>\n    </bean>\n\n   <!-- 定义跳转的文件的前后缀 ，视图模式配置-->  \n    <bean class=\"org.springframework.web.servlet.view.InternalResourceViewResolver\">  \n        <!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->  \n        <property name=\"prefix\" value=\"/WEB-INF/jsp/\" />  \n        <property name=\"suffix\" value=\".jsp\" />  \n    </bean>  \n</beans>  \n```\n\n\n\n### 3.2.2、配置web.xml文件\n\n 配置的spring-mvc的Servlet就是为了完成SpringMVC+MAVEN的整合。\n\nweb.xml  \n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>  \n<web-app xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns=\"http://java.sun.com/xml/ns/javaee\" xsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\" version=\"3.0\">  \n    <display-name>Archetype Created Web Application</display-name>  \n    <!-- Spring和mybatis的配置文件 -->  \n   <!-- <context-param>  \n        <param-name>contextConfigLocation</param-name>  \n        <param-value>classpath:spring-mybatis.xml</param-value>  \n    </context-param> -->\n    <!-- 编码过滤器 -->  \n    <filter>  \n        <filter-name>encodingFilter</filter-name>  \n        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>  \n        <async-supported>true</async-supported>  \n        <init-param>  \n            <param-name>encoding</param-name>  \n            <param-value>UTF-8</param-value>  \n        </init-param>  \n    </filter>  \n    <filter-mapping>  \n        <filter-name>encodingFilter</filter-name>  \n        <url-pattern>/*</url-pattern>  \n    </filter-mapping>  \n    <!-- Spring监听器 -->  \n   <!-- <listener>  \n        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>  \n    </listener> -->\n    <!-- 防止Spring内存溢出监听器 -->  \n    <!-- <listener>  \n        <listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>  \n    </listener> --> \n\n    <!-- Spring MVC servlet -->  \n    <servlet>  \n        <servlet-name>SpringMVC</servlet-name>  \n        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>  \n        <init-param>  \n            <param-name>contextConfigLocation</param-name>  \n            <param-value>classpath:spring-mvc.xml</param-value>  \n        </init-param>  \n        <load-on-startup>1</load-on-startup>  \n        <async-supported>true</async-supported>  \n    </servlet>  \n    <servlet-mapping>  \n        <servlet-name>SpringMVC</servlet-name>  \n        <!-- 此处可以可以配置成*.do，对应struts的后缀习惯 -->  \n        <url-pattern>/</url-pattern>  \n    </servlet-mapping>  \n    <welcome-file-list>  \n        <welcome-file>/index.jsp</welcome-file>  \n    </welcome-file-list>  \n\n</web-app>  \n```\n\n### 3.2.3、Log4j的配置\n\n   为了方便调试，一般都会使用日志来输出信息，Log4j是Apache的一个开放源代码项目，通过使用Log4j，我们可以控制日志信息输送的目的地是控制台、文件、GUI组件，甚至是套接口服务器、NT的事件记录器、UNIX Syslog守护进程等；我们也可以控制每一条日志的输出格式；通过定义每一条日志信息的级别，我们能够更加细致地控制日志的生成过程。\n\n Log4j的配置很简单，而且也是通用的，下面给出一个基本的配置，换到其他项目中也无需做多大的调整，如果想做调整或者想了解Log4j的各种配置，参看我转载的一篇博文，很详细：[http://blog.csdn.net/zhshulin/article/details/37937365](http://blog.csdn.net/zhshulin/article/details/37937365)\n\n下面给出配置文件目录：\n\n ![](%E6%A1%86%E6%9E%B6%E6%95%B4%E5%90%88%EF%BC%9ASSM%E6%A1%86%E6%9E%B6%E5%8E%9F%E7%90%86,%E4%BD%9C%E7%94%A8%E5%8F%8A%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95.resource/441423-20150830161022859-271175533.png)\n\nlog4j.properties\n```properties\nlog4j.rootLogger=INFO,Console,File  \n#定义日志输出目的地为控制台  \nlog4j.appender.Console=org.apache.log4j.ConsoleAppender  \nlog4j.appender.Console.Target=System.out  \n#可以灵活地指定日志输出格式，下面一行是指定具体的格式  \nlog4j.appender.Console.layout = org.apache.log4j.PatternLayout  \nlog4j.appender.Console.layout.ConversionPattern=[%c] - %m%n  \n\n#文件大小到达指定尺寸的时候产生一个新的文件  \nlog4j.appender.File = org.apache.log4j.RollingFileAppender  \n#指定输出目录  \nlog4j.appender.File.File = logs/ssm.log  \n#定义文件最大大小  \nlog4j.appender.File.MaxFileSize = 10MB  \n# 输出所以日志，如果换成DEBUG表示输出DEBUG以上级别日志  \nlog4j.appender.File.Threshold = ALL  \nlog4j.appender.File.layout = org.apache.log4j.PatternLayout  \nlog4j.appender.File.layout.ConversionPattern =[%p] [%d{yyyy-MM-dd HH\\:mm\\:ss}][%c]%m%n  \n```\n\n\n\n### 3.2.4、使用Jetty测试\n\n![](%E6%A1%86%E6%9E%B6%E6%95%B4%E5%90%88%EF%BC%9ASSM%E6%A1%86%E6%9E%B6%E5%8E%9F%E7%90%86,%E4%BD%9C%E7%94%A8%E5%8F%8A%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95.resource/441423-20150830165405344-862946687.png)\n实体类 User.java\n\n```java\npackage com.javen.model;\n\npublic class User {\n    private Integer id;\n\n    private String userName;\n\n    private String password;\n\n    private Integer age;\n\n    public Integer getId() {\n        return id;\n    }\n\n    public void setId(Integer id) {\n        this.id = id;\n    }\n\n    public String getUserName() {\n        return userName;\n    }\n\n    public void setUserName(String userName) {\n        this.userName = userName == null ? null : userName.trim();\n    }\n\n    public String getPassword() {\n        return password;\n    }\n\n    public void setPassword(String password) {\n        this.password = password == null ? null : password.trim();\n    }\n\n    public Integer getAge() {\n        return age;\n    }\n\n    public void setAge(Integer age) {\n        this.age = age;\n    }\n\n    @Override\n    public String toString() {\n        return \"User [id=\" + id + \", userName=\" + userName + \", password=\"\n                + password + \", age=\" + age + \"]\";\n    }\n    \n    \n}\n```\n\nUserController.java\n```java\npackage com.javen.controller;\nimport javax.servlet.http.HttpServletRequest;\n\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.springframework.stereotype.Controller;  \nimport org.springframework.ui.Model;  \nimport org.springframework.web.bind.annotation.RequestMapping;  \nimport org.springframework.web.bind.annotation.RequestMethod;\nimport com.javen.model.User;\n  \n  \n@Controller  \n@RequestMapping(\"/user\")  \n// /user/**\npublic class UserController {  \n    private static Logger log=LoggerFactory.getLogger(UserController.class);\n      \n    \n    // /user/test?id=1\n    @RequestMapping(value=\"/test\",method=RequestMethod.GET)  \n    public String test(HttpServletRequest request,Model model){  \n        int userId = Integer.parseInt(request.getParameter(\"id\"));  \n        System.out.println(\"userId:\"+userId);\n        User user=null;\n        if (userId==1) {\n             user = new User();  \n             user.setAge(11);\n             user.setId(1);\n             user.setPassword(\"123\");\n             user.setUserName(\"javen\");\n        }\n       \n        log.debug(user.toString());\n        model.addAttribute(\"user\", user);  \n        return \"index\";  \n    }  \n}  \n```\n\n\n ![](%E6%A1%86%E6%9E%B6%E6%95%B4%E5%90%88%EF%BC%9ASSM%E6%A1%86%E6%9E%B6%E5%8E%9F%E7%90%86,%E4%BD%9C%E7%94%A8%E5%8F%8A%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95.resource/441423-20150830165700734-984268491.png) ![](%E6%A1%86%E6%9E%B6%E6%95%B4%E5%90%88%EF%BC%9ASSM%E6%A1%86%E6%9E%B6%E5%8E%9F%E7%90%86,%E4%BD%9C%E7%94%A8%E5%8F%8A%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95.resource/441423-20150830165755156-107359445.png)\n\n在浏览器中输入：http://localhost/user/test?id=1\n\n![](%E6%A1%86%E6%9E%B6%E6%95%B4%E5%90%88%EF%BC%9ASSM%E6%A1%86%E6%9E%B6%E5%8E%9F%E7%90%86,%E4%BD%9C%E7%94%A8%E5%8F%8A%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95.resource/441423-20150830165857500-208786509.png)\n\n**到此 SpringMVC+Maven 整合完毕**\n\n### 3.3 Spring与MyBatis的整合\n\n取消 3.2.2 web.xml中注释的代码\n\n### 3.3.1、建立JDBC属性文件\n\njdbc.properties（文件编码修改为utf-8）\n```properties\ndriver=com.mysql.jdbc.Driver\nurl=jdbc:mysql://localhost:3306/maven\nusername=root\npassword=root\n#定义初始连接数  \ninitialSize=0 #定义最大连接数  \nmaxActive=20 #定义最大空闲  \nmaxIdle=20 #定义最小空闲  \nminIdle=1 #定义最长等待时间  \nmaxWait=60000  \n```\n\n**此时的目录结构为**\n\n ![](%E6%A1%86%E6%9E%B6%E6%95%B4%E5%90%88%EF%BC%9ASSM%E6%A1%86%E6%9E%B6%E5%8E%9F%E7%90%86,%E4%BD%9C%E7%94%A8%E5%8F%8A%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95.resource/441423-20150830170643640-637516889.png)\n\n### 3.3.2、建立spring-mybatis.xml配置文件\n\n这个文件就是用来完成spring和mybatis的整合的。这里面也没多少行配置，主要的就是自动扫描，自动注入，配置数据库。注释也很详细，大家看看就明白了。\n\nspring-mybatis.xml\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>  \n<beans xmlns=\"http://www.springframework.org/schema/beans\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:p=\"http://www.springframework.org/schema/p\" xmlns:context=\"http://www.springframework.org/schema/context\" xmlns:mvc=\"http://www.springframework.org/schema/mvc\" xsi:schemaLocation=\"http://www.springframework.org/schema/beans    \n                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd    \n                        http://www.springframework.org/schema/context    \n                        http://www.springframework.org/schema/context/spring-context-3.1.xsd    \n                        http://www.springframework.org/schema/mvc    \n                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd\">  \n    <!-- 自动扫描 -->  \n    <context:component-scan base-package=\"com.javen\" />  \n\n    <!-- 引入配置文件 -->  \n    <bean id=\"propertyConfigurer\" class=\"org.springframework.beans.factory.config.PropertyPlaceholderConfigurer\">  \n        <property name=\"location\" value=\"classpath:jdbc.properties\" />  \n    </bean>  \n\n    <bean id=\"dataSource\" class=\"org.apache.commons.dbcp.BasicDataSource\" destroy-method=\"close\">  \n        <property name=\"driverClassName\" value=\"${driver}\" />  \n        <property name=\"url\" value=\"${url}\" />  \n        <property name=\"username\" value=\"${username}\" />  \n        <property name=\"password\" value=\"${password}\" />  \n        <!-- 初始化连接大小 -->  \n        <property name=\"initialSize\" value=\"${initialSize}\"></property>  \n        <!-- 连接池最大数量 -->  \n        <property name=\"maxActive\" value=\"${maxActive}\"></property>  \n        <!-- 连接池最大空闲 -->  \n        <property name=\"maxIdle\" value=\"${maxIdle}\"></property>  \n        <!-- 连接池最小空闲 -->  \n        <property name=\"minIdle\" value=\"${minIdle}\"></property>  \n        <!-- 获取连接最大等待时间 -->  \n        <property name=\"maxWait\" value=\"${maxWait}\"></property>  \n    </bean>  \n\n    <!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->  \n    <bean id=\"sqlSessionFactory\" class=\"org.mybatis.spring.SqlSessionFactoryBean\">  \n        <property name=\"dataSource\" ref=\"dataSource\" />  \n        <!-- 自动扫描mapping.xml文件 -->  \n        <property name=\"mapperLocations\" value=\"classpath:com/javen/mapping/*.xml\"></property>  \n    </bean>  \n\n    <!-- DAO接口所在包名，Spring会自动查找其下的类 -->  \n    <bean class=\"org.mybatis.spring.mapper.MapperScannerConfigurer\">  \n        <property name=\"basePackage\" value=\"com.javen.dao\" />  \n        <property name=\"sqlSessionFactoryBeanName\" value=\"sqlSessionFactory\"></property>  \n    </bean>  \n\n    <!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->  \n    <bean id=\"transactionManager\" class=\"org.springframework.jdbc.datasource.DataSourceTransactionManager\">  \n        <property name=\"dataSource\" ref=\"dataSource\" />  \n    </bean>  \n\n</beans>  \n\n```\n\n\n### 3.4、JUnit测试\n\n  经过以上步骤，我们已经完成了Spring和mybatis的整合，这样我们就可以编写一段测试代码来试试是否成功了。\n\n#### 3.4.1、创建测试用表\n\n既然我们需要测试，那么我们就需要建立在数据库中建立一个测试表，这个表建的很简单，SQL语句为：\n```sql\n-- -- -- \n-- Table structure for `user_t` \n-- ------\nDROP TABLE IF EXISTS `user_t`; CREATE TABLE `user_t` (\n  `id` int(11) NOT NULL AUTO_INCREMENT,\n  `user_name` varchar(40) NOT NULL,\n  `password` varchar(255) NOT NULL,\n  `age` int(4) NOT NULL, PRIMARY KEY (`id`)\n) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8; \n\n-- ---------------------------- \n-- Records of user_t -- \n----------------------------\n\nINSERT INTO `user_t` VALUES ('1', '测试', '345', '24'); INSERT INTO `user_t` VALUES ('2', 'javen', '123', '10');\n```\n\n\n\n#### 3.4.2、利用MyBatis Generator自动创建代码\n\n参考博文：[http://blog.csdn.net/zhshulin/article/details/23912615](http://blog.csdn.net/zhshulin/article/details/23912615)\n\n 这个可根据表自动创建实体类、MyBatis映射文件以及DAO接口，当然，我习惯将生成的接口名改为IUserDao，而不是直接用它生成的UserMapper。如果不想麻烦就可以不改。完成后将文件复制到工程中。如图：\n\n![](%E6%A1%86%E6%9E%B6%E6%95%B4%E5%90%88%EF%BC%9ASSM%E6%A1%86%E6%9E%B6%E5%8E%9F%E7%90%86,%E4%BD%9C%E7%94%A8%E5%8F%8A%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95.resource/441423-20150830172815890-478987509.png)\n\n#### 3.4.3、建立Service接口和实现类\n\n![](%E6%A1%86%E6%9E%B6%E6%95%B4%E5%90%88%EF%BC%9ASSM%E6%A1%86%E6%9E%B6%E5%8E%9F%E7%90%86,%E4%BD%9C%E7%94%A8%E5%8F%8A%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95.resource/441423-20150830173103875-2026469790.png)\n\n下面给出具体的内容：\n\nIUserService.java\n```java\npackage com.javen.service;  \n\nimport com.javen.model.User;\n  \n  \npublic interface IUserService {  \n    public User getUserById(int userId);  \n}  \nUserServiceImpl.java\n\npackage com.javen.service.impl;\nimport javax.annotation.Resource;  \n\nimport org.springframework.stereotype.Service;  \nimport com.javen.dao.IUserDao;\nimport com.javen.model.User;\nimport com.javen.service.IUserService;\n  \n  \n@Service(\"userService\")  \npublic class UserServiceImpl implements IUserService {  \n    @Resource  \n    private IUserDao userDao;  \n    \n    public User getUserById(int userId) {  \n        // TODO Auto-generated method stub  \n        return this.userDao.selectByPrimaryKey(userId);  \n    }  \n  \n}  \n```\n\n#### 3.4.4、建立测试类\n\n 测试类在src/test/java中建立，下面测试类中注释掉的部分是不使用Spring时，一般情况下的一种测试方法；如果使用了Spring那么就可以使用注解的方式来引入配置文件和类，然后再将service接口对象注入，就可以进行测试了。\n\n如果测试成功，表示Spring和Mybatis已经整合成功了。输出信息使用的是Log4j打印到控制台。\n\n```java\npackage com.javen.testmybatis;\n\nimport javax.annotation.Resource;  \n\nimport org.apache.log4j.Logger;  \nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.springframework.test.context.ContextConfiguration;  \nimport org.springframework.test.context.junit4.SpringJUnit4ClassRunner;  \nimport com.alibaba.fastjson.JSON;  \nimport com.javen.model.User;\nimport com.javen.service.IUserService;\n  \n@RunWith(SpringJUnit4ClassRunner.class)     //表示继承了SpringJUnit4ClassRunner类  \n@ContextConfiguration(locations = {\"classpath:spring-mybatis.xml\"})  \n  \npublic class TestMyBatis {  \n    private static Logger logger = Logger.getLogger(TestMyBatis.class);  \n//  private ApplicationContext ac = null;  \n    @Resource  \n    private IUserService userService = null;  \n  \n//  @Before  \n//  public void before() {  \n//      ac = new ClassPathXmlApplicationContext(\"applicationContext.xml\");  \n//      userService = (IUserService) ac.getBean(\"userService\");  \n//  }  \n  \n    @Test  \n    public void test1() {  \n        User user = userService.getUserById(1);  \n        // System.out.println(user.getUserName());  \n        // logger.info(\"值：\"+user.getUserName());  \n        logger.info(JSON.toJSONString(user));  \n    }  \n}  \n```\n\n\n测试结果 \n\n![](%E6%A1%86%E6%9E%B6%E6%95%B4%E5%90%88%EF%BC%9ASSM%E6%A1%86%E6%9E%B6%E5%8E%9F%E7%90%86,%E4%BD%9C%E7%94%A8%E5%8F%8A%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95.resource/441423-20150830173453859-1226139271.png)\n\n#### 3.4.5、建立UserController类\n\nUserController.java  控制器   \n```java\npackage com.javen.testmybatis;\n\nimport javax.annotation.Resource;  \n\nimport org.apache.log4j.Logger;  \nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.springframework.test.context.ContextConfiguration;  \nimport org.springframework.test.context.junit4.SpringJUnit4ClassRunner;  \nimport com.alibaba.fastjson.JSON;  \nimport com.javen.model.User;\nimport com.javen.service.IUserService;\n  \n@RunWith(SpringJUnit4ClassRunner.class)     //表示继承了SpringJUnit4ClassRunner类  \n@ContextConfiguration(locations = {\"classpath:spring-mybatis.xml\"})  \n  \npublic class TestMyBatis {  \n    private static Logger logger = Logger.getLogger(TestMyBatis.class);  \n//  private ApplicationContext ac = null;  \n    @Resource  \n    private IUserService userService = null;  \n  \n//  @Before  \n//  public void before() {  \n//      ac = new ClassPathXmlApplicationContext(\"applicationContext.xml\");  \n//      userService = (IUserService) ac.getBean(\"userService\");  \n//  }  \n  \n    @Test  \n    public void test1() {  \n        User user = userService.getUserById(1);  \n        // System.out.println(user.getUserName());  \n        // logger.info(\"值：\"+user.getUserName());  \n        logger.info(JSON.toJSONString(user));  \n    }  \n}  \n```\n\n\n#### 3.4.6、新建jsp页面\n\nfile.jsp\n```jsp\n<%@ page language=\"java\" contentType=\"text/html; charset=utf-8\" pageEncoding=\"utf-8\"%>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n<html>\n<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n<title>Insert title here</title>\n</head>\n<body>\n    <h1>上传文件</h1>\n    <form method=\"post\" action=\"/user/doUpload\" enctype=\"multipart/form-data\">\n        <input type=\"file\" name=\"file\"/>\n        <input type=\"submit\" value=\"上传文件\"/>\n\n    </form>\n</body>\n</html>\n\nindex.jsp\n\n<html>\n<body>\n<h2>Hello World!</h2>\n</body>\n</html>\n```\n\nshowUser.jsp\n\n```jsp\n<%@ page language=\"java\" import=\"java.util.*\" pageEncoding=\"utf-8\"%>  \n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\">  \n<html>  \n  <head>  \n    <title>测试</title>  \n  </head>  \n\n  <body> ${user.userName} </body>  \n</html>\n```\n\n\n**至此，完成Spring+SpingMVC+mybatis这三大框架整合完成。**\n\n#### 3.4.7、部署项目\n\n**输入地址：http://localhost/user/jsontype/2**\n\n![](%E6%A1%86%E6%9E%B6%E6%95%B4%E5%90%88%EF%BC%9ASSM%E6%A1%86%E6%9E%B6%E5%8E%9F%E7%90%86,%E4%BD%9C%E7%94%A8%E5%8F%8A%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95.resource/441423-20150830174520609-1121228290.png)\n\n  项目下载地址：[https://github.com/Javen205/SSM](https://github.com/Javen205/SSM)\n\n\n\n",[[1573979294170,["GJX@GJXAIOUPC",[[-1,12791,"  "],[-1,13015," "],[-1,13018," "],[-1,13243,"  "],[-1,13375,"  "],[-1,13478,"  "],[-1,13619," "],[-1,13622," "],[-1,13760,"  "],[-1,13833,"  "],[-1,13947," "],[-1,13950," "],[-1,14015,"  "],[-1,14052,"  "]],[12793,14086],[12791,14064]]],[1573979324807,["GJX@GJXAIOUPC",[[-1,17714,"\n       "]],[17714,17722],[17714,17714]]],[1573979328254,["GJX@GJXAIOUPC",[[-1,17795,"\n     "]],[17795,17801],[17795,17795]]],[1573979330863,["GJX@GJXAIOUPC",[[-1,17901,"\n     "]],[17901,17907],[17901,17901]]],[1573979333756,["GJX@GJXAIOUPC",[[-1,17988,"\n      "]],[17988,17995],[17988,17988]]]],null,"GJX@GJXAIOUPC"],["4f28c962-315f-430e-bb7b-c3737d0a1b91",1574075536759,"# SSM框架原理,作用及使用方法\n\n## 一、框架原理\n\n### （一）SSM 作用\n\nSSM 框架是 spring MVC ，spring 和 mybatis 框架的整合，是标准的 MVC 模式，将整个系统划分为表现层，controller层，service 层，DAO 层四层；\n\n- 使用spring MVC负责**请求的转发和视图管理**\n- spring实现业务对象管理\n- mybatis作为数据对象的持久化引擎\n\n### （二）实现原理\n\n- **spring MVC**\n  - DNS 负责域名的解析, 比如访问www.baidu.com 先找到DNS获取相应的服务器IP和端口；\n  - 请求消息到达端口以后由**TOMCAT主动去询问**自己占用的端口是否由请求发来；\n  - 如果有请求TOMCAT**交给对应的项目**处理；\n  - 客户端发送请求到 DispacherServlet（前端控制器即分发器），这里可以设置拦截器，对请求进行过滤处理；\n  - 由 DispacherServlet 控制器查询 HanderMapping，通过解析请求，判断请求希望执行的具体方法，即找到处理请求的 Controller；\n这个map表由很多key:value键值对组成, key值是controller的名字(@mapping ...), value值是该controller所在类的地址和方法签名;\n(一个类中可能由很多controller)这个找到controller位置并实例化的过程叫做**反射**\n反射得到实例后通过**代理**执行相应的方法即相应controller;\n  - 通过 HandlerAdapter 调用具体的 Controller 方法；\n  - Controller 调用业务逻辑处理后，返回 ModelAndView，即控制器结果返回给视图解析器；\n  - DispacherServlet 查询视图解析器，找到ModelAndView 指定的视图\n  - 视图负责将结果显示到客户端\n\n![SpringMVC 流程](%E6%A1%86%E6%9E%B6%E6%95%B4%E5%90%88%EF%BC%9ASSM%E6%A1%86%E6%9E%B6%E5%8E%9F%E7%90%86,%E4%BD%9C%E7%94%A8%E5%8F%8A%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95.resource/SpringMVC%20%E6%B5%81%E7%A8%8B.png)\n\n**上面补充：**\n- 拦截器：拦截器主要是在 SpringMVC 的 controller 处理请求之前，对请求做一些处理，拦截器拦截的是 Controller，拦截器分为：HandlerInterceptro（springmvc 的）和 WebRequestInterceptor（spring 的），同时里面一共有三个方法，可以实现部分，主要是拦截位置不同，整体的指向顺序为： preHandle ->进入控制器（controller）-> postHandler -> JSP -> afterCompletion；\n\n- **配置文件**\n  - web.xml：在 <servlet> 中要配置前端控制器，springmvc 的配置文件位置、自启动、拦截器以及编码过滤器；\n  - springmvc.xml ：配置扫描包，即项目中所有 controller 位置，配置注解驱动（一般使用注解），配置不要拦截静态资源、自定义视图解析器（就是前后缀，可以和 controller 的返回值相连接，构成完整的页面路径）；\n  - controller 中代码示例：\n```java\n@controller // 将该类交给容器管理\npublic class demo(){\n    @RequestMapping(\"A\")\n    public String hello(){\n        return \"main\";\n    }\n    @RequestMapping(\"B\")\n    public String hello(){\n        return \"main\";\n    }\n}\n```\n然后在 jsp 的例如表单中的 action 属性配置为：A，将这个请求和控制器进行映射了，这个请求对应会调用 hello 这个控制器；\n\n- 同时 springmvc 将 jsp 中的参数值传递给 controller 中可以采用方法有：\n  - HandlerMenthod；\n  - Map\n  - Model 接口\n  - ModelAndView 类\n\n- Spring：我们平时开发接触最多的估计就是IOC容器，**它可以装载bean（也就是我们Java中的类，当然也包括service dao里面的**），有了这个机制，我们就不用在每次使用这个类的时候为它初始化，很少看到关键字new。另外spring的aop，事务管理等等都是我们经常用到的。\n\n- Mybatis：mybatis是对jdbc的封装，它让数据库底层操作变的透明。mybatis的操作都是围绕一个sqlSessionFactory实例展开的。**mybatis通过配置文件关联到各实体类的Mapper文件，Mapper文件中配置了每个类对数据库所需进行的sql语句映射**。在每次与数据库交互时，通过sqlSessionFactory拿到一个sqlSession，再执行sql命令。\n\n### （三）使用方法\n要完成一个功能：\n\n- 先写实体类entity，定义对象的属性，（可以参照数据库中表的字段来设置，数据库的设计应该在所有编码开始之前）。\n- 写Mapper.xml（Mybatis），其中定义你的功能，对应要对数据库进行的那些操作，比如 insert、selectAll、selectByKey、delete、update等。\n- 写Mapper.java，将**Mapper.xml中的操作按照id映射成Java函数**。\n- 写Service.java，为==**控制层提供服务，接受控制层的参数，完成相应的功能，并返回给控制层**==。\n- 写Controller.java，**连接页面请求和服务层**，**获取页面请求的参数，通过自动装配，映射不同的URL到相应的处理函数，并获取参数，对参数进行处理，之后传给服务层**。\n-  写JSP页面调用，请求哪些参数，需要获取什么数据。\n\nDataBase --> Entity --> Mapper.xml --> Mapper.Java --> Service.java --> Controller.java --> .Jsp\n\n\n**说明：**\n- Spring MVC  拥有控制器，作用跟Struts2 类似，接收外部请求，**解析参数传给服务层**\n- Spring 容器属于协调上下文，**管理对象间的依赖，提供事务机制**\n- mybatis 属于orm持久层框架，**将业务实体与数据表联合起来**；\n\n- Spring MVC  控制层，想当于 Struts的作用\n- Spring 控制反转和依赖注入：  创建对象交由容器管理，达到了解耦的作用\n- mybatis 主要用来操作数据库（数据库的增删改查）\n\n- IOC:控制反转，是一种降低对象之间耦合关系的设计思想，面试的时候最好能说出来个例子，加深理解。例子：租房子，以前租房子需要一个房子一个房子找，费时费力，然后现在加入一个房屋中介，把你需要的房型告诉中介，就可以直接选到需要的房子，中介就相当于spring容器。\n\n- AOP:面向切面编程，是面向对象开发的一种补充，**它允许开发人员在不改变原来模型的基础上动态的修改模型以满足新的需求**，如：动态的增加日志、安全或异常处理等。AOP使业务逻辑各部分间的耦合度降低，提高程序可重用性，提高开发效率。\n\n### 持久层（数据访问层）：DAO层（mapper）（Data Access Object）\n\n*   DAO层：==DAO层主要是做数据持久层的工作，负责与数据库进行联络的一些任务都封装在此==，\n\n    *   DAO层的设计首先是设计DAO的接口，\n    *   然后在Spring的配置文件中定义此接口的实现类，\n    *   然后就可在模块中调用此接口来进行数据业务的处理，而不用关心此接口的具体实现类是哪个类，显得结构非常清晰，\n    *   DAO层的数据源配置，以及有关数据库连接的参数都在Spring的配置文件中进行配置。\n\n### 业务逻辑层：Service层\n\n*   Service层：==Service层主要负责业务模块的逻辑应用设计==。\n    *   首先设计接口，再设计其实现的类\n    *   接着再在Spring的配置文件中配置其实现的关联。这样我们就可以在应用中调用Service接口来进行业务处理。\n    *   Service层的业务实现，具体要调用到已定义的DAO层的接口，\n    *   封装Service层的业务逻辑有利于通用的业务逻辑的独立性和重复利用性，程序显得非常简洁。\n\n## 表现控制层：Controller层（Handler层）\n\n*   Controller层:==Controller层负责具体的**业务模块流程的控制**==，\n    *   在此层里面要调用Service层的接口来控制业务流程，\n    *   控制的配置也同样是在Spring的配置文件里面进行，针对具体的业务流程，会有不同的控制器，我们具体的设计过程中可以将流程进行抽象归纳，设计出可以重复利用的子单元流程模块，这样不仅使程序结构变得清晰，也大大减少了代码量。\n\n### View层\n\n*   View层 此层与控制层结合比较紧密，需要二者结合起来协同工发。==View层主要负责前台jsp页面的表示==.\n\n### 各层联系\n\n*   DAO层，Service层这两个层次都可以单独开发，互相的耦合度很低，完全可以独立进行，这样的一种模式在开发大项目的过程中尤其有优势\n*   Controller，View层因为耦合度比较高，因而要结合在一起开发，但是也可以看作一个整体独立于前两个层进行开发。这样，在层与层之前我们只需要知道接口的定义，调用接口即可完成所需要的逻辑单元应用，一切显得非常清晰简单。\n\n*   Service逻辑层设计\n    *   Service层是建立在DAO层之上的，建立了DAO层后才可以建立Service层，而Service层又是在Controller层之下的，因而Service层应该既调用DAO层的接口，又要提供接口给Controller层的类来进行调用，它刚好处于一个中间层的位置。每个模型都有一个Service接口，每个接口分别封装各自的业务处理方法。\n\n\n\n# SSM三大框架的运行流程、原理、核心技术详解！\n\n## 一、Spring部分\n\n### （一）Spring的运行流程\n\n*   第一步：加载spring 配置文件`ApplicationContext ac = new ClassPathXmlApplicationContext(\"beans.xml\");`，ApplicationContext接口，它由BeanFactory接口派生而来，因而提供了BeanFactory所有的功能。**配置文件中的bean的信息是被加载在HashMap中的，一个bean通常包括，id，class，property等，bean的id对应HashMap中的key，value呢就是bean**\n\n具体如何加载？源码如下:\n\n```java\nif (beanProperty.element(\"map\") != null){  \nMap<String, Object> propertiesMap = new HashMap<String, Object>();  \nElement propertiesListMap = (Element)beanProperty.elements().get(0);  \nIterator<?> propertiesIterator = propertiesListMap .elements().iterator();  \nwhile (propertiesIterator.hasNext()) {  \n\tElement vet = (Element) propertiesIterator.next();  \n\tif(vet.getName().equals(\"entry\")) {  \n\t\tString key = vet.attributeValue(\"key\");  \n\t\tIterator<?> valuesIterator = vet.elements()  .iterator();  \n\t\twhile (valuesIterator.hasNext()) {  \n\t\t\tElement value = (Element) valuesIterator.next();  \n\t\t\tif (value.getName().equals(\"value\")){  \n\t\t\t\tpropertiesMap.put(key, value.getText());  \n\t\t\t}  \n\t\t\tif (value.getName().equals(\"ref\")) {  \n\t\t\t\tpropertiesMap.put(key, new String[]{\n\t\t\t\t\t\tvalue.attributeValue(\"bean\") \n\t\t\t\t\t\t});  \n\t\t\t}  \n\t\t}  \n\t}  \n}  \nbean.getProperties().put(name, propertiesMap);  \n} \n```\n\n*   第二步：调用getBean方法，getBean是用来获取applicationContext.xml文件里bean的，（）写的是bean的id。一般情况都会强转成我们对应的业务层（接口）。例如`SpringService springService =(SpringService)ac.getBean(\"Service\");`\n*   第三步：这样我们就可以调用业务层(接口实现)的方法。\n\n具体如下：\n![原理图](%E6%A1%86%E6%9E%B6%E6%95%B4%E5%90%88%EF%BC%9ASSM%E6%A1%86%E6%9E%B6%E5%8E%9F%E7%90%86,%E4%BD%9C%E7%94%A8%E5%8F%8A%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95.resource/20180415194047988.png)\nJava反射博大精深，我也不很懂，具体请查看[Java基础之—反射](https://blog.csdn.net/sinat_38259539/article/details/71799078)\n\n**那么bean中的东西到底是怎么注入进去的？**简单来讲，就是在实例化一个bean时，实际上就实例化了类，它通过**反射**调用类中set方法将事先保存在HashMap中的类属性注入到类中。这样就回到了我们Java最原始的地方，**对象.方法，对象.属性**\n\n### （二）Spring的原理\n\n*   **什么是spring？**\n\n*   **spring是一个容器框架，它可以接管web层，业务层，dao层，持久层的各个组件，并且可以配置各种bean， 并可以维护bean与bean的关系，当我们需要使用某个bean的时候，我们可以直接getBean(id)，使用即可**\n\n*   Spring目的：就是让对象与对象（模块与模块）之间的关系没有通过代码来关联，都是通过配置类说明管理的（Spring根据这些配置 内部通过反射去动态的组装对象） ，Spring是一个容器，凡是在容器里的对象才会有Spring所提供的这些服务和功能。\n\n*   层次框架图：\n    ![这里写图片描述](%E6%A1%86%E6%9E%B6%E6%95%B4%E5%90%88%EF%BC%9ASSM%E6%A1%86%E6%9E%B6%E5%8E%9F%E7%90%86,%E4%BD%9C%E7%94%A8%E5%8F%8A%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95.resource/20180415151535222.png)\n    说明：\n*   **web层：** struts充当web层，接管jsp，action，表单，主要体现出mvc的**数据输入**，**数据的处理**，**数据**的显示分离\n    *   **model层：** model层在概念上可以理解为包含了**业务层，dao层，持久层**，需要注意的是，一个项目中，不一定每一个层次都有\n    *   **持久层：**体现oop，主要解决关系模型和对象模型之间的**阻抗**\n\n### （三）Spring的核心技术\n\n*   IOC\n    *   **ioc（inverse of control）控制反转：** 所谓反转就是把创建对象（bean）和维护对象（bean）之间的关系的权利从程序转移到spring的容器（spring-config.xml）\n        ![这里写图片描述](%E6%A1%86%E6%9E%B6%E6%95%B4%E5%90%88%EF%BC%9ASSM%E6%A1%86%E6%9E%B6%E5%8E%9F%E7%90%86,%E4%BD%9C%E7%94%A8%E5%8F%8A%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95.resource/20180415162059434.png)\n        说明：`<bean></bean>`这对标签元素的作用：**当我们加载spring框架时，spring就会自动创建一个bean对象，并放入内存**相当于我们常规的new一个对象，而`<property></property>`中的value则是实现了“**对象.set方法**”，这里也体现了注入了概念\n*   DI\n\n    *   **di（dependency injection）依赖注入：** 实际上di和ioc是同一个概念，spring的设计者，**认为di更准确的表示spring的核心**\n    *   **spring提倡接口编程，在配合di技术就可以达到层与层解耦的目的**，为什么呢？因为层与层之间的关联，由框架帮我们做了，这样代码之间的耦合度降低，代码的复用性提高\n    *   接口编程的好处请访问[Java中接口编程的好处以及实现方式的选择？](https://blog.csdn.net/Song_JiangTao/article/details/82389905) \n*   AOP\n\n    *   **aspect oriented programming（面向切面编程）**\n    *   核心：**在不增加代码的基础上，还增加新功能**\n    *   理解：**面向切面：其实是，把一些公共的“东西”拿出来，比如说，事务，安全，日志，这些方面，如果你用的到，你就引入。** 也就是说：当你需要在执行一个操作（方法）之前想做一些事情（比如，开启事务，记录日志等等），那你就用before，如果想在操作之后做点事情（比如，关闭一些连接等等），那你就用after。其他类似\n\n### （四）spring整体架构图\n\n![spring整体架构图](%E6%A1%86%E6%9E%B6%E6%95%B4%E5%90%88%EF%BC%9ASSM%E6%A1%86%E6%9E%B6%E5%8E%9F%E7%90%86,%E4%BD%9C%E7%94%A8%E5%8F%8A%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95.resource/20190903142522892.png)\n\n#### 1、core container（核心容器）\n\n核心容器包含了core，beans，context和expression language四个模块\n\ncore和beans模块是框架的基础部分，提供IOC和依赖注入特性。这里的基础概念是BeanFactory，它提供对Factory模式的经典实现来消除对程序性单例模式的需要，并真正地允许你从程序逻辑中分离出依赖关系和配置。\n\n*   core模块主要包含了spring框架基本的黑犀牛工具类，spring的其他组建都要用到这个包里的类，core模块是其他组件的基本核心。当然你也可以在自己应用系统中使用这些工具类。\n\n*   beans模块是所有应用都要用到的，它包含访问配置文件，创建和管理bean以及进行ioc，di操作相关的所有类\n\n*   context模块构建与core和beans模块基础之上，提供了一种类似于JNDI注册器的框架式的对象访问方法。context模块继承了beans的特性，为spring核心提供了大量扩展，添加了对国际化（例如资源绑定）、事件传播、资源加载和对context的透明创建的支持。context模块同事也支持j2ee的一些特性，例如EJB，JMX和基础的远程处理，applicationContext接口是context模块的关键。\n\n*   ExpressionLanguage模块提供了强大的表达式语言，用于在运行时查询和操纵对象。他是jsp2.1规范中定义的unifed expression language的扩展。该语言支持设置/获取属性的值，属性的分配，方法的调用 ，访问数组上下文，容器和索引器，逻辑和算数运算符，命名变量以及从spring的ioc容器中根据名称检索对象。它也支持list投影，选择和一般的list聚合\n\n#### 2、Date Access/Integration\n\nDate Access/Integration层包含JDBC，ORM，OXM,JMS和Transaction模块\n\n*   jdbc模块提供了一个jdbc抽象层，他可以消除冗长的jdbc编码和解析数据厂商特有的错误代码。这个模块包含了spring对jdbc数据访问进行封装的所有类。\n\n*   orm模块为流行的对象-关系映射API，如JPA，JDO，Hibernate，iBatis等，提供了一个交互层。利用ORM封装包，可以混合使用所有spring提供的特性进行O/R映射，如前边提到的简单声明性事务管理。spring框架插入了若干个ORM框架 ，从而提供了ORM的对象关系工具，其中包括JDO，hibernate和iBatisSQl Map。所有这些都遵从spring的通用事务和DAO异常层次结构。\n\n*   OXM模块提供了一个对Object/XML映射实现的抽象层，Object/XML映射实现包括JAXB，Castor，XMLBeans，JiBX和XStream。\n\n*   JMS（java massage service）模块主要包含了一些制造和消费消息的特性\n\n*   Transaction模块支持编程和声明性的事务管理，这些事务类必须实现特地的接口。并且对多有的POJO都适用\n\n#### 3、web\n\nweb上下文模块建立在应用程序上下文模块之上，为基于web的应用程序提供了上下文。所以，spring框架支持与Jakarta struts的集成。web模块还简化了处理大部分请求以及将请求参数绑定到域对象的工作。web层包含了web，web-servlet，web-Struts 和web-porlet\n\n*   web模块，提供了基础的面向web的集成特性。例如：多文件上传，使用servlet listeners初始化 Ioc容器已经一个面向web的应用上下文。它还包含spring远程支持中的web的相关部分。\n*   web-servlet模块web.servlet.jar：该模块包含spring的model-view-controller（mvc）实现。spring的mbc框架使得模型范围内的代码和webforms之间能够清楚地分离出来。并与spring框架的其他特性集成在一起。\n*   web-Struts模块，该模块提供了对struts的支持，使得类在spring应用中能够与一个典型的struts web层集成在一起。注意，该支持在spring3.0中已被弃用。\n*   web-portlet模块，提供了用于portlet环境和web-servlet模块的MVC的实现。\n\n#### 4、AOP\n\naop模块提供了一个符合aop联盟标准的面向切面编程的实现，它让你可以定义例如方法拦截器和切点，从而将逻辑代码分开，降低它们之间的耦合性。利用source-level的元数据功能，还可以将各种行为信息合并到你的代码中，这有点像.Net技术中的attribute概念\n\n通过配置管理特性，springAop模块直接将面向界面的编程功能集成到了spring框架中，所以可以很容易地使用spring框架管理的任何对象支持aop，springAop模块为基于spring的应用程序中的对象提供了事务管理服务。通过使用springAop，不用历来EJB组件，就可以将声明性事务管理集成到应用程序中。\n\n*   Aspects模块提供了AspectJ的集成支持。\n*   Instrumentation模块提供了class Instrumentation支持和classloader实现，使用可以再特定的应用服务器上使用。\n\n#### 5、Test\n\ntest模块支持使用JUnit和TestNG对spring组件进行测试。\n\n* * *\n\n# 二、Spring MVC部分\n\n### （一）Spring MVC的运行流程\n\n*   springMVC框架\n    ![这里写图片描述](%E6%A1%86%E6%9E%B6%E6%95%B4%E5%90%88%EF%BC%9ASSM%E6%A1%86%E6%9E%B6%E5%8E%9F%E7%90%86,%E4%BD%9C%E7%94%A8%E5%8F%8A%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95.resource/20180503140150984.png)\n    ==**框架执行流程（面试必问）**==\n    *   1、用户发送请求至前端控制器DispatcherServlet\n    *   2、DispatcherServlet收到请求调用HandlerMapping处理器映射器。\n    *   3、处理器映射器根据请求url找到具体的处理器，生成处理器对象及处理器拦截器(如果有则生成)一并返回给DispatcherServlet。\n    *   4、DispatcherServlet通过HandlerAdapter处理器适配器调用处理器\n    *   5、执行处理器(Controller，也叫后端控制器)。\n    *   6、Controller执行完成返回ModelAndView\n    *   7、HandlerAdapter将controller执行结果ModelAndView返回给DispatcherServlet\n    *   8、DispatcherServlet将ModelAndView传给ViewReslover视图解析器\n    *   9、ViewReslover解析后返回具体View\n    *   10、DispatcherServlet对View进行渲染视图（即**将模型数据填充至视图中**）。\n    *   11、DispatcherServlet响应用户\n\n### （二）Spring MVC的原理\n\n*   1、什么是SpringMVC？\n\n*   **springmvc是spring框架的一个模块，springmvc和spring无需通过中间整合层进行整合。**\n\n*   springmvc是一个基于mvc的web框架。\n    ![这里写图片描述](%E6%A1%86%E6%9E%B6%E6%95%B4%E5%90%88%EF%BC%9ASSM%E6%A1%86%E6%9E%B6%E5%8E%9F%E7%90%86,%E4%BD%9C%E7%94%A8%E5%8F%8A%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95.resource/20180503140031318.png)\n\n*   **mvc**\n\n    *   mvc在b/s系统 下的应用：\n        ![这里写图片描述](%E6%A1%86%E6%9E%B6%E6%95%B4%E5%90%88%EF%BC%9ASSM%E6%A1%86%E6%9E%B6%E5%8E%9F%E7%90%86,%E4%BD%9C%E7%94%A8%E5%8F%8A%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95.resource/20180503140124314.png)\n    *   前端控制器DispatcherServlet（不需要程序员开发）\n        *   作用接收请求，响应结果，相当于转发器，中央处理器。有了DispatcherServlet减少了其它组件之间的耦合度。\n    *   处理器映射器HandlerMapping(不需要程序员开发)\n        *   作用：根据请求的url查找Handler\n    *   处理器适配器HandlerAdapter\n        *   作用：按照特定规则（HandlerAdapter要求的规则）去执行Handler\n    *   处理器Handler **(需要程序员开发)**\n        *   注意：编写Handler时按照HandlerAdapter的要求去做，这样适配器才可以去正确执行Handler\n    *   视图解析器View resolver(不需要程序员开发)\n        *   作用：进行视图解析，根据逻辑视图名解析成真正的视图（view）\n    *   视图View **(需要程序员开发)**\n        *   View是一个接口，实现类支持不同的View类型（jsp、freemarker、pdf…）\n*   **struts2与springMVC的区别？**\n\n  1、Struts2是**类级别的拦截**，一个类对应一个request 上下文, SpringMVC是**方法级别的拦截**,一个方法对应一个request上下文,而方法同时又跟一个url对应，,所以说从架构本身上SpringMVC就容易实现restful url,而struts2的架构实现起来要费劲,因为Struts2中Action的一个方法可以对应一个url ,而其类属性却被所有方法共享，这也就无法用注解或其他方式标识其所属方法了。\n\n  2、由上边原因, SpringMVC的**方法之间基本上独立的**,**独享request response数据,**请求数据通过参数获取,处理结果通过ModelMap交回给框架,方法之间不共享变量,而Struts2搞的就比较乱,虽然方法之间也是独立的,但其**所有Action变量是共享的**,这不会影响程序运行,却给我们编码读程序时带来麻烦,每次来了请求就创建一个Action ,**一个Action对象对应一个request 上下文。**\n\n  3、由于Struts2需要针对每个request进行封装,把request , session等servlet生命周期的变量**封装成一个一 个Map** **,供给每个Action使用**,并保证线程安全,所以在原则上,是**比较耗费内存的。**\n\n  4、拦截器实现机制上， Struts2有以自己的**interceptor机制,** SpringMVC用的是**独立的AOP方式**,这样导致Struts2的配置文件量还是比SpringMVC大。\n\n  5、**SpringMVC的入口是servlet ,而Struts2是filter (这里要指出, filter和servlet是不同的。以前认为filter是servlet的一种特殊)**,这就导致 了二者的机制不同,这里就牵涉到servlet和filter的区别了。\n\n  6、**SpringMVC集成了Ajax ,使用非常方便**，只需一个注解@ResponseBody就可以实现，然后直接返回响应文本即可,**而Struts2拦截器集成了Ajax ,在Action中处理时一般必须安装插件或者自己写代码集成进去**,使用起来也相对不方便。\n\n  7、**SpringMVC验证支持JSR303 ,**处理起来相对更加灵活方便,而**Struts2验证比较繁琐,感觉太烦乱。**\n\n  8、**Spring MVC和Spring是无缝的。从这个项目的管理和安全上也比Struts2高**(当然Struts2也可以通过不同的目录结构和相关配置做到SpringMVC-样的效果,但是需要xml配置的地方不少)。\n\n  9、设计思想上, **Struts2更加符合0OP的编程思想**，SpringMVC就比较谨慎,在servlet上扩展。\n\n  10、**SpringMVC开发效率和性能高于Struts2。**\n\n  11、SpringMVC可以认为已经**100%零配置。**\n\n### （三）Spring MVC的核心技术\n\n*   注解开发（@Controller,@RequestMapping,@ResponseBody。。。。）\n    \n    *   还有Spring的诸多注解，这两者是不需要整合的~\n*   传参，接参（request）\n*   基本配置\n*   文件上传与下载\n    *   Spring MVC中文件上传需要添加Apache Commons FileUpload相关的jar包,\n    *   基于该jar, Spring中提供了MultipartResolver实现类: CommonsMultipartResolver.\n*   拦截器\n* **其实最核心的还是SpringMVC的执行流程，各个点的作用得搞清楚。**\n\n  \n\n\n# 三、Mybatis 部分\n\n### （一）Mybatis的运行流程\n\n*   **Mybatis运行流程图**：\n    ![这里写图片描述](%E6%A1%86%E6%9E%B6%E6%95%B4%E5%90%88%EF%BC%9ASSM%E6%A1%86%E6%9E%B6%E5%8E%9F%E7%90%86,%E4%BD%9C%E7%94%A8%E5%8F%8A%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95.resource/20180420191152719.png)\n\n第一步：配置文件mybatis.xml，大体如下，\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE configuration PUBLIC \"-//mybatis.org//DTD Config 3.0//EN\"\n        \"http://mybatis.org/dtd/mybatis-3-config.dtd\">\n<configuration>\n    <!-- 引入外部文件\n\t\tresource:引入项目中配置文件\n\t\turl:引入网络中或者路径文件\n\t-->\n    <properties resource=\"jdbc.properties\"/>\n    <settings>\n        <!--<setting name=\"mapUnderscoreToCamelCase\" value=\"true\" />-->\n        <setting name=\"lazyLoadingEnabled\" value=\"true\" />\n        <setting name=\"aggressiveLazyLoading\"  value=\"false\" />\n        <setting name=\"cacheEnabled\" value=\"true\"/>\n    </settings>\n    <typeAliases>\n        <package name=\"com.nuc.entity\"></package>\n    </typeAliases>\n    <!-- - - - - - - 数据库环境配置- - - - - - - - - -->\n    <environments default=\"environments\">\n        <environment id=\"environments\">\n            <transactionManager type=\"JDBC\"/>\n            <dataSource type=\"POOLED\">\n                <property name=\"driver\" value=\"${jdbc.driverClass}\"/>\n                <property name=\"url\" value=\"${jdbc.jdbcUrl}\"/>\n                <property name=\"username\" value=\"${jdbc.user}\"/>\n                <property name=\"password\" value=\"${jdbc.password}\"/>\n            </dataSource>\n        </environment>\n    </environments>\n    <!-- - - - - - - -映射文件路径- - - - - - -->\n    <mappers>\n        <!--自动扫描包下的映射文件，要求：同名，同目录-->\n        <package name=\"com.nuc.mapper\" />\n    </mappers>\n</configuration>\n```\n\n第二步：加载我们的xml文件\n第三步：创建SqlSessionFactoryBuilder\n第四步：创建SqlSessionFactory\n第五步：调用openSession()，开启sqlSession\n第六步：getMapper()来获取我们的mapper（接口），mapper对应的映射文件，在加载mybatis.xml时就会加载\n第七步：使用我们自己的mapper和它对应的xml来完成我们和数据库交互。即增删改查。\n第八步：提交session，关闭session。\n\n代码如下：\n\n```java\nString resource = \"mybatis-config.xml\";\nSqlSession sqlSession = null;\nInputStream inputStream = Resources.getResourceAsStream(resource);//读取mybatis配置文件\n//SqlSessionFactoryBuilder这个类的作用就是为了创建SqlSessionFactory的\nSqlSessionFactoryBuilder builder = new SqlSessionFactoryBuilder();\nSqlSessionFactory factory = builder.build(inputStream);\n/**\n *  factory.openSession(); //需手动提交事务\n *   factory.openSession(true); //系统自动提交事务\n */\nsqlSession = factory.openSession();\nCustomerMapper mapper = sqlSession.getMapper(CustomerMapper.class);\n//增删改查的操作\nsqlSession.commit();//如果没有提交，数据库的数据不会改变\nsqlSession.close();\n```\n\n需要注意的是，sqlSession也自带一些数据交互的操作\n\n### （二）Mybatis的原理\n\n*   **什么是Mybatis？**\n\n    *   **mybatis专注sql本身**，需要程序员自己编写sql语句，sql修改、优化比较方便。==**mybatis是一个不完全 的ORM框架**==，虽然程序员自己写sql，mybatis 也可以实现映射（**输入映射、输出映射**）。\n    *   mybatis是一个**持久层的框架**，是apache下的顶级项目。\n    *   mybatis托管到goolecode下，后来托管到github下:[mybatis Github地址](https://github.com/mybatis/mybatis-3/releases)\n    *   mybatis让程序将主要精力放在sql上，通过mybatis提供的映射方式，自由灵活生成（半自动化，大部分需要程序员编写sql）满足需要sql语句。\n    *   mybatis可以将向 preparedStatement 中的输入参数自动进行输入映射，将查询结果集灵活映射成java对象。（输出映射）\n*   **mybatis底层实现**\n\n    *   mybatis底层还是采用**原生jdbc**来对数据库进行操作的，只是通过 SqlSessionFactory，SqlSession Executor,StatementHandler，ParameterHandler,ResultHandler和TypeHandler等几个处理器封装了这些过程\n*   **对原生态jdbc程序（单独使用jdbc开发）问题总结：**\n\n    * 数据库连接，使用时创建，不使用就关闭，对数据库进行频繁连接开启和关闭，造成数据库资源的浪费\n解决：**使用数据库连接池管理数据库连接**\n\n    * 将sql 语句硬编码到Java代码中，如果sql语句修改，需要对java代码重新编译，不利于系统维护\n 解决：**将sql语句设置在xml配置文件中，即使sql变化，也无需重新编译**\n\n    * 向preparedStatement中设置参数，对占位符位置和设置参数值，硬编码到Java文件中，不利于系统维护\n 解决：**将sql语句及占位符，参数全部配置在xml文件中**\n\n    * 从resutSet中遍历结果集数据时，存在硬编码，将获取表的字段进行硬编码，不利于系统维护。\n解决：**将查询的结果集，自动映射成java对象**\n\n*   **mybatis工作原理**\n\n    *   mybatis通过配置文件创建sqlsessionFactory，sqlsessionFactory根据配置文件，配置文件来源于两个方面:一个是xml，一个是Java中的注解，获取sqlSession。SQLSession包含了执行sql语句的所有方法，可以通过SQLSession直接运行映射的sql语句，完成对数据的增删改查和事物的提交工作，用完之后关闭SQLSession。\n\n### （三）Mybatis的核心技术\n\n*   **Mybatis输入映射**\n\n    *   通过parameterType指定输入参数的类型，类型可以是简单类型、hashmap、pojo的包装类型\n*   **Mybatis输出映射**\n    *   **一、resultType**\n        *   作用:将查询结果按照sql列名pojo属性名一致性映射到pojo中。\n\n        *   **使用resultType进行输出映射，只有查询出来的列名和pojo中的属性名一致，该列才可以映射成功。**\n\n        *   如果查询出来的列名和pojo中的属性名全部不一致，则不会创建pojo对象。\n\n        *   只要查询出来的列名和pojo中的属性有一个一致，就会创建pojo对象\n\n        *   **如果查询出来的列名和pojo的属性名不一致，通过定义一个resultMap对列名和pojo属性名之间作一个映射关系。**\n\n    *   **二、resultMap**\n\n        *   使用association和collection完成**一对一和一对多**高级映射（对结果有特殊的映射要求）。\n        *   association：\n            *   作用：将关联查询信息映射到一个**pojo对象**中。\n            *   场合：为了方便查询关联信息可以使用association将关联订单信息映射为用户对象的pojo属性中，比如：查询订单及关联用户信息。\n            *   **使用resultType无法将查询结果映射到pojo对象的pojo属性中，根据对结果集查询遍历的需要选择使用resultType还是resultMap。**\n        *   collection：\n            *   作用：将关联查询信息映射到一个**list集合**中。\n            *   场合：为了方便查询遍历关联信息可以使用collection将关联信息映射到list集合中，比如：查询用户权限范围模块及模块下的菜单，可使用collection将模块映射到模块list中，将菜单列表映射到模块对象的菜单list属性中，这样的作的目的也是方便对查询结果集进行遍历查询。**如果使用resultType无法将查询结果映射到list集合中。**\n*   Mybatis的动态sql\n\n*   什么是动态sql？\n\n    *   mybatis核心 对sql语句进行灵活操作，通过表达式进行判断，对sql进行灵活拼接、组装。\n    *   包括， where ，if，foreach，choose，when，otherwise，set，trim等标签的使用\n*   **数据模型分析思路**\n*   **1、每张表记录的数据内容**\n        *   分模块对每张表记录的内容进行熟悉，相当 于你学习系统 需求（功能）的过程\n    *   **2、每张表重要的字段设置**\n        *   非空字段、外键字段\n*   **3、数据库级别表与表之间的关系**\n\n    *   外键关系\n*   **4、表与表之间的业务关系**\n\n    *   在分析表与表之间的业务关系时一定要建立 在某个业务意义基础上去分析。\\color{red}{在某个业务意义基础上去分析。}在某个业务意义基础上去分析。\n\n\n\n\n# 框架整合示例\n\n[原文链接](https://blog.csdn.net/weixin_30764137/article/details/96416103)\n\n# 3、SSM整合\n\n 下面主要介绍三大框架的整合，至于环境的搭建以及项目的创建，参看上面的博文。这次整合我分了2个配置文件，分别是spring-mybatis.xml，包含spring和mybatis的配置文件，还有个是spring-mvc的配置文件，此外有2个资源文件：jdbc.propertis和log4j.properties。完整目录结构如下（最后附上源码下载地址）：\n ![](%E6%A1%86%E6%9E%B6%E6%95%B4%E5%90%88%EF%BC%9ASSM%E6%A1%86%E6%9E%B6%E5%8E%9F%E7%90%86,%E4%BD%9C%E7%94%A8%E5%8F%8A%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95.resource/441423-20150830174644562-871463833.png)\n\n使用框架的版本：\nSpring 4.0.2 RELEASE\nSpring MVC 4.0.2 RELEASE\nMyBatis 3.2.6\n\n## 3.1、Maven引入需要的JAR包\n\n  在pom.xml中引入jar包\n```xml\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n    <modelVersion>4.0.0</modelVersion>\n    <groupId>com.javen.maven01</groupId>\n    <artifactId>maven01</artifactId>\n    <packaging>war</packaging>\n    <version>0.0.1-SNAPSHOT</version>\n    <name>maven01 Maven Webapp</name>\n    <url>http://maven.apache.org</url>\n\n    <properties>  \n        <!-- spring版本号 -->  \n        <spring.version>4.0.2.RELEASE</spring.version>  \n        <!-- mybatis版本号 -->  \n        <mybatis.version>3.2.6</mybatis.version>  \n        <!-- log4j日志文件管理包版本 -->  \n        <slf4j.version>1.7.7</slf4j.version>  \n        <log4j.version>1.2.17</log4j.version>  \n    </properties> \n\n    <dependencies>\n        <dependency>\n            <groupId>junit</groupId>\n            <artifactId>junit</artifactId>\n            <version>3.8.1</version>\n             <!-- 表示开发的时候引入，发布的时候不会加载此包 -->  \n            <scope>test</scope>\n        </dependency>\n        <!-- <dependency>\n            <groupId>javax.servlet</groupId>\n            <artifactId>javax.servlet-api</artifactId>\n            <version>3.1.0</version>\n        </dependency> -->\n\n         <!-- =======spring核心包 ========= -->  \n        <dependency>  \n            <groupId>org.springframework</groupId>  \n            <artifactId>spring-core</artifactId>  \n            <version>${spring.version}</version>  \n        </dependency>  \n\n        <dependency>  \n            <groupId>org.springframework</groupId>  \n            <artifactId>spring-web</artifactId>  \n            <version>${spring.version}</version>  \n        </dependency>  \n        <dependency>  \n            <groupId>org.springframework</groupId>  \n            <artifactId>spring-oxm</artifactId>  \n            <version>${spring.version}</version>  \n        </dependency>  \n        <dependency>  \n            <groupId>org.springframework</groupId>  \n            <artifactId>spring-tx</artifactId>  \n            <version>${spring.version}</version>  \n        </dependency>  \n\n        <dependency>  \n            <groupId>org.springframework</groupId>  \n            <artifactId>spring-jdbc</artifactId>  \n            <version>${spring.version}</version>  \n        </dependency>  \n\n        <dependency>  \n            <groupId>org.springframework</groupId>  \n            <artifactId>spring-webmvc</artifactId>  \n            <version>${spring.version}</version>  \n        </dependency>  \n        <dependency>  \n            <groupId>org.springframework</groupId>  \n            <artifactId>spring-aop</artifactId>  \n            <version>${spring.version}</version>  \n        </dependency>  \n\n        <dependency>  \n            <groupId>org.springframework</groupId>  \n            <artifactId>spring-context-support</artifactId>  \n            <version>${spring.version}</version>  \n        </dependency>  \n\n        <dependency>  \n            <groupId>org.springframework</groupId>  \n            <artifactId>spring-test</artifactId>  \n            <version>${spring.version}</version>  \n        </dependency>  \n\n\n        <!-- =========  mybatis核心包  ================= -->  \n        <dependency>  \n            <groupId>org.mybatis</groupId>  \n            <artifactId>mybatis</artifactId>  \n            <version>${mybatis.version}</version>  \n        </dependency>  \n         <!-- mybatis/spring包 -->  \n        <dependency>  \n            <groupId>org.mybatis</groupId>  \n            <artifactId>mybatis-spring</artifactId>  \n            <version>1.2.2</version>  \n        </dependency>  \n\n         <!-- 导入java ee jar 包 -->  \n        <dependency>  \n            <groupId>javax</groupId>  \n            <artifactId>javaee-api</artifactId>  \n            <version>7.0</version>  \n        </dependency>  \n\n         <!-- 导入Mysql数据库链接jar包 -->  \n        <dependency>  \n            <groupId>mysql</groupId>  \n            <artifactId>mysql-connector-java</artifactId>  \n            <version>5.1.36</version>  \n        </dependency>  \n        <!-- 导入dbcp的jar包，用来在applicationContext.xml中配置数据库 -->  \n        <dependency>  \n            <groupId>commons-dbcp</groupId>  \n            <artifactId>commons-dbcp</artifactId>  \n            <version>1.2.2</version>  \n        </dependency>  \n\n        <!-- JSTL标签类 -->  \n        <dependency>  \n            <groupId>jstl</groupId>  \n            <artifactId>jstl</artifactId>  \n            <version>1.2</version>  \n        </dependency>  \n        <!-- 日志文件管理包 -->  \n        <!-- log start -->  \n        <dependency>  \n            <groupId>log4j</groupId>  \n            <artifactId>log4j</artifactId>  \n            <version>${log4j.version}</version>  \n        </dependency>  \n\n        <!-- 格式化对象，方便输出日志 -->  \n        <dependency>  \n            <groupId>com.alibaba</groupId>  \n            <artifactId>fastjson</artifactId>  \n            <version>1.1.41</version>  \n        </dependency>  \n\n        <dependency>  \n            <groupId>org.slf4j</groupId>  \n            <artifactId>slf4j-api</artifactId>  \n            <version>${slf4j.version}</version>  \n        </dependency>  \n\n        <dependency>  \n            <groupId>org.slf4j</groupId>  \n            <artifactId>slf4j-log4j12</artifactId>  \n            <version>${slf4j.version}</version>  \n        </dependency>  \n        <!-- log end -->  \n        <!-- 映入JSON -->  \n        <dependency>  \n            <groupId>org.codehaus.jackson</groupId>  \n            <artifactId>jackson-mapper-asl</artifactId>  \n            <version>1.9.13</version>  \n        </dependency>  \n        \n        <!-- ====上传组件包======== -->  \n        <dependency>  \n            <groupId>commons-fileupload</groupId>  \n            <artifactId>commons-fileupload</artifactId>  \n            <version>1.3.1</version>  \n        </dependency>  \n        <dependency>  \n            <groupId>commons-io</groupId>  \n            <artifactId>commons-io</artifactId>  \n            <version>2.4</version>  \n        </dependency>  \n        <dependency>  \n            <groupId>commons-codec</groupId>  \n            <artifactId>commons-codec</artifactId>  \n            <version>1.9</version>  \n        </dependency>  \n\n    </dependencies>\n\n    <build>\n        <finalName>maven01</finalName>\n        <plugins>\n            <plugin>\n                <groupId>org.eclipse.jetty</groupId>\n                <artifactId>jetty-maven-plugin</artifactId>\n                <version>9.2.8.v20150217</version>\n                <configuration>\n                    <httpConnector>\n                        <port>80</port>\n                    </httpConnector>\n                    <stopKey>shutdown</stopKey>\n                    <stopPort>9966</stopPort>\n                </configuration>\n            </plugin>\n        </plugins>\n    </build>\n\n</project>\n```\n\n\n\n## 3.2、整合SpringMVC\n\n### 3.2.1、配置spring-mvc.xml\n\n配置里面的注释也很详细，主要是**自动扫描控制器，视图模式，注解的启动**这三个。\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>  \n<beans xmlns=\"http://www.springframework.org/schema/beans\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:p=\"http://www.springframework.org/schema/p\" xmlns:context=\"http://www.springframework.org/schema/context\" xmlns:mvc=\"http://www.springframework.org/schema/mvc\" xsi:schemaLocation=\"http://www.springframework.org/schema/beans    \n                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd    \n                        http://www.springframework.org/schema/context    \n                        http://www.springframework.org/schema/context/spring-context-3.1.xsd    \n                        http://www.springframework.org/schema/mvc    \n                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd\">  \n    <!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->  \n    <context:component-scan base-package=\"com.javen.controller\" />  \n    <!-- 扩充了注解驱动，可以将请求参数绑定到控制器参数 -->\n    <mvc:annotation-driven/>\n    <!-- 静态资源处理  css js imgs -->\n    <mvc:resources location=\"/resources/**\" mapping=\"/resources\"/>\n\n    <!--避免IE执行AJAX时，返回JSON出现下载文件 -->  \n    <bean id=\"mappingJacksonHttpMessageConverter\" class=\"org.springframework.http.converter.json.MappingJacksonHttpMessageConverter\">  \n        <property name=\"supportedMediaTypes\">  \n            <list>  \n                <value>text/html;charset=UTF-8</value>  \n            </list>  \n        </property>  \n    </bean>  \n    <!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->  \n    <bean class=\"org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter\">  \n        <property name=\"messageConverters\">  \n            <list>  \n                <ref bean=\"mappingJacksonHttpMessageConverter\" /> <!-- JSON转换器 -->  \n            </list>  \n        </property>  \n    </bean>  \n\n    <!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->  \n    <bean id=\"multipartResolver\" class=\"org.springframework.web.multipart.commons.CommonsMultipartResolver\">    \n        <!-- 默认编码 -->  \n        <property name=\"defaultEncoding\" value=\"utf-8\" />    \n        <!-- 文件大小最大值 -->  \n        <property name=\"maxUploadSize\" value=\"10485760000\" />    \n        <!-- 内存中的最大值 -->  \n        <property name=\"maxInMemorySize\" value=\"40960\" />    \n        <!-- 启用是为了推迟文件解析，以便捕获文件大小异常 -->\n        <property name=\"resolveLazily\" value=\"true\"/>\n    </bean>   \n\n    <!-- 配置ViewResolver 。可用多个ViewResolver 。使用order属性排序。   InternalResourceViewResolver 放在最后-->\n    <bean class=\"org.springframework.web.servlet.view.ContentNegotiatingViewResolver\">\n    <property name=\"order\" value=\"1\"></property>\n        <property name=\"mediaTypes\">\n            <map>\n                <!-- 告诉视图解析器，返回的类型为json格式 -->\n                <entry key=\"json\" value=\"application/json\" />\n                <entry key=\"xml\" value=\"application/xml\" />\n                <entry key=\"htm\" value=\"text/htm\" />\n            </map>\n        </property>\n        <property name=\"defaultViews\">\n            <list>\n                <!-- ModelAndView里的数据变成JSON -->\n                <bean class=\"org.springframework.web.servlet.view.json.MappingJacksonJsonView\" />\n            </list>\n        </property>\n        <property name=\"ignoreAcceptHeader\" value=\"true\"></property>\n    </bean>\n\n   <!-- 定义跳转的文件的前后缀 ，视图模式配置-->  \n    <bean class=\"org.springframework.web.servlet.view.InternalResourceViewResolver\">  \n        <!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->  \n        <property name=\"prefix\" value=\"/WEB-INF/jsp/\" />  \n        <property name=\"suffix\" value=\".jsp\" />  \n    </bean>  \n</beans>  \n```\n\n\n\n### 3.2.2、配置web.xml文件\n\n 配置的spring-mvc的Servlet就是为了完成SpringMVC+MAVEN的整合。\n\nweb.xml  \n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>  \n<web-app xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns=\"http://java.sun.com/xml/ns/javaee\" xsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\" version=\"3.0\">  \n    <display-name>Archetype Created Web Application</display-name>  \n    <!-- Spring和mybatis的配置文件 -->  \n   <!-- <context-param>  \n        <param-name>contextConfigLocation</param-name>  \n        <param-value>classpath:spring-mybatis.xml</param-value>  \n    </context-param> -->\n    <!-- 编码过滤器 -->  \n    <filter>  \n        <filter-name>encodingFilter</filter-name>  \n        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>  \n        <async-supported>true</async-supported>  \n        <init-param>  \n            <param-name>encoding</param-name>  \n            <param-value>UTF-8</param-value>  \n        </init-param>  \n    </filter>  \n    <filter-mapping>  \n        <filter-name>encodingFilter</filter-name>  \n        <url-pattern>/*</url-pattern>  \n    </filter-mapping>  \n    <!-- Spring监听器 -->  \n   <!-- <listener>  \n        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>  \n    </listener> -->\n    <!-- 防止Spring内存溢出监听器 -->  \n    <!-- <listener>  \n        <listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>  \n    </listener> --> \n\n    <!-- Spring MVC servlet -->  \n    <servlet>  \n        <servlet-name>SpringMVC</servlet-name>  \n        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>  \n        <init-param>  \n            <param-name>contextConfigLocation</param-name>  \n            <param-value>classpath:spring-mvc.xml</param-value>  \n        </init-param>  \n        <load-on-startup>1</load-on-startup>  \n        <async-supported>true</async-supported>  \n    </servlet>  \n    <servlet-mapping>  \n        <servlet-name>SpringMVC</servlet-name>  \n        <!-- 此处可以可以配置成*.do，对应struts的后缀习惯 -->  \n        <url-pattern>/</url-pattern>  \n    </servlet-mapping>  \n    <welcome-file-list>  \n        <welcome-file>/index.jsp</welcome-file>  \n    </welcome-file-list>  \n\n</web-app>  \n```\n\n### 3.2.3、Log4j的配置\n\n   为了方便调试，一般都会使用日志来输出信息，Log4j是Apache的一个开放源代码项目，通过使用Log4j，我们可以控制日志信息输送的目的地是控制台、文件、GUI组件，甚至是套接口服务器、NT的事件记录器、UNIX Syslog守护进程等；我们也可以控制每一条日志的输出格式；通过定义每一条日志信息的级别，我们能够更加细致地控制日志的生成过程。\n\n Log4j的配置很简单，而且也是通用的，下面给出一个基本的配置，换到其他项目中也无需做多大的调整，如果想做调整或者想了解Log4j的各种配置，参看我转载的一篇博文，很详细：[http://blog.csdn.net/zhshulin/article/details/37937365](http://blog.csdn.net/zhshulin/article/details/37937365)\n\n下面给出配置文件目录：\n\n ![](%E6%A1%86%E6%9E%B6%E6%95%B4%E5%90%88%EF%BC%9ASSM%E6%A1%86%E6%9E%B6%E5%8E%9F%E7%90%86,%E4%BD%9C%E7%94%A8%E5%8F%8A%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95.resource/441423-20150830161022859-271175533.png)\n\nlog4j.properties\n```properties\nlog4j.rootLogger=INFO,Console,File  \n#定义日志输出目的地为控制台  \nlog4j.appender.Console=org.apache.log4j.ConsoleAppender  \nlog4j.appender.Console.Target=System.out  \n#可以灵活地指定日志输出格式，下面一行是指定具体的格式  \nlog4j.appender.Console.layout = org.apache.log4j.PatternLayout  \nlog4j.appender.Console.layout.ConversionPattern=[%c] - %m%n  \n\n#文件大小到达指定尺寸的时候产生一个新的文件  \nlog4j.appender.File = org.apache.log4j.RollingFileAppender  \n#指定输出目录  \nlog4j.appender.File.File = logs/ssm.log  \n#定义文件最大大小  \nlog4j.appender.File.MaxFileSize = 10MB  \n# 输出所以日志，如果换成DEBUG表示输出DEBUG以上级别日志  \nlog4j.appender.File.Threshold = ALL  \nlog4j.appender.File.layout = org.apache.log4j.PatternLayout  \nlog4j.appender.File.layout.ConversionPattern =[%p] [%d{yyyy-MM-dd HH\\:mm\\:ss}][%c]%m%n  \n```\n\n\n\n### 3.2.4、使用Jetty测试\n\n![](%E6%A1%86%E6%9E%B6%E6%95%B4%E5%90%88%EF%BC%9ASSM%E6%A1%86%E6%9E%B6%E5%8E%9F%E7%90%86,%E4%BD%9C%E7%94%A8%E5%8F%8A%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95.resource/441423-20150830165405344-862946687.png)\n实体类 User.java\n\n```java\npackage com.javen.model;\n\npublic class User {\n    private Integer id;\n\n    private String userName;\n\n    private String password;\n\n    private Integer age;\n\n    public Integer getId() {\n        return id;\n    }\n\n    public void setId(Integer id) {\n        this.id = id;\n    }\n\n    public String getUserName() {\n        return userName;\n    }\n\n    public void setUserName(String userName) {\n        this.userName = userName == null ? null : userName.trim();\n    }\n\n    public String getPassword() {\n        return password;\n    }\n\n    public void setPassword(String password) {\n        this.password = password == null ? null : password.trim();\n    }\n\n    public Integer getAge() {\n        return age;\n    }\n\n    public void setAge(Integer age) {\n        this.age = age;\n    }\n\n    @Override\n    public String toString() {\n        return \"User [id=\" + id + \", userName=\" + userName + \", password=\"\n                + password + \", age=\" + age + \"]\";\n    }\n    \n    \n}\n```\n\nUserController.java\n```java\npackage com.javen.controller;\nimport javax.servlet.http.HttpServletRequest;\n\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.springframework.stereotype.Controller;  \nimport org.springframework.ui.Model;  \nimport org.springframework.web.bind.annotation.RequestMapping;  \nimport org.springframework.web.bind.annotation.RequestMethod;\nimport com.javen.model.User;\n  \n  \n@Controller  \n@RequestMapping(\"/user\")  \n// /user/**\npublic class UserController {  \n    private static Logger log=LoggerFactory.getLogger(UserController.class);\n      \n    \n    // /user/test?id=1\n    @RequestMapping(value=\"/test\",method=RequestMethod.GET)  \n    public String test(HttpServletRequest request,Model model){  \n        int userId = Integer.parseInt(request.getParameter(\"id\"));  \n        System.out.println(\"userId:\"+userId);\n        User user=null;\n        if (userId==1) {\n             user = new User();  \n             user.setAge(11);\n             user.setId(1);\n             user.setPassword(\"123\");\n             user.setUserName(\"javen\");\n        }\n       \n        log.debug(user.toString());\n        model.addAttribute(\"user\", user);  \n        return \"index\";  \n    }  \n}  \n```\n\n\n ![](%E6%A1%86%E6%9E%B6%E6%95%B4%E5%90%88%EF%BC%9ASSM%E6%A1%86%E6%9E%B6%E5%8E%9F%E7%90%86,%E4%BD%9C%E7%94%A8%E5%8F%8A%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95.resource/441423-20150830165700734-984268491.png) ![](%E6%A1%86%E6%9E%B6%E6%95%B4%E5%90%88%EF%BC%9ASSM%E6%A1%86%E6%9E%B6%E5%8E%9F%E7%90%86,%E4%BD%9C%E7%94%A8%E5%8F%8A%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95.resource/441423-20150830165755156-107359445.png)\n\n在浏览器中输入：http://localhost/user/test?id=1\n\n![](%E6%A1%86%E6%9E%B6%E6%95%B4%E5%90%88%EF%BC%9ASSM%E6%A1%86%E6%9E%B6%E5%8E%9F%E7%90%86,%E4%BD%9C%E7%94%A8%E5%8F%8A%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95.resource/441423-20150830165857500-208786509.png)\n\n**到此 SpringMVC+Maven 整合完毕**\n\n### 3.3 Spring与MyBatis的整合\n\n取消 3.2.2 web.xml中注释的代码\n\n### 3.3.1、建立JDBC属性文件\n\njdbc.properties（文件编码修改为utf-8）\n```properties\ndriver=com.mysql.jdbc.Driver\nurl=jdbc:mysql://localhost:3306/maven\nusername=root\npassword=root\n#定义初始连接数  \ninitialSize=0 #定义最大连接数  \nmaxActive=20 #定义最大空闲  \nmaxIdle=20 #定义最小空闲  \nminIdle=1 #定义最长等待时间  \nmaxWait=60000  \n```\n\n**此时的目录结构为**\n\n ![](%E6%A1%86%E6%9E%B6%E6%95%B4%E5%90%88%EF%BC%9ASSM%E6%A1%86%E6%9E%B6%E5%8E%9F%E7%90%86,%E4%BD%9C%E7%94%A8%E5%8F%8A%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95.resource/441423-20150830170643640-637516889.png)\n\n### 3.3.2、建立spring-mybatis.xml配置文件\n\n这个文件就是用来完成spring和mybatis的整合的。这里面也没多少行配置，主要的就是自动扫描，自动注入，配置数据库。注释也很详细，大家看看就明白了。\n\nspring-mybatis.xml\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>  \n<beans xmlns=\"http://www.springframework.org/schema/beans\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:p=\"http://www.springframework.org/schema/p\" xmlns:context=\"http://www.springframework.org/schema/context\" xmlns:mvc=\"http://www.springframework.org/schema/mvc\" xsi:schemaLocation=\"http://www.springframework.org/schema/beans    \n                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd    \n                        http://www.springframework.org/schema/context    \n                        http://www.springframework.org/schema/context/spring-context-3.1.xsd    \n                        http://www.springframework.org/schema/mvc    \n                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd\">  \n    <!-- 自动扫描 -->  \n    <context:component-scan base-package=\"com.javen\" />  \n\n    <!-- 引入配置文件 -->  \n    <bean id=\"propertyConfigurer\" class=\"org.springframework.beans.factory.config.PropertyPlaceholderConfigurer\">  \n        <property name=\"location\" value=\"classpath:jdbc.properties\" />  \n    </bean>  \n\n    <bean id=\"dataSource\" class=\"org.apache.commons.dbcp.BasicDataSource\" destroy-method=\"close\">  \n        <property name=\"driverClassName\" value=\"${driver}\" />  \n        <property name=\"url\" value=\"${url}\" />  \n        <property name=\"username\" value=\"${username}\" />  \n        <property name=\"password\" value=\"${password}\" />  \n        <!-- 初始化连接大小 -->  \n        <property name=\"initialSize\" value=\"${initialSize}\"></property>  \n        <!-- 连接池最大数量 -->  \n        <property name=\"maxActive\" value=\"${maxActive}\"></property>  \n        <!-- 连接池最大空闲 -->  \n        <property name=\"maxIdle\" value=\"${maxIdle}\"></property>  \n        <!-- 连接池最小空闲 -->  \n        <property name=\"minIdle\" value=\"${minIdle}\"></property>  \n        <!-- 获取连接最大等待时间 -->  \n        <property name=\"maxWait\" value=\"${maxWait}\"></property>  \n    </bean>  \n\n    <!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->  \n    <bean id=\"sqlSessionFactory\" class=\"org.mybatis.spring.SqlSessionFactoryBean\">  \n        <property name=\"dataSource\" ref=\"dataSource\" />  \n        <!-- 自动扫描mapping.xml文件 -->  \n        <property name=\"mapperLocations\" value=\"classpath:com/javen/mapping/*.xml\"></property>  \n    </bean>  \n\n    <!-- DAO接口所在包名，Spring会自动查找其下的类 -->  \n    <bean class=\"org.mybatis.spring.mapper.MapperScannerConfigurer\">  \n        <property name=\"basePackage\" value=\"com.javen.dao\" />  \n        <property name=\"sqlSessionFactoryBeanName\" value=\"sqlSessionFactory\"></property>  \n    </bean>  \n\n    <!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->  \n    <bean id=\"transactionManager\" class=\"org.springframework.jdbc.datasource.DataSourceTransactionManager\">  \n        <property name=\"dataSource\" ref=\"dataSource\" />  \n    </bean>  \n\n</beans>  \n\n```\n\n\n### 3.4、JUnit测试\n\n  经过以上步骤，我们已经完成了Spring和mybatis的整合，这样我们就可以编写一段测试代码来试试是否成功了。\n\n#### 3.4.1、创建测试用表\n\n既然我们需要测试，那么我们就需要建立在数据库中建立一个测试表，这个表建的很简单，SQL语句为：\n```sql\n-- -- -- \n-- Table structure for `user_t` \n-- ------\nDROP TABLE IF EXISTS `user_t`; CREATE TABLE `user_t` (\n  `id` int(11) NOT NULL AUTO_INCREMENT,\n  `user_name` varchar(40) NOT NULL,\n  `password` varchar(255) NOT NULL,\n  `age` int(4) NOT NULL, PRIMARY KEY (`id`)\n) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8; \n\n-- ---------------------------- \n-- Records of user_t -- \n----------------------------\n\nINSERT INTO `user_t` VALUES ('1', '测试', '345', '24'); INSERT INTO `user_t` VALUES ('2', 'javen', '123', '10');\n```\n\n\n\n#### 3.4.2、利用MyBatis Generator自动创建代码\n\n参考博文：[http://blog.csdn.net/zhshulin/article/details/23912615](http://blog.csdn.net/zhshulin/article/details/23912615)\n\n 这个可根据表自动创建实体类、MyBatis映射文件以及DAO接口，当然，我习惯将生成的接口名改为IUserDao，而不是直接用它生成的UserMapper。如果不想麻烦就可以不改。完成后将文件复制到工程中。如图：\n\n![](%E6%A1%86%E6%9E%B6%E6%95%B4%E5%90%88%EF%BC%9ASSM%E6%A1%86%E6%9E%B6%E5%8E%9F%E7%90%86,%E4%BD%9C%E7%94%A8%E5%8F%8A%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95.resource/441423-20150830172815890-478987509.png)\n\n#### 3.4.3、建立Service接口和实现类\n\n![](%E6%A1%86%E6%9E%B6%E6%95%B4%E5%90%88%EF%BC%9ASSM%E6%A1%86%E6%9E%B6%E5%8E%9F%E7%90%86,%E4%BD%9C%E7%94%A8%E5%8F%8A%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95.resource/441423-20150830173103875-2026469790.png)\n\n下面给出具体的内容：\n\nIUserService.java\n```java\npackage com.javen.service;  \n\nimport com.javen.model.User;\n  \n  \npublic interface IUserService {  \n    public User getUserById(int userId);  \n}  \nUserServiceImpl.java\n\npackage com.javen.service.impl;\nimport javax.annotation.Resource;  \n\nimport org.springframework.stereotype.Service;  \nimport com.javen.dao.IUserDao;\nimport com.javen.model.User;\nimport com.javen.service.IUserService;\n  \n  \n@Service(\"userService\")  \npublic class UserServiceImpl implements IUserService {  \n    @Resource  \n    private IUserDao userDao;  \n    \n    public User getUserById(int userId) {  \n        // TODO Auto-generated method stub  \n        return this.userDao.selectByPrimaryKey(userId);  \n    }  \n  \n}  \n```\n\n#### 3.4.4、建立测试类\n\n 测试类在src/test/java中建立，下面测试类中注释掉的部分是不使用Spring时，一般情况下的一种测试方法；如果使用了Spring那么就可以使用注解的方式来引入配置文件和类，然后再将service接口对象注入，就可以进行测试了。\n\n如果测试成功，表示Spring和Mybatis已经整合成功了。输出信息使用的是Log4j打印到控制台。\n\n```java\npackage com.javen.testmybatis;\n\nimport javax.annotation.Resource;  \n\nimport org.apache.log4j.Logger;  \nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.springframework.test.context.ContextConfiguration;  \nimport org.springframework.test.context.junit4.SpringJUnit4ClassRunner;  \nimport com.alibaba.fastjson.JSON;  \nimport com.javen.model.User;\nimport com.javen.service.IUserService;\n  \n@RunWith(SpringJUnit4ClassRunner.class)     //表示继承了SpringJUnit4ClassRunner类  \n@ContextConfiguration(locations = {\"classpath:spring-mybatis.xml\"})  \n  \npublic class TestMyBatis {  \n    private static Logger logger = Logger.getLogger(TestMyBatis.class);  \n//  private ApplicationContext ac = null;  \n    @Resource  \n    private IUserService userService = null;  \n  \n//  @Before  \n//  public void before() {  \n//      ac = new ClassPathXmlApplicationContext(\"applicationContext.xml\");  \n//      userService = (IUserService) ac.getBean(\"userService\");  \n//  }  \n  \n    @Test  \n    public void test1() {  \n        User user = userService.getUserById(1);  \n        // System.out.println(user.getUserName());  \n        // logger.info(\"值：\"+user.getUserName());  \n        logger.info(JSON.toJSONString(user));  \n    }  \n}  \n```\n\n\n测试结果 \n\n![](%E6%A1%86%E6%9E%B6%E6%95%B4%E5%90%88%EF%BC%9ASSM%E6%A1%86%E6%9E%B6%E5%8E%9F%E7%90%86,%E4%BD%9C%E7%94%A8%E5%8F%8A%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95.resource/441423-20150830173453859-1226139271.png)\n\n#### 3.4.5、建立UserController类\n\nUserController.java  控制器   \n```java\npackage com.javen.testmybatis;\n\nimport javax.annotation.Resource;  \n\nimport org.apache.log4j.Logger;  \nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.springframework.test.context.ContextConfiguration;  \nimport org.springframework.test.context.junit4.SpringJUnit4ClassRunner;  \nimport com.alibaba.fastjson.JSON;  \nimport com.javen.model.User;\nimport com.javen.service.IUserService;\n  \n@RunWith(SpringJUnit4ClassRunner.class)     //表示继承了SpringJUnit4ClassRunner类  \n@ContextConfiguration(locations = {\"classpath:spring-mybatis.xml\"})  \n  \npublic class TestMyBatis {  \n    private static Logger logger = Logger.getLogger(TestMyBatis.class);  \n//  private ApplicationContext ac = null;  \n    @Resource  \n    private IUserService userService = null;  \n  \n//  @Before  \n//  public void before() {  \n//      ac = new ClassPathXmlApplicationContext(\"applicationContext.xml\");  \n//      userService = (IUserService) ac.getBean(\"userService\");  \n//  }  \n  \n    @Test  \n    public void test1() {  \n        User user = userService.getUserById(1);  \n        // System.out.println(user.getUserName());  \n        // logger.info(\"值：\"+user.getUserName());  \n        logger.info(JSON.toJSONString(user));  \n    }  \n}  \n```\n\n\n#### 3.4.6、新建jsp页面\n\nfile.jsp\n```jsp\n<%@ page language=\"java\" contentType=\"text/html; charset=utf-8\" pageEncoding=\"utf-8\"%>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n<html>\n<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n<title>Insert title here</title>\n</head>\n<body>\n    <h1>上传文件</h1>\n    <form method=\"post\" action=\"/user/doUpload\" enctype=\"multipart/form-data\">\n        <input type=\"file\" name=\"file\"/>\n        <input type=\"submit\" value=\"上传文件\"/>\n\n    </form>\n</body>\n</html>\n\nindex.jsp\n\n<html>\n<body>\n<h2>Hello World!</h2>\n</body>\n</html>\n```\n\nshowUser.jsp\n\n```jsp\n<%@ page language=\"java\" import=\"java.util.*\" pageEncoding=\"utf-8\"%>  \n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\">  \n<html>  \n  <head>  \n    <title>测试</title>  \n  </head>  \n\n  <body> ${user.userName} </body>  \n</html>\n```\n\n\n**至此，完成Spring+SpingMVC+mybatis这三大框架整合完成。**\n\n#### 3.4.7、部署项目\n\n**输入地址：http://localhost/user/jsontype/2**\n\n![](%E6%A1%86%E6%9E%B6%E6%95%B4%E5%90%88%EF%BC%9ASSM%E6%A1%86%E6%9E%B6%E5%8E%9F%E7%90%86,%E4%BD%9C%E7%94%A8%E5%8F%8A%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95.resource/441423-20150830174520609-1121228290.png)\n\n  项目下载地址：[https://github.com/Javen205/SSM](https://github.com/Javen205/SSM)\n\n\n\n",[[1574075514468,["GJX@GJXAIOUPC",[[1,0,"\n"]],[0,0],[1,1]]],[1574075516842,["GJX@GJXAIOUPC",[[1,0,"-"]],[0,0],[1,1]]],[1574075517167,["GJX@GJXAIOUPC",[[1,0,"-"]],[1,1],[2,2]]],[1574075517410,["GJX@GJXAIOUPC",[[1,2,"-"]],[2,2],[3,3]]],[1574075518096,["GJX@GJXAIOUPC",[[1,4,"\n---\n\n"]],[3,3],[4,4]]],[1574075518855,["GJX@GJXAIOUPC",[[1,5,"\n"]],[4,4],[5,5]]],[1574075520467,["GJX@GJXAIOUPC",[[-1,5,"\n"]],[5,5],[4,4]]],[1574075528270,["GJX@GJXAIOUPC",[[1,4,"style: sumer"]],[4,4],[16,16]]],[1574075531109,["GJX@GJXAIOUPC",[[1,14,"m"]],[14,14],[15,15]]],[1574075514468,["GJX@GJXAIOUPC",[[1,0,"\n"]],[0,0],[1,1]]],[1574075516842,["GJX@GJXAIOUPC",[[1,0,"-"]],[0,0],[1,1]]],[1574075517167,["GJX@GJXAIOUPC",[[1,0,"-"]],[1,1],[2,2]]],[1574075517410,["GJX@GJXAIOUPC",[[1,2,"-"]],[2,2],[3,3]]],[1574075518096,["GJX@GJXAIOUPC",[[1,4,"\n---\n\n"]],[3,3],[4,4]]],[1574075518855,["GJX@GJXAIOUPC",[[1,5,"\n"]],[4,4],[5,5]]],[1574075520467,["GJX@GJXAIOUPC",[[-1,5,"\n"]],[5,5],[4,4]]],[1574075528270,["GJX@GJXAIOUPC",[[1,4,"style: sumer"]],[4,4],[16,16]]],[1574075531109,["GJX@GJXAIOUPC",[[1,14,"m"]],[14,14],[15,15]]],[1574075549399,[null,[[-1,0,"---\nstyle: summer\n---\n\n"]],[0,0],[0,0]]],[1574075549399,[null,[[1,0,"---\nstyle: summer\n---\n\n"]],[0,0],[0,0]]],[1574075514468,["GJX@GJXAIOUPC",[[1,0,"\n"]],[0,0],[1,1]]],[1574075516842,["GJX@GJXAIOUPC",[[1,0,"-"]],[0,0],[1,1]]],[1574075517167,["GJX@GJXAIOUPC",[[1,0,"-"]],[1,1],[2,2]]],[1574075517410,["GJX@GJXAIOUPC",[[1,2,"-"]],[2,2],[3,3]]],[1574075518096,["GJX@GJXAIOUPC",[[1,4,"\n---\n\n"]],[3,3],[4,4]]],[1574075518855,["GJX@GJXAIOUPC",[[1,5,"\n"]],[4,4],[5,5]]],[1574075520467,["GJX@GJXAIOUPC",[[-1,5,"\n"]],[5,5],[4,4]]],[1574075528270,["GJX@GJXAIOUPC",[[1,4,"style: sumer"]],[4,4],[16,16]]],[1574075531109,["GJX@GJXAIOUPC",[[1,14,"m"]],[14,14],[15,15]]],[1574075549889,[null,[[-1,0,"---\nstyle: summer\n---\n\n---\nstyle: summer\n---\n\n"]],[0,0],[0,0]]],[1574075549889,[null,[[1,0,"---\nstyle: summer\n---\n\n---\nstyle: summer\n---\n\n"]],[0,0],[0,0]]],[1574075514468,["GJX@GJXAIOUPC",[[1,0,"\n"]],[0,0],[1,1]]],[1574075516842,["GJX@GJXAIOUPC",[[1,0,"-"]],[0,0],[1,1]]],[1574075517167,["GJX@GJXAIOUPC",[[1,0,"-"]],[1,1],[2,2]]],[1574075517410,["GJX@GJXAIOUPC",[[1,2,"-"]],[2,2],[3,3]]],[1574075518096,["GJX@GJXAIOUPC",[[1,4,"\n---\n\n"]],[3,3],[4,4]]],[1574075518855,["GJX@GJXAIOUPC",[[1,5,"\n"]],[4,4],[5,5]]],[1574075520467,["GJX@GJXAIOUPC",[[-1,5,"\n"]],[5,5],[4,4]]],[1574075528270,["GJX@GJXAIOUPC",[[1,4,"style: sumer"]],[4,4],[16,16]]],[1574075531109,["GJX@GJXAIOUPC",[[1,14,"m"]],[14,14],[15,15]]],[1574075550098,[null,[[-1,0,"---\nstyle: summer\n---\n\n---\nstyle: summer\n---\n\n---\nstyle: summer\n---\n\n"]],[0,0],[0,0]]],[1574075550098,[null,[[1,0,"---\nstyle: summer\n---\n\n---\nstyle: summer\n---\n\n---\nstyle: summer\n---\n\n"]],[0,0],[0,0]]],[1574075514468,["GJX@GJXAIOUPC",[[1,0,"\n"]],[0,0],[1,1]]],[1574075516842,["GJX@GJXAIOUPC",[[1,0,"-"]],[0,0],[1,1]]],[1574075517167,["GJX@GJXAIOUPC",[[1,0,"-"]],[1,1],[2,2]]],[1574075517410,["GJX@GJXAIOUPC",[[1,2,"-"]],[2,2],[3,3]]],[1574075518096,["GJX@GJXAIOUPC",[[1,4,"\n---\n\n"]],[3,3],[4,4]]],[1574075518855,["GJX@GJXAIOUPC",[[1,5,"\n"]],[4,4],[5,5]]],[1574075520467,["GJX@GJXAIOUPC",[[-1,5,"\n"]],[5,5],[4,4]]],[1574075528270,["GJX@GJXAIOUPC",[[1,4,"style: sumer"]],[4,4],[16,16]]],[1574075531109,["GJX@GJXAIOUPC",[[1,14,"m"]],[14,14],[15,15]]],[1574075550288,[null,[[-1,0,"---\nstyle: summer\n---\n\n---\nstyle: summer\n---\n\n---\nstyle: summer\n---\n\n---\nstyle: summer\n---\n\n"]],[0,0],[0,0]]],[1574075550288,[null,[[1,0,"---\nstyle: summer\n---\n\n---\nstyle: summer\n---\n\n---\nstyle: summer\n---\n\n---\nstyle: summer\n---\n\n"]],[0,0],[0,0]]],[1574075514468,["GJX@GJXAIOUPC",[[1,0,"\n"]],[0,0],[1,1]]],[1574075516842,["GJX@GJXAIOUPC",[[1,0,"-"]],[0,0],[1,1]]],[1574075517167,["GJX@GJXAIOUPC",[[1,0,"-"]],[1,1],[2,2]]],[1574075517410,["GJX@GJXAIOUPC",[[1,2,"-"]],[2,2],[3,3]]],[1574075518096,["GJX@GJXAIOUPC",[[1,4,"\n---\n\n"]],[3,3],[4,4]]],[1574075518855,["GJX@GJXAIOUPC",[[1,5,"\n"]],[4,4],[5,5]]],[1574075520467,["GJX@GJXAIOUPC",[[-1,5,"\n"]],[5,5],[4,4]]],[1574075528270,["GJX@GJXAIOUPC",[[1,4,"style: sumer"]],[4,4],[16,16]]],[1574075531109,["GJX@GJXAIOUPC",[[1,14,"m"]],[14,14],[15,15]]],[1574075558120,[null,[[-1,0,"---\nstyle: summer\n---\n\n---\nstyle: summer\n---\n\n---\nstyle: summer\n---\n\n---\nstyle: summer\n---\n\n---\nstyle: summer\n---\n\n"]],[0,0],[0,0]]],[1574075558120,[null,[[1,0,"---\nstyle: summer\n---\n\n---\nstyle: summer\n---\n\n---\nstyle: summer\n---\n\n---\nstyle: summer\n---\n\n---\nstyle: summer\n---\n\n"]],[0,0],[0,0]]],[1574075514468,["GJX@GJXAIOUPC",[[1,0,"\n"]],[0,0],[1,1]]],[1574075516842,["GJX@GJXAIOUPC",[[1,0,"-"]],[0,0],[1,1]]],[1574075517167,["GJX@GJXAIOUPC",[[1,0,"-"]],[1,1],[2,2]]],[1574075517410,["GJX@GJXAIOUPC",[[1,2,"-"]],[2,2],[3,3]]],[1574075518096,["GJX@GJXAIOUPC",[[1,4,"\n---\n\n"]],[3,3],[4,4]]],[1574075518855,["GJX@GJXAIOUPC",[[1,5,"\n"]],[4,4],[5,5]]],[1574075520467,["GJX@GJXAIOUPC",[[-1,5,"\n"]],[5,5],[4,4]]],[1574075528270,["GJX@GJXAIOUPC",[[1,4,"style: sumer"]],[4,4],[16,16]]],[1574075531109,["GJX@GJXAIOUPC",[[1,14,"m"]],[14,14],[15,15]]],[1574075560900,[null,[[-1,0,"---\nstyle: summer\n---\n\n---\nstyle: summer\n---\n\n---\nstyle: summer\n---\n\n---\nstyle: summer\n---\n\n---\nstyle: summer\n---\n\n---\nstyle: summer\n---\n\n"]],[0,0],[0,0]]],[1574075560900,[null,[[1,0,"---\nstyle: summer\n---\n\n---\nstyle: summer\n---\n\n---\nstyle: summer\n---\n\n---\nstyle: summer\n---\n\n---\nstyle: summer\n---\n\n---\nstyle: summer\n---\n\n"]],[0,0],[0,0]]],[1574075514468,["GJX@GJXAIOUPC",[[1,0,"\n"]],[0,0],[1,1]]],[1574075516842,["GJX@GJXAIOUPC",[[1,0,"-"]],[0,0],[1,1]]],[1574075517167,["GJX@GJXAIOUPC",[[1,0,"-"]],[1,1],[2,2]]],[1574075517410,["GJX@GJXAIOUPC",[[1,2,"-"]],[2,2],[3,3]]],[1574075518096,["GJX@GJXAIOUPC",[[1,4,"\n---\n\n"]],[3,3],[4,4]]],[1574075518855,["GJX@GJXAIOUPC",[[1,5,"\n"]],[4,4],[5,5]]],[1574075520467,["GJX@GJXAIOUPC",[[-1,5,"\n"]],[5,5],[4,4]]],[1574075528270,["GJX@GJXAIOUPC",[[1,4,"style: sumer"]],[4,4],[16,16]]],[1574075531109,["GJX@GJXAIOUPC",[[1,14,"m"]],[14,14],[15,15]]]],null,"GJX@GJXAIOUPC"]]}