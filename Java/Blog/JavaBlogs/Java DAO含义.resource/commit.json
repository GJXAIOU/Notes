{"compress":true,"commitItems":[["026a0fcd-b2bb-4413-9a5a-39ebb763047f",1564662688390,"DAO（Data Access Object）顾名思义是一个为数据库或其他持久化机制提供了抽象接口的对象，在不暴露底层持久化方案实现细节的前提下提供了各种数据访问操作。\n\n在实际的开发中，应该将所有对数据源的访问操作进行抽象化后封装在一个公共API中。\n\n   用程序设计语言来说，就是建立一个接口，接口中定义了此应用程序中将会用到的所有事务方法。在这个应用程序中，当需要和数据源进行交互的时候则使用这个接口，并且编写一个单独的类来实现这个接口，在逻辑上该类对应一个特定的数据存储。\n\nDAO模式实际上包含了两个模式，\n\n一是Data Accessor（数据访问器），解决如何访问数据的问题\n\n二是Data Object（数据对象），解决如何用对象封装数据。\n\n实例：\n\nDAO层使应用程序更加容易地迁移到一个不同的数据库实现。业务对象不了解低层数据实现。因而，该迁移只涉及对DAO层的变化。更进一步说，如果使用工厂策略，则有可能为每一个低层存储实现提供一个具体工厂实现。在这种情况下，迁移到不同的迁移实现意味着给应用程序提供一个新的工厂实现。同时，抽象DAO工厂可以指定需要创建的实例DAO，并交由不同的具体DAO工厂去创建。\n\n![](http://zhangjunhd.blog.51cto.com/attachment/200901/200901281233114969611.jpg)\n\nVO为Student类，将所有关于持久化的操作归入StudentDAO类中。\n\nStudent.java\n\n| \n\n**public class** Student {\n\n    **private** String id;\n\n    **private** String name;\n\n    **private** String cardId;\n\n    **private int** age;\n\n    getter/setter()。。。\n\n}\n\n |\n\nStudentDAO.java\n\n| \n\n**public interface** StudentDAO {\n\n    **public boolean** insertStudent(Student student);\n\n    **public boolean** deleteStudent(**int** id);\n\n    **public** Student findStudent(**int** id);\n\n}\n\n |\n\n抽象DAO工厂DAOFactory指定了可能的具体DAO工厂，并指定需要创建的具体DAO。\n\nDAOFactory.java\n\n| \n\n**public abstract class** DAOFactory {\n\n    // List of DAO types supported by the factory\n\n    **public static final int** _SQLSERVER_ = 1;\n\n    **public static final int** _MYSQL_ = 2;\n\n    // There will be a method for each DAO that can be\n\n    // created. The concrete factories will have to\n\n    // implement these methods.\n\n    **public abstract** StudentDAO getStudentDAO();\n\n    **public static** DAOFactory getDAOFactory(**int** whichFactory) {\n\n       **switch** (whichFactory) {\n\n       **case** _SQLSERVER_:\n\n           **return new** SqlServerDAOFactory();\n\n       **case** _MYSQL_:\n\n           **return new** MySqlDAOFactory();\n\n       **default**:\n\n           **return null**;\n\n       }\n\n    }\n\n}\n\n |\n\n这里提供两个具体DAO工厂，SqlServerDAOFactory和MySqlDAOFactory。提供它们来得到具体的DAO实现。\n\nSqlServerDAOFactory.java\n\n| \n\n**public class** SqlServerDAOFactory **extends** DAOFactory{\n\n    **public static final** String _DRIVER_ = \"com.microsoft.sqlserver.jdbc.SQLServerDriver\";\n\n    **public static final** String _DBURL_ = \"jdbc:sqlserver://localhost:1025; DatabaseName=tmp\";\n\n    **private static** String _userName_ = \"sa\";\n\n    **private static** String _userPwd_ = \"root\";\n\n    **public static** Connection createConnection() {\n\n       Connection dbConn = **null**;\n\n       **try** {\n\n           Class._forName_(_DRIVER_);\n\n           dbConn = DriverManager._getConnection_(_DBURL_,_userName_, _userPwd_);\n\n       } **catch** (ClassNotFoundException e) {\n\n           e.printStackTrace();\n\n       } **catch** (SQLException e) {\n\n           e.printStackTrace();\n\n       }\n\n       **return** dbConn;\n\n    }\n\n    **public** StudentDAO getStudentDAO() {\n\n       **return new** SqlServerStudentDAO(_createConnection_());\n\n    }\n\n    。。。。。。\n\n}\n\n |\n\nMySqlDAOFactory.java略\n\n这里提供一个缺省的StudentDAO实现StudentDAODefaultImpl，它依据特定的Connection，来实现数据库相关操作。\n\nStudentDAODefaultImpl.java\n\n| \n\n**public abstract class** StudentDAODefaultImpl **implements** StudentDAO {\n\n    **private** Connection dbConn;\n\n    **public** StudentDAODefaultImpl(Connection dbConn) {\n\n       **this**.dbConn = dbConn;\n\n    }\n\n    **public boolean** deleteStudent(**int** id) {\n\n       Statement stmt;\n\n       **try** {\n\n           stmt = dbConn.createStatement();\n\n           String sql = \"DELETE FROM student_table WHERE id = '\" + id + \"'\";\n\n           **int** delete = stmt.executeUpdate(sql);\n\n           **if** (delete == 1)\n\n              **return true**;\n\n       } **catch** (SQLException e) {\n\n           e.printStackTrace();\n\n       }\n\n       **return false**;\n\n    }\n\n    **public** Student findStudent(**int** id) {。。。}\n\n    **public boolean** insertStudent(Student stu) {。。。}\n\n}\n\n |\n\n两个特定的DAO类分别从两个具体DAO工厂，SqlServerDAOFactory和MySqlDAOFactory中得到连接对象。\n\nSqlServerStudentDAO.java\n\n| \n\n**public class** SqlServerStudentDAO **extends** StudentDAODefaultImpl {\n\n    **private** Connection dbConn = SqlServerDAOFactory._createConnection_();\n\n    **public** SqlServerStudentDAO(Connection dbConn) {\n\n       **super**(dbConn);\n\n    }\n\n    **public** Connection getDbConn() {\n\n       **return** dbConn;\n\n    }\n\n}\n\n |\n\nMySqlStudentDAO.java略\n\n测试类Test.java\n\n| \n\n**public class** Test {\n\n    **public static void** main(String[] args) {\n\n       Student student = **new** Student(\"1\", \"zj\", \"0901\", 27);\n\n       DAOFactory mysqlDAOFactory = DAOFactory._getDAOFactory_(DAOFactory._MYSQL_);\n\n       StudentDAO studentDAO = mysqlDAOFactory.getStudentDAO();\n\n       studentDAO.insertStudent(student);\n\n    }\n\n}\n\n |",[[1564662686114,["GJX@GJXAIOU",[[1,0,"# "],[-1,3,"（"],[1,4,"-数据访问对象("],[-1,22,"）顾名思义是一个为数据库或其他持久化机制提供了抽象接口的对象，在不暴露底层持久化方案"],[1,64,") 模式\n\n[![](https://s3.51cto.com//wyfs02/M02/11/4F/wKioL1LODr_QMH8wAAAVQMaP2TA332_middle.jpg)](https://blog.51cto.com/zhangjunhd)\n\n[zhangjunhd](https://blog.51cto.com/zhangjunhd)关注0人评论[6212人阅读](javascript:;)[2009-01-28 11:57:30](javascript:;)\n\n业务对象只应该关注业务逻辑，不应该关心数据存取的细节。数据访问对象必须实现特定的持久化策略（如，基于ＪＤＢＣ或Ｈｉｂｅｒｎａｔｅ的持久化逻辑）， 这样就抽出来了DAO层，作为数据源层，而之上的Domain Model层与之通讯而已，如果将那些"],[-1,66,"细节的前提下提供"],[-1,75,"各种"],[-1,83,"。\n\n在实际的开发中，应该将所有对"],[1,100,"的所有细节都放入高层Domain model(领域模型)的话，系统的结构一定层次上来说就变得有些混乱。低级别的"],[-1,102,"源的"],[1,106,"逻辑与高级别的业务逻辑分离，用一个DAO接口隐藏持久化"],[-1,108,"进行抽象化后封装在一个公共API中。\n\n   用程序设计语言来说，就是建立一个接口，接口中定义了此应用程序中将会用到的所有事务方法。在这个应用程序中，当需要和数据源进行交互的时候则使用这个接口，并且编写一个单独的类来实现这个接口，在逻辑上该类对应一个特定的"],[1,236,"的细节，这样使用的最终目的就是让业务对象无需知道底层的持久化技术知识，这是标准 j2ee 设计模式之一。\n\n1.       DAO模式使用环境\n\n具体类图如下。\n\n![](https://blog.51cto.com/attachment/200901/200901281233114873707.jpg)\n\n参与者和职责\n\n1)      BusinessObject(业务对象)\n\n代表数据客户端。正是该对象需要访问"],[1,238,"源以获取和"],[1,240,"数据"],[-1,243,"DAO模式实际上包含了两个模式，"],[1,259,"2)      DataAccessObject(数据访问对象)"],[-1,261,"一"],[1,263,"该模式的主要对象。"],[-1,267," "],[-1,274,"or（"],[1,277,"Object抽取该BusinessObject的低层"],[-1,281,"器），解决如何访问数据的问题\n\n二是"],[1,299,"实现，以保证对数据源的透明访问。BusinessObject也可以把数据加载和存储操作委托给DataAccessObject。\n\n3)      "],[-1,303," "],[1,304,"Source(数据源)\n\n代表数据源实现。数据源可以是各RDBMSR数据库，OODBMS,XML文件等等。\n\n4)      Value"],[-1,310,"（"],[1,311,"(值对象)\n\n代表用做"],[1,313,"携带着的值"],[-1,315,"），解决如何用对象封装"],[1,326,"。DataAccessObject可以使用值对象来把数据返回给客户端。\n\nDataAccessObject也许会接受来自于客户端的数据，其中这些用于更新数据源的数据存放于值对象中来传递。\n\n2. "],[1,328,"访问对象的工厂策略\n\n通过调整抽象工厂和工厂方法模式，DAO模式可以达到很高的灵活度。具体类图如下"],[-1,331,"实例："],[1,334,"![](https://blog.51cto.com/attachment/200901/200901281233114917993.jpg)"],[1,472,"\n\n"],[1,516,"3.DAO代码实例（工程代码见附件）\n\n一个典型的DAO组成：DAO工厂类，DAO接口，实现DAO接口的具体类(每个 DAO 实例负责一个主要域对象或实体)，VO（Value Object）。\n\n"],[1,524,"s"],[-1,527,"zhangjunhd."],[-1,665," "],[1,666,"** **"],[-1,707," "],[1,708," "],[-1,735," "],[1,736," "],[-1,765," "],[1,766," "],[-1,788," "],[1,789,"** **"],[-1,804," "],[1,805," "],[-1,861," "],[1,862,"** **"],[-1,900," "],[1,901,"** **"],[-1,956," "],[1,957,"** **"],[-1,1127," "],[1,1128,"** **"],[-1,1136," "],[1,1137,"** **"],[-1,1162," "],[1,1163," "],[-1,1222," "],[1,1223,"** **"],[-1,1229," "],[1,1230,"** **"],[-1,1235," "],[1,1236,"** **"],[-1,1272," "],[1,1273,"** **"],[-1,1279," "],[1,1280,"** **"],[-1,1285," "],[1,1286,"** **"],[-1,1309," "],[1,1310," "],[1,1362," "],[-1,1365," "],[-1,1418," "],[1,1419," "],[-1,1460," "],[1,1461,"** **"],[-1,1513," "],[1,1514,"** **"],[-1,1658," "],[1,1659,"** **"],[-1,1734," "],[1,1735,"** **"],[-1,1801," "],[1,1802,"** **"],[-1,1817," "],[1,1818," "],[-1,1824," "],[1,1825," "],[-1,1941," "],[1,1942,"** **"],[-1,2007," "],[1,2008,"** **"],[-1,2014," "],[1,2015,"** **"],[-1,2040," "],[1,2041," "],[-1,2102," "],[1,2103,"** **"],[-1,2109," "],[1,2110,"** **"],[-1,2134," "],[1,2135," "],[-1,2202," "],[1,2203,"** **"],[-1,2231," "],[1,2232," "],[-1,2252," "],[1,2253,"** **"],[-1,2280," "],[1,2281," "],[-1,2302," "],[1,2303,"** **"],[1,2345," "],[-1,2351," "],[-1,2411," "],[1,2412," "],[-1,2446," "],[1,2447,"  "],[-1,2450," "],[1,2498," "],[-1,2529," "],[1,2530," "],[-1,2582," "],[1,2583," "],[-1,2611," "],[1,2612," "],[-1,2654," "],[1,2655," "],[-1,2683," "],[1,2684," "],[-1,2717," "],[1,2718," "],[-1,2781," "],[1,2782,"** **"],[-1,2835," "],[1,2836," "],[-1,2842," "],[1,2843," "],[-1,2994," "],[1,2995,"** **"],[-1,3003," "],[1,3004,"** **"],[-1,3089," "],[1,3090," "],[-1,3180," "],[1,3181," "],[-1,3195," "],[1,3196," "],[-1,3211," "],[1,3212,"** **"],[-1,3257," "],[1,3258," "],[-1,3303," "],[1,3304," "],[-1,3310," "],[1,3311," "],[-1,3348," "],[1,3349," "],[-1,3361," "],[1,3362," "],[-1,3402," "],[1,3403," "],[-1,3409," "],[1,3410," "],[-1,3525," "],[1,3526,"** **"],[-1,3541," "],[1,3542," "],[-1,3584," "],[1,3585," "],[-1,3613," "],[1,3614," "],[-1,3632," "],[1,3633,"** **"],[-1,3646," "],[1,3647," "],[-1,3716," "],[1,3717,"** **"],[-1,3873," "],[1,3874,"** **"],[-1,3965," "],[1,3966," "],[-1,3972," = "],[1,3975," = "],[-1,4105," "],[1,4106," "],[-1,4180," "],[1,4181," "],[-1,4240," "],[1,4241,"** **"],[-1,4269," "],[1,4270,"** **"],[-1,4276," "],[1,4277,"** **"],[-1,4313," "],[1,4314," "],[-1,4352," "],[1,4353," "],[-1,4358," "],[1,4359," "],[-1,4379," "],[1,4380," "],[-1,4464," "],[1,4465," "],[-1,4529," "],[1,4530," "],[-1,4569," "],[1,4570," "]],[0,4578],[5678,5678]]],[1564662694917,["GJX@GJXAIOU",[[-1,37,"[![](https://s3.51cto.com//wyfs02/M02/11/4F/wKioL1LODr_QMH8wAAAVQMaP2TA332_middle.jpg)](https://blog.51cto.com/zhangjunhd)\n\n[zhangjunhd](https://blog.51cto.com/zhangjunhd)关注0人评论[6212人阅读](javascript:;)[2009-01-28 11:57:30](javascript:;)\n"]],[36,272],[36,36]]],[1564662767045,["GJX@GJXAIOU",[[-1,88,"Ｊ"]],[89,89],[88,88]]],[1564662770246,["GJX@GJXAIOU",[[1,88,"J"],[-1,109," "],[1,110," "],[-1,294," "],[1,295," "],[-1,299," "],[1,300," "],[-1,311,"       "],[1,318,"       "],[-1,421,"      "],[1,427,"      "],[-1,482,"      "],[1,488,"      "],[-1,631,"      "],[1,637,"      "],[-1,698,"      "],[1,704,"      "],[-1,832," "],[1,833," "],[-1,1200," DAO "],[1,1205," DAO "],[-1,1381," "],[1,1382," "],[-1,1391," "],[1,1392," "],[-1,1403,"    "],[1,1407,"    "],[-1,1418," "],[1,1419," "],[-1,1425," "],[1,1426," "],[-1,1431,"    "],[1,1435,"    "],[-1,1446," "],[1,1447," "],[-1,1453," "],[1,1454," "],[-1,1461,"    "],[1,1465,"    "],[-1,1476," "],[1,1477," "],[-1,1483," "],[1,1484," "],[-1,1493,"    "],[1,1497,"    "],[-1,1508," "],[1,1509," "],[-1,1516," "],[1,1517," "],[-1,1523,"    "],[1,1527,"    "],[-1,1585," "],[1,1586," "],[-1,1599," "],[1,1600," "],[-1,1614,"    "],[1,1618,"    "],[-1,1628," "],[1,1629," "],[-1,1640," "],[1,1641," "],[-1,1674,"    "],[1,1678,"    "],[-1,1688," "],[1,1689," "],[-1,1700," "],[1,1701," "],[-1,1722," "],[1,1723," "],[-1,1729,"    "],[1,1733,"    "],[-1,1743," "],[1,1744," "],[-1,1771," "],[1,1772," "],[-1,1863," "],[1,1864," "],[-1,1876," "],[1,1877," "],[-1,1886," "],[1,1887," "],[-1,1901,"    "],[1,1905,"    "],[-1,1952,"    "],[1,1956,"    "],[-1,1966," "],[1,1967," "],[-1,1977," "],[1,1978," "],[-1,1987," "],[1,1988," "],[-1,1995," "],[1,1996," "],[-1,2007," "],[1,2008," "],[-1,2014,"    "],[1,2018,"    "],[-1,2028," "],[1,2029," "],[-1,2039," "],[1,2040," "],[-1,2049," "],[1,2050," "],[-1,2057," "],[1,2058," "],[-1,2065," "],[1,2066," "],[-1,2072,"    "],[1,2076,"    "],[-1,2128,"    "],[1,2132,"    "],[-1,2181,"    "],[1,2185,"    "],[-1,2214,"    "],[1,2218,"    "],[-1,2228," "],[1,2229," "],[-1,2241," "],[1,2242," "],[-1,2271,"    "],[1,2275,"    "],[-1,2285," "],[1,2286," "],[-1,2296," "],[1,2297," "],[-1,2329," "],[1,2330," "],[-1,2347,"       "],[1,2354,"       "],[-1,2364," "],[1,2365," "],[-1,2383,"       "],[1,2390,"       "],[-1,2398," "],[1,2399," "],[-1,2413,"           "],[1,2424,"           "],[-1,2434," "],[1,2435," "],[-1,2442," "],[1,2443," "],[-1,2467,"       "],[1,2474,"       "],[-1,2482," "],[1,2483," "],[-1,2493,"           "],[1,2504,"           "],[-1,2514," "],[1,2515," "],[-1,2522," "],[1,2523," "],[-1,2543,"       "],[1,2550,"       "],[-1,2564,"           "],[1,2575,"           "],[-1,2585," "],[1,2586," "],[-1,2597,"       }\n\n    "],[1,2611,"       }\n\n    "],[-1,2729," "],[1,2730," "],[-1,2739," "],[1,2740," "],[-1,2759," "],[1,2760," "],[-1,2771," "],[1,2772," "],[-1,2785,"    "],[1,2789,"    "],[-1,2799," "],[1,2800," "],[-1,2810," "],[1,2811," "],[-1,2820," "],[1,2821," "],[-1,2827," "],[1,2828," "],[-1,2836," = "],[1,2839," = "],[-1,2888,"    "],[1,2892,"    "],[-1,2902," "],[1,2903," "],[-1,2913," "],[1,2914," "],[-1,2923," "],[1,2924," "],[-1,2930," "],[1,2931," "],[-1,2938," = "],[1,2941," = "],[-1,2995,"    "],[1,2999,"    "],[-1,3010," "],[1,3011," "],[-1,3021," "],[1,3022," "],[-1,3028," "],[1,3029," "],[-1,3039," = "],[1,3042," = "],[-1,3049,"    "],[1,3053,"    "],[-1,3064," "],[1,3065," "],[-1,3075," "],[1,3076," "],[-1,3082," "],[1,3083," "],[-1,3092," = "],[1,3095," = "],[-1,3104,"    "],[1,3108,"    "],[-1,3118," "],[1,3119," "],[-1,3129," "],[1,3130," "],[-1,3163,"       "],[1,3170,"       "],[-1,3189," "],[1,3190," "],[-1,3201,"       "],[1,3208,"       "],[-1,3215," {\n\n           "],[1,3230," {\n\n           "],[-1,3258,"           "],[1,3269,"           "],[-1,3316," "],[1,3317," "],[-1,3328," "],[1,3329," "],[-1,3342,"       } "],[1,3351,"       } "],[-1,3360," "],[1,3361," "],[-1,3391,"           "],[1,3402,"           "],[-1,3424,"       } "],[1,3433,"       } "],[-1,3442," "],[1,3443," "],[-1,3463,"           "],[1,3474,"           "],[-1,3496,"       }\n\n       "],[1,3513,"       }\n\n       "],[-1,3523," "],[1,3524," "],[-1,3533,"    }\n\n    "],[1,3544,"    }\n\n    "],[-1,3554," "],[1,3555," "],[-1,3585,"       "],[1,3592,"       "],[-1,3602," "],[1,3603," "],[-1,3610," "],[1,3611," "],[-1,3655,"    }\n\n    "],[1,3666,"    }\n\n    "],[-1,3819," "],[1,3820," "],[-1,3832," "],[1,3833," "],[-1,3842," "],[1,3843," "],[-1,3864," "],[1,3865," "],[-1,3879," "],[1,3880," "],[-1,3894,"    "],[1,3898,"    "],[-1,3909," "],[1,3910," "],[-1,3920," "],[1,3921," "],[-1,3930,"    "],[1,3934,"    "],[-1,3944," "],[1,3945," "],[-1,3989,"       "],[1,3996,"       "],[-1,4011," "],[1,4012," "],[-1,4023,"    }\n\n    "],[1,4034,"    }\n\n    "],[-1,4044," "],[1,4045," "],[-1,4056," "],[1,4057," "],[-1,4078," "],[1,4079," "],[-1,4086,"       "],[1,4093,"       "],[-1,4110,"       "],[1,4117,"       "],[-1,4124," {\n\n           "],[1,4139," {\n\n           "],[-1,4145," "],[1,4146," "],[-1,4173,"           "],[1,4184,"           "],[-1,4196," "],[1,4197," "],[-1,4237," "],[1,4238," "],[-1,4244," "],[1,4245," "],[-1,4251,"           "],[1,4262,"           "],[-1,4269," "],[1,4270," "],[-1,4305,"           "],[1,4316,"           "],[-1,4322," "],[1,4323," "],[-1,4338,"              "],[1,4352,"              "],[-1,4362," "],[1,4363," "],[-1,4374,"       } "],[1,4383,"       } "],[-1,4392," "],[1,4393," "],[-1,4413,"           "],[1,4424,"           "],[-1,4446,"       }\n\n       "],[1,4463,"       }\n\n       "],[-1,4473," "],[1,4474," "],[-1,4486,"    }\n\n    "],[1,4497,"    }\n\n    "],[-1,4507," "],[1,4508," "],[-1,4535," "],[1,4536," "],[-1,4547,"    "],[1,4551,"    "],[-1,4561," "],[1,4562," "],[-1,4573," "],[1,4574," "],[-1,4722," "],[1,4723," "],[-1,4732," "],[1,4733," "],[-1,4752," "],[1,4753," "],[-1,4764," "],[1,4765," "],[-1,4790,"    "],[1,4794,"    "],[-1,4805," "],[1,4806," "],[-1,4816," "],[1,4817," "],[-1,4823," = "],[1,4826," = "],[-1,4869,"    "],[1,4873,"    "],[-1,4883," "],[1,4884," "],[-1,4926,"       "],[1,4933,"       "],[-1,4953,"    }\n\n    "],[1,4964,"    }\n\n    "],[-1,4974," "],[1,4975," "],[-1,5001,"       "],[1,5008,"       "],[-1,5018," "],[1,5019," "],[-1,5028,"    "],[1,5032,"    "],[-1,5093," "],[1,5094," "],[-1,5103," "],[1,5104," "],[-1,5112,"    "],[1,5116,"    "],[-1,5126," "],[1,5127," "],[-1,5137," "],[1,5138," "],[-1,5146," "],[1,5147," "],[-1,5170,"       "],[1,5177,"       "],[-1,5194," "],[1,5195," "],[-1,5202," "],[1,5203," "],[-1,5215," "],[1,5216," "],[-1,5221," "],[1,5222," "],[-1,5236,"       "],[1,5243,"       "],[-1,5321,"       "],[1,5328,"       "],[-1,5386,"       "],[1,5393,"       "],[-1,5429,"    "],[1,5433,"    "]],[88,88],[89,89]]],[1564662783686,["GJX@GJXAIOU",[[1,38,"**"],[1,64,"**"]],[38,64],[38,68]]],[1564662978823,["GJX@GJXAIOU",[[1,122,"**"],[1,133,"**"]],[122,133],[122,137]]],[1564663025179,["GJX@GJXAIOU",[[1,249,"**"],[1,298,"**"]],[249,298],[249,302]]],[1564663190119,["GJX@GJXAIOU",[[-1,308,"j2ee"]],[308,312],[308,308]]],[1564663193834,["GJX@GJXAIOU",[[1,308,"J@EE"]],[308,308],[312,312]]],[1564663194823,["GJX@GJXAIOU",[[-1,309,"@EE"]],[312,312],[309,309]]],[1564663197211,["GJX@GJXAIOU",[[1,309,"2EE"]],[309,309],[312,312]]],[1564663211072,["GJX@GJXAIOU",[[1,322,"## "]],[322,331],[343,343]]],[1564663216077,["GJX@GJXAIOU",[[-1,328,"      "]],[333,333],[327,327]]],[1564663271589,["GJX@GJXAIOU",[[-1,348,"![](https://blog.51cto.com/attachment/200901/200901281233114873707.jpg)"]],[348,419],[348,348]]],[1564663277339,["GJX@GJXAIOU",[[1,348,"![200901281233114873707]($resource/200901281233114873707.jpg)"]],[348,348],[410,410]]],[1564663304750,["GJX@GJXAIOU",[[-1,425,"  "]],[426,426],[424,424]]],[1564663308903,["GJX@GJXAIOU",[[1,411,"- "]],[411,411],[413,413]]],[1564663309936,["GJX@GJXAIOU",[[1,339,"- "]],[339,339],[341,341]]],[1564663314918,["GJX@GJXAIOU",[[-1,450,"\n"]],[451,451],[450,450]]],[1564663319285,["GJX@GJXAIOU",[[-1,485,"    "]],[488,488],[484,484]]],[1564663321446,["GJX@GJXAIOU",[[-1,510,"\n"]],[511,511],[510,510]]],[1564663351470,["GJX@GJXAIOU",[[-1,631,"  "]],[633,633],[631,631]]],[1564663354526,["GJX@GJXAIOU",[[-1,647,"\n"]],[647,647],[646,646]]],[1564663366357,["GJX@GJXAIOU",[[-1,694,"   "]],[697,697],[694,694]]],[1564663368878,["GJX@GJXAIOU",[[-1,711,"\n"]],[711,711],[710,710]]],[1564663382535,["GJX@GJXAIOU",[[-1,760,"\n"]],[760,760],[759,759]]],[1564663392126,["GJX@GJXAIOU",[[1,818,"## "]],[818,818],[835,835]]],[1564663398094,["GJX@GJXAIOU",[[-1,325,"1."]],[327,327],[325,325]]],[1564663400801,["GJX@GJXAIOU",[[1,325,"一、"]],[325,325],[327,327]]],[1564663404899,["GJX@GJXAIOU",[[-1,821,"2."],[1,823,"二"]],[821,821],[822,822]]],[1564663405247,["GJX@GJXAIOU",[[1,822,"、"]],[822,822],[823,823]]],[1564663431143,["GJX@GJXAIOU",[[1,951,"**"],[1,978,"**"]],[951,978],[951,982]]],[1564663446686,["GJX@GJXAIOU",[[-1,878,"![](https://blog.51cto.com/attachment/200901/200901281233114917993.jpg)\n"]],[877,949],[877,877]]],[1564663452887,["GJX@GJXAIOU",[[1,877,"![200901281233114917993]($resource/200901281233114917993.jpg)"]],[877,877],[939,939]]],[1564663543942,["GJX@GJXAIOU",[[-1,1126,"3."]],[1128,1128],[1126,1126]]],[1564663550737,["GJX@GJXAIOU",[[1,1126,"## 三 "]],[1126,1126],[1130,1130]]],[1564663551064,["GJX@GJXAIOU",[[1,1130,"、"]],[1130,1130],[1131,1131]]],[1564663592422,["GJX@GJXAIOU",[[-1,1228,"![](https://blog.51cto.com/attachment/200901/200901281233114969611.jpg)"]],[1228,1299],[1228,1228]]],[1564663598270,["GJX@GJXAIOU",[[1,1228,"![200901281233114969611]($resource/200901281233114969611.jpg)"]],[1228,1228],[1290,1290]]],[1564663620335,["GJX@GJXAIOU",[[-1,1345,"| "]],[1345,1347],[1345,1345]]],[1564663620840,["GJX@GJXAIOU",[[1,1345,"··"]],[1345,1345],[1347,1347]]],[1564663621958,["GJX@GJXAIOU",[[-1,1345,"··"]],[1347,1347],[1345,1345]]],[1564663622858,["GJX@GJXAIOU",[[1,1345,"```"]],[1345,1345],[1348,1348]]],[1564663622890,["GJX@GJXAIOU",[[1,1348,"language\n```\n"]],[1348,1348],[1348,1356]]],[1564663624025,["GJX@GJXAIOU",[[-1,1348,"language"],[1,1356,"j"]],[1348,1356],[1349,1349]]],[1564663624455,["GJX@GJXAIOU",[[1,1349,"ava"]],[1349,1349],[1352,1352]]],[1564663624862,["GJX@GJXAIOU",[[1,1353,"\n"]],[1352,1352],[1353,1353]]],[1564663631174,["GJX@GJXAIOU",[[-1,1360,"**"],[-1,1368,"**"]],[1360,1534],[1360,1366]]],[1564663633837,["GJX@GJXAIOU",[[-1,1367,"**"],[-1,1374,"**"]],[1373,1373],[1367,1372]]],[1564663635238,["GJX@GJXAIOU",[[1,1394,"****"]],[1394,1394],[1396,1396]]],[1564663637341,["GJX@GJXAIOU",[[-1,1394,"****"]],[1396,1396],[1394,1394]]],[1564663641021,["GJX@GJXAIOU",[[-1,1386,"  "],[-1,1412," "],[-1,1415," "],[-1,1442," "],[-1,1445," "],[-1,1474,"  "],[-1,1504,"  "]],[1387,1526],[1385,1516]]],[1564663646966,["GJX@GJXAIOU",[[-1,1470,"**"],[-1,1479,"**"]],[1476,1476],[1470,1477]]],[1564663648750,["GJX@GJXAIOU",[[-1,1440,"**"],[-1,1449,"**"]],[1447,1447],[1440,1447]]],[1564663650452,["GJX@GJXAIOU",[[-1,1412,"**"],[-1,1421,"**"]],[1417,1417],[1412,1419]]],[1564663651764,["GJX@GJXAIOU",[[-1,1386,"**"],[-1,1395,"**"]],[1393,1393],[1386,1393]]],[1564663653239,["GJX@GJXAIOU",[[-1,1466,"**"],[-1,1471,"**"]],[1470,1470],[1466,1469]]],[1564663658663,["GJX@GJXAIOU",[[-1,1360,"public class Student {\n\n  private String id;\n\n  private String name;\n\n  private String cardId;\n\n  private int age;\n\n  getter/setter()。。。\n\n}"]],[1360,1499],[1360,1360]]],[1564663660431,["GJX@GJXAIOU",[[1,1353,"public class Student {\n\n  private String id;\n\n  private String name;\n\n  private String cardId;\n\n  private int age;\n\n  getter/setter()。。。\n\n}"]],[1353,1353],[1492,1492]]],[1564663668541,["GJX@GJXAIOU",[[1,1291,"**"],[1,1328,"**"]],[1291,1328],[1291,1332]]],[1564663671062,["GJX@GJXAIOU",[[-1,1348,"\n"]],[1348,1348],[1347,1347]]],[1564663673046,["GJX@GJXAIOU",[[-1,1379,"\n"]],[1379,1379],[1378,1378]]],[1564663674221,["GJX@GJXAIOU",[[-1,1400,"\n"]],[1400,1400],[1399,1399]]],[1564663675525,["GJX@GJXAIOU",[[-1,1423,"\n"]],[1423,1423],[1422,1422]]],[1564663676356,["GJX@GJXAIOU",[[-1,1448,"\n"]],[1448,1448],[1447,1447]]],[1564663685335,["GJX@GJXAIOU",[[-1,1500," |\n"]],[1500,1503],[1500,1500]]],[1564663685648,["GJX@GJXAIOU",[[-1,1500,"\n"]],[1500,1500],[1499,1499]]],[1564663685958,["GJX@GJXAIOU",[[-1,1499,"\n"]],[1499,1499],[1498,1498]]],[1564663686182,["GJX@GJXAIOU",[[-1,1498,"\n"]],[1498,1498],[1497,1497]]],[1564663686566,["GJX@GJXAIOU",[[-1,1497,"\n"]],[1497,1497],[1496,1496]]],[1564663687799,["GJX@GJXAIOU",[[-1,1517,"\n"]],[1517,1517],[1516,1516]]],[1564663688367,["GJX@GJXAIOU",[[-1,1514,"| "]],[1516,1516],[1514,1514]]],[1564663688751,["GJX@GJXAIOU",[[-1,1514,"\n"]],[1514,1514],[1513,1513]]],[1564663691154,["GJX@GJXAIOU",[[1,1513,"```"]],[1513,1513],[1516,1516]]],[1564663691186,["GJX@GJXAIOU",[[1,1516,"language\n```\n"]],[1516,1516],[1516,1524]]],[1564663691681,["GJX@GJXAIOU",[[-1,1516,"language"],[1,1524,"j"]],[1516,1524],[1517,1517]]],[1564663692143,["GJX@GJXAIOU",[[1,1517,"aa"]],[1517,1517],[1519,1519]]],[1564663692798,["GJX@GJXAIOU",[[-1,1518,"a"]],[1519,1519],[1518,1518]]],[1564663693343,["GJX@GJXAIOU",[[1,1518,"va"]],[1518,1518],[1520,1520]]],[1564663693501,["GJX@GJXAIOU",[[1,1521,"\n"]],[1520,1520],[1521,1521]]],[1564663696853,["GJX@GJXAIOU",[[-1,1527,"**"],[-1,1535,"**"]],[1530,1530],[1527,1533]]],[1564663697885,["GJX@GJXAIOU",[[-1,1534,"**"],[-1,1545,"**"]],[1541,1541],[1534,1543]]],[1564663698793,["GJX@GJXAIOU",[[1,1569,"****"]],[1569,1569],[1571,1571]]],[1564663701406,["GJX@GJXAIOU",[[-1,1560,"  "],[-1,1624,"  "],[-1,1677,"  "]],[1560,1724],[1558,1718]]],[1564663705934,["GJX@GJXAIOU",[[-1,1560,"**"],[-1,1567,"**"]],[1565,1565],[1560,1565]]],[1564663706989,["GJX@GJXAIOU",[[-1,1571,"**"],[-1,1580,"**"]],[1572,1572],[1571,1578]]],[1564663708759,["GJX@GJXAIOU",[[-1,1565,"**"],[-1,1568,"**"]],[1568,1568],[1565,1566]]],[1564663709589,["GJX@GJXAIOU",[[-1,1610,"**"],[-1,1618,"**"]],[1614,1614],[1610,1616]]],[1564663711023,["GJX@GJXAIOU",[[-1,1617,"**"],[-1,1626,"**"]],[1626,1626],[1617,1624]]],[1564663711927,["GJX@GJXAIOU",[[1,1642,"b"]],[1642,1642],[1643,1643]]],[1564663713598,["GJX@GJXAIOU",[[-1,1642,"b"]],[1643,1643],[1642,1642]]],[1564663713943,["GJX@GJXAIOU",[[-1,1639,"**"],[-1,1644,"**"]],[1642,1642],[1639,1642]]],[1564663715309,["GJX@GJXAIOU",[[1,1695,"****"]],[1695,1695],[1697,1697]]],[1564663716503,["GJX@GJXAIOU",[[-1,1682,"**"],[-1,1687,"**"]],[1685,1685],[1682,1685]]],[1564663717670,["GJX@GJXAIOU",[[-1,1651,"**"],[-1,1659,"**"]],[1655,1655],[1651,1657]]],[1564663718543,["GJX@GJXAIOU",[[1,1691,"****"]],[1690,1690],[1692,1692]]],[1564663720357,["GJX@GJXAIOU",[[-1,1687,"********"]],[1687,1695],[1687,1687]]],[1564663722903,["GJX@GJXAIOU",[[-1,1527,"public interface StudentDAO {\n\n  public boolean insertStudent(Student student);\n\n  public boolean deleteStudent(int id);\n\n  public Student findStudent(int id);\n\n}"]],[1527,1689],[1527,1527]]],[1564663724149,["GJX@GJXAIOU",[[1,1521,"public interface StudentDAO {\n\n  public boolean insertStudent(Student student);\n\n  public boolean deleteStudent(int id);\n\n  public Student findStudent(int id);\n\n}"]],[1521,1521],[1683,1683]]],[1564663725925,["GJX@GJXAIOU",[[-1,1601,"\n"]],[1601,1601],[1600,1600]]],[1564663726646,["GJX@GJXAIOU",[[-1,1551,"\n"]],[1551,1551],[1550,1550]]],[1564663727685,["GJX@GJXAIOU",[[-1,1640,"\n"]],[1640,1640],[1639,1639]]],[1564663730013,["GJX@GJXAIOU",[[-1,1678,"\n"]],[1678,1678],[1677,1677]]],[1564663733869,["GJX@GJXAIOU",[[-1,1686,"\n |\n\n"]],[1684,1689],[1684,1684]]],[1564663734696,["GJX@GJXAIOU",[[-1,1685,"\n"]],[1684,1684],[1683,1683]]],[1564663739646,["GJX@GJXAIOU",[[-1,1752,"\n"]],[1752,1752],[1751,1751]]],[1564663740247,["GJX@GJXAIOU",[[-1,1749,"| "]],[1751,1751],[1749,1749]]],[1564663740693,["GJX@GJXAIOU",[[-1,1749,"\n"]],[1749,1749],[1748,1748]]],[1564663742569,["GJX@GJXAIOU",[[1,1748,"```"]],[1748,1748],[1751,1751]]],[1564663742601,["GJX@GJXAIOU",[[1,1751,"language\n```\n"]],[1751,1751],[1751,1759]]],[1564663743584,["GJX@GJXAIOU",[[-1,1751,"language"],[1,1759,"j"]],[1751,1759],[1752,1752]]],[1564663744121,["GJX@GJXAIOU",[[1,1752,"ava"]],[1752,1752],[1755,1755]]],[1564663744325,["GJX@GJXAIOU",[[1,1756,"\n"]],[1755,1755],[1756,1756]]],[1564663748309,["GJX@GJXAIOU",[[-1,1762,"**"],[-1,1770,"**"]],[1766,1766],[1762,1768]]],[1564663749277,["GJX@GJXAIOU",[[-1,1769,"**"],[-1,1779,"**"]],[1776,1776],[1769,1777]]],[1564663750246,["GJX@GJXAIOU",[[-1,1778,"**"],[-1,1785,"**"]],[1784,1784],[1778,1783]]],[1564663756336,["GJX@GJXAIOU",[[-1,1800,"  "],[-1,1849,"  "],[-1,1911," "],[-1,1914," "],[-1,1971,"  "],[-1,2025," "],[-1,2028," "],[-1,2080,"  "],[-1,2111," "],[-1,2114," "],[-1,2168,"  "],[-1,2244," "],[-1,2250," "],[-1,2285,"  "],[-1,2310,"  "],[-1,2369,"  "],[-1,2390,"  "],[-1,2445,"  "],[-1,2461,"  "],[-1,2499,"  "],[-1,2504,"  "]],[1802,2510],[1800,2476]]],[1564663764839,["GJX@GJXAIOU",[[-1,1849,"**"],[-1,1857,"**"]],[1854,1854],[1849,1855]]],[1564663765792,["GJX@GJXAIOU",[[-1,1856,"**"],[-1,1864,"**"]],[1859,1859],[1856,1862]]],[1564663772589,["GJX@GJXAIOU",[[-1,1762,"public abstract class DAOFactory {\n\n  // List of DAO types supported by the factory\n\n  public static **final** **int** _SQLSERVER_ = 1;\n\n  **public** **static** **final** **int** _MYSQL_ = 2;\n\n  // There will be a method for each DAO that can be\n\n  // created. The concrete factories will have to\n\n  // implement these methods.\n\n  **public** **abstract** StudentDAO getStudentDAO();\n\n  **public** **static** DAOFactory getDAOFactory(**int** whichFactory) {\n\n     **switch** (whichFactory) {\n\n     **case** _SQLSERVER_:\n\n         **return** **new** SqlServerDAOFactory();\n\n     **case** _MYSQL_:\n\n         **return** **new** MySqlDAOFactory();\n\n     **default**:\n\n         **return** **null**;\n\n     }\n\n  }\n\n}\n\n |"]],[1762,2474],[1762,1762]]],[1564663790137,["GJX@GJXAIOU",[[1,1756,"public abstract class DAOFactory {\n    // List of DAO types supported by the factory\n    public static final int SQLSERVER = 1;\n    public static final int MYSQL = 2;\n    // There will be a method for each DAO that can be\n    // created. The concrete factories will have to\n    // implement these methods.\n    public abstract StudentDAO getStudentDAO();\n \n    public static DAOFactory getDAOFactory(int whichFactory) {\n       switch (whichFactory) {\n       case SQLSERVER:\n           return new SqlServerDAOFactory();\n       case MYSQL:\n           return new MySqlDAOFactory();\n       default:\n           return null;\n       }\n    }\n}"]],[1756,1756],[2390,2390]]],[1564663794733,["GJX@GJXAIOU",[[-1,2397,"\n"]],[2397,2397],[2396,2396]]],[1564663794861,["GJX@GJXAIOU",[[-1,2396,"\n"]],[2396,2396],[2395,2395]]],[1564663797199,["GJX@GJXAIOU",[[-1,2493,"\n"]],[2493,2493],[2492,2492]]],[1564663797421,["GJX@GJXAIOU",[[-1,2490,"| "]],[2492,2492],[2490,2490]]],[1564663798424,["GJX@GJXAIOU",[[1,2490,"```"]],[2490,2490],[2493,2493]]],[1564663798455,["GJX@GJXAIOU",[[1,2493,"language\n```\n"]],[2493,2493],[2493,2501]]],[1564663799320,["GJX@GJXAIOU",[[-1,2493,"language"],[1,2501,"j"]],[2493,2501],[2494,2494]]],[1564663799896,["GJX@GJXAIOU",[[1,2494,"ava"]],[2494,2494],[2497,2497]]],[1564663800061,["GJX@GJXAIOU",[[1,2498,"\n"]],[2497,2497],[2498,2498]]],[1564663809869,["GJX@GJXAIOU",[[1,2498,"public class SqlServerDAOFactory extends DAOFactory{\n    public static final String DRIVER = \"com.microsoft.sqlserver.jdbc.SQLServerDriver\";\n    public static final String DBURL = \"jdbc:sqlserver://localhost:1025; DatabaseName=tmp\";\n    private static String userName = \"sa\";\n    private static String userPwd = \"root\";\n \n    public static Connection createConnection() {\n       Connection dbConn = null;\n       try {\n           Class.forName(DRIVER);\n           dbConn = DriverManager.getConnection(DBURL, userName, userPwd);\n       } catch (ClassNotFoundException e) {\n           e.printStackTrace();\n       } catch (SQLException e) {\n           e.printStackTrace();\n       }\n       return dbConn;\n    }\n \n    public StudentDAO getStudentDAO() {\n       return new SqlServerStudentDAO(createConnection());\n    }\n \n    。。。。。。\n}"]],[2498,2498],[3325,3325]]],[1564663820389,["GJX@GJXAIOU",[[-1,3331,"**public** **class** SqlServerDAOFactory **extends** DAOFactory{\n\n    **public** **static** **final** String _DRIVER_ = \"com.microsoft.sqlserver.jdbc.SQLServerDriver\";\n\n    **public** **static** **final** String _DBURL_ = \"jdbc:sqlserver://localhost:1025; DatabaseName=tmp\";\n\n    **private** **static** String _userName_ = \"sa\";\n\n    **private** **static** String _userPwd_ = \"root\";\n\n    **public** **static** Connection createConnection() {\n\n       Connection dbConn = **null**;\n\n       **try** {\n\n           Class._forName_(_DRIVER_);\n\n           dbConn = DriverManager._getConnection_(_DBURL_, _userName_, _userPwd_);\n\n       } **catch** (ClassNotFoundException e) {\n\n           e.printStackTrace();\n\n       } **catch** (SQLException e) {\n\n           e.printStackTrace();\n\n       }\n\n       **return** dbConn;\n\n    }\n\n    **public** StudentDAO getStudentDAO() {\n\n       **return** **new** SqlServerStudentDAO(_createConnection_());\n\n    }\n\n    。。。。。。\n\n}\n\n |\n\n"]],[3330,4292],[3330,3330]]],[1564663839077,["GJX@GJXAIOU",[[-1,3455,"| \n\n**public** **abstract** **class** StudentDAODefaultImpl **implements** StudentDAO {\n\n    **private** Connection dbConn;\n\n    **public** StudentDAODefaultImpl(Connection dbConn) {\n\n       **this**.dbConn = dbConn;\n\n    }\n\n    **public** **boolean** deleteStudent(**int** id) {\n\n       Statement stmt;\n\n       **try** {\n\n           stmt = dbConn.createStatement();\n\n           String sql = \"DELETE FROM student_table WHERE id = '\" + id + \"'\";\n\n           **int** delete = stmt.executeUpdate(sql);\n\n           **if** (delete == 1)\n\n              **return** **true**;\n\n       } **catch** (SQLException e) {\n\n           e.printStackTrace();\n\n       }\n\n       **return** **false**;\n\n    }\n\n    **public** Student findStudent(**int** id) {。。。}\n\n    **public** **boolean** insertStudent(Student stu) {。。。}\n\n}\n\n |"]],[3455,4263],[3455,3455]]],[1564663844719,["GJX@GJXAIOU",[[1,3454,"```"]],[3454,3454],[3457,3457]]],[1564663844748,["GJX@GJXAIOU",[[1,3457,"language\n```\n"]],[3457,3457],[3457,3465]]],[1564663846358,["GJX@GJXAIOU",[[-1,3457,"language"],[1,3465,"j"]],[3457,3465],[3458,3458]]],[1564663846776,["GJX@GJXAIOU",[[1,3458,"ava"]],[3458,3458],[3461,3461]]],[1564663847094,["GJX@GJXAIOU",[[1,3462,"\n"]],[3461,3461],[3462,3462]]],[1564663850067,["GJX@GJXAIOU",[[1,3462,"public abstract class StudentDAODefaultImpl implements StudentDAO {\n    private Connection dbConn;\n \n    public StudentDAODefaultImpl(Connection dbConn) {\n       this.dbConn = dbConn;\n    }\n \n    public boolean deleteStudent(int id) {\n       Statement stmt;\n       try {\n           stmt = dbConn.createStatement();\n           String sql = \"DELETE FROM student_table WHERE id = '\" + id + \"'\";\n           int delete = stmt.executeUpdate(sql);\n           if (delete == 1)\n              return true;\n       } catch (SQLException e) {\n           e.printStackTrace();\n       }\n       return false;\n    }\n \n    public Student findStudent(int id) {。。。}\n    public boolean insertStudent(Student stu) {。。。}\n}"]],[3462,3462],[4160,4160]]],[1564663853765,["GJX@GJXAIOU",[[-1,4167,"\n"]],[4167,4167],[4166,4166]]],[1564663853909,["GJX@GJXAIOU",[[-1,4166,"\n"]],[4166,4166],[4165,4165]]],[1564663854662,["GJX@GJXAIOU",[[-1,4165,"\n"]],[4165,4165],[4164,4164]]],[1564663868727,["GJX@GJXAIOU",[[-1,4258,"| \n\n**public** **class** SqlServerStudentDAO **extends** StudentDAODefaultImpl {\n\n    **private** Connection dbConn = SqlServerDAOFactory._createConnection_();\n\n    **public** SqlServerStudentDAO(Connection dbConn) {\n\n       **super**(dbConn);\n\n    }\n\n    **public** Connection getDbConn() {\n\n       **return** dbConn;\n\n    }\n\n}\n\n |\n"]],[4258,4591],[4258,4258]]],[1564663873375,["GJX@GJXAIOU",[[1,4257,"```"]],[4257,4257],[4260,4260]]],[1564663873403,["GJX@GJXAIOU",[[1,4260,"language\n```\n"]],[4260,4260],[4260,4268]]],[1564663873975,["GJX@GJXAIOU",[[-1,4260,"language"],[1,4268,"j"]],[4260,4268],[4261,4261]]],[1564663874423,["GJX@GJXAIOU",[[1,4261,"ava"]],[4261,4261],[4264,4264]]],[1564663875184,["GJX@GJXAIOU",[[1,4265,"\n"]],[4264,4264],[4265,4265]]],[1564663877977,["GJX@GJXAIOU",[[1,4265,"public class SqlServerStudentDAO extends StudentDAODefaultImpl {\n    private Connection dbConn = SqlServerDAOFactory.createConnection();\n   \n    public SqlServerStudentDAO(Connection dbConn) {\n       super(dbConn);\n    }\n \n    public Connection getDbConn() {\n       return dbConn;\n    }\n}"]],[4265,4265],[4553,4553]]],[1564663881071,["GJX@GJXAIOU",[[-1,4559,"\n"]],[4559,4559],[4558,4558]]],[1564663884173,["GJX@GJXAIOU",[[-1,4599,"\n"]],[4599,4599],[4598,4598]]],[1564663884292,["GJX@GJXAIOU",[[-1,4597," "]],[4598,4598],[4597,4597]]],[1564663893862,["GJX@GJXAIOU",[[-1,4596,"|\n**public** **class** Test {\n\n    **public** **static** **void** main(String[] args) {\n\n       Student student = **new** Student(\"1\", \"zj\", \"0901\", 27);\n\n       DAOFactory mysqlDAOFactory = DAOFactory._getDAOFactory_(DAOFactory._MYSQL_);\n\n       StudentDAO studentDAO = mysqlDAOFactory.getStudentDAO();\n\n       studentDAO.insertStudent(student);\n\n    }\n\n}\n\n |"]],[4595,4956],[4595,4595]]],[1564663894029,["GJX@GJXAIOU",[[-1,4595,"\n"]],[4595,4595],[4594,4594]]],[1564663895415,["GJX@GJXAIOU",[[1,4595,"\n"]],[4594,4594],[4595,4595]]],[1564663895962,["GJX@GJXAIOU",[[-1,4595,"\n"],[1,4596,"·"]],[4595,4595],[4596,4596]]],[1564663896153,["GJX@GJXAIOU",[[1,4596,"·"]],[4596,4596],[4597,4597]]],[1564663896910,["GJX@GJXAIOU",[[-1,4596,"·"]],[4597,4597],[4596,4596]]],[1564663897120,["GJX@GJXAIOU",[[-1,4595,"·"],[1,4596,"\n"]],[4596,4596],[4595,4595]]],[1564663897552,["GJX@GJXAIOU",[[-1,4595,"\n"],[1,4596,"~"]],[4595,4595],[4596,4596]]],[1564663897919,["GJX@GJXAIOU",[[1,4596,"··"]],[4596,4596],[4598,4598]]],[1564663898518,["GJX@GJXAIOU",[[-1,4596,"··"]],[4598,4598],[4596,4596]]],[1564663898645,["GJX@GJXAIOU",[[-1,4595,"~"],[1,4596,"\n"]],[4596,4596],[4595,4595]]],[1564663899375,["GJX@GJXAIOU",[[-1,4595,"\n"],[1,4596,"`"]],[4595,4595],[4596,4596]]],[1564663900167,["GJX@GJXAIOU",[[1,4596,"``"]],[4596,4596],[4598,4598]]],[1564663900195,["GJX@GJXAIOU",[[1,4598,"language\n```\n"]],[4598,4598],[4598,4606]]],[1564663901025,["GJX@GJXAIOU",[[-1,4598,"language"],[1,4606,"j"]],[4598,4606],[4599,4599]]],[1564663901417,["GJX@GJXAIOU",[[1,4599,"ava"]],[4599,4599],[4602,4602]]],[1564663901534,["GJX@GJXAIOU",[[1,4603,"\n"]],[4602,4602],[4603,4603]]],[1564663904983,["GJX@GJXAIOU",[[1,4603,"public class Test {\n    public static void main(String[] args) {\n       Student student = new Student(\"1\", \"zj\", \"0901\", 27);\n       DAOFactory mysqlDAOFactory = DAOFactory.getDAOFactory(DAOFactory.MYSQL);\n       StudentDAO studentDAO = mysqlDAOFactory.getStudentDAO();\n       studentDAO.insertStudent(student);\n    }\n}"]],[4603,4603],[4922,4922]]]],null,"GJX@GJXAIOU"]]}