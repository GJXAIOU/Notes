{"compress":true,"commitItems":[["cfd849ad-cf32-466a-b91e-f2db6936864d",1568210947901,"## 徒手撸一个简单的IOC\n\n不学无数的程序员 [java进阶架构师](javascript:void(0);) _3天前_\n\n![](https://mmbiz.qpic.cn/mmbiz_jpg/XaklVibwUKn4mTazvicDuesUgSde3x5ttSQxicNmFOcwSHxyxatzLcwEiaILrunPmgvnE6t5LbzAPprKu49sDJEqVQ/640?tp=webp&wxfrom=5&wx_lazy=1&wx_co=1)\n\n作者：不学无数的程序员\n\n来源：juejin.im/post/5c4ac4256fb9a049af6da128\n\nSpring框架中最经典的两个就是IOC和AOP，其中IOC(Inversion of Control)是什么呢？控制反转，简单来说就是将控制实体Bean的动作交给了Spring容器进行管理。\n\n推荐相关阅读：[透彻理解Spring事务设计思想之手写实现](http://mp.weixin.qq.com/s?__biz=MzAxMjEwMzQ5MA==&mid=2448885967&idx=2&sn=a8634cafe753e1c6c18673917a5bfe92&chksm=8fb552e2b8c2dbf4223538769af6e40a363b3903849213cb67cef206d361e32aabbcecd58889&scene=21#wechat_redirect)\n\n再简单点来说就是例如之前想用一个类，必须new一个，但是使用了Spring那么直接用@Autowired注解或者用xml配置的方式就能直接获得此对象，而且你也不用管它的生命周期啊等等之类的。就不用自己new一个对象了。\n\n![](https://mmbiz.qpic.cn/mmbiz/JfTPiahTHJhrHYNfLpkVoZyib4kPnZe9BC8y2wnb7NzERibH04jjnbh8jo1tU9WNz2NNibF4bGmEDZgPibanY60v5Qw/640?wx_fmt=other&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1)\n\n如果是之前没有使用IOC的话，那么这些对象的创建以及赋值都是由我们自己创建了，下面简单的演示了如果有上面四个对象依赖的话，那么没有IOC我们必须要创建对象并且赋值。仅仅四个对象就这么多，那么一旦项目大了，对象成百上千，如果还这样写的话，那么绝对是一场灾难。\n\n```\n对象A a = new 对象A();对象B b = new 对象B();对象C c = new 对象C();对象D d = new 对象D();a.setB(b);a.setC(c);b.setD(d);c.setD(d);\n```\n\n因此在Spring中通过IOC将所有的对象统一放到Spring的容器中进行管理，所以就简单了很多。上面的实例化对象的代码也不需要我们写了。\n\n![](https://mmbiz.qpic.cn/mmbiz/JfTPiahTHJhrHYNfLpkVoZyib4kPnZe9BCza5ewoesSTN8eXGib9iapSicf4zic5Isldzh7Qxefgzbbib6FnzWtR2UZUQ/640?wx_fmt=other&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1)\n\n上面说了那么多，其实就是一句话IOC非常重要，但是如果直接看Spring源码的话会非常懵逼，所以就简单的写一个IOC的小例子来理解这种思想。\n\n## 分析并编写代码\n\n还是编写代码前的分析阶段，Spring的IOC其实就是将所有的Bean放在统一容器中进行管理起来，然后在在获取的时候进行初始化，所以需要我们在程序启动的时候将被标记的类进行存储在自定义的容器中管理。\n\n*   初始化阶段：将被@MyIoc类似于Spring中@Service标记的类放入到自定义的容器中。\n\n*   使用：通过自定义的获取Bean的类进行统一获取。\n\n现在我们就以上面两个步骤进行详细点的分析\n\n### 数据准备阶段\n\n首先初始化阶段我们要先建立两个注解类用于类的发现(@MyIoc类似于@Service)。\n\n```\n@Target(ElementType.TYPE)@Retention(RetentionPolicy.RUNTIME)public @interface MyIoc {}\n```\n\n然后要初始化信息进自定义容器的话用什么类型的容器去存储这些信息呢？这里可以想到是用Map来存，用key为类名，value用什么呢？value就是要放在容器中进行管理的类的信息了，那么一个类有什么信息呢即类是由什么组成呢？有以下几个信息\n\n*   类名\n\n*   构造函数\n\n*   属性值\n\n*   父类\n\n所以根据上面的分析我们可以建立一个实体类来存储这些信息，此时我们就不考虑复杂的构造函数了，就都是初始化的无参构造函数。然后父类的属性就不进行分析注入了。所以此时类实体类就简单了。\n\n```\n@Datapublic class BeanDefinition {    private String className;    private String alias;    private String superNames;}\n```\n\n### 初始化阶段\n\n有了存储类信息的类了，那么我们在程序启动的时候就应该将这些信息给加载到Map中，此时建立一个启动类用于初始化被@MyIoc标记的类的信息。\n\n```\n@Component@Order(value = 1)public class IoCInitConifg implements CommandLineRunner{    @Override    public void run(String... args){        ConcurrentHashMap<String,BeanDefinition> concurrentHashMap = new ConcurrentHashMap<>();        Reflections reflections = new Reflections();        //获得项目中所有被MyIoc标记得类        Set<Class<?>> typesAnnotatedWith = reflections.getTypesAnnotatedWith(MyIoc.class);        //将其信息初始进自定义容器MyBeanFactory中        for (Class clazz : typesAnnotatedWith){            BeanDefinition beanDefinition = new BeanDefinition();            String className = clazz.getName();            String superclassName = clazz.getSuperclass().getName();            beanDefinition.setClassName(className);            beanDefinition.setSuperNames(superclassName);            beanDefinition.setAlias(getClassName(className));            concurrentHashMap.put(className,beanDefinition);        }        MyBeanFactoryImpl.setBeanDineMap(concurrentHashMap);    }    private String getClassName(String beanClassName) {        String className = beanClassName.substring(beanClassName.lastIndexOf(\".\") + 1);        className = className.substring(0, 1).toLowerCase() + className.substring(1);        return className;    }}\n```\n\n此时得说一下自定义的统一容器管理的类MyBeanFactory此类用作统一获得类的途径\n\n```\npublic interface MyBeanFactory {    Object getBeanByName(String name) throws Exception;}\n```\n\n此时还有其实现类\n\n```\n@Log4jpublic class MyBeanFactoryImpl implements MyBeanFactory{    //存储对象名称和已经实例化的对象映射    private static ConcurrentHashMap<String,Object> beanMap = new ConcurrentHashMap<>();    //存储对象名称和对应对象信息的映射    private static ConcurrentHashMap<String,BeanDefinition> beanDefineMap= new ConcurrentHashMap<>();    //存储存储在容器中对象的名称    private static Set<String> beanNameSet = Collections.synchronizedSet(new HashSet<>());    @Override    public Object getBeanByName(String name) throws Exception {        //看有没有已经实例化的对象,有的话就直接返回        Object object = beanMap.get(name);        if (object != null){            return object;        }        //没有的话就实例化一个对象        object = getObject(beanDefineMap.get(name));        if (object != null){            //对实例化中对象的注入需要的参数            setFild(object);            //将实例化的对象放入Map中,便于下次使用            beanMap.put(name,object);        }        return object;    }    public void setFild(Object bean) throws Exception {        Field[] declaredFields = bean.getClass().getDeclaredFields();        for (Field field: declaredFields){            String filedAllName = field.getType().getName();            if (beanNameSet.contains(filedAllName)){                Object findBean = getBeanByName(filedAllName);                //为对象中的属性赋值                field.setAccessible(true);                field.set(bean,findBean);            }        }    }    public Object getObject(BeanDefinition beanDefinition) throws Exception {        String className = beanDefinition.getClassName();        Class<?> clazz = null;        try {            clazz = Class.forName(className);        } catch (ClassNotFoundException e) {            log.info(\"can not find bean by beanName: \"+className);            throw new Exception(\"can not find bean by beanName: \"+className);        }        return clazz;    }    public static void setBeanDineMap(ConcurrentHashMap<String,BeanDefinition> beanDefineMap){        MyBeanFactoryImpl.beanDefineMap = beanDefineMap;    }    public static void setBeanNameSet(Set<String> beanNameSet){        MyBeanFactoryImpl.beanNameSet = beanNameSet;    }}\n```\n\n此时初始化的阶段已经完成了，即已经将所有被@MyIoc标记的类已经被全部存放在了自定义的容器中了。其实在这里我们已经能使用自己的自定义的容器进行获得Bean了。\n\n```\n@MyIoc@Datapublic class User {    private Student student;}\n```\n\n```\n@MyIocpublic class Student {    public String play(){        return \"student\"+ this.toString();    }}\n```\n\n此时我们在启动类中写如下\n\n```\n        User user1 = (User)beanFactory.getBeanByName(\"com.example.ioc.domain.User\");        User user2 = (User)beanFactory.getBeanByName(\"com.example.ioc.domain.User\");        Student student1 = user1.getStudent();        Student student2 = user1.getStudent();        Student student3 = (Student)beanFactory.getBeanByName(\"com.example.ioc.domain.Student\");        System.out.println(user1);        System.out.println(user2);        System.out.println(student1);        System.out.println(student2);        System.out.println(student3);\n```\n\n发现控制台中输出的对象都是同一个对象，并且在User中也自动注入了Student对象。此时一个简单的IOC就完成了。\n\n```\nUser(student=com.example.ioc.domain.Student@705e7b93)User(student=com.example.ioc.domain.Student@705e7b93)com.example.ioc.domain.Student@705e7b93com.example.ioc.domain.Student@705e7b93com.example.ioc.domain.Student@705e7b93\n```\n\n## 项目地址\n\n> https://github.com/modouxiansheng/Doraemon\n\n## 参考\n\n> https://juejin.im/post/5a5875a4518825733a30a463\n> https://juejin.im/entry/599f8ba6518825241f788ad1",[[1568210894549,["GJX@GJXAIOU",[[-1,16,"不学无数的程序员 [java进阶架构师](javascript:void(0);) _3天前_\n\n![](https://mmbiz.qpic.cn/mmbiz_jpg/XaklVibwUKn4mTazvicDuesUgSde3x5ttSQxicNmFOcwSHxyxatzLcwEiaILrunPmgvnE6t5LbzAPprKu49sDJEqVQ/640?tp=webp&wxfrom=5&wx_lazy=1&wx_co=1)\n\n作者：不学无数的程序员\n\n来源：juejin.im/post/5c4ac4256fb9a049af6da128"]],[16,288],[16,16]]],[1568210938174,["GJX@GJXAIOU",[[1,804,"\n"],[1,822,"\n"],[1,840,"\n"],[1,858,"\n"],[1,868,"\n"],[1,878,"\n"],[1,888,"\n"]],[786,898],[905,905]]],[1568210947683,["GJX@GJXAIOU",[[1,1539,"\n"],[1,1574,"\n"],[1,1599,"\n\n"]],[1514,1600],[1604,1604]]],[1568210955754,["GJX@GJXAIOU",[[-1,1736,"\n"]],[1736,1736],[1735,1735]]],[1568210956674,["GJX@GJXAIOU",[[-1,1745,"\n"]],[1745,1745],[1744,1744]]],[1568210957361,["GJX@GJXAIOU",[[-1,1753,"\n"]],[1753,1753],[1752,1752]]],[1568210961596,["GJX@GJXAIOU",[[1,1861,"\n"],[-1,1867," "],[1,1868," "],[-1,1873," "],[1,1874," "],[-1,1888," {    "],[1,1894," {\n    "],[-1,1901," "],[1,1902," "],[-1,1908," "],[1,1909," "],[-1,1919,"    "],[1,1923,"\n    "],[-1,1930," "],[1,1931," "],[-1,1937," "],[1,1938," "],[-1,1944,"    "],[1,1948,"\n    "],[-1,1955," "],[1,1956," "],[-1,1962," "],[1,1963," "],[1,1974,"\n"]],[1856,1975],[1980,1980]]],[1568210986744,["GJX@GJXAIOU",[[1,2082,"\n"],[-1,2094," = "],[1,2097," = "],[1,2099,"\n"],[-1,2105," "],[1,2106," "],[-1,2111," "],[1,2112," "],[-1,2125," "],[1,2126," "],[-1,2136," "],[1,2137," "],[-1,2155,"    "],[1,2159,"\n\n    "],[-1,2168,"    "],[1,2172,"\n    "],[-1,2178," "],[1,2179," "],[-1,2183," "],[1,2184," "],[-1,2197," "],[1,2198," "],[-1,2204,"        "],[1,2212,"\n        "],[-1,2252," "],[1,2253," "],[-1,2270," = new "],[1,2277," = new "],[-1,2299,"        "],[1,2307,"\n        "],[-1,2318," "],[1,2319," "],[-1,2330," = new "],[1,2337," = new "],[-1,2351,"        "],[1,2359,"\n        "],[-1,2378,"        "],[1,2386,"\n        "],[-1,2399," "],[1,2400," "],[-1,2418," = "],[1,2421," = "],[-1,2468,"        "],[1,2476,"\n        "],[-1,2504,"        for "],[1,2516,"\n        for "],[-1,2522," "],[1,2523," "],[-1,2528," : "],[1,2531," : "],[-1,2551,"            "],[1,2563,"\n            "],[-1,2577," "],[1,2578," "],[-1,2592," = new "],[1,2599," = new "],[-1,2616,"            "],[1,2628,"\n            "],[-1,2634," "],[1,2635," "],[-1,2644," = "],[1,2647," = "],[-1,2663,"            "],[1,2675,"\n            "],[-1,2681," "],[1,2682," "],[-1,2696," = "],[1,2699," = "],[-1,2731,"            "],[1,2743,"\n            "],[-1,2782,"            "],[1,2794,"\n            "],[-1,2839,"            "],[1,2851,"\n            "],[-1,2900,"            "],[1,2912,"\n            "],[-1,2960,"        }        "],[1,2977,"\n        }\n        "],[-1,3029,"    }    "],[1,3038,"\n    }\n\n    "],[-1,3045," "],[1,3046," "],[-1,3052," "],[1,3053," "],[-1,3072," "],[1,3073," "],[-1,3087," {        "],[1,3097," {\n        "],[-1,3103," "],[1,3104," "],[-1,3113," = "],[1,3116," = "],[-1,3170," + 1);        "],[1,3184," + 1);\n        "],[-1,3193," = "],[1,3196," = "],[-1,3218," "],[1,3219," "],[-1,3235," + "],[1,3238," + "],[-1,3261,"        "],[1,3269,"\n        "],[-1,3275," "],[1,3276," "],[-1,3286,"    }"],[1,3291,"\n    }\n"]],[2072,3292],[3320,3320]]],[1568210998175,["GJX@GJXAIOU",[[-1,3381," "],[1,3382," "],[-1,3391," "],[1,3392," "],[-1,3405," {    "],[1,3411," {\n\n    "],[-1,3417," "],[1,3418," "],[-1,3438," "],[1,3439," "],[-1,3444," "],[1,3445," "],[-1,3451," "],[1,3452," "],[1,3462,"\n"]],[3375,3463],[3466,3466]]],[1568211000469,["GJX@GJXAIOU",[[-1,3408,"\n"]],[3408,3408],[3407,3407]]],[1568211016300,["GJX@GJXAIOU",[[1,3491,"\n"],[-1,3497," "],[1,3498," "],[-1,3503," "],[1,3504," "],[-1,3521," "],[1,3522," "],[-1,3532," "],[1,3533," "],[-1,3547,"    "],[1,3551,"\n    "],[-1,3570,"    "],[1,3574,"\n    "],[-1,3581," "],[1,3582," "],[-1,3588," "],[1,3589," "],[-1,3621," "],[1,3622," "],[-1,3629," = new "],[1,3636," = new "],[-1,3658,"    "],[1,3662,"\n    "],[-1,3680,"    "],[1,3684,"\n    "],[-1,3691," "],[1,3692," "],[-1,3698," "],[1,3699," "],[-1,3739," "],[1,3740," "],[-1,3754," new "],[1,3759," new "],[-1,3781,"    "],[1,3785,"\n    "],[-1,3800,"    "],[1,3804,"\n    "],[-1,3811," "],[1,3812," "],[-1,3818," "],[1,3819," "],[-1,3830," "],[1,3831," "],[-1,3842," = "],[1,3845," = "],[-1,3876," "],[1,3877," "],[-1,3890,"    "],[1,3894,"\n\n    "],[-1,3903,"    "],[1,3907,"\n    "],[-1,3913," "],[1,3914," "],[-1,3920," "],[1,3921," "],[-1,3941," "],[1,3942," "],[-1,3947," "],[1,3948," "],[-1,3954," "],[1,3955," "],[-1,3964," {        "],[1,3974," {\n        "],[-1,3997,"        "],[1,4005,"\n        "],[-1,4011," "],[1,4012," "],[-1,4018," = "],[1,4021," = "],[-1,4039,"        if "],[1,4050,"\n        if "],[-1,4057," != "],[1,4061," != "],[-1,4067,"            "],[1,4079,"\n            "],[-1,4085," "],[1,4086," "],[-1,4093,"        }        "],[1,4110,"\n        }\n        "],[-1,4124,"        "],[1,4132,"\n        "],[-1,4138," = "],[1,4141," = "],[-1,4176,"        if "],[1,4187,"\n        if "],[-1,4194," != "],[1,4198," != "],[-1,4204,"            "],[1,4216,"\n            "],[-1,4233,"            "],[1,4245,"\n            "],[-1,4261,"            "],[1,4273,"\n            "],[-1,4295,"            "],[1,4307,"\n            "],[-1,4332,"        }        "],[1,4349,"\n        }\n        "],[-1,4355," "],[1,4356," "],[-1,4363,"    }    "],[1,4372,"\n    }\n\n    "],[-1,4378," "],[1,4379," "],[-1,4383," "],[1,4384," "],[-1,4398," "],[1,4399," "],[-1,4404," "],[1,4405," "],[-1,4411," "],[1,4412," "],[-1,4421," {        "],[1,4431," {\n        "],[-1,4438," "],[1,4439," "],[-1,4453," = "],[1,4456," = "],[-1,4492,"        for "],[1,4504,"\n        for "],[-1,4510," "],[1,4511," "],[-1,4517," "],[1,4518," "],[-1,4534,"            "],[1,4546,"\n            "],[-1,4552," "],[1,4553," "],[-1,4565," = "],[1,4568," = "],[-1,4594,"            if "],[1,4609,"\n            if "],[-1,4646,"                "],[1,4662,"\n                "],[-1,4668," "],[1,4669," "],[-1,4677," = "],[1,4680," = "],[-1,4708,"                "],[1,4724,"\n                "],[-1,4735,"                "],[1,4751,"\n                "],[-1,4777,"                "],[1,4793,"\n                "],[-1,4818,"            }        }    }    "],[1,4849,"\n            }\n        }\n    }\n\n    "],[-1,4855," "],[1,4856," "],[-1,4862," "],[1,4863," "],[-1,4887," "],[1,4888," "],[-1,4903," "],[1,4904," "],[-1,4910," "],[1,4911," "],[-1,4920," {        "],[1,4930," {\n        "],[-1,4936," "],[1,4937," "],[-1,4946," = "],[1,4949," = "],[-1,4979,"        "],[1,4987,"\n        "],[-1,4995," "],[1,4996," "],[-1,5001," = "],[1,5004," = "],[-1,5009,"        try {            "],[1,5034,"\n        try {\n            "],[-1,5039," = "],[1,5042," = "],[-1,5067,"        } "],[1,5077,"\n        } "],[-1,5082," "],[1,5083," "],[-1,5106," e) {            "],[1,5123," e) {\n            "],[-1,5136," not "],[1,5141," not "],[-1,5145," "],[1,5146," "],[-1,5150," by "],[1,5154," by "],[-1,5163," "],[1,5164," "],[-1,5177,"            "],[1,5189,"\n            "],[-1,5194," new "],[1,5199," new "],[-1,5213," not "],[1,5218," not "],[-1,5222," "],[1,5223," "],[-1,5227," by "],[1,5231," by "],[-1,5240," "],[1,5241," "],[-1,5254,"        }        "],[1,5271,"\n        }\n        "],[-1,5277," "],[1,5278," "],[-1,5284,"    }    "],[1,5293,"\n    }\n\n    "],[-1,5299," "],[1,5300," "],[-1,5306," "],[1,5307," "],[-1,5311," "],[1,5312," "],[-1,5367," "],[1,5368," "],[-1,5383,"        "],[1,5391,"\n        "],[-1,5422," = "],[1,5425," = "],[-1,5439,"    }    "],[1,5448,"\n    }\n\n    "],[-1,5454," "],[1,5455," "],[-1,5461," "],[1,5462," "],[-1,5466," "],[1,5467," "],[-1,5493," "],[1,5494," "],[-1,5507,"        "],[1,5515,"\n        "],[-1,5544," = "],[1,5547," = "],[-1,5559,"    }"],[1,5564,"\n    }\n\n"]],[3485,5565],[5625,5625]]],[1568211026926,["GJX@GJXAIOU",[[1,5723,"\n"],[1,5728,"\n"],[-1,5734," "],[1,5735," "],[-1,5740," "],[1,5741," "],[-1,5745," {    "],[1,5751," {\n    "],[-1,5758," "],[1,5759," "],[-1,5766," "],[1,5767," "],[1,5775,"\n"]],[5717,5776],[5780,5780]]],[1568211035224,["GJX@GJXAIOU",[[1,5796,"\n"],[-1,5802," "],[1,5803," "],[-1,5808," "],[1,5809," "],[-1,5816," {    "],[1,5822," {\n    "],[-1,5828," "],[1,5829," "],[-1,5835," "],[1,5836," "],[-1,5843,"        "],[1,5851,"\n        "],[-1,5857," "],[1,5858," "],[-1,5868," "],[1,5869," "],[-1,5885,"    }}"],[1,5891,"\n    }\n}\n"]],[5790,5891],[5897,5897]]],[1568211047065,["GJX@GJXAIOU",[[-1,5922,"       "],[1,5929,"  "],[-1,5933," "],[1,5934," "],[-1,5939," = "],[1,5942," = "],[-1,6005,"        "],[1,6013,"\n        "],[-1,6017," "],[1,6018," "],[-1,6023," = "],[1,6026," = "],[-1,6089,"        "],[1,6097,"\n        "],[-1,6104," "],[1,6105," "],[-1,6113," = "],[1,6116," = "],[-1,6135,"        "],[1,6143,"\n        "],[-1,6150," "],[1,6151," "],[-1,6159," = "],[1,6162," = "],[-1,6181,"        "],[1,6189,"\n        "],[-1,6196," "],[1,6197," "],[-1,6205," = "],[1,6208," = "],[-1,6277,"        "],[1,6285,"\n        "],[-1,6311,"        "],[1,6319,"\n        "],[-1,6345,"        "],[1,6353,"\n        "],[-1,6382,"        "],[1,6390,"\n        "],[-1,6419,"        "],[1,6427,"\n        "]],[5922,6456],[6460,6460]]],[1568211057784,["GJX@GJXAIOU",[[1,6583,"\n"],[1,6636,"\n"],[1,6675,"\n"],[1,6714,"\n"]],[6530,6753],[6757,6757]]],[1568211061962,["GJX@GJXAIOU",[[-1,6772,">"]],[6773,6773],[6772,6772]]],[1568211064211,["GJX@GJXAIOU",[[-1,6824,">"]],[6825,6825],[6824,6824]]],[1568211065818,["GJX@GJXAIOU",[[-1,6873,">"]],[6874,6874],[6873,6873]]]],null,"GJX@GJXAIOU"]]}