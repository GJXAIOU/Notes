{"compress":true,"commitItems":[["a7535601-d83a-4ab0-aa16-b38408d74652",1566107417243,"java中有三种移位运算符\n\n<<      :     左移运算符，num << 1,相当于num乘以2\n\n>>      :     右移运算符，num >> 1,相当于num除以2\n\n>>>    :     无符号右移，忽略符号位，空位都以0补齐\n\n下面来看看这些移位运算都是怎样使用的\n\n[![复制代码](https://common.cnblogs.com/images/copycode.gif)](javascript:void(0); \"复制代码\")\n\n 1 /**\n 2  * \n 3  */\n 4 package com.b510.test; 5 \n 6 /**\n 7 * @author Jone Hongten 8  * @create date：2013-11-2\n 9 * @version 1.0 10  */\n11 public class Test { 12 \n13     public static void main(String[] args) { 14         int number = 10; 15         //原始数二进制\n16 printInfo(number); 17         number = number << 1; 18         //左移一位\n19 printInfo(number); 20         number = number >> 1; 21         //右移一位\n22 printInfo(number); 23 } 24     \n25     /**\n26 * 输出一个int的二进制数 27 * @param num 28      */\n29     private static void printInfo(int num){ 30 System.out.println(Integer.toBinaryString(num)); 31 } 32 }\n\n[![复制代码](https://common.cnblogs.com/images/copycode.gif)](javascript:void(0); \"复制代码\")\n\n运行结果为：\n\n1010\n10100\n1010\n\n我们把上面的结果对齐一下：\n\n43210      位数\n--------\n 1010      十进制：10     原始数         number\n10100      十进制：20     左移一位       number = number << 1;\n 1010      十进制：10     右移一位       number = number >> 1;\n\n看了上面的demo，现在是不是对左移和右移了解了很多了呢\n\n对于：>>>\n\n 无符号右移，忽略符号位，空位都以0补齐\n\nvalue >>> num     --   num 指定要移位值value 移动的位数。\n\n无符号右移的规则只记住一点：忽略了符号位扩展，0补最高位  无符号右移运算符>>> 只是对32位和64位的值有意义",[[1566107379018,["GJX@GJXAIOU",[[1,0,"## "]],[0,0],[16,16]]],[1566107394516,["GJX@GJXAIOU",[[-1,57,"\n"]],[57,57],[56,56]]],[1566107396346,["GJX@GJXAIOU",[[-1,96,"\n"]],[96,96],[95,95]]],[1566107405689,["GJX@GJXAIOU",[[-1,149,"\n"]],[150,150],[149,149]]],[1566107406047,["GJX@GJXAIOU",[[-1,21,"     :    "],[1,31,"     :    "],[-1,60,"     :    "],[1,70,"     :    "],[-1,100,"   :     "],[1,109,"   :     "],[1,149,"·"],[-1,1182," "],[1,1183," "],[-1,1209," >>> "],[1,1214," >>> "],[-1,1218,"   "],[1,1221,"   "],[-1,1225,"  num "],[1,1231,"  num "],[-1,1242," "],[1,1243," "],[-1,1279,"  "],[1,1281,"  "],[-1,1292," "],[1,1293," "]],[149,149],[150,150]]],[1566107406422,["GJX@GJXAIOU",[[1,150,"··"]],[150,150],[152,152]]],[1566107408385,["GJX@GJXAIOU",[[-1,150,"··"]],[152,152],[150,150]]],[1566107408964,["GJX@GJXAIOU",[[1,21,"     :    "],[-1,21,"     :    "],[1,60,"     :    "],[-1,60,"     :    "],[1,100,"   :     "],[-1,100,"   :     "],[-1,149,"·"],[1,1183," "],[-1,1183," "],[1,1210," >>> "],[-1,1210," >>> "],[1,1219,"   "],[-1,1219,"   "],[1,1226,"  num "],[-1,1226,"  num "],[1,1243," "],[-1,1243," "],[1,1280,"  "],[-1,1280,"  "],[1,1293," "],[-1,1293," "]],[150,150],[149,149]]],[1566107409432,["GJX@GJXAIOU",[[1,149,"\n"]],[149,149],[150,150]]],[1566107417140,["GJX@GJXAIOU",[[-1,150,"[![复制代码](https://common.cnblogs.com/images/copycode.gif)](javascript:void(0); \"复制代码\")\n\n 1 /**\n 2  * \n 3  */\n 4 package com.b510.test; 5 \n 6 /**\n 7 * @author Jone Hongten 8  * @create date：2013-11-2\n 9 * @version 1.0 10  */\n11 public class Test { 12 \n13     public static void main(String[] args) { 14         int number = 10; 15         //原始数二进制\n16 printInfo(number); 17         number = number << 1; 18         //左移一位\n19 printInfo(number); 20         number = number >> 1; 21         //右移一位\n22 printInfo(number); 23 } 24     \n25     /**\n26 * 输出一个int的二进制数 27 * @param num 28      */\n29     private static void printInfo(int num){ 30 System.out.println(Integer.toBinaryString(num)); 31 } 32 }\n\n[![复制代码](https://common.cnblogs.com/images/copycode.gif)](javascript:void(0); \"复制代码\")\n"]],[149,928],[149,149]]],[1566107417724,["GJX@GJXAIOU",[[-1,21,"     :    "],[1,31,"     :    "],[-1,60,"     :    "],[1,70,"     :    "],[-1,100,"   :     "],[1,109,"   :     "],[1,149,"·"],[-1,404," "],[1,405," "],[-1,431," >>> "],[1,436," >>> "],[-1,440,"   "],[1,443,"   "],[-1,447,"  num "],[1,453,"  num "],[-1,464," "],[1,465," "],[-1,501,"  "],[1,503,"  "],[-1,514," "],[1,515," "]],[149,149],[150,150]]],[1566107418159,["GJX@GJXAIOU",[[1,150,"··"]],[150,150],[152,152]]],[1566107418828,["GJX@GJXAIOU",[[-1,149,"···"]],[152,152],[149,149]]],[1566107420019,["GJX@GJXAIOU",[[1,149,"```"]],[149,149],[152,152]]],[1566107420042,["GJX@GJXAIOU",[[1,152,"language\n```\n"]],[152,152],[152,160]]],[1566107420940,["GJX@GJXAIOU",[[-1,152,"language"],[1,160,"j"]],[152,160],[153,153]]],[1566107421292,["GJX@GJXAIOU",[[1,153,"ava"]],[153,153],[156,156]]],[1566107421485,["GJX@GJXAIOU",[[1,157,"\n"]],[156,156],[157,157]]],[1566107424050,["GJX@GJXAIOU",[[1,157,"/**\n * \n */\npackage com.b510.test;\n\n/**\n * @author Jone Hongten\n * @create date：2013-11-2\n * @version 1.0\n */\npublic class Test {\n\n    public static void main(String[] args) {\n        int number = 10;\n        //原始数二进制\n        printInfo(number);\n        number = number << 1;\n        //左移一位\n        printInfo(number);\n        number = number >> 1;\n        //右移一位\n        printInfo(number);\n    }\n    \n    /**\n     * 输出一个int的二进制数\n     * @param num\n     */\n    private static void printInfo(int num){\n        System.out.println(Integer.toBinaryString(num));\n    }\n}"]],[157,157],[719,719]]],[1566107427667,["GJX@GJXAIOU",[[-1,157,"/**\n * \n */\npackage com.b510.test;"]],[157,191],[157,157]]],[1566107431301,["GJX@GJXAIOU",[[-1,159,"/**\n * @author Jone Hongten\n * @create date：2013-11-2\n * @version 1.0\n */"]],[159,232],[159,159]]],[1566107431979,["GJX@GJXAIOU",[[-1,159,"\n"]],[159,159],[158,158]]],[1566107432340,["GJX@GJXAIOU",[[-1,158,"\n"]],[158,158],[157,157]]],[1566107432717,["GJX@GJXAIOU",[[-1,157,"\n"]],[157,157],[156,156]]],[1566107434018,["GJX@GJXAIOU",[[-1,177,"\n"]],[177,177],[176,176]]],[1566107442003,["GJX@GJXAIOU",[[-1,474,"     * @param num"]],[474,491],[474,474]]],[1566107442330,["GJX@GJXAIOU",[[-1,474,"\n"]],[474,474],[473,473]]],[1566107445157,["GJX@GJXAIOU",[[-1,474,"     */"]],[474,481],[474,474]]],[1566107447619,["GJX@GJXAIOU",[[-1,450,"/**"]],[453,453],[450,450]]],[1566107449554,["GJX@GJXAIOU",[[-1,455," * "]],[458,458],[455,455]]],[1566107450412,["GJX@GJXAIOU",[[1,455,"//"]],[455,455],[457,457]]],[1566107452269,["GJX@GJXAIOU",[[-1,470,"\n"]],[470,470],[469,469]]],[1566107454619,["GJX@GJXAIOU",[[-1,446,"    "]],[450,450],[446,446]]],[1566107455004,["GJX@GJXAIOU",[[-1,446,"\n"]],[446,446],[445,445]]],[1566107461852,["GJX@GJXAIOU",[[1,257," "]],[257,257],[258,258]]],[1566107462789,["GJX@GJXAIOU",[[1,332," "]],[332,332],[333,333]]],[1566107463772,["GJX@GJXAIOU",[[1,405," "]],[405,405],[406,406]]],[1566107465788,["GJX@GJXAIOU",[[1,455," "]],[455,455],[456,456]]],[1566107502125,["GJX@GJXAIOU",[[-1,330,"// 左移一位"]],[330,337],[330,330]]],[1566107503516,["GJX@GJXAIOU",[[1,300,"\n        "]],[291,291],[300,300]]],[1566107504011,["GJX@GJXAIOU",[[1,300,"// 左移一位"]],[300,300],[307,307]]],[1566107508931,["GJX@GJXAIOU",[[-1,255,"// 原始数二进制"]],[255,264],[255,255]]],[1566107510442,["GJX@GJXAIOU",[[1,230,"\n        "]],[230,230],[239,239]]],[1566107511734,["GJX@GJXAIOU",[[1,230,"// 原始数二进制"]],[230,230],[239,239]]],[1566107515613,["GJX@GJXAIOU",[[-1,264,"\n"]],[265,265],[264,264]]],[1566107519692,["GJX@GJXAIOU",[[1,233,"shuc"]],[233,233],[237,237]]],[1566107520298,["GJX@GJXAIOU",[[-1,233,"shuc"]],[237,237],[233,233]]],[1566107523285,["GJX@GJXAIOU",[[1,233,"输出"]],[233,233],[235,235]]],[1566107527234,["GJX@GJXAIOU",[[1,310,"\n        "]],[310,310],[319,319]]],[1566107530749,["GJX@GJXAIOU",[[-1,363,"  "]],[358,359],[357,357]]],[1566107531082,["GJX@GJXAIOU",[[-1,356,"\n"]],[357,357],[356,356]]],[1566107536175,["GJX@GJXAIOU",[[1,326,"并输出"]],[326,326],[329,329]]],[1566107539396,["GJX@GJXAIOU",[[-1,423,"        // 右移一位"]],[423,438],[423,423]]],[1566107540963,["GJX@GJXAIOU",[[1,401,"\n        "]],[392,392],[401,401]]],[1566107541571,["GJX@GJXAIOU",[[-1,393,"        "],[1,401,"\n"]],[401,401],[394,394]]],[1566107545676,["GJX@GJXAIOU",[[1,394,"        // 右移一位并输出"]],[394,394],[412,412]]],[1566107548250,["GJX@GJXAIOU",[[-1,443,"\n"]],[443,443],[442,442]]],[1566107741757,["GJX@GJXAIOU",[[1,266,"\n"],[-1,274,"\n        printInfo"],[1,292,"System.out.println(\"十进制：\" + number + \" 二进制：\" + Integer.toBinaryString"],[1,300,")"],[-1,302,"        "],[1,359,"\n  "],[-1,365,"\n        printInfo"],[1,383,"System.out.println(\"十进制：\" + number + \" 二进制：\" + Integer.toBinaryString"],[1,390,")"],[1,451,"System.out."],[-1,456,"Info("],[1,461,"ln(\"十进制：\" + "],[-1,467,");\n    }\n    \n    // 输出一个int的二进制数\n    private static void printInfo(int num){\n        System.out.println("],[1,572," + \" 二进制：\" + "],[1,598,"ber"]],[157,609],[638,638]]],[1566107743994,["GJX@GJXAIOU",[[1,639,"\n"]],[638,638],[639,639]]],[1566107745644,["GJX@GJXAIOU",[[1,639,"、"]],[639,639],[640,640]]],[1566107746425,["GJX@GJXAIOU",[[-1,639,"、"]],[640,640],[639,639]]],[1566107764178,["GJX@GJXAIOU",[[1,639,"/**\n * 十进制：10 二进制：1010\n * 十进制：20 二进制：10100\n * 十进制：10 二进制：1010\n */"]],[639,639],[704,704]]],[1566107776732,["GJX@GJXAIOU",[[-1,711,"运行结果为：\n\n1010\n10100\n1010"]],[711,734],[711,711]]],[1566107778226,["GJX@GJXAIOU",[[-1,712,"\n"]],[712,712],[711,711]]],[1566107778565,["GJX@GJXAIOU",[[-1,711,"\n"]],[711,711],[710,710]]],[1566107810034,["GJX@GJXAIOU",[[1,771," "]],[771,771],[772,772]]],[1566107813130,["GJX@GJXAIOU",[[1,868," "]],[868,868],[869,869]]],[1566107815580,["GJX@GJXAIOU",[[-1,801," "]],[802,802],[801,801]]],[1566107818123,["GJX@GJXAIOU",[[-1,759," "]],[760,760],[759,759]]],[1566107819475,["GJX@GJXAIOU",[[1,759," "]],[759,759],[760,760]]],[1566107832314,["GJX@GJXAIOU",[[1,750," "]],[750,750],[751,751]]],[1566107833733,["GJX@GJXAIOU",[[1,847," "]],[847,847],[848,848]]],[1566107836066,["GJX@GJXAIOU",[[1,792," "]],[792,792],[793,793]]],[1566107839265,["GJX@GJXAIOU",[[-1,792," "]],[792,793],[792,792]]],[1566107842473,["GJX@GJXAIOU",[[-1,750," "]],[751,751],[750,750]]],[1566107843275,["GJX@GJXAIOU",[[1,750," "]],[750,750],[751,751]]],[1566107844282,["GJX@GJXAIOU",[[-1,749,"  "]],[751,751],[749,749]]],[1566107844515,["GJX@GJXAIOU",[[-1,748,"\n"]],[749,749],[748,748]]],[1566107845865,["GJX@GJXAIOU",[[1,748,"\n"]],[748,748],[749,749]]],[1566107847673,["GJX@GJXAIOU",[[1,749,"  "]],[749,749],[751,751]]],[1566107855204,["GJX@GJXAIOU",[[-1,726,"43210      位数\n--------"]],[726,748],[726,726]]],[1566107855763,["GJX@GJXAIOU",[[-1,726,"\n"]],[726,726],[725,725]]],[1566107856145,["GJX@GJXAIOU",[[-1,725,"\n"]],[725,725],[724,724]]],[1566107868748,["GJX@GJXAIOU",[[-1,880,"看了上面的demo，现在是不是对左移和右移了解了很多了呢"]],[880,908],[880,880]]],[1566107869268,["GJX@GJXAIOU",[[-1,881,"\n"]],[880,880],[879,879]]],[1566107922220,["GJX@GJXAIOU",[[1,130,"\n"]],[129,129],[130,130]]],[1566107926949,["GJX@GJXAIOU",[[1,129,"吗"]],[129,129],[130,130]]],[1566107927690,["GJX@GJXAIOU",[[-1,129,"吗"]],[130,130],[129,129]]],[1566107930421,["GJX@GJXAIOU",[[1,129,"m << m"]],[129,129],[135,135]]],[1566107931049,["GJX@GJXAIOU",[[-1,134,"m"]],[135,135],[134,134]]],[1566107933603,["GJX@GJXAIOU",[[1,134,"n :zuo"]],[134,134],[140,140]]],[1566107934612,["GJX@GJXAIOU",[[-1,137,"zuo"]],[140,140],[137,137]]],[1566107940214,["GJX@GJXAIOU",[[1,137,"    左移n"]],[137,137],[144,144]]],[1566107940237,["GJX@GJXAIOU",[[1,143," "]],[144,144],[145,145]]],[1566107942143,["GJX@GJXAIOU",[[1,145,"位"]],[145,145],[146,146]]],[1566107942168,["GJX@GJXAIOU",[[1,145," "]],[146,146],[147,147]]],[1566107945668,["GJX@GJXAIOU",[[1,147,"，相当于m"]],[147,147],[152,152]]],[1566107945691,["GJX@GJXAIOU",[[1,151," "]],[152,152],[153,153]]],[1566107947619,["GJX@GJXAIOU",[[1,153,"cheng"]],[153,153],[158,158]]],[1566107948930,["GJX@GJXAIOU",[[-1,153,"cheng"]],[158,158],[153,153]]],[1566107950724,["GJX@GJXAIOU",[[1,153,"乘以"]],[153,153],[155,155]]],[1566107950747,["GJX@GJXAIOU",[[1,153," "]],[155,155],[156,156]]],[1566107953142,["GJX@GJXAIOU",[[1,156,"2"]],[156,156],[157,157]]],[1566107953167,["GJX@GJXAIOU",[[1,156," "]],[157,157],[158,158]]],[1566107955772,["GJX@GJXAIOU",[[1,158,"的"]],[158,158],[159,159]]],[1566107955795,["GJX@GJXAIOU",[[1,158," "]],[159,159],[160,160]]],[1566107957318,["GJX@GJXAIOU",[[1,160,"n"]],[160,160],[161,161]]],[1566107957342,["GJX@GJXAIOU",[[1,160," "]],[161,161],[162,162]]],[1566107959229,["GJX@GJXAIOU",[[1,162,"次方"]],[162,162],[164,164]]],[1566107959253,["GJX@GJXAIOU",[[1,162," "]],[164,164],[165,165]]],[1566107959660,["GJX@GJXAIOU",[[1,165,"；"]],[165,165],[166,166]]]],null,"GJX@GJXAIOU"]]}