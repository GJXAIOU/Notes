{"compress":true,"commitItems":[["e8de7702-361b-4325-bf9d-997290ecac7e",1566481781179,"| **理解和正确使用Java中的断言(assert)** |\n| **一、语法形式：**\n    Java2在1.4中新增了一个关键字：assert。在程序开发过程中使用它创建一个断言(assertion)，它的\n语法形式有如下所示的两种形式：\n1、assert _condition_;\n    这里condition是一个必须为真(true)的表达式。如果表达式的结果为true，那么断言为真，并且无任何行动\n如果表达式为false，则断言失败，则会抛出一个AssertionError对象。这个AssertionError继承于Error对象，\n而Error继承于Throwable，Error是和Exception并列的一个错误对象，通常用于表达系统级运行错误。\n2、asser _condition:expr_;\n    这里condition是和上面一样的，这个冒号后跟的是一个表达式，通常用于断言失败后的提示信息，说白了，它是一个传到AssertionError构造函数的值，如果断言失败，该值被转化为它对应的字符串，并显示出来。\n\n**二、使用示例：**\n    下面是一个使用assert的例子：\n\npublic class TestAssert{\n     public static void main(String[] args){\n         String name = \"abner chai\";\n         //String name = null;\n         assert (name!=null):\"变量name为空null\";\n         System.out.println(name);\n     }\n}\n\n    上面程序中，当变量name为null时，将会抛出一个AssertionError，并输出错误信息。\n要想让上面的程序中的断言有效并且正确编译，在编译程序时，必须使用-source 1.4选项。如：\n\njavac -source 1.4 TestAssert.java\n\n在Eclipse(3.0M9)开发环境中，必须在window->preferences 中，左边选中\"Java->Compiler\"，右边选择\n“Compliance and ClassFiles”页面下的将\"Compiler Compliance Level\"选择为1.4；同时，将\n\"Use Default Compiler Settings\"前的勾去掉。并将下面的\n\"Generated .class file compatibility\"和\"Source compatibility\"均选择为1.4，才能正确编译。\n\n同时，要想让断言起效用，即让断言语句在运行时确实检查，在运行含有assert的程序时，必须指定-ea选项\n如：为了能够让上面的程序运行，我们执行下面代码：\n\njava -ea TestAssert\n\n在在Eclipse(3.0M9)开发环境中，运行时，我们必须配置运行时的选项\"Run\"，在Arguments页面中的\n\"VM Arguments\" 中填入-ea选项。才能让断言在运行时起作用。\n\n**三、注意事项：**\n    理解断言最重要的一点是必须不依赖它们完成任何程序实际所需的行为。理由是正常发布的代码都是断言无效的，即正常发布的代码中断言语句都不不执行的（或不起作用的），如果一不小心，我们可以错误地使用断言，如：\n\npublic class TestPerson{\n    private String name = null;\n    public TestPerson(String name){\n        this.name = name;\n    }\n    public void setName(String nameStr){\n        this.name = nameStr;\n    }\n    public String getName(){\n         return this.name;\n    }\n    public static void main(String[] args){\n        TestPerson personObj = new TestPerson(\"Abner Chai\");\n        String personName = null;\n        assert (personName=personObj.getName())!=null;\n        System.out.println(personName.length());\n    }\n}\n\n这个程序中，对personName的赋值被转移到assert6语句中，尽管断言有效时它可以很好地运行（即使用-ea运行\n时可以有效地运行）但如果断言失效，则它会运行时报空指针错误。因为断言无效时，\npersonName=personObj.getName()一句永远不会执行！\n    断言对Java来说是一个好的条件，因为它们使开发过程中错误类型检查流线化，例如，在没有assert之前，\n上面的程序要想确认personName 不空，则必须：\n\nif(personName!=null){\n    System.out.println(personName.length());\n}\n才行。有了assert后，使用assert，只需一行代码，并且不必从发布的代码中删除assert语句。\n于是，上面的那个程序，经改正后，我们可以这么样来正确的使用assert，如下：\n\npublic class TestPerson{\n    private String name = null;\n    public TestPerson(String name){\n        this.name = name;\n    }\n    public void setName(String nameStr){\n        this.name = nameStr;\n    }\n    public String getName(){\n         return this.name;\n    }\n    public static void main(String[] args){\n        TestPerson personObj = new TestPerson(\"Abner Chai\");\n        String personName = null;\n        personName=personObj.getName();\n        assert personName!=null;\n        System.out.println(personName.length());\n    }\n}\n\n**四、其它选项：**\n    当执行代码时，使用-ea选项使断言有效，也可以使用-da选项使断言无效（默认为无效）\n同样，也可以通过在-ea或-da后面指定包名来使一个包的断言有效或无效。例如，要使一个com.test包中的断言\n无效，可以使用：\n-da:com.test\n要使一个包中的所有子包中的断言能够有效或无效，在包名后加上三个点。例如：\n-ea:com.test...\n即可使com.test包及其子包中的断言无效。 |",[[1566481761225,["GJX@GJXAIOU",[[1,47,"一、语法形式：\n "],[-1,133,"_"],[-1,143,"_"],[-1,345,"_"],[-1,360,"_"],[-1,475,"**"],[-1,484,"**"],[-1,1338,"**"],[-1,1347,"**"],[-1,2890,"**"],[-1,2899,"**"],[1,3081,"\n"],[-1,3104," |"]],[47,3106],[3098,3098]]],[1566481764888,["GJX@GJXAIOU",[[-1,32,"| **一、语法形式：**"]],[32,45],[32,32]]],[1566481767296,["GJX@GJXAIOU",[[-1,0,"| **"]],[0,4],[0,0]]],[1566481768909,["GJX@GJXAIOU",[[-1,23,"** |"]],[23,27],[23,23]]],[1566481771190,["GJX@GJXAIOU",[[1,0,"# "]],[0,0],[25,25]]],[1566481774270,["GJX@GJXAIOU",[[1,27,"## "]],[28,28],[38,38]]],[1566481779151,["GJX@GJXAIOU",[[-1,117,"1、"]],[117,119],[117,117]]],[1566481779436,["GJX@GJXAIOU",[[-1,30," "],[1,31," "],[-1,39,"    "],[1,43,"    "],[1,117,"-"],[-1,123," "],[1,124," "],[-1,135,"    "],[1,139,"    "],[-1,333," "],[1,334," "],[-1,350,"    "],[1,354,"    "],[-1,470,"    "],[1,474,"    "],[-1,518,"    "],[1,522,"    "],[-1,563,"        "],[1,571,"        "],[-1,600,"        "],[1,608,"        "],[-1,631,"        "],[1,639,"        "],[-1,676,"        "],[1,684,"        "],[-1,711,"    "],[1,715,"    "],[-1,721,"    "],[1,725,"    "],[-1,1329,"    "],[1,1333,"    "],[-1,1459,"    "],[1,1463,"    "],[-1,1491,"    "],[1,1495,"    "],[-1,1527,"        "],[1,1535,"        "],[-1,1553,"    }\n    "],[1,1563,"    }\n    "],[-1,1600,"        "],[1,1608,"        "],[-1,1629,"    }\n    "],[1,1639,"    }\n    "],[-1,1664,"        "],[1,1672,"        "],[-1,1691,"    }\n    "],[1,1701,"    }\n    "],[-1,1741,"        "],[1,1749,"        "],[-1,1802,"        "],[1,1810,"        "],[-1,1836,"        "],[1,1844,"        "],[-1,1891,"        "],[1,1899,"        "],[-1,1940,"    "],[1,1944,"    "],[-1,2088,"    "],[1,2092,"    "],[-1,2196,"    "],[1,2200,"    "],[-1,2361,"    "],[1,2365,"    "],[-1,2393,"    "],[1,2397,"    "],[-1,2429,"        "],[1,2437,"        "],[-1,2455,"    }\n    "],[1,2465,"    }\n    "],[-1,2502,"        "],[1,2510,"        "],[-1,2531,"    }\n    "],[1,2541,"    }\n    "],[-1,2566,"        "],[1,2574,"        "],[-1,2593,"    }\n    "],[1,2603,"    }\n    "],[-1,2643,"        "],[1,2651,"        "],[-1,2704,"        "],[1,2712,"        "],[-1,2738,"        "],[1,2746,"        "],[-1,2778,"        "],[1,2786,"        "],[-1,2811,"        "],[1,2819,"        "],[-1,2860,"    "],[1,2864,"    "],[-1,2877,"    "],[1,2881,"    "]],[117,117],[118,118]]],[1566481779577,["GJX@GJXAIOU",[[1,118," "]],[118,118],[119,119]]],[1566481782014,["GJX@GJXAIOU",[[-1,328,"2、"]],[328,330],[328,328]]],[1566481782415,["GJX@GJXAIOU",[[1,328,"- "]],[328,328],[330,330]]],[1566481785726,["GJX@GJXAIOU",[[1,464,"## "]],[464,464],[474,474]]],[1566481787912,["GJX@GJXAIOU",[[1,497,"··"]],[497,497],[499,499]]],[1566481789046,["GJX@GJXAIOU",[[-1,497,"··"]],[499,499],[497,497]]],[1566481789921,["GJX@GJXAIOU",[[1,497,"```"]],[497,497],[500,500]]],[1566481789947,["GJX@GJXAIOU",[[1,500,"language\n```\n"]],[500,500],[500,508]]],[1566481790815,["GJX@GJXAIOU",[[-1,500,"language"],[1,508,"j"]],[500,508],[501,501]]],[1566481791143,["GJX@GJXAIOU",[[1,501,"ava"]],[501,501],[504,504]]],[1566481792206,["GJX@GJXAIOU",[[1,505,"\n"]],[504,504],[505,505]]],[1566481795421,["GJX@GJXAIOU",[[-1,511,"public class TestAssert{\n     public static void main(String[] args){\n         String name = \"abner chai\";\n         //String name = null;\n         assert (name!=null):\"变量name为空null\";\n         System.out.println(name);\n     }\n}"]],[511,737],[511,511]]],[1566481796887,["GJX@GJXAIOU",[[1,505,"public class TestAssert{\n     public static void main(String[] args){\n         String name = \"abner chai\";\n         //String name = null;\n         assert (name!=null):\"变量name为空null\";\n         System.out.println(name);\n     }\n}"]],[505,505],[731,731]]],[1566481798703,["GJX@GJXAIOU",[[-1,738,"\n"]],[738,738],[737,737]]],[1566481799086,["GJX@GJXAIOU",[[-1,737,"\n"]],[737,737],[736,736]]],[1566481800231,["GJX@GJXAIOU",[[-1,737,"    "]],[737,741],[737,737]]],[1566481805518,["GJX@GJXAIOU",[[1,1333,"## "]],[1333,1333],[1343,1343]]],[1566481809791,["GJX@GJXAIOU",[[1,2884,"## "]],[2884,2884],[2894,2894]]]],null,"GJX@GJXAIOU"]]}