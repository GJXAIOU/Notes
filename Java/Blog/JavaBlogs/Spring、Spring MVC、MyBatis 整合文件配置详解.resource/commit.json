{"compress":true,"commitItems":[["a210b9b5-f9a6-40c7-85d5-99118d078f3a",1568189547531,"## Spring、Spring MVC、MyBatis 整合文件配置详解\n\n[Java研发军团](javascript:void(0);) _今天_\n\n点击上方“Java研发军团”，选择“置顶公众号”\n\n关键时刻，第一时间送达！\n\n阅读本文需要5分钟\n\n大家好，我是你们的导师，我每天都会在这里给大家分享一些干货内容（当然了，周末也要允许老师休息一下哈）。上次老师跟大家分享了MySQL详细知识点的知识，今天跟大家分享下SSM框架整合文件配置的知识。\n\n使用SSM框架做了几个小项目了，感觉还不错是时候总结一下了。先总结一下SSM整合的文件配置。其实具体的用法最好还是看官方文档。\n\nSpring:http://spring.io/docs\n\nMyBatis:http://mybatis.github.io/mybatis-3/\n\n基本的组织结构和用法就不说了，前面的博客和官方文档上都非常的全面。jar包可以使用Maven来组织管理。来看配置文件。\n\n### **1 ****web.xml的配置**\n\nweb.xml应该是整个项目最重要的配置文件了，不过servlet3.0中已经支持注解配置方式了。在servlet3.0以前每个servlet必须要在web.xml中配置servlet及其映射关系。但是在spring框架中就不用了，因为Spring中是依赖注入（Dependency Injection）的也叫控制反转（Inversion of Control）。但是也要配置一个重要的servlet，就是前端控制器（DispatcherServlet）。配置方式与普通的servlet基本相似。\n\n配置内容如下：\n\n```\n<!-- 配置前端控制器 -->\n```\n\n这里需要注意，springmvc.xml是spring配置文件，将在后面讨论。在<servlet-mapping>中url如果是.action，前端控制器就只会拦截以.action结尾的请求，并不会理会静态的文件。对静态页面的控制就要通过其他的手段。以/作为url的话就会拦截所有的请求，包括静态页面的请求。这样的话就可以拦截任何想要处理的请求，但是有一个问题。如果拦截了所有的请求，如果不在拦截器中做出相应的处理那么所有静态的js、css以及页面中用到的图片就会访问不到造成页面无法正常显示。但这可以通过静态资源的配置来解决这个问题。后面会提到。\n\n配置spring容器：\n\n```\n<context-param>\n```\n\n其中applicationContext-*.xml包含3个配置文件，是springIoC容器的具体配置。后面会提到。\n\n配置一个监听器：\n\n```\n<listener>\n```\n\nweb.xml的完整配置是这样的：\n\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n```\n\n看到配置文件中多了两块内容，一个是error page是用来友好的处理错误的，可以使用错误代码来区别并跳转到相应的处理页面。这段配置代码最好放到最前面，在前端控制器拦截之前处理。\n\n还有一块内容是一个解决post乱码问题的过滤器，拦截post请求并编码为utf8。\n\n**2 springmvc.xml的配置**\n\n视图解析器的配置：\n\n```\n<!-- 配置视图解析器 -->\n```\n\n在Controller中设置视图名的时候会自动加上前缀和后缀。\n\nController的配置\n\n自动扫描方式，扫描包下面所有的Controller，可以使用注解来指定访问路径。\n\n```\n<!-- 使用组件扫描的方式可以一次扫描多个Controller -->\n```\n\n也可以使用单个的配置方式，需要指定Controller的全限定名。\n\n```\n<bean name=\"/queryUser.action\" class=\"com.wxisme.ssm.controller.Controller1\"/>\n```\n\n配置注解的处理器适配器和处理器映射器：\n\n```\n<!-- 注解的处理器适配器 -->\n```\n\n也可以使用下面的简化配置：\n\n```\n<!-- 配置注解的处理器映射器和处理器适配器 -->\n```\n\n配置拦截器，可以直接定义拦截所有请求，也可以自定义拦截路径。\n\n```\n<mvc:interceptors>\n```\n\n配置全局异常处理器\n\n```\n<!-- 定义全局异常处理器 -->\n```\n\n配置文件上传数据解析器，在上传文件时需要配置。\n\n```\n<!--配置上传文件数据解析器  -->\n```\n\n还可以配置一些自定义的参数类型，以日期类型绑定为例。\n\n```\n<!-- 自定义参数类型绑定 -->\n```\n\n上面提到过如果在配置前端控制器时拦截了所有的请求，不做特殊处理就会导致部分静态资源无法使用。如果是这种情况就可以使用下面的配置来访问静态资源文件。\n\n```\n<mvc:resources mapping=\"/images/**\" location=\"/images/\" />\n```\n\n也可以使用默认，但是需要在web.xml中配置。\n\n```\n<!-- 访问静态资源文件 -->\n```\n\n完全可以不拦截所有路径，大可避免这个问题的发生。完整的配置大概是这样的，需要注意xml文件的命名空间，有时候会有影响的。\n\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n```\n\napplicationContext-*.xml的配置\n\napplicationContext-*.xml包括三个配置文件，分别对应数据层控制、业务逻辑service控制和事务的控制。\n\n数据访问层的控制，applicationContext-dao.xml的配置：\n\n配置加载数据连接资源文件的配置，把数据库连接数据抽取到一个properties资源文件中方便管理。\n\n配置为：\n\n```\n<!-- 加载数据库连接的资源文件 -->\n```\n\n其中jdbc.properties文件的内容如下：配置内容如下：\n\n```\njdbc.driver=com.mysql.jdbc.Driver\n```\n\n配置数据库连接池，这里使用的是dbcp，别忘了添加jar包！\n\n```\n<!-- 配置数据源   dbcp数据库连接池 -->\n```\n\n**3 ****Spring和MyBatis整合配置，jar包由MyBatis提供**\n\n配置sqlSessionFactory\n\n```\n<!-- 配置sqlSessionFactory -->\n```\n\nSqlMapConfig.xml文件是MyBatis的配置文件，后面会提到。\n\n配置Mapper扫描器，扫描mapper包下的所有mapper文件和类，要求mapper配置文件和类名需要一致。\n\n```\n<!-- 配置mapper扫描器 -->\n```\n\n整个applicationContext-dao.xml配置文件应该是这样的：\n\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n```\n\n业务逻辑控制，applicationContext-service.xml的配置：\n\n这个文件里暂时只需要定义service的实现类即可。\n\n```\n<!-- 定义service -->\n```\n\n事务控制，applicationContext-transaction.xml的配置\n\n配置数据源，使用JDBC控制类。\n\n```\n<bean id=\"transactionManager\" class=\"org.springframework.jdbc.datasource.DataSourceTransactionManager\">\n```\n\n配置通知，事务控制。\n\n```\n<!-- 通知 -->\n```\n\n配置AOP切面\n\n```\n<!-- 配置aop  -->\n```\n\n整个事务控制的配置是这样的：\n\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n```\n\n**4 ****MyBatis的配置**\n\nSqlMapConfig.xml的配置   全局setting配置这里省略，数据库连接池在spring整合文件中已经配置，具体setting配置参考官方文档。\n\n别名的定义：\n\n```\n<typeAliases>\n```\n\nmapper映射文件的配置：\n\n```\n<mappers>\n```\n\n整个文件的配置应该是这样的：\n\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n```\n\n具体mapper文件的配置，在使用mapper代理的方法时，命名空间需要是对应的Mapper类。\n\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n```\n\n以上只是对SSM框架简单使用时的配置文件，如果需要深入使用或者需要理解其内部机理需要参考官方文档和其源代码。",[[1568189499549,["GJX@GJXAIOU",[[-1,39,"[Java研发军团](javascript:void(0);) _今天_\n\n点击上方“Java研发军团”，选择“置顶公众号”\n\n关键时刻，第一时间送达！\n\n阅读本文需要5分钟\n"]],[39,127],[39,39]]],[1568189510688,["GJX@GJXAIOU",[[-1,40,"大家好，我是你们的导师，我每天都会在这里给大家分享一些干货内容（当然了，周末也要允许老师休息一下哈）。上次老师跟大家分享了MySQL详细知识点的知识，今天跟大家分享下SSM框架整合文件配\n置的知识。"]],[138,138],[39,39]]],[1568189511672,["GJX@GJXAIOU",[[-1,40,"\n"]],[39,39],[38,38]]],[1568189525330,["GJX@GJXAIOU",[[1,530,"```\n"],[1,546,"\n```"]],[530,546],[554,554]]],[1568189527263,["GJX@GJXAIOU",[[-1,530,"```\n"],[-1,550,"\n```"]],[554,554],[530,546]]],[1568189529335,["GJX@GJXAIOU",[[1,547,"  <servlet>\n      <servlet-name>spring</servlet-name>\n      <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>\n      <init-param>\n          <!-- ContextconfigLocation配置springmvc加载的配置文件\n          适配器、处理映射器等\n           -->\n          <param-name>contextConfigLocation</param-name>\n          <param-value>WEB-INF/classes/spring/springmvc.xml</param-value>\n  </init-param>\n  </servlet>\n  <servlet-mapping>\n      <servlet-name>spring</servlet-name>\n      <!-- 1、.action访问以.action结尾的  由DispatcherServlet进行解析\n           2、/,所有访问都由DispatcherServlet进行解析\n       -->\n      <url-pattern>/</url-pattern>\n  </servlet-mapping>\n"]],[530,546],[1187,1187]]],[1568189541948,["GJX@GJXAIOU",[[1,1502,"        <param-name>contextConfigLocation</param-name>\n        <param-value>WEB-INF/classes/spring/applicationContext-*.xml</param-value>\n</context-param>\n"]],[1486,1501],[1656,1656]]],[1568189552411,["GJX@GJXAIOU",[[1,1748,"        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>\n</listener>\n"]],[1737,1747],[1854,1854]]],[1568189567238,["GJX@GJXAIOU",[[1,1922,"<web-app version=\"3.0\"\n    xmlns=\"http://java.sun.com/xml/ns/javaee\"\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n    xsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee \n \nhttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n \n  <display-name></display-name>    \n \n  <!-- 404错误拦截 -->\n  <error-page>\n    <error-code>404</error-code>\n    <location>/error404.jsp</location>\n  </error-page>\n  <!-- 500错误拦截 -->\n  <error-page>\n    <error-code>500</error-code>\n    <location>/error500.jsp</location>\n  </error-page>\n \n  <!-- 加载spring容器 -->\n    <context-param>\n        <param-name>contextConfigLocation</param-name>\n        <param-value>WEB-INF/classes/spring/applicationContext-*.xml</param-value>\n    </context-param>\n    <listener>\n        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>\n    </listener>\n \n  <!-- 配置前端控制器 -->\n  <servlet>\n      <servlet-name>spring</servlet-name>\n      <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>\n      <init-param>\n          <!-- ContextconfigLocation配置springmvc加载的配置文件\n          适配器、处理映射器等\n           -->\n          <param-name>contextConfigLocation</param-name>\n          <param-value>WEB-INF/classes/spring/springmvc.xml</param-value>\n  </init-param>\n  </servlet>\n  <servlet-mapping>\n      <servlet-name>spring</servlet-name>\n      <!-- 1、.action访问以.action结尾的  由DispatcherServlet进行解析\n           2、/,所有访问都由DispatcherServlet进行解析\n       -->\n      <url-pattern>/</url-pattern>\n  </servlet-mapping>\n \n  <!-- 解决post乱码问题的过滤器 -->\n  <filter>\n      <filter-name>CharacterEncodingFilter</filter-name>\n      <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>\n      <init-param>\n          <param-name>encoding</param-name>\n          <param-value>utf-8</param-value>\n      </init-param>\n  </filter>\n  <filter-mapping>\n      <filter-name>CharacterEncodingFilter</filter-name>\n      <url-pattern>/*</url-pattern>\n  </filter-mapping>\n  <welcome-file-list>\n    <welcome-file>welcome.jsp</welcome-file>\n  </welcome-file-list>\n</web-app>\n"]],[1883,1921],[3993,3993]]],[1568189580044,["GJX@GJXAIOU",[[1,4189,"     <bean class=\"org.springframework.web.servlet.view.InternalResourceViewResolver\">\n         <!-- 使用前缀和后缀 -->\n         <property name=\"prefix\" value=\"/\"></property>\n         <property name=\"suffix\" value=\".jsp\"></property>\n</bean>\n"]],[4172,4188],[4421,4421]]],[1568189590358,["GJX@GJXAIOU",[[1,4558,"<context:component-scan base-package=\"com.wxisme.ssm.controller\">\n"]],[4521,4557],[4623,4623]]],[1568189608067,["GJX@GJXAIOU",[[1,4796,"<bean class=\"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter\"/>\n<!-- 注解的处理器映射器 -->\n<bean class=\"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping\"/>\n"]],[4777,4795],[5012,5012]]],[1568189622206,["GJX@GJXAIOU",[[1,5065,"<mvc:annotation-driven conversion-service=\"conversionService\"></mvc:annotation-driven>\n"]],[5037,5064],[5151,5151]]],[1568189630514,["GJX@GJXAIOU",[[1,5212,"    <!-- 直接定义拦截所有请求 -->\n    <bean class=\"com.wxisme.ssm.interceptor.IdentityInterceptor\"></bean>\n        <!-- <mvc:interceptor>\n            拦截所有路径的请求   包括子路径\n            <mvc:mapping path=\"/**\"/>\n            <bean class=\"com.wxisme.ssm.interceptor.IdentityInterceptor\"></bean>\n        </mvc:interceptor> -->\n    </mvc:interceptors>\n"]],[5193,5211],[5543,5543]]],[1568189642335,["GJX@GJXAIOU",[[1,5583,"    <!-- 只有一个全局异常处理器起作用 -->\n    <bean id=\"exceptionResolver\" class=\"com.wxisme.ssm.exception.OverallExceptionResolver\"></bean>\n"]],[5564,5582],[5709,5709]]],[1568189651324,["GJX@GJXAIOU",[[1,5765,"    <bean id=\"multipartResolver\" class=\"org.springframework.web.multipart.commons.CommonsMultipartResolver\">\n        <property name=\"maxUploadSize\">\n            <value>9242880</value>\n        </property>\n    </bean>\n"]],[5744,5764],[5980,5980]]],[1568189659959,["GJX@GJXAIOU",[[1,6018,"\n"],[1,6035,">\n    <bean id=\"conversionService\" class=\"org.springframework.format.support.FormattingConversionServiceFactoryBean\">\n     <property name=\"converters\">\n         <list>\n             <!-- 日期类型绑定 -->\n             <bean class=\"com.wxisme.ssm.controller.converter.DateConverter\"/>\n         </list>\n     </property>\n    </bean"]],[6018,6036],[6357,6357]]],[1568189668198,["GJX@GJXAIOU",[[1,6442,"```\n"],[1,6500,"\n```"]],[6442,6500],[6508,6508]]],[1568189670056,["GJX@GJXAIOU",[[-1,6442,"```\n"],[-1,6504,"\n```"]],[6508,6508],[6442,6500]]],[1568189672121,["GJX@GJXAIOU",[[1,6442,"\n"],[1,6495,"/\" />\n<mvc:resources mapping=\"/css/**\" location=\"/css/\" />  \n<mvc:resources mapping=\"/js/**\" location=\"/js/\" />\n<mvc:resources mapping=\"/imgdata/**\" location=\"/imgdata"]],[6442,6500],[6668,6668]]],[1568189674429,["GJX@GJXAIOU",[[-1,6442,"\n"]],[6442,6442],[6441,6441]]],[1568189684066,["GJX@GJXAIOU",[[1,6721,"<!-- <mvc:default-servlet-handler/> 需要在web.xml中配置-->\n"]],[6703,6720],[6773,6773]]],[1568189702335,["GJX@GJXAIOU",[[1,6884,"<beans xmlns=\"http://www.springframework.org/schema/beans\"\nxmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\nxmlns:context=\"http://www.springframework.org/schema/context\"\nxmlns:mvc=\"http://www.springframework.org/schema/mvc\"\nxmlns:jdbc=\"http://www.springframework.org/schema/jdbc\"\nxmlns:jee=\"http://www.springframework.org/schema/jee\"\nxmlns:aop=\"http://www.springframework.org/schema/aop\"\nxmlns:tx=\"http://www.springframework.org/schema/tx\"\nxsi:schemaLocation=\"http://www.springframework.org/schema/beans \nhttp://www.springframework.org/schema/beans/spring-beans.xsd\nhttp://www.springframework.org/schema/context  \nhttp://www.springframework.org/schema/context/spring-context.xsd  \nhttp://www.springframework.org/schema/mvc  \nhttp://www.springframework.org/schema/mvc/spring-mvc.xsd  \nhttp://www.springframework.org/schema/tx  \nhttp://www.springframework.org/schema/tx/spring-tx.xsd \nhttp://www.springframework.org/schema/aop\nhttp://www.springframework.org/schema/aop/spring-aop.xsd\">\n \n     <!-- 配置视图解析器 -->\n     <bean class=\"org.springframework.web.servlet.view.InternalResourceViewResolver\">\n         <!-- 使用前缀和后缀 -->\n         <property name=\"prefix\" value=\"/\"></property>\n         <property name=\"suffix\" value=\".jsp\"></property>\n     </bean>\n \n     <!-- 使用组件扫描的方式可以一次扫描多个Controller -->\n     <context:component-scan base-package=\"com.wxisme.ssm.controller\">\n     </context:component-scan>\n     <!-- 配置注解的处理器映射器和处理器适配器 -->\n    <mvc:annotation-driven conversion-service=\"conversionService\"></mvc:annotation-driven>\n \n    <!-- 自定义参数类型绑定 -->\n    <bean id=\"conversionService\" class=\"org.springframework.format.support.FormattingConversionServiceFactoryBean\">\n     <property name=\"converters\">\n         <list>\n             <!-- 日期类型绑定 -->\n             <bean class=\"com.wxisme.ssm.controller.converter.DateConverter\"/>\n         </list>\n     </property>\n    </bean>\n \n    <!-- 访问静态资源文件 -->\n    <!-- <mvc:default-servlet-handler/> 需要在web.xml中配置-->\n \n    <mvc:resources mapping=\"/images/**\" location=\"/images/\" />\n    <mvc:resources mapping=\"/css/**\" location=\"/css/\" />  \n    <mvc:resources mapping=\"/js/**\" location=\"/js/\" />\n    <mvc:resources mapping=\"/imgdata/**\" location=\"/imgdata/\" />\n \n    <!-- 定义拦截器 -->\n    <mvc:interceptors>\n    <!-- 直接定义拦截所有请求 -->\n    <bean class=\"com.wxisme.ssm.interceptor.IdentityInterceptor\"></bean>\n        <!-- <mvc:interceptor>\n            拦截所有路径的请求   包括子路径\n            <mvc:mapping path=\"/**\"/>\n            <bean class=\"com.wxisme.ssm.interceptor.IdentityInterceptor\"></bean>\n        </mvc:interceptor> -->\n    </mvc:interceptors>\n \n    <!--配置上传文件数据解析器  -->\n    <bean id=\"multipartResolver\" class=\"org.springframework.web.multipart.commons.CommonsMultipartResolver\">\n        <property name=\"maxUploadSize\">\n            <value>9242880</value>\n        </property>\n    </bean>\n \n    <!-- 定义全局异常处理器 -->\n    <!-- 只有一个全局异常处理器起作用 -->\n    <bean id=\"exceptionResolver\" class=\"com.wxisme.ssm.exception.OverallExceptionResolver\"></bean>\n \n </beans>\n"]],[6845,6883],[9857,9857]]],[1568189719896,["GJX@GJXAIOU",[[1,10081,"<context:property-placeholder location=\"/WEB-INF/classes/jdbc.properties\"/>\n"]],[10059,10080],[10156,10156]]],[1568189729986,["GJX@GJXAIOU",[[1,10200,"\n"],[1,10233,"\njdbc.url=jdbc:mysql://localhost:3306/database\njdbc.username=root\njdbc.password=1234"]],[10200,10233],[10318,10318]]],[1568189732015,["GJX@GJXAIOU",[[-1,10200,"\n"]],[10200,10200],[10199,10199]]],[1568189742599,["GJX@GJXAIOU",[[1,10359,"\n"],[1,10385,">\n<bean id=\"dataSource\" class=\"org.apache.commons.dbcp2.BasicDataSource\" destroy-method=\"close\">\n    <property name=\"driverClassName\" value=\"${jdbc.driver}\"/>\n    <property name=\"url\" value=\"${jdbc.url}\"/>\n    <property name=\"username\" value=\"${jdbc.username}\"/>\n    <property name=\"password\" value=\"${jdbc.password}\"/>\n</bean"]],[10359,10386],[10713,10713]]],[1568189750323,["GJX@GJXAIOU",[[1,10789,"\n"],[1,10816,">\n<bean id=\"sqlSessionFactory\" class=\"org.mybatis.spring.SqlSessionFactoryBean\">\n    <!-- 数据库连接池 -->\n    <property name=\"dataSource\" ref=\"dataSource\"/>\n    <!-- 加载Mybatis全局配置文件 -->\n    <property name=\"configLocation\" value=\"/WEB-INF/classes/mybatis/SqlMapConfig.xml\"/>\n</bean"]],[10789,10817],[11093,11093]]],[1568189760056,["GJX@GJXAIOU",[[1,11222,"<bean class=\"org.mybatis.spring.mapper.MapperScannerConfigurer\">\n    <!-- 扫描包路径，如果需要扫描多个包中间用半角逗号隔开 -->\n    <property name=\"basePackage\" value=\"com.wxisme.ssm.mapper\"></property>\n    <property name=\"sqlSessionFactoryBeanName\" value=\"sqlSessionFactory\"/>\n</bean>\n"]],[11201,11221],[11482,11482]]],[1568189771190,["GJX@GJXAIOU",[[1,11572,"<beans xmlns=\"http://www.springframework.org/schema/beans\"\nxmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\nxmlns:context=\"http://www.springframework.org/schema/context\"\nxmlns:mvc=\"http://www.springframework.org/schema/mvc\"\nxmlns:jdbc=\"http://www.springframework.org/schema/jdbc\"\nxmlns:jee=\"http://www.springframework.org/schema/jee\"\nxmlns:aop=\"http://www.springframework.org/schema/aop\"\nxmlns:tx=\"http://www.springframework.org/schema/tx\"\nxsi:schemaLocation=\"http://www.springframework.org/schema/beans \nhttp://www.springframework.org/schema/beans/spring-beans.xsd\nhttp://www.springframework.org/schema/context\nhttp://www.springframework.org/schema/context/spring-context.xsd\nhttp://www.springframework.org/schema/mvc\nhttp://www.springframework.org/schema/mvc/spring-mvc.xsd\nhttp://www.springframework.org/schema/tx\nhttp://www.springframework.org/schema/tx/spring-tx.xsd\nhttp://www.springframework.org/schema/aop\nhttp://www.springframework.org/schema/aop/spring-aop.xsd\">\n \n<!-- 加载数据库连接的资源文件 -->\n<context:property-placeholder location=\"/WEB-INF/classes/jdbc.properties\"/>\n \n<!-- 配置数据源   dbcp数据库连接池 -->\n<bean id=\"dataSource\" class=\"org.apache.commons.dbcp2.BasicDataSource\" destroy-method=\"close\">\n    <property name=\"driverClassName\" value=\"${jdbc.driver}\"/>\n    <property name=\"url\" value=\"${jdbc.url}\"/>\n    <property name=\"username\" value=\"${jdbc.username}\"/>\n    <property name=\"password\" value=\"${jdbc.password}\"/>\n</bean>\n \n<!-- 配置sqlSessionFactory -->\n<bean id=\"sqlSessionFactory\" class=\"org.mybatis.spring.SqlSessionFactoryBean\">\n    <!-- 数据库连接池 -->\n    <property name=\"dataSource\" ref=\"dataSource\"/>\n    <!-- 加载Mybatis全局配置文件 -->\n    <property name=\"configLocation\" value=\"/WEB-INF/classes/mybatis/SqlMapConfig.xml\"/>\n</bean>\n \n<!-- 配置mapper扫描器 -->\n<bean class=\"org.mybatis.spring.mapper.MapperScannerConfigurer\">\n    <!-- 扫描包路径，如果需要扫描多个包中间用半角逗号隔开 -->\n    <property name=\"basePackage\" value=\"com.wxisme.ssm.mapper\"></property>\n    <property name=\"sqlSessionFactoryBeanName\" value=\"sqlSessionFactory\"/>\n</bean>\n \n</beans>\n"]],[11533,11571],[13606,13606]]],[1568189783458,["GJX@GJXAIOU",[[1,13706,"<bean id=\"userService\" class=\"com.wxisme.ssm.service.impl.UserServiceImpl\"/>\n"]],[13687,13705],[13782,13782]]],[1568189796409,["GJX@GJXAIOU",[[1,13854,"\n"],[1,13956,">\n    <!-- 配置数据源 -->\n    <property name=\"dataSource\" ref=\"dataSource\"/>\n</bean"]],[13854,13957],[14036,14036]]],[1568189807079,["GJX@GJXAIOU",[[1,14070,"    <tx:advice id=\"txAdvice\" transaction-manager=\"transactionManager\">\n        <tx:attributes>\n            <!-- 传播行为 -->\n            <tx:method name=\"save*\" propagation=\"REQUIRED\"/>\n            <tx:method name=\"insert*\" propagation=\"REQUIRED\"/>\n            <tx:method name=\"update*\" propagation=\"REQUIRED\"/>\n            <tx:method name=\"delete*\" propagation=\"REQUIRED\"/>\n            <tx:method name=\"find*\" propagation=\"SUPPORTS\" read-only=\"true\"/>\n            <tx:method name=\"select*\" propagation=\"SUPPORTS\" read-only=\"true\"/>\n \n        </tx:attributes>\n    </tx:advice>\n"]],[14058,14069],[14642,14642]]],[1568189816190,["GJX@GJXAIOU",[[1,14677,"    <aop:config>\n        <aop:advisor advice-ref=\"txAdvice\" pointcut=\"execution(* com.wxisme.ssm.service.impl.*.*(..))\"/>\n    </aop:config>\n"]],[14661,14676],[14816,14816]]],[1568189825223,["GJX@GJXAIOU",[[1,14881,"<beans xmlns=\"http://www.springframework.org/schema/beans\"\nxmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\nxmlns:context=\"http://www.springframework.org/schema/context\"\nxmlns:mvc=\"http://www.springframework.org/schema/mvc\"\nxmlns:jdbc=\"http://www.springframework.org/schema/jdbc\"\nxmlns:jee=\"http://www.springframework.org/schema/jee\"\nxmlns:aop=\"http://www.springframework.org/schema/aop\"\nxmlns:tx=\"http://www.springframework.org/schema/tx\"\nxsi:schemaLocation=\"http://www.springframework.org/schema/beans \nhttp://www.springframework.org/schema/beans/spring-beans.xsd \nhttp://www.springframework.org/schema/context  \nhttp://www.springframework.org/schema/context/spring-context.xsd  \nhttp://www.springframework.org/schema/mvc  \nhttp://www.springframework.org/schema/mvc/spring-mvc.xsd  \nhttp://www.springframework.org/schema/tx \nhttp://www.springframework.org/schema/tx/spring-tx.xsd  \nhttp://www.springframework.org/schema/aop  \nhttp://www.springframework.org/schema/aop/spring-aop.xsd\">\n \n<!-- 事务控制  对MyBatis操作数据库  spring使用JDBC事务控制类 -->\n \n<bean id=\"transactionManager\" class=\"org.springframework.jdbc.datasource.DataSourceTransactionManager\">\n    <!-- 配置数据源 -->\n    <property name=\"dataSource\" ref=\"dataSource\"/>\n</bean>\n \n    <!-- 通知 -->\n    <tx:advice id=\"txAdvice\" transaction-manager=\"transactionManager\">\n        <tx:attributes>\n            <!-- 传播行为 -->\n            <tx:method name=\"save*\" propagation=\"REQUIRED\"/>\n            <tx:method name=\"insert*\" propagation=\"REQUIRED\"/>\n            <tx:method name=\"update*\" propagation=\"REQUIRED\"/>\n            <tx:method name=\"delete*\" propagation=\"REQUIRED\"/>\n            <tx:method name=\"find*\" propagation=\"SUPPORTS\" read-only=\"true\"/>\n            <tx:method name=\"select*\" propagation=\"SUPPORTS\" read-only=\"true\"/>\n \n        </tx:attributes>\n    </tx:advice>\n \n    <!-- 配置aop  -->\n    <aop:config>\n        <aop:advisor advice-ref=\"txAdvice\" pointcut=\"execution(* com.wxisme.ssm.service.impl.*.*(..))\"/>\n    </aop:config>\n \n</beans>\n"]],[14842,14880],[16870,16870]]],[1568189840160,["GJX@GJXAIOU",[[1,16991,"\n"],[1,16992,"typeAliases>\n    <!-- 批量定义别名 ，指定包名，自动扫描包中的类，别名即为类名，首字母大小写无所谓-->\n    <package name=\"com.wxisme.ssm.po\"/>\n</"]],[16991,17004],[17111,17111]]],[1568189848771,["GJX@GJXAIOU",[[1,17137,"\n"],[1,17138,"mappers>\n    <!-- 加载映射文件 -->\n    <!-- 这里也可以使用class来加载映射文件，前提是：使用mapper代理的方法，遵循规范，\n    并且两个文件必须同名且在同一目录\n    <mapper class=\"com.wxisme.mybatis0100.mapper.UserMapper\"/>\n    基于class加载，可以进行批量加载\n    -->\n    <!-- 通过扫描包的方式来进行批量加载映射文件 -->\n    <package name=\"com.wxisme.ssm.mapper\"/>\n \n</"]],[17137,17146],[17425,17425]]],[1568189857596,["GJX@GJXAIOU",[[1,17493,"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE configuration\nPUBLIC \"-//mybatis.org//DTD Config 3.0//EN\"\n\"http://mybatis.org/dtd/mybatis-3-config.dtd\">\n<configuration>\n \n<!-- 将数据库连接数据抽取到属性文件中方便测试 -->\n<!-- <properties resource=\"/WEB-INF/classes/jdbc.properties\"></properties> -->\n<!-- 别名的定义 -->\n<typeAliases>\n    <!-- 批量定义别名 ，指定包名，自动扫描包中的类，别名即为类名，首字母大小写无所谓-->\n    <package name=\"com.wxisme.ssm.po\"/>\n</typeAliases>\n \n<!-- 数据库连接用数据库连接池 -->\n \n<mappers>\n    <!-- 通过扫描包的方式来进行批量加载映射文件 -->\n    <package name=\"com.wxisme.ssm.mapper\"/>\n</mappers>\n</configuration>"]],[17493,17493],[18049,18049]]],[1568189860526,["GJX@GJXAIOU",[[-1,17451,"<?xml version=\"1.0\" encoding=\"UTF-8\"?>"]],[17451,17489],[17451,17451]]],[1568189862032,["GJX@GJXAIOU",[[-1,17452,"```"]],[17452,17455],[17452,17452]]],[1568189868541,["GJX@GJXAIOU",[[-1,18060,"```\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>"]],[18060,18103],[18060,18060]]],[1568189869237,["GJX@GJXAIOU",[[-1,18060,"\n"]],[18060,18060],[18059,18059]]],[1568189879956,["GJX@GJXAIOU",[[-1,248," "],[1,249," "],[-1,10722," "],[1,10723," "],[-1,16879," "],[1,16880," "],[-1,16917,"   "],[1,16920,"   "],[1,18009,"··"]],[18009,18009],[18011,18011]]],[1568189881170,["GJX@GJXAIOU",[[-1,18009,"··"]],[18011,18011],[18009,18009]]],[1568189882205,["GJX@GJXAIOU",[[1,18009,"```"]],[18009,18009],[18012,18012]]],[1568189883350,["GJX@GJXAIOU",[[1,18013,"\n"]],[18012,18012],[18013,18013]]],[1568189884339,["GJX@GJXAIOU",[[1,18013,"```"]],[18013,18013],[18016,18016]]],[1568189886278,["GJX@GJXAIOU",[[1,18013,"\n"]],[18012,18012],[18013,18013]]],[1568189897524,["GJX@GJXAIOU",[[-1,18018,"具体"],[1,18020,"<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE "],[-1,18026,"文件的配置，在使用m"],[1,18036," PUBLIC \"-//mybatis.org//DTD M"],[-1,18041,"代理的方法时，命名空间需要是对应的"],[1,18058," 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\" >\n<mapper namespace=\"com.wxisme.ssm.mapper.Album"],[-1,18064,"类。"],[1,18066,"\" >\n</mapper>"]],[18018,18066],[18232,18232]]]],null,"GJX@GJXAIOU"]]}