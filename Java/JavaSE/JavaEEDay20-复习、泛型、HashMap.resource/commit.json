{"compress":true,"commitItems":[["9c2008e6-71ec-4922-b22a-3b5537d854e2",1562374583851,"## 异常处理\n    Java里面特别人性化的报错，报异常机制\n    \n    Throwable 类 ，所有异常和错误的超类\n    ---| Exception 异常，可以出来\n    ---| Error  错误 没办法处理，只能避免\n    \n    getMessage()  toString()  printStackTrack()\n    \n    处理异常的方式：\n        1. 捕获异常\n        2. 抛出异常\n        \n    捕获异常：\n        try - catch  \n        try - catch - finally \n        \n    抛出异常：\n        throw  throws\n        \n    自定义异常\n        class  自定义异常类 extends Exception {\n            自定义异常类的有参数构造方法，参数类型是String message\n        }\n        \n## 集合\n    ---| Collection 集合接口 总接口\n    ------| List 有序 可重复\n    ---------| ArrayList    底层维护一个Object类型的数组，如果使用无参构造方法，创建ArrayList对象，Object数组\n                            默认元素个数为10\n                            特征：\n                                查询快，增删慢\n                                ensureCapacity(int minCapacity);\n                                trimToSize();\n    ---------| LinkedList 底层维护的是一个链表\n                          特征：\n                            查询慢，增删快\n    ---------| Vector  线程安全的ArrayList，不经常用\n    ------| Set 无序 不可重复\n    ---------| HashSet\n                    底层维护的是一个哈希表\n                    HashSet存储原理\n                        hashCode equals\n    ---------| TreeSet\n                树形结构 放入的数据要不有自然顺序，要不存在比较规则~~\n                自定义的类对象放入TreeSet集合\n                    1. 遵从Comparable<T> 接口 实现compareTo(T o)\n                    2. 实现自定义比较器 遵从 Comparator<T> 接口 实现compare(T o1, T o2)\n                    使用了匿名内部类\n                     \n     \n    Collection：\n        add(E e) addAll(Collection<? extends E> c) remove(Object o) clear() \n        removeAll(Collection c) size() toArray() isEmpty() contains(Object o)\n        containsAll(Collection c) retainAll(Collection c) removeAll(Collection c)\n        iterator() equals() hashCode()\n        \n        迭代器方法：\n            hasNext() next() remove()\n    \n    List: \n        add(int index, E e) addAll(int index, List<? extends > list)\n        indexOf(Object o) lashIndexOf(Object o) get(int index)\n        set(int index , E e)\n        subList(int fromIndex, int toIndex)\n        ListIterator()   \n        \n        ListIterator()特有方法：\n            add(E e) set(E e)\n     \n     \n    Set:\n        没有特有方法\n\n## 泛型\n    解决的问题是：\n        1. 数据类型一致化问题\n        2. 避免无意义的强制类型转换\n        \n    泛型格式：\n        一. 函数/方法中使用泛型\n            权限修饰符 <自定义泛型占位符> 返回值类型(可以使用自定义泛型)  方法名 (形式参数列表“也可以使用泛型”) {\n                在函数体内，同样可以使用泛型\n            }\n        \n        二. 类中使用泛型\n            class 类名<自定义泛型占位符> {\n                \n                成员变量\n                \n                非静态成员方法可以使用类自己的泛型\n                \n                静态成员方法不能使用类内的泛型，只能在方法中自定义声明泛型\n            }\n      \n        三. 接口中使用泛型\n            interface A<自定义泛型占位符> {\n                成员变量; public static final 定义时必须初始化\n                成员方法; abstract\n            }\n            \n            使用的方式：\n                1> class 类名<同接口一致的泛型> implements A<自定义泛型> {\n                    \n                }\n                \n                在创建当前类对象时确定具体数据类型：\n                    例如：ArrayList<E> HashMap<K, V>\n                \n                2> class 类名 implements A<确定数据类型> {\n                    \n                }\n                \n                泛型的具体数据类型，在创建定义当前类的时候，就确定了\n                    例如：Comparable接口，实现compareto方法\n                    \n    泛型的上下限\n        <? super E>\n        <? extends E>\n    \n## Map 双边队列 双列集合\n    Map \n    ---| HashMap\n    ---| TreeMap\n    \n    put(K key, V value);\n    putAll(Map<? extends K, ? entends V> map);\n    \n    clear();\n    remove(Object key);\n    \n    size();\n    get(Object key)\n    containsKey(Object Key);\n    containsValue(Object Value);\n    keySet();\n    values();\n    \n    entrySet()\n    \n    entrySet的使用 【重点】\n    \n    导包：\n        import java.util.Map.Entry;\n        \n        HashMap<String, Integer> map = new HashMap<String, Integer>();\n        \n        Set<Entry<String, Integer>> set = map.entrySet();\n        \n        Iterator<Entry<String, Integer>> it = set.iterator();\n        \n        while (it.hashNext()) {\n            System.out.println(it.next());\n        }\n\n## 文件操作\n    File 类对象\n    File(String pathName);\n    File(String parent, String child);\n    File(File parent, String child);\n    \n    createNewFile(); boolean \n    mkdir();\n    mkdirs();\n    renameTo(File dest);\n    \n    delete();\n    deleteOnExit();\n    \n    getPath();\n    getName();\n    getAbsolute();\n    getParent();\n    \n    lastModify();\n    length(); \n    \n    exists();\n    isFile();\n    isDirectory();\n    isHidden();\n    isAbsolute();\n    \n    static File[] listRoots(); \n    String[] list();\n    File[] listFile();\n    \n    FileNameFilter();\n    accpet(File dir, String name);",[[1562374531548,["GJX@GJXAIOU",[[1,3,"一、复习："]],[3,3],[8,8]]],[1562374549004,["GJX@GJXAIOU",[[-1,15,"  "],[-1,40,"  "],[-1,43,"  "],[-1,73,"  "],[-1,98," "],[-1,101," "],[-1,128,"  "],[-1,135,"  "],[-1,183,"  "],[-1,186,"  "],[-1,205,"  "],[-1,215,"  "],[-1,231," "],[-1,238," "],[-1,240,"  "],[-1,250,"  "],[-1,272," "],[-1,279," "],[-1,309,"  "],[-1,312,"  "],[-1,322," "],[-1,329," "],[-1,350,"  "],[-1,353,"  "],[-1,363," "],[-1,370," "],[-1,405,"  "],[-1,452,"  "]],[17,461],[15,415]]],[1562374573310,["GJX@GJXAIOU",[[-1,433,"  "],[-1,462,"  "],[-1,484,"  "],[-1,590,"  "],[-1,628,"  "],[-1,634,"  "],[-1,704,"  "],[-1,769,"  "],[-1,785,"  "],[-1,846,"  "],[-1,852,"  "],[-1,888,"  "],[-1,933,"  "],[-1,955," "],[-1,958," "],[-1,978,"  "],[-1,1028,"  "],[-1,1042,"  "],[-1,1082,"  "],[-1,1119,"  "],[-1,1164,"  "],[-1,1185,"  "],[-1,1262,"  "],[-1,1336,"  "],[-1,1347," "],[-1,1367," "],[-1,1369,"  "],[-1,1375,"  "],[-1,1391," "],[-1,1398," "],[-1,1468,"  "],[-1,1552,"  "],[-1,1628," "],[-1,1635," "],[-1,1673,"  "],[-1,1676,"  "],[-1,1691," "],[-1,1702," "],[-1,1731,"  "],[-1,1734,"  "],[-1,1745," "],[-1,1752," "],[-1,1814,"  "],[-1,1883,"  "],[-1,1906," "],[-1,1913," "],[-1,1956,"  "],[-1,1982,"  "],[-1,1985," "],[-1,1992," "],[-1,2013,"  "],[-1,2046,"  "],[-1,2049," "],[-1,2053," "],[-1,2055,"  "],[-1,2064,"  "]],[435,2079],[433,1985]]],[1562374587865,["GJX@GJXAIOU",[[-1,1994,"  "],[-1,2004,"  "],[-1,2025,"  "],[-1,2055,"  "],[-1,2058,"  "],[-1,2068," "],[-1,2075," "],[-1,2090,"  "],[-1,2175,"  "],[-1,2202,"  "],[-1,2212,"  "],[-1,2215,"  "],[-1,2243,"  "],[-1,2280,"  "],[-1,2283,"  "],[-1,2318,"  "],[-1,2321,"  "],[-1,2355," "],[-1,2370," "],[-1,2372,"  "],[-1,2428,"  "],[-1,2432," "],[-1,2437," "],[-1,2439,"  "],[-1,2458,"  "],[-1,2508,"  "],[-1,2559,"  "],[-1,2576,"  "],[-1,2600,"  "],[-1,2603,"  "],[-1,2622," "],[-1,2637," "],[-1,2700,"  "],[-1,2703,"  "],[-1,2721," "],[-1,2736," "],[-1,2738,"  "],[-1,2773,"  "],[-1,2837,"  "],[-1,2840,"  "],[-1,2909,"  "],[-1,2912,"  "],[-1,2944,"  "],[-1,2947," "],[-1,2962," "],[-1,2990,"  "],[-1,3058,"  "],[-1,3061,"  "],[-1,3072,"  "],[-1,3092,"  "]],[1996,3113],[1994,3025]]],[1562374589074,["GJX@GJXAIOU",[[-1,1992,"  "],[-1,2002,"  "],[-1,2021,"  "],[-1,2047,"  "],[-1,2050,"  "],[-1,2058," "],[-1,2063," "],[-1,2078,"  "],[-1,2159,"  "],[-1,2184,"  "],[-1,2188," "],[-1,2193," "],[-1,2195,"  "],[-1,2219,"  "],[-1,2254,"  "],[-1,2257,"  "],[-1,2288,"  "],[-1,2291,"  "],[-1,2323," "],[-1,2336," "],[-1,2338,"  "],[-1,2390,"  "],[-1,2394," "],[-1,2397," "],[-1,2399,"  "],[-1,2416,"  "],[-1,2462,"  "],[-1,2511,"  "],[-1,2528,"  "],[-1,2548,"  "],[-1,2551,"  "],[-1,2568," "],[-1,2581," "],[-1,2642,"  "],[-1,2645,"  "],[-1,2661," "],[-1,2674," "],[-1,2676,"  "],[-1,2709,"  "],[-1,2769,"  "],[-1,2772,"  "],[-1,2837,"  "],[-1,2840,"  "],[-1,2868,"  "],[-1,2871," "],[-1,2884," "],[-1,2912,"  "],[-1,2976,"  "],[-1,2979,"  "],[-1,2988,"  "],[-1,3006,"  "]],[1994,3025],[1992,2937]]],[1562374589594,["GJX@GJXAIOU",[[-1,2002,"  "],[-1,2017," "],[-1,2020," "],[-1,2037,"  "],[-1,2050,"  "],[-1,2066,"  "],[-1,2133," "],[-1,2144," "],[-1,2166,"  "],[-1,2170,"  "],[-1,2177,"  "],[-1,2189,"  "],[-1,2218," "],[-1,2229," "],[-1,2231,"  "],[-1,2258,"  "],[-1,2261,"  "],[-1,2301,"  "],[-1,2304," "],[-1,2315," "],[-1,2352,"  "],[-1,2356,"  "],[-1,2361,"  "],[-1,2374,"  "],[-1,2406," "],[-1,2417," "],[-1,2463,"  "],[-1,2486,"  "],[-1,2490," "],[-1,2497," "],[-1,2499,"  "],[-1,2514,"  "],[-1,2584,"  "],[-1,2587,"  "],[-1,2601," "],[-1,2612," "],[-1,2614,"  "],[-1,2645,"  "],[-1,2701,"  "],[-1,2704,"  "],[-1,2765,"  "],[-1,2768,"  "],[-1,2782,"  "],[-1,2805,"  "],[-1,2834,"  "],[-1,2880," "],[-1,2895," "],[-1,2904,"  "],[-1,2920,"  "]],[1992,2937],[1992,2855]]],[1562374590714,["GJX@GJXAIOU",[[-1,2000,"  "],[-1,2015,"  "],[-1,2033,"  "],[-1,2042,"  "],[-1,2058,"  "],[-1,2131,"  "],[-1,2152,"  "],[-1,2156,"  "],[-1,2159,"  "],[-1,2171,"  "],[-1,2206,"  "],[-1,2209,"  "],[-1,2224," "],[-1,2233," "],[-1,2235,"  "],[-1,2263,"  "],[-1,2282,"  "],[-1,2318,"  "],[-1,2323,"  "],[-1,2336,"  "],[-1,2366,"  "],[-1,2419,"  "],[-1,2440,"  "],[-1,2444," "],[-1,2449," "],[-1,2451,"  "],[-1,2464,"  "],[-1,2530,"  "],[-1,2533,"  "],[-1,2545," "],[-1,2554," "],[-1,2556,"  "],[-1,2585,"  "],[-1,2637,"  "],[-1,2640,"  "],[-1,2697,"  "],[-1,2700,"  "],[-1,2712,"  "],[-1,2731,"  "],[-1,2760,"  "],[-1,2804," "],[-1,2817," "],[-1,2826,"  "],[-1,2840,"  "]],[1992,2855],[1992,2775]]],[1562374591394,["GJX@GJXAIOU",[[-1,2052,"  "],[-1,2119,"  "],[-1,2136," "],[-1,2139," "],[-1,2153,"  "],[-1,2184,"  "],[-1,2187,"  "],[-1,2206,"  "],[-1,2209,"  "],[-1,2241,"  "],[-1,2244,"  "],[-1,2284,"  "],[-1,2300,"  "],[-1,2334,"  "],[-1,2377,"  "],[-1,2396,"  "],[-1,2400," "],[-1,2403," "],[-1,2405,"  "],[-1,2416,"  "],[-1,2478,"  "],[-1,2481," "],[-1,2488," "],[-1,2497,"  "],[-1,2500," "],[-1,2507," "],[-1,2527,"  "],[-1,2569," "],[-1,2576," "],[-1,2578,"  "],[-1,2631,"  "],[-1,2634,"  "],[-1,2644," "],[-1,2651," "],[-1,2653,"  "],[-1,2698,"  "],[-1,2730,"  "]],[1992,2775],[1992,2713]]],[1562374592481,["GJX@GJXAIOU",[[-1,2050,"  "],[-1,2115,"  "],[-1,2132,"  "],[-1,2147,"  "],[-1,2174,"  "],[-1,2177,"  "],[-1,2192,"  "],[-1,2195,"  "],[-1,2223,"  "],[-1,2226,"  "],[-1,2262,"  "],[-1,2278,"  "],[-1,2308,"  "],[-1,2349,"  "],[-1,2366,"  "],[-1,2370,"  "],[-1,2373,"  "],[-1,2382,"  "],[-1,2440,"  "],[-1,2443," "],[-1,2448," "],[-1,2455,"  "],[-1,2458,"  "],[-1,2483,"  "],[-1,2523," "],[-1,2528," "],[-1,2530,"  "],[-1,2579,"  "],[-1,2582,"  "],[-1,2590," "],[-1,2595," "],[-1,2597,"  "],[-1,2638,"  "],[-1,2670,"  "]],[1992,2713],[1992,2651]]],[1562374613155,["GJX@GJXAIOU",[[1,147,"，展现信息；"]],[147,147],[153,153]]],[1562374627547,["GJX@GJXAIOU",[[1,41,"- "]],[41,41],[43,43]]],[1562374632407,["GJX@GJXAIOU",[[-1,68," ---| "]],[68,74],[68,68]]],[1562374633778,["GJX@GJXAIOU",[[1,68,"  - "]],[68,68],[72,72]]],[1562374637258,["GJX@GJXAIOU",[[-1,90,"  "],[-1,93,"--| "]],[90,90],[91,91]]],[1562374638320,["GJX@GJXAIOU",[[1,91," "]],[91,91],[92,92]]],[1562374639550,["GJX@GJXAIOU",[[1,90,"    "]],[92,92],[96,96]]],[1562374641599,["GJX@GJXAIOU",[[1,70,"  "]],[72,72],[74,74]]],[1562374642680,["GJX@GJXAIOU",[[1,96,"  "]],[98,98],[100,100]]],[1562374645062,["GJX@GJXAIOU",[[-1,97," "]],[98,98],[97,97]]],[1562374649170,["GJX@GJXAIOU",[[1,180,"- "]],[180,180],[182,182]]],[1562374653440,["GJX@GJXAIOU",[[1,228,"- "]],[228,228],[230,230]]],[1562374656530,["GJX@GJXAIOU",[[1,294,"- "]],[294,294],[296,296]]],[1562374660223,["GJX@GJXAIOU",[[1,331,"- "]],[331,331],[333,333]]],[1562374969399,["GJX@GJXAIOU",[[-1,573,"\n                          "]],[573,600],[573,573]]],[1562374972896,["GJX@GJXAIOU",[[1,582,"；"]],[582,582],[583,583]]],[1562374981143,["GJX@GJXAIOU",[[-1,608,"  "],[-1,614,"  "],[-1,680,"  "],[-1,715,"  "]],[610,758],[608,750]]],[1562374981593,["GJX@GJXAIOU",[[-1,606,"  "],[-1,612,"  "],[-1,674,"  "],[-1,709,"  "]],[608,750],[606,742]]],[1562374981906,["GJX@GJXAIOU",[[-1,604,"  "],[-1,610,"  "],[-1,644,"  "],[-1,703,"  "]],[606,742],[604,734]]],[1562374982320,["GJX@GJXAIOU",[[-1,602,"  "],[-1,608,"  "],[-1,640,"  "],[-1,697,"  "]],[604,734],[602,726]]],[1562374982600,["GJX@GJXAIOU",[[-1,600,"  "],[-1,606,"  "],[-1,636,"  "],[-1,691,"  "]],[602,726],[600,718]]],[1562374982927,["GJX@GJXAIOU",[[-1,598,"  "],[-1,604,"  "],[-1,632,"  "],[-1,685,"  "]],[600,718],[598,710]]],[1562374983368,["GJX@GJXAIOU",[[-1,596,"  "],[-1,602,"  "],[-1,628,"  "],[-1,679,"  "]],[598,710],[596,702]]],[1562374984143,["GJX@GJXAIOU",[[-1,594,"  "],[-1,600,"  "],[-1,624,"  "],[-1,673,"  "]],[596,702],[594,694]]],[1562374984655,["GJX@GJXAIOU",[[-1,592,"  "],[-1,598,"  "],[-1,620,"  "],[-1,667,"  "]],[594,694],[592,686]]],[1562374990209,["GJX@GJXAIOU",[[-1,448," "],[-1,450,"--|"]],[448,448],[449,449]]],[1562374994609,["GJX@GJXAIOU",[[-1,471," "],[-1,473,"-----|"]],[471,471],[472,472]]],[1562374995055,["GJX@GJXAIOU",[[1,471,"  "]],[472,472],[474,474]]],[1562374998170,["GJX@GJXAIOU",[[-1,489,"---------|"]],[487,499],[489,489]]],[1562375000439,["GJX@GJXAIOU",[[1,490,"    "]],[489,489],[493,493]]],[1562375000907,["GJX@GJXAIOU",[[1,493,"-"]],[493,493],[494,494]]],[1562375001314,["GJX@GJXAIOU",[[1,495," "]],[494,494],[495,495]]],[1562375006595,["GJX@GJXAIOU",[[1,579,"- "]],[579,579],[581,581]]],[1562375009329,["GJX@GJXAIOU",[[-1,577,"  "]],[578,578],[576,576]]],[1562375011512,["GJX@GJXAIOU",[[1,577,"  "]],[576,576],[578,578]]],[1562375015625,["GJX@GJXAIOU",[[1,597,"    "]],[597,597],[601,601]]],[1562375017609,["GJX@GJXAIOU",[[1,621,"    "]],[621,621],[625,625]]],[1562375020625,["GJX@GJXAIOU",[[1,670,"    "]],[669,669],[673,673]]],[1562375023882,["GJX@GJXAIOU",[[-1,688,"  "],[-1,691,"--------|"]],[688,688],[689,689]]],[1562375026712,["GJX@GJXAIOU",[[1,688,"      "]],[689,689],[695,695]]],[1562375068564,["GJX@GJXAIOU",[[1,707,"  "]],[707,707],[709,709]]],[1562375072273,["GJX@GJXAIOU",[[-1,735,"         "]],[735,744],[735,735]]],[1562375072793,["GJX@GJXAIOU",[[1,735,"- "]],[735,735],[737,737]]],[1562375076423,["GJX@GJXAIOU",[[-1,729,"      "]],[737,737],[731,731]]],[1562375081648,["GJX@GJXAIOU",[[1,579,"  "]],[581,581],[583,583]]],[1562375094232,["GJX@GJXAIOU",[[-1,813," ------| "]],[812,821],[812,812]]],[1562375094571,["GJX@GJXAIOU",[[1,812,"-"]],[812,812],[813,813]]],[1562375095649,["GJX@GJXAIOU",[[1,812,"  "]],[813,813],[815,815]]],[1562375121206,["GJX@GJXAIOU",[[1,1236,"方法"]],[1236,1236],[1238,1238]]],[1562375121236,["GJX@GJXAIOU",[[1,1236," "]],[1238,1238],[1239,1239]]],[1562375121689,["GJX@GJXAIOU",[[1,1240,"："]],[1239,1239],[1240,1240]]],[1562375122233,["GJX@GJXAIOU",[[-1,1240,"："]],[1240,1240],[1239,1239]]],[1562375126266,["GJX@GJXAIOU",[[-1,1224,"  "]],[1224,1226],[1224,1224]]],[1562375126882,["GJX@GJXAIOU",[[1,1224,"- "]],[1224,1224],[1226,1226]]],[1562375132120,["GJX@GJXAIOU",[[-1,1224,"- "]],[1224,1226],[1224,1224]]],[1562375160281,["GJX@GJXAIOU",[[-1,1243,"  "],[-1,1314,"  "],[-1,1394,"  "],[-1,1470,"  "]],[1245,1506],[1243,1498]]],[1562375166029,["GJX@GJXAIOU",[[1,1243,"  "]],[1243,1243],[1245,1245]]],[1562375167487,["GJX@GJXAIOU",[[-1,1244," "]],[1245,1245],[1244,1244]]],[1562375168786,["GJX@GJXAIOU",[[1,1244,"·"]],[1244,1244],[1245,1245]]],[1562375170735,["GJX@GJXAIOU",[[-1,1243," ·"]],[1245,1245],[1243,1243]]],[1562375171994,["GJX@GJXAIOU",[[1,1243,"``"]],[1243,1243],[1245,1245]]],[1562375173223,["GJX@GJXAIOU",[[-1,1244,"`"]],[1245,1245],[1244,1244]]],[1562375175874,["GJX@GJXAIOU",[[1,1499,"`"]],[1499,1499],[1500,1500]]],[1562375180368,["GJX@GJXAIOU",[[-1,1511,"   "]],[1511,1514],[1511,1511]]],[1562375183663,["GJX@GJXAIOU",[[-1,1526,"  "]],[1527,1527],[1525,1525]]],[1562375184655,["GJX@GJXAIOU",[[-1,1523,"  "]],[1524,1524],[1522,1522]]],[1562375190106,["GJX@GJXAIOU",[[-1,1508,"   "]],[1508,1511],[1508,1508]]],[1562375194969,["GJX@GJXAIOU",[[-1,1549,"  "],[-1,1558,"  "],[-1,1625," "],[-1,1630," "],[-1,1690,"  "],[-1,1713," "],[-1,1718," "],[-1,1759,"  "],[-1,1779,"  "],[-1,1790,"  "],[-1,1812,"  "]],[1551,1839],[1549,1821]]],[1562375198107,["GJX@GJXAIOU",[[1,1520,"`"]],[1520,1520],[1521,1521]]],[1562375198985,["GJX@GJXAIOU",[[1,1546,"`"]],[1546,1546],[1547,1547]]],[1562375200673,["GJX@GJXAIOU",[[1,1562,"`"]],[1562,1562],[1563,1563]]],[1562375241370,["GJX@GJXAIOU",[[1,1767,"`"]],[1767,1767],[1768,1768]]],[1562375303854,[null,[[-1,1521," "],[-1,1546,"`"],[1,1548,"`"],[-1,1549," "],[1,1552,"\n"],[1,1558,"\n"],[-1,1563," "],[-1,1624," "],[1,1625,"\n"],[-1,1708," "],[1,1709,"\n"],[1,1767," "],[-1,1770,"  "],[1,1772,"\n"],[-1,1800," "],[1,1801,"\n"]],[1521,1521],[1802,1802]]],[1562375303854,[null,[[1,1521," "],[1,1545,"`"],[-1,1546,"`"],[1,1548," "],[-1,1550,"\n"],[-1,1557,"\n"],[1,1563," "],[1,1623," "],[-1,1623,"\n"],[1,1707," "],[-1,1707,"\n"],[-1,1766," "],[1,1770,"  "],[-1,1770,"\n"],[1,1799," "],[-1,1799,"\n"]],[1802,1802],[1521,1521]]],[1562375245256,["GJX@GJXAIOU",[[-1,1779," "]],[1780,1780],[1779,1779]]],[1562375248328,["GJX@GJXAIOU",[[-1,1806," "]],[1805,1805],[1804,1804]]],[1562375251522,["GJX@GJXAIOU",[[1,1806,"`"]],[1806,1806],[1807,1807]]],[1562375252450,["GJX@GJXAIOU",[[1,1824,"`"]],[1824,1824],[1825,1825]]],[1562375292863,["GJX@GJXAIOU",[[-1,1834,"  "]],[1834,1836],[1834,1834]]],[1562375363859,[null,[[-1,1521," "],[-1,1546,"`"],[1,1548,"`"],[-1,1551," "],[1,1552,"\n"],[1,1558,"\n"],[-1,1563," "],[-1,1624," "],[1,1625,"\n"],[-1,1708," "],[1,1709,"\n"],[1,1767," "],[-1,1770,"  "],[1,1772,"\n"],[1,1799,"\n"],[-1,1807," "],[-1,1824,"`"],[1,1826,"`"],[-1,1834," "],[1,1835,"\n"]],[1521,1521],[1836,1836]]],[1562375363859,[null,[[1,1521," "],[1,1545,"`"],[-1,1546,"`"],[1,1550," "],[-1,1550,"\n"],[-1,1557,"\n"],[1,1563," "],[1,1623," "],[-1,1623,"\n"],[1,1707," "],[-1,1707,"\n"],[-1,1766," "],[1,1770,"  "],[-1,1770,"\n"],[-1,1798,"\n"],[1,1807," "],[1,1823,"`"],[-1,1824,"`"],[1,1833," "],[-1,1833,"\n"]],[1836,1836],[1521,1521]]],[1562375317895,["GJX@GJXAIOU",[[-1,772," ---------| "]],[771,783],[771,771]]],[1562375318431,["GJX@GJXAIOU",[[1,772,"  "]],[771,771],[773,773]]],[1562375318897,["GJX@GJXAIOU",[[1,773,"-"]],[773,773],[774,774]]],[1562375319505,["GJX@GJXAIOU",[[1,775," "]],[774,774],[775,775]]],[1562375324313,["GJX@GJXAIOU",[[1,773,"    "]],[775,775],[779,779]]],[1562375423854,[null,[[-1,1517," "],[-1,1542,"`"],[1,1544,"`"],[-1,1547," "],[1,1548,"\n"],[1,1554,"\n"],[-1,1559," "],[-1,1620," "],[1,1621,"\n"],[-1,1704," "],[1,1705,"\n"],[1,1763," "],[-1,1766,"  "],[1,1768,"\n"],[1,1795,"\n"],[-1,1803," "],[-1,1820,"`"],[1,1822,"`"],[-1,1830," "],[1,1831,"\n"]],[1517,1517],[1832,1832]]],[1562375423854,[null,[[1,1517," "],[1,1541,"`"],[-1,1542,"`"],[1,1546," "],[-1,1546,"\n"],[-1,1553,"\n"],[1,1559," "],[1,1619," "],[-1,1619,"\n"],[1,1703," "],[-1,1703,"\n"],[-1,1762," "],[1,1766,"  "],[-1,1766,"\n"],[-1,1794,"\n"],[1,1803," "],[1,1819,"`"],[-1,1820,"`"],[1,1829," "],[-1,1829,"\n"]],[1832,1832],[1517,1517]]],[1562375401289,["GJX@GJXAIOU",[[-1,1056,"  "],[-1,1097,"  "]],[1058,1149],[1056,1145]]],[1562375402337,["GJX@GJXAIOU",[[-1,1054,"  "],[-1,1095,"  "]],[1056,1145],[1054,1141]]],[1562375403391,["GJX@GJXAIOU",[[-1,1052,"  "],[-1,1093,"  "]],[1054,1141],[1052,1137]]],[1562375483856,[null,[[-1,1505," "],[-1,1530,"`"],[1,1532,"`"],[-1,1535," "],[1,1536,"\n"],[1,1542,"\n"],[-1,1547," "],[-1,1608," "],[1,1609,"\n"],[-1,1692," "],[1,1693,"\n"],[1,1751," "],[-1,1754,"  "],[1,1756,"\n"],[1,1783,"\n"],[-1,1791," "],[-1,1808,"`"],[1,1810,"`"],[-1,1818," "],[1,1819,"\n"]],[1505,1505],[1820,1820]]],[1562375483856,[null,[[1,1505," "],[1,1529,"`"],[-1,1530,"`"],[1,1534," "],[-1,1534,"\n"],[-1,1541,"\n"],[1,1547," "],[1,1607," "],[-1,1607,"\n"],[1,1691," "],[-1,1691,"\n"],[-1,1750," "],[1,1754,"  "],[-1,1754,"\n"],[-1,1782,"\n"],[1,1791," "],[1,1807,"`"],[-1,1808,"`"],[1,1817," "],[-1,1817,"\n"]],[1820,1820],[1505,1505]]],[1562375477728,["GJX@GJXAIOU",[[-1,827,"--------|"]],[836,836],[827,827]]],[1562375480696,["GJX@GJXAIOU",[[1,826,"    "]],[827,827],[831,831]]],[1562375483368,["GJX@GJXAIOU",[[1,810,"  "]],[810,810],[812,812]]],[1562375543854,[null,[[-1,1502," "],[-1,1527,"`"],[1,1529,"`"],[-1,1532," "],[1,1533,"\n"],[1,1539,"\n"],[-1,1544," "],[-1,1605," "],[1,1606,"\n"],[-1,1689," "],[1,1690,"\n"],[1,1748," "],[-1,1751,"  "],[1,1753,"\n"],[1,1780,"\n"],[-1,1788," "],[-1,1805,"`"],[1,1807,"`"],[-1,1815," "],[1,1816,"\n"]],[1502,1502],[1817,1817]]],[1562375543854,[null,[[1,1502," "],[1,1526,"`"],[-1,1527,"`"],[1,1531," "],[-1,1531,"\n"],[-1,1538,"\n"],[1,1544," "],[1,1604," "],[-1,1604,"\n"],[1,1688," "],[-1,1688,"\n"],[-1,1747," "],[1,1751,"  "],[-1,1751,"\n"],[-1,1779,"\n"],[1,1788," "],[1,1804,"`"],[-1,1805,"`"],[1,1814," "],[-1,1814,"\n"]],[1817,1817],[1502,1502]]],[1562375491875,["GJX@GJXAIOU",[[-1,940,"  ---------|"]],[940,951],[940,940]]],[1562375493007,["GJX@GJXAIOU",[[1,941,"      "]],[940,940],[946,946]]],[1562375493504,["GJX@GJXAIOU",[[1,946,"-"]],[946,946],[947,947]]],[1562375843862,[null,[[-1,1497," "],[-1,1522,"`"],[1,1524,"`"],[-1,1527," "],[1,1528,"\n"],[1,1534,"\n"],[-1,1539," "],[-1,1600," "],[1,1601,"\n"],[-1,1684," "],[1,1685,"\n"],[1,1743," "],[-1,1746,"  "],[1,1748,"\n"],[1,1775,"\n"],[-1,1783," "],[-1,1800,"`"],[1,1802,"`"],[-1,1810," "],[1,1811,"\n"]],[1497,1497],[1812,1812]]],[1562375843862,[null,[[1,1497," "],[1,1521,"`"],[-1,1522,"`"],[1,1526," "],[-1,1526,"\n"],[-1,1533,"\n"],[1,1539," "],[1,1599," "],[-1,1599,"\n"],[1,1683," "],[-1,1683,"\n"],[-1,1742," "],[1,1746,"  "],[-1,1746,"\n"],[-1,1774,"\n"],[1,1783," "],[1,1799,"`"],[-1,1800,"`"],[1,1809," "],[-1,1809,"\n"]],[1812,1812],[1497,1497]]],[1562375815144,["GJX@GJXAIOU",[[1,1893,"\n"]],[1892,1892],[1893,1893]]],[1562375816289,["GJX@GJXAIOU",[[1,1893,"···"]],[1893,1893],[1896,1896]]],[1562375817535,["GJX@GJXAIOU",[[-1,1893,"···"]],[1896,1896],[1893,1893]]],[1562375818777,["GJX@GJXAIOU",[[1,1893,"```"]],[1893,1893],[1896,1896]]],[1562375818808,["GJX@GJXAIOU",[[1,1896,"language\n```\n"]],[1896,1896],[1896,1904]]],[1562375820784,["GJX@GJXAIOU",[[-1,1896,"language"],[1,1904,"j"]],[1896,1904],[1897,1897]]],[1562375821379,["GJX@GJXAIOU",[[1,1897,"ava"]],[1897,1897],[1900,1900]]],[1562375821848,["GJX@GJXAIOU",[[1,1901,"\n"]],[1900,1900],[1901,1901]]],[1562375824681,["GJX@GJXAIOU",[[-1,1907,"权限修饰符 <自定义泛型占位符> 返回值类型(可以使用自定义泛型)  方法名 (形式参数列表“也可以使用泛型”) {\n    在函数体内，同样可以使用泛型\n}"]],[1907,1986],[1907,1907]]],[1562375826799,["GJX@GJXAIOU",[[1,1901,"权限修饰符 <自定义泛型占位符> 返回值类型(可以使用自定义泛型)  方法名 (形式参数列表“也可以使用泛型”) {\n    在函数体内，同样可以使用泛型\n}"]],[1901,1901],[1980,1980]]],[1562375841992,["GJX@GJXAIOU",[[1,1998,"\n"]],[1998,1998],[1999,1999]]],[1562375843730,["GJX@GJXAIOU",[[1,1998,"`"]],[1998,1998],[1999,1999]]],[1562375903862,[null,[[-1,1497," "],[-1,1522,"`"],[1,1524,"`"],[-1,1527," "],[1,1528,"\n"],[1,1534,"\n"],[-1,1539," "],[-1,1600," "],[1,1601,"\n"],[-1,1684," "],[1,1685,"\n"],[1,1743," "],[-1,1746,"  "],[1,1748,"\n"],[1,1775,"\n"],[-1,1783," "],[-1,1800,"`"],[1,1802,"`"],[-1,1810," "],[1,1811,"\n"],[-1,1893,""],[1,1893,"\n"],[-1,1986,"}"],[-1,1998,"`"],[1,2000,"`"]],[1497,1497],[2001,2001]]],[1562375903862,[null,[[1,1497," "],[1,1521,"`"],[-1,1522,"`"],[1,1526," "],[-1,1526,"\n"],[-1,1533,"\n"],[1,1539," "],[1,1599," "],[-1,1599,"\n"],[1,1683," "],[-1,1683,"\n"],[-1,1742," "],[1,1746,"  "],[-1,1746,"\n"],[-1,1774,"\n"],[1,1783," "],[1,1799,"`"],[-1,1800,"`"],[1,1809," "],[-1,1809,"\n"],[1,1892,""],[-1,1892,"\n"],[1,1986,"}"],[1,1997,"`"],[-1,1998,"`"]],[2001,2001],[1497,1497]]],[1562375844328,["GJX@GJXAIOU",[[1,1999,"``"]],[1999,1999],[2001,2001]]],[1562375844358,["GJX@GJXAIOU",[[1,2001,"language\n```\n"]],[2001,2001],[2001,2009]]],[1562375845192,["GJX@GJXAIOU",[[-1,2001,"language"],[1,2009,"j"]],[2001,2009],[2002,2002]]],[1562375845634,["GJX@GJXAIOU",[[1,2002,"ava"]],[2002,2002],[2005,2005]]],[1562375845735,["GJX@GJXAIOU",[[1,2006,"\n"]],[2005,2005],[2006,2006]]],[1562375849815,["GJX@GJXAIOU",[[-1,2012,"class 类名<自定义泛型占位符> {\n    \n    成员变量\n    \n    非静态成员方法可以使用类自己的泛型\n    \n    静态成员方法不能使用类内的泛型，只能在方法中自定义声明泛型\n}"]],[2012,2114],[2012,2012]]],[1562375851991,["GJX@GJXAIOU",[[1,2006,"class 类名<自定义泛型占位符> {\n    \n    成员变量\n    \n    非静态成员方法可以使用类自己的泛型\n    \n    静态成员方法不能使用类内的泛型，只能在方法中自定义声明泛型\n}"]],[2006,2006],[2108,2108]]],[1562375853775,["GJX@GJXAIOU",[[-1,2115,"\n"]],[2115,2115],[2114,2114]]],[1562375853953,["GJX@GJXAIOU",[[-1,2114,"\n"]],[2114,2114],[2113,2113]]],[1562375855985,["GJX@GJXAIOU",[[-1,2067,"\n"]],[2068,2068],[2067,2067]]],[1562375856759,["GJX@GJXAIOU",[[-1,2040,"\n"]],[2041,2041],[2040,2040]]],[1562375857536,["GJX@GJXAIOU",[[-1,2026,"\n"]],[2027,2027],[2026,2026]]],[1562375860266,["GJX@GJXAIOU",[[1,2122,"\n"]],[2122,2122],[2123,2123]]],[1562375862321,["GJX@GJXAIOU",[[1,2122,"```"]],[2122,2122],[2125,2125]]],[1562375862351,["GJX@GJXAIOU",[[1,2125,"language\n```\n"]],[2125,2125],[2125,2133]]],[1562375863040,["GJX@GJXAIOU",[[-1,2125,"language"],[1,2133,"j"]],[2125,2133],[2126,2126]]],[1562375863517,["GJX@GJXAIOU",[[1,2126,"ava"]],[2126,2126],[2129,2129]]],[1562375863728,["GJX@GJXAIOU",[[1,2130,"\n"]],[2129,2129],[2130,2130]]],[1562375866984,["GJX@GJXAIOU",[[-1,2131,"```\n"]],[2130,2134],[2130,2130]]],[1562375869431,["GJX@GJXAIOU",[[1,2217,"```\n"]],[2216,2216],[2220,2220]]],[1562375872255,["GJX@GJXAIOU",[[-1,2131,"\n"]],[2131,2131],[2130,2130]]],[1562375872663,["GJX@GJXAIOU",[[-1,2130,"\n"]],[2130,2130],[2129,2129]]],[1562375875056,["GJX@GJXAIOU",[[-1,2214,"\n"]],[2214,2214],[2213,2213]]],[1562375963862,[null,[[-1,1497," "],[-1,1522,"`"],[1,1524,"`"],[-1,1527," "],[1,1528,"\n"],[1,1534,"\n"],[-1,1539," "],[-1,1600," "],[1,1601,"\n"],[-1,1684," "],[1,1685,"\n"],[1,1743," "],[-1,1746,"  "],[1,1748,"\n"],[1,1775,"\n"],[-1,1783," "],[-1,1800,"`"],[1,1802,"`"],[-1,1810," "],[1,1811,"\n"],[-1,1893,""],[1,1893,"\n"],[-1,1986,"}"],[1,1998,"\n"],[-1,2111,"\n"],[1,2122,"\n"],[-1,2129,"\n"],[1,2214,"\n"],[-1,2217,"\n"]],[1497,1497],[2217,2217]]],[1562375963862,[null,[[1,1497," "],[1,1521,"`"],[-1,1522,"`"],[1,1526," "],[-1,1526,"\n"],[-1,1533,"\n"],[1,1539," "],[1,1599," "],[-1,1599,"\n"],[1,1683," "],[-1,1683,"\n"],[-1,1742," "],[1,1746,"  "],[-1,1746,"\n"],[-1,1774,"\n"],[1,1783," "],[1,1799,"`"],[-1,1800,"`"],[1,1809," "],[-1,1809,"\n"],[1,1892,""],[-1,1892,"\n"],[1,1986,"}"],[-1,1997,"\n"],[1,2111,"\n"],[-1,2121,"\n"],[1,2129,"\n"],[-1,2213,"\n"],[1,2217,"\n"]],[2217,2217],[1497,1497]]],[1562375910530,["GJX@GJXAIOU",[[-1,1987,"\n"]],[1986,1986],[1985,1985]]],[1562375910719,["GJX@GJXAIOU",[[-1,1986,"\n"]],[1985,1985],[1984,1984]]],[1562376023863,[null,[[-1,1497," "],[-1,1522,"`"],[1,1524,"`"],[-1,1527," "],[1,1528,"\n"],[1,1534,"\n"],[-1,1539," "],[-1,1600," "],[1,1601,"\n"],[-1,1684," "],[1,1685,"\n"],[1,1743," "],[-1,1746,"  "],[1,1748,"\n"],[1,1775,"\n"],[-1,1783," "],[-1,1800,"`"],[1,1802,"`"],[-1,1810," "],[1,1811,"\n"],[-1,1893,""],[1,1893,"\n"],[-1,1986,"\n"],[1,1996,"\n"],[-1,2109,"\n"],[1,2120,"\n"],[-1,2127,"\n"],[1,2212,"\n"],[-1,2215,"\n"]],[1497,1497],[2215,2215]]],[1562376023863,[null,[[1,1497," "],[1,1521,"`"],[-1,1522,"`"],[1,1526," "],[-1,1526,"\n"],[-1,1533,"\n"],[1,1539," "],[1,1599," "],[-1,1599,"\n"],[1,1683," "],[-1,1683,"\n"],[-1,1742," "],[1,1746,"  "],[-1,1746,"\n"],[-1,1774,"\n"],[1,1783," "],[1,1799,"`"],[-1,1800,"`"],[1,1809," "],[-1,1809,"\n"],[1,1892,""],[-1,1892,"\n"],[1,1986,"\n"],[-1,1995,"\n"],[1,2109,"\n"],[-1,2119,"\n"],[1,2127,"\n"],[-1,2211,"\n"],[1,2215,"\n"]],[2215,2215],[1497,1497]]],[1562376002991,["GJX@GJXAIOU",[[1,2229,"\n    \n    "]],[2229,2229],[2234,2234]]],[1562376005270,["GJX@GJXAIOU",[[1,2234,"```java"]],[2234,2234],[2241,2241]]],[1562376007046,["GJX@GJXAIOU",[[1,2246,"\n    "]],[2241,2241],[2246,2246]]],[1562376007977,["GJX@GJXAIOU",[[1,2246,"```"]],[2246,2246],[2249,2249]]],[1562376010744,["GJX@GJXAIOU",[[1,2246,"\n    "]],[2241,2241],[2246,2246]]],[1562376014776,["GJX@GJXAIOU",[[-1,2232,"  "],[-1,2244,"  "],[-1,2247,"  "]],[2234,2254],[2232,2248]]],[1562376015232,["GJX@GJXAIOU",[[-1,2230,"  "],[-1,2240,"  "],[-1,2243,"  "]],[2232,2248],[2230,2242]]],[1562376018664,["GJX@GJXAIOU",[[-1,2248,"class 类名<同接口一致的泛型> implements A<自定义泛型> {\n        \n    }"]],[2248,2303],[2248,2248]]],[1562376020170,["GJX@GJXAIOU",[[1,2238,"class 类名<同接口一致的泛型> implements A<自定义泛型> {\n        \n    }"]],[2238,2238],[2293,2293]]],[1562376022423,["GJX@GJXAIOU",[[-1,2278,"\n"]],[2279,2279],[2278,2278]]],[1562376083864,[null,[[-1,1497," "],[-1,1522,"`"],[1,1524,"`"],[-1,1527," "],[1,1528,"\n"],[1,1534,"\n"],[-1,1539," "],[-1,1600," "],[1,1601,"\n"],[-1,1684," "],[1,1685,"\n"],[1,1743," "],[-1,1746,"  "],[1,1748,"\n"],[1,1775,"\n"],[-1,1783," "],[-1,1800,"`"],[1,1802,"`"],[-1,1810," "],[1,1811,"\n"],[-1,1893,""],[1,1893,"\n"],[-1,1986,"\n"],[1,1996,"\n"],[-1,2109,"\n"],[1,2120,"\n"],[-1,2127,"\n"],[1,2212,"\n"],[-1,2215,"\n"],[-1,2229,""],[1,2229,">"],[-1,2301,">}"],[1,2303," "]],[1497,1497],[2304,2304]]],[1562376083864,[null,[[1,1497," "],[1,1521,"`"],[-1,1522,"`"],[1,1526," "],[-1,1526,"\n"],[-1,1533,"\n"],[1,1539," "],[1,1599," "],[-1,1599,"\n"],[1,1683," "],[-1,1683,"\n"],[-1,1742," "],[1,1746,"  "],[-1,1746,"\n"],[-1,1774,"\n"],[1,1783," "],[1,1799,"`"],[-1,1800,"`"],[1,1809," "],[-1,1809,"\n"],[1,1892,""],[-1,1892,"\n"],[1,1986,"\n"],[-1,1995,"\n"],[1,2109,"\n"],[-1,2119,"\n"],[1,2127,"\n"],[-1,2211,"\n"],[1,2215,"\n"],[1,2228,""],[-1,2228,">"],[1,2301,">}"],[-1,2301," "]],[2304,2304],[1497,1497]]],[1562376028673,["GJX@GJXAIOU",[[1,2381,"\n    \n    "]],[2381,2381],[2391,2391]]],[1562376032273,["GJX@GJXAIOU",[[1,2382,"```"]],[2382,2382],[2385,2385]]],[1562376032303,["GJX@GJXAIOU",[[1,2385,"language\n```\n"]],[2385,2385],[2385,2393]]],[1562376033305,["GJX@GJXAIOU",[[-1,2385,"language"],[1,2393,"j"]],[2385,2393],[2386,2386]]],[1562376033738,["GJX@GJXAIOU",[[1,2386,"ava"]],[2386,2386],[2389,2389]]],[1562376033859,["GJX@GJXAIOU",[[1,2390,"\n"]],[2389,2389],[2390,2390]]],[1562376037312,["GJX@GJXAIOU",[[-1,2403," class 类名 implements A<确定数据类型> {\n        \n    }"]],[2403,2450],[2403,2403]]],[1562376039056,["GJX@GJXAIOU",[[1,2390," class 类名 implements A<确定数据类型> {\n        \n    }"]],[2390,2390],[2437,2437]]],[1562376041479,["GJX@GJXAIOU",[[-1,2430," "]],[2424,2424],[2423,2423]]],[1562376041831,["GJX@GJXAIOU",[[-1,2422,"\n"]],[2423,2423],[2422,2422]]],[1562376045631,["GJX@GJXAIOU",[[-1,2441,"   \n   \n    "]],[2440,2452],[2440,2440]]],[1562376047319,["GJX@GJXAIOU",[[-1,2440," "]],[2441,2441],[2440,2440]]],[1562376048186,["GJX@GJXAIOU",[[-1,2440,"\n"]],[2440,2440],[2439,2439]]],[1562376050615,["GJX@GJXAIOU",[[-1,2306," "]],[2304,2304],[2303,2303]]],[1562376050911,["GJX@GJXAIOU",[[-1,2302,"\n"]],[2303,2303],[2302,2302]]],[1562376052599,["GJX@GJXAIOU",[[-1,2300,"     "]],[2302,2302],[2297,2297]]],[1562376053471,["GJX@GJXAIOU",[[-1,2296,"\n"]],[2297,2297],[2296,2296]]],[1562376059064,["GJX@GJXAIOU",[[1,2296,"`"],[1,2297,"`"]],[2293,2297],[2293,2299]]],[1562376059281,["GJX@GJXAIOU",[[1,2297,"`"],[1,2298,"`"]],[2293,2299],[2293,2301]]],[1562376059482,["GJX@GJXAIOU",[[1,2298,"`"],[1,2299,"`"]],[2293,2301],[2293,2303]]],[1562376060600,["GJX@GJXAIOU",[[-1,2293,"`````` ```"]],[2293,2303],[2293,2293]]],[1562376061377,["GJX@GJXAIOU",[[1,2293,"```"]],[2293,2293],[2296,2296]]],[1562376064239,["GJX@GJXAIOU",[[-1,2363," "]],[2361,2361],[2360,2360]]],[1562376064671,["GJX@GJXAIOU",[[-1,2360,"   "],[1,2363,"\n"]],[2360,2360],[2361,2361]]],[1562376068170,["GJX@GJXAIOU",[[-1,2362,"    "]],[2362,2366],[2362,2362]]],[1562376071078,["GJX@GJXAIOU",[[-1,2223,"    "]],[2223,2227],[2223,2223]]],[1562376074680,["GJX@GJXAIOU",[[1,2362,"\n"]],[2361,2361],[2362,2362]]],[1562376076551,["GJX@GJXAIOU",[[1,2366,"`"],[1,2370,"`"]],[2363,2370],[2363,2372]]],[1562376076874,["GJX@GJXAIOU",[[1,2367,"`"],[1,2371,"`"]],[2363,2372],[2363,2374]]],[1562376077906,["GJX@GJXAIOU",[[-1,2363,"`````java``"]],[2363,2374],[2363,2363]]],[1562376079962,["GJX@GJXAIOU",[[1,2363,"```java"]],[2363,2363],[2370,2370]]],[1562376082568,["GJX@GJXAIOU",[[1,2420,"``"]],[2417,2420],[2417,2422]]],[1562376082767,["GJX@GJXAIOU",[[1,2422,"``"]],[2417,2422],[2417,2424]]],[1562376082959,["GJX@GJXAIOU",[[1,2424,"``"]],[2417,2424],[2417,2426]]],[1562376143866,[null,[[-1,1497," "],[-1,1522,"`"],[1,1524,"`"],[-1,1527," "],[1,1528,"\n"],[1,1534,"\n"],[-1,1539," "],[-1,1600," "],[1,1601,"\n"],[-1,1684," "],[1,1685,"\n"],[1,1743," "],[-1,1746,"  "],[1,1748,"\n"],[1,1775,"\n"],[-1,1783," "],[-1,1800,"`"],[1,1802,"`"],[-1,1810," "],[1,1811,"\n"],[-1,1893,""],[1,1893,"\n"],[-1,1986,"\n"],[1,1996,"\n"],[-1,2109,"\n"],[1,2120,"\n"],[-1,2127,"\n"],[1,2212,"\n"],[-1,2215,"\n"],[-1,2223," 1"],[1,2225,"\n1>"],[-1,2294," "],[1,2295,""],[-1,2357,"  "],[1,2359,"\n\n"],[1,2361," "],[-1,2426,"\n"],[1,2427,""]],[1497,1497],[2427,2427]]],[1562376143866,[null,[[1,1497," "],[1,1521,"`"],[-1,1522,"`"],[1,1526," "],[-1,1526,"\n"],[-1,1533,"\n"],[1,1539," "],[1,1599," "],[-1,1599,"\n"],[1,1683," "],[-1,1683,"\n"],[-1,1742," "],[1,1746,"  "],[-1,1746,"\n"],[-1,1774,"\n"],[1,1783," "],[1,1799,"`"],[-1,1800,"`"],[1,1809," "],[-1,1809,"\n"],[1,1892,""],[-1,1892,"\n"],[1,1986,"\n"],[-1,1995,"\n"],[1,2109,"\n"],[-1,2119,"\n"],[1,2127,"\n"],[-1,2211,"\n"],[1,2215,"\n"],[1,2222," 1"],[-1,2222,"\n1>"],[1,2294," "],[-1,2294,""],[1,2356,"  "],[-1,2356,"\n\n"],[-1,2360," "],[1,2426,"\n"],[-1,2426,""]],[2427,2427],[1497,1497]]],[1562376084000,["GJX@GJXAIOU",[[-1,2417,"`````````"]],[2417,2426],[2417,2417]]],[1562376084564,["GJX@GJXAIOU",[[1,2417,"```"]],[2417,2417],[2420,2420]]],[1562376089064,["GJX@GJXAIOU",[[-1,2289,"```  "]],[2289,2294],[2289,2289]]],[1562376090025,["GJX@GJXAIOU",[[1,2289,"```"]],[2289,2289],[2292,2292]]],[1562376093783,["GJX@GJXAIOU",[[-1,2360,"\n"]],[2360,2360],[2359,2359]]],[1562376101392,["GJX@GJXAIOU",[[1,2598,"fagnf"]],[2598,2598],[2603,2603]]],[1562376102327,["GJX@GJXAIOU",[[-1,2598,"fagnf"]],[2603,2603],[2598,2598]]],[1562376104026,["GJX@GJXAIOU",[[1,2598,"方法："]],[2598,2598],[2601,2601]]],[1562376203868,[null,[[-1,1497," "],[-1,1522,"`"],[1,1524,"`"],[-1,1527," "],[1,1528,"\n"],[1,1534,"\n"],[-1,1539," "],[-1,1600," "],[1,1601,"\n"],[-1,1684," "],[1,1685,"\n"],[1,1743," "],[-1,1746,"  "],[1,1748,"\n"],[1,1775,"\n"],[-1,1783," "],[-1,1800,"`"],[1,1802,"`"],[-1,1810," "],[1,1811,"\n"],[-1,1893,""],[1,1893,"\n"],[-1,1986,"\n"],[1,1996,"\n"],[-1,2109,"\n"],[1,2120,"\n"],[-1,2127,"\n"],[1,2212,"\n"],[-1,2215,"\n"],[-1,2223," 1"],[1,2225,"\n1>"],[-1,2292," "],[1,2293,""],[-1,2355,"  "],[1,2357,"\n\n"],[1,2359," "],[-1,2418,"\n"],[1,2598," "],[-1,2601," "]],[1497,1497],[2601,2601]]],[1562376203868,[null,[[1,1497," "],[1,1521,"`"],[-1,1522,"`"],[1,1526," "],[-1,1526,"\n"],[-1,1533,"\n"],[1,1539," "],[1,1599," "],[-1,1599,"\n"],[1,1683," "],[-1,1683,"\n"],[-1,1742," "],[1,1746,"  "],[-1,1746,"\n"],[-1,1774,"\n"],[1,1783," "],[1,1799,"`"],[-1,1800,"`"],[1,1809," "],[-1,1809,"\n"],[1,1892,""],[-1,1892,"\n"],[1,1986,"\n"],[-1,1995,"\n"],[1,2109,"\n"],[-1,2119,"\n"],[1,2127,"\n"],[-1,2211,"\n"],[1,2215,"\n"],[1,2222," 1"],[-1,2222,"\n1>"],[1,2292," "],[-1,2292,""],[1,2354,"  "],[-1,2354,"\n\n"],[-1,2358," "],[1,2418,"\n"],[-1,2597," "],[1,2601," "]],[2601,2601],[1497,1497]]],[1562376191706,["GJX@GJXAIOU",[[1,2715," 、、"]],[2715,2715],[2718,2718]]],[1562376192498,["GJX@GJXAIOU",[[-1,2716,"、、"]],[2718,2718],[2716,2716]]],[1562376193148,["GJX@GJXAIOU",[[1,2716,"、、"]],[2716,2716],[2718,2718]]],[1562376193913,["GJX@GJXAIOU",[[-1,2716,"、、"]],[2718,2718],[2716,2716]]],[1562376196354,["GJX@GJXAIOU",[[1,2716,"//gengj"]],[2716,2716],[2723,2723]]],[1562376197352,["GJX@GJXAIOU",[[-1,2718,"gengj"]],[2723,2723],[2718,2718]]],[1562376201915,["GJX@GJXAIOU",[[1,2718,"根据Key"]],[2718,2718],[2723,2723]]],[1562376201946,["GJX@GJXAIOU",[[1,2720," "]],[2723,2723],[2724,2724]]],[1562376263867,[null,[[-1,1497," "],[-1,1522,"`"],[1,1524,"`"],[-1,1527," "],[1,1528,"\n"],[1,1534,"\n"],[-1,1539," "],[-1,1600," "],[1,1601,"\n"],[-1,1684," "],[1,1685,"\n"],[1,1743," "],[-1,1746,"  "],[1,1748,"\n"],[1,1775,"\n"],[-1,1783," "],[-1,1800,"`"],[1,1802,"`"],[-1,1810," "],[1,1811,"\n"],[-1,1893,""],[1,1893,"\n"],[-1,1986,"\n"],[1,1996,"\n"],[-1,2109,"\n"],[1,2120,"\n"],[-1,2127,"\n"],[1,2212,"\n"],[-1,2215,"\n"],[-1,2223," 1"],[1,2225,"\n1>"],[-1,2292," "],[1,2293,""],[-1,2355,"  "],[1,2357,"\n\n"],[1,2359," "],[-1,2418,"\n"],[1,2598," "],[-1,2601," "],[1,2715,";"],[-1,2724,";"]],[1497,1497],[2724,2724]]],[1562376263867,[null,[[1,1497," "],[1,1521,"`"],[-1,1522,"`"],[1,1526," "],[-1,1526,"\n"],[-1,1533,"\n"],[1,1539," "],[1,1599," "],[-1,1599,"\n"],[1,1683," "],[-1,1683,"\n"],[-1,1742," "],[1,1746,"  "],[-1,1746,"\n"],[-1,1774,"\n"],[1,1783," "],[1,1799,"`"],[-1,1800,"`"],[1,1809," "],[-1,1809,"\n"],[1,1892,""],[-1,1892,"\n"],[1,1986,"\n"],[-1,1995,"\n"],[1,2109,"\n"],[-1,2119,"\n"],[1,2127,"\n"],[-1,2211,"\n"],[1,2215,"\n"],[1,2222," 1"],[-1,2222,"\n1>"],[1,2292," "],[-1,2292,""],[1,2354,"  "],[-1,2354,"\n\n"],[-1,2358," "],[1,2418,"\n"],[-1,2597," "],[1,2601," "],[-1,2714,";"],[1,2724,";"]],[2724,2724],[1497,1497]]],[1562376204804,["GJX@GJXAIOU",[[1,2724,"删去"]],[2724,2724],[2726,2726]]],[1562376204834,["GJX@GJXAIOU",[[1,2724," "]],[2726,2726],[2727,2727]]],[1562376212381,["GJX@GJXAIOU",[[1,2727,"对应的键值对"]],[2727,2727],[2733,2733]]],[1562376242968,["GJX@GJXAIOU",[[1,2924,"\n    "]],[2919,2919],[2924,2924]]],[1562376245407,["GJX@GJXAIOU",[[-1,2921,"   "]],[2924,2924],[2921,2921]]],[1562376246926,["GJX@GJXAIOU",[[1,2921,"···"]],[2921,2921],[2924,2924]]],[1562376248192,["GJX@GJXAIOU",[[-1,2920," ···"]],[2924,2924],[2920,2920]]],[1562376249931,["GJX@GJXAIOU",[[1,2920,"```"]],[2920,2920],[2923,2923]]],[1562376249961,["GJX@GJXAIOU",[[1,2923,"language\n```\n"]],[2923,2923],[2923,2931]]],[1562376251043,["GJX@GJXAIOU",[[-1,2923,"language"],[1,2931,"j"]],[2923,2931],[2924,2924]]],[1562376251451,["GJX@GJXAIOU",[[1,2924,"ava"]],[2924,2924],[2927,2927]]],[1562376251824,["GJX@GJXAIOU",[[1,2928,"\n"]],[2927,2927],[2928,2928]]],[1562376256440,["GJX@GJXAIOU",[[-1,2942,"import java.util.Map.Entry;\n        \n        HashMap<String, Integer> map = new HashMap<String, Integer>();\n        \n        Set<Entry<String, Integer>> set = map.entrySet();\n        \n        Iterator<Entry<String, Integer>> it = set.iterator();\n        \n        while (it.hashNext()) {\n            System.out.println(it.next());\n        }\n"]],[2942,3282],[2942,2942]]],[1562376258907,["GJX@GJXAIOU",[[1,2928,"import java.util.Map.Entry;\n        \n        HashMap<String, Integer> map = new HashMap<String, Integer>();\n        \n        Set<Entry<String, Integer>> set = map.entrySet();\n        \n        Iterator<Entry<String, Integer>> it = set.iterator();\n        \n        while (it.hashNext()) {\n            System.out.println(it.next());\n        }\n"]],[2928,2928],[3268,3268]]],[1562376263489,["GJX@GJXAIOU",[[-1,3277,"     "]],[3279,3279],[3274,3274]]],[1562376323872,[null,[[-1,1497," "],[-1,1522,"`"],[1,1524,"`"],[-1,1527," "],[1,1528,"\n"],[1,1534,"\n"],[-1,1539," "],[-1,1600," "],[1,1601,"\n"],[-1,1684," "],[1,1685,"\n"],[1,1743," "],[-1,1746,"  "],[1,1748,"\n"],[1,1775,"\n"],[-1,1783," "],[-1,1800,"`"],[1,1802,"`"],[-1,1810," "],[1,1811,"\n"],[-1,1893,""],[1,1893,"\n"],[-1,1986,"\n"],[1,1996,"\n"],[-1,2109,"\n"],[1,2120,"\n"],[-1,2127,"\n"],[1,2212,"\n"],[-1,2215,"\n"],[-1,2223," 1"],[1,2225,"\n1>"],[-1,2292," "],[1,2293,""],[-1,2355,"  "],[1,2357,"\n\n"],[1,2359," "],[-1,2418,"\n"],[1,2598," "],[-1,2601," "],[1,2715,";"],[-1,2733,";"],[-1,2920,""],[1,2920,"\n"],[-1,3277,"\n"],[1,3278,""]],[1497,1497],[3278,3278]]],[1562376323872,[null,[[1,1497," "],[1,1521,"`"],[-1,1522,"`"],[1,1526," "],[-1,1526,"\n"],[-1,1533,"\n"],[1,1539," "],[1,1599," "],[-1,1599,"\n"],[1,1683," "],[-1,1683,"\n"],[-1,1742," "],[1,1746,"  "],[-1,1746,"\n"],[-1,1774,"\n"],[1,1783," "],[1,1799,"`"],[-1,1800,"`"],[1,1809," "],[-1,1809,"\n"],[1,1892,""],[-1,1892,"\n"],[1,1986,"\n"],[-1,1995,"\n"],[1,2109,"\n"],[-1,2119,"\n"],[1,2127,"\n"],[-1,2211,"\n"],[1,2215,"\n"],[1,2222," 1"],[-1,2222,"\n1>"],[1,2292," "],[-1,2292,""],[1,2354,"  "],[-1,2354,"\n\n"],[-1,2358," "],[1,2418,"\n"],[-1,2597," "],[1,2601," "],[-1,2714,";"],[1,2733,";"],[1,2919,""],[-1,2919,"\n"],[1,3277,"\n"],[-1,3277,""]],[3278,3278],[1497,1497]]],[1562376264514,["GJX@GJXAIOU",[[-1,3273,"\n"]],[3274,3274],[3273,3273]]],[1562376272209,["GJX@GJXAIOU",[[-1,2971,"  "],[-1,3042,"  "],[-1,3045," "],[-1,3052," "],[-1,3109,"  "],[-1,3112," "],[-1,3119," "],[-1,3180,"  "],[-1,3183,"  "],[-1,3225,"  "],[-1,3258,"  "]],[2973,3267],[2971,3249]]],[1562376272745,["GJX@GJXAIOU",[[-1,2969,"  "],[-1,3038,"  "],[-1,3041," "],[-1,3046," "],[-1,3101,"  "],[-1,3104," "],[-1,3109," "],[-1,3168,"  "],[-1,3171,"  "],[-1,3209,"  "],[-1,3242,"  "]],[2971,3249],[2969,3231]]],[1562376281219,["GJX@GJXAIOU",[[-1,2909,"  "]],[2909,2909],[2907,2907]]],[1562376281520,["GJX@GJXAIOU",[[-1,2906,"\n"]],[2907,2907],[2906,2906]]],[1562376283939,["GJX@GJXAIOU",[[-1,2909,"    导包："]],[2909,2916],[2909,2909]]],[1562376284272,["GJX@GJXAIOU",[[-1,2909,"\n"]],[2909,2909],[2908,2908]]],[1562379062801,[null,[[-1,1497," "],[-1,1522,"`"],[1,1524,"`"],[-1,1527," "],[1,1528,"\n"],[1,1534,"\n"],[-1,1539," "],[-1,1600," "],[1,1601,"\n"],[-1,1684," "],[1,1685,"\n"],[1,1743," "],[-1,1746,"  "],[1,1748,"\n"],[1,1775,"\n"],[-1,1783," "],[-1,1800,"`"],[1,1802,"`"],[-1,1810," "],[1,1811,"\n"],[-1,1893,""],[1,1893,"\n"],[-1,1986,"\n"],[1,1996,"\n"],[-1,2109,"\n"],[1,2120,"\n"],[-1,2127,"\n"],[1,2212,"\n"],[-1,2215,"\n"],[-1,2223," 1"],[1,2225,"\n1>"],[-1,2292," "],[1,2293,""],[-1,2355,"  "],[1,2357,"\n\n"],[1,2359," "],[-1,2418,"\n"],[1,2598," "],[-1,2601," "],[1,2715,";"],[-1,2733,";"],[-1,2906,"\n"],[1,2907,"】"],[1,2909,"\n"],[-1,3229,"\n"],[1,3230,""]],[1497,1497],[3230,3230]]],[1562379062801,[null,[[1,1497," "],[1,1521,"`"],[-1,1522,"`"],[1,1526," "],[-1,1526,"\n"],[-1,1533,"\n"],[1,1539," "],[1,1599," "],[-1,1599,"\n"],[1,1683," "],[-1,1683,"\n"],[-1,1742," "],[1,1746,"  "],[-1,1746,"\n"],[-1,1774,"\n"],[1,1783," "],[1,1799,"`"],[-1,1800,"`"],[1,1809," "],[-1,1809,"\n"],[1,1892,""],[-1,1892,"\n"],[1,1986,"\n"],[-1,1995,"\n"],[1,2109,"\n"],[-1,2119,"\n"],[1,2127,"\n"],[-1,2211,"\n"],[1,2215,"\n"],[1,2222," 1"],[-1,2222,"\n1>"],[1,2292," "],[-1,2292,""],[1,2354,"  "],[-1,2354,"\n\n"],[-1,2358," "],[1,2418,"\n"],[-1,2597," "],[1,2601," "],[-1,2714,";"],[1,2733,";"],[1,2905,"\n"],[-1,2905,"】"],[-1,2908,"\n"],[1,3229,"\n"],[-1,3229,""]],[3230,3230],[1497,1497]]],[1562379057642,["GJX@GJXAIOU",[[1,3817,"\n    "]],[3817,3817],[3822,3822]]],[1562379057767,["GJX@GJXAIOU",[[-1,3818,"    "],[1,3822,"\n\n"]],[3822,3822],[3819,3819]]],[1562379058671,["GJX@GJXAIOU",[[1,3820,"\n"]],[3819,3819],[3820,3820]]]],null,"GJX@GJXAIOU"],["acf7cd10-cd82-4625-99f0-5c0102051932",1568986013427,"## 一、复习：异常处理\n  Java里面特别人性化的报错，报异常机制\n  \n  - Throwable 类 ，所有异常和错误的超类\n     - Exception 异常，可以出来\n     - Error  错误 没办法处理，只能避免\n  \n  getMessage()  toString()，展现信息；  printStackTrack()\n  \n  - 处理异常的方式：\n      1. 捕获异常\n      2. 抛出异常\n      \n  - 捕获异常：\n      try - catch  \n      try - catch - finally \n      \n  - 抛出异常：\n      throw  throws\n      \n  - 自定义异常\n      class  自定义异常类 extends Exception {\n          自定义异常类的有参数构造方法，参数类型是String message\n      }\n        \n## 集合\n - Collection 集合接口 总接口\n   - List 有序 可重复\n      -  ArrayList    底层维护一个Object类型的数组，如果使用无参构造方法，创建ArrayList对象，Object数组默认元素个数为10；\n          - 特征：\n                查询快，增删慢\n                ensureCapacity(int minCapacity);\n                trimToSize();\n      - LinkedList   底层维护的是一个链表\n         - 特征：\n                          查询慢，增删快\n      -  Vector  线程安全的ArrayList，不经常用\n    - Set 无序 不可重复\n      - HashSet\n                  底层维护的是一个哈希表\n                  HashSet存储原理\n                      hashCode equals\n      - TreeSet\n              树形结构 放入的数据要不有自然顺序，要不存在比较规则~~\n              自定义的类对象放入TreeSet集合\n            1. 遵从Comparable<T> 接口 实现compareTo(T o)\n            2. 实现自定义比较器 遵从 Comparator<T> 接口 实现compare(T o1, T o2)\n                  使用了匿名内部类\n                   \n   \nCollection 方法：\n    `add(E e) addAll(Collection<? extends E> c) remove(Object o) clear() \n    removeAll(Collection c) size() toArray() isEmpty() contains(Object o)\n    containsAll(Collection c) retainAll(Collection c) removeAll(Collection c)\n    iterator() equals() hashCode()`\n      \n迭代器方法：\n     `hasNext() next() remove()`\n  \nList: \n    `add(int index, E e) addAll(int index, List<? extends > list)\n    indexOf(Object o) lashIndexOf(Object o) get(int index)\n    set(int index , E e)\n    subList(int fromIndex, int toIndex)\n    ListIterator() `  \n    \n   ListIterator()特有方法：\n       `add(E e) set(E e)`\n   \n   \nSet:\n      没有特有方法\n\n## 泛型\n解决的问题是：\n1. 数据类型一致化问题\n2. 避免无意义的强制类型转换\n\n泛型格式：\n一. 函数/方法中使用泛型\n```java\n权限修饰符 <自定义泛型占位符> 返回值类型(可以使用自定义泛型)  方法名 (形式参数列表“也可以使用泛型”) {\n    在函数体内，同样可以使用泛型\n}\n```\n\n二. 类中使用泛型\n```java\nclass 类名<自定义泛型占位符> {    \n    成员变量    \n    非静态成员方法可以使用类自己的泛型    \n    静态成员方法不能使用类内的泛型，只能在方法中自定义声明泛型\n}\n```\n\n三. 接口中使用泛型\n```java\ninterface A<自定义泛型占位符> {\n    成员变量; public static final 定义时必须初始化\n    成员方法; abstract\n}\n```\n使用的方式：\n1>\n```java\nclass 类名<同接口一致的泛型> implements A<自定义泛型> {        \n    }\n```\n    在创建当前类对象时确定具体数据类型：\n        例如：ArrayList<E> HashMap<K, V>\n\n\n2> \n```java\n class 类名 implements A<确定数据类型> {       \n    }\n```\n    泛型的具体数据类型，在创建定义当前类的时候，就确定了\n        例如：Comparable接口，实现compareto方法\n        \n泛型的上下限\n<? super E>\n<? extends E>\n    \n## Map 双边队列 双列集合\n    Map \n    ---| HashMap\n    ---| TreeMap\n    方法：\n    put(K key, V value);\n    putAll(Map<? extends K, ? entends V> map);\n    \n    clear();\n    remove(Object key); //根据 Key 删去对应的键值对\n    \n    size();\n    get(Object key)\n    containsKey(Object Key);\n    containsValue(Object Value);\n    keySet();\n    values();\n    \n    entrySet()\n    \n    entrySet的使用 【重点】  \n```java\nimport java.util.Map.Entry;\n        \n    HashMap<String, Integer> map = new HashMap<String, Integer>();\n    \n    Set<Entry<String, Integer>> set = map.entrySet();\n    \n    Iterator<Entry<String, Integer>> it = set.iterator();\n    \n    while (it.hashNext()) {\n        System.out.println(it.next());\n    }\n\n```\n   \n## 文件操作\n    File 类对象\n    File(String pathName);\n    File(String parent, String child);\n    File(File parent, String child);\n    \n    createNewFile(); boolean \n    mkdir();\n    mkdirs();\n    renameTo(File dest);\n    \n    delete();\n    deleteOnExit();\n    \n    getPath();\n    getName();\n    getAbsolute();\n    getParent();\n    \n    lastModify();\n    length(); \n    \n    exists();\n    isFile();\n    isDirectory();\n    isHidden();\n    isAbsolute();\n    \n    static File[] listRoots(); \n    String[] list();\n    File[] listFile();\n    \n    FileNameFilter();\n    accpet(File dir, String name);\n\n\n\n",[[1568985959170,["GJX@GJXAIOU",[[1,0,"\n"]],[0,0],[1,1]]],[1568985959298,["GJX@GJXAIOU",[[1,0,"\n"]],[1,1],[2,2]]],[1568985962586,["GJX@GJXAIOU",[[1,0,"# JavaEEDay20-复习、泛型、HashMap"]],[0,0],[27,27]]]],null,"GJX@GJXAIOU"]]}