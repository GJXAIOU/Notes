{"compress":true,"commitItems":[["275ffb04-c05c-460c-9785-e38be2afd794",1565863425783,"",[[1565863384649,["GJX@GJXAIOU",[[1,0,"# JavaEEDay48 监听器\n\n\n\n"]],[0,0],[20,20]]],[1565863392478,["GJX@GJXAIOU",[[1,20,"## 概念"]],[20,20],[25,25]]],[1565863392782,["GJX@GJXAIOU",[[1,26,"\n"]],[25,25],[26,26]]],[1565863394005,["GJX@GJXAIOU",[[-1,26,"\n"],[1,27,"-"]],[26,26],[27,27]]],[1565863401502,["GJX@GJXAIOU",[[1,27," 监听你的web"]],[27,27],[35,35]]],[1565863401524,["GJX@GJXAIOU",[[1,32," "]],[35,35],[36,36]]],[1565863404656,["GJX@GJXAIOU",[[1,36,"应用"]],[36,36],[38,38]]],[1565863404679,["GJX@GJXAIOU",[[1,36," "]],[38,38],[39,39]]],[1565863422111,["GJX@GJXAIOU",[[1,39,"，监听许多信息的初始化、销毁、增加、修改、"]],[39,39],[60,60]]],[1565863427785,["GJX@GJXAIOU",[[1,60,"删除值的"]],[60,60],[64,64]]],[1565863429390,["GJX@GJXAIOU",[[-1,63,"的"]],[64,64],[63,63]]],[1565863439119,["GJX@GJXAIOU",[[1,63,"等；\n- 监听器用于监听一些总要"]],[63,63],[79,79]]],[1565863440658,["GJX@GJXAIOU",[[-1,77,"总要"]],[79,79],[77,77]]],[1565863451662,["GJX@GJXAIOU",[[1,77,"重要事件的发送"]],[77,77],[84,84]]],[1565863452298,["GJX@GJXAIOU",[[-1,82,"发送"]],[84,84],[82,82]]],[1565863456250,["GJX@GJXAIOU",[[1,82,"发生，\n- "]],[82,82],[88,88]]],[1565863456378,["GJX@GJXAIOU",[[-1,86,"- "],[1,88,"\n\n"]],[88,88],[87,87]]],[1565863456500,["GJX@GJXAIOU",[[1,88,"\n"]],[87,87],[88,88]]],[1565863458251,["GJX@GJXAIOU",[[-1,88,"\n"],[1,89,"@"]],[88,88],[89,89]]],[1565863459363,["GJX@GJXAIOU",[[-1,88,"@"],[1,89,"\n"]],[89,89],[88,88]]],[1565863466631,["GJX@GJXAIOU",[[1,88,"## 类型分类"]],[88,88],[95,95]]],[1565863467030,["GJX@GJXAIOU",[[1,96,"\n"]],[95,95],[96,96]]],[1565863597639,["GJX@GJXAIOU",[[1,96,"按监听的对象划分:\n\n1用于监听应用程序环境对象( ServletContext)的事件监听器\n\n2用于监听用户会话对象( Httpsession)的事件监听器\n\n3用于监听请求消息对象( ServletRequest)的事件监听器\n\n按监听的事件划分\n\n1用于监听域对象自身的创建和销毁的事件监听器\n\n2用于监听域对象中的属性的增加和删除的事件监听器\n\n3用于监听绑定到 Http session域中的某个对象的状态的事件监听器"]],[96,96],[311,311]]],[1565863600187,["GJX@GJXAIOU",[[-1,144,"\n"]],[144,144],[143,143]]],[1565863601066,["GJX@GJXAIOU",[[-1,176,"\n"]],[176,176],[175,175]]],[1565863605252,["GJX@GJXAIOU",[[-1,221,"\n"]],[221,221],[220,220]]],[1565863606179,["GJX@GJXAIOU",[[-1,244,"\n"]],[244,244],[243,243]]],[1565863607031,["GJX@GJXAIOU",[[-1,269,"\n"]],[269,269],[268,268]]],[1565863608357,["GJX@GJXAIOU",[[-1,106,"\n"]],[106,106],[105,105]]],[1565863619740,["GJX@GJXAIOU",[[1,96,"- "]],[96,96],[98,98]]],[1565863622636,["GJX@GJXAIOU",[[1,213,"- "]],[213,213],[215,215]]],[1565863630587,["GJX@GJXAIOU",[[-1,285," s"]],[287,287],[285,285]]],[1565863632071,["GJX@GJXAIOU",[[1,285,"S"]],[285,285],[286,286]]],[1565863636518,["GJX@GJXAIOU",[[-1,162,"s"]],[163,163],[162,162]]],[1565863636924,["GJX@GJXAIOU",[[1,162,"S"]],[162,162],[163,163]]],[1565863684766,["GJX@GJXAIOU",[[1,309,"\n"]],[308,308],[309,309]]],[1565863685266,["GJX@GJXAIOU",[[1,310,"\n"]],[309,309],[310,310]]],[1565863685297,["GJX@GJXAIOU",[[1,311,"\n"]],[310,310],[311,311]]],[1565863685329,["GJX@GJXAIOU",[[1,312,"\n"]],[311,311],[312,312]]],[1565863685362,["GJX@GJXAIOU",[[1,313,"\n"]],[312,312],[313,313]]],[1565863685395,["GJX@GJXAIOU",[[1,314,"\n"]],[313,313],[314,314]]],[1565863685429,["GJX@GJXAIOU",[[1,315,"\n"]],[314,314],[315,315]]],[1565863685462,["GJX@GJXAIOU",[[1,316,"\n"]],[315,315],[316,316]]],[1565863685496,["GJX@GJXAIOU",[[1,317,"\n"]],[316,316],[317,317]]],[1565863685531,["GJX@GJXAIOU",[[1,318,"\n"]],[317,317],[318,318]]],[1565863685562,["GJX@GJXAIOU",[[1,319,"\n"]],[318,318],[319,319]]],[1565863685593,["GJX@GJXAIOU",[[1,320,"\n"]],[319,319],[320,320]]],[1565863685625,["GJX@GJXAIOU",[[1,321,"\n"]],[320,320],[321,321]]],[1565863685659,["GJX@GJXAIOU",[[1,322,"\n"]],[321,321],[322,322]]],[1565863685692,["GJX@GJXAIOU",[[1,323,"\n"]],[322,322],[323,323]]],[1565863685725,["GJX@GJXAIOU",[[1,324,"\n"]],[323,323],[324,324]]],[1565863685759,["GJX@GJXAIOU",[[1,325,"\n"]],[324,324],[325,325]]],[1565863685795,["GJX@GJXAIOU",[[1,326,"\n"]],[325,325],[326,326]]],[1565863685827,["GJX@GJXAIOU",[[1,327,"\n"]],[326,326],[327,327]]],[1565863685862,["GJX@GJXAIOU",[[1,328,"\n"]],[327,327],[328,328]]],[1565863723035,["GJX@GJXAIOU",[[1,85,"jianti"]],[85,85],[91,91]]],[1565863724302,["GJX@GJXAIOU",[[-1,85,"jianti"]],[91,91],[85,85]]],[1565863748301,["GJX@GJXAIOU",[[1,85,"监听器对象可以在事情发生前、发生后可以做一些必要的处理；"]],[85,85],[113,113]]],[1565863748980,["GJX@GJXAIOU",[[1,114,"- \n"]],[113,113],[116,116]]],[1565863765646,["GJX@GJXAIOU",[[1,116,"主要使用场景：实现系统的日志；"]],[116,116],[131,131]]],[1565863840654,["GJX@GJXAIOU",[[1,356,"### 设计"]],[356,356],[362,362]]],[1565863841867,["GJX@GJXAIOU",[[-1,360,"设计"]],[362,362],[360,360]]],[1565863845710,["GJX@GJXAIOU",[[1,360,"涉及到的"]],[360,360],[364,364]]],[1565863846456,["GJX@GJXAIOU",[[1,364,"类"]],[364,364],[365,365]]],[1565863846844,["GJX@GJXAIOU",[[1,384,"\n"]],[365,365],[366,366]]],[1565863849691,["GJX@GJXAIOU",[[1,366,"涉及到的类\n\nServletContextListener监听生命周期\n\ng HttpsessionlisTener\n\nServlet RequestListener\n\nServletcontextAttributelistener\n\n? Httpsession Attributelistener\n\ng Servlet requestAttributeListener I\n\ng Httpsession Bindinglistener\n\nHttpsessionactIvationlistener ()"]],[366,366],[618,618]]],[1565863852475,["GJX@GJXAIOU",[[-1,366,"涉及到的类"]],[366,371],[366,366]]],[1565863855346,["GJX@GJXAIOU",[[-1,398,"g "]],[400,400],[398,398]]],[1565863862195,["GJX@GJXAIOU",[[-1,412,"T"]],[413,413],[412,412]]],[1565863863561,["GJX@GJXAIOU",[[1,412,"t"]],[412,412],[413,413]]],[1565863866243,["GJX@GJXAIOU",[[-1,409,"l"]],[410,410],[409,409]]],[1565863866596,["GJX@GJXAIOU",[[1,409,"L"]],[409,409],[410,410]]],[1565863868141,["GJX@GJXAIOU",[[-1,397,"\n"]],[397,397],[396,396]]],[1565863869915,["GJX@GJXAIOU",[[-1,367,"\n"]],[367,367],[366,366]]],[1565863874819,["GJX@GJXAIOU",[[-1,416,"\n"]],[416,416],[415,415]]],[1565863878282,["GJX@GJXAIOU",[[-1,440,"\n"]],[440,440],[439,439]]],[1565863881438,["GJX@GJXAIOU",[[-1,447,"c"]],[448,448],[447,447]]],[1565863881980,["GJX@GJXAIOU",[[1,447,"C"]],[447,447],[448,448]]],[1565863888878,["GJX@GJXAIOU",[[-1,463,"l"]],[464,464],[463,463]]],[1565863889292,["GJX@GJXAIOU",[[1,463,"L"]],[463,463],[464,464]]],[1565863895339,["GJX@GJXAIOU",[[-1,473,"? "]],[475,475],[473,473]]],[1565863896362,["GJX@GJXAIOU",[[-1,472,"\n"]],[473,473],[472,472]]],[1565863897852,["GJX@GJXAIOU",[[1,440,"\n"]],[440,440],[441,441]]],[1565863900868,["GJX@GJXAIOU",[[-1,484," "]],[485,485],[484,484]]],[1565863905084,["GJX@GJXAIOU",[[-1,493,"l"]],[494,494],[493,493]]],[1565863905510,["GJX@GJXAIOU",[[1,493,"L"]],[493,493],[494,494]]],[1565863913132,["GJX@GJXAIOU",[[-1,477,"s"]],[478,478],[477,477]]],[1565863913708,["GJX@GJXAIOU",[[1,477,"S"]],[477,477],[478,478]]],[1565863916804,["GJX@GJXAIOU",[[-1,503,"g "]],[505,505],[503,503]]],[1565863917163,["GJX@GJXAIOU",[[-1,502,"\n"]],[503,503],[502,502]]],[1565863920971,["GJX@GJXAIOU",[[-1,509," r"]],[511,511],[509,509]]],[1565863921852,["GJX@GJXAIOU",[[1,509,"R"]],[509,509],[510,510]]],[1565863925980,["GJX@GJXAIOU",[[-1,534,"I"]],[535,535],[534,534]]],[1565863932885,["GJX@GJXAIOU",[[-1,549," "]],[550,550],[549,549]]],[1565863935996,["GJX@GJXAIOU",[[-1,536,"g "]],[538,538],[536,536]]],[1565863937750,["GJX@GJXAIOU",[[-1,563,"\n"]],[563,563],[562,562]]],[1565863940627,["GJX@GJXAIOU",[[-1,554,"l"]],[555,555],[554,554]]],[1565863941013,["GJX@GJXAIOU",[[1,554,"L"]],[554,554],[555,555]]],[1565863943971,["GJX@GJXAIOU",[[-1,567,"s"]],[568,568],[567,567]]],[1565863944455,["GJX@GJXAIOU",[[1,567,"S"]],[567,567],[568,568]]],[1565863950014,["GJX@GJXAIOU",[[-1,577,"I"]],[578,578],[577,577]]],[1565863950407,["GJX@GJXAIOU",[[1,577,"i"]],[577,577],[578,578]]],[1565863952379,["GJX@GJXAIOU",[[-1,574,"a"]],[575,575],[574,574]]],[1565863953182,["GJX@GJXAIOU",[[1,574,"A"]],[574,574],[575,575]]],[1565863957363,["GJX@GJXAIOU",[[-1,584,"l"]],[585,585],[584,584]]],[1565863957772,["GJX@GJXAIOU",[[1,584,"L"]],[584,584],[585,585]]],[1565863962605,["GJX@GJXAIOU",[[1,594,"liu"]],[594,594],[597,597]]],[1565863963516,["GJX@GJXAIOU",[[-1,594,"liu"]],[597,597],[594,594]]],[1565863966817,["GJX@GJXAIOU",[[1,594,"略"]],[594,594],[595,595]]],[1565867139732,["GJX@GJXAIOU",[[1,606,"# Ajax"]],[606,606],[612,612]]],[1565867140306,["GJX@GJXAIOU",[[1,621,"\n"]],[612,612],[613,613]]],[1565867140422,["GJX@GJXAIOU",[[1,622,"\n"]],[613,613],[614,614]]],[1565867140671,["GJX@GJXAIOU",[[1,623,"\n"]],[614,614],[615,615]]],[1565878810813,["GJX@GJXAIOU",[[1,606,"\n"]],[598,598],[599,599]]],[1565878810927,["GJX@GJXAIOU",[[1,607,"\n"]],[599,599],[600,600]]],[1565878817133,["GJX@GJXAIOU",[[1,600,"### jian"]],[600,600],[608,608]]],[1565878818084,["GJX@GJXAIOU",[[-1,604,"jian"]],[608,608],[604,604]]],[1565878821450,["GJX@GJXAIOU",[[1,604,"监听器示例"]],[604,604],[609,609]]],[1565878821851,["GJX@GJXAIOU",[[1,617,"\n"]],[609,609],[610,610]]],[1565878830022,["GJX@GJXAIOU",[[1,610,"1.创建一个"]],[610,610],[616,616]]],[1565878833363,["GJX@GJXAIOU",[[-1,612,"创建一个"]],[616,616],[612,612]]],[1565878836870,["GJX@GJXAIOU",[[1,612,"自定义类"]],[612,612],[616,616]]],[1565878853102,["GJX@GJXAIOU",[[1,616,"实现对应的Listener"]],[616,616],[629,629]]],[1565878853126,["GJX@GJXAIOU",[[1,621," "]],[629,629],[630,630]]],[1565878862601,["GJX@GJXAIOU",[[1,630,"，同时重写方法；"]],[630,630],[638,638]]],[1565878862844,["GJX@GJXAIOU",[[1,646,"\n"]],[638,638],[639,639]]],[1565878866285,["GJX@GJXAIOU",[[1,639,"2.在w"]],[639,639],[643,643]]],[1565878866309,["GJX@GJXAIOU",[[1,642," "]],[643,643],[644,644]]],[1565878867648,["GJX@GJXAIOU",[[1,644,"eb.cm"]],[644,644],[649,649]]],[1565878868174,["GJX@GJXAIOU",[[-1,647,"cm"]],[649,649],[647,647]]],[1565878870009,["GJX@GJXAIOU",[[1,647,"xml中"]],[647,647],[651,651]]],[1565878870033,["GJX@GJXAIOU",[[1,650," "]],[651,651],[652,652]]],[1565878871367,["GJX@GJXAIOU",[[1,652,"配置"]],[652,652],[654,654]]],[1565878871964,["GJX@GJXAIOU",[[1,662,"\n"]],[654,654],[655,655]]],[1565878873428,["GJX@GJXAIOU",[[1,655,"```"]],[655,655],[658,658]]],[1565878873452,["GJX@GJXAIOU",[[1,658,"language\n```\n"]],[658,658],[658,666]]],[1565878877443,["GJX@GJXAIOU",[[-1,658,"language"]],[666,666],[658,658]]],[1565878878646,["GJX@GJXAIOU",[[1,658,"xml["]],[658,658],[662,662]]],[1565878879190,["GJX@GJXAIOU",[[-1,661,"["]],[662,662],[661,661]]],[1565878879652,["GJX@GJXAIOU",[[1,662,"\n"]],[661,661],[662,662]]],[1565878905045,["GJX@GJXAIOU",[[1,662,"<>"]],[662,662],[664,664]]],[1565878906372,["GJX@GJXAIOU",[[1,663,"lk"]],[663,663],[665,665]]],[1565878907296,["GJX@GJXAIOU",[[-1,664,"k"]],[665,665],[664,664]]],[1565878907824,["GJX@GJXAIOU",[[1,664,"li"]],[664,664],[666,666]]],[1565878908419,["GJX@GJXAIOU",[[-1,664,"li"]],[666,666],[664,664]]],[1565878909421,["GJX@GJXAIOU",[[1,664,"ise"]],[664,664],[667,667]]],[1565878909851,["GJX@GJXAIOU",[[-1,666,"e"]],[667,667],[666,666]]],[1565878910788,["GJX@GJXAIOU",[[1,666,"tener"]],[666,666],[671,671]]],[1565878915958,["GJX@GJXAIOU",[[1,673,"\n"]],[672,672],[673,673]]],[1565878916067,["GJX@GJXAIOU",[[1,674,"\n"]],[673,673],[674,674]]],[1565878917335,["GJX@GJXAIOU",[[1,674,"<>"]],[674,674],[676,676]]],[1565878921460,["GJX@GJXAIOU",[[1,675,"/listener"]],[675,675],[684,684]]],[1565878924572,["GJX@GJXAIOU",[[1,673,"  <>"]],[673,673],[677,677]]],[1565878932869,["GJX@GJXAIOU",[[1,676,"listener-class"]],[676,676],[690,690]]],[1565878935678,["GJX@GJXAIOU",[[1,691," <>"]],[691,691],[694,694]]],[1565878941093,["GJX@GJXAIOU",[[1,693,"listener-cal"]],[693,693],[705,705]]],[1565878942067,["GJX@GJXAIOU",[[-1,703,"al"]],[705,705],[703,703]]],[1565878942508,["GJX@GJXAIOU",[[1,703,"ls"]],[703,703],[705,705]]],[1565878943260,["GJX@GJXAIOU",[[-1,704,"s"]],[705,705],[704,704]]],[1565878943733,["GJX@GJXAIOU",[[1,704,"ass"]],[704,704],[707,707]]],[1565878948349,["GJX@GJXAIOU",[[1,693,"/"]],[693,693],[694,694]]],[1565878950211,["GJX@GJXAIOU",[[-1,691," "]],[692,692],[691,691]]],[1565878954426,["GJX@GJXAIOU",[[1,691,"完整的类名"]],[691,691],[696,696]]],[1565879001297,["GJX@GJXAIOU",[[1,732,"### 监听属性值得增加。"]],[732,732],[745,745]]],[1565879002443,["GJX@GJXAIOU",[[-1,744,"。"]],[745,745],[744,744]]],[1565879008058,["GJX@GJXAIOU",[[1,744,"、删除、更改"]],[744,744],[750,750]]],[1565879008475,["GJX@GJXAIOU",[[1,756,"\n"]],[750,750],[751,751]]],[1565879012159,["GJX@GJXAIOU",[[1,751,"- "]],[751,751],[753,753]]],[1565879050038,["GJX@GJXAIOU",[[1,753,"ServletContextAttributelistener\n\nHttpsession atTributelistener\n\nServletRequestAttribute Listener\n\n这个三个接口都需要实现以下方法\n\nattributeAdded setAttribυute时触发\n\natrⅰ bute Removed removeAttribute触发\n\nattributereplaced为已存在的键赋值新的值触发"]],[753,753],[968,968]]],[1565879053532,["GJX@GJXAIOU",[[-1,785,"\n"]],[786,786],[785,785]]],[1565879054022,["GJX@GJXAIOU",[[1,785,"- "]],[785,785],[787,787]]],[1565879063677,["GJX@GJXAIOU",[[-1,776,"l"]],[777,777],[776,776]]],[1565879064143,["GJX@GJXAIOU",[[1,776,"L"]],[776,776],[777,777]]],[1565879066765,["GJX@GJXAIOU",[[-1,791,"s"]],[792,792],[791,791]]],[1565879067104,["GJX@GJXAIOU",[[1,791,"S"]],[791,791],[792,792]]],[1565879071045,["GJX@GJXAIOU",[[-1,798," a"]],[800,800],[798,798]]],[1565879072352,["GJX@GJXAIOU",[[1,798,"A"]],[798,798],[799,799]]],[1565879073781,["GJX@GJXAIOU",[[-1,800,"T"]],[801,801],[800,800]]],[1565879074310,["GJX@GJXAIOU",[[1,800,"t"]],[800,800],[801,801]]],[1565879078078,["GJX@GJXAIOU",[[-1,807,"l"]],[808,808],[807,807]]],[1565879078446,["GJX@GJXAIOU",[[1,807,"L"]],[807,807],[808,808]]],[1565879080949,["GJX@GJXAIOU",[[-1,816,"\n"]],[817,817],[816,816]]],[1565879081494,["GJX@GJXAIOU",[[1,816,"-0 "]],[816,816],[819,819]]],[1565879082829,["GJX@GJXAIOU",[[-1,817,"0 "]],[819,819],[817,817]]],[1565879083040,["GJX@GJXAIOU",[[1,817," "]],[817,817],[818,818]]],[1565879086889,["GJX@GJXAIOU",[[-1,841," "]],[842,842],[841,841]]],[1565879090653,["GJX@GJXAIOU",[[-1,867,"\n"]],[867,867],[866,866]]],[1565879093735,["GJX@GJXAIOU",[[1,882,"     "]],[882,882],[887,887]]],[1565879095303,["GJX@GJXAIOU",[[-1,896,"υ"]],[897,897],[896,896]]],[1565879100510,["GJX@GJXAIOU",[[1,922,"   "]],[922,922],[925,925]]],[1565879102069,["GJX@GJXAIOU",[[-1,908," "]],[909,909],[908,908]]],[1565879104246,["GJX@GJXAIOU",[[-1,912," "]],[913,913],[912,912]]],[1565879107520,["GJX@GJXAIOU",[[1,906,"t"]],[906,906],[907,907]]],[1565879109013,["GJX@GJXAIOU",[[-1,903,"\n"]],[903,903],[902,902]]],[1565879111647,["GJX@GJXAIOU",[[-1,941,"\n"]],[941,941],[940,940]]],[1565879114011,["GJX@GJXAIOU",[[-1,950,"r"]],[951,951],[950,950]]],[1565879114176,["GJX@GJXAIOU",[[1,950,"a"]],[950,950],[951,951]]],[1565879116270,["GJX@GJXAIOU",[[-1,950,"a"]],[951,951],[950,950]]],[1565879117872,["GJX@GJXAIOU",[[1,950,"R"]],[950,950],[951,951]]],[1565879121928,["GJX@GJXAIOU",[[1,958,"    "]],[958,958],[962,962]]],[1565879123605,["GJX@GJXAIOU",[[1,887,"  "]],[887,887],[889,889]]],[1565879160632,["GJX@GJXAIOU",[[1,991,"## hany"]],[991,991],[998,998]]],[1565879161390,["GJX@GJXAIOU",[[-1,994,"hany"]],[998,998],[994,994]]],[1565879163116,["GJX@GJXAIOU",[[1,994," Hany"]],[994,994],[999,999]]],[1565879163893,["GJX@GJXAIOU",[[-1,995,"Hany"]],[999,999],[995,995]]],[1565879165263,["GJX@GJXAIOU",[[1,995,"含义"]],[995,995],[997,997]]],[1565879165995,["GJX@GJXAIOU",[[1,1007,"\n"]],[997,997],[998,998]]],[1565879169895,["GJX@GJXAIOU",[[1,998,"- quan"]],[998,998],[1004,1004]]],[1565879170724,["GJX@GJXAIOU",[[-1,999," quan"]],[1004,1004],[999,999]]],[1565879172013,["GJX@GJXAIOU",[[1,999," quan"]],[999,999],[1004,1004]]],[1565879172827,["GJX@GJXAIOU",[[-1,1000,"quan"]],[1004,1004],[1000,1000]]],[1565879182969,["GJX@GJXAIOU",[[1,1000,"全称：Asynchtonous"]],[1000,1000],[1015,1015]]],[1565879189159,["GJX@GJXAIOU",[[-1,1009,"t"]],[1010,1010],[1009,1009]]],[1565879189511,["GJX@GJXAIOU",[[1,1009,"r"]],[1009,1009],[1010,1010]]],[1565879197804,["GJX@GJXAIOU",[[1,1015,"  JavaScrit"]],[1015,1015],[1026,1026]]],[1565879198007,["GJX@GJXAIOU",[[1,1026,"p"]],[1026,1026],[1027,1027]]],[1565879199254,["GJX@GJXAIOU",[[-1,1025,"tp"]],[1027,1027],[1025,1025]]],[1565879204062,["GJX@GJXAIOU",[[1,1025,"pt and XML"]],[1025,1025],[1035,1035]]],[1565879206022,["GJX@GJXAIOU",[[1,1036,"- \n"]],[1035,1035],[1038,1038]]],[1565879207395,["GJX@GJXAIOU",[[-1,1036,"- "]],[1038,1038],[1036,1036]]],[1565879212477,["GJX@GJXAIOU",[[1,1036,"Ajax通过"]],[1036,1036],[1042,1042]]],[1565879212502,["GJX@GJXAIOU",[[1,1040," "]],[1042,1042],[1043,1043]]],[1565879222443,["GJX@GJXAIOU",[[1,1043,"与服务器进行少量的数据交互，可以是"]],[1043,1043],[1060,1060]]],[1565879222943,["GJX@GJXAIOU",[[-1,1059,"是"]],[1060,1060],[1059,1059]]],[1565879249173,["GJX@GJXAIOU",[[1,1059,"使网页实现异步局部的更新，意味着可以在不重新架子啊"]],[1059,1059],[1084,1084]]],[1565879250552,["GJX@GJXAIOU",[[-1,1081,"架子啊"]],[1084,1084],[1081,1081]]],[1565879256575,["GJX@GJXAIOU",[[1,1081,"加载这个"]],[1081,1081],[1085,1085]]],[1565879282645,["GJX@GJXAIOU",[[1,1085,"网页的情况下，对网页的某部分进行更新。"]],[1085,1085],[1104,1104]]],[1565879283178,["GJX@GJXAIOU",[[1,1114,"\n"]],[1104,1104],[1105,1105]]],[1565879287133,["GJX@GJXAIOU",[[-1,1114,"\n"]],[1105,1105],[1104,1104]]],[1565879287968,["GJX@GJXAIOU",[[1,1104,"（）"]],[1104,1104],[1106,1106]]],[1565879293930,["GJX@GJXAIOU",[[1,1105,"传统额"]],[1105,1105],[1108,1108]]],[1565879294741,["GJX@GJXAIOU",[[-1,1107,"额"]],[1108,1108],[1107,1107]]],[1565879304242,["GJX@GJXAIOU",[[1,1107,"的网页需要更新内筒"]],[1107,1107],[1116,1116]]],[1565879304989,["GJX@GJXAIOU",[[-1,1114,"内筒"]],[1116,1116],[1114,1114]]],[1565879315063,["GJX@GJXAIOU",[[1,1114,"内容必须重载整个"]],[1114,1114],[1122,1122]]],[1565879319391,["GJX@GJXAIOU",[[1,1122,"网页"]],[1122,1122],[1124,1124]]],[1565879321475,["GJX@GJXAIOU",[[1,1135,"\n"]],[1125,1125],[1126,1126]]],[1565879322555,["GJX@GJXAIOU",[[1,1136,"\n"]],[1126,1126],[1127,1127]]],[1565879326007,["GJX@GJXAIOU",[[1,1127,"- "]],[1127,1127],[1129,1129]]],[1565879327037,["GJX@GJXAIOU",[[-1,1127,"- "]],[1129,1129],[1127,1127]]],[1565879327491,["GJX@GJXAIOU",[[-1,1136,"\n"]],[1127,1127],[1126,1126]]],[1565879328190,["GJX@GJXAIOU",[[1,1136,"\n"]],[1126,1126],[1127,1127]]],[1565879333808,["GJX@GJXAIOU",[[1,1127,"Ajax需要"]],[1127,1127],[1133,1133]]],[1565879333834,["GJX@GJXAIOU",[[1,1131," "]],[1133,1133],[1134,1134]]],[1565879354210,["GJX@GJXAIOU",[[1,1134,"：HTML、CSS、JavaScript、Servlet做"]],[1134,1134],[1163,1163]]],[1565879354235,["GJX@GJXAIOU",[[1,1162," "]],[1163,1163],[1164,1164]]],[1565879356648,["GJX@GJXAIOU",[[1,1164,"技术职称"]],[1164,1164],[1168,1168]]],[1565879357309,["GJX@GJXAIOU",[[-1,1166,"职称"]],[1168,1168],[1166,1166]]],[1565879360009,["GJX@GJXAIOU",[[1,1166,"支撑；"]],[1166,1166],[1169,1169]]],[1565879395412,["GJX@GJXAIOU",[[1,1171,"### "]],[1171,1171],[1175,1175]]],[1565879397356,["GJX@GJXAIOU",[[-1,1173,"# "]],[1175,1175],[1173,1173]]],[1565879402192,["GJX@GJXAIOU",[[1,1173," 传统的端与服务器交换数据流程(传\n\n统\n\n1客户端发起一个get或者post请求并且携带参数\n\n2目前已知客户端发起请求的方式都会有页面跳转效\n\n果\n\n3服务器(jSp, servlet)接受到客户端参数执行操作(\n\n业务逻辑判断,数据库增删改查)\n\n4服务根据执行的结果转发或者重定向"]],[1173,1173],[1317,1317]]],[1565879407510,["GJX@GJXAIOU",[[1,1177,"客户端"]],[1177,1177],[1180,1180]]],[1565879408662,["GJX@GJXAIOU",[[-1,1180,"端"]],[1180,1180],[1179,1179]]],[1565879413165,["GJX@GJXAIOU",[[-1,1191,"传\n\n统"]],[1191,1195],[1191,1191]]],[1565879425140,["GJX@GJXAIOU",[[-1,1244,"\n"]],[1245,1245],[1244,1244]]],[1565879425461,["GJX@GJXAIOU",[[-1,1243,"\n"]],[1244,1244],[1243,1243]]],[1565879439701,["GJX@GJXAIOU",[[-1,1252,"S"]],[1253,1253],[1252,1252]]],[1565879440617,["GJX@GJXAIOU",[[1,1252,"s"]],[1252,1252],[1253,1253]]],[1565879444781,["GJX@GJXAIOU",[[-1,1278,"\n"]],[1279,1279],[1278,1278]]],[1565879445240,["GJX@GJXAIOU",[[-1,1277,"\n"]],[1278,1278],[1277,1277]]],[1565879450303,["GJX@GJXAIOU",[[-1,1293,"\n"]],[1293,1293],[1292,1292]]],[1565879451029,["GJX@GJXAIOU",[[-1,1245,"\n"]],[1245,1245],[1244,1244]]],[1565879451645,["GJX@GJXAIOU",[[-1,1219,"\n"]],[1219,1219],[1218,1218]]],[1565879480930,["GJX@GJXAIOU",[[1,1316,"\n"]],[1311,1311],[1312,1312]]],[1565879483718,["GJX@GJXAIOU",[[1,1312,"## 可ax核心类: XmlhtTprequEst\n\nXHR是 Javascript中的类,执行在客户端。中文可以解释为可扩展超\n\n文本传输请求,此类在js中使用。\n\nXmlhTtpreqUest对象提供了对HTTP协议的完全的访问,包括做出\n\nPOST和HEAD请求以及普通的GET请求的能力。 XmlhTtpreqUest\n\n可以同步或异步返回Web服务器的响应,并且能以文本或者一个\n\nDOM文档形式返回内容。尽管名为 XmlhTtpreqUesT,它并不限于和\n\nXML文档一起使用:它可以接收任何形式的文本文档。\n\n使用步骤:\n\n1 XmlhTtpreqUest创建\n\n2 XmlhTtprequEst请求\n\n3 XmlhTtpreqUest响应"]],[1312,1312],[1640,1640]]],[1565879486108,["GJX@GJXAIOU",[[-1,1315,"可"]],[1315,1316],[1315,1315]]],[1565879487669,["GJX@GJXAIOU",[[1,1315,"Aj"]],[1315,1315],[1317,1317]]],[1565879494164,["GJX@GJXAIOU",[[-1,1325,"ml"]],[1324,1327],[1325,1325]]],[1565879494606,["GJX@GJXAIOU",[[1,1325,"ML"]],[1325,1325],[1327,1327]]],[1565879497566,["GJX@GJXAIOU",[[-1,1327,"htT"]],[1330,1330],[1327,1327]]],[1565879499932,["GJX@GJXAIOU",[[1,1327,"Htt"]],[1327,1327],[1330,1330]]],[1565879500055,["GJX@GJXAIOU",[[1,1331,"p"]],[1330,1330],[1331,1331]]],[1565879501863,["GJX@GJXAIOU",[[-1,1331,"p"]],[1332,1332],[1331,1331]]],[1565879503949,["GJX@GJXAIOU",[[-1,1335,"E"]],[1336,1336],[1335,1335]]],[1565879504487,["GJX@GJXAIOU",[[1,1335,"e"]],[1335,1335],[1336,1336]]],[1565879514620,["GJX@GJXAIOU",[[-1,1378,"\n"]],[1379,1379],[1378,1378]]],[1565879514830,["GJX@GJXAIOU",[[-1,1377,"\n"]],[1378,1378],[1377,1377]]],[1565879527255,["GJX@GJXAIOU",[[-1,1331,"r"]],[1332,1332],[1331,1331]]],[1565879527725,["GJX@GJXAIOU",[[1,1331,"R"]],[1331,1331],[1332,1332]]],[1565879533255,["GJX@GJXAIOU",[[-1,1396,"mlhTtpreqU"],[1,1406,"MLHttpRequ"]],[1395,1409],[1409,1409]]],[1565879539634,["GJX@GJXAIOU",[[-1,1433,"\n"]],[1434,1434],[1433,1433]]],[1565879540396,["GJX@GJXAIOU",[[-1,1432,"\n"]],[1433,1433],[1432,1432]]],[1565879547943,["GJX@GJXAIOU",[[-1,1459,"mlhTtpreqU"],[1,1469,"MLHttpRequ"],[-1,1472,"\n"]],[1458,1473],[1472,1472]]],[1565879551136,["GJX@GJXAIOU",[[-1,1472,"\n"]],[1473,1473],[1472,1472]]],[1565879557038,["GJX@GJXAIOU",[[-1,1502,"\n"]],[1503,1503],[1502,1502]]],[1565879557373,["GJX@GJXAIOU",[[-1,1501,"\n"]],[1502,1502],[1501,1501]]],[1565879563230,["GJX@GJXAIOU",[[-1,1519,"mlhTtpreqUesT"],[1,1532,"MLHttpRequest"]],[1518,1532],[1532,1532]]],[1565879567022,["GJX@GJXAIOU",[[-1,1540,"\n"]],[1541,1541],[1540,1540]]],[1565879567600,["GJX@GJXAIOU",[[-1,1539,"\n"]],[1540,1540],[1539,1539]]],[1565879572318,["GJX@GJXAIOU",[[-1,1572,"\n"]],[1572,1572],[1571,1571]]],[1565879575445,["GJX@GJXAIOU",[[-1,1591,"\n"]],[1591,1591],[1590,1590]]],[1565879577428,["GJX@GJXAIOU",[[-1,1610,"\n"]],[1610,1610],[1609,1609]]],[1565879581679,["GJX@GJXAIOU",[[-1,1575,"mlhTtpreqU"],[1,1585,"MLHttpRequ"]],[1574,1588],[1588,1588]]],[1565879585228,["GJX@GJXAIOU",[[-1,1594,"mlhTtprequE"],[1,1605,"MLHttpReque"]],[1593,1607],[1607,1607]]],[1565879588006,["GJX@GJXAIOU",[[-1,1613,"mlhTtpreqU"],[1,1623,"MLHttpRequ"]],[1612,1626],[1626,1626]]],[1565879609207,["GJX@GJXAIOU",[[1,1630,"## 带见使用aX的地万\n\n}1第一、输入值校验的问题申请用户的时候检查用户名是否重复\n\n2第二、层级联动显示的问题。级联菜单,导航树等\n\n}3第三、请求结果只改变部分页面,数据录入和列表显示在同一个页\n\n面如,论坛的回复帖子和帖子列表在一个页面上的时候。\n\n4第四、由于技术原因而使用 iframe的问题避免 iframe的嵌套引入的\n\n技术难题\n\n5第五、翻页,下一页。不需要刷新的翻页"]],[1630,1630],[1825,1825]]],[1565879611981,["GJX@GJXAIOU",[[-1,1641,"万"]],[1642,1642],[1641,1641]]],[1565879612821,["GJX@GJXAIOU",[[1,1641,"f"]],[1641,1641],[1642,1642]]],[1565879612850,["GJX@GJXAIOU",[[1,1641," "]],[1642,1642],[1643,1643]]],[1565879613078,["GJX@GJXAIOU",[[1,1643,"ang"]],[1643,1643],[1646,1646]]],[1565879614684,["GJX@GJXAIOU",[[-1,1641," fang"]],[1646,1646],[1641,1641]]],[1565879616396,["GJX@GJXAIOU",[[1,1641,"方"]],[1641,1641],[1642,1642]]],[1565879621700,["GJX@GJXAIOU",[[1,1637,"Ajax"]],[1637,1637],[1641,1641]]],[1565879621726,["GJX@GJXAIOU",[[1,1637," "]],[1641,1641],[1642,1642]]],[1565879623757,["GJX@GJXAIOU",[[-1,1642,"aX"]],[1644,1644],[1642,1642]]],[1565879626109,["GJX@GJXAIOU",[[-1,1633,"带见"]],[1635,1635],[1633,1633]]],[1565879627409,["GJX@GJXAIOU",[[1,1633,"常见"]],[1633,1633],[1635,1635]]],[1565879629879,["GJX@GJXAIOU",[[-1,1647,"}"]],[1648,1648],[1647,1647]]],[1565879636983,["GJX@GJXAIOU",[[1,1659,"，"]],[1659,1659],[1660,1660]]],[1565879640637,["GJX@GJXAIOU",[[-1,1677,"\n"]],[1677,1677],[1676,1676]]],[1565879644869,["GJX@GJXAIOU",[[-1,1701,"\n"]],[1701,1701],[1700,1700]]],[1565879645772,["GJX@GJXAIOU",[[-1,1701,"}"]],[1702,1702],[1701,1701]]],[1565879650552,["GJX@GJXAIOU",[[-1,1732,"\n"]],[1733,1733],[1732,1732]]],[1565879651164,["GJX@GJXAIOU",[[-1,1731,"\n"]],[1732,1732],[1731,1731]]],[1565879655869,["GJX@GJXAIOU",[[-1,1757,"\n"]],[1757,1757],[1756,1756]]],[1565879662427,["GJX@GJXAIOU",[[-1,1796,"\n"]],[1797,1797],[1796,1796]]],[1565879662997,["GJX@GJXAIOU",[[-1,1795,"\n"]],[1796,1796],[1795,1795]]],[1565879664536,["GJX@GJXAIOU",[[-1,1800,"\n"]],[1801,1801],[1800,1800]]],[1565879667396,["GJX@GJXAIOU",[[1,1822,"\n"]],[1819,1819],[1820,1820]]],[1565879692716,["GJX@GJXAIOU",[[1,1821,"## 使用基本流程\n\n1添加点击事件I\n\n非连接标签\n\n如果是连接标签,因为标签本身有动作。\n\n所以会造成冲突需要做以下处理\n\n<a\n\nhref= javascript void(O); onclick=\"loadAjaxo\">"]],[1821,1821],[1935,1935]]],[1565879700005,["GJX@GJXAIOU",[[1,1824,"Ajax "]],[1824,1824],[1828,1828]]]],null,"GJX@GJXAIOU"],["029b8bb5-3945-42ad-b33a-0d0c36d2c214",1565916996112,"# JavaEEDay48 监听器\n\n\n## 概念\n- 监听你的 web 应用，监听许多信息的初始化、销毁、增加、修改、删除值等；\n- 监听器用于监听一些重要事件的发生，监听器对象可以在事情发生前、发生后可以做一些必要的处理；\n- 主要使用场景：实现系统的日志；\n\n\n## 类型分类\n- 按监听的对象划分:\n1用于监听应用程序环境对象( ServletContext)的事件监听器\n2用于监听用户会话对象( HttpSession)的事件监听器\n3用于监听请求消息对象( ServletRequest)的事件监听器\n\n- 按监听的事件划分\n1用于监听域对象自身的创建和销毁的事件监听器\n2用于监听域对象中的属性的增加和删除的事件监听器\n3用于监听绑定到 HttpSession域中的某个对象的状态的事件监听器\n\n### 涉及到的类\n\nServletContextListener监听生命周期\nHttpsessionListener\nServlet RequestListener\n\nServletContextAttributeListener\nHttpSessionAttributeListener\nServletRequestAttributeListener \n\nHttpsessionBindingListener\nHttpSessionActivationListener (略)\n\n\n\n### 监听器示例\n1.自定义类实现对应的 Listener，同时重写方法；\n2.在 web.xml 中配置\n```xml\n<listener>\n  <listener-class>完整的类名</listener-class>\n</listener>\n```\n\n\n### 监听属性值得增加、删除、更改\n- ServletContextAttributeListener\n- HttpSessionAttributeListener\n- ServletRequestAttributeListener\n\n这个三个接口都需要实现以下方法\nattributeAdded        setAttribute时触发\nattrⅰbuteRemoved    removeAttribute触发\nattributeReplaced    为已存在的键赋值新的值触发\n\n\n\n\n\n# Ajax\n\n##  含义\n- 全称：Asynchronous  JavaScript and XML\nAjax 通过与服务器进行少量的数据交互，可以使网页实现异步局部的更新，意味着可以在不重新加载这个网页的情况下，对网页的某部分进行更新。（传统的网页需要更新内容必须重载整个网页）\n\nAjax 需要：HTML、CSS、JavaScript、Servlet 做技术支撑；\n\n## 传统的客户端与服务器交换数据流程(\n\n1客户端发起一个get或者post请求并且携带参数\n2目前已知客户端发起请求的方式都会有页面跳转效果\n3服务器(jsp, servlet)接受到客户端参数执行操作(业务逻辑判断,数据库增删改查)\n4服务根据执行的结果转发或者重定向\n\n\n\n## Ajax核心类: XMLHttpRequest\n\nXHR是 Javascript中的类,执行在客户端。中文可以解释为可扩展超文本传输请求,此类在js中使用。\n\nXMLHttpRequest对象提供了对HTTP协议的完全的访问,包括做出POST和HEAD请求以及普通的GET请求的能力。 XMLHttpRequest可以同步或异步返回Web服务器的响应,并且能以文本或者一个DOM文档形式返回内容。尽管名为 XMLHttpRequest,它并不限于和XML文档一起使用:它可以接收任何形式的文本文档。\n\n使用步骤:\n1 XMLHttpRequest创建\n2 XMLHttpRequest请求\n3 XMLHttpRequest响应\n\n## 常见使用 Ajax的地方\n\n1第一、输入值校验的问题，申请用户的时候检查用户名是否重复\n2第二、层级联动显示的问题。级联菜单,导航树等\n3第三、请求结果只改变部分页面,数据录入和列表显示在同一个页面如,论坛的回复帖子和帖子列表在一个页面上的时候。\n4第四、由于技术原因而使用 iframe的问题避免 iframe的嵌套引入的技术难题\n5第五、翻页,下一页。不需要刷新的翻页\n\n## Ajax 使用基本流程\n\n1添加点击事件I\n\n非连接标签\n\n如果是连接标签,因为标签本身有动作。\n\n所以会造成冲突需要做以下处理\n\n<a\n\nhref= javascript void(O); onclick=\"loadAjaxo\">\n\n",[[1565916965001,["GJX@GJXAIOU",[[-1,154,"1"]],[154,155],[154,154]]],[1565916965900,["GJX@GJXAIOU",[[-1,190,"2"]],[191,191],[190,190]]],[1565916966957,["GJX@GJXAIOU",[[-1,221,"3"]],[222,222],[221,221]]],[1565916968116,["GJX@GJXAIOU",[[-1,267,"1"]],[268,268],[267,267]]],[1565916969079,["GJX@GJXAIOU",[[-1,289,"2"]],[290,290],[289,289]]],[1565916970158,["GJX@GJXAIOU",[[-1,313,"3"]],[314,314],[313,313]]],[1565916975862,["GJX@GJXAIOU",[[1,267,"- "],[1,289,"- "],[1,313,"- "]],[267,348],[269,354]]],[1565916977036,["GJX@GJXAIOU",[[1,267,"  "],[1,291,"  "],[1,317,"  "]],[269,354],[271,360]]],[1565916980429,["GJX@GJXAIOU",[[1,154,"- "],[1,190,"- "],[1,221,"- "]],[154,254],[156,260]]],[1565916981014,["GJX@GJXAIOU",[[1,154,"  "],[1,192,"  "],[1,225,"  "]],[156,260],[158,266]]],[1565916984023,["GJX@GJXAIOU",[[1,278,"："]],[278,278],[279,279]]],[1565916993093,["GJX@GJXAIOU",[[-1,419,"s"]],[420,420],[419,419]]],[1565916994863,["GJX@GJXAIOU",[[1,419,"S"]],[419,419],[420,420]]],[1565916997053,["GJX@GJXAIOU",[[-1,442," "]],[443,443],[442,442]]],[1565917014335,["GJX@GJXAIOU",[[1,1082,"**"],[1,1089,"**"]],[1082,1089],[1082,1093]]],[1565917034788,["GJX@GJXAIOU",[[-1,1212,"("]],[1213,1213],[1212,1212]]],[1565917036331,["GJX@GJXAIOU",[[-1,1214,"1"]],[1214,1215],[1214,1214]]],[1565917038861,["GJX@GJXAIOU",[[-1,1239,"2"]],[1239,1240],[1239,1239]]],[1565917044692,["GJX@GJXAIOU",[[-1,1263,"3"]],[1263,1264],[1263,1263]]],[1565917056739,["GJX@GJXAIOU",[[-1,1309,"4"]],[1310,1310],[1309,1309]]],[1565917060788,["GJX@GJXAIOU",[[1,1214,"* "],[1,1239,"* "],[1,1263,"* "],[1,1309,"* "]],[1214,1325],[1216,1333]]]],null,"GJX@GJXAIOU"],["92790c65-ef31-4ed9-97ad-e2f86878eb8d",1565934066831,"# JavaEEDay48 监听器\n\n\n## 概念\n- 监听你的 web 应用，监听许多信息的初始化、销毁、增加、修改、删除值等；\n- 监听器用于监听一些重要事件的发生，监听器对象可以在事情发生前、发生后可以做一些必要的处理；\n- 主要使用场景：实现系统的日志；\n\n\n## 类型分类\n- 按监听的对象划分:\n  - 用于监听应用程序环境对象( ServletContext)的事件监听器\n  - 用于监听用户会话对象( HttpSession)的事件监听器\n  - 用于监听请求消息对象( ServletRequest)的事件监听器\n\n- 按监听的事件划分：\n  - 用于监听域对象自身的创建和销毁的事件监听器\n  - 用于监听域对象中的属性的增加和删除的事件监听器\n  - 用于监听绑定到 HttpSession域中的某个对象的状态的事件监听器\n\n### 涉及到的类\n\nServletContextListener监听生命周期\nHttpSessionListener\nServletRequestListener\n\nServletContextAttributeListener\nHttpSessionAttributeListener\nServletRequestAttributeListener \n\nHttpsessionBindingListener\nHttpSessionActivationListener (略)\n\n\n\n### 监听器示例\n1.自定义类实现对应的 Listener，同时重写方法；\n2.在 web.xml 中配置\n```xml\n<listener>\n  <listener-class>完整的类名</listener-class>\n</listener>\n```\n\n\n### 监听属性值得增加、删除、更改\n- ServletContextAttributeListener\n- HttpSessionAttributeListener\n- ServletRequestAttributeListener\n\n这个三个接口都需要实现以下方法\nattributeAdded        setAttribute时触发\nattrⅰbuteRemoved    removeAttribute触发\nattributeReplaced    为已存在的键赋值新的值触发\n\n\n\n\n\n# Ajax\n\n##  含义\n- 全称：Asynchronous  JavaScript and XML\nAjax 通过与服务器进行少量的数据交互，可以使网页实现**异步局部的更新**，意味着可以在不重新加载这个网页的情况下，对网页的某部分进行更新。（传统的网页需要更新内容必须重载整个网页）\n\nAjax 需要：HTML、CSS、JavaScript、Servlet 做技术支撑；\n\n## 传统的客户端与服务器交换数据流程\n\n* 客户端发起一个get或者post请求并且携带参数\n* 目前已知客户端发起请求的方式都会有页面跳转效果\n* 服务器(jsp, servlet)接受到客户端参数执行操作(业务逻辑判断,数据库增删改查)\n* 服务根据执行的结果转发或者重定向\n\n\n\n## Ajax核心类: XMLHttpRequest\n\nXHR是 Javascript中的类,执行在客户端。中文可以解释为可扩展超文本传输请求,此类在js中使用。\n\nXMLHttpRequest对象提供了对HTTP协议的完全的访问,包括做出POST和HEAD请求以及普通的GET请求的能力。 XMLHttpRequest可以同步或异步返回Web服务器的响应,并且能以文本或者一个DOM文档形式返回内容。尽管名为 XMLHttpRequest,它并不限于和XML文档一起使用:它可以接收任何形式的文本文档。\n\n使用步骤:\n1 XMLHttpRequest创建\n2 XMLHttpRequest请求\n3 XMLHttpRequest响应\n\n## 常见使用 Ajax的地方\n\n1第一、输入值校验的问题，申请用户的时候检查用户名是否重复\n2第二、层级联动显示的问题。级联菜单,导航树等\n3第三、请求结果只改变部分页面,数据录入和列表显示在同一个页面如,论坛的回复帖子和帖子列表在一个页面上的时候。\n4第四、由于技术原因而使用 iframe的问题避免 iframe的嵌套引入的技术难题\n5第五、翻页,下一页。不需要刷新的翻页\n\n## Ajax 使用基本流程\n\n1添加点击事件I\n\n非连接标签\n\n如果是连接标签,因为标签本身有动作。\n\n所以会造成冲突需要做以下处理\n\n<a\n\nhref= javascript void(O); onclick=\"loadAjaxo\">\n\n",[[1565934054938,["GJX@GJXAIOU",[[-1,1869,"I"]],[1870,1870],[1869,1869]]],[1565934057109,["GJX@GJXAIOU",[[-1,1862,"1"]],[1863,1863],[1862,1862]]],[1565934057264,["GJX@GJXAIOU",[[-1,1861,"\n"]],[1862,1862],[1861,1861]]],[1565934058455,["GJX@GJXAIOU",[[1,1861,"- "]],[1861,1861],[1863,1863]]],[1565934063830,["GJX@GJXAIOU",[[-1,1870,"\n"]],[1871,1871],[1870,1870]]],[1565934063990,["GJX@GJXAIOU",[[-1,1869,"\n"]],[1870,1870],[1869,1869]]],[1565934069926,["GJX@GJXAIOU",[[1,1875,"）"]],[1875,1875],[1876,1876]]],[1565934094534,["GJX@GJXAIOU",[[-1,1861,"- 添加点击事件（非连接标签）\n\n如果是连接标签,因为标签本身有动作。\n\n所以会造成冲突需要做以下处理\n\n<a\n\nhref= javascript void(O); onclick=\"loadAjaxo\">"]],[1861,1964],[1861,1861]]],[1565934096471,["GJX@GJXAIOU",[[-1,1846,"## Ajax 使用基本流程"]],[1846,1860],[1846,1846]]],[1565934185800,[null,[[1,1848,"\n"]],[1848,1848],[1849,1849]]],[1565934185800,[null,[[-1,1848,"\n"]],[1849,1849],[1848,1848]]],[1565934169297,["GJX@GJXAIOU",[[1,1655,"\n"]],[1654,1654],[1655,1655]]],[1565934169430,["GJX@GJXAIOU",[[1,1656,"\n"]],[1655,1655],[1656,1656]]],[1565934173099,["GJX@GJXAIOU",[[1,1656,"### 入mlhttpREques请求\n\nXmlhttpreQuEst请求相关的方法\n\nxhr.open(\"Get\",\"testI. html\", true)\n\n规定请求的类型、URL以及是否异步处理请求。\n\nmethod:请求的类型;GET或POST\n\nurl:文件在服务器上的位置\n\nasync:true(异步)或 false(同步)\n\nxhr. send(username name )\n\n将请求发送到服务器\n\nstring:仅用于POST请求。ge请求参数在open里的u中直接后缀\n\n添加。ⅹhr. setRequestheader(\" Content-type\",\n\napplication/X-WWw-form\n\nurlencode)"]],[1656,1656],[1980,1980]]],[1565934182846,["GJX@GJXAIOU",[[-1,1660,"入mlh"],[1,1664,"XMLH"],[-1,1668,"E"],[1,1669,"e"],[1,1673,"t"]],[1660,1673],[1674,1674]]],[1565934245800,[null,[[1,2175,"\n"]],[2175,2175],[2176,2176]]],[1565934245800,[null,[[-1,2175,"\n"]],[2176,2176],[2175,2175]]],[1565934188356,["GJX@GJXAIOU",[[1,1676,"相关的方法"]],[1676,1676],[1681,1681]]],[1565934202502,["GJX@GJXAIOU",[[-1,1683,"XmlhttpreQuEst请求相关的方法\n"]],[1682,1704],[1682,1682]]],[1565934205216,["GJX@GJXAIOU",[[-1,1683,"\n"]],[1684,1684],[1683,1683]]],[1565934207665,["GJX@GJXAIOU",[[1,1683,"- ·"]],[1683,1683],[1686,1686]]],[1565934208942,["GJX@GJXAIOU",[[-1,1685,"·"]],[1686,1686],[1685,1685]]],[1565934209393,["GJX@GJXAIOU",[[1,1685,"`"]],[1685,1685],[1686,1686]]],[1565934210928,["GJX@GJXAIOU",[[1,1721,"`"]],[1721,1721],[1722,1722]]],[1565934215581,["GJX@GJXAIOU",[[-1,1706,"I"]],[1707,1707],[1706,1706]]],[1565934220150,["GJX@GJXAIOU",[[-1,1722,"\n"]],[1723,1723],[1722,1722]]],[1565934222759,["GJX@GJXAIOU",[[-1,1745,"\n"]],[1746,1746],[1745,1745]]],[1565934225237,["GJX@GJXAIOU",[[-1,1767,"\n"]],[1768,1768],[1767,1767]]],[1565934227254,["GJX@GJXAIOU",[[-1,1782,"\n"]],[1783,1783],[1782,1782]]],[1565934235112,["GJX@GJXAIOU",[[1,1809,"- "]],[1809,1809],[1811,1811]]],[1565934239766,["GJX@GJXAIOU",[[1,1745,"  "],[1,1767,"  "],[1,1782,"  "]],[1745,1807],[1745,1813]]],[1565934241095,["GJX@GJXAIOU",[[1,1747,"* "],[1,1771,"* "],[1,1787," *"]],[1745,1813],[1747,1819]]],[1565934305799,[null,[[1,2170,"\n"]],[2170,2170],[2171,2171]]],[1565934305799,[null,[[-1,2170,"\n"]],[2171,2171],[2170,2170]]],[1565934250528,["GJX@GJXAIOU",[[1,1833,"\""]],[1833,1833],[1834,1834]]],[1565934250555,["GJX@GJXAIOU",[[-1,1833,"\""],[1,1834,"“"]],[1834,1834],[1834,1834]]],[1565934254158,["GJX@GJXAIOU",[[1,1843," "]],[1842,1842],[1843,1843]]],[1565934254593,["GJX@GJXAIOU",[[1,1843,"="]],[1843,1843],[1844,1844]]],[1565934258025,["GJX@GJXAIOU",[[1,1849,"\""]],[1849,1849],[1850,1850]]],[1565934258054,["GJX@GJXAIOU",[[-1,1849,"\""],[1,1850,"”"]],[1850,1850],[1850,1850]]],[1565934261234,["GJX@GJXAIOU",[[1,1852,";"]],[1852,1852],[1853,1853]]],[1565934267561,["GJX@GJXAIOU",[[-1,1854,"\n"]],[1855,1855],[1854,1854]]],[1565934272158,["GJX@GJXAIOU",[[-1,1864,"\n"]],[1865,1865],[1864,1864]]],[1565934279701,["GJX@GJXAIOU",[[1,1883,"t "]],[1883,1883],[1884,1884]]],[1565934286411,["GJX@GJXAIOU",[[1,1897,"r "]],[1897,1897],[1898,1898]]],[1565934286529,["GJX@GJXAIOU",[[1,1898,"l"]],[1898,1898],[1899,1899]]],[1565934290629,["GJX@GJXAIOU",[[-1,1906,"\n"]],[1907,1907],[1906,1906]]],[1565934291016,["GJX@GJXAIOU",[[-1,1905,"\n"]],[1906,1906],[1905,1905]]],[1565934294678,["GJX@GJXAIOU",[[1,1908,"\n"]],[1908,1908],[1909,1909]]],[1565934297647,["GJX@GJXAIOU",[[1,1909,"\n"]],[1909,1909],[1910,1910]]],[1565934365801,[null,[[1,2178,"\n"]],[2178,2178],[2179,2179]]],[1565934365801,[null,[[-1,2178,"\n"]],[2179,2179],[2178,2178]]],[1565934310727,["GJX@GJXAIOU",[[-1,1949,"\n"]],[1950,1950],[1949,1949]]],[1565934311087,["GJX@GJXAIOU",[[-1,1948,"\n"]],[1949,1949],[1948,1948]]],[1565934313328,["GJX@GJXAIOU",[[-1,1971,"\n"]],[1972,1972],[1971,1971]]],[1565934313664,["GJX@GJXAIOU",[[-1,1970,"\n"]],[1971,1971],[1970,1970]]],[1565934316138,["GJX@GJXAIOU",[[1,1970,"-"]],[1970,1970],[1971,1971]]],[1565934321974,["GJX@GJXAIOU",[[-1,1962,"WWw"]],[1965,1965],[1962,1962]]],[1565934323536,["GJX@GJXAIOU",[[1,1962,"www"]],[1962,1962],[1965,1965]]],[1565934325175,["GJX@GJXAIOU",[[-1,1960,"X"]],[1961,1961],[1960,1960]]],[1565934325481,["GJX@GJXAIOU",[[1,1960,"x"]],[1960,1960],[1961,1961]]],[1565934334818,["GJX@GJXAIOU",[[1,1980,"d\""]],[1980,1980],[1982,1982]]],[1565934334846,["GJX@GJXAIOU",[[-1,1981,"\""],[1,1982,"“"]],[1982,1982],[1982,1982]]],[1565934339699,["GJX@GJXAIOU",[[1,1948,"v "]],[1948,1948],[1950,1950]]],[1565934341151,["GJX@GJXAIOU",[[-1,1948,"v "]],[1950,1950],[1948,1948]]],[1565934342320,["GJX@GJXAIOU",[[1,1948," \""]],[1948,1948],[1950,1950]]],[1565934342348,["GJX@GJXAIOU",[[-1,1949,"\""],[1,1950,"“"]],[1950,1950],[1950,1950]]],[1565934345335,["GJX@GJXAIOU",[[1,1986,"\n"]],[1986,1986],[1987,1987]]],[1565934347537,["GJX@GJXAIOU",[[1,1910,"- "]],[1910,1910],[1912,1912]]],[1565934352953,["GJX@GJXAIOU",[[-1,1927,"h"]],[1928,1928],[1927,1927]]],[1565934353912,["GJX@GJXAIOU",[[1,1927,"H"]],[1927,1927],[1928,1928]]],[1565934425802,[null,[[1,2182,"\n"]],[2182,2182],[2183,2183]]],[1565934425802,[null,[[-1,2182,"\n"]],[2183,2183],[2182,2182]]],[1565934400711,["GJX@GJXAIOU",[[1,1989,"\n"]],[1988,1988],[1989,1989]]],[1565934400872,["GJX@GJXAIOU",[[1,1990,"\n"]],[1989,1989],[1990,1990]]],[1565934401039,["GJX@GJXAIOU",[[1,1991,"\n"]],[1990,1990],[1991,1991]]],[1565934401183,["GJX@GJXAIOU",[[1,1992,"\n"]],[1991,1991],[1992,1992]]],[1565934404487,["GJX@GJXAIOU",[[1,1989,"### XmlhtTprequEst请求过程\n\nXmlhTtprequEst. onreadystatechange\n\n存储函数(或函数名)\n\n每当 readystate属性改变时,就会调用该函数。\n\nXmlHttpReQuest.reaLdystate请求状态\n\n存有 XmlhTtp Request的状态。从0到4发生变化。\n\n0:请求未初始化\n\n1:服务器连接已建立\n\n2:请求已接收\n\n3:请求处理中\n\n4:请求已完成,且响应已就绪\n\nXmlhTtprequEst. status响应码\n\n200:\"OK\"\n\n404未找到页面"]],[1989,1989],[2256,2256]]],[1565934412937,["GJX@GJXAIOU",[[-1,1994,"mlhtTprequE"],[1,2005,"MLHttpReque"]],[1993,2007],[2007,2007]]],[1565934418689,["GJX@GJXAIOU",[[-1,2014,"mlhTtprequE"],[1,2025,"MLHttpReque"]],[2013,2027],[2027,2027]]],[1565934485807,[null,[[1,2453,"\n"]],[2453,2453],[2454,2454]]],[1565934485807,[null,[[-1,2453,"\n"]],[2454,2454],[2453,2453]]],[1565934427806,["GJX@GJXAIOU",[[-1,2048,"\n"]],[2049,2049],[2048,2048]]],[1565934428128,["GJX@GJXAIOU",[[-1,2047,"\n"]],[2048,2048],[2047,2047]]],[1565934429064,["GJX@GJXAIOU",[[1,2047,"  "]],[2047,2047],[2049,2049]]],[1565934432926,["GJX@GJXAIOU",[[-1,2060,"\n"]],[2061,2061],[2060,2060]]],[1565934433254,["GJX@GJXAIOU",[[-1,2059,"\n"]],[2060,2060],[2059,2059]]],[1565934434760,["GJX@GJXAIOU",[[1,2059,"，"]],[2059,2059],[2060,2060]]],[1565934443384,["GJX@GJXAIOU",[[1,2089,"- "]],[2089,2089],[2091,2091]]],[1565934446314,["GJX@GJXAIOU",[[1,2013,"- "]],[2013,2013],[2015,2015]]],[1565934459679,["GJX@GJXAIOU",[[-1,2102,"Q"]],[2103,2103],[2102,2102]]],[1565934460944,["GJX@GJXAIOU",[[1,2102,"q"]],[2102,2102],[2103,2103]]],[1565934464790,["GJX@GJXAIOU",[[-1,2094,"ml"]],[2096,2096],[2094,2094]]],[1565934466560,["GJX@GJXAIOU",[[1,2094,"ML"]],[2094,2094],[2096,2096]]],[1565934473033,["GJX@GJXAIOU",[[-1,2111,"L"]],[2112,2112],[2111,2111]]],[1565934473471,["GJX@GJXAIOU",[[1,2111,"l"]],[2111,2111],[2112,2112]]],[1565934477527,["GJX@GJXAIOU",[[-1,2111,"l"]],[2112,2112],[2111,2111]]],[1565934480174,["GJX@GJXAIOU",[[-1,2113,"s"]],[2114,2114],[2113,2113]]],[1565934481202,["GJX@GJXAIOU",[[1,2113,"S"]],[2113,2113],[2114,2114]]],[1565934483612,["GJX@GJXAIOU",[[1,2118,"  "]],[2118,2118],[2120,2120]]],[1565934545805,[null,[[1,2457,"\n"]],[2457,2457],[2458,2458]]],[1565934545805,[null,[[-1,2457,"\n"]],[2458,2458],[2457,2457]]],[1565934490017,["GJX@GJXAIOU",[[-1,2125,"\n"]],[2126,2126],[2125,2125]]],[1565934493640,["GJX@GJXAIOU",[[-1,2129,"mlhTtp "]],[2136,2136],[2129,2129]]],[1565934497711,["GJX@GJXAIOU",[[1,2129,"MLHttp"]],[2129,2129],[2135,2135]]],[1565934504774,["GJX@GJXAIOU",[[-1,2156,"\n"]],[2156,2156],[2155,2155]]],[1565934505705,["GJX@GJXAIOU",[[-1,2165,"\n"]],[2165,2165],[2164,2164]]],[1565934506526,["GJX@GJXAIOU",[[-1,2176,"\n"]],[2176,2176],[2175,2175]]],[1565934507373,["GJX@GJXAIOU",[[-1,2184,"\n"]],[2184,2184],[2183,2183]]],[1565934508166,["GJX@GJXAIOU",[[-1,2192,"\n"]],[2192,2192],[2191,2191]]],[1565934514566,["GJX@GJXAIOU",[[1,2156,"* "],[1,2165,"* "],[1,2176,"* "],[1,2184,"* "],[1,2192,"* "]],[2156,2206],[2158,2216]]],[1565934514919,["GJX@GJXAIOU",[[1,2156,"  "],[1,2167,"  "],[1,2180,"  "],[1,2190,"  "],[1,2200,"  "]],[2158,2216],[2160,2226]]],[1565934517954,["GJX@GJXAIOU",[[1,2228,"- "]],[2228,2228],[2230,2230]]],[1565934529423,["GJX@GJXAIOU",[[-1,2231,"mlhTtprequEst"]],[2230,2244],[2231,2231]]],[1565934535298,["GJX@GJXAIOU",[[1,2231,"MLHttpRequest"]],[2231,2231],[2244,2244]]],[1565934540184,["GJX@GJXAIOU",[[1,2252," "]],[2252,2252],[2253,2253]]],[1565934542390,["GJX@GJXAIOU",[[-1,2257,"\n"]],[2257,2257],[2256,2256]]],[1565934544047,["GJX@GJXAIOU",[[-1,2266,"\n"]],[2266,2266],[2265,2265]]],[1565934605808,[null,[[1,2471,"\n"]],[2471,2471],[2472,2472]]],[1565934605808,[null,[[-1,2471,"\n"]],[2472,2472],[2471,2471]]],[1565934547512,["GJX@GJXAIOU",[[1,2269,":"]],[2269,2269],[2270,2270]]],[1565934551910,["GJX@GJXAIOU",[[1,2257,"- "],[1,2266,"- "]],[2257,2275],[2259,2279]]],[1565934552313,["GJX@GJXAIOU",[[1,2257,"  "],[1,2268,"  "]],[2259,2279],[2261,2283]]],[1565934584496,["GJX@GJXAIOU",[[1,1419,"danh"]],[1419,1419],[1423,1423]]],[1565934585830,["GJX@GJXAIOU",[[-1,1419,"danh"]],[1423,1423],[1419,1419]]],[1565934592458,["GJX@GJXAIOU",[[1,1419,"但是该类在IE%"]],[1419,1419],[1427,1427]]],[1565934592487,["GJX@GJXAIOU",[[1,1424," "]],[1427,1427],[1428,1428]]],[1565934592936,["GJX@GJXAIOU",[[-1,1427,"%"]],[1428,1428],[1427,1427]]],[1565934595520,["GJX@GJXAIOU",[[1,1427,"5和"]],[1427,1427],[1429,1429]]],[1565934595548,["GJX@GJXAIOU",[[1,1428," "]],[1429,1429],[1430,1430]]],[1565934597749,["GJX@GJXAIOU",[[1,1430,"IE"]],[1430,1430],[1432,1432]]],[1565934597776,["GJX@GJXAIOU",[[1,1430," "]],[1432,1432],[1433,1433]]],[1565934600418,["GJX@GJXAIOU",[[1,1433,"6中"]],[1433,1433],[1435,1435]]],[1565934600447,["GJX@GJXAIOU",[[1,1434," "]],[1435,1435],[1436,1436]]],[1565934604785,["GJX@GJXAIOU",[[1,1436,"，必须使用"]],[1436,1436],[1441,1441]]],[1565934665810,[null,[[1,2502,"\n"]],[2502,2502],[2503,2503]]],[1565934665810,[null,[[-1,2502,"\n"]],[2503,2503],[2502,2502]]],[1565934611363,["GJX@GJXAIOU",[[1,1441,"特定于IE"]],[1441,1441],[1446,1446]]],[1565934611391,["GJX@GJXAIOU",[[1,1444," "]],[1446,1446],[1447,1447]]],[1565934611784,["GJX@GJXAIOU",[[1,1447,"的"]],[1447,1447],[1448,1448]]],[1565934611812,["GJX@GJXAIOU",[[1,1447," "]],[1448,1448],[1449,1449]]],[1565934620441,["GJX@GJXAIOU",[[1,1449,"ActiveXObject"]],[1449,1449],[1462,1462]]],[1565934620468,["GJX@GJXAIOU",[[1,1449," "]],[1462,1462],[1463,1463]]],[1565934621783,["GJX@GJXAIOU",[[1,1463,"（）"]],[1463,1463],[1465,1465]]],[1565934622398,["GJX@GJXAIOU",[[-1,1463,"（）"]],[1465,1465],[1463,1463]]],[1565934628774,["GJX@GJXAIOU",[[1,1463,"()构造哈舒"]],[1463,1463],[1469,1469]]],[1565934629646,["GJX@GJXAIOU",[[-1,1467,"哈舒"]],[1469,1469],[1467,1467]]],[1565934633024,["GJX@GJXAIOU",[[1,1467,"函数代替。"]],[1467,1467],[1472,1472]]],[1565934633646,["GJX@GJXAIOU",[[1,1473,"\n"]],[1472,1472],[1473,1473]]],[1565936735799,[null,[[1,2534,"\n"]],[2534,2534],[2535,2535]]],[1565936735799,[null,[[-1,2534,"\n"]],[2535,2535],[2534,2534]]],[1565936682151,["GJX@GJXAIOU",[[1,1875,"\n"]],[1874,1874],[1875,1875]]],[1565936682282,["GJX@GJXAIOU",[[1,1876,"\n"]],[1875,1875],[1876,1876]]],[1565936682447,["GJX@GJXAIOU",[[1,1877,"\n"]],[1876,1876],[1877,1877]]],[1565936690735,["GJX@GJXAIOU",[[1,1877,"xhr.sen"]],[1877,1877],[1884,1884]]],[1565936693000,["GJX@GJXAIOU",[[-1,1881,"sen"]],[1884,1884],[1881,1881]]],[1565936697263,["GJX@GJXAIOU",[[1,1881,"open()"]],[1881,1881],[1887,1887]]],[1565936700488,["GJX@GJXAIOU",[[1,1886,"\""]],[1886,1886],[1887,1887]]],[1565936700521,["GJX@GJXAIOU",[[-1,1886,"\""],[1,1887,"“"]],[1887,1887],[1887,1887]]],[1565936703675,["GJX@GJXAIOU",[[1,1887,"GET\""]],[1887,1887],[1891,1891]]],[1565936703703,["GJX@GJXAIOU",[[-1,1890,"\""],[1,1891,"”"]],[1891,1891],[1891,1891]]],[1565936705729,["GJX@GJXAIOU",[[1,1891,", \""]],[1891,1891],[1894,1894]]],[1565936705757,["GJX@GJXAIOU",[[-1,1893,"\""],[1,1894,"“"]],[1894,1894],[1894,1894]]],[1565936713369,["GJX@GJXAIOU",[[1,1894,"checkusername"]],[1894,1894],[1907,1907]]],[1565936715297,["GJX@GJXAIOU",[[-1,1903,"name"]],[1907,1907],[1903,1903]]],[1565936717304,["GJX@GJXAIOU",[[1,1903,"\""]],[1903,1903],[1904,1904]]],[1565936717332,["GJX@GJXAIOU",[[-1,1903,"\""],[1,1904,"”"]],[1904,1904],[1904,1904]]],[1565936721777,["GJX@GJXAIOU",[[1,1904,",false"]],[1904,1904],[1910,1910]]],[1565936727617,["GJX@GJXAIOU",[[1,1876,"- zhu"]],[1876,1876],[1881,1881]]],[1565936728249,["GJX@GJXAIOU",[[-1,1878,"zhu"]],[1881,1881],[1878,1878]]],[1565936732490,["GJX@GJXAIOU",[[1,1878,"针对于GET"]],[1878,1878],[1884,1884]]],[1565936732518,["GJX@GJXAIOU",[[1,1881," "]],[1884,1884],[1885,1885]]],[1565936733850,["GJX@GJXAIOU",[[1,1885,"和"]],[1885,1885],[1886,1886]]],[1565936733879,["GJX@GJXAIOU",[[1,1885," "]],[1886,1886],[1887,1887]]],[1565936735564,["GJX@GJXAIOU",[[1,1887,"POST"]],[1887,1887],[1891,1891]]],[1565936735592,["GJX@GJXAIOU",[[1,1887," "]],[1891,1891],[1892,1892]]],[1565936795821,[null,[[1,2587,"\n"]],[2587,2587],[2588,2588]]],[1565936795821,[null,[[-1,2587,"\n"]],[2588,2588],[2587,2587]]],[1565936736140,["GJX@GJXAIOU",[[1,1892,"在"]],[1892,1892],[1893,1893]]],[1565936736169,["GJX@GJXAIOU",[[1,1892," "]],[1893,1893],[1894,1894]]],[1565936740178,["GJX@GJXAIOU",[[1,1894,"send"]],[1894,1894],[1898,1898]]],[1565936740207,["GJX@GJXAIOU",[[1,1894," "]],[1898,1898],[1899,1899]]],[1565936740683,["GJX@GJXAIOU",[[1,1899,"和"]],[1899,1899],[1900,1900]]],[1565936740711,["GJX@GJXAIOU",[[1,1899," "]],[1900,1900],[1901,1901]]],[1565936743697,["GJX@GJXAIOU",[[1,1901,"open"]],[1901,1901],[1905,1905]]],[1565936743725,["GJX@GJXAIOU",[[1,1901," "]],[1905,1905],[1906,1906]]],[1565936748188,["GJX@GJXAIOU",[[1,1906,"使用"]],[1906,1906],[1908,1908]]],[1565936748216,["GJX@GJXAIOU",[[1,1906," "]],[1908,1908],[1909,1909]]],[1565936749929,["GJX@GJXAIOU",[[1,1909,"区别"]],[1909,1909],[1911,1911]]],[1565936771376,["GJX@GJXAIOU",[[-1,1921,"“GET”, “"],[1,1929,"\"GET\", \""],[-1,1938,"”,"],[1,1940,"name?name=\" + usernamestr, "],[1,1946,";"]],[1912,1946],[1972,1972]]],[1565936777394,["GJX@GJXAIOU",[[1,1973,"\n"]],[1972,1972],[1973,1973]]],[1565936782352,["GJX@GJXAIOU",[[1,1973,"xhr.send()"]],[1973,1973],[1983,1983]]],[1565936783546,["GJX@GJXAIOU",[[1,1984,"\n"]],[1983,1983],[1984,1984]]],[1565936786640,["GJX@GJXAIOU",[[1,1912,"\n"]],[1912,1912],[1913,1913]]],[1565936795747,["GJX@GJXAIOU",[[1,1912,"GET 的请求数据可以放在URL"]],[1912,1912],[1928,1928]]],[1565936795775,["GJX@GJXAIOU",[[1,1925," "]],[1928,1928],[1929,1929]]],[1565936855817,[null,[[1,2662,"\n"]],[2662,2662],[2663,2663]]],[1565936855817,[null,[[-1,2662,"\n"]],[2663,2663],[2662,2662]]],[1565936796410,["GJX@GJXAIOU",[[1,1929,"中"]],[1929,1929],[1930,1930]]],[1565936796438,["GJX@GJXAIOU",[[1,1929," "]],[1930,1930],[1931,1931]]],[1565936803532,["GJX@GJXAIOU",[[1,1931,"以键值对相互厮"]],[1931,1931],[1938,1938]]],[1565936804567,["GJX@GJXAIOU",[[-1,1935,"相互厮"]],[1938,1938],[1935,1935]]],[1565936808345,["GJX@GJXAIOU",[[1,1935,"形式传递；"]],[1935,1935],[1940,1940]]],[1565936813285,["GJX@GJXAIOU",[[1,2013,"GET"]],[2013,2013],[2016,2016]]],[1565936815486,["GJX@GJXAIOU",[[-1,2013,"GET"]],[2016,2016],[2013,2013]]],[1565936818923,["GJX@GJXAIOU",[[1,2013,"POST请求"]],[2013,2013],[2019,2019]]],[1565936818953,["GJX@GJXAIOU",[[1,2017," "]],[2019,2019],[2020,2020]]],[1565936824565,["GJX@GJXAIOU",[[1,2020,"放在send"]],[2020,2020],[2026,2026]]],[1565936824594,["GJX@GJXAIOU",[[1,2022," "]],[2026,2026],[2027,2027]]],[1565936825731,["GJX@GJXAIOU",[[1,2027,"里面"]],[2027,2027],[2029,2029]]],[1565936825760,["GJX@GJXAIOU",[[1,2027," "]],[2029,2029],[2030,2030]]],[1565936832081,["GJX@GJXAIOU",[[1,2030,"以键值对的显示"]],[2030,2030],[2037,2037]]],[1565936832657,["GJX@GJXAIOU",[[-1,2035,"显示"]],[2037,2037],[2035,2035]]],[1565936836505,["GJX@GJXAIOU",[[1,2035,"形式传递："]],[2035,2035],[2040,2040]]],[1565936837017,["GJX@GJXAIOU",[[-1,2039,"："]],[2040,2040],[2039,2039]]],[1565936837385,["GJX@GJXAIOU",[[1,2039,";"]],[2039,2039],[2040,2040]]],[1565936837610,["GJX@GJXAIOU",[[1,2041,"\n"]],[2040,2040],[2041,2041]]],[1565936840280,["GJX@GJXAIOU",[[-1,2042,"- "]],[2044,2044],[2042,2042]]],[1565936842111,["GJX@GJXAIOU",[[-1,2041,"\n"]],[2041,2041],[2040,2040]]],[1565936850039,["GJX@GJXAIOU",[[1,2041,"\n"]],[2040,2040],[2041,2041]]],[1565936850450,["GJX@GJXAIOU",[[1,2041,"xhr.open(\"GET\", \"checkusername?name=\" + usernamestr, false);"]],[2041,2041],[2101,2101]]],[1565936853239,["GJX@GJXAIOU",[[-1,2051,"GET"]],[2054,2054],[2051,2051]]],[1565936854681,["GJX@GJXAIOU",[[1,2051,"POST"]],[2051,2051],[2055,2055]]],[1565936915819,[null,[[1,2760,"\n"]],[2760,2760],[2761,2761]]],[1565936915819,[null,[[-1,2760,"\n"]],[2761,2761],[2760,2760]]],[1565936861169,["GJX@GJXAIOU",[[-1,2068,"name?name=\" + usernamestr"]],[2068,2093],[2068,2068]]],[1565936862137,["GJX@GJXAIOU",[[1,2068,"\""]],[2068,2068],[2069,2069]]],[1565936862165,["GJX@GJXAIOU",[[-1,2068,"\""],[1,2069,"“"]],[2069,2069],[2069,2069]]],[1565936863072,["GJX@GJXAIOU",[[-1,2068,"“"]],[2069,2069],[2068,2068]]],[1565936863970,["GJX@GJXAIOU",[[1,2068,"“"]],[2068,2068],[2069,2069]]],[1565936880647,["GJX@GJXAIOU",[[-1,2090,"username = name"]],[2090,2105],[2090,2090]]],[1565936884169,["GJX@GJXAIOU",[[1,2090,"name="]],[2090,2090],[2095,2095]]],[1565936887155,["GJX@GJXAIOU",[[1,2097," "]],[2096,2096],[2097,2097]]],[1565936888283,["GJX@GJXAIOU",[[1,2097,"+"]],[2097,2097],[2098,2098]]],[1565936889025,["GJX@GJXAIOU",[[1,2099," "]],[2098,2098],[2099,2099]]],[1565936892266,["GJX@GJXAIOU",[[1,2099,"username"]],[2099,2099],[2107,2107]]],[1565936893463,["GJX@GJXAIOU",[[-1,2106,"e"]],[2107,2107],[2106,2106]]],[1565936897003,["GJX@GJXAIOU",[[1,2106,"estr"]],[2106,2106],[2110,2110]]],[1565936910219,["GJX@GJXAIOU",[[1,2039,"d"]],[2039,2039],[2040,2040]]],[1565936910248,["GJX@GJXAIOU",[[1,2039," "]],[2040,2040],[2041,2041]]],[1565936910394,["GJX@GJXAIOU",[[1,2041,"ao"]],[2041,2041],[2043,2043]]],[1565936911991,["GJX@GJXAIOU",[[-1,2039," dao"]],[2043,2043],[2039,2039]]],[1565936915364,["GJX@GJXAIOU",[[1,2039,"到服务器"]],[2039,2039],[2043,2043]]],[1565936975818,[null,[[1,2744,"\n"]],[2744,2744],[2745,2745]]],[1565936975818,[null,[[-1,2744,"\n"]],[2745,2745],[2744,2744]]],[1565936930663,["GJX@GJXAIOU",[[-1,2118,"将请求发送到服务器"]],[2118,2127],[2118,2118]]],[1565936933666,["GJX@GJXAIOU",[[1,1899,"（）"]],[1899,1899],[1901,1901]]],[1565936935935,["GJX@GJXAIOU",[[1,1900,"阿诺用"]],[1900,1900],[1903,1903]]],[1565936936759,["GJX@GJXAIOU",[[-1,1900,"阿诺用"]],[1903,1903],[1900,1900]]],[1565936939911,["GJX@GJXAIOU",[[1,1900,"作用是：将请求发送到服务器"]],[1900,1900],[1913,1913]]],[1565936962463,["GJX@GJXAIOU",[[-1,2134,"string:仅用于POST请求。get 请求参数在open里的url 中直接后缀添加。\n"]],[2133,2178],[2133,2133]]],[1565936963358,["GJX@GJXAIOU",[[-1,2134,"\n"]],[2133,2133],[2132,2132]]],[1565937155823,[null,[[1,2704,"\n"]],[2704,2704],[2705,2705]]],[1565937155823,[null,[[-1,2704,"\n"]],[2705,2705],[2704,2704]]],[1565937124383,["GJX@GJXAIOU",[[-1,2134,"- "]],[2136,2136],[2134,2134]]],[1565937125952,["GJX@GJXAIOU",[[1,2134,"\n"]],[2133,2133],[2134,2134]]],[1565937127392,["GJX@GJXAIOU",[[1,2134,"****"]],[2134,2134],[2136,2136]]],[1565937128891,["GJX@GJXAIOU",[[1,2136,"注："]],[2136,2136],[2138,2138]]],[1565937135764,["GJX@GJXAIOU",[[1,2140,"在使用POST"]],[2140,2140],[2147,2147]]],[1565937135792,["GJX@GJXAIOU",[[1,2143," "]],[2147,2147],[2148,2148]]],[1565937137596,["GJX@GJXAIOU",[[1,2148,"请求"]],[2148,2148],[2150,2150]]],[1565937137623,["GJX@GJXAIOU",[[1,2148," "]],[2150,2150],[2151,2151]]],[1565937143752,["GJX@GJXAIOU",[[1,2151,"时候，必须在open"]],[2151,2151],[2161,2161]]],[1565937143781,["GJX@GJXAIOU",[[1,2157," "]],[2161,2161],[2162,2162]]],[1565937145705,["GJX@GJXAIOU",[[1,2162,"前面"]],[2162,2162],[2164,2164]]],[1565937145734,["GJX@GJXAIOU",[[1,2162," "]],[2164,2164],[2165,2165]]],[1565937154421,["GJX@GJXAIOU",[[1,2165,"加上上面这句话，母的"]],[2165,2165],[2175,2175]]],[1565937155679,["GJX@GJXAIOU",[[-1,2174,"的"]],[2175,2175],[2174,2174]]],[1565937215822,[null,[[1,2743,"\n"]],[2743,2743],[2744,2744]]],[1565937215822,[null,[[-1,2743,"\n"]],[2744,2744],[2743,2743]]],[1565937156072,["GJX@GJXAIOU",[[-1,2173,"母"]],[2174,2174],[2173,2173]]],[1565937203348,["GJX@GJXAIOU",[[1,2173,"目的是告诉服务器，客户端此次请求的数据是一个表单提交，如果不加会造成后台Servlet"]],[2173,2173],[2216,2216]]],[1565937203376,["GJX@GJXAIOU",[[1,2209," "]],[2216,2216],[2217,2217]]],[1565937275827,[null,[[1,2786,"\n"]],[2786,2786],[2787,2787]]],[1565937275827,[null,[[-1,2786,"\n"]],[2787,2787],[2786,2786]]],[1565937215855,["GJX@GJXAIOU",[[1,2217," "]],[2219,2219],[2220,2220]]],[1565937223650,["GJX@GJXAIOU",[[1,2220,"通过get"]],[2220,2220],[2225,2225]]],[1565937223680,["GJX@GJXAIOU",[[1,2222," "]],[2225,2225],[2226,2226]]],[1565937238177,["GJX@GJXAIOU",[[1,2226,"RequestPrarmter获取"]],[2226,2226],[2243,2243]]],[1565937238206,["GJX@GJXAIOU",[[1,2241," "]],[2243,2243],[2244,2244]]],[1565937244109,["GJX@GJXAIOU",[[1,2244,"到数据"]],[2244,2244],[2247,2247]]],[1565937246564,["GJX@GJXAIOU",[[1,2248,"`"]],[2248,2248],[2249,2249]]],[1565937248041,["GJX@GJXAIOU",[[1,2324,"`"]],[2324,2324],[2325,2325]]],[1565937860643,[null,[[-1,2218,"\nⅹ"],[1,2220,"无法"],[-1,2247,"h`"],[1,2249,"\n`ⅹh"],[1,2322,"`"],[-1,2324,"`"],[1,2812,"\n"]],[2218,2218],[2813,2813]]],[1565937860643,[null,[[1,2218,"\nⅹ"],[-1,2218,"无法"],[1,2247,"h`"],[-1,2247,"\n`ⅹh"],[-1,2324,"`"],[1,2327,"`"],[-1,2814,"\n"]],[2813,2813],[2218,2218]]],[1565937839000,["GJX@GJXAIOU",[[-1,2163,"前"]],[2164,2164],[2163,2163]]],[1565937840552,["GJX@GJXAIOU",[[1,2163,"z "]],[2163,2163],[2164,2164]]],[1565937841088,["GJX@GJXAIOU",[[1,2164,"hihou"]],[2164,2164],[2169,2169]]],[1565937843703,["GJX@GJXAIOU",[[-1,2158,"openzhihou "]],[2169,2169],[2158,2158]]],[1565937846267,["GJX@GJXAIOU",[[1,2158,"open"]],[2158,2158],[2162,2162]]],[1565937848782,["GJX@GJXAIOU",[[1,2163,"后"]],[2163,2163],[2164,2164]]],[1565937850986,["GJX@GJXAIOU",[[-1,2167,"上"]],[2168,2168],[2167,2167]]],[1565937852068,["GJX@GJXAIOU",[[1,2167,"下"]],[2167,2167],[2168,2168]]],[1565937857105,["GJX@GJXAIOU",[[1,2157,"**"],[1,2165,"**"]],[2157,2165],[2157,2169]]],[1565937860175,["GJX@GJXAIOU",[[-1,2159," "]],[2160,2160],[2159,2159]]]],null,"GJX@GJXAIOU"],["f6a597e7-956a-4479-9830-09a3587c4d9a",1565956352674,"# JavaEEDay48 监听器\n\n\n## 概念\n- 监听你的 web 应用，监听许多信息的初始化、销毁、增加、修改、删除值等；\n- 监听器用于监听一些重要事件的发生，监听器对象可以在事情发生前、发生后可以做一些必要的处理；\n- 主要使用场景：实现系统的日志；\n\n\n## 类型分类\n- 按监听的对象划分:\n  - 用于监听应用程序环境对象( ServletContext)的事件监听器\n  - 用于监听用户会话对象( HttpSession)的事件监听器\n  - 用于监听请求消息对象( ServletRequest)的事件监听器\n\n- 按监听的事件划分：\n  - 用于监听域对象自身的创建和销毁的事件监听器\n  - 用于监听域对象中的属性的增加和删除的事件监听器\n  - 用于监听绑定到 HttpSession域中的某个对象的状态的事件监听器\n\n### 涉及到的类\n\nServletContextListener监听生命周期\nHttpSessionListener\nServletRequestListener\n\nServletContextAttributeListener\nHttpSessionAttributeListener\nServletRequestAttributeListener \n\nHttpsessionBindingListener\nHttpSessionActivationListener (略)\n\n\n\n### 监听器示例\n1.自定义类实现对应的 Listener，同时重写方法；\n2.在 web.xml 中配置\n```xml\n<listener>\n  <listener-class>完整的类名</listener-class>\n</listener>\n```\n\n\n### 监听属性值得增加、删除、更改\n- ServletContextAttributeListener\n- HttpSessionAttributeListener\n- ServletRequestAttributeListener\n\n这个三个接口都需要实现以下方法\nattributeAdded        setAttribute时触发\nattrⅰbuteRemoved    removeAttribute触发\nattributeReplaced    为已存在的键赋值新的值触发\n\n\n\n\n\n# Ajax\n\n##  含义\n- 全称：Asynchronous  JavaScript and XML\nAjax 通过与服务器进行少量的数据交互，可以使网页实现**异步局部的更新**，意味着可以在不重新加载这个网页的情况下，对网页的某部分进行更新。（传统的网页需要更新内容必须重载整个网页）\n\nAjax 需要：HTML、CSS、JavaScript、Servlet 做技术支撑；\n\n## 传统的客户端与服务器交换数据流程\n\n* 客户端发起一个get或者post请求并且携带参数\n* 目前已知客户端发起请求的方式都会有页面跳转效果\n* 服务器(jsp, servlet)接受到客户端参数执行操作(业务逻辑判断,数据库增删改查)\n* 服务根据执行的结果转发或者重定向\n\n\n\n## Ajax核心类: XMLHttpRequest\n\nXHR是 Javascript中的类,执行在客户端。中文可以解释为可扩展超文本传输请求,此类在js中使用。\n但是该类在 IE5 和 IE6 中，必须使用特定于 IE 的 ActiveXObject()构造函数代替。\n\nXMLHttpRequest对象提供了对HTTP协议的完全的访问,包括做出POST和HEAD请求以及普通的GET请求的能力。 XMLHttpRequest可以同步或异步返回Web服务器的响应,并且能以文本或者一个DOM文档形式返回内容。尽管名为 XMLHttpRequest,它并不限于和XML文档一起使用:它可以接收任何形式的文本文档。\n\n使用步骤:\n1 XMLHttpRequest创建\n2 XMLHttpRequest请求\n3 XMLHttpRequest响应\n\n\n### XMLHttpRequest请求相关的方法\n\n- `xhr.open(\"Get\",\"test. html\", true)`\n规定请求的类型、URL以及是否异步处理请求。\n  * method:请求的类型;GET或POST\n  * url:文件在服务器上的位置\n  * async:true(异步)或 false(同步)\n\n\n- 针对于 GET 和 POST 在 send（作用是：将请求发送到服务器） 和 open 使用区别\nGET 的请求数据可以放在 URL 中以键值对形式传递；\nxhr.open(\"GET\", \"checkusername?name=\" + usernamestr, false);\nxhr.send()\nPOST 请求放在 send 里面以键值对的形式传递到服务器;\nxhr.open(\"POST\", \"checkuser“, false);\nxhr. send(“name=” + usernamestr );\n\n**注：**在使用 POST 请求时候，必须在**open 后面**加上下面这句话，目的是告诉服务器，客户端此次请求的数据是一个表单提交，如果不加会造成后台 Servlet 无法通过 getRequestPrarmter 获取到数据\n`ⅹhr. setRequestHeader(\" Content-type\", “application/x-www-form-urlencoded“)`\n\n### XMLHttpRequest请求过程\n\n- XMLHttpRequest. onreadystatechange  存储函数(或函数名)，每当 readystate属性改变时,就会调用该函数。\n\n- XMLHttpRequest.readyState  请求状态\n存有 XMLHttpRequest的状态。从0到4发生变化。\n  * 0:请求未初始化\n  * 1:服务器连接已建立\n  * 2:请求已接收\n  * 3:请求处理中\n  * 4:请求已完成,且响应已就绪\n\n- XMLHttpRequest. status 响应码\n  - 200:\"OK\"\n  - 404:未找到页面\n\n\n\n## 常见使用 Ajax的地方\n\n1第一、输入值校验的问题，申请用户的时候检查用户名是否重复\n2第二、层级联动显示的问题。级联菜单,导航树等\n3第三、请求结果只改变部分页面,数据录入和列表显示在同一个页面如,论坛的回复帖子和帖子列表在一个页面上的时候。\n4第四、由于技术原因而使用 iframe的问题避免 iframe的嵌套引入的技术难题\n5第五、翻页,下一页。不需要刷新的翻页\n\n\n\n\n",[[1565956343570,["GJX@GJXAIOU",[[1,998,"### js"]],[998,998],[1004,1004]]],[1565956344562,["GJX@GJXAIOU",[[-1,1002,"js"]],[1004,1004],[1002,1002]]],[1565956348130,["GJX@GJXAIOU",[[1,1002,"js中"]],[1002,1002],[1005,1005]]],[1565956348160,["GJX@GJXAIOU",[[1,1004," "]],[1005,1005],[1006,1006]]],[1565956353099,["GJX@GJXAIOU",[[1,1006,"事件监听"]],[1006,1006],[1010,1010]]],[1565956353471,["GJX@GJXAIOU",[[1,1013,"\n"]],[1010,1010],[1011,1011]]],[1565956358114,["GJX@GJXAIOU",[[1,1011,"- 对水保的"]],[1011,1011],[1017,1017]]],[1565956358826,["GJX@GJXAIOU",[[-1,1014,"水保的"]],[1017,1017],[1014,1014]]],[1565956364962,["GJX@GJXAIOU",[[1,1014,"鼠标的监听：``"]],[1014,1014],[1022,1022]]],[1565956367985,["GJX@GJXAIOU",[[1,1021,"onclick"]],[1021,1021],[1028,1028]]],[1565956372548,["GJX@GJXAIOU",[[1,1029,"/"]],[1029,1029],[1030,1030]]],[1565956373433,["GJX@GJXAIOU",[[-1,1029,"/"]],[1030,1030],[1029,1029]]],[1565956376627,["GJX@GJXAIOU",[[1,1029,"、````"]],[1029,1029],[1034,1034]]],[1565956378331,["GJX@GJXAIOU",[[1,1032,"、"]],[1032,1032],[1033,1033]]],[1565956386909,["GJX@GJXAIOU",[[1,1031,"onmouseout"]],[1031,1031],[1041,1041]]],[1565956395501,["GJX@GJXAIOU",[[1,1044,"onmouseover"]],[1044,1044],[1055,1055]]],[1565956397548,["GJX@GJXAIOU",[[1,1057,"- \n"]],[1056,1056],[1059,1059]]],[1565956409850,["GJX@GJXAIOU",[[1,1059,"对键盘的监听：``"]],[1059,1059],[1068,1068]]],[1565956412533,["GJX@GJXAIOU",[[1,1067,"onk"]],[1067,1067],[1070,1070]]],[1565956417345,["GJX@GJXAIOU",[[1,1070,"eyDown()"]],[1070,1070],[1078,1078]]],[1565956419728,["GJX@GJXAIOU",[[1,1080,"- \n"]],[1079,1079],[1082,1082]]],[1565956421910,["GJX@GJXAIOU",[[1,1082,"baio"]],[1082,1082],[1086,1086]]],[1565956422994,["GJX@GJXAIOU",[[-1,1082,"baio"]],[1086,1086],[1082,1082]]],[1565956427116,["GJX@GJXAIOU",[[1,1082,"对表单时间的"]],[1082,1082],[1088,1088]]],[1565956427969,["GJX@GJXAIOU",[[-1,1085,"时间的"]],[1088,1088],[1085,1085]]],[1565956443116,["GJX@GJXAIOU",[[1,1085,"事件的监听：``···"]],[1085,1085],[1096,1096]]],[1565956444777,["GJX@GJXAIOU",[[-1,1093,"···"]],[1096,1096],[1093,1093]]],[1565956446237,["GJX@GJXAIOU",[[1,1093,"、·"]],[1093,1093],[1095,1095]]],[1565956448000,["GJX@GJXAIOU",[[-1,1094,"·"]],[1095,1095],[1094,1094]]],[1565956448349,["GJX@GJXAIOU",[[1,1094,"、"]],[1094,1094],[1095,1095]]],[1565956450780,["GJX@GJXAIOU",[[1,1094,"·"]],[1094,1094],[1095,1095]]],[1565956452937,["GJX@GJXAIOU",[[-1,1094,"·"]],[1095,1095],[1094,1094]]],[1565956453564,["GJX@GJXAIOU",[[1,1094,"``"]],[1094,1094],[1096,1096]]],[1565956454861,["GJX@GJXAIOU",[[1,1097,"``"]],[1097,1097],[1099,1099]]],[1565956462306,["GJX@GJXAIOU",[[1,1092,"onblur"]],[1092,1092],[1098,1098]]],[1565956466876,["GJX@GJXAIOU",[[1,1101,"onfou"]],[1101,1101],[1106,1106]]],[1565956468779,["GJX@GJXAIOU",[[-1,1105,"u"]],[1106,1106],[1105,1105]]],[1565956469802,["GJX@GJXAIOU",[[1,1105,"cuse"]],[1105,1105],[1109,1109]]],[1565956472379,["GJX@GJXAIOU",[[1,1112,"on"]],[1112,1112],[1114,1114]]],[1565956474010,["GJX@GJXAIOU",[[1,1115,"hange"]],[1115,1115],[1120,1120]]],[1565957200798,[null,[[-1,1114,"`"],[1,1115,"c"],[1,1120,"`"]],[1114,1114],[1121,1121]]],[1565957200798,[null,[[1,1114,"`"],[-1,1114,"c"],[-1,1120,"`"]],[1121,1121],[1114,1114]]],[1565957158704,["GJX@GJXAIOU",[[1,459,"\n"]],[458,458],[459,459]]],[1565957162426,["GJX@GJXAIOU",[[1,555,"\n"]],[554,554],[555,555]]],[1565958340850,[null,[[-1,1116,"`"],[1,1117,"c"],[1,1122,"`"]],[1116,1116],[1123,1123]]],[1565958340850,[null,[[1,1116,"`"],[-1,1116,"c"],[-1,1122,"`"]],[1123,1123],[1116,1116]]],[1565958319361,["GJX@GJXAIOU",[[1,385,"- jain"]],[385,385],[391,391]]],[1565958320841,["GJX@GJXAIOU",[[-1,387,"jain"]],[391,391],[387,387]]],[1565958322355,["GJX@GJXAIOU",[[1,387,"监听"]],[387,387],[389,389]]],[1565958325736,["GJX@GJXAIOU",[[-1,387,"监听"]],[389,389],[387,387]]],[1565958334362,["GJX@GJXAIOU",[[1,387,"监听域对象的创建和销毁"]],[387,387],[398,398]]],[1565958338571,["GJX@GJXAIOU",[[1,472,"- 将"]],[472,472],[475,475]]],[1565958339594,["GJX@GJXAIOU",[[-1,474,"将"]],[475,475],[474,474]]],[1565958400860,[null,[[-1,1131,"`"],[1,1132,"c"],[1,1137,"`"]],[1131,1131],[1138,1138]]],[1565958400860,[null,[[1,1131,"`"],[-1,1131,"c"],[-1,1137,"`"]],[1138,1138],[1131,1131]]],[1565958350785,["GJX@GJXAIOU",[[1,474,"监听域中队形属性的增加和删除 "]],[474,474],[489,489]]],[1565958355336,["GJX@GJXAIOU",[[-1,421,"监听生命周期"]],[421,427],[421,421]]],[1565958368160,["GJX@GJXAIOU",[[1,579,"- 监听绑定到 HttpSession域中的某个对象的状态的事件"]],[579,579],[611,611]]],[1565958520860,[null,[[-1,1172,"`"],[1,1173,"c"],[1,1178,"`"]],[1172,1172],[1179,1179]]],[1565958520860,[null,[[1,1172,"`"],[-1,1172,"c"],[-1,1178,"`"]],[1179,1179],[1172,1172]]],[1565958476322,["GJX@GJXAIOU",[[1,1182,"\n"]],[1181,1181],[1182,1182]]],[1565958476451,["GJX@GJXAIOU",[[1,1183,"\n"]],[1182,1182],[1183,1183]]],[1565958476570,["GJX@GJXAIOU",[[1,1184,"\n"]],[1183,1183],[1184,1184]]],[1565958476673,["GJX@GJXAIOU",[[1,1185,"\n"]],[1184,1184],[1185,1185]]],[1565958476802,["GJX@GJXAIOU",[[1,1186,"\n"]],[1185,1185],[1186,1186]]],[1565958476923,["GJX@GJXAIOU",[[1,1187,"\n"]],[1186,1186],[1187,1187]]],[1565958477049,["GJX@GJXAIOU",[[1,1188,"\n"]],[1187,1187],[1188,1188]]],[1565958477188,["GJX@GJXAIOU",[[1,1189,"\n"]],[1188,1188],[1189,1189]]],[1565958477306,["GJX@GJXAIOU",[[1,1190,"\n"]],[1189,1189],[1190,1190]]],[1565958485756,["GJX@GJXAIOU",[[1,1184,"## 代码示例"]],[1184,1184],[1191,1191]]],[1565958486123,["GJX@GJXAIOU",[[1,1198,"\n"]],[1191,1191],[1192,1192]]],[1565958486665,["GJX@GJXAIOU",[[1,1199,"\n"]],[1192,1192],[1193,1193]]],[1565958489956,["GJX@GJXAIOU",[[1,1193,"- 一"]],[1193,1193],[1196,1196]]],[1565958491657,["GJX@GJXAIOU",[[-1,1195,"一"]],[1196,1196],[1195,1195]]],[1565958640863,[null,[[-1,1172,"`"],[1,1173,"c"],[1,1178,"`"],[-1,1181,"#"],[1,1202,"#"]],[1172,1172],[1203,1203]]],[1565958640863,[null,[[1,1172,"`"],[-1,1172,"c"],[-1,1178,"`"],[1,1182,"#"],[-1,1202,"#"]],[1203,1203],[1172,1172]]],[1565958610998,["GJX@GJXAIOU",[[1,1195,"一"]],[1195,1195],[1196,1196]]],[1565958611938,["GJX@GJXAIOU",[[-1,1195,"一"]],[1196,1196],[1195,1195]]],[1565958615477,["GJX@GJXAIOU",[[1,1195,"以application"]],[1195,1195],[1207,1207]]],[1565958615508,["GJX@GJXAIOU",[[1,1196," "]],[1207,1207],[1208,1208]]],[1565958617493,["GJX@GJXAIOU",[[1,1208,"域对象"]],[1208,1208],[1211,1211]]],[1565958617524,["GJX@GJXAIOU",[[1,1208," "]],[1211,1211],[1212,1212]]],[1565958625100,["GJX@GJXAIOU",[[1,1212,"为例，实现Servlet"]],[1212,1212],[1224,1224]]],[1565958625131,["GJX@GJXAIOU",[[1,1217," "]],[1224,1224],[1225,1225]]],[1565958638275,["GJX@GJXAIOU",[[1,1225,"ContextLister"]],[1225,1225],[1238,1238]]],[1565958700865,[null,[[-1,1172,"`"],[1,1173,"c"],[1,1178,"`"],[-1,1181,"#"],[1,1245,"#"]],[1172,1172],[1246,1246]]],[1565958700865,[null,[[1,1172,"`"],[-1,1172,"c"],[-1,1178,"`"],[1,1182,"#"],[-1,1245,"#"]],[1246,1246],[1172,1172]]],[1565958645938,["GJX@GJXAIOU",[[1,1239,"- \n"]],[1238,1238],[1241,1241]]],[1565958646401,["GJX@GJXAIOU",[[-1,1239,"- "]],[1241,1241],[1239,1239]]],[1565958648164,["GJX@GJXAIOU",[[1,1239,"```"]],[1239,1239],[1242,1242]]],[1565958648194,["GJX@GJXAIOU",[[1,1242,"language\n```\n"]],[1242,1242],[1242,1250]]],[1565958648571,["GJX@GJXAIOU",[[-1,1242,"language"],[1,1250,"j"]],[1242,1250],[1243,1243]]],[1565958649220,["GJX@GJXAIOU",[[1,1243,"ava"]],[1243,1243],[1246,1246]]],[1565958649602,["GJX@GJXAIOU",[[1,1247,"\n"]],[1246,1246],[1247,1247]]],[1565958660006,["GJX@GJXAIOU",[[1,1247,"public class ApplicationListener implements ServletContextListener {\n    private long beginTime;\n    private long endTime;\n    @Override\n    public void contextInitialized(ServletContextEvent servletContextEvent) {\n        long begin = System.currentTimeMillis();\n        System.out.println(\"contextInitialized\");\n    }\n\n    @Override\n    public void contextDestroyed(ServletContextEvent servletContextEvent) {\n        endTime = System.currentTimeMillis();\n        System.out.println(\"contextDestroyed\");\n        System.out.println(\"系统共运行了\" + (endTime - beginTime) + \"毫秒\");\n    }\n}"]],[1247,1247],[1828,1828]]],[1565958672042,["GJX@GJXAIOU",[[1,1247,"\n"]],[1246,1246],[1247,1247]]],[1565958672436,["GJX@GJXAIOU",[[1,1247,"/**\n * @author GJXAIOU\n * @create 2019-08-15-18:18\n */"]],[1247,1247],[1301,1301]]],[1565958675388,["GJX@GJXAIOU",[[1,1895,"\n"]],[1887,1887],[1888,1888]]],[1565958691755,["GJX@GJXAIOU",[[1,1888,"dui"]],[1888,1888],[1891,1891]]],[1565958692593,["GJX@GJXAIOU",[[-1,1888,"dui"]],[1891,1891],[1888,1888]]],[1565958697102,["GJX@GJXAIOU",[[1,1888,"对应的x"]],[1888,1888],[1892,1892]]],[1565958697134,["GJX@GJXAIOU",[[1,1891," "]],[1892,1892],[1893,1893]]],[1565958698322,["GJX@GJXAIOU",[[-1,1892,"x"]],[1893,1893],[1892,1892]]],[1565958699011,["GJX@GJXAIOU",[[1,1892,"wei"]],[1892,1892],[1895,1895]]],[1565958699650,["GJX@GJXAIOU",[[-1,1894,"i"]],[1895,1895],[1894,1894]]],[1565958700749,["GJX@GJXAIOU",[[1,1894,"b.x"]],[1894,1894],[1897,1897]]],[1565958760866,[null,[[-1,1172,"`"],[1,1173,"c"],[1,1178,"`"],[-1,1181,"#"],[1,1905,"#"]],[1172,1172],[1906,1906]]],[1565958760866,[null,[[1,1172,"`"],[-1,1172,"c"],[-1,1178,"`"],[1,1182,"#"],[-1,1905,"#"]],[1906,1906],[1172,1172]]],[1565958702470,["GJX@GJXAIOU",[[1,1897,"ml配置"]],[1897,1897],[1901,1901]]],[1565958702501,["GJX@GJXAIOU",[[1,1899," "]],[1901,1901],[1902,1902]]],[1565958702802,["GJX@GJXAIOU",[[1,1910,"\n"]],[1902,1902],[1903,1903]]],[1565958704405,["GJX@GJXAIOU",[[1,1903,"```"]],[1903,1903],[1906,1906]]],[1565958704437,["GJX@GJXAIOU",[[1,1906,"language\n```\n"]],[1906,1906],[1906,1914]]],[1565958705883,["GJX@GJXAIOU",[[-1,1906,"language"],[1,1914,"x"]],[1906,1914],[1907,1907]]],[1565958706195,["GJX@GJXAIOU",[[1,1907,"ml"]],[1907,1907],[1909,1909]]],[1565958706442,["GJX@GJXAIOU",[[1,1910,"\n"]],[1909,1909],[1910,1910]]],[1565958710011,["GJX@GJXAIOU",[[1,1910,"    <!--配置监听器，只需配置实现了监听器接口的类的全称，不需要配置范围，因为针对所有的监听对象-->\n    <listener>\n        <listener-class>gjxaiou.ApplicationListener</listener-class>\n    </listener>"]],[1910,1910],[2064,2064]]],[1565958820870,[null,[[-1,1172,"`"],[1,1173,"c"],[1,1178,"`"],[-1,1181,"#"],[1,2077,"#"]],[1172,1172],[2078,2078]]],[1565958820870,[null,[[1,1172,"`"],[-1,1172,"c"],[-1,1178,"`"],[1,1182,"#"],[-1,2077,"#"]],[2078,2078],[1172,1172]]],[1565958796269,["GJX@GJXAIOU",[[1,2070,"- yi"]],[2070,2070],[2074,2074]]],[1565958796994,["GJX@GJXAIOU",[[-1,2072,"yi"]],[2074,2074],[2072,2072]]],[1565958797804,["GJX@GJXAIOU",[[1,2072,"一"]],[2072,2072],[2073,2073]]],[1565958798748,["GJX@GJXAIOU",[[-1,2072,"一"]],[2073,2073],[2072,2072]]],[1565958802909,["GJX@GJXAIOU",[[1,2072,"以application"]],[2072,2072],[2084,2084]]],[1565958802940,["GJX@GJXAIOU",[[1,2073," "]],[2084,2084],[2085,2085]]],[1565958805644,["GJX@GJXAIOU",[[1,2085,"域对象"]],[2085,2085],[2088,2088]]],[1565958805678,["GJX@GJXAIOU",[[1,2085," "]],[2088,2088],[2089,2089]]],[1565958814739,["GJX@GJXAIOU",[[1,2089,"为例，监听其域对象的变化"]],[2089,2089],[2101,2101]]],[1565958815403,["GJX@GJXAIOU",[[1,2102,"- \n"]],[2101,2101],[2104,2104]]],[1565958816097,["GJX@GJXAIOU",[[-1,2102,"- "]],[2104,2104],[2102,2102]]],[1565958817765,["GJX@GJXAIOU",[[1,2102,"```"]],[2102,2102],[2105,2105]]],[1565958817797,["GJX@GJXAIOU",[[1,2105,"language\n```\n"]],[2105,2105],[2105,2113]]],[1565958818332,["GJX@GJXAIOU",[[-1,2105,"language"],[1,2113,"j"]],[2105,2113],[2106,2106]]],[1565958820379,["GJX@GJXAIOU",[[1,2106,"ava"]],[2106,2106],[2109,2109]]],[1565958820570,["GJX@GJXAIOU",[[1,2110,"\n"]],[2109,2109],[2110,2110]]],[1565958880872,[null,[[-1,1172,"`"],[1,1173,"c"],[1,1178,"`"],[-1,1181,"#"],[1,2122,"#"]],[1172,1172],[2123,2123]]],[1565958880872,[null,[[1,1172,"`"],[-1,1172,"c"],[-1,1178,"`"],[1,1182,"#"],[-1,2122,"#"]],[2123,2123],[1172,1172]]],[1565958828986,["GJX@GJXAIOU",[[1,2110,"/**\n * @author GJXAIOU\n * @create 2019-08-15-18:57\n */\npublic class ApplicationAttributeListener implements ServletContextAttributeListener {\n    // 监听application对象，其中增加属性的时候触发，对应方法：setAttributes()\n    @Override\n    public void attributeAdded(ServletContextAttributeEvent servletContextAttributeEvent) {\n\n    }\n\n    // 监听application对象，其中删除属性的时候触发，对应方法：removeAttributes()\n    @Override\n    public void attributeRemoved(ServletContextAttributeEvent servletContextAttributeEvent) {\n\n    }\n\n    // 监听application对象，其中重新赋值属性，覆盖之前数据的时候触发。\n    @Override\n    public void attributeReplaced(ServletContextAttributeEvent servletContextAttributeEvent) {\n\n    }\n}"]],[2110,2110],[2759,2759]]],[1565958940877,[null,[[-1,1172,"`"],[1,1173,"c"],[1,1178,"`"],[-1,1181,"#"],[1,2771,"#"]],[1172,1172],[2772,2772]]],[1565958940877,[null,[[1,1172,"`"],[-1,1172,"c"],[-1,1178,"`"],[1,1182,"#"],[-1,2771,"#"]],[2772,2772],[1172,1172]]],[1565958886219,["GJX@GJXAIOU",[[1,2070,"\n"]],[2069,2069],[2070,2070]]],[1565958886370,["GJX@GJXAIOU",[[1,2071,"\n"]],[2070,2070],[2071,2071]]],[1565958886499,["GJX@GJXAIOU",[[1,2072,"\n"]],[2071,2071],[2072,2072]]],[1565958890067,["GJX@GJXAIOU",[[1,2070,"qe"]],[2070,2070],[2072,2072]]],[1565958891681,["GJX@GJXAIOU",[[-1,2070,"qe"]],[2072,2072],[2070,2070]]],[1565958894364,["GJX@GJXAIOU",[[1,2070,"其余来个呢"]],[2070,2070],[2075,2075]]],[1565958895500,["GJX@GJXAIOU",[[-1,2072,"来个呢"]],[2075,2075],[2072,2072]]],[1565958923213,["GJX@GJXAIOU",[[1,2072,"的域对象相似；下面接着以request"]],[2072,2072],[2091,2091]]],[1565958923246,["GJX@GJXAIOU",[[1,2084," "]],[2091,2091],[2092,2092]]],[1565958924132,["GJX@GJXAIOU",[[1,2092,"为例"]],[2092,2092],[2094,2094]]],[1565958924165,["GJX@GJXAIOU",[[1,2092," "]],[2094,2094],[2095,2095]]],[1565958925226,["GJX@GJXAIOU",[[1,2098,"\n"]],[2095,2095],[2096,2096]]],[1565958938470,["GJX@GJXAIOU",[[1,2096,"```java"]],[2096,2096],[2103,2103]]],[1565958939074,["GJX@GJXAIOU",[[1,2106,"\n"]],[2103,2103],[2104,2104]]],[1565958939305,["GJX@GJXAIOU",[[1,2107,"\n"]],[2104,2104],[2105,2105]]],[1565958939451,["GJX@GJXAIOU",[[1,2108,"\n"]],[2105,2105],[2106,2106]]],[1565958940738,["GJX@GJXAIOU",[[1,2106,"```"]],[2106,2106],[2109,2109]]],[1565959000877,[null,[[-1,1172,"`"],[1,1173,"c"],[1,1178,"`"],[-1,1181,"#"],[1,2813,"#"]],[1172,1172],[2814,2814]]],[1565959000877,[null,[[1,1172,"`"],[-1,1172,"c"],[-1,1178,"`"],[1,1182,"#"],[-1,2813,"#"]],[2814,2814],[1172,1172]]],[1565958944581,["GJX@GJXAIOU",[[1,2104,"/**\n * @author GJXAIOU\n * @create 2019-08-15-18:48\n */\npublic class requestListener implements ServletRequestListener {\n    @Override\n    public void requestDestroyed(ServletRequestEvent servletRequestEvent) {\n\n    }\n\n    // 每个请求创建的时候就会执行，可以用作计数，和过滤器功能相似；\n    @Override\n    public void requestInitialized(ServletRequestEvent servletRequestEvent) {\n\n    }\n}\n"]],[2104,2104],[2461,2461]]],[1565958947410,["GJX@GJXAIOU",[[-1,2462,"\n"]],[2462,2462],[2461,2461]]],[1565958947554,["GJX@GJXAIOU",[[-1,2461,"\n"]],[2461,2461],[2460,2460]]],[1565958949469,["GJX@GJXAIOU",[[1,2464,"\\"]],[2464,2464],[2465,2465]]],[1565958950178,["GJX@GJXAIOU",[[-1,2464,"\\"]],[2465,2465],[2464,2464]]],[1565958951898,["GJX@GJXAIOU",[[1,2467,"\n"]],[2464,2464],[2465,2465]]],[1565958953675,["GJX@GJXAIOU",[[1,2465,"dui"]],[2465,2465],[2468,2468]]],[1565958954721,["GJX@GJXAIOU",[[-1,2465,"dui"]],[2468,2468],[2465,2465]]],[1565958958117,["GJX@GJXAIOU",[[1,2465,"对应的xml"]],[2465,2465],[2471,2471]]],[1565958958151,["GJX@GJXAIOU",[[1,2468," "]],[2471,2471],[2472,2472]]],[1565958958539,["GJX@GJXAIOU",[[1,2472,"we"]],[2472,2472],[2474,2474]]],[1565958959219,["GJX@GJXAIOU",[[-1,2472,"we"]],[2474,2474],[2472,2472]]],[1565958960596,["GJX@GJXAIOU",[[1,2472,"文件"]],[2472,2472],[2474,2474]]],[1565958960629,["GJX@GJXAIOU",[[1,2472," "]],[2474,2474],[2475,2475]]],[1565958960922,["GJX@GJXAIOU",[[1,2478,"\n"]],[2475,2475],[2476,2476]]],[1565958964206,["GJX@GJXAIOU",[[1,2476,"```xml"]],[2476,2476],[2482,2482]]],[1565958964490,["GJX@GJXAIOU",[[1,2485,"\n"]],[2482,2482],[2483,2483]]],[1565958964883,["GJX@GJXAIOU",[[1,2486,"\n"]],[2483,2483],[2484,2484]]],[1565958965716,["GJX@GJXAIOU",[[1,2484,"```"]],[2484,2484],[2487,2487]]],[1565958978057,["GJX@GJXAIOU",[[-1,2465,"对应的 xml 文件\n```xml\n\n```"]],[2465,2487],[2465,2465]]],[1565958980157,["GJX@GJXAIOU",[[1,2465,"tongyang"]],[2465,2465],[2473,2473]]],[1565958981732,["GJX@GJXAIOU",[[-1,2465,"tongyang"]],[2473,2473],[2465,2465]]],[1565958984004,["GJX@GJXAIOU",[[1,2465,"童谣"]],[2465,2465],[2467,2467]]],[1565958986274,["GJX@GJXAIOU",[[-1,2465,"童谣"]],[2467,2467],[2465,2465]]],[1565958991659,["GJX@GJXAIOU",[[1,2465,"同样需要配置XML"]],[2465,2465],[2474,2474]]],[1565958991694,["GJX@GJXAIOU",[[1,2471," "]],[2474,2474],[2475,2475]]],[1565958992511,["GJX@GJXAIOU",[[1,2475,"文件"]],[2475,2475],[2477,2477]]],[1565958992544,["GJX@GJXAIOU",[[1,2475," "]],[2477,2477],[2478,2478]]],[1565958996835,["GJX@GJXAIOU",[[1,2478,"，配置同上；"]],[2478,2478],[2484,2484]]],[1565959120881,[null,[[-1,1172,"`"],[1,1173,"c"],[1,1178,"`"],[-1,1181,"#"],[1,3188,"#"]],[1172,1172],[3189,3189]]],[1565959120881,[null,[[1,1172,"`"],[-1,1172,"c"],[-1,1178,"`"],[1,1182,"#"],[-1,3188,"#"]],[3189,3189],[1172,1172]]],[1565959074698,["GJX@GJXAIOU",[[1,2487,"\n"]],[2486,2486],[2487,2487]]],[1565959074834,["GJX@GJXAIOU",[[1,2488,"\n"]],[2487,2487],[2488,2488]]],[1565959074962,["GJX@GJXAIOU",[[1,2489,"\n"]],[2488,2488],[2489,2489]]],[1565959083429,["GJX@GJXAIOU",[[1,2486,"- 监听色三四年"]],[2486,2486],[2494,2494]]],[1565959084394,["GJX@GJXAIOU",[[-1,2490,"色三四年"]],[2494,2494],[2490,2490]]],[1565959085323,["GJX@GJXAIOU",[[1,2490,"d"]],[2490,2490],[2491,2491]]],[1565959085357,["GJX@GJXAIOU",[[1,2490," "]],[2491,2491],[2492,2492]]],[1565959085908,["GJX@GJXAIOU",[[-1,2491,"d"]],[2492,2492],[2491,2491]]],[1565959089020,["GJX@GJXAIOU",[[1,2491,"session与"]],[2491,2491],[2499,2499]]],[1565959089053,["GJX@GJXAIOU",[[1,2498," "]],[2499,2499],[2500,2500]]],[1565959089666,["GJX@GJXAIOU",[[-1,2499,"与"]],[2500,2500],[2499,2499]]],[1565959091676,["GJX@GJXAIOU",[[1,2499,"欲望"]],[2499,2499],[2501,2501]]],[1565959093283,["GJX@GJXAIOU",[[-1,2499,"欲望"]],[2501,2501],[2499,2499]]],[1565959101429,["GJX@GJXAIOU",[[1,2499,"域对象的创建和下回"]],[2499,2499],[2508,2508]]],[1565959102065,["GJX@GJXAIOU",[[-1,2506,"下回"]],[2508,2508],[2506,2506]]],[1565959104445,["GJX@GJXAIOU",[[1,2506,"销毁"]],[2506,2506],[2508,2508]]],[1565959104845,["GJX@GJXAIOU",[[1,2509,"- \n"]],[2508,2508],[2511,2511]]],[1565959105451,["GJX@GJXAIOU",[[-1,2509,"- "]],[2511,2511],[2509,2509]]],[1565959109315,["GJX@GJXAIOU",[[1,2509,"```java"]],[2509,2509],[2516,2516]]],[1565959109516,["GJX@GJXAIOU",[[1,2520,"\n"]],[2516,2516],[2517,2517]]],[1565959109641,["GJX@GJXAIOU",[[1,2521,"\n"]],[2517,2517],[2518,2518]]],[1565959110891,["GJX@GJXAIOU",[[1,2518,"```"]],[2518,2518],[2521,2521]]],[1565959112602,["GJX@GJXAIOU",[[-1,2524,"\n"]],[2524,2524],[2523,2523]]],[1565959180879,[null,[[-1,1172,"`"],[1,1173,"c"],[1,1178,"`"],[-1,1181,"#"],[1,3225,"#"]],[1172,1172],[3226,3226]]],[1565959180879,[null,[[1,1172,"`"],[-1,1172,"c"],[-1,1178,"`"],[1,1182,"#"],[-1,3225,"#"]],[3226,3226],[1172,1172]]],[1565959127002,["GJX@GJXAIOU",[[1,2517,"/**\n * @author GJXAIOU\n * @create 2019-08-15-18:39\n */\npublic class SessionListener implements HttpSessionListener {\n\n    @Override\n    public void sessionCreated(HttpSessionEvent httpSessionEvent) {\n        System.out.println(\"sessionCreated\");\n\n    }\n\n    // 浏览器关闭不会执行该方法，因为session并没有销毁，重写打开浏览器不能使用上次创建的session而是创建了新的session是因为\n    // sessionId丢失，只有第一个session的浏览器关闭30min之后才会执行第一个session的sessionDestroy方法\n    // 或者主动调用invalidate()方法销毁session\n    @Override\n    public void sessionDestroyed(HttpSessionEvent httpSessionEvent) {\n        System.out.println(\"sesseionDestroyed\");\n    }\n}"]],[2517,2517],[3100,3100]]],[1565959132913,["GJX@GJXAIOU",[[1,3107,"\n"]],[3104,3104],[3105,3105]]],[1565959144331,["GJX@GJXAIOU",[[1,3106,"yngwie"]],[3106,3106],[3112,3112]]],[1565959145492,["GJX@GJXAIOU",[[-1,3106,"yngwie"]],[3112,3112],[3106,3106]]],[1565959149557,["GJX@GJXAIOU",[[1,3106,"因为session"]],[3106,3106],[3115,3115]]],[1565959149591,["GJX@GJXAIOU",[[1,3108," "]],[3115,3115],[3116,3116]]],[1565959150785,["GJX@GJXAIOU",[[1,3116,"对象"]],[3116,3116],[3118,3118]]],[1565959150818,["GJX@GJXAIOU",[[1,3116," "]],[3118,3118],[3119,3119]]],[1565959153366,["GJX@GJXAIOU",[[1,3119,"默认冠词"]],[3119,3119],[3123,3123]]],[1565959155553,["GJX@GJXAIOU",[[-1,3121,"冠词"]],[3123,3123],[3121,3121]]],[1565959160068,["GJX@GJXAIOU",[[1,3121,"关闭浏览器你"]],[3121,3121],[3127,3127]]],[1565959160451,["GJX@GJXAIOU",[[-1,3126,"你"]],[3127,3127],[3126,3126]]],[1565959161315,["GJX@GJXAIOU",[[1,3126,"3"]],[3126,3126],[3127,3127]]],[1565959161349,["GJX@GJXAIOU",[[1,3126," "]],[3127,3127],[3128,3128]]],[1565959166439,["GJX@GJXAIOU",[[1,3128,"0min之后"]],[3128,3128],[3134,3134]]],[1565959166472,["GJX@GJXAIOU",[[1,3132," "]],[3134,3134],[3135,3135]]],[1565959170756,["GJX@GJXAIOU",[[1,3135,"才会下回，"]],[3135,3135],[3140,3140]]],[1565959171634,["GJX@GJXAIOU",[[-1,3137,"下回，"]],[3140,3140],[3137,3137]]],[1565959180165,["GJX@GJXAIOU",[[1,3137,"销毁，因此可以手动销毁，"]],[3137,3137],[3149,3149]]],[1565959240881,[null,[[-1,1172,"`"],[1,1173,"c"],[1,1178,"`"],[-1,1181,"#"],[1,3852,"#"]],[1172,1172],[3853,3853]]],[1565959240881,[null,[[1,1172,"`"],[-1,1172,"c"],[-1,1178,"`"],[1,1182,"#"],[-1,3852,"#"]],[3853,3853],[1172,1172]]],[1565959208565,["GJX@GJXAIOU",[[1,3149,"在访问的页面中可以以超链接的方式，将``"]],[3149,3149],[3169,3169]]],[1565959210450,["GJX@GJXAIOU",[[1,3168,"zhuxiao"]],[3168,3168],[3175,3175]]],[1565959215290,["GJX@GJXAIOU",[[-1,3166,"将`zhuxiao`"]],[3175,3175],[3166,3166]]],[1565959215852,["GJX@GJXAIOU",[[1,3166,"sh"]],[3166,3166],[3168,3168]]],[1565959216354,["GJX@GJXAIOU",[[-1,3166,"sh"]],[3168,3168],[3166,3166]]],[1565959228269,["GJX@GJXAIOU",[[1,3166,"设置一个 注销的按钮(0"]],[3166,3166],[3178,3178]]],[1565959230228,["GJX@GJXAIOU",[[1,3177,"button"]],[3177,3177],[3183,3183]]],[1565959232533,["GJX@GJXAIOU",[[-1,3183,"0"]],[3184,3184],[3183,3183]]],[1565959234604,["GJX@GJXAIOU",[[1,3183,")b"]],[3183,3183],[3185,3185]]],[1565959235145,["GJX@GJXAIOU",[[-1,3184,"b"]],[3185,3185],[3184,3184]]],[1565959237261,["GJX@GJXAIOU",[[1,3184,"并将其"]],[3184,3184],[3187,3187]]],[1565959300882,[null,[[-1,1172,"`"],[1,1173,"c"],[1,1178,"`"],[-1,1181,"#"],[1,3890,"#"]],[1172,1172],[3891,3891]]],[1565959300882,[null,[[1,1172,"`"],[-1,1172,"c"],[-1,1178,"`"],[1,1182,"#"],[-1,3890,"#"]],[3891,3891],[1172,1172]]],[1565959282743,["GJX@GJXAIOU",[[1,3187,"指向销毁页面，在销毁页面()"]],[3187,3187],[3201,3201]]],[1565959292846,["GJX@GJXAIOU",[[1,3200,"sessionDestroy.jsp"]],[3200,3200],[3218,3218]]],[1565959300703,["GJX@GJXAIOU",[[1,3219,"中实现"]],[3219,3219],[3222,3222]]],[1565959360884,[null,[[-1,1172,"`"],[1,1173,"c"],[1,1178,"`"],[-1,1181,"#"],[1,3925,"#"]],[1172,1172],[3926,3926]]],[1565959360884,[null,[[1,1172,"`"],[-1,1172,"c"],[-1,1178,"`"],[1,1182,"#"],[-1,3925,"#"]],[3926,3926],[1172,1172]]],[1565959304556,["GJX@GJXAIOU",[[1,3222,"销毁：``"]],[3222,3222],[3227,3227]]],[1565959311410,["GJX@GJXAIOU",[[1,3226,"<%\n  // 注销的时候可以主动调用销毁 session.invalidate();   %>"]],[3226,3226],[3274,3274]]],[1565959316986,["GJX@GJXAIOU",[[-1,3229,"  "]],[3231,3231],[3229,3229]]],[1565959317386,["GJX@GJXAIOU",[[-1,3228,"\n"]],[3229,3229],[3228,3228]]],[1565959320475,["GJX@GJXAIOU",[[1,3228,"  "]],[3228,3228],[3230,3230]]],[1565959322986,["GJX@GJXAIOU",[[-1,3245,"毁 "]],[3247,3247],[3245,3245]]],[1565959323900,["GJX@GJXAIOU",[[1,3245,"  "]],[3245,3245],[3247,3247]]],[1565959328834,["GJX@GJXAIOU",[[-1,3246," "]],[3247,3247],[3246,3246]]],[1565959330845,["GJX@GJXAIOU",[[1,3246," "]],[3246,3246],[3247,3247]]],[1565959331500,["GJX@GJXAIOU",[[-1,3245,"  "]],[3247,3247],[3245,3245]]],[1565959332791,["GJX@GJXAIOU",[[1,3245,"毁 "]],[3245,3245],[3247,3247]]],[1565959338274,["GJX@GJXAIOU",[[1,3276,"\n"]],[3274,3274],[3275,3275]]],[1565959342986,["GJX@GJXAIOU",[[1,3225,"\n"]],[3225,3225],[3226,3226]]],[1565959349834,["GJX@GJXAIOU",[[1,3226,"\n"]],[3225,3225],[3226,3226]]],[1565959350227,["GJX@GJXAIOU",[[1,3226,"sessionDestroy.jsp"]],[3226,3226],[3244,3244]]],[1565959351938,["GJX@GJXAIOU",[[1,3245,"\n"]],[3244,3244],[3245,3245]]],[1565959355421,["GJX@GJXAIOU",[[1,3245,"```jsp"]],[3245,3245],[3251,3251]]],[1565959355834,["GJX@GJXAIOU",[[1,3252,"\n"]],[3251,3251],[3252,3252]]],[1565959357436,["GJX@GJXAIOU",[[1,3253,"\n"]],[3252,3252],[3253,3253]]],[1565959358029,["GJX@GJXAIOU",[[1,3253,"```"]],[3253,3253],[3256,3256]]],[1565959420889,[null,[[-1,1172,"`"],[1,1173,"c"],[1,1178,"`"],[-1,1181,"#"],[1,4010,"#"]],[1172,1172],[4011,4011]]],[1565959420889,[null,[[1,1172,"`"],[-1,1172,"c"],[-1,1178,"`"],[1,1182,"#"],[-1,4010,"#"]],[4011,4011],[1172,1172]]],[1565959373764,["GJX@GJXAIOU",[[1,3252,"<body>\n  <%\n  // 注销的时候可以主动调用销毁\n  session.invalidate();\n %>  </body>"]],[3252,3252],[3319,3319]]],[1565959377505,["GJX@GJXAIOU",[[1,3312,"\n "]],[3312,3312],[3314,3314]]],[1565959379698,["GJX@GJXAIOU",[[-1,3313," "]],[3314,3314],[3313,3313]]],[1565959380962,["GJX@GJXAIOU",[[-1,3312,"\n"]],[3313,3313],[3312,3312]]],[1565959382275,["GJX@GJXAIOU",[[1,3312,"\n "]],[3312,3312],[3314,3314]]],[1565959382969,["GJX@GJXAIOU",[[-1,3313," "]],[3314,3314],[3313,3313]]],[1565959384292,["GJX@GJXAIOU",[[1,3308," "]],[3307,3307],[3308,3308]]],[1565959388748,["GJX@GJXAIOU",[[-1,3326,"`<%  // 注销的时候可以主动调用销毁 session.invalidate();   %>`"]],[3326,3375],[3326,3326]]],[1565959400701,["GJX@GJXAIOU",[[1,3193,"``"]],[3193,3193],[3195,3195]]],[1565959402170,["GJX@GJXAIOU",[[1,3194,"<a href=\"sessionDestroy.jsp\"> 注销登录，销毁session</a>"]],[3194,3194],[3242,3242]]],[1565959480886,[null,[[-1,1172,"`"],[1,1173,"c"],[1,1178,"`"],[-1,1181,"#"],[1,4080,"#"]],[1172,1172],[4081,4081]]],[1565959480886,[null,[[1,1172,"`"],[-1,1172,"c"],[-1,1178,"`"],[1,1182,"#"],[-1,4080,"#"]],[4081,4081],[1172,1172]]],[1565959454010,["GJX@GJXAIOU",[[-1,808,"### 监听属性值得增加、删除、更改\n- ServletContextAttributeListener\n- HttpSessionAttributeListener\n- ServletRequestAttributeListener"]],[808,925],[808,808]]],[1565959457146,["GJX@GJXAIOU",[[-1,472,"队形"]],[474,474],[472,472]]],[1565959459740,["GJX@GJXAIOU",[[1,474,"z"]],[474,474],[475,475]]],[1565959459914,["GJX@GJXAIOU",[[1,474," "],[1,475," hi"]],[475,475],[478,478]]],[1565959461297,["GJX@GJXAIOU",[[-1,475,"zhi "]],[478,478],[474,474]]],[1565959462526,["GJX@GJXAIOU",[[1,474,"值"]],[474,474],[475,475]]],[1565959468050,["GJX@GJXAIOU",[[-1,810,"这个三个接口都需要实现以下方法\nattributeAdded        setAttribute时触发\nattrⅰbuteRemoved    removeAttribute触发\nattributeReplaced    为已存在的键赋值新的值触发"]],[810,936],[810,810]]],[1565959471098,["GJX@GJXAIOU",[[1,578,"这个三个接口都需要实现以下方法\nattributeAdded        setAttribute时触发\nattrⅰbuteRemoved    removeAttribute触发\nattributeReplaced    为已存在的键赋值新的值触发"]],[578,578],[704,704]]],[1565959476099,["GJX@GJXAIOU",[[1,484,"- "]],[484,484],[486,486]]],[1565959478221,["GJX@GJXAIOU",[[1,518,"- "]],[518,518],[520,520]]],[1565959480051,["GJX@GJXAIOU",[[1,549,"- "]],[549,549],[551,551]]],[1565959540889,[null,[[-1,1061,"`"],[1,1062,"c"],[1,1067,"`"],[-1,1070,"#"],[1,3969,"#"]],[1061,1061],[3970,3970]]],[1565959540889,[null,[[1,1061,"`"],[-1,1061,"c"],[-1,1067,"`"],[1,1071,"#"],[-1,3969,"#"]],[3970,3970],[1061,1061]]],[1565959482556,["GJX@GJXAIOU",[[1,584,"- "]],[584,584],[586,586]]],[1565959485218,["GJX@GJXAIOU",[[1,484,"  "]],[485,485],[487,487]]],[1565959485891,["GJX@GJXAIOU",[[1,520,"  "]],[523,523],[525,525]]],[1565959486458,["GJX@GJXAIOU",[[1,553,"  "]],[555,555],[557,557]]],[1565959487076,["GJX@GJXAIOU",[[1,590,"  "]],[592,592],[594,594]]],[1565959501189,["GJX@GJXAIOU",[[1,628,"|"]],[628,628],[629,629]]],[1565959504772,["GJX@GJXAIOU",[[1,667,"|"]],[667,667],[668,668]]],[1565959506659,["GJX@GJXAIOU",[[1,709," "]],[708,708],[709,709]]],[1565959508267,["GJX@GJXAIOU",[[1,708,"|"]],[708,708],[709,709]]],[1565959516146,["GJX@GJXAIOU",[[1,758,"- "],[1,785,"- "]],[758,815],[760,819]]],[1565959516602,["GJX@GJXAIOU",[[1,758,"  "],[1,787,"  "]],[760,819],[762,823]]],[1565959522501,["GJX@GJXAIOU",[[1,399,"- "],[1,422,"- "],[1,442,"- "]],[399,464],[401,470]]],[1565959523554,["GJX@GJXAIOU",[[1,399,"  "],[1,424,"  "],[1,446,"  "]],[401,470],[403,476]]],[1565959531210,["GJX@GJXAIOU",[[-1,379,"涉及到的类"]],[379,384],[379,379]]],[1565959538788,["GJX@GJXAIOU",[[1,379,"监听使用到的类"]],[379,379],[386,386]]],[1565959600891,[null,[[-1,1097,"`"],[1,1098,"c"],[1,1103,"`"],[-1,1106,"#"],[1,4005,"#"]],[1097,1097],[4006,4006]]],[1565959600891,[null,[[1,1097,"`"],[-1,1097,"c"],[-1,1103,"`"],[1,1107,"#"],[-1,4005,"#"]],[4006,4006],[1097,1097]]],[1565959545885,["GJX@GJXAIOU",[[1,389,"用于"]],[389,389],[391,391]]],[1565959549844,["GJX@GJXAIOU",[[-1,389,"用于"]],[391,391],[389,389]]],[1565959555796,["GJX@GJXAIOU",[[-1,980,"\n"]],[979,979],[978,978]]],[1565959555945,["GJX@GJXAIOU",[[-1,979,"\n"]],[978,978],[977,977]]],[1565959556237,["GJX@GJXAIOU",[[-1,978,"\n"]],[977,977],[976,976]]],[1565959562718,["GJX@GJXAIOU",[[1,851,"使用步骤"]],[851,851],[855,855]]],[1565959569469,["GJX@GJXAIOU",[[-1,981,"\n"]],[980,980],[979,979]]],[1565959569640,["GJX@GJXAIOU",[[-1,980,"\n"]],[979,979],[978,978]]],[1565959571714,["GJX@GJXAIOU",[[-1,1107,"\n"]],[1106,1106],[1105,1105]]],[1565959572234,["GJX@GJXAIOU",[[-1,1106,"\n"]],[1105,1105],[1104,1104]]],[1565959586754,["GJX@GJXAIOU",[[-1,4002,"# Ajax\n\n##  含义\n- 全称：Asynchronous  JavaScript and XML\nAjax 通过与服务器进行少量的数据交互，可以使网页实现**异步局部的更新**，意味着可以在不重新加载这个网页的情况下，对网页的某部分进行更新。（传统的网页需要更新内容必须重载整个网页）\n\nAjax 需要：HTML、CSS、JavaScript、Servlet 做技术支撑；\n\n## 传统的客户端与服务器交换数据流程\n\n* 客户端发起一个get或者post请求并且携带参数\n* 目前已知客户端发起请求的方式都会有页面跳转效果\n* 服务器(jsp, servlet)接受到客户端参数执行操作(业务逻辑判断,数据库增删改查)\n* 服务根据执行的结果转发或者重定向\n\n\n\n## Ajax核心类: XMLHttpRequest\n\nXHR是 Javascript中的类,执行在客户端。中文可以解释为可扩展超文本传输请求,此类在js中使用。\n但是该类在 IE5 和 IE6 中，必须使用特定于 IE 的 ActiveXObject()构造函数代替。\n\nXMLHttpRequest对象提供了对HTTP协议的完全的访问,包括做出POST和HEAD请求以及普通的GET请求的能力。 XMLHttpRequest可以同步或异步返回Web服务器的响应,并且能以文本或者一个DOM文档形式返回内容。尽管名为 XMLHttpRequest,它并不限于和XML文档一起使用:它可以接收任何形式的文本文档。\n\n使用步骤:\n1 XMLHttpRequest创建\n2 XMLHttpRequest请求\n3 XMLHttpRequest响应\n\n\n### XMLHttpRequest请求相关的方法\n\n- `xhr.open(\"Get\",\"test. html\", true)`\n规定请求的类型、URL以及是否异步处理请求。\n  * method:请求的类型;GET或POST\n  * url:文件在服务器上的位置\n  * async:true(异步)或 false(同步)\n\n\n- 针对于 GET 和 POST 在 send（作用是：将请求发送到服务器） 和 open 使用区别\nGET 的请求数据可以放在 URL 中以键值对形式传递；\nxhr.open(\"GET\", \"checkusername?name=\" + usernamestr, false);\nxhr.send()\nPOST 请求放在 send 里面以键值对的形式传递到服务器;\nxhr.open(\"POST\", \"checkuser“, false);\nxhr. send(“name=” + usernamestr );\n\n**注：**在使用 POST 请求时候，必须在**open 后面**加上下面这句话，目的是告诉服务器，客户端此次请求的数据是一个表单提交，如果不加会造成后台 Servlet 无法通过 getRequestPrarmter 获取到数据\n`ⅹhr. setRequestHeader(\" Content-type\", “application/x-www-form-urlencoded“)`\n\n### XMLHttpRequest请求过程\n\n- XMLHttpRequest. onreadystatechange  存储函数(或函数名)，每当 readystate属性改变时,就会调用该函数。\n\n- XMLHttpRequest.readyState  请求状态\n存有 XMLHttpRequest的状态。从0到4发生变化。\n  * 0:请求未初始化\n  * 1:服务器连接已建立\n  * 2:请求已接收\n  * 3:请求处理中\n  * 4:请求已完成,且响应已就绪\n\n- XMLHttpRequest. status 响应码\n  - 200:\"OK\"\n  - 404:未找到页面\n\n\n\n## 常见使用 Ajax的地方\n\n1第一、输入值校验的问题，申请用户的时候检查用户名是否重复\n2第二、层级联动显示的问题。级联菜单,导航树等\n3第三、请求结果只改变部分页面,数据录入和列表显示在同一个页面如,论坛的回复帖子和帖子列表在一个页面上的时候。\n4第四、由于技术原因而使用 iframe的问题避免 iframe的嵌套引入的技术难题\n5第五、翻页,下一页。不需要刷新的翻页\n\n\n\n"]],[4002,5822],[4002,4002]]]],null,"GJX@GJXAIOU"],["f60fe647-70b4-48d2-bc3d-4f794ffdbb37",1565962273068,"# JavaEEDay48 监听器\n\n\n## 概念\n- 监听你的 web 应用，监听许多信息的初始化、销毁、增加、修改、删除值等；\n- 监听器用于监听一些重要事件的发生，监听器对象可以在事情发生前、发生后可以做一些必要的处理；\n- 主要使用场景：实现系统的日志；\n\n\n## 类型分类\n- 按监听的对象划分:\n  - 用于监听应用程序环境对象( ServletContext)的事件监听器\n  - 用于监听用户会话对象( HttpSession)的事件监听器\n  - 用于监听请求消息对象( ServletRequest)的事件监听器\n\n- 按监听的事件划分：\n  - 用于监听域对象自身的创建和销毁的事件监听器\n  - 用于监听域对象中的属性的增加和删除的事件监听器\n  - 用于监听绑定到 HttpSession域中的某个对象的状态的事件监听器\n\n### 监听使用到的类\n- 监听域对象的创建和销毁\n  - ServletContextListener\n  - HttpSessionListener\n  - ServletRequestListener\n\n- 监听域中属性值 的增加和删除 \n  - ServletContextAttributeListener\n  - HttpSessionAttributeListener\n  - ServletRequestAttributeListener \n  - 这个三个接口都需要实现以下方法\nattributeAdded    |    setAttribute时触发\nattrⅰbuteRemoved  |  removeAttribute触发\nattributeReplaced   |  为已存在的键赋值新的值触发\n- 监听绑定到 HttpSession域中的某个对象的状态的事件\n  - HttpsessionBindingListener\n  - HttpSessionActivationListener (略)\n\n\n\n### 监听器使用步骤示例\n1.自定义类实现对应的 Listener，同时重写方法；\n2.在 web.xml 中配置\n```xml\n<listener>\n  <listener-class>完整的类名</listener-class>\n</listener>\n```\n\n\n### js 中事件监听\n- 对鼠标的监听：`onclick`、`onmouseout`、`onmouseover`\n- 对键盘的监听：`onkeyDown()`\n- 对表单事件的监听：`onblur`、`onfocuse`、`onchange`\n\n\n## 代码示例\n\n- 以 application 域对象为例，实现 ServletContextLister\n```java\n/**\n * @author GJXAIOU\n * @create 2019-08-15-18:18\n */\npublic class ApplicationListener implements ServletContextListener {\n    private long beginTime;\n    private long endTime;\n    @Override\n    public void contextInitialized(ServletContextEvent servletContextEvent) {\n        long begin = System.currentTimeMillis();\n        System.out.println(\"contextInitialized\");\n    }\n\n    @Override\n    public void contextDestroyed(ServletContextEvent servletContextEvent) {\n        endTime = System.currentTimeMillis();\n        System.out.println(\"contextDestroyed\");\n        System.out.println(\"系统共运行了\" + (endTime - beginTime) + \"毫秒\");\n    }\n}\n```\n对应的 web.xml 配置\n```xml\n    <!--配置监听器，只需配置实现了监听器接口的类的全称，不需要配置范围，因为针对所有的监听对象-->\n    <listener>\n        <listener-class>gjxaiou.ApplicationListener</listener-class>\n    </listener>\n```\n\n其余的域对象相似；下面接着以 request 为例\n```java\n/**\n * @author GJXAIOU\n * @create 2019-08-15-18:48\n */\npublic class requestListener implements ServletRequestListener {\n    @Override\n    public void requestDestroyed(ServletRequestEvent servletRequestEvent) {\n\n    }\n\n    // 每个请求创建的时候就会执行，可以用作计数，和过滤器功能相似；\n    @Override\n    public void requestInitialized(ServletRequestEvent servletRequestEvent) {\n\n    }\n}\n```\n同样需要配置 XML 文件，配置同上；\n\n- 监听 session 域对象的创建和销毁\n```java\n/**\n * @author GJXAIOU\n * @create 2019-08-15-18:39\n */\npublic class SessionListener implements HttpSessionListener {\n\n    @Override\n    public void sessionCreated(HttpSessionEvent httpSessionEvent) {\n        System.out.println(\"sessionCreated\");\n\n    }\n\n    // 浏览器关闭不会执行该方法，因为session并没有销毁，重写打开浏览器不能使用上次创建的session而是创建了新的session是因为\n    // sessionId丢失，只有第一个session的浏览器关闭30min之后才会执行第一个session的sessionDestroy方法\n    // 或者主动调用invalidate()方法销毁session\n    @Override\n    public void sessionDestroyed(HttpSessionEvent httpSessionEvent) {\n        System.out.println(\"sesseionDestroyed\");\n    }\n}\n```\n\n因为 session 对象默认关闭浏览器 30min 之后才会销毁，因此可以手动销毁，在访问的页面中可以以超链接的方式，设置一个 注销的按钮(button)并将其指向销毁页面`<a href=\"sessionDestroy.jsp\"> 注销登录，销毁session</a>`，在销毁页面(sessionDestroy.jsp)中实现销毁：\nsessionDestroy.jsp\n```jsp\n<body>\n  <%\n  // 注销的时候可以主动调用销毁\n  session.invalidate();\n  %>  \n</body>\n```\n\n\n\n- 以 application 域对象为例，监听其域对象的变化\n```java\n/**\n * @author GJXAIOU\n * @create 2019-08-15-18:57\n */\npublic class ApplicationAttributeListener implements ServletContextAttributeListener {\n    // 监听application对象，其中增加属性的时候触发，对应方法：setAttributes()\n    @Override\n    public void attributeAdded(ServletContextAttributeEvent servletContextAttributeEvent) {\n\n    }\n\n    // 监听application对象，其中删除属性的时候触发，对应方法：removeAttributes()\n    @Override\n    public void attributeRemoved(ServletContextAttributeEvent servletContextAttributeEvent) {\n\n    }\n\n    // 监听application对象，其中重新赋值属性，覆盖之前数据的时候触发。\n    @Override\n    public void attributeReplaced(ServletContextAttributeEvent servletContextAttributeEvent) {\n\n    }\n}\n```\n\n\n\n\n\n\n\n\n",[[1565962261323,["GJX@GJXAIOU",[[-1,377,"#"]],[378,378],[377,377]]],[1565962267003,["GJX@GJXAIOU",[[-1,845,"#"]],[846,846],[845,845]]],[1565962270357,["GJX@GJXAIOU",[[-1,980,"#"]],[981,981],[980,980]]]],null,"GJX@GJXAIOU"],["d2340620-b5aa-4692-b9b5-c609f4c11a43",1566002023224,"# JavaEEDay48 监听器\n\n\n## 概念\n- 监听你的 web 应用，监听许多信息的初始化、销毁、增加、修改、删除值等；\n- 监听器用于监听一些重要事件的发生，监听器对象可以在事情发生前、发生后可以做一些必要的处理；\n- 主要使用场景：实现系统的日志；\n\n\n## 类型分类\n- 按监听的对象划分:\n  - 用于监听应用程序环境对象( ServletContext)的事件监听器\n  - 用于监听用户会话对象( HttpSession)的事件监听器\n  - 用于监听请求消息对象( ServletRequest)的事件监听器\n\n- 按监听的事件划分：\n  - 用于监听域对象自身的创建和销毁的事件监听器\n  - 用于监听域对象中的属性的增加和删除的事件监听器\n  - 用于监听绑定到 HttpSession域中的某个对象的状态的事件监听器\n\n## 监听使用到的类\n- 监听域对象的创建和销毁\n  - ServletContextListener\n  - HttpSessionListener\n  - ServletRequestListener\n\n- 监听域中属性值 的增加和删除 \n  - ServletContextAttributeListener\n  - HttpSessionAttributeListener\n  - ServletRequestAttributeListener \n  - 这个三个接口都需要实现以下方法\nattributeAdded    |    setAttribute时触发\nattrⅰbuteRemoved  |  removeAttribute触发\nattributeReplaced   |  为已存在的键赋值新的值触发\n- 监听绑定到 HttpSession域中的某个对象的状态的事件\n  - HttpsessionBindingListener\n  - HttpSessionActivationListener (略)\n\n\n\n## 监听器使用步骤示例\n1.自定义类实现对应的 Listener，同时重写方法；\n2.在 web.xml 中配置\n```xml\n<listener>\n  <listener-class>完整的类名</listener-class>\n</listener>\n```\n\n\n## js 中事件监听\n- 对鼠标的监听：`onclick`、`onmouseout`、`onmouseover`\n- 对键盘的监听：`onkeyDown()`\n- 对表单事件的监听：`onblur`、`onfocuse`、`onchange`\n\n\n## 代码示例\n\n- 以 application 域对象为例，实现 ServletContextLister\n```java\n/**\n * @author GJXAIOU\n * @create 2019-08-15-18:18\n */\npublic class ApplicationListener implements ServletContextListener {\n    private long beginTime;\n    private long endTime;\n    @Override\n    public void contextInitialized(ServletContextEvent servletContextEvent) {\n        long begin = System.currentTimeMillis();\n        System.out.println(\"contextInitialized\");\n    }\n\n    @Override\n    public void contextDestroyed(ServletContextEvent servletContextEvent) {\n        endTime = System.currentTimeMillis();\n        System.out.println(\"contextDestroyed\");\n        System.out.println(\"系统共运行了\" + (endTime - beginTime) + \"毫秒\");\n    }\n}\n```\n对应的 web.xml 配置\n```xml\n    <!--配置监听器，只需配置实现了监听器接口的类的全称，不需要配置范围，因为针对所有的监听对象-->\n    <listener>\n        <listener-class>gjxaiou.ApplicationListener</listener-class>\n    </listener>\n```\n\n其余的域对象相似；下面接着以 request 为例\n```java\n/**\n * @author GJXAIOU\n * @create 2019-08-15-18:48\n */\npublic class requestListener implements ServletRequestListener {\n    @Override\n    public void requestDestroyed(ServletRequestEvent servletRequestEvent) {\n\n    }\n\n    // 每个请求创建的时候就会执行，可以用作计数，和过滤器功能相似；\n    @Override\n    public void requestInitialized(ServletRequestEvent servletRequestEvent) {\n\n    }\n}\n```\n同样需要配置 XML 文件，配置同上；\n\n- 监听 session 域对象的创建和销毁\n```java\n/**\n * @author GJXAIOU\n * @create 2019-08-15-18:39\n */\npublic class SessionListener implements HttpSessionListener {\n\n    @Override\n    public void sessionCreated(HttpSessionEvent httpSessionEvent) {\n        System.out.println(\"sessionCreated\");\n\n    }\n\n    // 浏览器关闭不会执行该方法，因为session并没有销毁，重写打开浏览器不能使用上次创建的session而是创建了新的session是因为\n    // sessionId丢失，只有第一个session的浏览器关闭30min之后才会执行第一个session的sessionDestroy方法\n    // 或者主动调用invalidate()方法销毁session\n    @Override\n    public void sessionDestroyed(HttpSessionEvent httpSessionEvent) {\n        System.out.println(\"sesseionDestroyed\");\n    }\n}\n```\n\n因为 session 对象默认关闭浏览器 30min 之后才会销毁，因此可以手动销毁，在访问的页面中可以以超链接的方式，设置一个 注销的按钮(button)并将其指向销毁页面`<a href=\"sessionDestroy.jsp\"> 注销登录，销毁session</a>`，在销毁页面(sessionDestroy.jsp)中实现销毁：\nsessionDestroy.jsp\n```jsp\n<body>\n  <%\n  // 注销的时候可以主动调用销毁\n  session.invalidate();\n  %>  \n</body>\n```\n\n\n\n- 以 application 域对象为例，监听其域对象的变化\n```java\n/**\n * @author GJXAIOU\n * @create 2019-08-15-18:57\n */\npublic class ApplicationAttributeListener implements ServletContextAttributeListener {\n    // 监听application对象，其中增加属性的时候触发，对应方法：setAttributes()\n    @Override\n    public void attributeAdded(ServletContextAttributeEvent servletContextAttributeEvent) {\n\n    }\n\n    // 监听application对象，其中删除属性的时候触发，对应方法：removeAttributes()\n    @Override\n    public void attributeRemoved(ServletContextAttributeEvent servletContextAttributeEvent) {\n\n    }\n\n    // 监听application对象，其中重新赋值属性，覆盖之前数据的时候触发。\n    @Override\n    public void attributeReplaced(ServletContextAttributeEvent servletContextAttributeEvent) {\n\n    }\n}\n```\n\n\n\n\n\n\n\n\n",[[1566001967715,["GJX@GJXAIOU",[[1,132,"- \n"]],[131,131],[134,134]]],[1566001968201,["GJX@GJXAIOU",[[1,134,"-"]],[134,134],[135,135]]],[1566001969160,["GJX@GJXAIOU",[[-1,134,"-"]],[135,135],[134,134]]],[1566001970361,["GJX@GJXAIOU",[[1,134," zhen"]],[134,134],[139,139]]],[1566001971096,["GJX@GJXAIOU",[[-1,135,"zhen"]],[139,139],[135,135]]],[1566001982338,["GJX@GJXAIOU",[[1,135,"针对三大域对象：requw"]],[135,135],[148,148]]],[1566001983057,["GJX@GJXAIOU",[[-1,147,"w"]],[148,148],[147,147]]],[1566001991809,["GJX@GJXAIOU",[[1,147,"est/session/aoo"]],[147,147],[162,162]]],[1566001992568,["GJX@GJXAIOU",[[-1,160,"oo"]],[162,162],[160,160]]],[1566001997162,["GJX@GJXAIOU",[[1,160,"pplication进行"]],[160,160],[172,172]]],[1566001997195,["GJX@GJXAIOU",[[1,170," "]],[172,172],[173,173]]],[1566001999387,["GJX@GJXAIOU",[[1,173,"监听"]],[173,173],[175,175]]]],null,"GJX@GJXAIOU"]]}