{"compress":true,"commitItems":[["61bab729-6845-40df-aa11-b17e155cc9d8",1556872841277,"",[[1556872806051,["GJX@GJXAIOU",[[1,0,"# JavaDay14-球员管理项目\n\n\n\n"]],[0,0],[21,21]]],[1556872845393,["GJX@GJXAIOU",[[1,21,"![球员]($resource/%E7%90%83%E5%91%98.jpg)\n![球队]($resource/%E7%90%83%E9%98%9F.jpg)\n![项目架构]($resource/%E9%A1%B9%E7%9B%AE%E6%9E%B6%E6%9E%84.jpg)\n"]],[21,21],[161,161]]],[1556872879040,["GJX@GJXAIOU",[[-1,21,"![球员]($resource/%E7%90%83%E5%91%98.jpg)"]],[21,60],[21,21]]],[1556872889432,["GJX@GJXAIOU",[[1,21,"![球员 2]($resource/%E7%90%83%E5%91%98%202.jpg)"]],[21,21],[67,67]]],[1556872892864,["GJX@GJXAIOU",[[1,67,"\n"]],[66,66],[67,67]]],[1556872895255,["GJX@GJXAIOU",[[1,108,"\n"]],[107,107],[108,108]]],[1556872896615,["GJX@GJXAIOU",[[1,170,"\n"]],[168,168],[169,169]]],[1556872899076,["GJX@GJXAIOU",[[-1,25," 2"]],[27,27],[25,25]]],[1556872909382,["GJX@GJXAIOU",[[1,169,"\n"]],[168,168],[169,169]]],[1556872910980,["GJX@GJXAIOU",[[-1,169,"\n"],[1,170,"具体"]],[169,169],[171,171]]],[1556872912324,["GJX@GJXAIOU",[[1,171,"代码："]],[171,171],[174,174]]],[1556872912927,["GJX@GJXAIOU",[[1,174,"\n\n"]],[174,174],[175,175]]],[1556872914543,["GJX@GJXAIOU",[[-1,175,"\n"],[1,176,"`"]],[175,175],[176,176]]],[1556872914990,["GJX@GJXAIOU",[[1,176,"``"]],[176,176],[178,178]]],[1556872915013,["GJX@GJXAIOU",[[1,178,"language\n```\n"]],[178,178],[178,186]]],[1556872915187,["GJX@GJXAIOU",[[1,178,"`"],[1,186,"`"]],[178,186],[178,188]]],[1556872916845,["GJX@GJXAIOU",[[-1,178,"`language`"],[1,188,"j"]],[178,188],[179,179]]],[1556872917227,["GJX@GJXAIOU",[[1,179,"ava"]],[179,179],[182,182]]],[1556872917446,["GJX@GJXAIOU",[[1,183,"\n"]],[182,182],[183,183]]],[1556872927534,["GJX@GJXAIOU",[[1,183,"package src.com.qfedu.entity;\n\n/*\n 球员实体类：\n \t成员变量：\n \t\t姓名，编号，年龄，工资，位置\n \t成员方法：\n \t\t投篮，传球\n */\npublic class Player {\n\t//成员变量\n\tprivate String name;\n\tprivate int id; //实现ID的自动增长，这里要使用计数器\n\tprivate int age;\n\tprivate double salary;\n\tprivate String location;\n\t\n\tprivate static int count = 1; //计数器\n\t\n\t//构造代码块来完成计数器操作\n\t{\n\t\tthis.id = count++;\n\t}\n\t\n\tpublic Player() {}\n\t\n\tpublic Player(String name, int age, double salary, String location) {\n\t\t//这里使用自己的set方法，来完成赋值成员变量的操作\n\t\tthis.setName(name);\n\t\tthis.setAge(age);\n\t\tthis.setSalary(salary);\n\t\tthis.setLocation(location);\n\t}\n\t\n\tpublic int getId() {\n\t\treturn id;\n\t}\n\t\n\tpublic String getName() {\n\t\treturn name;\n\t}\n\t\n\tpublic void setName(String name) {\n\t\tthis.name = name;\n\t}\n\tpublic int getAge() {\n\t\treturn age;\n\t}\n\t\n\tpublic void setAge(int age) {\n\t\tif (age <= 0 || age > 45) {\n\t\t\tthis.age = 19;\n\t\t} else {\n\t\t\tthis.age = age;\n\t\t}\n\t}\n\t\n\tpublic double getSalary() {\n\t\treturn salary;\n\t}\n\t\n\tpublic void setSalary(double salary) {\n\t\tif (salary <= 0) {\n\t\t\tthis.salary = 1;\n\t\t} else {\n\t\t\tthis.salary = salary;\n\t\t}\n \t}\n\t\n\tpublic String getLocation() {\n\t\treturn location;\n\t}\n\t\n\tpublic void setLocation(String location) {\n\t\tthis.location = location;\n\t}\n\t\n\t//普通的成员方法页搞定\n\tpublic void shot() {\n\t\tSystem.out.println(this.getName() + \"投篮练习中~~~\");\n\t}\n\t\n\tpublic void passBall() {\n\t\tSystem.out.println(this.getName() + \"传球练习中~~~\");\n\t}\n\n\t//重写的Java中超类【Object】类中toString,toString是该对象的描述\n\t//当通过System.out.println(player)会自动调用的方法\n\t@Override\n\tpublic String toString() {\n\t\treturn \"[ID:\" + this.id + \" Name:\" + this.name + \" Age:\" + this.age\n\t\t\t\t+ \" Salary:\" + this.salary + \" Location:\" + this.location + \"]\";\n\t}\n}\n"]],[183,183],[1804,1804]]],[1556872935684,["GJX@GJXAIOU",[[1,1809,"\n"]],[1808,1808],[1809,1809]]],[1556872935827,["GJX@GJXAIOU",[[1,1810,"\n"]],[1809,1809],[1810,1810]]],[1556872935964,["GJX@GJXAIOU",[[1,1811,"\n"]],[1810,1810],[1811,1811]]],[1556872936069,["GJX@GJXAIOU",[[1,1812,"\n"]],[1811,1811],[1812,1812]]],[1556872937239,["GJX@GJXAIOU",[[-1,1812,"\n"],[1,1813,"`"]],[1812,1812],[1813,1813]]],[1556872937661,["GJX@GJXAIOU",[[1,1813,"``"]],[1813,1813],[1815,1815]]],[1556872937684,["GJX@GJXAIOU",[[1,1815,"language\n```\n"]],[1815,1815],[1815,1823]]],[1556872938854,["GJX@GJXAIOU",[[-1,1815,"language"],[1,1823,"j"]],[1815,1823],[1816,1816]]],[1556872939372,["GJX@GJXAIOU",[[1,1816,"ava"]],[1816,1816],[1819,1819]]],[1556872939731,["GJX@GJXAIOU",[[1,1820,"\n"]],[1819,1819],[1820,1820]]],[1556872949910,["GJX@GJXAIOU",[[1,1811," TeamMansge"]],[1811,1811],[1822,1822]]],[1556872950677,["GJX@GJXAIOU",[[-1,1819,"sge"]],[1822,1822],[1819,1819]]],[1556872951781,["GJX@GJXAIOU",[[1,1819,"ager"]],[1819,1819],[1823,1823]]],[1556872958603,["GJX@GJXAIOU",[[1,1832,"package src.com.qfedu.dao;\n\nimport java.util.Scanner;\n\nimport src.com.qfedu.entity.Player;\n\npublic class TeamManager {\n\t//球队的名字\n\tprivate String teamName;\n\t//保存球员信息的数组\n\tprivate Player[] allPlayers = new Player[defaultCount];\n\n\t//统计当前球队中有多少球员\n\tprivate static int itemCount = 0; //元素个数\n\t//球队的默认球员个数\n\tprivate static final int defaultCount = 10; \n\n\tpublic TeamManager() {}\n\n\tpublic TeamManager(String teamName) {\n\t\tthis.setTeamName(teamName);\n\t}\n\n\tpublic void setTeamName(String teamName) {\n\t\tthis.teamName = teamName;\n\t}\n\n\tpublic String getTeamName() {\n\t\treturn teamName;\n\t}\n\n\t/*\n\t * 添加球员\n\t * 解雇球员\n\t * 修改球员信息\n\t * 查询球员信息\n\t * \n\t * 排序算法\n\t * \n\t * 数组增长\n\t */\n\t/**\n\t * 添加新球员到数组中\n\t * @param playerToAdd 要添加的球员类对象\n\t */\n\tpublic void addPlayer(Player playerToAdd) {\n\t\t//参数合法性判断(以后叫【异常处理】)\n\t\tif (null == playerToAdd) {\n\t\t\tSystem.out.println(\"球员信息为空，不可添加\");\n\t\t\treturn;\n\t\t}\n\n\t\t//类内有一个itemCount的静态成员变量，是用来统计插入的元素个数，而且也是下个元素保存的下标位置\n\t\t//因为是插入操作，所以要考虑数组的容量问题，如果插入的数据个数已经大于了数组的长度，需要扩容\n\t\tif (itemCount >= allPlayers.length) {\n\t\t\t//扩容\n\t\t\tgrow();\n\t\t}\n\n\t\tallPlayers[itemCount++] = playerToAdd;\n\t}\n\n\t/**\n\t * 通过球员的ID删除球员\n\t * @param playerID\n\t */\n\tpublic void layoffPlayerByPlayerID(int playerID) {\n\t\t//需求查询方法，调用类内私有化通过球员ID查询球员在数组中位置的方法，获取下标\n\t\tint index = findPlayerIndexByPlayerID(playerID);\n\n\t\tif (index >= 0) {\n\t\t\t//删除该位置的球员，数组整体左移\n\t\t\t/*   1 2 3 4 5\n\t\t\t index 1   << 3\n\t\t\t index 3   << 1\n\t\t\t */\n\t\t\tfor (int i = index; i < itemCount - 1; i++) {\n\t\t\t\tallPlayers[i] = allPlayers[i + 1];\n\t\t\t}\n\t\t\t//原本最后一个有效元素赋值为null\n\t\t\tallPlayers[itemCount - 1] = null;\n\n\t\t\t//球员的球员个数 - 1\n\t\t\titemCount--;\n\t\t} else {\n\t\t\tSystem.out.println(\"查无此人，无法删除\");\n\t\t}\n\t}\n\n\t/**\n\t * 通过球员的ID，来查询球员的信息\n\t * @param playerID 要展示的球员ID号\n\t */\n\tpublic void showPlayerInfoByPlayerID(int playerID) {\n\t\tint index = findPlayerIndexByPlayerID(playerID);\n\n\t\tif (index > -1) {\n\t\t\tSystem.out.println(allPlayers[index]);\n\t\t} else {\n\t\t\tSystem.out.println(\"查无此人\");\n\t\t}\n\t}\n\n\t/**\n\t * 通过球员ID 修改球员信息\n\t * @param playerID 需要修改信息的球员ID\n\t */\n\tpublic void modifyPlayerInfoByPlayerID(int playerID) {\n\t\tint index = findPlayerIndexByPlayerID(playerID);\n\t\tScanner sc = new Scanner(System.in);\n\t\t//表示找到球员，进行修改操作\n\t\tif (index > -1) {\n\n\t\t\t//while(true) switch - case\n\t\t\tint flag = 0;\n\t\t\tint choose = -1;\n\t\t\tPlayer temp = allPlayers[index];\n\n\t\t\twhile (true) {\n\t\t\t\tSystem.out.println(\"修改\" + temp.getId() + \":\" + temp.getName() + \"的信息\");\n\t\t\t\tSystem.out.println(\"***Age:\" + temp.getAge());\n\t\t\t\tSystem.out.println(\"***Salary:\" + temp.getSalary());\n\t\t\t\tSystem.out.println(\"***Location:\" + temp.getLocation());\n\n\t\t\t\tSystem.out.println(\"1. 修改球员姓名\");\n\t\t\t\tSystem.out.println(\"2. 修改球员年龄\");\n\t\t\t\tSystem.out.println(\"3. 修改球员工资\");\n\t\t\t\tSystem.out.println(\"4. 修改球员位置\");\n\t\t\t\tSystem.out.println(\"5. 退出\");\n\n\t\t\t\tchoose = sc.nextInt();\n\t\t\t\tsc.nextLine();\n\n\t\t\t\tswitch (choose) {\n\t\t\t\tcase 1:\n\t\t\t\t\tSystem.out.println(\"请输入球员的姓名:\");\n\t\t\t\t\tString name = sc.nextLine();\n\t\t\t\t\ttemp.setName(name);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2:\n\t\t\t\t\tSystem.out.println(\"请输入球员的年龄:\");\n\t\t\t\t\tint age = sc.nextInt();\n\t\t\t\t\ttemp.setAge(age);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 3:\n\t\t\t\t\tSystem.out.println(\"请输入球员的工资:\");\n\t\t\t\t\tdouble salary = sc.nextDouble();\n\t\t\t\t\ttemp.setSalary(salary);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 4:\n\t\t\t\t\tSystem.out.println(\"请输入球员的位置:\");\n\t\t\t\t\tString location = sc.nextLine();\n\t\t\t\t\ttemp.setLocation(location);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 5:\n\t\t\t\t\tflag = 1;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tSystem.out.println(\"选择错误\");\n\t\t\t\t\tbreak;\n\t\t\t\t} //switch(choose) - case\n\n\t\t\t\tif (1 == flag) {\n\t\t\t\t\tallPlayers[index] = temp;\n\t\t\t\t\tSystem.out.println(\"保存退出\");\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t} //while (true)\n\n\t\t} else {\n\t\t\tSystem.out.println(\"查无此人\");\n\t\t}\n\t\t//sc.close();\n\t} \n\n\t\n\t\n\t/**\n\t * 工资的降序排序\n\t */\n\tpublic void descendingSelectSortBySalary() {\n\t\t//保护源数据！！！\n\t\t//1. 准备一个数组专门用来做排序操作，数组的大小和源数据有效元素个数一致\n\t\tPlayer[] sortArray = new Player[itemCount];\n\n\t\t//2. 数据拷贝\n\t\tfor (int i = 0; i < itemCount; i++) {\n\t\t\tsortArray[i] = allPlayers[i];\n\t\t}\n\n\t\t//外层控制选择排序的次数\n\t\tfor (int i = 0; i < itemCount - 1; i++) {\n\t\t\tint index = i;\n\n\t\t\tfor (int j = i + 1; j < itemCount; j++) {\n\t\t\t\tif (sortArray[index].getSalary() < sortArray[j].getSalary()) {\n\t\t\t\t\tindex = j;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (index != i) {\n\t\t\t\tPlayer temp = sortArray[index];\n\t\t\t\tsortArray[index] = sortArray[i];\n\t\t\t\tsortArray[i] = temp;\n\t\t\t}\n\t\t}\n\n\t\tshowSortResult(sortArray);\n\t}\n\n\t/**\n\t * 年龄的升序排序\n\t */\n\tpublic void ascendingSelectSortByAge() {\n\t\t//保护源数据！！！\n\t\t//1. 准备一个数组专门用来做排序操作，数组的大小和源数据有效元素个数一致\n\t\tPlayer[] sortArray = new Player[itemCount];\n\n\t\t//2. 数据拷贝\n\t\tfor (int i = 0; i < itemCount; i++) {\n\t\t\tsortArray[i] = allPlayers[i];\n\t\t}\n\n\t\t//外层控制选择排序的次数\n\t\tfor (int i = 0; i < itemCount - 1; i++) {\n\t\t\tint index = i;\n\n\t\t\tfor (int j = i + 1; j < itemCount; j++) {\n\t\t\t\tif (sortArray[index].getAge() > sortArray[j].getAge()) {\n\t\t\t\t\tindex = j;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (index != i) {\n\t\t\t\tPlayer temp = sortArray[index];\n\t\t\t\tsortArray[index] = sortArray[i];\n\t\t\t\tsortArray[i] = temp;\n\t\t\t}\n\t\t}\n\n\t\tshowSortResult(sortArray);\n\t}\n\n\t/**\n\t * 自己研究一下冒泡排序\n\t */\n\tpublic void descendingBubbleSortByAge() {\n\t\t//保护源数据！！！\n\t\t//1. 准备一个数组专门用来做排序操作，数组的大小和源数据有效元素个数一致\n\t\tPlayer[] sortArray = new Player[itemCount];\n\n\t\t//2. 数据拷贝\n\t\tfor (int i = 0; i < itemCount; i++) {\n\t\t\tsortArray[i] = allPlayers[i];\n\t\t}\n\n\t\t//外层控制比较的轮次\n\t\tfor (int i = 0; i < itemCount - 1; i++) {\n\t\t\t//内层控制两两比较次数\n\t\t\tfor (int j = 0; j < itemCount - i - 1; j++) {\n\n\t\t\t\tif (sortArray[j].getAge() < sortArray[j + 1].getAge()) {\n\t\t\t\t\tPlayer temp = sortArray[j];\n\t\t\t\t\tsortArray[j] = sortArray[j + 1];\n\t\t\t\t\tsortArray[j + 1] = temp;\n\t\t\t\t}\n\t\t\t}\n\t\t} \n\n\t\tshowSortResult(sortArray);\n\n\t}\n\n\n\n\tpublic void showAllPlayers() {\n\t\tfor (Player player : allPlayers) {\n\t\t\tif (null == player) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tSystem.out.println(player);\n\t\t}\n\t}\n\n\t/**\n\t * 需要一个扩容方法，方法不需要参数，不要类外调用，只是在类内使用\n\t */\n\tprivate void grow() {\n\t\t//1. 获取原数组元素个数\n\t\tint oldCapacity = this.allPlayers.length;\n\n\t\t//2. 通过原数组元素计算新的元素个数 , 大约相对于原本元素个数的1.5倍\n\t\tint newCapacity = oldCapacity + (oldCapacity >> 1);\n\n\t\t//3. 创建新的数组，元素格式是原本的1.5倍\n\t\tPlayer[] newArray = new Player[newCapacity];\n\n\t\t//4. 利用循环拷贝数据\n\t\tfor (int i = 0; i < oldCapacity; i++) {\n\t\t\tnewArray[i] = this.allPlayers[i];\n\t\t}\n\n\t\t//5. 地址交换\n\t\tthis.allPlayers = newArray;\n\t}\n\n\t/**\n\t * 私有化的方法，只提供给类内使用，用来获取指定球员ID在数组中下标位置\n\t * @param playerID 要查询的球员ID号\n\t * @return int类型，返回查询的数据在数组中的下标位置，如果没有找到，返回-1\n\t */\n\tprivate int findPlayerIndexByPlayerID(int playerID) {\n\t\t//参数合法性判断\n\t\tif (playerID < 1 || playerID > 100) {\n\t\t\tSystem.out.println(\"传入球员ID不合法\");\n\t\t\treturn -1;\n\t\t}\n\n\t\t//用来保存球员的下标位置\n\t\tint index = -1;\n\n\t\tfor (int i = 0; i < itemCount; i++) {\n\t\t\t//拿球员的ID和传入的ID进行比较\n\t\t\tif (allPlayers[i].getId() == playerID) {\n\t\t\t\tindex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn index;\n\t}\n\n\tprivate void showSortResult(Player[] sortArray) {\n\t\t//增强for循环\n\t\tfor (Player player : sortArray) {\n\t\t\tSystem.out.println(player);\n\t\t}\n\t\t//普通for循环\n\t\t//\t\tfor (int i = 0; i < sortArray.length; i++) {\n\t\t//\t\t\tSystem.out.println(sortArray[i]);\n\t\t//\t\t}\n\t}\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"]],[1832,1832],[8630,8630]]],[1556872964911,["GJX@GJXAIOU",[[1,8635,"\n"]],[8634,8634],[8635,8635]]],[1556872965035,["GJX@GJXAIOU",[[1,8636,"\n"]],[8635,8635],[8636,8636]]],[1556872965149,["GJX@GJXAIOU",[[1,8637,"\n"]],[8636,8636],[8637,8637]]],[1556872972041,["GJX@GJXAIOU",[[-1,8637,"\n"],[1,8638,"v"]],[8637,8637],[8638,8638]]],[1556872972437,["GJX@GJXAIOU",[[1,8638,"iw"]],[8638,8638],[8640,8640]]],[1556872972910,["GJX@GJXAIOU",[[-1,8639,"w"]],[8640,8640],[8639,8639]]],[1556872973126,["GJX@GJXAIOU",[[1,8639,"ew"]],[8639,8639],[8641,8641]]],[1556872973852,["GJX@GJXAIOU",[[1,8641,"\n\n"]],[8641,8641],[8642,8642]]],[1556872975398,["GJX@GJXAIOU",[[-1,8642,"\n"],[1,8643,"`"]],[8642,8642],[8643,8643]]],[1556872975798,["GJX@GJXAIOU",[[1,8643,"``"]],[8643,8643],[8645,8645]]],[1556872975828,["GJX@GJXAIOU",[[1,8645,"language\n```\n"]],[8645,8645],[8645,8653]]],[1556872976702,["GJX@GJXAIOU",[[-1,8645,"language"],[1,8653,"j"]],[8645,8653],[8646,8646]]],[1556872977110,["GJX@GJXAIOU",[[1,8646,"ava"]],[8646,8646],[8649,8649]]],[1556872977357,["GJX@GJXAIOU",[[1,8650,"\n"]],[8649,8649],[8650,8650]]],[1556872978604,["GJX@GJXAIOU",[[1,8650,"package src.com.qfedu.view;\n\nimport java.util.Scanner;\n\nimport src.com.qfedu.dao.TeamManager;\nimport src.com.qfedu.entity.Player;\n\npublic class View {\n\tpublic static void main(String[] args) {\n\n\t\tTeamManager tm = new TeamManager(\"孤狼B组\");\n\n\t\tPlayer p1 = new Player(\"森林狼\", 21, 10000, \"PG\");\n\t\tPlayer p2 = new Player(\"西伯利亚狼\", 19, 9000, \"SF\");\n\t\tPlayer p3 = new Player(\"鸵鸟\", 20, 9500, \"SG\");\n\t\tPlayer p4 = new Player(\"卫生院\", 22, 9800, \"SG\");\n\t\tPlayer p5 = new Player(\"恶狼\", 22, 8800, \"PF\");\n\t\tPlayer p6 = new Player(\"老炮\", 22, 9900, \"C\");\n\n\t\ttm.addPlayer(p1);\n\t\ttm.addPlayer(p2);\n\t\ttm.addPlayer(p3);\n\t\ttm.addPlayer(p4);\n\t\ttm.addPlayer(p5);\n\t\ttm.addPlayer(p6);\n\n\t\tint flag = 0;\n\t\tint choose = 0;\n\t\tint playerID = 0;\n\t\tScanner sc = new Scanner(System.in);\n\t\t\n\t\twhile (true) {\n\t\t\t\n\t\t\t\n\t\t\tSystem.out.println(\"欢迎来到孤狼B组\");\n\t\t\tSystem.out.println(\"1. 展示所有成员\");\n\t\t\tSystem.out.println(\"2. 添加新的成员\");\n\t\t\tSystem.out.println(\"3. 退役老成员\");\n\t\t\tSystem.out.println(\"4. 查询成员资料\");\n\t\t\tSystem.out.println(\"5. 修改成员资料\");\n\t\t\tSystem.out.println(\"6. 按照年龄排序\");\n\t\t\tSystem.out.println(\"7. 按照收入排序\");\n\t\t\tSystem.out.println(\"8. 退出\");\n\t\t\n\t\t\tchoose = sc.nextInt();\n\t\t\tsc.nextLine();\n\t\t\t\n\t\t\tswitch (choose) {\n\t\t\t\tcase 1:\n\t\t\t\t\t//展示所有队员\n\t\t\t\t\ttm.showAllPlayers();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2:\n\t\t\t\t\t//添加新成员\n\t\t\t\t\tSystem.out.println(\"清输入新成员的名字\");\n\t\t\t\t\tString name = sc.nextLine();\n\t\t\t\t\t\n\t\t\t\t\tSystem.out.println(\"请输入新成员年龄\");\n\t\t\t\t\tint age = sc.nextInt();\n\t\t\t\t\tsc.nextLine();\n\t\t\t\t\t\n\t\t\t\t\tSystem.out.println(\"请输入新成员工资\");\n\t\t\t\t\tdouble salary = sc.nextDouble();\n\t\t\t\t\tsc.nextLine();\n\t\t\t\t\t\n\t\t\t\t\tSystem.out.println(\"请输入新成员的位置\");\n\t\t\t\t\tString location = sc.nextLine();\n\t\t\t\t\t\n\t\t\t\t\tPlayer playerToAdd = new Player(name, age, salary, location);\n\t\t\t\t\ttm.addPlayer(playerToAdd);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 3:\n\t\t\t\t\t//退役\n\t\t\t\t\tSystem.out.println(\"请输入要退役的老成员ID\");\n\t\t\t\t\tplayerID = sc.nextInt();\n\t\t\t\t\tsc.nextLine();\n\t\t\t\t\t\n\t\t\t\t\ttm.showPlayerInfoByPlayerID(playerID);\n\t\t\t\t\t\n\t\t\t\t\tSystem.out.println(\"是否要确定删除? Y or N\");\n\t\t\t\t\tchar ch = sc.nextLine().charAt(0);\n\t\t\t\t\tif ('Y' == ch || 'y' == ch) {\n\t\t\t\t\t\ttm.layoffPlayerByPlayerID(playerID);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tbreak;\n\t\t\t\tcase 4:\n\t\t\t\t\t//查询\n\t\t\t\t\tSystem.out.println(\"请输入要查询的老成员ID\");\n\t\t\t\t\tplayerID = sc.nextInt();\n\t\t\t\t\tsc.nextLine();\n\t\t\t\t\t\n\t\t\t\t\ttm.showPlayerInfoByPlayerID(playerID);\n\t\t\t\t\t\n\t\t\t\t\tbreak;\n\t\t\t\tcase 5:\n\t\t\t\t\tSystem.out.println(\"请输入要修改成员ID\");\n\t\t\t\t\tplayerID = sc.nextInt();\n\t\t\t\t\tsc.nextLine();\n\t\t\t\t\t\n\t\t\t\t\ttm.modifyPlayerInfoByPlayerID(playerID);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 6:\n\t\t\t\t\ttm.ascendingSelectSortByAge();\n\t\t\t\t\t\n\t\t\t\t\tbreak;\n\t\t\t\tcase 7:\n\t\t\t\t\ttm.descendingSelectSortBySalary();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 8:\n\t\t\t\t\tflag = 1;\n\t\t\t\t\tbreak;\n\t\n\t\t\t\tdefault:\n\t\t\t\t\tSystem.out.println(\"选择错误\");\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\t\n\t\t\tif (1 == flag) {\n\t\t\t\tSystem.out.println(\"啊，朋友再见~~~\");\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n}\n"]],[8650,8650],[11390,11390]]],[1556872985599,["GJX@GJXAIOU",[[1,175,"\n"]],[174,174],[175,175]]],[1556872986717,["GJX@GJXAIOU",[[1,175,"pa"]],[175,175],[177,177]]],[1556872987475,["GJX@GJXAIOU",[[-1,176,"a"]],[177,177],[176,176]]],[1556872987902,["GJX@GJXAIOU",[[1,176,"ls"]],[176,176],[178,178]]],[1556872988700,["GJX@GJXAIOU",[[-1,177,"s"]],[178,178],[177,177]]],[1556872989774,["GJX@GJXAIOU",[[1,177,"ayer"]],[177,177],[181,181]]]],null,"GJX@GJXAIOU"],["5e991c81-7430-4570-a3a9-03b0f76a52e4",1561595771364,"# JavaDay14-球员管理项目\n\n\n![球员]($resource/%E7%90%83%E5%91%98%202.jpg)\n\n![球队]($resource/%E7%90%83%E9%98%9F.jpg)\n\n![项目架构]($resource/%E9%A1%B9%E7%9B%AE%E6%9E%B6%E6%9E%84.jpg)\n\n\n具体代码：\nplayer\n```java\npackage src.com.qfedu.entity;\n\n/*\n 球员实体类：\n \t成员变量：\n \t\t姓名，编号，年龄，工资，位置\n \t成员方法：\n \t\t投篮，传球\n */\npublic class Player {\n\t//成员变量\n\tprivate String name;\n\tprivate int id; //实现ID的自动增长，这里要使用计数器\n\tprivate int age;\n\tprivate double salary;\n\tprivate String location;\n\t\n\tprivate static int count = 1; //计数器\n\t\n\t//构造代码块来完成计数器操作\n\t{\n\t\tthis.id = count++;\n\t}\n\t\n\tpublic Player() {}\n\t\n\tpublic Player(String name, int age, double salary, String location) {\n\t\t//这里使用自己的set方法，来完成赋值成员变量的操作\n\t\tthis.setName(name);\n\t\tthis.setAge(age);\n\t\tthis.setSalary(salary);\n\t\tthis.setLocation(location);\n\t}\n\t\n\tpublic int getId() {\n\t\treturn id;\n\t}\n\t\n\tpublic String getName() {\n\t\treturn name;\n\t}\n\t\n\tpublic void setName(String name) {\n\t\tthis.name = name;\n\t}\n\tpublic int getAge() {\n\t\treturn age;\n\t}\n\t\n\tpublic void setAge(int age) {\n\t\tif (age <= 0 || age > 45) {\n\t\t\tthis.age = 19;\n\t\t} else {\n\t\t\tthis.age = age;\n\t\t}\n\t}\n\t\n\tpublic double getSalary() {\n\t\treturn salary;\n\t}\n\t\n\tpublic void setSalary(double salary) {\n\t\tif (salary <= 0) {\n\t\t\tthis.salary = 1;\n\t\t} else {\n\t\t\tthis.salary = salary;\n\t\t}\n \t}\n\t\n\tpublic String getLocation() {\n\t\treturn location;\n\t}\n\t\n\tpublic void setLocation(String location) {\n\t\tthis.location = location;\n\t}\n\t\n\t//普通的成员方法页搞定\n\tpublic void shot() {\n\t\tSystem.out.println(this.getName() + \"投篮练习中~~~\");\n\t}\n\t\n\tpublic void passBall() {\n\t\tSystem.out.println(this.getName() + \"传球练习中~~~\");\n\t}\n\n\t//重写的Java中超类【Object】类中toString,toString是该对象的描述\n\t//当通过System.out.println(player)会自动调用的方法\n\t@Override\n\tpublic String toString() {\n\t\treturn \"[ID:\" + this.id + \" Name:\" + this.name + \" Age:\" + this.age\n\t\t\t\t+ \" Salary:\" + this.salary + \" Location:\" + this.location + \"]\";\n\t}\n}\n\n```\n\n\n TeamManager\n```java\npackage src.com.qfedu.dao;\n\nimport java.util.Scanner;\n\nimport src.com.qfedu.entity.Player;\n\npublic class TeamManager {\n\t//球队的名字\n\tprivate String teamName;\n\t//保存球员信息的数组\n\tprivate Player[] allPlayers = new Player[defaultCount];\n\n\t//统计当前球队中有多少球员\n\tprivate static int itemCount = 0; //元素个数\n\t//球队的默认球员个数\n\tprivate static final int defaultCount = 10; \n\n\tpublic TeamManager() {}\n\n\tpublic TeamManager(String teamName) {\n\t\tthis.setTeamName(teamName);\n\t}\n\n\tpublic void setTeamName(String teamName) {\n\t\tthis.teamName = teamName;\n\t}\n\n\tpublic String getTeamName() {\n\t\treturn teamName;\n\t}\n\n\t/*\n\t * 添加球员\n\t * 解雇球员\n\t * 修改球员信息\n\t * 查询球员信息\n\t * \n\t * 排序算法\n\t * \n\t * 数组增长\n\t */\n\t/**\n\t * 添加新球员到数组中\n\t * @param playerToAdd 要添加的球员类对象\n\t */\n\tpublic void addPlayer(Player playerToAdd) {\n\t\t//参数合法性判断(以后叫【异常处理】)\n\t\tif (null == playerToAdd) {\n\t\t\tSystem.out.println(\"球员信息为空，不可添加\");\n\t\t\treturn;\n\t\t}\n\n\t\t//类内有一个itemCount的静态成员变量，是用来统计插入的元素个数，而且也是下个元素保存的下标位置\n\t\t//因为是插入操作，所以要考虑数组的容量问题，如果插入的数据个数已经大于了数组的长度，需要扩容\n\t\tif (itemCount >= allPlayers.length) {\n\t\t\t//扩容\n\t\t\tgrow();\n\t\t}\n\n\t\tallPlayers[itemCount++] = playerToAdd;\n\t}\n\n\t/**\n\t * 通过球员的ID删除球员\n\t * @param playerID\n\t */\n\tpublic void layoffPlayerByPlayerID(int playerID) {\n\t\t//需求查询方法，调用类内私有化通过球员ID查询球员在数组中位置的方法，获取下标\n\t\tint index = findPlayerIndexByPlayerID(playerID);\n\n\t\tif (index >= 0) {\n\t\t\t//删除该位置的球员，数组整体左移\n\t\t\t/*   1 2 3 4 5\n\t\t\t index 1   << 3\n\t\t\t index 3   << 1\n\t\t\t */\n\t\t\tfor (int i = index; i < itemCount - 1; i++) {\n\t\t\t\tallPlayers[i] = allPlayers[i + 1];\n\t\t\t}\n\t\t\t//原本最后一个有效元素赋值为null\n\t\t\tallPlayers[itemCount - 1] = null;\n\n\t\t\t//球员的球员个数 - 1\n\t\t\titemCount--;\n\t\t} else {\n\t\t\tSystem.out.println(\"查无此人，无法删除\");\n\t\t}\n\t}\n\n\t/**\n\t * 通过球员的ID，来查询球员的信息\n\t * @param playerID 要展示的球员ID号\n\t */\n\tpublic void showPlayerInfoByPlayerID(int playerID) {\n\t\tint index = findPlayerIndexByPlayerID(playerID);\n\n\t\tif (index > -1) {\n\t\t\tSystem.out.println(allPlayers[index]);\n\t\t} else {\n\t\t\tSystem.out.println(\"查无此人\");\n\t\t}\n\t}\n\n\t/**\n\t * 通过球员ID 修改球员信息\n\t * @param playerID 需要修改信息的球员ID\n\t */\n\tpublic void modifyPlayerInfoByPlayerID(int playerID) {\n\t\tint index = findPlayerIndexByPlayerID(playerID);\n\t\tScanner sc = new Scanner(System.in);\n\t\t//表示找到球员，进行修改操作\n\t\tif (index > -1) {\n\n\t\t\t//while(true) switch - case\n\t\t\tint flag = 0;\n\t\t\tint choose = -1;\n\t\t\tPlayer temp = allPlayers[index];\n\n\t\t\twhile (true) {\n\t\t\t\tSystem.out.println(\"修改\" + temp.getId() + \":\" + temp.getName() + \"的信息\");\n\t\t\t\tSystem.out.println(\"***Age:\" + temp.getAge());\n\t\t\t\tSystem.out.println(\"***Salary:\" + temp.getSalary());\n\t\t\t\tSystem.out.println(\"***Location:\" + temp.getLocation());\n\n\t\t\t\tSystem.out.println(\"1. 修改球员姓名\");\n\t\t\t\tSystem.out.println(\"2. 修改球员年龄\");\n\t\t\t\tSystem.out.println(\"3. 修改球员工资\");\n\t\t\t\tSystem.out.println(\"4. 修改球员位置\");\n\t\t\t\tSystem.out.println(\"5. 退出\");\n\n\t\t\t\tchoose = sc.nextInt();\n\t\t\t\tsc.nextLine();\n\n\t\t\t\tswitch (choose) {\n\t\t\t\tcase 1:\n\t\t\t\t\tSystem.out.println(\"请输入球员的姓名:\");\n\t\t\t\t\tString name = sc.nextLine();\n\t\t\t\t\ttemp.setName(name);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2:\n\t\t\t\t\tSystem.out.println(\"请输入球员的年龄:\");\n\t\t\t\t\tint age = sc.nextInt();\n\t\t\t\t\ttemp.setAge(age);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 3:\n\t\t\t\t\tSystem.out.println(\"请输入球员的工资:\");\n\t\t\t\t\tdouble salary = sc.nextDouble();\n\t\t\t\t\ttemp.setSalary(salary);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 4:\n\t\t\t\t\tSystem.out.println(\"请输入球员的位置:\");\n\t\t\t\t\tString location = sc.nextLine();\n\t\t\t\t\ttemp.setLocation(location);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 5:\n\t\t\t\t\tflag = 1;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tSystem.out.println(\"选择错误\");\n\t\t\t\t\tbreak;\n\t\t\t\t} //switch(choose) - case\n\n\t\t\t\tif (1 == flag) {\n\t\t\t\t\tallPlayers[index] = temp;\n\t\t\t\t\tSystem.out.println(\"保存退出\");\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t} //while (true)\n\n\t\t} else {\n\t\t\tSystem.out.println(\"查无此人\");\n\t\t}\n\t\t//sc.close();\n\t} \n\n\t\n\t\n\t/**\n\t * 工资的降序排序\n\t */\n\tpublic void descendingSelectSortBySalary() {\n\t\t//保护源数据！！！\n\t\t//1. 准备一个数组专门用来做排序操作，数组的大小和源数据有效元素个数一致\n\t\tPlayer[] sortArray = new Player[itemCount];\n\n\t\t//2. 数据拷贝\n\t\tfor (int i = 0; i < itemCount; i++) {\n\t\t\tsortArray[i] = allPlayers[i];\n\t\t}\n\n\t\t//外层控制选择排序的次数\n\t\tfor (int i = 0; i < itemCount - 1; i++) {\n\t\t\tint index = i;\n\n\t\t\tfor (int j = i + 1; j < itemCount; j++) {\n\t\t\t\tif (sortArray[index].getSalary() < sortArray[j].getSalary()) {\n\t\t\t\t\tindex = j;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (index != i) {\n\t\t\t\tPlayer temp = sortArray[index];\n\t\t\t\tsortArray[index] = sortArray[i];\n\t\t\t\tsortArray[i] = temp;\n\t\t\t}\n\t\t}\n\n\t\tshowSortResult(sortArray);\n\t}\n\n\t/**\n\t * 年龄的升序排序\n\t */\n\tpublic void ascendingSelectSortByAge() {\n\t\t//保护源数据！！！\n\t\t//1. 准备一个数组专门用来做排序操作，数组的大小和源数据有效元素个数一致\n\t\tPlayer[] sortArray = new Player[itemCount];\n\n\t\t//2. 数据拷贝\n\t\tfor (int i = 0; i < itemCount; i++) {\n\t\t\tsortArray[i] = allPlayers[i];\n\t\t}\n\n\t\t//外层控制选择排序的次数\n\t\tfor (int i = 0; i < itemCount - 1; i++) {\n\t\t\tint index = i;\n\n\t\t\tfor (int j = i + 1; j < itemCount; j++) {\n\t\t\t\tif (sortArray[index].getAge() > sortArray[j].getAge()) {\n\t\t\t\t\tindex = j;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (index != i) {\n\t\t\t\tPlayer temp = sortArray[index];\n\t\t\t\tsortArray[index] = sortArray[i];\n\t\t\t\tsortArray[i] = temp;\n\t\t\t}\n\t\t}\n\n\t\tshowSortResult(sortArray);\n\t}\n\n\t/**\n\t * 自己研究一下冒泡排序\n\t */\n\tpublic void descendingBubbleSortByAge() {\n\t\t//保护源数据！！！\n\t\t//1. 准备一个数组专门用来做排序操作，数组的大小和源数据有效元素个数一致\n\t\tPlayer[] sortArray = new Player[itemCount];\n\n\t\t//2. 数据拷贝\n\t\tfor (int i = 0; i < itemCount; i++) {\n\t\t\tsortArray[i] = allPlayers[i];\n\t\t}\n\n\t\t//外层控制比较的轮次\n\t\tfor (int i = 0; i < itemCount - 1; i++) {\n\t\t\t//内层控制两两比较次数\n\t\t\tfor (int j = 0; j < itemCount - i - 1; j++) {\n\n\t\t\t\tif (sortArray[j].getAge() < sortArray[j + 1].getAge()) {\n\t\t\t\t\tPlayer temp = sortArray[j];\n\t\t\t\t\tsortArray[j] = sortArray[j + 1];\n\t\t\t\t\tsortArray[j + 1] = temp;\n\t\t\t\t}\n\t\t\t}\n\t\t} \n\n\t\tshowSortResult(sortArray);\n\n\t}\n\n\n\n\tpublic void showAllPlayers() {\n\t\tfor (Player player : allPlayers) {\n\t\t\tif (null == player) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tSystem.out.println(player);\n\t\t}\n\t}\n\n\t/**\n\t * 需要一个扩容方法，方法不需要参数，不要类外调用，只是在类内使用\n\t */\n\tprivate void grow() {\n\t\t//1. 获取原数组元素个数\n\t\tint oldCapacity = this.allPlayers.length;\n\n\t\t//2. 通过原数组元素计算新的元素个数 , 大约相对于原本元素个数的1.5倍\n\t\tint newCapacity = oldCapacity + (oldCapacity >> 1);\n\n\t\t//3. 创建新的数组，元素格式是原本的1.5倍\n\t\tPlayer[] newArray = new Player[newCapacity];\n\n\t\t//4. 利用循环拷贝数据\n\t\tfor (int i = 0; i < oldCapacity; i++) {\n\t\t\tnewArray[i] = this.allPlayers[i];\n\t\t}\n\n\t\t//5. 地址交换\n\t\tthis.allPlayers = newArray;\n\t}\n\n\t/**\n\t * 私有化的方法，只提供给类内使用，用来获取指定球员ID在数组中下标位置\n\t * @param playerID 要查询的球员ID号\n\t * @return int类型，返回查询的数据在数组中的下标位置，如果没有找到，返回-1\n\t */\n\tprivate int findPlayerIndexByPlayerID(int playerID) {\n\t\t//参数合法性判断\n\t\tif (playerID < 1 || playerID > 100) {\n\t\t\tSystem.out.println(\"传入球员ID不合法\");\n\t\t\treturn -1;\n\t\t}\n\n\t\t//用来保存球员的下标位置\n\t\tint index = -1;\n\n\t\tfor (int i = 0; i < itemCount; i++) {\n\t\t\t//拿球员的ID和传入的ID进行比较\n\t\t\tif (allPlayers[i].getId() == playerID) {\n\t\t\t\tindex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn index;\n\t}\n\n\tprivate void showSortResult(Player[] sortArray) {\n\t\t//增强for循环\n\t\tfor (Player player : sortArray) {\n\t\t\tSystem.out.println(player);\n\t\t}\n\t\t//普通for循环\n\t\t//\t\tfor (int i = 0; i < sortArray.length; i++) {\n\t\t//\t\t\tSystem.out.println(sortArray[i]);\n\t\t//\t\t}\n\t}\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\n\nview\n```java\npackage src.com.qfedu.view;\n\nimport java.util.Scanner;\n\nimport src.com.qfedu.dao.TeamManager;\nimport src.com.qfedu.entity.Player;\n\npublic class View {\n\tpublic static void main(String[] args) {\n\n\t\tTeamManager tm = new TeamManager(\"孤狼B组\");\n\n\t\tPlayer p1 = new Player(\"森林狼\", 21, 10000, \"PG\");\n\t\tPlayer p2 = new Player(\"西伯利亚狼\", 19, 9000, \"SF\");\n\t\tPlayer p3 = new Player(\"鸵鸟\", 20, 9500, \"SG\");\n\t\tPlayer p4 = new Player(\"卫生院\", 22, 9800, \"SG\");\n\t\tPlayer p5 = new Player(\"恶狼\", 22, 8800, \"PF\");\n\t\tPlayer p6 = new Player(\"老炮\", 22, 9900, \"C\");\n\n\t\ttm.addPlayer(p1);\n\t\ttm.addPlayer(p2);\n\t\ttm.addPlayer(p3);\n\t\ttm.addPlayer(p4);\n\t\ttm.addPlayer(p5);\n\t\ttm.addPlayer(p6);\n\n\t\tint flag = 0;\n\t\tint choose = 0;\n\t\tint playerID = 0;\n\t\tScanner sc = new Scanner(System.in);\n\t\t\n\t\twhile (true) {\n\t\t\t\n\t\t\t\n\t\t\tSystem.out.println(\"欢迎来到孤狼B组\");\n\t\t\tSystem.out.println(\"1. 展示所有成员\");\n\t\t\tSystem.out.println(\"2. 添加新的成员\");\n\t\t\tSystem.out.println(\"3. 退役老成员\");\n\t\t\tSystem.out.println(\"4. 查询成员资料\");\n\t\t\tSystem.out.println(\"5. 修改成员资料\");\n\t\t\tSystem.out.println(\"6. 按照年龄排序\");\n\t\t\tSystem.out.println(\"7. 按照收入排序\");\n\t\t\tSystem.out.println(\"8. 退出\");\n\t\t\n\t\t\tchoose = sc.nextInt();\n\t\t\tsc.nextLine();\n\t\t\t\n\t\t\tswitch (choose) {\n\t\t\t\tcase 1:\n\t\t\t\t\t//展示所有队员\n\t\t\t\t\ttm.showAllPlayers();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2:\n\t\t\t\t\t//添加新成员\n\t\t\t\t\tSystem.out.println(\"清输入新成员的名字\");\n\t\t\t\t\tString name = sc.nextLine();\n\t\t\t\t\t\n\t\t\t\t\tSystem.out.println(\"请输入新成员年龄\");\n\t\t\t\t\tint age = sc.nextInt();\n\t\t\t\t\tsc.nextLine();\n\t\t\t\t\t\n\t\t\t\t\tSystem.out.println(\"请输入新成员工资\");\n\t\t\t\t\tdouble salary = sc.nextDouble();\n\t\t\t\t\tsc.nextLine();\n\t\t\t\t\t\n\t\t\t\t\tSystem.out.println(\"请输入新成员的位置\");\n\t\t\t\t\tString location = sc.nextLine();\n\t\t\t\t\t\n\t\t\t\t\tPlayer playerToAdd = new Player(name, age, salary, location);\n\t\t\t\t\ttm.addPlayer(playerToAdd);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 3:\n\t\t\t\t\t//退役\n\t\t\t\t\tSystem.out.println(\"请输入要退役的老成员ID\");\n\t\t\t\t\tplayerID = sc.nextInt();\n\t\t\t\t\tsc.nextLine();\n\t\t\t\t\t\n\t\t\t\t\ttm.showPlayerInfoByPlayerID(playerID);\n\t\t\t\t\t\n\t\t\t\t\tSystem.out.println(\"是否要确定删除? Y or N\");\n\t\t\t\t\tchar ch = sc.nextLine().charAt(0);\n\t\t\t\t\tif ('Y' == ch || 'y' == ch) {\n\t\t\t\t\t\ttm.layoffPlayerByPlayerID(playerID);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tbreak;\n\t\t\t\tcase 4:\n\t\t\t\t\t//查询\n\t\t\t\t\tSystem.out.println(\"请输入要查询的老成员ID\");\n\t\t\t\t\tplayerID = sc.nextInt();\n\t\t\t\t\tsc.nextLine();\n\t\t\t\t\t\n\t\t\t\t\ttm.showPlayerInfoByPlayerID(playerID);\n\t\t\t\t\t\n\t\t\t\t\tbreak;\n\t\t\t\tcase 5:\n\t\t\t\t\tSystem.out.println(\"请输入要修改成员ID\");\n\t\t\t\t\tplayerID = sc.nextInt();\n\t\t\t\t\tsc.nextLine();\n\t\t\t\t\t\n\t\t\t\t\ttm.modifyPlayerInfoByPlayerID(playerID);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 6:\n\t\t\t\t\ttm.ascendingSelectSortByAge();\n\t\t\t\t\t\n\t\t\t\t\tbreak;\n\t\t\t\tcase 7:\n\t\t\t\t\ttm.descendingSelectSortBySalary();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 8:\n\t\t\t\t\tflag = 1;\n\t\t\t\t\tbreak;\n\t\n\t\t\t\tdefault:\n\t\t\t\t\tSystem.out.println(\"选择错误\");\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\t\n\t\t\tif (1 == flag) {\n\t\t\t\tSystem.out.println(\"啊，朋友再见~~~\");\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n}\n\n```\n",[[1561595718637,["GJX@GJXAIOU",[[1,0,"\n"]],[0,0],[1,1]]],[1561595718781,["GJX@GJXAIOU",[[1,0,"\n"]],[1,1],[2,2]]],[1561595718919,["GJX@GJXAIOU",[[1,2,"\n"]],[2,2],[3,3]]],[1561595719025,["GJX@GJXAIOU",[[1,3,"\n"]],[3,3],[4,4]]],[1561595719181,["GJX@GJXAIOU",[[1,4,"\n"]],[4,4],[5,5]]],[1561595721695,["GJX@GJXAIOU",[[1,0,"-"]],[0,0],[1,1]]],[1561595721862,["GJX@GJXAIOU",[[1,0,"-"]],[1,1],[2,2]]],[1561595722038,["GJX@GJXAIOU",[[1,2,"-"]],[2,2],[3,3]]],[1561595722070,["GJX@GJXAIOU",[[1,5,"---\n\n\n"]],[3,3],[4,4]]],[1561595726070,["GJX@GJXAIOU",[[1,4,"tags: "]],[4,4],[10,10]]],[1561595726742,["GJX@GJXAIOU",[[1,11,"\n"]],[10,10],[11,11]]],[1561595731320,["GJX@GJXAIOU",[[1,11,"- Java"]],[11,11],[17,17]]],[1561595732150,["GJX@GJXAIOU",[[1,18,"\n"]],[17,17],[18,18]]],[1561595734334,["GJX@GJXAIOU",[[1,18,"- ji"]],[18,18],[22,22]]],[1561595734903,["GJX@GJXAIOU",[[-1,20,"ji"]],[22,22],[20,20]]],[1561595736176,["GJX@GJXAIOU",[[1,20,"基础"]],[20,20],[22,22]]],[1561595736445,["GJX@GJXAIOU",[[1,23,"\n"]],[22,22],[23,23]]],[1561595744112,["GJX@GJXAIOU",[[1,23,"- 球员管理项目"]],[23,23],[31,31]]],[1561595744446,["GJX@GJXAIOU",[[1,32,"\n"]],[31,31],[32,32]]],[1561595744941,["GJX@GJXAIOU",[[-1,32,"\n"]],[32,32],[31,31]]]],null,"GJX@GJXAIOU"],["6424ef06-0705-45f0-938f-fca1083934dd",1563362630314,"---\ntags: \n- Java\n- 基础\n- 球员管理项目\n---\n\n\n\n\n\n# JavaDay14-球员管理项目\n\n\n![球员]($resource/%E7%90%83%E5%91%98%202.jpg)\n\n![球队]($resource/%E7%90%83%E9%98%9F.jpg)\n\n![项目架构]($resource/%E9%A1%B9%E7%9B%AE%E6%9E%B6%E6%9E%84.jpg)\n\n\n具体代码：\nplayer\n```java\npackage src.com.qfedu.entity;\n\n/*\n 球员实体类：\n \t成员变量：\n \t\t姓名，编号，年龄，工资，位置\n \t成员方法：\n \t\t投篮，传球\n */\npublic class Player {\n\t//成员变量\n\tprivate String name;\n\tprivate int id; //实现ID的自动增长，这里要使用计数器\n\tprivate int age;\n\tprivate double salary;\n\tprivate String location;\n\t\n\tprivate static int count = 1; //计数器\n\t\n\t//构造代码块来完成计数器操作\n\t{\n\t\tthis.id = count++;\n\t}\n\t\n\tpublic Player() {}\n\t\n\tpublic Player(String name, int age, double salary, String location) {\n\t\t//这里使用自己的set方法，来完成赋值成员变量的操作\n\t\tthis.setName(name);\n\t\tthis.setAge(age);\n\t\tthis.setSalary(salary);\n\t\tthis.setLocation(location);\n\t}\n\t\n\tpublic int getId() {\n\t\treturn id;\n\t}\n\t\n\tpublic String getName() {\n\t\treturn name;\n\t}\n\t\n\tpublic void setName(String name) {\n\t\tthis.name = name;\n\t}\n\tpublic int getAge() {\n\t\treturn age;\n\t}\n\t\n\tpublic void setAge(int age) {\n\t\tif (age <= 0 || age > 45) {\n\t\t\tthis.age = 19;\n\t\t} else {\n\t\t\tthis.age = age;\n\t\t}\n\t}\n\t\n\tpublic double getSalary() {\n\t\treturn salary;\n\t}\n\t\n\tpublic void setSalary(double salary) {\n\t\tif (salary <= 0) {\n\t\t\tthis.salary = 1;\n\t\t} else {\n\t\t\tthis.salary = salary;\n\t\t}\n \t}\n\t\n\tpublic String getLocation() {\n\t\treturn location;\n\t}\n\t\n\tpublic void setLocation(String location) {\n\t\tthis.location = location;\n\t}\n\t\n\t//普通的成员方法页搞定\n\tpublic void shot() {\n\t\tSystem.out.println(this.getName() + \"投篮练习中~~~\");\n\t}\n\t\n\tpublic void passBall() {\n\t\tSystem.out.println(this.getName() + \"传球练习中~~~\");\n\t}\n\n\t//重写的Java中超类【Object】类中toString,toString是该对象的描述\n\t//当通过System.out.println(player)会自动调用的方法\n\t@Override\n\tpublic String toString() {\n\t\treturn \"[ID:\" + this.id + \" Name:\" + this.name + \" Age:\" + this.age\n\t\t\t\t+ \" Salary:\" + this.salary + \" Location:\" + this.location + \"]\";\n\t}\n}\n\n```\n\n\n TeamManager\n```java\npackage src.com.qfedu.dao;\n\nimport java.util.Scanner;\n\nimport src.com.qfedu.entity.Player;\n\npublic class TeamManager {\n\t//球队的名字\n\tprivate String teamName;\n\t//保存球员信息的数组\n\tprivate Player[] allPlayers = new Player[defaultCount];\n\n\t//统计当前球队中有多少球员\n\tprivate static int itemCount = 0; //元素个数\n\t//球队的默认球员个数\n\tprivate static final int defaultCount = 10; \n\n\tpublic TeamManager() {}\n\n\tpublic TeamManager(String teamName) {\n\t\tthis.setTeamName(teamName);\n\t}\n\n\tpublic void setTeamName(String teamName) {\n\t\tthis.teamName = teamName;\n\t}\n\n\tpublic String getTeamName() {\n\t\treturn teamName;\n\t}\n\n\t/*\n\t * 添加球员\n\t * 解雇球员\n\t * 修改球员信息\n\t * 查询球员信息\n\t * \n\t * 排序算法\n\t * \n\t * 数组增长\n\t */\n\t/**\n\t * 添加新球员到数组中\n\t * @param playerToAdd 要添加的球员类对象\n\t */\n\tpublic void addPlayer(Player playerToAdd) {\n\t\t//参数合法性判断(以后叫【异常处理】)\n\t\tif (null == playerToAdd) {\n\t\t\tSystem.out.println(\"球员信息为空，不可添加\");\n\t\t\treturn;\n\t\t}\n\n\t\t//类内有一个itemCount的静态成员变量，是用来统计插入的元素个数，而且也是下个元素保存的下标位置\n\t\t//因为是插入操作，所以要考虑数组的容量问题，如果插入的数据个数已经大于了数组的长度，需要扩容\n\t\tif (itemCount >= allPlayers.length) {\n\t\t\t//扩容\n\t\t\tgrow();\n\t\t}\n\n\t\tallPlayers[itemCount++] = playerToAdd;\n\t}\n\n\t/**\n\t * 通过球员的ID删除球员\n\t * @param playerID\n\t */\n\tpublic void layoffPlayerByPlayerID(int playerID) {\n\t\t//需求查询方法，调用类内私有化通过球员ID查询球员在数组中位置的方法，获取下标\n\t\tint index = findPlayerIndexByPlayerID(playerID);\n\n\t\tif (index >= 0) {\n\t\t\t//删除该位置的球员，数组整体左移\n\t\t\t/*   1 2 3 4 5\n\t\t\t index 1   << 3\n\t\t\t index 3   << 1\n\t\t\t */\n\t\t\tfor (int i = index; i < itemCount - 1; i++) {\n\t\t\t\tallPlayers[i] = allPlayers[i + 1];\n\t\t\t}\n\t\t\t//原本最后一个有效元素赋值为null\n\t\t\tallPlayers[itemCount - 1] = null;\n\n\t\t\t//球员的球员个数 - 1\n\t\t\titemCount--;\n\t\t} else {\n\t\t\tSystem.out.println(\"查无此人，无法删除\");\n\t\t}\n\t}\n\n\t/**\n\t * 通过球员的ID，来查询球员的信息\n\t * @param playerID 要展示的球员ID号\n\t */\n\tpublic void showPlayerInfoByPlayerID(int playerID) {\n\t\tint index = findPlayerIndexByPlayerID(playerID);\n\n\t\tif (index > -1) {\n\t\t\tSystem.out.println(allPlayers[index]);\n\t\t} else {\n\t\t\tSystem.out.println(\"查无此人\");\n\t\t}\n\t}\n\n\t/**\n\t * 通过球员ID 修改球员信息\n\t * @param playerID 需要修改信息的球员ID\n\t */\n\tpublic void modifyPlayerInfoByPlayerID(int playerID) {\n\t\tint index = findPlayerIndexByPlayerID(playerID);\n\t\tScanner sc = new Scanner(System.in);\n\t\t//表示找到球员，进行修改操作\n\t\tif (index > -1) {\n\n\t\t\t//while(true) switch - case\n\t\t\tint flag = 0;\n\t\t\tint choose = -1;\n\t\t\tPlayer temp = allPlayers[index];\n\n\t\t\twhile (true) {\n\t\t\t\tSystem.out.println(\"修改\" + temp.getId() + \":\" + temp.getName() + \"的信息\");\n\t\t\t\tSystem.out.println(\"***Age:\" + temp.getAge());\n\t\t\t\tSystem.out.println(\"***Salary:\" + temp.getSalary());\n\t\t\t\tSystem.out.println(\"***Location:\" + temp.getLocation());\n\n\t\t\t\tSystem.out.println(\"1. 修改球员姓名\");\n\t\t\t\tSystem.out.println(\"2. 修改球员年龄\");\n\t\t\t\tSystem.out.println(\"3. 修改球员工资\");\n\t\t\t\tSystem.out.println(\"4. 修改球员位置\");\n\t\t\t\tSystem.out.println(\"5. 退出\");\n\n\t\t\t\tchoose = sc.nextInt();\n\t\t\t\tsc.nextLine();\n\n\t\t\t\tswitch (choose) {\n\t\t\t\tcase 1:\n\t\t\t\t\tSystem.out.println(\"请输入球员的姓名:\");\n\t\t\t\t\tString name = sc.nextLine();\n\t\t\t\t\ttemp.setName(name);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2:\n\t\t\t\t\tSystem.out.println(\"请输入球员的年龄:\");\n\t\t\t\t\tint age = sc.nextInt();\n\t\t\t\t\ttemp.setAge(age);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 3:\n\t\t\t\t\tSystem.out.println(\"请输入球员的工资:\");\n\t\t\t\t\tdouble salary = sc.nextDouble();\n\t\t\t\t\ttemp.setSalary(salary);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 4:\n\t\t\t\t\tSystem.out.println(\"请输入球员的位置:\");\n\t\t\t\t\tString location = sc.nextLine();\n\t\t\t\t\ttemp.setLocation(location);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 5:\n\t\t\t\t\tflag = 1;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tSystem.out.println(\"选择错误\");\n\t\t\t\t\tbreak;\n\t\t\t\t} //switch(choose) - case\n\n\t\t\t\tif (1 == flag) {\n\t\t\t\t\tallPlayers[index] = temp;\n\t\t\t\t\tSystem.out.println(\"保存退出\");\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t} //while (true)\n\n\t\t} else {\n\t\t\tSystem.out.println(\"查无此人\");\n\t\t}\n\t\t//sc.close();\n\t} \n\n\t\n\t\n\t/**\n\t * 工资的降序排序\n\t */\n\tpublic void descendingSelectSortBySalary() {\n\t\t//保护源数据！！！\n\t\t//1. 准备一个数组专门用来做排序操作，数组的大小和源数据有效元素个数一致\n\t\tPlayer[] sortArray = new Player[itemCount];\n\n\t\t//2. 数据拷贝\n\t\tfor (int i = 0; i < itemCount; i++) {\n\t\t\tsortArray[i] = allPlayers[i];\n\t\t}\n\n\t\t//外层控制选择排序的次数\n\t\tfor (int i = 0; i < itemCount - 1; i++) {\n\t\t\tint index = i;\n\n\t\t\tfor (int j = i + 1; j < itemCount; j++) {\n\t\t\t\tif (sortArray[index].getSalary() < sortArray[j].getSalary()) {\n\t\t\t\t\tindex = j;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (index != i) {\n\t\t\t\tPlayer temp = sortArray[index];\n\t\t\t\tsortArray[index] = sortArray[i];\n\t\t\t\tsortArray[i] = temp;\n\t\t\t}\n\t\t}\n\n\t\tshowSortResult(sortArray);\n\t}\n\n\t/**\n\t * 年龄的升序排序\n\t */\n\tpublic void ascendingSelectSortByAge() {\n\t\t//保护源数据！！！\n\t\t//1. 准备一个数组专门用来做排序操作，数组的大小和源数据有效元素个数一致\n\t\tPlayer[] sortArray = new Player[itemCount];\n\n\t\t//2. 数据拷贝\n\t\tfor (int i = 0; i < itemCount; i++) {\n\t\t\tsortArray[i] = allPlayers[i];\n\t\t}\n\n\t\t//外层控制选择排序的次数\n\t\tfor (int i = 0; i < itemCount - 1; i++) {\n\t\t\tint index = i;\n\n\t\t\tfor (int j = i + 1; j < itemCount; j++) {\n\t\t\t\tif (sortArray[index].getAge() > sortArray[j].getAge()) {\n\t\t\t\t\tindex = j;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (index != i) {\n\t\t\t\tPlayer temp = sortArray[index];\n\t\t\t\tsortArray[index] = sortArray[i];\n\t\t\t\tsortArray[i] = temp;\n\t\t\t}\n\t\t}\n\n\t\tshowSortResult(sortArray);\n\t}\n\n\t/**\n\t * 自己研究一下冒泡排序\n\t */\n\tpublic void descendingBubbleSortByAge() {\n\t\t//保护源数据！！！\n\t\t//1. 准备一个数组专门用来做排序操作，数组的大小和源数据有效元素个数一致\n\t\tPlayer[] sortArray = new Player[itemCount];\n\n\t\t//2. 数据拷贝\n\t\tfor (int i = 0; i < itemCount; i++) {\n\t\t\tsortArray[i] = allPlayers[i];\n\t\t}\n\n\t\t//外层控制比较的轮次\n\t\tfor (int i = 0; i < itemCount - 1; i++) {\n\t\t\t//内层控制两两比较次数\n\t\t\tfor (int j = 0; j < itemCount - i - 1; j++) {\n\n\t\t\t\tif (sortArray[j].getAge() < sortArray[j + 1].getAge()) {\n\t\t\t\t\tPlayer temp = sortArray[j];\n\t\t\t\t\tsortArray[j] = sortArray[j + 1];\n\t\t\t\t\tsortArray[j + 1] = temp;\n\t\t\t\t}\n\t\t\t}\n\t\t} \n\n\t\tshowSortResult(sortArray);\n\n\t}\n\n\n\n\tpublic void showAllPlayers() {\n\t\tfor (Player player : allPlayers) {\n\t\t\tif (null == player) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tSystem.out.println(player);\n\t\t}\n\t}\n\n\t/**\n\t * 需要一个扩容方法，方法不需要参数，不要类外调用，只是在类内使用\n\t */\n\tprivate void grow() {\n\t\t//1. 获取原数组元素个数\n\t\tint oldCapacity = this.allPlayers.length;\n\n\t\t//2. 通过原数组元素计算新的元素个数 , 大约相对于原本元素个数的1.5倍\n\t\tint newCapacity = oldCapacity + (oldCapacity >> 1);\n\n\t\t//3. 创建新的数组，元素格式是原本的1.5倍\n\t\tPlayer[] newArray = new Player[newCapacity];\n\n\t\t//4. 利用循环拷贝数据\n\t\tfor (int i = 0; i < oldCapacity; i++) {\n\t\t\tnewArray[i] = this.allPlayers[i];\n\t\t}\n\n\t\t//5. 地址交换\n\t\tthis.allPlayers = newArray;\n\t}\n\n\t/**\n\t * 私有化的方法，只提供给类内使用，用来获取指定球员ID在数组中下标位置\n\t * @param playerID 要查询的球员ID号\n\t * @return int类型，返回查询的数据在数组中的下标位置，如果没有找到，返回-1\n\t */\n\tprivate int findPlayerIndexByPlayerID(int playerID) {\n\t\t//参数合法性判断\n\t\tif (playerID < 1 || playerID > 100) {\n\t\t\tSystem.out.println(\"传入球员ID不合法\");\n\t\t\treturn -1;\n\t\t}\n\n\t\t//用来保存球员的下标位置\n\t\tint index = -1;\n\n\t\tfor (int i = 0; i < itemCount; i++) {\n\t\t\t//拿球员的ID和传入的ID进行比较\n\t\t\tif (allPlayers[i].getId() == playerID) {\n\t\t\t\tindex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn index;\n\t}\n\n\tprivate void showSortResult(Player[] sortArray) {\n\t\t//增强for循环\n\t\tfor (Player player : sortArray) {\n\t\t\tSystem.out.println(player);\n\t\t}\n\t\t//普通for循环\n\t\t//\t\tfor (int i = 0; i < sortArray.length; i++) {\n\t\t//\t\t\tSystem.out.println(sortArray[i]);\n\t\t//\t\t}\n\t}\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\n\nview\n```java\npackage src.com.qfedu.view;\n\nimport java.util.Scanner;\n\nimport src.com.qfedu.dao.TeamManager;\nimport src.com.qfedu.entity.Player;\n\npublic class View {\n\tpublic static void main(String[] args) {\n\n\t\tTeamManager tm = new TeamManager(\"孤狼B组\");\n\n\t\tPlayer p1 = new Player(\"森林狼\", 21, 10000, \"PG\");\n\t\tPlayer p2 = new Player(\"西伯利亚狼\", 19, 9000, \"SF\");\n\t\tPlayer p3 = new Player(\"鸵鸟\", 20, 9500, \"SG\");\n\t\tPlayer p4 = new Player(\"卫生院\", 22, 9800, \"SG\");\n\t\tPlayer p5 = new Player(\"恶狼\", 22, 8800, \"PF\");\n\t\tPlayer p6 = new Player(\"老炮\", 22, 9900, \"C\");\n\n\t\ttm.addPlayer(p1);\n\t\ttm.addPlayer(p2);\n\t\ttm.addPlayer(p3);\n\t\ttm.addPlayer(p4);\n\t\ttm.addPlayer(p5);\n\t\ttm.addPlayer(p6);\n\n\t\tint flag = 0;\n\t\tint choose = 0;\n\t\tint playerID = 0;\n\t\tScanner sc = new Scanner(System.in);\n\t\t\n\t\twhile (true) {\n\t\t\t\n\t\t\t\n\t\t\tSystem.out.println(\"欢迎来到孤狼B组\");\n\t\t\tSystem.out.println(\"1. 展示所有成员\");\n\t\t\tSystem.out.println(\"2. 添加新的成员\");\n\t\t\tSystem.out.println(\"3. 退役老成员\");\n\t\t\tSystem.out.println(\"4. 查询成员资料\");\n\t\t\tSystem.out.println(\"5. 修改成员资料\");\n\t\t\tSystem.out.println(\"6. 按照年龄排序\");\n\t\t\tSystem.out.println(\"7. 按照收入排序\");\n\t\t\tSystem.out.println(\"8. 退出\");\n\t\t\n\t\t\tchoose = sc.nextInt();\n\t\t\tsc.nextLine();\n\t\t\t\n\t\t\tswitch (choose) {\n\t\t\t\tcase 1:\n\t\t\t\t\t//展示所有队员\n\t\t\t\t\ttm.showAllPlayers();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2:\n\t\t\t\t\t//添加新成员\n\t\t\t\t\tSystem.out.println(\"清输入新成员的名字\");\n\t\t\t\t\tString name = sc.nextLine();\n\t\t\t\t\t\n\t\t\t\t\tSystem.out.println(\"请输入新成员年龄\");\n\t\t\t\t\tint age = sc.nextInt();\n\t\t\t\t\tsc.nextLine();\n\t\t\t\t\t\n\t\t\t\t\tSystem.out.println(\"请输入新成员工资\");\n\t\t\t\t\tdouble salary = sc.nextDouble();\n\t\t\t\t\tsc.nextLine();\n\t\t\t\t\t\n\t\t\t\t\tSystem.out.println(\"请输入新成员的位置\");\n\t\t\t\t\tString location = sc.nextLine();\n\t\t\t\t\t\n\t\t\t\t\tPlayer playerToAdd = new Player(name, age, salary, location);\n\t\t\t\t\ttm.addPlayer(playerToAdd);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 3:\n\t\t\t\t\t//退役\n\t\t\t\t\tSystem.out.println(\"请输入要退役的老成员ID\");\n\t\t\t\t\tplayerID = sc.nextInt();\n\t\t\t\t\tsc.nextLine();\n\t\t\t\t\t\n\t\t\t\t\ttm.showPlayerInfoByPlayerID(playerID);\n\t\t\t\t\t\n\t\t\t\t\tSystem.out.println(\"是否要确定删除? Y or N\");\n\t\t\t\t\tchar ch = sc.nextLine().charAt(0);\n\t\t\t\t\tif ('Y' == ch || 'y' == ch) {\n\t\t\t\t\t\ttm.layoffPlayerByPlayerID(playerID);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tbreak;\n\t\t\t\tcase 4:\n\t\t\t\t\t//查询\n\t\t\t\t\tSystem.out.println(\"请输入要查询的老成员ID\");\n\t\t\t\t\tplayerID = sc.nextInt();\n\t\t\t\t\tsc.nextLine();\n\t\t\t\t\t\n\t\t\t\t\ttm.showPlayerInfoByPlayerID(playerID);\n\t\t\t\t\t\n\t\t\t\t\tbreak;\n\t\t\t\tcase 5:\n\t\t\t\t\tSystem.out.println(\"请输入要修改成员ID\");\n\t\t\t\t\tplayerID = sc.nextInt();\n\t\t\t\t\tsc.nextLine();\n\t\t\t\t\t\n\t\t\t\t\ttm.modifyPlayerInfoByPlayerID(playerID);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 6:\n\t\t\t\t\ttm.ascendingSelectSortByAge();\n\t\t\t\t\t\n\t\t\t\t\tbreak;\n\t\t\t\tcase 7:\n\t\t\t\t\ttm.descendingSelectSortBySalary();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 8:\n\t\t\t\t\tflag = 1;\n\t\t\t\t\tbreak;\n\t\n\t\t\t\tdefault:\n\t\t\t\t\tSystem.out.println(\"选择错误\");\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\t\n\t\t\tif (1 == flag) {\n\t\t\t\tSystem.out.println(\"啊，朋友再见~~~\");\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n}\n\n```\n",[[1563362578636,["GJX@GJXAIOU",[[1,8," "],[-1,13,"J"],[1,14,"j"],[-1,17,"\n- "],[-1,23,"- 球员管理项目"],[1,31,"\nflag: blue"],[1,35,"\n\n@toc"]],[0,35],[42,42]]],[1563364981581,["GJX@GJXAIOU",[[-1,47,"\n"]],[46,46],[45,45]]],[1563364981742,["GJX@GJXAIOU",[[-1,46,"\n"]],[45,45],[44,44]]],[1563364982205,["GJX@GJXAIOU",[[-1,45,"\n"]],[44,44],[43,43]]],[1563364983804,["GJX@GJXAIOU",[[-1,44,"\n"]],[43,43],[42,42]]]],null,"GJX@GJXAIOU"]]}