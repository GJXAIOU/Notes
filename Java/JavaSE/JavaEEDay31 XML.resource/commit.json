{"compress":true,"commitItems":[["193f7474-b185-4a47-b5cc-b32eda27f864",1564207387798,"",[[1564207340696,["GJX@GJXAIOU",[[1,0,"# JavaEEDay31 XML\n\n\n\n"]],[0,0],[20,20]]],[1564207368788,["GJX@GJXAIOU",[[1,21,"\n"]],[18,18],[19,19]]],[1564207387328,["GJX@GJXAIOU",[[1,19,"HTML：HyperText Markup "]],[19,19],[41,41]]],[1564207389327,["GJX@GJXAIOU",[[1,41,"Lanu"]],[41,41],[45,45]]],[1564207393422,["GJX@GJXAIOU",[[-1,44,"u"]],[45,45],[44,44]]],[1564207403797,["GJX@GJXAIOU",[[1,44,"guage 超文本标记语言 "]],[44,44],[58,58]]],[1564207404109,["GJX@GJXAIOU",[[1,61,"\n"]],[58,58],[59,59]]],[1564207415410,["GJX@GJXAIOU",[[1,59,"不经过任何的编译，浏览器通过变迁"]],[59,59],[75,75]]],[1564207421524,["GJX@GJXAIOU",[[-1,73,"变迁"]],[75,75],[73,73]]],[1564207424973,["GJX@GJXAIOU",[[1,73,"标签"]],[73,73],[75,75]]],[1564207430423,["GJX@GJXAIOU",[[-1,73,"标签"]],[75,75],[73,73]]],[1564207441504,["GJX@GJXAIOU",[[1,73,"标记进行对应的响应"]],[73,73],[82,82]]],[1564207441797,["GJX@GJXAIOU",[[1,85,"\n"]],[82,82],[83,83]]],[1564207454335,["GJX@GJXAIOU",[[1,83,"CSS： 层级样式表"]],[83,83],[93,93]]],[1564207454907,["GJX@GJXAIOU",[[1,96,"\n"]],[93,93],[94,94]]],[1564207475954,["GJX@GJXAIOU",[[1,94,"JavaScript： 让页面完成一些动态的特效；"]],[94,94],[119,119]]],[1564207476245,["GJX@GJXAIOU",[[1,122,"\n"]],[119,119],[120,120]]],[1564207478030,["GJX@GJXAIOU",[[1,123,"\n"]],[120,120],[121,121]]],[1564207497191,["GJX@GJXAIOU",[[1,121,"HTML+CSS+JavaScript：用来制作静态网站"]],[121,121],[149,149]]],[1564207555862,["GJX@GJXAIOU",[[1,151,"[静态网站和动态网站的区别](https://www.jianshu.com/p/649d2a0ebde5)"]],[151,151],[205,205]]],[1564207563917,["GJX@GJXAIOU",[[1,206,"\n"]],[205,205],[206,206]]],[1564207564046,["GJX@GJXAIOU",[[1,207,"\n"]],[206,206],[207,207]]],[1564207667479,["GJX@GJXAIOU",[[-1,207,"\n"],[1,208,"HTML"]],[207,207],[211,211]]],[1564207670345,["GJX@GJXAIOU",[[1,211,"由"]],[211,211],[212,212]]],[1564207670368,["GJX@GJXAIOU",[[1,211," "]],[212,212],[213,213]]],[1564207682983,["GJX@GJXAIOU",[[1,213,"标签组成，不区分大小写，"]],[213,213],[225,225]]],[1564207694888,["GJX@GJXAIOU",[[1,225,"是W3C"]],[225,225],[229,229]]],[1564207694911,["GJX@GJXAIOU",[[1,226," "]],[229,229],[230,230]]],[1564207698266,["GJX@GJXAIOU",[[1,230,"组织"]],[230,230],[232,232]]],[1564207698289,["GJX@GJXAIOU",[[1,230," "]],[232,232],[233,233]]],[1564207700087,["GJX@GJXAIOU",[[1,233,"制定的"]],[233,233],[236,236]]],[1564207702292,["GJX@GJXAIOU",[[-1,233,"制定的"]],[236,236],[233,233]]],[1564207713287,["GJX@GJXAIOU",[[1,233,"制定的规范，所有的HTML"]],[233,233],[246,246]]],[1564207713310,["GJX@GJXAIOU",[[1,242," "]],[246,246],[247,247]]],[1564207715703,["GJX@GJXAIOU",[[1,247,"标签"]],[247,247],[249,249]]],[1564207715727,["GJX@GJXAIOU",[[1,247," "]],[249,249],[250,250]]],[1564207728799,["GJX@GJXAIOU",[[1,250,"都是确定的，固定的，不能自己常见"]],[250,250],[266,266]]],[1564207729476,["GJX@GJXAIOU",[[-1,264,"常见"]],[266,266],[264,264]]],[1564207734414,["GJX@GJXAIOU",[[1,264,"创建，大约1"]],[264,264],[270,270]]],[1564207734436,["GJX@GJXAIOU",[[1,269," "]],[270,270],[271,271]]],[1564207735576,["GJX@GJXAIOU",[[1,271,"00多"]],[271,271],[274,274]]],[1564207735599,["GJX@GJXAIOU",[[1,273," "]],[274,274],[275,275]]],[1564207735927,["GJX@GJXAIOU",[[1,275,"个"]],[275,275],[276,276]]],[1564207736612,["GJX@GJXAIOU",[[1,276,"\n\n"]],[276,276],[277,277]]],[1564207736735,["GJX@GJXAIOU",[[1,278,"\n"]],[277,277],[278,278]]],[1564207738751,["GJX@GJXAIOU",[[-1,278,"\n"],[1,279,"XML"]],[278,278],[281,281]]],[1564207740535,["GJX@GJXAIOU",[[1,281,"："]],[281,281],[282,282]]],[1564207762148,["GJX@GJXAIOU",[[1,282,"Extend Markup Lanua"]],[282,282],[301,301]]],[1564207763172,["GJX@GJXAIOU",[[-1,299,"ua"]],[301,301],[299,299]]],[1564207777926,["GJX@GJXAIOU",[[1,299,"guage 可拓展的标记语言"]],[299,299],[313,313]]],[1564207779804,["GJX@GJXAIOU",[[1,313,"\n\n"]],[313,313],[314,314]]],[1564207782766,["GJX@GJXAIOU",[[-1,314,"\n"],[1,315,"XML"]],[314,314],[317,317]]],[1564207783794,["GJX@GJXAIOU",[[1,317,"也是"]],[317,317],[319,319]]],[1564207783817,["GJX@GJXAIOU",[[1,317," "]],[319,319],[320,320]]],[1564207802689,["GJX@GJXAIOU",[[1,320,"通过便签来组成语言，但是这些标签"]],[320,320],[336,336]]],[1564207817038,["GJX@GJXAIOU",[[1,336,"程序员可以自定义，但是哟啊"]],[336,336],[349,349]]],[1564207818124,["GJX@GJXAIOU",[[-1,347,"哟啊"]],[349,349],[347,347]]],[1564207818877,["GJX@GJXAIOU",[[1,347,"哟啊"]],[347,347],[349,349]]],[1564207819540,["GJX@GJXAIOU",[[-1,347,"哟啊"]],[349,349],[347,347]]],[1564207828479,["GJX@GJXAIOU",[[1,347,"要符合语法规定"]],[347,347],[354,354]]],[1564207830900,["GJX@GJXAIOU",[[1,354,"\n\n"]],[354,354],[355,355]]],[1564207832790,["GJX@GJXAIOU",[[-1,355,"\n"],[1,356,"通常"]],[355,355],[357,357]]],[1564207839453,["GJX@GJXAIOU",[[1,357,"的使用方式：``"]],[357,357],[365,365]]],[1564207843086,["GJX@GJXAIOU",[[1,364,"<>"]],[364,364],[366,366]]],[1564207845772,["GJX@GJXAIOU",[[1,365,"z"]],[365,365],[366,366]]],[1564207848588,["GJX@GJXAIOU",[[-1,365,"z"]],[366,366],[365,365]]],[1564207853150,["GJX@GJXAIOU",[[1,365,"自定义标签"]],[365,365],[370,370]]],[1564207858532,["GJX@GJXAIOU",[[1,371,"数据《》"]],[371,371],[375,375]]],[1564207859062,["GJX@GJXAIOU",[[-1,373,"《》"]],[375,375],[373,373]]],[1564207860621,["GJX@GJXAIOU",[[1,373,"<>"]],[373,373],[375,375]]],[1564207864750,["GJX@GJXAIOU",[[1,374,"/zid"]],[374,374],[378,378]]],[1564207865477,["GJX@GJXAIOU",[[-1,375,"zid"]],[378,378],[375,375]]],[1564207867350,["GJX@GJXAIOU",[[1,375,"自定义"]],[375,375],[378,378]]],[1564207868350,["GJX@GJXAIOU",[[1,378,"标签"]],[378,378],[380,380]]],[1564207893113,["GJX@GJXAIOU",[[1,354,"，同时标签是严格区分大小写的，且"]],[354,354],[370,370]]],[1564207900267,["GJX@GJXAIOU",[[-1,368,"，且"]],[370,370],[368,368]]],[1564207904560,["GJX@GJXAIOU",[[1,368,"；主要"]],[368,368],[371,371]]],[1564207905358,["GJX@GJXAIOU",[[-1,369,"主要"]],[371,371],[369,369]]],[1564207907783,["GJX@GJXAIOU",[[1,397,"\n\n"]],[397,397],[398,398]]],[1564207907916,["GJX@GJXAIOU",[[1,399,"\n"]],[398,398],[399,399]]],[1564207909142,["GJX@GJXAIOU",[[-1,399,"\n"],[1,400,"使用"]],[399,399],[401,401]]],[1564207910735,["GJX@GJXAIOU",[[1,401,"场景："]],[401,401],[404,404]]],[1564207911406,["GJX@GJXAIOU",[[1,404,"\n\n"]],[404,404],[405,405]]],[1564207912557,["GJX@GJXAIOU",[[-1,405,"\n"],[1,406,"1"]],[405,405],[406,406]]],[1564207925280,["GJX@GJXAIOU",[[1,406,".properties文件"]],[406,406],[419,419]]],[1564207925304,["GJX@GJXAIOU",[[1,417," "]],[419,419],[420,420]]],[1564207926189,["GJX@GJXAIOU",[[1,420,"，"]],[420,420],[421,421]]],[1564207937463,["GJX@GJXAIOU",[[1,421,"采用键值对保存的（）"]],[421,421],[431,431]]],[1564207940766,["GJX@GJXAIOU",[[1,430,"key - b"]],[430,430],[437,437]]],[1564207941196,["GJX@GJXAIOU",[[-1,436,"b"]],[437,437],[436,436]]],[1564207941917,["GJX@GJXAIOU",[[1,436,"valu"]],[436,436],[440,440]]],[1564207943438,["GJX@GJXAIOU",[[-1,439,"u"]],[440,440],[439,439]]],[1564207943564,["GJX@GJXAIOU",[[1,439,"e"]],[439,439],[440,440]]],[1564207944309,["GJX@GJXAIOU",[[-1,439,"e"]],[440,440],[439,439]]],[1564207945174,["GJX@GJXAIOU",[[1,439,"ue"]],[439,439],[441,441]]],[1564207950171,["GJX@GJXAIOU",[[1,442,"\n\n"]],[442,442],[443,443]]],[1564207952100,["GJX@GJXAIOU",[[-1,443,"\n"],[1,444,"例如"]],[443,443],[445,445]]],[1564207952397,["GJX@GJXAIOU",[[1,445,"："]],[445,445],[446,446]]],[1564207953940,["GJX@GJXAIOU",[[1,446,"\n\n"]],[446,446],[447,447]]],[1564207956375,["GJX@GJXAIOU",[[-1,447,"\n"],[1,448," "]],[447,447],[448,448]]],[1564207960582,["GJX@GJXAIOU",[[1,448,"那么"]],[448,448],[450,450]]],[1564207961579,["GJX@GJXAIOU",[[-1,448,"那么"]],[450,450],[448,448]]],[1564207964983,["GJX@GJXAIOU",[[1,448,"name = root;"]],[448,448],[460,460]]],[1564207966047,["GJX@GJXAIOU",[[-1,459,";"]],[460,460],[459,459]]],[1564207979037,["GJX@GJXAIOU",[[1,459,"\n password = 12345\n d"]],[459,459],[480,480]]],[1564207979501,["GJX@GJXAIOU",[[-1,479,"d"]],[480,480],[479,479]]],[1564207981609,["GJX@GJXAIOU",[[1,479,"对应的"]],[479,479],[482,482]]],[1564207989439,["GJX@GJXAIOU",[[1,482,"XML"]],[482,482],[485,485]]],[1564207989462,["GJX@GJXAIOU",[[1,482," "]],[485,485],[486,486]]],[1564207990495,["GJX@GJXAIOU",[[1,486,"标签"]],[486,486],[488,488]]],[1564207990518,["GJX@GJXAIOU",[[1,486," "]],[488,488],[489,489]]],[1564207998046,["GJX@GJXAIOU",[[1,489,"：\n ```xml\n ```"]],[489,489],[503,503]]],[1564208000013,["GJX@GJXAIOU",[[1,492,"\n "]],[492,492],[494,494]]],[1564208001836,["GJX@GJXAIOU",[[1,502,"\n "]],[500,500],[502,502]]],[1564208006660,["GJX@GJXAIOU",[[-1,493," ```xml"],[-1,501," \n ```"]],[493,507],[493,493]]],[1564208007564,["GJX@GJXAIOU",[[-1,493,"\n"],[1,494,"`"]],[493,493],[494,494]]],[1564208007973,["GJX@GJXAIOU",[[1,494,"``"]],[494,494],[496,496]]],[1564208007995,["GJX@GJXAIOU",[[1,496,"language\n```\n"]],[496,496],[496,504]]],[1564208009236,["GJX@GJXAIOU",[[-1,496,"language"],[1,504,"x"]],[496,504],[497,497]]],[1564208009590,["GJX@GJXAIOU",[[1,497,"ml"]],[497,497],[499,499]]],[1564208010036,["GJX@GJXAIOU",[[1,500,"\n"]],[499,499],[500,500]]],[1564208012902,["GJX@GJXAIOU",[[1,500,"《》"]],[500,500],[502,502]]],[1564208013875,["GJX@GJXAIOU",[[-1,500,"《》"]],[502,502],[500,500]]],[1564208014901,["GJX@GJXAIOU",[[1,500,"<>"]],[500,500],[502,502]]],[1564208016750,["GJX@GJXAIOU",[[1,501,"User"]],[501,501],[505,505]]],[1564208020686,["GJX@GJXAIOU",[[1,506,"<>"]],[506,506],[508,508]]],[1564208023876,["GJX@GJXAIOU",[[1,507,".U=="]],[507,507],[511,511]]],[1564208024692,["GJX@GJXAIOU",[[-1,507,".U=="]],[511,511],[507,507]]],[1564208027406,["GJX@GJXAIOU",[[1,507,"/User"]],[507,507],[512,512]]],[1564208030078,["GJX@GJXAIOU",[[1,506,"\n"]],[506,506],[507,507]]],[1564208030596,["GJX@GJXAIOU",[[1,507,"\n"]],[507,507],[508,508]]],[1564208035031,["GJX@GJXAIOU",[[1,507,"name = "]],[507,507],[514,514]]],[1564208038797,["GJX@GJXAIOU",[[-1,507,"name = "]],[514,514],[507,507]]],[1564208040197,["GJX@GJXAIOU",[[1,507,"  <>"]],[507,507],[511,511]]],[1564208041773,["GJX@GJXAIOU",[[1,510,"name"]],[510,510],[514,514]]],[1564208044103,["GJX@GJXAIOU",[[1,515,"<>"]],[515,515],[517,517]]],[1564208046703,["GJX@GJXAIOU",[[1,516,"/name"]],[516,516],[521,521]]],[1564208050047,["GJX@GJXAIOU",[[1,515,"root"]],[515,515],[519,519]]],[1564208052724,["GJX@GJXAIOU",[[1,527,"  \n"]],[526,526],[529,529]]],[1564208054317,["GJX@GJXAIOU",[[1,529,">"]],[529,529],[530,530]]],[1564208054861,["GJX@GJXAIOU",[[-1,529,">"]],[530,530],[529,529]]],[1564208055719,["GJX@GJXAIOU",[[1,529,"<>"]],[529,529],[531,531]]],[1564208057828,["GJX@GJXAIOU",[[1,530,"passo"]],[530,530],[535,535]]],[1564208058455,["GJX@GJXAIOU",[[-1,534,"o"]],[535,535],[534,534]]],[1564208060541,["GJX@GJXAIOU",[[1,534,"word"]],[534,534],[538,538]]],[1564208062750,["GJX@GJXAIOU",[[1,539,"<>"]],[539,539],[541,541]]],[1564208064949,["GJX@GJXAIOU",[[1,540,"/o"]],[540,540],[542,542]]],[1564208065971,["GJX@GJXAIOU",[[-1,540,"/o"]],[542,542],[540,540]]],[1564208067868,["GJX@GJXAIOU",[[1,540,"/pso"]],[540,540],[544,544]]],[1564208068412,["GJX@GJXAIOU",[[-1,542,"so"]],[544,544],[542,542]]],[1564208071988,["GJX@GJXAIOU",[[1,542,"ossword"]],[542,542],[549,549]]],[1564208076157,["GJX@GJXAIOU",[[-1,542,"o"]],[543,543],[542,542]]],[1564208076269,["GJX@GJXAIOU",[[1,542,"a"]],[542,542],[543,543]]],[1564208077686,["GJX@GJXAIOU",[[1,539," "]],[539,539],[540,540]]],[1564208078531,["GJX@GJXAIOU",[[-1,539," "]],[540,540],[539,539]]],[1564208080127,["GJX@GJXAIOU",[[1,539,"12345"]],[539,539],[544,544]]],[1564208095182,["GJX@GJXAIOU",[[1,442,",zuo"]],[442,442],[446,446]]],[1564208095940,["GJX@GJXAIOU",[[-1,442,",zuo"]],[446,446],[442,442]]],[1564208098161,["GJX@GJXAIOU",[[1,442,"，作为"]],[442,442],[445,445]]],[1564208100940,["GJX@GJXAIOU",[[-1,443,"作为"]],[445,445],[443,443]]],[1564208105887,["GJX@GJXAIOU",[[1,443,"用于左值配置"]],[443,443],[449,449]]],[1564208107655,["GJX@GJXAIOU",[[-1,446,"值配置"]],[449,449],[446,446]]],[1564208108156,["GJX@GJXAIOU",[[-1,445,"左"]],[446,446],[445,445]]],[1564208130763,["GJX@GJXAIOU",[[1,445,"作为配置文件，例如：Tomcat服务器"]],[445,445],[464,464]]],[1564208130786,["GJX@GJXAIOU",[[1,461," "]],[464,464],[465,465]]],[1564208141199,["GJX@GJXAIOU",[[1,465,"配置文件和Spring"]],[465,465],[476,476]]],[1564208141223,["GJX@GJXAIOU",[[1,470," "]],[476,476],[477,477]]],[1564208155984,["GJX@GJXAIOU",[[1,477,"、SpringMVC、MyBatista"]],[477,477],[497,497]]],[1564208157771,["GJX@GJXAIOU",[[-1,495,"ta"]],[497,497],[495,495]]],[1564208162494,["GJX@GJXAIOU",[[1,495,"配置"]],[495,495],[497,497]]],[1564208162518,["GJX@GJXAIOU",[[1,495," "]],[497,497],[498,498]]],[1564208164263,["GJX@GJXAIOU",[[1,498,"文件"]],[498,498],[500,500]]],[1564208176236,["GJX@GJXAIOU",[[1,626,"\n"]],[625,625],[626,626]]],[1564208176347,["GJX@GJXAIOU",[[1,627,"\n"]],[626,626],[627,627]]],[1564208177156,["GJX@GJXAIOU",[[-1,627,"\n"],[1,628,"2"]],[627,627],[628,628]]],[1564208180303,["GJX@GJXAIOU",[[1,628,".作为小心"]],[628,628],[633,633]]],[1564208180987,["GJX@GJXAIOU",[[-1,631,"小心"]],[633,633],[631,631]]],[1564208191407,["GJX@GJXAIOU",[[1,631,"小型数据库"]],[631,631],[636,636]]],[1564208381470,["GJX@GJXAIOU",[[1,636,"，是数据的载体"]],[636,636],[643,643]]],[1564208389845,["GJX@GJXAIOU",[[1,643,"\n\n"]],[643,643],[644,644]]],[1564208389964,["GJX@GJXAIOU",[[1,645,"\n"]],[644,644],[645,645]]],[1564208390094,["GJX@GJXAIOU",[[1,646,"\n"]],[645,645],[646,646]]],[1564208396651,["GJX@GJXAIOU",[[1,278,"\n"]],[277,277],[278,278]]],[1564208399392,["GJX@GJXAIOU",[[1,278,"## XML"]],[278,278],[284,284]]],[1564208405704,["GJX@GJXAIOU",[[1,652,"## XML"]],[652,652],[658,658]]],[1564208407886,["GJX@GJXAIOU",[[1,658,"语法"]],[658,658],[660,660]]],[1564208407911,["GJX@GJXAIOU",[[1,658," "]],[660,660],[661,661]]],[1564208409526,["GJX@GJXAIOU",[[1,661,"规范"]],[661,661],[663,663]]],[1564208409900,["GJX@GJXAIOU",[[1,665,"\n"]],[663,663],[664,664]]],[1564208410078,["GJX@GJXAIOU",[[1,666,"\n"]],[664,664],[665,665]]],[1564208417878,["GJX@GJXAIOU",[[1,665,"### 一、预防"]],[665,665],[673,673]]],[1564208418509,["GJX@GJXAIOU",[[-1,671,"预防"]],[673,673],[671,671]]],[1564208420943,["GJX@GJXAIOU",[[1,671,"文档什么"]],[671,671],[675,675]]],[1564208421594,["GJX@GJXAIOU",[[-1,673,"什么"]],[675,675],[673,673]]],[1564208423767,["GJX@GJXAIOU",[[1,673,"声明"]],[673,673],[675,675]]],[1564208424140,["GJX@GJXAIOU",[[1,677,"\n"]],[675,675],[676,676]]],[1564208431133,["GJX@GJXAIOU",[[1,676,"这是固定的格式："]],[676,676],[684,684]]],[1564208431964,["GJX@GJXAIOU",[[1,686,"\n"]],[684,684],[685,685]]],[1564208435101,["GJX@GJXAIOU",[[1,685,"``"]],[685,685],[687,687]]],[1564208437094,["GJX@GJXAIOU",[[1,686,"<>"]],[686,686],[688,688]]],[1564208459621,["GJX@GJXAIOU",[[1,687,"?xml version = \"1.0\" encoding = \"utf-8\""]],[687,687],[726,726]]],[1564209142669,["GJX@GJXAIOU",[[-1,729,"\n"],[1,730,"q"]],[729,729],[730,730]]],[1564209143347,["GJX@GJXAIOU",[[1,730,"izhog"]],[730,730],[735,735]]],[1564209144234,["GJX@GJXAIOU",[[-1,730,"izhog"]],[735,735],[730,730]]],[1564209144421,["GJX@GJXAIOU",[[-1,729,"q"],[1,730,"\n"]],[730,730],[729,729]]],[1564209146284,["GJX@GJXAIOU",[[-1,729,"\n"],[1,730,"其中"]],[729,729],[731,731]]],[1564209146638,["GJX@GJXAIOU",[[1,731,"："]],[731,731],[732,732]]],[1564209246558,["GJX@GJXAIOU",[[1,732,"version： XML"]],[732,732],[744,744]]],[1564209248736,["GJX@GJXAIOU",[[1,744,"使用"]],[744,744],[746,746]]],[1564209248759,["GJX@GJXAIOU",[[1,744," "]],[746,746],[747,747]]],[1564209250988,["GJX@GJXAIOU",[[1,747,"的版本号"]],[747,747],[751,751]]],[1564209251266,["GJX@GJXAIOU",[[1,751,"\n\n"]],[751,751],[752,752]]],[1564209254291,["GJX@GJXAIOU",[[-1,752,"\n"],[1,753,"e"]],[752,752],[753,753]]],[1564209254540,["GJX@GJXAIOU",[[1,753,"c"]],[753,753],[754,754]]],[1564209255691,["GJX@GJXAIOU",[[-1,753,"c"]],[754,754],[753,753]]],[1564209259788,["GJX@GJXAIOU",[[1,753,"ncoding: jie"]],[753,753],[765,765]]],[1564209260443,["GJX@GJXAIOU",[[-1,762,"jie"]],[765,765],[762,762]]],[1564209265830,["GJX@GJXAIOU",[[1,762,"解析当前XML"]],[762,762],[769,769]]],[1564209265855,["GJX@GJXAIOU",[[1,766," "]],[769,769],[770,770]]],[1564209267869,["GJX@GJXAIOU",[[1,770,"文件"]],[770,770],[772,772]]],[1564209267892,["GJX@GJXAIOU",[[1,770," "]],[772,772],[773,773]]],[1564209273645,["GJX@GJXAIOU",[[1,773,"使用的字符编码"]],[773,773],[780,780]]],[1564209275388,["GJX@GJXAIOU",[[1,780,"\n\n"]],[780,780],[781,781]]],[1564209277883,["GJX@GJXAIOU",[[1,782,"\n"]],[781,781],[782,782]]],[1564209287230,["GJX@GJXAIOU",[[1,782,"### 二、标签语法"]],[782,782],[792,792]]],[1564209287563,["GJX@GJXAIOU",[[1,793,"\n"]],[792,792],[793,793]]],[1564209291078,["GJX@GJXAIOU",[[-1,793,"\n"],[1,794,"j"]],[793,793],[794,794]]],[1564209291603,["GJX@GJXAIOU",[[1,794,"iben"]],[794,794],[798,798]]],[1564209292224,["GJX@GJXAIOU",[[-1,794,"iben"]],[798,798],[794,794]]],[1564209292691,["GJX@GJXAIOU",[[-1,793,"j"],[1,794,"\n"]],[794,794],[793,793]]],[1564209293012,["GJX@GJXAIOU",[[-1,793,"\n"],[1,794,"j"]],[793,793],[794,794]]],[1564209293533,["GJX@GJXAIOU",[[1,794,"ib"]],[794,794],[796,796]]],[1564209294028,["GJX@GJXAIOU",[[-1,794,"ib"]],[796,796],[794,794]]],[1564209294124,["GJX@GJXAIOU",[[-1,793,"j"],[1,794,"\n"]],[794,794],[793,793]]],[1564209294428,["GJX@GJXAIOU",[[-1,793,"\n"],[1,794,"J"]],[793,793],[794,794]]],[1564209295020,["GJX@GJXAIOU",[[1,794,"iben"]],[794,794],[798,798]]],[1564209295658,["GJX@GJXAIOU",[[-1,794,"iben"]],[798,798],[794,794]]],[1564209295771,["GJX@GJXAIOU",[[-1,793,"J"],[1,794,"\n"]],[794,794],[793,793]]],[1564209297165,["GJX@GJXAIOU",[[-1,793,"\n"],[1,794,"基本"]],[793,793],[795,795]]],[1564209300172,["GJX@GJXAIOU",[[1,795,"格式：``"]],[795,795],[800,800]]],[1564209307635,["GJX@GJXAIOU",[[1,799,"<><>"]],[799,799],[803,803]]],[1564209308868,["GJX@GJXAIOU",[[1,802,"/"]],[802,802],[803,803]]],[1564209311094,["GJX@GJXAIOU",[[1,800,"zi"]],[800,800],[802,802]]],[1564209311673,["GJX@GJXAIOU",[[-1,800,"zi"]],[802,802],[800,800]]],[1564209318237,["GJX@GJXAIOU",[[1,800,"自定义标签名"]],[800,800],[806,806]]],[1564209319396,["GJX@GJXAIOU",[[1,807," "]],[807,807],[808,808]]],[1564209320172,["GJX@GJXAIOU",[[-1,807," "]],[808,808],[807,807]]],[1564209321269,["GJX@GJXAIOU",[[1,807,"数据"]],[807,807],[809,809]]],[1564209326128,["GJX@GJXAIOU",[[1,811,"自定义标签名"]],[811,811],[817,817]]],[1564209401202,["GJX@GJXAIOU",[[1,819,"\n\n"]],[819,819],[820,820]]],[1564209409557,["GJX@GJXAIOU",[[-1,820,"\n"],[1,821,"语法"]],[820,820],[822,822]]],[1564209410852,["GJX@GJXAIOU",[[1,822,"规范："]],[822,822],[825,825]]],[1564209412188,["GJX@GJXAIOU",[[1,825,"\n\n"]],[825,825],[826,826]]],[1564209415147,["GJX@GJXAIOU",[[1,793,"- "]],[793,793],[795,795]]],[1564209416868,["GJX@GJXAIOU",[[1,822,"- "]],[822,822],[824,824]]],[1564209420046,["GJX@GJXAIOU",[[1,830,"  - "]],[830,830],[834,834]]],[1564209434247,["GJX@GJXAIOU",[[1,834,"结束比较爱欧倩"]],[834,834],[841,841]]],[1564209435596,["GJX@GJXAIOU",[[-1,836,"比较爱欧倩"]],[841,841],[836,836]]],[1564209440116,["GJX@GJXAIOU",[[1,836,"标签必须有``"]],[836,836],[843,843]]],[1564209441548,["GJX@GJXAIOU",[[1,842,"/"]],[842,842],[843,843]]],[1564209447022,["GJX@GJXAIOU",[[1,844,"进行编辑"]],[844,844],[848,848]]],[1564209447699,["GJX@GJXAIOU",[[-1,846,"编辑"]],[848,848],[846,846]]],[1564209451501,["GJX@GJXAIOU",[[1,846,"标记"]],[846,846],[848,848]]],[1564209451818,["GJX@GJXAIOU",[[1,849,"  - \n"]],[848,848],[853,853]]],[1564209457876,["GJX@GJXAIOU",[[1,848,"；"]],[848,848],[849,849]]],[1564209485654,["GJX@GJXAIOU",[[1,854,"《》"]],[854,854],[856,856]]],[1564209486834,["GJX@GJXAIOU",[[-1,854,"《》"]],[856,856],[854,854]]],[1564209487635,["GJX@GJXAIOU",[[1,854,"<>"]],[854,854],[856,856]]],[1564209490648,["GJX@GJXAIOU",[[1,855,"studentg"]],[855,855],[863,863]]],[1564209491329,["GJX@GJXAIOU",[[-1,862,"g"]],[863,863],[862,862]]],[1564209493062,["GJX@GJXAIOU",[[1,862," /"]],[862,862],[864,864]]],[1564209498163,["GJX@GJXAIOU",[[1,865,"`"]],[865,865],[866,866]]],[1564209501316,["GJX@GJXAIOU",[[1,854,"`"]],[854,854],[855,855]]],[1564209514719,["GJX@GJXAIOU",[[1,867," 为空标签，没有内容个，"]],[867,867],[879,879]]],[1564209515722,["GJX@GJXAIOU",[[-1,877,"个，"]],[879,879],[877,877]]],[1564209521101,["GJX@GJXAIOU",[[1,877,"，一般用于占位；"]],[877,877],[885,885]]],[1564209521306,["GJX@GJXAIOU",[[1,886,"  - \n"]],[885,885],[890,890]]],[1564209526413,["GJX@GJXAIOU",[[1,890,"XML文件"]],[890,890],[895,895]]],[1564209526438,["GJX@GJXAIOU",[[1,893," "]],[895,895],[896,896]]],[1564209539861,["GJX@GJXAIOU",[[1,896,"中使用的自定义标签是严格区分代销"]],[896,896],[912,912]]],[1564209540419,["GJX@GJXAIOU",[[-1,910,"代销"]],[912,912],[910,910]]],[1564209544485,["GJX@GJXAIOU",[[1,910,"大小写的；"]],[910,910],[915,915]]],[1564209544691,["GJX@GJXAIOU",[[1,916,"  - \n"]],[915,915],[920,920]]],[1564209547279,["GJX@GJXAIOU",[[1,920,"XML"]],[920,920],[923,923]]],[1564209548875,["GJX@GJXAIOU",[[1,923,"文件"]],[923,923],[925,925]]],[1564209548901,["GJX@GJXAIOU",[[1,923," "]],[925,925],[926,926]]],[1564209573556,["GJX@GJXAIOU",[[1,926,"中使用的标签必须一一匹配，不能交叉嵌套；"]],[926,926],[946,946]]],[1564209573765,["GJX@GJXAIOU",[[1,947,"  - \n"]],[946,946],[951,951]]],[1564209578348,["GJX@GJXAIOU",[[1,951,"XML文件"]],[951,951],[956,956]]],[1564209578375,["GJX@GJXAIOU",[[1,954," "]],[956,956],[957,957]]],[1564209585197,["GJX@GJXAIOU",[[1,957,"中标签不能存在空格；"]],[957,957],[967,967]]],[1564209585437,["GJX@GJXAIOU",[[1,968,"  - \n"]],[967,967],[972,972]]],[1564209597021,["GJX@GJXAIOU",[[1,972,"XML文件"]],[972,972],[977,977]]],[1564209597047,["GJX@GJXAIOU",[[1,975," "]],[977,977],[978,978]]],[1564209602734,["GJX@GJXAIOU",[[1,978,"中使用的自定义标签不能"]],[978,978],[989,989]]],[1564209647782,["GJX@GJXAIOU",[[1,989,"使用数字开头；"]],[989,989],[996,996]]],[1564209728859,["GJX@GJXAIOU",[[1,997,"  - \n"]],[996,996],[1001,1001]]],[1564209731821,["GJX@GJXAIOU",[[1,1001,"XML文件"]],[1001,1001],[1006,1006]]],[1564209731846,["GJX@GJXAIOU",[[1,1004," "]],[1006,1006],[1007,1007]]],[1564209754094,["GJX@GJXAIOU",[[1,1007,"中有且只能有一个根节点；☆☆☆"]],[1007,1007],[1022,1022]]],[1564209772404,["GJX@GJXAIOU",[[1,1023,"  - \n"]],[1022,1022],[1027,1027]]],[1564209772538,["GJX@GJXAIOU",[[-1,1023,"  - "]],[1027,1027],[1024,1024]]],[1564209772674,["GJX@GJXAIOU",[[1,1024,"\n"]],[1024,1024],[1025,1025]]],[1564209772796,["GJX@GJXAIOU",[[1,1025,"\n"]],[1025,1025],[1026,1026]]],[1564209772922,["GJX@GJXAIOU",[[1,1026,"\n"]],[1026,1026],[1027,1027]]],[1564209774211,["GJX@GJXAIOU",[[1,1027,"### "]],[1027,1027],[1030,1030]]],[1564209779280,["GJX@GJXAIOU",[[1,1030,"三、属性"]],[1030,1030],[1034,1034]]],[1564209780771,["GJX@GJXAIOU",[[1,1030," "]],[1030,1030],[1031,1031]]],[1564209782405,["GJX@GJXAIOU",[[1,1036,"\n\n"]],[1036,1036],[1037,1037]]],[1564209919077,["GJX@GJXAIOU",[[-1,1037,"\n"],[1,1038,"g"]],[1037,1037],[1038,1038]]],[1564209919651,["GJX@GJXAIOU",[[1,1038,"eshi "]],[1038,1038],[1043,1043]]],[1564209920395,["GJX@GJXAIOU",[[-1,1038,"eshi "]],[1043,1043],[1038,1038]]],[1564209920962,["GJX@GJXAIOU",[[-1,1037,"g"],[1,1038,"\n"]],[1038,1038],[1037,1037]]],[1564209922004,["GJX@GJXAIOU",[[-1,1037,"\n"],[1,1038,"格式"]],[1037,1037],[1039,1039]]],[1564209924755,["GJX@GJXAIOU",[[1,1039,"：<>"]],[1039,1039],[1042,1042]]],[1564209928126,["GJX@GJXAIOU",[[1,1039,"s"]],[1039,1039],[1040,1040]]],[1564209928151,["GJX@GJXAIOU",[[1,1039," "]],[1040,1040],[1041,1041]]],[1564209928485,["GJX@GJXAIOU",[[-1,1040,"s"]],[1041,1041],[1040,1040]]],[1564209929423,["GJX@GJXAIOU",[[1,1040,"示例"]],[1040,1040],[1042,1042]]],[1564209931181,["GJX@GJXAIOU",[[1,1043,"·"]],[1043,1043],[1044,1044]]],[1564209932146,["GJX@GJXAIOU",[[-1,1043,"·"]],[1044,1044],[1043,1043]]],[1564209932603,["GJX@GJXAIOU",[[1,1043,"`"]],[1043,1043],[1044,1044]]],[1564209933587,["GJX@GJXAIOU",[[1,1046,"`"]],[1046,1046],[1047,1047]]],[1564209937227,["GJX@GJXAIOU",[[1,1045,"stue"]],[1045,1045],[1049,1049]]],[1564209937818,["GJX@GJXAIOU",[[-1,1048,"e"]],[1049,1049],[1048,1048]]],[1564209946077,["GJX@GJXAIOU",[[1,1048,"dent name = \"nnn\""]],[1048,1048],[1065,1065]]],[1564209948045,["GJX@GJXAIOU",[[1,1066," <>"]],[1066,1066],[1069,1069]]],[1564209952189,["GJX@GJXAIOU",[[1,1068,"/stue"]],[1068,1068],[1073,1073]]],[1564209952619,["GJX@GJXAIOU",[[-1,1072,"e"]],[1073,1073],[1072,1072]]],[1564209953011,["GJX@GJXAIOU",[[1,1072,"dent"]],[1072,1072],[1076,1076]]],[1564209955393,["GJX@GJXAIOU",[[1,1078,"\n\n"]],[1078,1078],[1079,1079]]],[1564209955987,["GJX@GJXAIOU",[[-1,1079,"\n"],[1,1080,"z"]],[1079,1079],[1080,1080]]],[1564209956252,["GJX@GJXAIOU",[[1,1080,"hu"]],[1080,1080],[1082,1082]]],[1564209956764,["GJX@GJXAIOU",[[-1,1080,"hu"]],[1082,1082],[1080,1080]]],[1564209956843,["GJX@GJXAIOU",[[-1,1079,"z"],[1,1080,"\n"]],[1080,1080],[1079,1079]]],[1564209958755,["GJX@GJXAIOU",[[-1,1079,"\n"],[1,1080,"注意"]],[1079,1079],[1081,1081]]],[1564209959012,["GJX@GJXAIOU",[[1,1081,"："]],[1081,1081],[1082,1082]]],[1564209960345,["GJX@GJXAIOU",[[1,1082,"\n\n"]],[1082,1082],[1083,1083]]],[1564209961158,["GJX@GJXAIOU",[[-1,1083,"\n"],[1,1084,"-"]],[1083,1083],[1084,1084]]],[1564209965557,["GJX@GJXAIOU",[[1,1084," 属性必须使用"]],[1084,1084],[1091,1091]]],[1564209974427,["GJX@GJXAIOU",[[1,1091,"引号包含，见谅"]],[1091,1091],[1098,1098]]],[1564209975092,["GJX@GJXAIOU",[[-1,1095,"，见谅"]],[1098,1098],[1095,1095]]],[1564209991541,["GJX@GJXAIOU",[[1,1095,"，尽量使用双引号；\n- 一个标签内可以使用多个属性，sahib"]],[1095,1095],[1126,1126]]],[1564209992834,["GJX@GJXAIOU",[[-1,1121,"sahib"]],[1126,1126],[1121,1121]]],[1564209998348,["GJX@GJXAIOU",[[1,1121,"但是属性的名字不能想听那个"]],[1121,1121],[1134,1134]]],[1564209999666,["GJX@GJXAIOU",[[-1,1130,"想听那个"]],[1134,1134],[1130,1130]]],[1564210001122,["GJX@GJXAIOU",[[1,1130,"相同 "]],[1130,1130],[1133,1133]]],[1564210001677,["GJX@GJXAIOU",[[-1,1132," "]],[1133,1133],[1132,1132]]],[1564210002210,["GJX@GJXAIOU",[[1,1132,"；\n- "]],[1132,1132],[1136,1136]]],[1564210003748,["GJX@GJXAIOU",[[-1,1135," "]],[1136,1136],[1135,1135]]],[1564210003875,["GJX@GJXAIOU",[[-1,1134,"-"],[1,1135,"\n"]],[1135,1135],[1134,1134]]],[1564210004210,["GJX@GJXAIOU",[[-1,1134,"\n"]],[1134,1134],[1133,1133]]],[1564210004931,["GJX@GJXAIOU",[[1,1134,"- \n"]],[1133,1133],[1136,1136]]],[1564210005034,["GJX@GJXAIOU",[[-1,1134,"- "]],[1136,1136],[1135,1135]]],[1564210007834,["GJX@GJXAIOU",[[1,1135,"### "]],[1135,1135],[1138,1138]]],[1564210009188,["GJX@GJXAIOU",[[1,1138,"s"]],[1138,1138],[1139,1139]]],[1564210009682,["GJX@GJXAIOU",[[-1,1138,"s"]],[1139,1139],[1138,1138]]],[1564210010371,["GJX@GJXAIOU",[[1,1139," "]],[1138,1138],[1139,1139]]],[1564210013396,["GJX@GJXAIOU",[[1,1139,"四、注释"]],[1139,1139],[1143,1143]]],[1564210013818,["GJX@GJXAIOU",[[1,1143,"\n"]],[1143,1143],[1144,1144]]],[1564210017547,["GJX@GJXAIOU",[[1,1144,"gehsi"]],[1144,1144],[1149,1149]]],[1564210017802,["GJX@GJXAIOU",[[1,1150," "]],[1149,1149],[1150,1150]]],[1564210019618,["GJX@GJXAIOU",[[-1,1144,"gehsi "]],[1150,1150],[1144,1144]]],[1564210020916,["GJX@GJXAIOU",[[1,1144,"格式；"]],[1144,1144],[1147,1147]]],[1564210021921,["GJX@GJXAIOU",[[-1,1146,"；"]],[1147,1147],[1146,1146]]],[1564210023707,["GJX@GJXAIOU",[[1,1146,"：``"]],[1146,1146],[1149,1149]]],[1564210025387,["GJX@GJXAIOU",[[1,1148,"<>"]],[1148,1148],[1150,1150]]],[1564210028643,["GJX@GJXAIOU",[[1,1150,"----"]],[1150,1150],[1154,1154]]],[1564210033605,["GJX@GJXAIOU",[[1,1152," 这里是哟"]],[1152,1152],[1157,1157]]],[1564210034074,["GJX@GJXAIOU",[[-1,1156,"哟"]],[1157,1157],[1156,1156]]],[1564210035422,["GJX@GJXAIOU",[[1,1156,"注释"]],[1156,1156],[1158,1158]]],[1564210037834,["GJX@GJXAIOU",[[1,1162,"\n"]],[1162,1162],[1163,1163]]],[1564210037954,["GJX@GJXAIOU",[[-1,1163," "],[1,1164,"\n"]],[1163,1163],[1164,1164]]],[1564210043733,["GJX@GJXAIOU",[[-1,1163,"\n"],[1,1164,"-"]],[1164,1164],[1164,1164]]],[1564210049326,["GJX@GJXAIOU",[[1,1164," 其他注释会中"]],[1164,1164],[1171,1171]]],[1564210050042,["GJX@GJXAIOU",[[-1,1169,"会中"]],[1171,1171],[1169,1169]]],[1564210052445,["GJX@GJXAIOU",[[1,1169,"会中"]],[1169,1169],[1171,1171]]],[1564210053057,["GJX@GJXAIOU",[[-1,1169,"会中"]],[1171,1171],[1169,1169]]],[1564210057145,["GJX@GJXAIOU",[[1,1169,"汇总：\n- "]],[1169,1169],[1175,1175]]],[1564210058930,["GJX@GJXAIOU",[[1,1173,"  "]],[1175,1175],[1177,1177]]],[1564210064931,["GJX@GJXAIOU",[[1,1177,"Java： ``"]],[1177,1177],[1185,1185]]],[1564210066211,["GJX@GJXAIOU",[[1,1184,"//"]],[1184,1184],[1186,1186]]],[1564210069932,["GJX@GJXAIOU",[[1,1187," ··"]],[1187,1187],[1190,1190]]],[1564210070468,["GJX@GJXAIOU",[[-1,1188,"··"]],[1190,1190],[1188,1188]]],[1564210072939,["GJX@GJXAIOU",[[1,1188,"````"]],[1188,1188],[1192,1192]]],[1564210077386,["GJX@GJXAIOU",[[1,1189,"/**/"]],[1189,1189],[1193,1193]]],[1564210080164,["GJX@GJXAIOU",[[1,1195," "]],[1195,1195],[1196,1196]]],[1564210082819,["GJX@GJXAIOU",[[1,1194," "]],[1194,1194],[1195,1195]]],[1564210087179,["GJX@GJXAIOU",[[1,1196,"?"]],[1196,1196],[1197,1197]]],[1564210147863,[null,[[-1,1149,">"],[1,1150,"!"],[1,1160,">"],[-1,1161," "]],[1149,1149],[1161,1161]]],[1564210147863,[null,[[1,1149,">"],[-1,1149,"!"],[-1,1160,">"],[1,1162," "]],[1161,1161],[1149,1149]]],[1564210089115,["GJX@GJXAIOU",[[1,1198,"*/"]],[1198,1198],[1200,1200]]],[1564210090781,["GJX@GJXAIOU",[[-1,1196,"?"]],[1197,1197],[1196,1196]]],[1564210091141,["GJX@GJXAIOU",[[1,1196,"/"]],[1196,1196],[1197,1197]]],[1564210095845,["GJX@GJXAIOU",[[1,1199,"*"]],[1199,1199],[1200,1200]]],[1564210100027,["GJX@GJXAIOU",[[1,1199," "]],[1199,1199],[1200,1200]]],[1564210104732,["GJX@GJXAIOU",[[1,1204,"s"]],[1204,1204],[1205,1205]]],[1564210105091,["GJX@GJXAIOU",[[-1,1204,"s"]],[1205,1205],[1204,1204]]],[1564210123771,["GJX@GJXAIOU",[[1,1204,"单行注释、多行注释、文档注释\n  - HTML "]],[1204,1204],[1228,1228]]],[1564210124409,["GJX@GJXAIOU",[[-1,1227," "]],[1228,1228],[1227,1227]]],[1564210127291,["GJX@GJXAIOU",[[1,1227,": <>"]],[1227,1227],[1231,1231]]],[1564210129098,["GJX@GJXAIOU",[[1,1229,"`"]],[1229,1229],[1230,1230]]],[1564210129906,["GJX@GJXAIOU",[[1,1232,"`"]],[1232,1232],[1233,1233]]],[1564210132346,["GJX@GJXAIOU",[[1,1231,"!----"]],[1231,1231],[1236,1236]]],[1564210133706,["GJX@GJXAIOU",[[1,1234," "]],[1234,1234],[1235,1235]]],[1564210145901,["GJX@GJXAIOU",[[1,1239,"\n  - CSS :··"]],[1239,1239],[1251,1251]]],[1564210147490,["GJX@GJXAIOU",[[-1,1249,"··"]],[1251,1251],[1249,1249]]],[1564210207863,[null,[[-1,1149,">"],[1,1150,"!"],[1,1160,">"],[-1,1161," "],[-1,1197," "],[1,1198,"*"],[1,1202," "],[-1,1203,"s"]],[1149,1149],[1203,1203]]],[1564210207863,[null,[[1,1149,">"],[-1,1149,"!"],[-1,1160,">"],[1,1162," "],[1,1197," "],[-1,1197,"*"],[-1,1202," "],[1,1204,"s"]],[1203,1203],[1149,1149]]],[1564210148195,["GJX@GJXAIOU",[[1,1249,"``"]],[1249,1249],[1251,1251]]],[1564210151178,["GJX@GJXAIOU",[[1,1250,"<>"]],[1250,1250],[1252,1252]]],[1564210153555,["GJX@GJXAIOU",[[1,1251,"!"]],[1251,1251],[1252,1252]]],[1564210158586,["GJX@GJXAIOU",[[-1,1250,"<!>"]],[1252,1252],[1250,1250]]],[1564210163750,["GJX@GJXAIOU",[[1,1250,"/* */"]],[1250,1250],[1255,1255]]],[1564210166125,["GJX@GJXAIOU",[[1,1191," "]],[1191,1191],[1192,1192]]],[1564210175549,["GJX@GJXAIOU",[[1,1257,"\n  - JS: ··"]],[1257,1257],[1268,1268]]],[1564210176635,["GJX@GJXAIOU",[[-1,1266,"··"]],[1268,1268],[1266,1266]]],[1564210179083,["GJX@GJXAIOU",[[1,1266,"`` ``"]],[1266,1266],[1271,1271]]],[1564210183299,["GJX@GJXAIOU",[[1,1267,"/./."]],[1267,1267],[1271,1271]]],[1564210184313,["GJX@GJXAIOU",[[-1,1268,"./."]],[1271,1271],[1268,1268]]],[1564210185223,["GJX@GJXAIOU",[[1,1268,"/"]],[1268,1268],[1269,1269]]],[1564210190781,["GJX@GJXAIOU",[[1,1272,"/* */"]],[1272,1272],[1277,1277]]],[1564210195347,["GJX@GJXAIOU",[[1,1278,"\n  - JSP "]],[1278,1278],[1287,1287]]],[1564210195860,["GJX@GJXAIOU",[[-1,1286," "]],[1287,1287],[1286,1286]]],[1564210200907,["GJX@GJXAIOU",[[1,1286,": ··"]],[1286,1286],[1290,1290]]],[1564210202297,["GJX@GJXAIOU",[[-1,1288,"··"]],[1290,1290],[1288,1288]]],[1564210202938,["GJX@GJXAIOU",[[1,1288,"``"]],[1288,1288],[1290,1290]]],[1564210204733,["GJX@GJXAIOU",[[1,1289,"<>"]],[1289,1289],[1291,1291]]],[1564210207797,["GJX@GJXAIOU",[[1,1290,"% %"]],[1290,1290],[1293,1293]]],[1564210267870,[null,[[-1,1149,">"],[1,1150,"!"],[1,1160,">"],[-1,1161," "],[-1,1198," "],[1,1199,"*"],[1,1203," "],[-1,1204,"s"]],[1149,1149],[1204,1204]]],[1564210267870,[null,[[1,1149,">"],[-1,1149,"!"],[-1,1160,">"],[1,1162," "],[1,1198," "],[-1,1198,"*"],[-1,1203," "],[1,1205,"s"]],[1204,1204],[1149,1149]]],[1564210208034,["GJX@GJXAIOU",[[1,1293," "]],[1293,1293],[1294,1294]]],[1564210209130,["GJX@GJXAIOU",[[-1,1293," "]],[1294,1294],[1293,1293]]],[1564210210812,["GJX@GJXAIOU",[[1,1292," "]],[1291,1291],[1292,1292]]],[1564210507870,[null,[[-1,1149,">"],[1,1150,"!"],[1,1160,">"],[-1,1161," "],[-1,1198," "],[1,1199,"*"],[1,1203," "],[-1,1204,"s"]],[1149,1149],[1204,1204]]],[1564210507870,[null,[[1,1149,">"],[-1,1149,"!"],[-1,1160,">"],[1,1162," "],[1,1198," "],[-1,1198,"*"],[-1,1203," "],[1,1205,"s"]],[1204,1204],[1149,1149]]],[1564210475907,["GJX@GJXAIOU",[[1,1296,"\n  - "]],[1296,1296],[1301,1301]]],[1564210476026,["GJX@GJXAIOU",[[-1,1297,"  - "],[1,1301,"\n\n"]],[1301,1301],[1298,1298]]],[1564210478722,["GJX@GJXAIOU",[[1,1298,"### wu"]],[1298,1298],[1304,1304]]],[1564210479281,["GJX@GJXAIOU",[[-1,1302,"wu"]],[1304,1304],[1302,1302]]],[1564210494589,["GJX@GJXAIOU",[[1,1302,"五、转义字符"]],[1302,1302],[1308,1308]]],[1564210495554,["GJX@GJXAIOU",[[1,1309,"\n"]],[1308,1308],[1309,1309]]],[1564210499317,["GJX@GJXAIOU",[[-1,1309,"\n"],[1,1310,"X"]],[1309,1309],[1310,1310]]],[1564210507723,["GJX@GJXAIOU",[[1,1310,"ML 中有很多特殊含义的字符"]],[1310,1310],[1324,1324]]],[1564210567877,[null,[[-1,1149,">"],[1,1150,"!"],[1,1160,">"],[-1,1161," "],[-1,1198," "],[1,1199,"*"],[1,1203," "],[-1,1204,"s"]],[1149,1149],[1204,1204]]],[1564210567877,[null,[[1,1149,">"],[-1,1149,"!"],[-1,1160,">"],[1,1162," "],[1,1198," "],[-1,1198,"*"],[-1,1203," "],[1,1205,"s"]],[1204,1204],[1149,1149]]],[1564210511899,["GJX@GJXAIOU",[[1,1324,"，例如：《》"]],[1324,1324],[1330,1330]]],[1564210512657,["GJX@GJXAIOU",[[-1,1328,"《》"]],[1330,1330],[1328,1328]]],[1564210516082,["GJX@GJXAIOU",[[1,1328,"<> ? \""]],[1328,1328],[1334,1334]]],[1564210516111,["GJX@GJXAIOU",[[-1,1333,"\""],[1,1334,"“"]],[1334,1334],[1334,1334]]],[1564210516228,["GJX@GJXAIOU",[[1,1334,"\""]],[1334,1334],[1335,1335]]],[1564210516255,["GJX@GJXAIOU",[[-1,1334,"\""],[1,1335,"”"]],[1335,1335],[1335,1335]]],[1564210519403,["GJX@GJXAIOU",[[1,1335,"\n\n"]],[1335,1335],[1336,1336]]],[1564210521051,["GJX@GJXAIOU",[[-1,1336,"\n"],[1,1337,"水印"]],[1336,1336],[1338,1338]]],[1564210521601,["GJX@GJXAIOU",[[-1,1337,"印"]],[1338,1338],[1337,1337]]],[1564210521705,["GJX@GJXAIOU",[[-1,1336,"水"],[1,1337,"\n"]],[1337,1337],[1336,1336]]],[1564210525236,["GJX@GJXAIOU",[[-1,1336,"\n"],[1,1337,"对应点"]],[1336,1336],[1339,1339]]],[1564210526364,["GJX@GJXAIOU",[[1,1339,"额注意"]],[1339,1339],[1342,1342]]],[1564210528913,["GJX@GJXAIOU",[[-1,1338,"点额注意"]],[1342,1342],[1338,1338]]],[1564210532062,["GJX@GJXAIOU",[[1,1338,"的转义字符："]],[1338,1338],[1344,1344]]],[1564210532290,["GJX@GJXAIOU",[[1,1344,"\n\n"]],[1344,1344],[1345,1345]]],[1564210627874,[null,[[-1,1149,">"],[1,1150,"!"],[1,1160,">"],[-1,1161," "],[-1,1198," "],[1,1199,"*"],[1,1203," "],[-1,1204,"s"]],[1149,1149],[1204,1204]]],[1564210627874,[null,[[1,1149,">"],[-1,1149,"!"],[-1,1160,">"],[1,1162," "],[1,1198," "],[-1,1198,"*"],[-1,1203," "],[1,1205,"s"]],[1204,1204],[1149,1149]]],[1564210594620,["GJX@GJXAIOU",[[1,1345,"| \n\n**字符**\n\n | \n\n**转义字符**\n\n | \n\n**描述**\n\n |\n| \n\n&\n\n | \n\n&amp;\n\n | \n\n和\n\n |\n| \n\n<\n\n | \n\n&lt;\n\n | \n\n小于号\n\n |\n| \n\n>\n\n | \n\n&gt;\n\n | \n\n大于号\n\n |\n| \n\n\"\n\n | \n\n&quot;\n\n | \n\n双引号\n\n |\n| \n\n'\n\n | \n\n&apos;\n\n | \n\n单引号\n\n |"]],[1345,1345],[1545,1545]]],[1564210597734,["GJX@GJXAIOU",[[-1,1345,"| \n\n**字符**\n\n | \n\n**转义字符**\n\n | \n\n**描述**\n\n |\n| \n\n&\n\n | \n\n&amp;\n\n | \n\n和\n\n |\n| \n\n<\n\n | \n\n&lt;\n\n | \n\n小于号\n\n |\n| \n\n>\n\n | \n\n&gt;\n\n | \n\n大于号\n\n |\n| \n\n\"\n\n | \n\n&quot;\n\n | \n\n双引号\n\n |\n| \n\n'\n\n | \n\n&apos;\n\n | \n\n单引号\n\n |"]],[1545,1545],[1345,1345]]],[1564210807899,[null,[[-1,1149,">"],[1,1150,"!"],[1,1160,">"],[-1,1161," "],[-1,1198," "],[1,1199,"*"],[1,1203," "],[-1,1204,"s"]],[1149,1149],[1204,1204]]],[1564210807899,[null,[[1,1149,">"],[-1,1149,"!"],[-1,1160,">"],[1,1162," "],[1,1198," "],[-1,1198,"*"],[-1,1203," "],[1,1205,"s"]],[1204,1204],[1149,1149]]],[1564210751272,["GJX@GJXAIOU",[[1,1345,"|             字符             |             转义字符             |             描述                |\n|----------------------------|------------------------------|-------------------------------|\n|             &              | \n            &\n              |             和                 |\n|             <              | \n            <\n              | \n            小于号\n             |\n|             >              |             >                |             大于号               |\n|             \"              |             \"                |             双引号               |\n|             '              |             '                |             单引号               |\n"]],[1345,1345],[2003,2003]]],[1564210756241,["GJX@GJXAIOU",[[-1,1372,"  "]],[1373,1373],[1371,1371]]],[1564210756897,["GJX@GJXAIOU",[[-1,1385," "]],[1379,1379],[1378,1378]]],[1564210758016,["GJX@GJXAIOU",[[-1,1376,"         "]],[1374,1383],[1374,1374]]],[1564210759281,["GJX@GJXAIOU",[[-1,1371," "]],[1370,1370],[1369,1369]]],[1564210760289,["GJX@GJXAIOU",[[-1,1349,"          "]],[1348,1358],[1348,1348]]],[1564210763984,["GJX@GJXAIOU",[[-1,1389,"       "]],[1387,1394],[1387,1387]]],[1564210765107,["GJX@GJXAIOU",[[-1,1376,"      "]],[1372,1378],[1372,1372]]],[1564210766985,["GJX@GJXAIOU",[[-1,1412,"--------------------"]],[1410,1430],[1410,1410]]],[1564210769057,["GJX@GJXAIOU",[[-1,1420,"-----------------------"]],[1417,1440],[1417,1417]]],[1564210770672,["GJX@GJXAIOU",[[-1,1432,"--------------------"]],[1426,1446],[1426,1426]]],[1564210771994,["GJX@GJXAIOU",[[-1,1447," "]],[1446,1446],[1445,1445]]],[1564210773442,["GJX@GJXAIOU",[[-1,1450,"            "]],[1449,1461],[1449,1449]]],[1564210774747,["GJX@GJXAIOU",[[-1,1463,"  "]],[1462,1462],[1460,1460]]],[1564210776281,["GJX@GJXAIOU",[[-1,1453,"          "]],[1453,1463],[1453,1453]]],[1564210777081,["GJX@GJXAIOU",[[-1,1452,"\n"]],[1453,1453],[1452,1452]]],[1564210779737,["GJX@GJXAIOU",[[-1,1455,"             "]],[1454,1467],[1454,1454]]],[1564210780315,["GJX@GJXAIOU",[[-1,1453,"\n"]],[1454,1454],[1453,1453]]],[1564210784123,["GJX@GJXAIOU",[[-1,1506,"           "]],[1505,1516],[1505,1505]]],[1564210787041,["GJX@GJXAIOU",[[-1,1507," "]],[1508,1508],[1507,1507]]],[1564210790128,["GJX@GJXAIOU",[[-1,1509,"           "]],[1519,1519],[1508,1508]]],[1564210790538,["GJX@GJXAIOU",[[-1,1507,"\n"]],[1508,1508],[1507,1507]]],[1564210792953,["GJX@GJXAIOU",[[-1,1510,"              "]],[1510,1524],[1510,1510]]],[1564210793338,["GJX@GJXAIOU",[[-1,1509,"\n"]],[1510,1510],[1509,1509]]],[1564210794977,["GJX@GJXAIOU",[[-1,1512,"            "]],[1512,1524],[1512,1512]]],[1564210795329,["GJX@GJXAIOU",[[-1,1511,"\n"]],[1512,1512],[1511,1511]]],[1564210798865,["GJX@GJXAIOU",[[-1,1492,"          "]],[1491,1501],[1491,1491]]],[1564210800234,["GJX@GJXAIOU",[[-1,1437,"          "]],[1436,1446],[1436,1436]]],[1564210801266,["GJX@GJXAIOU",[[-1,1457," "]],[1455,1455],[1454,1454]]],[1564210802688,["GJX@GJXAIOU",[[-1,1447,"          "]],[1446,1456],[1446,1446]]],[1564210804985,["GJX@GJXAIOU",[[1,1440,"  "]],[1440,1440],[1442,1442]]],[1564210806307,["GJX@GJXAIOU",[[1,1480," "]],[1480,1480],[1481,1481]]],[1564210867902,[null,[[-1,1149,">"],[1,1150,"!"],[1,1160,">"],[-1,1161," "],[-1,1198," "],[1,1199,"*"],[1,1203," "],[-1,1204,"s"]],[1149,1149],[1204,1204]]],[1564210867902,[null,[[1,1149,">"],[-1,1149,"!"],[-1,1160,">"],[1,1162," "],[1,1198," "],[-1,1198,"*"],[-1,1203," "],[1,1205,"s"]],[1204,1204],[1149,1149]]],[1564210814833,["GJX@GJXAIOU",[[-1,1488,"            "]],[1499,1499],[1487,1487]]],[1564210816747,["GJX@GJXAIOU",[[-1,1494,"          "]],[1493,1503],[1493,1493]]],[1564210818834,["GJX@GJXAIOU",[[-1,1513,"          "]],[1512,1522],[1512,1512]]],[1564210820139,["GJX@GJXAIOU",[[-1,1487," "]],[1487,1488],[1487,1487]]],[1564210823641,["GJX@GJXAIOU",[[-1,1486,"\n"]],[1487,1487],[1486,1486]]],[1564210828571,["GJX@GJXAIOU",[[1,1486,"   "]],[1486,1486],[1489,1489]]],[1564210830171,["GJX@GJXAIOU",[[-1,1502,"        "]],[1501,1509],[1501,1501]]],[1564210831321,["GJX@GJXAIOU",[[-1,1554," "]],[1555,1555],[1554,1554]]],[1564210832985,["GJX@GJXAIOU",[[-1,1535,"  "]],[1536,1536],[1534,1534]]],[1564210834945,["GJX@GJXAIOU",[[-1,1517,"      "]],[1521,1521],[1515,1515]]],[1564210836313,["GJX@GJXAIOU",[[-1,1567,"          "]],[1567,1577],[1567,1567]]],[1564210840578,["GJX@GJXAIOU",[[-1,1585,"             "]],[1584,1597],[1584,1584]]],[1564210843089,["GJX@GJXAIOU",[[-1,1570,"           "]],[1568,1579],[1568,1568]]],[1564210844625,["GJX@GJXAIOU",[[-1,1561," "]],[1560,1560],[1559,1559]]],[1564210846268,["GJX@GJXAIOU",[[-1,1611,"          "]],[1610,1620],[1610,1610]]],[1564210847516,["GJX@GJXAIOU",[[-1,1616,"          "]],[1614,1624],[1614,1614]]],[1564210849227,["GJX@GJXAIOU",[[-1,1620,"          "]],[1618,1628],[1618,1618]]],[1564210850353,["GJX@GJXAIOU",[[-1,1628,"         "]],[1624,1633],[1624,1624]]],[1564210851865,["GJX@GJXAIOU",[[-1,1641," "]],[1641,1641],[1640,1640]]],[1564210857835,["GJX@GJXAIOU",[[1,1442,"  "]],[1442,1442],[1444,1444]]],[1564210859394,["GJX@GJXAIOU",[[1,1479,"   "]],[1479,1479],[1482,1482]]],[1564210860377,["GJX@GJXAIOU",[[1,1444," "]],[1444,1444],[1445,1445]]],[1564210861516,["GJX@GJXAIOU",[[1,1622,"  "]],[1622,1622],[1624,1624]]],[1564210863225,["GJX@GJXAIOU",[[-1,1558,"         "]],[1557,1566],[1557,1557]]],[1564210865338,["GJX@GJXAIOU",[[1,1558,"  "]],[1557,1557],[1559,1559]]],[1564210867339,["GJX@GJXAIOU",[[1,1487,"   "]],[1487,1487],[1490,1490]]],[1564210867866,["GJX@GJXAIOU",[[1,1449," "]],[1449,1449],[1450,1450]]],[1564210927903,[null,[[-1,1149,">"],[1,1150,"!"],[1,1160,">"],[-1,1161," "],[-1,1198," "],[1,1199,"*"],[1,1203," "],[-1,1204,"s"]],[1149,1149],[1204,1204]]],[1564210927903,[null,[[1,1149,">"],[-1,1149,"!"],[-1,1160,">"],[1,1162," "],[1,1198," "],[-1,1198,"*"],[-1,1203," "],[1,1205,"s"]],[1204,1204],[1149,1149]]],[1564210869205,["GJX@GJXAIOU",[[1,1450,"      "]],[1450,1450],[1456,1456]]],[1564210872546,["GJX@GJXAIOU",[[-1,1452,"    "]],[1456,1456],[1452,1452]]],[1564210874073,["GJX@GJXAIOU",[[-1,1520,"         "]],[1520,1529],[1520,1520]]],[1564210874657,["GJX@GJXAIOU",[[1,1520," "]],[1520,1520],[1521,1521]]],[1564210876337,["GJX@GJXAIOU",[[-1,1622,"     "]],[1621,1626],[1621,1621]]],[1564210880764,["GJX@GJXAIOU",[[-1,1357,"    "]],[1360,1360],[1356,1356]]],[1564210881985,["GJX@GJXAIOU",[[-1,1387,"          "]],[1383,1393],[1383,1383]]],[1564210883145,["GJX@GJXAIOU",[[-1,1451,"        "]],[1448,1456],[1448,1448]]],[1564210887688,["GJX@GJXAIOU",[[-1,1525,"   "]],[1525,1525],[1522,1522]]],[1564210888817,["GJX@GJXAIOU",[[-1,1502,"         "]],[1501,1510],[1501,1501]]],[1564210890329,["GJX@GJXAIOU",[[-1,1540,"          "]],[1538,1548],[1538,1538]]],[1564210892075,["GJX@GJXAIOU",[[-1,1580,"           "]],[1580,1591],[1580,1580]]],[1564210894081,["GJX@GJXAIOU",[[-1,1511,"     "]],[1513,1513],[1508,1508]]],[1564210895611,["GJX@GJXAIOU",[[1,1479,"   "]],[1479,1479],[1482,1482]]],[1564210897386,["GJX@GJXAIOU",[[-1,1547,"         "]],[1543,1552],[1543,1543]]],[1564210898537,["GJX@GJXAIOU",[[-1,1546," "]],[1546,1546],[1545,1545]]],[1564210899219,["GJX@GJXAIOU",[[-1,1513," "]],[1514,1514],[1513,1513]]],[1564210899977,["GJX@GJXAIOU",[[-1,1544," "]],[1544,1544],[1543,1543]]],[1564210901881,["GJX@GJXAIOU",[[-1,1573,"           "]],[1571,1582],[1571,1571]]],[1564210903026,["GJX@GJXAIOU",[[1,1573,"   "]],[1571,1571],[1574,1574]]],[1564210903827,["GJX@GJXAIOU",[[-1,1575," "]],[1574,1574],[1573,1573]]],[1564210905202,["GJX@GJXAIOU",[[-1,1450," "]],[1450,1450],[1449,1449]]],[1564210906027,["GJX@GJXAIOU",[[1,1450," "]],[1449,1449],[1450,1450]]],[1564210907609,["GJX@GJXAIOU",[[-1,1368,"    "]],[1367,1371],[1367,1367]]],[1564210910321,["GJX@GJXAIOU",[[-1,1351,"      "]],[1351,1357],[1351,1351]]],[1564210912241,["GJX@GJXAIOU",[[-1,1365,"    "]],[1364,1368],[1364,1364]]],[1564210913578,["GJX@GJXAIOU",[[-1,1369,"    "]],[1368,1372],[1368,1368]]],[1564210915083,["GJX@GJXAIOU",[[1,1400,"  "]],[1400,1400],[1402,1402]]],[1564210915867,["GJX@GJXAIOU",[[1,1369," "]],[1369,1369],[1370,1370]]],[1564210920353,["GJX@GJXAIOU",[[-1,1414,"  "]],[1415,1415],[1413,1413]]],[1564210921489,["GJX@GJXAIOU",[[-1,1445,"  "]],[1446,1446],[1444,1444]]],[1564210922258,["GJX@GJXAIOU",[[-1,1474,"  "]],[1475,1475],[1473,1473]]],[1564210923209,["GJX@GJXAIOU",[[-1,1503,"  "]],[1504,1504],[1502,1502]]],[1564210924385,["GJX@GJXAIOU",[[-1,1498,"  "]],[1499,1499],[1497,1497]]],[1564210925474,["GJX@GJXAIOU",[[1,1501,"  "]],[1500,1500],[1502,1502]]],[1564210926938,["GJX@GJXAIOU",[[-1,1532,"  "]],[1534,1534],[1532,1532]]],[1564210987904,[null,[[-1,1149,">"],[1,1150,"!"],[1,1160,">"],[-1,1161," "],[-1,1198," "],[1,1199,"*"],[1,1203," "],[-1,1204,"s"]],[1149,1149],[1204,1204]]],[1564210987904,[null,[[1,1149,">"],[-1,1149,"!"],[-1,1160,">"],[1,1162," "],[1,1198," "],[-1,1198,"*"],[-1,1203," "],[1,1205,"s"]],[1204,1204],[1149,1149]]],[1564210968163,["GJX@GJXAIOU",[[1,726,"？"]],[726,726],[727,727]]],[1564212490750,[null,[[-1,1150,">"],[1,1151,"!"],[1,1161,">"],[-1,1162," "],[-1,1199," "],[1,1200,"*"],[1,1204," "],[-1,1205,"s"]],[1150,1150],[1205,1205]]],[1564212490750,[null,[[1,1150,">"],[-1,1150,"!"],[-1,1161,">"],[1,1163," "],[1,1199," "],[-1,1199,"*"],[-1,1204," "],[1,1206,"s"]],[1205,1205],[1150,1150]]],[1564212487081,["GJX@GJXAIOU",[[1,1554,"\n"]],[1553,1553],[1554,1554]]],[1564212487202,["GJX@GJXAIOU",[[1,1555,"\n"]],[1554,1554],[1555,1555]]],[1564212487352,["GJX@GJXAIOU",[[1,1556,"\n"]],[1555,1555],[1556,1556]]],[1564212550753,[null,[[-1,1150,">"],[1,1151,"!"],[1,1161,">"],[-1,1162," "],[-1,1199," "],[1,1200,"*"],[1,1204," "],[-1,1205,"s"]],[1150,1150],[1205,1205]]],[1564212550753,[null,[[1,1150,">"],[-1,1150,"!"],[-1,1161,">"],[1,1163," "],[1,1199," "],[-1,1199,"*"],[-1,1204," "],[1,1206,"s"]],[1205,1205],[1150,1150]]],[1564212493486,["GJX@GJXAIOU",[[1,1556,"## XML解析"]],[1556,1556],[1564,1564]]],[1564212493513,["GJX@GJXAIOU",[[1,1562," "]],[1564,1564],[1565,1565]]],[1564212493906,["GJX@GJXAIOU",[[1,1566,"\n"]],[1565,1565],[1566,1566]]],[1564212496148,["GJX@GJXAIOU",[[-1,1566,"\n"],[1,1567,"些"]],[1566,1566],[1567,1567]]],[1564212496907,["GJX@GJXAIOU",[[-1,1566,"些"],[1,1567,"\n"]],[1567,1567],[1566,1566]]],[1564212497056,["GJX@GJXAIOU",[[-1,1566,"\n"]],[1566,1566],[1565,1565]]],[1564212498033,["GJX@GJXAIOU",[[1,1566,"\n"]],[1565,1565],[1566,1566]]],[1564212508524,["GJX@GJXAIOU",[[-1,1566,"\n"],[1,1567,"将"]],[1566,1566],[1567,1567]]],[1564212512986,["GJX@GJXAIOU",[[1,1567,"XML"]],[1567,1567],[1570,1570]]],[1564212513014,["GJX@GJXAIOU",[[1,1567," "]],[1570,1570],[1571,1571]]],[1564212521437,["GJX@GJXAIOU",[[1,1571,"文件"]],[1571,1571],[1573,1573]]],[1564212521466,["GJX@GJXAIOU",[[1,1571," "]],[1573,1573],[1574,1574]]],[1564212524834,["GJX@GJXAIOU",[[1,1574,"解析到Java"]],[1574,1574],[1581,1581]]],[1564212524862,["GJX@GJXAIOU",[[1,1577," "]],[1581,1581],[1582,1582]]],[1564212525436,["GJX@GJXAIOU",[[1,1582,"中"]],[1582,1582],[1583,1583]]],[1564212525464,["GJX@GJXAIOU",[[1,1582," "]],[1583,1583],[1584,1584]]],[1564212526191,["GJX@GJXAIOU",[[1,1584,"\n\n"]],[1584,1584],[1585,1585]]],[1564212530816,["GJX@GJXAIOU",[[-1,1585,"\n"],[1,1586,"-"]],[1585,1585],[1586,1586]]],[1564212536097,["GJX@GJXAIOU",[[1,1586," XML"]],[1586,1586],[1590,1590]]],[1564212538369,["GJX@GJXAIOU",[[1,1585,"\n"]],[1585,1585],[1586,1586]]],[1564212545988,["GJX@GJXAIOU",[[1,1591,"文件"]],[1591,1591],[1593,1593]]],[1564212546016,["GJX@GJXAIOU",[[1,1591," "]],[1593,1593],[1594,1594]]],[1564212548696,["GJX@GJXAIOU",[[1,1594,"解析方式：\n- "]],[1594,1594],[1602,1602]]],[1564212549611,["GJX@GJXAIOU",[[1,1600,"  "]],[1602,1602],[1604,1604]]],[1564212610754,[null,[[-1,1150,">"],[1,1151,"!"],[1,1161,">"],[-1,1162," "],[-1,1199," "],[1,1200,"*"],[1,1204," "],[-1,1205,"s"]],[1150,1150],[1205,1205]]],[1564212610754,[null,[[1,1150,">"],[-1,1150,"!"],[-1,1161,">"],[1,1163," "],[1,1199," "],[-1,1199,"*"],[-1,1204," "],[1,1206,"s"]],[1205,1205],[1150,1150]]],[1564212555458,["GJX@GJXAIOU",[[1,1604,"DOM解析"]],[1604,1604],[1609,1609]]],[1564212555487,["GJX@GJXAIOU",[[1,1607," "]],[1609,1609],[1610,1610]]],[1564212560441,["GJX@GJXAIOU",[[1,1610,"；\n  - SAX解析"]],[1610,1610],[1621,1621]]],[1564212560470,["GJX@GJXAIOU",[[1,1619," "]],[1621,1621],[1622,1622]]],[1564212560976,["GJX@GJXAIOU",[[1,1622,"；\n  - "]],[1622,1622],[1628,1628]]],[1564212563680,["GJX@GJXAIOU",[[-1,1625," - "]],[1628,1628],[1625,1625]]],[1564212565401,["GJX@GJXAIOU",[[1,1625,"- "]],[1625,1625],[1627,1627]]],[1564212567658,["GJX@GJXAIOU",[[-1,1624," "]],[1625,1625],[1624,1624]]],[1564212572505,["GJX@GJXAIOU",[[1,1626,"XML解析"]],[1626,1626],[1631,1631]]],[1564212572533,["GJX@GJXAIOU",[[1,1629," "]],[1631,1631],[1632,1632]]],[1564212576737,["GJX@GJXAIOU",[[1,1632,"常用的工具："]],[1632,1632],[1638,1638]]],[1564212576890,["GJX@GJXAIOU",[[1,1638,"\n\n"]],[1638,1638],[1639,1639]]],[1564212582506,["GJX@GJXAIOU",[[1,1639,"  DOM解析"]],[1639,1639],[1646,1646]]],[1564212582533,["GJX@GJXAIOU",[[1,1644," "]],[1646,1646],[1647,1647]]],[1564212582865,["GJX@GJXAIOU",[[1,1647,"："]],[1647,1647],[1648,1648]]],[1564212584937,["GJX@GJXAIOU",[[1,1649,"  \n"]],[1648,1648],[1651,1651]]],[1564212586569,["GJX@GJXAIOU",[[1,1651,"  - "]],[1651,1651],[1655,1655]]],[1564212589729,["GJX@GJXAIOU",[[1,1641,"- "]],[1641,1641],[1643,1643]]],[1564212592721,["GJX@GJXAIOU",[[1,1657," "]],[1656,1656],[1657,1657]]],[1564212602045,["GJX@GJXAIOU",[[1,1657,"JAXP（）"]],[1657,1657],[1663,1663]]],[1564212606507,["GJX@GJXAIOU",[[1,1662,"sun公司"]],[1662,1662],[1667,1667]]],[1564212606546,["GJX@GJXAIOU",[[1,1665," "]],[1667,1667],[1668,1668]]],[1564212610118,["GJX@GJXAIOU",[[1,1668,"官方，不好用"]],[1668,1668],[1674,1674]]],[1564212670754,[null,[[-1,1150,">"],[1,1151,"!"],[1,1161,">"],[-1,1162," "],[-1,1199," "],[1,1200,"*"],[1,1204," "],[-1,1205,"s"]],[1150,1150],[1205,1205]]],[1564212670754,[null,[[1,1150,">"],[-1,1150,"!"],[-1,1161,">"],[1,1163," "],[1,1199," "],[-1,1199,"*"],[-1,1204," "],[1,1206,"s"]],[1205,1205],[1150,1150]]],[1564212612908,["GJX@GJXAIOU",[[1,1675,"\n    -"]],[1675,1675],[1681,1681]]],[1564212613089,["GJX@GJXAIOU",[[1,1682," "]],[1681,1681],[1682,1682]]],[1564212617556,["GJX@GJXAIOU",[[1,1682,"JDOM（）"]],[1682,1682],[1688,1688]]],[1564212620516,["GJX@GJXAIOU",[[1,1687,"非光"]],[1687,1687],[1689,1689]]],[1564212621007,["GJX@GJXAIOU",[[-1,1688,"光"]],[1689,1689],[1688,1688]]],[1564212626209,["GJX@GJXAIOU",[[1,1688,"官方，还行"]],[1688,1688],[1693,1693]]],[1564212630049,["GJX@GJXAIOU",[[1,1694,"\n    -"]],[1694,1694],[1700,1700]]],[1564212630236,["GJX@GJXAIOU",[[1,1701," "]],[1700,1700],[1701,1701]]],[1564212641778,["GJX@GJXAIOU",[[1,1701,"Dom4j()"]],[1701,1701],[1708,1708]]],[1564212649317,["GJX@GJXAIOU",[[1,1707,"非官方，好用"]],[1707,1707],[1713,1713]]],[1564212650553,["GJX@GJXAIOU",[[1,1715," "]],[1714,1714],[1715,1715]]],[1564212668387,["GJX@GJXAIOU",[[1,1715,"☆☆是三大框架某人"]],[1715,1715],[1724,1724]]],[1564212668858,["GJX@GJXAIOU",[[-1,1722,"某人"]],[1724,1724],[1722,1722]]],[1564212730759,[null,[[-1,1150,">"],[1,1151,"!"],[1,1161,">"],[-1,1162," "],[-1,1199," "],[1,1200,"*"],[1,1204," "],[-1,1205,"s"]],[1150,1150],[1205,1205]]],[1564212730759,[null,[[1,1150,">"],[-1,1150,"!"],[-1,1161,">"],[1,1163," "],[1,1199," "],[-1,1199,"*"],[-1,1204," "],[1,1206,"s"]],[1205,1205],[1150,1150]]],[1564212676490,["GJX@GJXAIOU",[[1,1722,"默认使用功能XML"]],[1722,1722],[1731,1731]]],[1564212676520,["GJX@GJXAIOU",[[1,1728," "]],[1731,1731],[1732,1732]]],[1564212677715,["GJX@GJXAIOU",[[1,1732,"解析"]],[1732,1732],[1734,1734]]],[1564212677745,["GJX@GJXAIOU",[[1,1732," "]],[1734,1734],[1735,1735]]],[1564212682930,["GJX@GJXAIOU",[[1,1735,"方式；\n    -"]],[1735,1735],[1744,1744]]],[1564212683107,["GJX@GJXAIOU",[[1,1745," "]],[1744,1744],[1745,1745]]],[1564212686629,["GJX@GJXAIOU",[[1,1745,"SAX解析"]],[1745,1745],[1750,1750]]],[1564212686657,["GJX@GJXAIOU",[[1,1748," "]],[1750,1750],[1751,1751]]],[1564212686923,["GJX@GJXAIOU",[[1,1751,"："]],[1751,1751],[1752,1752]]],[1564212688186,["GJX@GJXAIOU",[[-1,1741,"  "]],[1752,1752],[1750,1750]]],[1564212694683,["GJX@GJXAIOU",[[1,1750,"\n  -"]],[1750,1750],[1754,1754]]],[1564212694891,["GJX@GJXAIOU",[[1,1755," "]],[1754,1754],[1755,1755]]],[1564212695847,["GJX@GJXAIOU",[[1,1753,"  "]],[1755,1755],[1757,1757]]],[1564212698441,["GJX@GJXAIOU",[[1,1757,"、"]],[1757,1757],[1758,1758]]],[1564212699567,["GJX@GJXAIOU",[[-1,1757,"、"]],[1758,1758],[1757,1757]]],[1564212703659,["GJX@GJXAIOU",[[1,1757,"SAX解析"]],[1757,1757],[1762,1762]]],[1564212703687,["GJX@GJXAIOU",[[1,1760," "]],[1762,1762],[1763,1763]]],[1564212709704,["GJX@GJXAIOU",[[1,1763,"工具（）"]],[1763,1763],[1767,1767]]],[1564212724627,["GJX@GJXAIOU",[[1,1766,"官方，常用于Android"]],[1766,1766],[1779,1779]]],[1564212724656,["GJX@GJXAIOU",[[1,1772," "]],[1779,1779],[1780,1780]]],[1564212727845,["GJX@GJXAIOU",[[1,1780,"开发"]],[1780,1780],[1782,1782]]],[1564212727875,["GJX@GJXAIOU",[[1,1780," "]],[1782,1782],[1783,1783]]],[1564212729739,["GJX@GJXAIOU",[[1,1784,"，"]],[1784,1784],[1785,1785]]],[1564212790758,[null,[[-1,1150,">"],[1,1151,"!"],[1,1161,">"],[-1,1162," "],[-1,1199," "],[1,1200,"*"],[1,1204," "],[-1,1205,"s"]],[1150,1150],[1205,1205]]],[1564212790758,[null,[[1,1150,">"],[-1,1150,"!"],[-1,1161,">"],[1,1163," "],[1,1199," "],[-1,1199,"*"],[-1,1204," "],[1,1206,"s"]],[1205,1205],[1150,1150]]],[1564212735331,["GJX@GJXAIOU",[[1,1785,"了解即可；"]],[1785,1785],[1790,1790]]],[1564212745827,["GJX@GJXAIOU",[[1,1750,"（）"]],[1750,1750],[1752,1752]]],[1564212759571,["GJX@GJXAIOU",[[1,1750,"针对XML"]],[1750,1750],[1755,1755]]],[1564212759602,["GJX@GJXAIOU",[[1,1752," "]],[1755,1755],[1756,1756]]],[1564212760749,["GJX@GJXAIOU",[[1,1756,"文件"]],[1756,1756],[1758,1758]]],[1564212760779,["GJX@GJXAIOU",[[1,1756," "]],[1758,1758],[1759,1759]]],[1564212767485,["GJX@GJXAIOU",[[1,1759,"，只可读"]],[1759,1759],[1763,1763]]],[1564212772291,["GJX@GJXAIOU",[[1,1650,"针对XML"]],[1650,1650],[1655,1655]]],[1564212772320,["GJX@GJXAIOU",[[1,1652," "]],[1655,1655],[1656,1656]]],[1564212773338,["GJX@GJXAIOU",[[1,1656,"文件"]],[1656,1656],[1658,1658]]],[1564212773368,["GJX@GJXAIOU",[[1,1656," "]],[1658,1658],[1659,1659]]],[1564212781362,["GJX@GJXAIOU",[[1,1659,"，可读可写可修改"]],[1659,1659],[1667,1667]]],[1564212785297,["GJX@GJXAIOU",[[-1,1780,"（）"]],[1782,1782],[1780,1780]]],[1564213460749,[null,[[-1,1150,">"],[1,1151,"!"],[1,1161,">"],[-1,1162," "],[-1,1199," "],[1,1200,"*"],[1,1204," "],[-1,1205,"s"]],[1150,1150],[1205,1205]]],[1564213460749,[null,[[1,1150,">"],[-1,1150,"!"],[-1,1161,">"],[1,1163," "],[1,1199," "],[-1,1199,"*"],[-1,1204," "],[1,1206,"s"]],[1205,1205],[1150,1150]]],[1564213419092,["GJX@GJXAIOU",[[1,1585,"![DOM]($resource/DOM.jpg)"]],[1585,1585],[1611,1611]]],[1564213427775,["GJX@GJXAIOU",[[1,1847,"    - \n"]],[1846,1846],[1853,1853]]],[1564213427906,["GJX@GJXAIOU",[[-1,1847,"    - "]],[1853,1853],[1848,1848]]],[1564213429865,["GJX@GJXAIOU",[[-1,1847,"\n"],[1,1848,"-"]],[1848,1848],[1848,1848]]],[1564213452033,["GJX@GJXAIOU",[[1,1848," Dom4j工具"]],[1848,1848],[1856,1856]]],[1564213452064,["GJX@GJXAIOU",[[1,1854," "]],[1856,1856],[1857,1857]]],[1564213453911,["GJX@GJXAIOU",[[1,1857,"使用：\n- "]],[1857,1857],[1863,1863]]],[1564213580754,[null,[[-1,1150,">"],[1,1151,"!"],[1,1161,">"],[-1,1162," "],[-1,1199," "],[1,1200,"*"],[1,1204," "],[-1,1205,"s"]],[1150,1150],[1205,1205]]],[1564213580754,[null,[[1,1150,">"],[-1,1150,"!"],[-1,1161,">"],[1,1163," "],[1,1199," "],[-1,1199,"*"],[-1,1204," "],[1,1206,"s"]],[1205,1205],[1150,1150]]],[1564213548936,["GJX@GJXAIOU",[[1,1861,"  "]],[1863,1863],[1865,1865]]],[1564213565401,["GJX@GJXAIOU",[[1,1865,"官网下载，解压找到d"]],[1865,1865],[1875,1875]]],[1564213565431,["GJX@GJXAIOU",[[1,1874," "]],[1875,1875],[1876,1876]]],[1564213565712,["GJX@GJXAIOU",[[1,1876,"omn"]],[1876,1876],[1879,1879]]],[1564213566926,["GJX@GJXAIOU",[[-1,1878,"n"]],[1879,1879],[1878,1878]]],[1564213576696,["GJX@GJXAIOU",[[1,1878,"4j-XXX.jar \n  - zai "]],[1878,1878],[1898,1898]]],[1564213577550,["GJX@GJXAIOU",[[-1,1894,"zai "]],[1898,1898],[1894,1894]]],[1564213579473,["GJX@GJXAIOU",[[1,1894,"在"]],[1894,1894],[1895,1895]]],[1564213640754,[null,[[-1,1150,">"],[1,1151,"!"],[1,1161,">"],[-1,1162," "],[-1,1199," "],[1,1200,"*"],[1,1204," "],[-1,1205,"s"]],[1150,1150],[1205,1205]]],[1564213640754,[null,[[1,1150,">"],[-1,1150,"!"],[-1,1161,">"],[1,1163," "],[1,1199," "],[-1,1199,"*"],[-1,1204," "],[1,1206,"s"]],[1205,1205],[1150,1150]]],[1564213580899,["GJX@GJXAIOU",[[1,1895,"Java"]],[1895,1895],[1899,1899]]],[1564213580939,["GJX@GJXAIOU",[[1,1895," "]],[1899,1899],[1900,1900]]],[1564213583209,["GJX@GJXAIOU",[[1,1900,"的"]],[1900,1900],[1901,1901]]],[1564213583240,["GJX@GJXAIOU",[[1,1900," "]],[1901,1901],[1902,1902]]],[1564213585955,["GJX@GJXAIOU",[[1,1902,"Proj"]],[1902,1902],[1906,1906]]],[1564213585984,["GJX@GJXAIOU",[[1,1902," "]],[1906,1906],[1907,1907]]],[1564213591618,["GJX@GJXAIOU",[[1,1907,"ect中"]],[1907,1907],[1911,1911]]],[1564213591648,["GJX@GJXAIOU",[[1,1910," "]],[1911,1911],[1912,1912]]],[1564213601096,["GJX@GJXAIOU",[[1,1912,"新建文件夹，一般命名为l"]],[1912,1912],[1924,1924]]],[1564213601127,["GJX@GJXAIOU",[[1,1923," "]],[1924,1924],[1925,1925]]],[1564213604844,["GJX@GJXAIOU",[[1,1925,"ibs或者"]],[1925,1925],[1930,1930]]],[1564213604873,["GJX@GJXAIOU",[[1,1928," "]],[1930,1930],[1931,1931]]],[1564213606506,["GJX@GJXAIOU",[[1,1931,"Lib"]],[1931,1931],[1934,1934]]],[1564213606535,["GJX@GJXAIOU",[[1,1931," "]],[1934,1934],[1935,1935]]],[1564213609465,["GJX@GJXAIOU",[[1,1935,",ranhou"]],[1935,1935],[1942,1942]]],[1564213610367,["GJX@GJXAIOU",[[-1,1936,"ranhou"]],[1942,1942],[1936,1936]]],[1564213616812,["GJX@GJXAIOU",[[1,1936,"然后复制dom"]],[1936,1936],[1943,1943]]],[1564213616841,["GJX@GJXAIOU",[[1,1940," "]],[1943,1943],[1944,1944]]],[1564213617938,["GJX@GJXAIOU",[[1,1944,"4j。"]],[1944,1944],[1947,1947]]],[1564213618985,["GJX@GJXAIOU",[[-1,1946,"。"]],[1947,1947],[1946,1946]]],[1564213625095,["GJX@GJXAIOU",[[1,1946,"-XXX.jarwenj"]],[1946,1946],[1958,1958]]],[1564213625889,["GJX@GJXAIOU",[[-1,1954,"wenj"]],[1958,1958],[1954,1954]]],[1564213638876,["GJX@GJXAIOU",[[1,1954,"，文件，到该文件夹黏贴；"]],[1954,1954],[1966,1966]]],[1564213700757,[null,[[-1,1150,">"],[1,1151,"!"],[1,1161,">"],[-1,1162," "],[-1,1199," "],[1,1200,"*"],[1,1204," "],[-1,1205,"s"]],[1150,1150],[1205,1205]]],[1564213700757,[null,[[1,1150,">"],[-1,1150,"!"],[-1,1161,">"],[1,1163," "],[1,1199," "],[-1,1199,"*"],[-1,1204," "],[1,1206,"s"]],[1205,1205],[1150,1150]]],[1564213655706,["GJX@GJXAIOU",[[1,1966,"\n  - 右击该包，找到Build"]],[1966,1966],[1983,1983]]],[1564213655735,["GJX@GJXAIOU",[[1,1978," "]],[1983,1983],[1984,1984]]],[1564213663123,["GJX@GJXAIOU",[[1,1984," Path - 》 ass"]],[1984,1984],[1997,1997]]],[1564213663687,["GJX@GJXAIOU",[[-1,1996,"s"]],[1997,1997],[1996,1996]]],[1564213664136,["GJX@GJXAIOU",[[1,1996,"dd"]],[1996,1996],[1998,1998]]],[1564213664974,["GJX@GJXAIOU",[[-1,1995,"sdd"]],[1998,1998],[1995,1995]]],[1564213667271,["GJX@GJXAIOU",[[1,1995,"dd to bul"]],[1995,1995],[2004,2004]]],[1564213667766,["GJX@GJXAIOU",[[-1,2003,"l"]],[2004,2004],[2003,2003]]],[1564213671050,["GJX@GJXAIOU",[[1,2003,"ild path "]],[2003,2003],[2012,2012]]],[1564224103778,[null,[[-1,1150,">"],[1,1151,"!"],[1,1161,">"],[-1,1162," "],[-1,1199," "],[1,1200,"*"],[1,1204," "],[-1,1205,"s"]],[1150,1150],[1205,1205]]],[1564224103778,[null,[[1,1150,">"],[-1,1150,"!"],[-1,1161,">"],[1,1163," "],[1,1199," "],[-1,1199,"*"],[-1,1204," "],[1,1206,"s"]],[1205,1205],[1150,1150]]],[1564224103256,["GJX@GJXAIOU",[[1,2012,"\n  - "]],[2012,2012],[2017,2017]]],[1564224103391,["GJX@GJXAIOU",[[-1,2013,"  - "],[1,2017,"\n\n"]],[2017,2017],[2014,2014]]],[1564225306760,[null,[[-1,1150,">"],[1,1151,"!"],[1,1161,">"],[-1,1162," "],[-1,1199," "],[1,1200,"*"],[1,1204," "],[-1,1205,"s"]],[1150,1150],[1205,1205]]],[1564225306760,[null,[[1,1150,">"],[-1,1150,"!"],[-1,1161,">"],[1,1163," "],[1,1199," "],[-1,1199,"*"],[-1,1204," "],[1,1206,"s"]],[1205,1205],[1150,1150]]],[1564225268287,["GJX@GJXAIOU",[[1,2014,"### XML解析"]],[2014,2014],[2023,2023]]],[1564225268316,["GJX@GJXAIOU",[[1,2021," "]],[2023,2023],[2024,2024]]],[1564225269222,["GJX@GJXAIOU",[[1,2024,"示例"]],[2024,2024],[2026,2026]]],[1564225269572,["GJX@GJXAIOU",[[1,2027,"\n"]],[2026,2026],[2027,2027]]],[1564225275161,["GJX@GJXAIOU",[[-1,2027,"\n"],[1,2028,"下面"]],[2027,2027],[2029,2029]]],[1564225280335,["GJX@GJXAIOU",[[1,2029,"代码分为三个文件"]],[2029,2029],[2037,2037]]],[1564225280659,["GJX@GJXAIOU",[[1,2037,"\n\n"]],[2037,2037],[2038,2038]]],[1564225281542,["GJX@GJXAIOU",[[-1,2038,"\n"],[1,2039,"-"]],[2038,2038],[2039,2039]]],[1564225294252,["GJX@GJXAIOU",[[1,2039," contact.xml  :需要解析的x"]],[2039,2039],[2060,2060]]],[1564225294282,["GJX@GJXAIOU",[[1,2059," "]],[2060,2060],[2061,2061]]],[1564225296399,["GJX@GJXAIOU",[[1,2061,"ml文件"]],[2061,2061],[2065,2065]]],[1564225296430,["GJX@GJXAIOU",[[1,2063," "]],[2065,2065],[2066,2066]]],[1564225296750,["GJX@GJXAIOU",[[1,2066,"\n- "]],[2066,2066],[2069,2069]]],[1564225606764,[null,[[-1,1150,">"],[1,1151,"!"],[1,1161,">"],[-1,1162," "],[-1,1199," "],[1,1200,"*"],[1,1204," "],[-1,1205,"s"]],[1150,1150],[1205,1205]]],[1564225606764,[null,[[1,1150,">"],[-1,1150,"!"],[-1,1161,">"],[1,1163," "],[1,1199," "],[-1,1199,"*"],[-1,1204," "],[1,1206,"s"]],[1205,1205],[1150,1150]]],[1564225585382,["GJX@GJXAIOU",[[1,2069,"ParsingElementNode。"]],[2069,2069],[2088,2088]]],[1564225586019,["GJX@GJXAIOU",[[-1,2087,"。"]],[2088,2088],[2087,2087]]],[1564225601830,["GJX@GJXAIOU",[[1,2087,".java :DOm"]],[2087,2087],[2097,2097]]],[1564225603283,["GJX@GJXAIOU",[[-1,2095,"Om"]],[2097,2097],[2095,2095]]],[1564225606525,["GJX@GJXAIOU",[[1,2095,"om4"]],[2095,2095],[2098,2098]]],[1564225666764,[null,[[-1,1150,">"],[1,1151,"!"],[1,1161,">"],[-1,1162," "],[-1,1199," "],[1,1200,"*"],[1,1204," "],[-1,1205,"s"]],[1150,1150],[1205,1205]]],[1564225666764,[null,[[1,1150,">"],[-1,1150,"!"],[-1,1161,">"],[1,1163," "],[1,1199," "],[-1,1199,"*"],[-1,1204," "],[1,1206,"s"]],[1205,1205],[1150,1150]]],[1564225608789,["GJX@GJXAIOU",[[1,2098,"j zho"]],[2098,2098],[2103,2103]]],[1564225609428,["GJX@GJXAIOU",[[-1,2100,"zho"]],[2103,2103],[2100,2100]]],[1564225620455,["GJX@GJXAIOU",[[1,2100,"中常见方法是的使用功能"]],[2100,2100],[2111,2111]]],[1564225621508,["GJX@GJXAIOU",[[-1,2109,"功能"]],[2111,2111],[2109,2109]]],[1564225623017,["GJX@GJXAIOU",[[1,2109,"Demo"]],[2109,2109],[2113,2113]]],[1564225623046,["GJX@GJXAIOU",[[1,2109," "]],[2113,2113],[2114,2114]]],[1564225639735,["GJX@GJXAIOU",[[1,2114,"\n- TrueUse.java :真正的用于解析xc"]],[2114,2114],[2140,2140]]],[1564225639758,["GJX@GJXAIOU",[[1,2138," "],[-1,2139,"c"]],[2140,2140],[2140,2140]]],[1564225639934,["GJX@GJXAIOU",[[1,2140,"on"]],[2140,2140],[2142,2142]]],[1564225640987,["GJX@GJXAIOU",[[-1,2139,"xon"]],[2142,2142],[2139,2139]]],[1564225647262,["GJX@GJXAIOU",[[1,2139,"contact.xml文件"]],[2139,2139],[2152,2152]]],[1564225647293,["GJX@GJXAIOU",[[1,2150," "]],[2152,2152],[2153,2153]]],[1564225664048,["GJX@GJXAIOU",[[1,2153,"的代码，即实现XML"]],[2153,2153],[2163,2163]]],[1564225664080,["GJX@GJXAIOU",[[1,2160," "]],[2163,2163],[2164,2164]]],[1564225665238,["GJX@GJXAIOU",[[1,2164,"文件"]],[2164,2164],[2166,2166]]],[1564225665269,["GJX@GJXAIOU",[[1,2164," "]],[2166,2166],[2167,2167]]],[1564225726770,[null,[[-1,1150,">"],[1,1151,"!"],[1,1161,">"],[-1,1162," "],[-1,1199," "],[1,1200,"*"],[1,1204," "],[-1,1205,"s"]],[1150,1150],[1205,1205]]],[1564225726770,[null,[[1,1150,">"],[-1,1150,"!"],[-1,1161,">"],[1,1163," "],[1,1199," "],[-1,1199,"*"],[-1,1204," "],[1,1206,"s"]],[1205,1205],[1150,1150]]],[1564225671367,["GJX@GJXAIOU",[[1,2167,"解析到Java"]],[2167,2167],[2174,2174]]],[1564225671397,["GJX@GJXAIOU",[[1,2170," "]],[2174,2174],[2175,2175]]],[1564225672120,["GJX@GJXAIOU",[[1,2175,"中"]],[2175,2175],[2176,2176]]],[1564225672150,["GJX@GJXAIOU",[[1,2175," "]],[2176,2176],[2177,2177]]],[1564225674131,["GJX@GJXAIOU",[[1,2177,"；\n- "]],[2177,2177],[2181,2181]]],[1564225674243,["GJX@GJXAIOU",[[-1,2179,"- "],[1,2181,"\n\n"]],[2181,2181],[2180,2180]]],[1564225675532,["GJX@GJXAIOU",[[-1,2180,"\n"],[1,2181,"`"]],[2180,2180],[2181,2181]]],[1564225675949,["GJX@GJXAIOU",[[1,2181,"``"]],[2181,2181],[2183,2183]]],[1564225675981,["GJX@GJXAIOU",[[1,2183,"language\n```\n"]],[2183,2183],[2183,2191]]],[1564225677878,["GJX@GJXAIOU",[[-1,2183,"language"],[1,2191,"x"]],[2183,2191],[2184,2184]]],[1564225678236,["GJX@GJXAIOU",[[1,2184,"ml"]],[2184,2184],[2186,2186]]],[1564225684589,["GJX@GJXAIOU",[[1,2179,"contact.xml"]],[2179,2179],[2190,2190]]],[1564225688803,["GJX@GJXAIOU",[[1,2179,"\n"]],[2179,2179],[2180,2180]]],[1564226333811,[null,[[-1,1150,">"],[1,1151,"!"],[1,1161,">"],[-1,1162," "],[-1,1199," "],[1,1200,"*"],[1,1204," "],[-1,1205,"s"]],[1150,1150],[1205,1205]]],[1564226333811,[null,[[1,1150,">"],[-1,1150,"!"],[-1,1161,">"],[1,1163," "],[1,1199," "],[-1,1199,"*"],[-1,1204," "],[1,1206,"s"]],[1205,1205],[1150,1150]]],[1564226306524,["GJX@GJXAIOU",[[1,2199,"\n"]],[2198,2198],[2199,2199]]],[1564226332308,["GJX@GJXAIOU",[[1,2199,"<?xml version = \"1.0\" encoding = \"utf-8\" ?>\n\n\t\n<ContactList>\n\t\t<contact id = \"1\" test = \"1\" tag = \"2\">\n\t\t\t<name>张三</name>\n\t\t\t<gender>男</gender>\n\t\t\t<tel>666666</tel>\n\t\t\t<age>18</age>\n\t\t\t<qq>1111111</qq>\n\t\t\t<email>1111111@qq.com</email>\n\t\t</contact>\n\t\t<contact id = \"2\">\n\t\t\t<name>李四</name>\n\t\t\t<gender>女</gender>\n\t\t\t<tel>8888888</tel>\n\t\t\t<age>17</age>\n\t\t\t<qq>2222222</qq>\n\t\t\t<email>2222222@qq.com</email>\n\t    </contact>\n\t<haha></haha>\n\t\n</ContactList>"]],[2199,2199],[2648,2648]]],[1564226355195,[null,[[-1,1150,">"],[1,1151,"!"],[1,1161,">"],[-1,1162," "],[-1,1199," "],[1,1200,"*"],[1,1204," "],[-1,1205,"s"]],[1150,1150],[1205,1205]]],[1564226355195,[null,[[1,1150,">"],[-1,1150,"!"],[-1,1161,">"],[1,1163," "],[1,1199," "],[-1,1199,"*"],[-1,1204," "],[1,1206,"s"]],[1205,1205],[1150,1150]]],[1564226337098,["GJX@GJXAIOU",[[1,2653,"\n"]],[2652,2652],[2653,2653]]],[1564226337307,["GJX@GJXAIOU",[[1,2654,"\n"]],[2653,2653],[2654,2654]]],[1564226415204,[null,[[-1,1150,">"],[1,1151,"!"],[1,1161,">"],[-1,1162," "],[-1,1199," "],[1,1200,"*"],[1,1204," "],[-1,1205,"s"]],[1150,1150],[1205,1205]]],[1564226415204,[null,[[1,1150,">"],[-1,1150,"!"],[-1,1161,">"],[1,1163," "],[1,1199," "],[-1,1199,"*"],[-1,1204," "],[1,1206,"s"]],[1205,1205],[1150,1150]]],[1564226378963,["GJX@GJXAIOU",[[1,2655,"\n"]],[2653,2653],[2654,2654]]],[1564226379452,["GJX@GJXAIOU",[[1,2654,"ParsingElementNode.java"]],[2654,2654],[2677,2677]]],[1564226380635,["GJX@GJXAIOU",[[1,2679,"\n"]],[2677,2677],[2678,2678]]],[1564226381678,["GJX@GJXAIOU",[[1,2678,"···"]],[2678,2678],[2681,2681]]],[1564226383780,["GJX@GJXAIOU",[[-1,2678,"···"]],[2681,2681],[2678,2678]]],[1564226385476,["GJX@GJXAIOU",[[1,2678,"```"]],[2678,2678],[2681,2681]]],[1564226385506,["GJX@GJXAIOU",[[1,2681,"language\n```\n"]],[2681,2681],[2681,2689]]],[1564226387381,["GJX@GJXAIOU",[[-1,2681,"language"],[1,2689,"j"]],[2681,2689],[2682,2682]]],[1564226388460,["GJX@GJXAIOU",[[1,2682,"ava"]],[2682,2682],[2685,2685]]],[1564226388803,["GJX@GJXAIOU",[[1,2686,"\n"]],[2685,2685],[2686,2686]]],[1564226397777,["GJX@GJXAIOU",[[1,2686,"import org.dom4j.*; import org.dom4j.io.SAXReader; import org.junit.jupiter.api.Test;   import java.io.File; import java.util.Iterator; import java.util.List;   /**获取XML文件的结点信息，包括：\n  * Node结点；\n  * Element结点\n  * Attribute结点\n  * text文本结点\n  *\n * @author GJXAIOU\n * @create 2019-07-27-16:19\n */ public class ParsingElementNode {\n    //获取节点信息，最原始的方式\n  @Test\n  public void XMLNode() throws DocumentException {\n\n        /*\n //1.创建一个XML文件的解析器  SAXReader saxReader = new SAXReader();   //2.读取XML文件，得到XML文件的Document对象  Document read = saxReader.read(new File(\"E:\\\\Program\\\\Java\\\\study\\\\code\\\\Day30\\\\Day30\\\\contact.xml\")); */   //1.创建XML文档的解析器，返回Document对象(将上面代码写成一行如下)\n  Document document = new SAXReader().read(new File(\"E:\\\\Program\\\\Java\\\\study\\\\code\\\\Day30\\\\Day30\\\\contact.xml\"));    //示例：nodeIterator // 得到当前结点下的所有子节点，不能跨界（不能往里读）\n  Iterator<Node> nodeIterator = document.nodeIterator();    //之前使用的Iterator迭代器中方法都可以使用，因为它是一个接口： hasNext()   next() remove()  while (nodeIterator.hasNext()){\n            Node node = nodeIterator.next(); //得到一个Node类型的结点，所有的XML文件结点中都是Node结点\n  String nodeName = node.getName(); //获取节点的名字\n  System.out.println(nodeName); //得到的是根节点名称      /*\n  以上的输出显示：在XML文件中，有一些标签是没有子节点的，这些标签也不是Element标签\n 这里需要进行过滤，如果是Element标签就继续解析\n 使用：Instanceof 作用是判断当前对象是不是指定类的对象；    */   //如果是一个标签结点，我们就继续解析；\n  if (node instanceof Element){\n                Element ele = (Element) node;    Iterator<Node> it2 = ele.nodeIterator();   while (it2.hasNext()){\n                    Node node2 = it2.next();\n  System.out.println(node2.getName());\n  }\n            }\n\n        }\n    }\n\n    //方法二：使用递归，遍历所有的XML文件的结点    public void XMLNode2() throws DocumentException {\n        //1.创建XML文档的解析器，返回Document对象\n  Document document = new SAXReader().read(new File(\"E:\\\\Program\\\\Java\\\\study\\\\code\\\\Day30\\\\Day30\\\\contact.xml\"));    //2.获取根节点\n  Element rootElement = document.getRootElement();\n  System.out.println(rootElement.getName());    //3.调用递归方法,遍历整个XML文件\n  getChildNode(rootElement);\n  }\n\n    private void getChildNode(Element element){\n        System.out.println(element.getName()); //看当前解析的什么对象    Iterator<Node> nodeIterator = element.nodeIterator();\n while (nodeIterator.hasNext()) {\n            Node node = nodeIterator.next();   if (node instanceof Element){\n                Element node1 = (Element) node;\n  getChildNode(node1);\n  }\n        }\n\n    }\n\n    /**\n * 获取标签\n  */\n  @Test\n  public void XMLElement() throws DocumentException {\n\n        //1.创建XML解析器，获取到Document对象\n  Document document = new SAXReader().read(new File(\"E:\\\\Program\\\\Java\\\\study\\\\code\\\\Day30\\\\Day30\\\\contact.xml\"));    //2.获取根节点\n  Element rootElement = document.getRootElement();    //3.获取当前节点下的指定名字的结点，如果有多个名字相同，拿到的是第一个节点\n  Element contact = rootElement.element(\"contact\");\n  System.out.println(contact.attributeValue(\"id\"));    //4.获取当前结点下指定名字节点的所有子节点迭代器,即能把两个ContactList都拿到，并且用迭代器操作\n  //这里相当于获取两个\n  Iterator<Element> elementIterator = rootElement.elementIterator(\"contact\");   while (elementIterator.hasNext()) {\n            Element element = elementIterator.next();\n  System.out.println(element.attributeValue(\"id\"));\n  }\n\n        //5.获取当前结点下的所有子节点\n  List<Element> elements = rootElement.elements();\n for (Element element : elements) {\n            System.out.println(element.getName());\n  }\n    }\n\n    /**\n * 获取属性\n  */\n  @Test\n  public void XMLAttribute() throws DocumentException {\n        //1.读取XML文件，获取Document对象\n  Document document = new SAXReader().read(new File(\"E:\\\\Program\\\\Java\\\\study\\\\code\\\\Day30\\\\Day30\\\\contact.xml\"));    //获取属性值方式一：\n  //2.获取属性前提：必须获取到属性所在标签的节点（当前只有contact标签有属性）\n  Element element = document.getRootElement().element(\"contact\");\n  String value = element.attributeValue(\"id\"); //所有属性的值都是String类型\n  System.out.println(element.getName() + \":\" + value);    //获取属性值方式二：\n  Attribute idAttr = element.attribute(\"id\");\n  System.out.println(idAttr.getName() + \":\" + idAttr.getValue());    //获取属性值方式三：获取指定节点里面所有属性节点的List集合\n  List<Attribute> listAttr = element.attributes();\n for (Attribute attribute : listAttr) {\n            System.out.println(attribute.getName() + \":\" + attribute.getValue());\n  }\n\n        //获取属性值方式四：获取指定节点里面所有属性节点的迭代器\n  Iterator<Attribute> attributeIterator = element.attributeIterator();\n while (attributeIterator.hasNext()){\n            Attribute next = attributeIterator.next();\n  System.out.println(next.getName() + \":\" + next.getValue());\n  }\n\n    }\n\n    /**\n * 获取文本结点\n  */\n  @Test\n  public void XMLText() throws DocumentException {\n        //1.读取XML文件，获取Document对象\n  Document document = new SAXReader().read(new File(\"E:\\\\Program\\\\Java\\\\study\\\\code\\\\Day30\\\\Day30\\\\contact.xml\"));    //2.获取根节点\n  Element rootElement = document.getRootElement();    Element element = rootElement.element(\"contact\").element(\"name\");\n  System.out.println(element.getName() + \":\" + element.getText());    }\n}"]],[2686,2686],[7478,7478]]],[1564226402960,["GJX@GJXAIOU",[[-1,2686,"import org.dom4j.*; import org.dom4j.io.SAXReader; import org.junit.jupiter.api.Test;   import java.io.File; import java.util.Iterator; import java.util.List;   /**获取XML文件的结点信息，包括：\n  * Node结点；\n  * Element结点\n  * Attribute结点\n  * text文本结点\n  *\n * @author GJXAIOU\n * @create 2019-07-27-16:19\n */ public class ParsingElementNode {\n    //获取节点信息，最原始的方式\n  @Test\n  public void XMLNode() throws DocumentException {\n\n        /*\n //1.创建一个XML文件的解析器  SAXReader saxReader = new SAXReader();   //2.读取XML文件，得到XML文件的Document对象  Document read = saxReader.read(new File(\"E:\\\\Program\\\\Java\\\\study\\\\code\\\\Day30\\\\Day30\\\\contact.xml\")); */   //1.创建XML文档的解析器，返回Document对象(将上面代码写成一行如下)\n  Document document = new SAXReader().read(new File(\"E:\\\\Program\\\\Java\\\\study\\\\code\\\\Day30\\\\Day30\\\\contact.xml\"));    //示例：nodeIterator // 得到当前结点下的所有子节点，不能跨界（不能往里读）\n  Iterator<Node> nodeIterator = document.nodeIterator();    //之前使用的Iterator迭代器中方法都可以使用，因为它是一个接口： hasNext()   next() remove()  while (nodeIterator.hasNext()){\n            Node node = nodeIterator.next(); //得到一个Node类型的结点，所有的XML文件结点中都是Node结点\n  String nodeName = node.getName(); //获取节点的名字\n  System.out.println(nodeName); //得到的是根节点名称      /*\n  以上的输出显示：在XML文件中，有一些标签是没有子节点的，这些标签也不是Element标签\n 这里需要进行过滤，如果是Element标签就继续解析\n 使用：Instanceof 作用是判断当前对象是不是指定类的对象；    */   //如果是一个标签结点，我们就继续解析；\n  if (node instanceof Element){\n                Element ele = (Element) node;    Iterator<Node> it2 = ele.nodeIterator();   while (it2.hasNext()){\n                    Node node2 = it2.next();\n  System.out.println(node2.getName());\n  }\n            }\n\n        }\n    }\n\n    //方法二：使用递归，遍历所有的XML文件的结点    public void XMLNode2() throws DocumentException {\n        //1.创建XML文档的解析器，返回Document对象\n  Document document = new SAXReader().read(new File(\"E:\\\\Program\\\\Java\\\\study\\\\code\\\\Day30\\\\Day30\\\\contact.xml\"));    //2.获取根节点\n  Element rootElement = document.getRootElement();\n  System.out.println(rootElement.getName());    //3.调用递归方法,遍历整个XML文件\n  getChildNode(rootElement);\n  }\n\n    private void getChildNode(Element element){\n        System.out.println(element.getName()); //看当前解析的什么对象    Iterator<Node> nodeIterator = element.nodeIterator();\n while (nodeIterator.hasNext()) {\n            Node node = nodeIterator.next();   if (node instanceof Element){\n                Element node1 = (Element) node;\n  getChildNode(node1);\n  }\n        }\n\n    }\n\n    /**\n * 获取标签\n  */\n  @Test\n  public void XMLElement() throws DocumentException {\n\n        //1.创建XML解析器，获取到Document对象\n  Document document = new SAXReader().read(new File(\"E:\\\\Program\\\\Java\\\\study\\\\code\\\\Day30\\\\Day30\\\\contact.xml\"));    //2.获取根节点\n  Element rootElement = document.getRootElement();    //3.获取当前节点下的指定名字的结点，如果有多个名字相同，拿到的是第一个节点\n  Element contact = rootElement.element(\"contact\");\n  System.out.println(contact.attributeValue(\"id\"));    //4.获取当前结点下指定名字节点的所有子节点迭代器,即能把两个ContactList都拿到，并且用迭代器操作\n  //这里相当于获取两个\n  Iterator<Element> elementIterator = rootElement.elementIterator(\"contact\");   while (elementIterator.hasNext()) {\n            Element element = elementIterator.next();\n  System.out.println(element.attributeValue(\"id\"));\n  }\n\n        //5.获取当前结点下的所有子节点\n  List<Element> elements = rootElement.elements();\n for (Element element : elements) {\n            System.out.println(element.getName());\n  }\n    }\n\n    /**\n * 获取属性\n  */\n  @Test\n  public void XMLAttribute() throws DocumentException {\n        //1.读取XML文件，获取Document对象\n  Document document = new SAXReader().read(new File(\"E:\\\\Program\\\\Java\\\\study\\\\code\\\\Day30\\\\Day30\\\\contact.xml\"));    //获取属性值方式一：\n  //2.获取属性前提：必须获取到属性所在标签的节点（当前只有contact标签有属性）\n  Element element = document.getRootElement().element(\"contact\");\n  String value = element.attributeValue(\"id\"); //所有属性的值都是String类型\n  System.out.println(element.getName() + \":\" + value);    //获取属性值方式二：\n  Attribute idAttr = element.attribute(\"id\");\n  System.out.println(idAttr.getName() + \":\" + idAttr.getValue());    //获取属性值方式三：获取指定节点里面所有属性节点的List集合\n  List<Attribute> listAttr = element.attributes();\n for (Attribute attribute : listAttr) {\n            System.out.println(attribute.getName() + \":\" + attribute.getValue());\n  }\n\n        //获取属性值方式四：获取指定节点里面所有属性节点的迭代器\n  Iterator<Attribute> attributeIterator = element.attributeIterator();\n while (attributeIterator.hasNext()){\n            Attribute next = attributeIterator.next();\n  System.out.println(next.getName() + \":\" + next.getValue());\n  }\n\n    }\n\n    /**\n * 获取文本结点\n  */\n  @Test\n  public void XMLText() throws DocumentException {\n        //1.读取XML文件，获取Document对象\n  Document document = new SAXReader().read(new File(\"E:\\\\Program\\\\Java\\\\study\\\\code\\\\Day30\\\\Day30\\\\contact.xml\"));    //2.获取根节点\n  Element rootElement = document.getRootElement();    Element element = rootElement.element(\"contact\").element(\"name\");\n  System.out.println(element.getName() + \":\" + element.getText());    }\n}"]],[7478,7478],[2686,2686]]],[1564226405707,["GJX@GJXAIOU",[[1,2686,"import org.dom4j.*;\nimport org.dom4j.io.SAXReader;\nimport org.junit.jupiter.api.Test;\n\nimport java.io.File;\nimport java.util.Iterator;\nimport java.util.List;\n\n/**获取XML文件的结点信息，包括：\n * Node结点；\n * Element结点\n * Attribute结点\n * text文本结点\n *\n * @author GJXAIOU\n * @create 2019-07-27-16:19\n */\npublic class ParsingElementNode {\n    //获取节点信息，最原始的方式\n    @Test\n    public void XMLNode() throws DocumentException {\n\n        /*\n        //1.创建一个XML文件的解析器\n        SAXReader saxReader = new SAXReader();\n\n        //2.读取XML文件，得到XML文件的Document对象\n        Document read = saxReader.read(new File(\"E:\\\\Program\\\\Java\\\\study\\\\code\\\\Day30\\\\Day30\\\\contact.xml\"));\n         */\n\n        //1.创建XML文档的解析器，返回Document对象(将上面代码写成一行如下)\n        Document document = new SAXReader().read(new File(\"E:\\\\Program\\\\Java\\\\study\\\\code\\\\Day30\\\\Day30\\\\contact.xml\"));\n\n        //示例：nodeIterator // 得到当前结点下的所有子节点，不能跨界（不能往里读）\n        Iterator<Node> nodeIterator = document.nodeIterator();\n\n        //之前使用的Iterator迭代器中方法都可以使用，因为它是一个接口： hasNext()   next() remove()\n        while (nodeIterator.hasNext()){\n            Node node = nodeIterator.next(); //得到一个Node类型的结点，所有的XML文件结点中都是Node结点\n            String nodeName = node.getName(); //获取节点的名字\n            System.out.println(nodeName); //得到的是根节点名称\n\n\n            /*\n            以上的输出显示：在XML文件中，有一些标签是没有子节点的，这些标签也不是Element标签\n            这里需要进行过滤，如果是Element标签就继续解析\n            使用：Instanceof  作用是判断当前对象是不是指定类的对象；\n\n             */\n\n            //如果是一个标签结点，我们就继续解析；\n            if (node instanceof Element){\n                Element ele = (Element) node;\n\n                Iterator<Node> it2 = ele.nodeIterator();\n\n                while (it2.hasNext()){\n                    Node node2 = it2.next();\n                    System.out.println(node2.getName());\n                }\n            }\n\n        }\n    }\n\n\n\n\n    //方法二：使用递归，遍历所有的XML文件的结点\n\n    public void XMLNode2() throws DocumentException {\n        //1.创建XML文档的解析器，返回Document对象\n        Document document = new SAXReader().read(new File(\"E:\\\\Program\\\\Java\\\\study\\\\code\\\\Day30\\\\Day30\\\\contact.xml\"));\n\n        //2.获取根节点\n        Element rootElement = document.getRootElement();\n        System.out.println(rootElement.getName());\n\n        //3.调用递归方法,遍历整个XML文件\n        getChildNode(rootElement);\n    }\n\n\n\n    private void getChildNode(Element element){\n        System.out.println(element.getName()); //看当前解析的什么对象\n\n        Iterator<Node> nodeIterator = element.nodeIterator();\n        while (nodeIterator.hasNext()) {\n            Node node = nodeIterator.next();\n\n            if (node instanceof Element){\n                Element node1 = (Element) node;\n                getChildNode(node1);\n            }\n        }\n\n    }\n\n\n    /**\n     * 获取标签\n     */\n    @Test\n    public void XMLElement() throws DocumentException {\n\n        //1.创建XML解析器，获取到Document对象\n        Document document = new SAXReader().read(new File(\"E:\\\\Program\\\\Java\\\\study\\\\code\\\\Day30\\\\Day30\\\\contact.xml\"));\n\n        //2.获取根节点\n        Element rootElement = document.getRootElement();\n\n        //3.获取当前节点下的指定名字的结点，如果有多个名字相同，拿到的是第一个节点\n        Element contact = rootElement.element(\"contact\");\n        System.out.println(contact.attributeValue(\"id\"));\n\n        //4.获取当前结点下指定名字节点的所有子节点迭代器,即能把两个ContactList都拿到，并且用迭代器操作\n        //这里相当于获取两个\n        Iterator<Element> elementIterator = rootElement.elementIterator(\"contact\");\n\n        while (elementIterator.hasNext()) {\n            Element element = elementIterator.next();\n            System.out.println(element.attributeValue(\"id\"));\n        }\n\n        //5.获取当前结点下的所有子节点\n        List<Element> elements = rootElement.elements();\n        for (Element element : elements) {\n            System.out.println(element.getName());\n        }\n    }\n\n\n    /**\n     * 获取属性\n     */\n    @Test\n    public void XMLAttribute() throws DocumentException {\n        //1.读取XML文件，获取Document对象\n        Document document = new SAXReader().read(new File(\"E:\\\\Program\\\\Java\\\\study\\\\code\\\\Day30\\\\Day30\\\\contact.xml\"));\n\n        //获取属性值方式一：\n        //2.获取属性前提：必须获取到属性所在标签的节点（当前只有contact标签有属性）\n        Element element = document.getRootElement().element(\"contact\");\n        String value = element.attributeValue(\"id\"); //所有属性的值都是String类型\n        System.out.println(element.getName() + \":\" + value);\n\n        //获取属性值方式二：\n        Attribute idAttr = element.attribute(\"id\");\n        System.out.println(idAttr.getName() + \":\" + idAttr.getValue());\n\n        //获取属性值方式三：获取指定节点里面所有属性节点的List集合\n        List<Attribute> listAttr = element.attributes();\n        for (Attribute attribute : listAttr) {\n            System.out.println(attribute.getName() + \":\" + attribute.getValue());\n        }\n\n        //获取属性值方式四：获取指定节点里面所有属性节点的迭代器\n        Iterator<Attribute> attributeIterator = element.attributeIterator();\n        while (attributeIterator.hasNext()){\n            Attribute next = attributeIterator.next();\n            System.out.println(next.getName() + \":\" + next.getValue());\n        }\n\n    }\n\n\n    /**\n     * 获取文本结点\n     */\n    @Test\n    public void XMLText() throws DocumentException {\n        //1.读取XML文件，获取Document对象\n        Document document = new SAXReader().read(new File(\"E:\\\\Program\\\\Java\\\\study\\\\code\\\\Day30\\\\Day30\\\\contact.xml\"));\n\n        //2.获取根节点\n        Element rootElement = document.getRootElement();\n\n        Element element = rootElement.element(\"contact\").element(\"name\");\n        System.out.println(element.getName() + \":\" + element.getText());\n\n    }\n}\n"]],[2686,2686],[8071,8071]]],[1564226475213,[null,[[-1,1150,">"],[1,1151,"!"],[1,1161,">"],[-1,1162," "],[-1,1199," "],[1,1200,"*"],[1,1204," "],[-1,1205,"s"]],[1150,1150],[1205,1205]]],[1564226475213,[null,[[1,1150,">"],[-1,1150,"!"],[-1,1161,">"],[1,1163," "],[1,1199," "],[-1,1199,"*"],[-1,1204," "],[1,1206,"s"]],[1205,1205],[1150,1150]]],[1564226415563,["GJX@GJXAIOU",[[1,8078,"\n"]],[8075,8075],[8076,8076]]],[1564226416219,["GJX@GJXAIOU",[[1,8079,"\n"]],[8076,8076],[8077,8077]]],[1564226441771,["GJX@GJXAIOU",[[1,8076,"sha"]],[8076,8076],[8079,8079]]],[1564226442330,["GJX@GJXAIOU",[[-1,8076,"sha"]],[8079,8079],[8076,8076]]],[1564226453800,["GJX@GJXAIOU",[[1,8076,"上面方法测试Demo"]],[8076,8076],[8086,8086]]],[1564226453836,["GJX@GJXAIOU",[[1,8082," "]],[8086,8086],[8087,8087]]],[1564226455519,["GJX@GJXAIOU",[[1,8087,"结果"]],[8087,8087],[8089,8089]]],[1564226455554,["GJX@GJXAIOU",[[1,8087," "]],[8089,8089],[8090,8090]]],[1564226455830,["GJX@GJXAIOU",[[1,8090,"："]],[8090,8090],[8091,8091]]],[1564226456078,["GJX@GJXAIOU",[[1,8095,"\n"]],[8091,8091],[8092,8092]]],[1564226457391,["GJX@GJXAIOU",[[1,8092,"```"]],[8092,8092],[8095,8095]]],[1564226457427,["GJX@GJXAIOU",[[1,8095,"language\n```\n"]],[8095,8095],[8095,8103]]],[1564226458341,["GJX@GJXAIOU",[[-1,8095,"language"],[1,8103,"j"]],[8095,8103],[8096,8096]]],[1564226458878,["GJX@GJXAIOU",[[1,8096,"ava"]],[8096,8096],[8099,8099]]],[1564226458995,["GJX@GJXAIOU",[[1,8100,"\n"]],[8099,8099],[8100,8100]]],[1564226459965,["GJX@GJXAIOU",[[1,8100,"ContactList\nnull\ncontact\nnull\ncontact\nnull\nhaha\nnull\nname:张三\n1\n1\n2\ncontact\ncontact\nhaha\ncontact:1\nid:1\nid:1\ntest:1\ntag:2\nid:1\ntest:1\ntag:2\n"]],[8100,8100],[8239,8239]]],[1564226463357,["GJX@GJXAIOU",[[-1,8239,"\n"]],[8239,8239],[8238,8238]]],[1564226465406,["GJX@GJXAIOU",[[1,8247,"\n"]],[8242,8242],[8243,8243]]],[1564226465509,["GJX@GJXAIOU",[[1,8248,"\n"]],[8243,8243],[8244,8244]]],[1564226535216,[null,[[-1,1150,">"],[1,1151,"!"],[1,1161,">"],[-1,1162," "],[-1,1199," "],[1,1200,"*"],[1,1204," "],[-1,1205,"s"]],[1150,1150],[1205,1205]]],[1564226535216,[null,[[1,1150,">"],[-1,1150,"!"],[-1,1161,">"],[1,1163," "],[1,1199," "],[-1,1199,"*"],[-1,1204," "],[1,1206,"s"]],[1205,1205],[1150,1150]]],[1564226481645,["GJX@GJXAIOU",[[1,8249,"\n"]],[8243,8243],[8244,8244]]],[1564226482327,["GJX@GJXAIOU",[[1,8244,"TrueUse.java"]],[8244,8244],[8256,8256]]],[1564226485093,["GJX@GJXAIOU",[[1,8262,"\n"]],[8256,8256],[8257,8257]]],[1564226486151,["GJX@GJXAIOU",[[1,8257,"···"]],[8257,8257],[8260,8260]]],[1564226487538,["GJX@GJXAIOU",[[-1,8257,"···"]],[8260,8260],[8257,8257]]],[1564226488783,["GJX@GJXAIOU",[[1,8257,"```"]],[8257,8257],[8260,8260]]],[1564226488822,["GJX@GJXAIOU",[[1,8260,"language\n```\n"]],[8260,8260],[8260,8268]]],[1564226490316,["GJX@GJXAIOU",[[-1,8260,"language"],[1,8268,"j"]],[8260,8268],[8261,8261]]],[1564226490661,["GJX@GJXAIOU",[[1,8261,"ava"]],[8261,8261],[8264,8264]]],[1564226490861,["GJX@GJXAIOU",[[1,8265,"\n"]],[8264,8264],[8265,8265]]],[1564226510869,["GJX@GJXAIOU",[[1,8265,"import org.dom4j.Document; import org.dom4j.DocumentException; import org.dom4j.Element; import org.dom4j.io.SAXReader;   import java.io.File; import java.util.ArrayList; import java.util.Iterator;   /**将XML里面的数据读取到Contact对象里面\n  * @author GJXAIOU\n * @create 2019-07-27-17:45\n */ public class TrueUse {\n    public static void main(String[] args) throws DocumentException {\n        ArrayList<Contact> contacts = new ArrayList<>();    //获取到XML对应的Document对象\n  Document doc = new SAXReader().read(new File(\"E:\\\\Program\\\\Java\\\\study\\\\code\\\\Day30\\\\Day30\\\\contact.xml\"));\n  Iterator<Element> it = doc.getRootElement().elementIterator(\"contact\"); //拿到根节点下面contact的迭代器    while (it.hasNext()){\n            Element contactElem = it.next();\n  Integer id = Integer.valueOf(contactElem.attributeValue(\"id\")); //拿到id的值，并将string类型强转为int类型\n  String name = contactElem.elementText(\"name\"); //这里直接拿文本就行\n  char gender = contactElem.elementText(\"gender\").charAt(0);\n  String tel = contactElem.elementText(\"tel\");\n  Integer age = Integer.valueOf(contactElem.elementText(\"age\"));\n  String qq = contactElem.elementText(\"qq\");\n  String email = contactElem.elementText(\"email\");    Contact contact = new Contact(id, age, gender, tel, qq, name, email);\n  contacts.add(contact);    }\n\n        //展示数据\n  for (Contact contact : contacts) {\n            System.out.println(contact);\n  }\n\n    }\n}"]],[8265,8265],[9627,9627]]],[1564226512235,["GJX@GJXAIOU",[[-1,8265,"import org.dom4j.Document; import org.dom4j.DocumentException; import org.dom4j.Element; import org.dom4j.io.SAXReader;   import java.io.File; import java.util.ArrayList; import java.util.Iterator;   /**将XML里面的数据读取到Contact对象里面\n  * @author GJXAIOU\n * @create 2019-07-27-17:45\n */ public class TrueUse {\n    public static void main(String[] args) throws DocumentException {\n        ArrayList<Contact> contacts = new ArrayList<>();    //获取到XML对应的Document对象\n  Document doc = new SAXReader().read(new File(\"E:\\\\Program\\\\Java\\\\study\\\\code\\\\Day30\\\\Day30\\\\contact.xml\"));\n  Iterator<Element> it = doc.getRootElement().elementIterator(\"contact\"); //拿到根节点下面contact的迭代器    while (it.hasNext()){\n            Element contactElem = it.next();\n  Integer id = Integer.valueOf(contactElem.attributeValue(\"id\")); //拿到id的值，并将string类型强转为int类型\n  String name = contactElem.elementText(\"name\"); //这里直接拿文本就行\n  char gender = contactElem.elementText(\"gender\").charAt(0);\n  String tel = contactElem.elementText(\"tel\");\n  Integer age = Integer.valueOf(contactElem.elementText(\"age\"));\n  String qq = contactElem.elementText(\"qq\");\n  String email = contactElem.elementText(\"email\");    Contact contact = new Contact(id, age, gender, tel, qq, name, email);\n  contacts.add(contact);    }\n\n        //展示数据\n  for (Contact contact : contacts) {\n            System.out.println(contact);\n  }\n\n    }\n}"]],[9627,9627],[8265,8265]]],[1564226514258,["GJX@GJXAIOU",[[1,8265,"import org.dom4j.Document;\nimport org.dom4j.DocumentException;\nimport org.dom4j.Element;\nimport org.dom4j.io.SAXReader;\n\nimport java.io.File;\nimport java.util.ArrayList;\nimport java.util.Iterator;\n\n/**将XML里面的数据读取到Contact对象里面\n * @author GJXAIOU\n * @create 2019-07-27-17:45\n */\npublic class TrueUse {\n    public static void main(String[] args) throws DocumentException {\n        ArrayList<Contact> contacts = new ArrayList<>();\n\n        //获取到XML对应的Document对象\n        Document doc = new SAXReader().read(new File(\"E:\\\\Program\\\\Java\\\\study\\\\code\\\\Day30\\\\Day30\\\\contact.xml\"));\n        Iterator<Element> it = doc.getRootElement().elementIterator(\"contact\"); //拿到根节点下面contact的迭代器\n\n        while (it.hasNext()){\n            Element contactElem = it.next();\n            Integer id = Integer.valueOf(contactElem.attributeValue(\"id\")); //拿到id的值，并将string类型强转为int类型\n            String name = contactElem.elementText(\"name\"); //这里直接拿文本就行\n            char gender = contactElem.elementText(\"gender\").charAt(0);\n            String tel = contactElem.elementText(\"tel\");\n            Integer age = Integer.valueOf(contactElem.elementText(\"age\"));\n            String qq = contactElem.elementText(\"qq\");\n            String email = contactElem.elementText(\"email\");\n\n            Contact contact = new Contact(id, age, gender, tel, qq, name, email);\n            contacts.add(contact);\n\n        }\n\n        //展示数据\n        for (Contact contact : contacts) {\n            System.out.println(contact);\n        }\n\n    }\n}\n"]],[8265,8265],[9757,9757]]],[1564226595216,[null,[[-1,1150,">"],[1,1151,"!"],[1,1161,">"],[-1,1162," "],[-1,1199," "],[1,1200,"*"],[1,1204," "],[-1,1205,"s"]],[1150,1150],[1205,1205]]],[1564226595216,[null,[[1,1150,">"],[-1,1150,"!"],[-1,1161,">"],[1,1163," "],[1,1199," "],[-1,1199,"*"],[-1,1204," "],[1,1206,"s"]],[1205,1205],[1150,1150]]],[1564226585923,["GJX@GJXAIOU",[[1,9768,"\n"]],[9761,9761],[9762,9762]]],[1564226587786,["GJX@GJXAIOU",[[1,9762,"yidh"]],[9762,9762],[9766,9766]]],[1564226588706,["GJX@GJXAIOU",[[-1,9762,"yidh"]],[9766,9766],[9762,9762]]],[1564226594926,["GJX@GJXAIOU",[[1,9762,"以上程序结果“"]],[9762,9762],[9769,9769]]],[1564226617149,[null,[[-1,1150,">"],[1,1151,"!"],[1,1161,">"],[-1,1162," "],[-1,1199," "],[1,1200,"*"],[1,1204," "],[-1,1205,"s"]],[1150,1150],[1205,1205]]],[1564226617149,[null,[[1,1150,">"],[-1,1150,"!"],[-1,1161,">"],[1,1163," "],[1,1199," "],[-1,1199,"*"],[-1,1204," "],[1,1206,"s"]],[1205,1205],[1150,1150]]],[1564226595355,["GJX@GJXAIOU",[[1,9776,"\n"]],[9769,9769],[9770,9770]]],[1564226595803,["GJX@GJXAIOU",[[-1,9776,"\n"]],[9770,9770],[9769,9769]]],[1564226596034,["GJX@GJXAIOU",[[-1,9768,"“"]],[9769,9769],[9768,9768]]],[1564226596613,["GJX@GJXAIOU",[[1,9768,"："]],[9768,9768],[9769,9769]]],[1564226596914,["GJX@GJXAIOU",[[1,9776,"\n"]],[9769,9769],[9770,9770]]],[1564226598380,["GJX@GJXAIOU",[[1,9770,"```"]],[9770,9770],[9773,9773]]],[1564226598420,["GJX@GJXAIOU",[[1,9773,"language\n```\n"]],[9773,9773],[9773,9781]]],[1564226599236,["GJX@GJXAIOU",[[-1,9773,"language"],[1,9781,"j"]],[9773,9781],[9774,9774]]],[1564226599722,["GJX@GJXAIOU",[[1,9774,"ava"]],[9774,9774],[9777,9777]]],[1564226599816,["GJX@GJXAIOU",[[1,9778,"\n"]],[9777,9777],[9778,9778]]],[1564226601140,["GJX@GJXAIOU",[[1,9778,"Contact{id=1, age=18, gender=男, tel='666666', qq='1111111', name='张三', email='1111111@qq.com'}\nContact{id=2, age=17, gender=女, tel='8888888', qq='2222222', name='李四', email='2222222@qq.com'}"]],[9778,9778],[9968,9968]]],[1564228417181,[null,[[-1,1150,">"],[1,1151,"!"],[1,1161,">"],[-1,1162," "],[-1,1199," "],[1,1200,"*"],[1,1204," "],[-1,1205,"s"]],[1150,1150],[1205,1205]]],[1564228417181,[null,[[1,1150,">"],[-1,1150,"!"],[-1,1161,">"],[1,1163," "],[1,1199," "],[-1,1199,"*"],[-1,1204," "],[1,1206,"s"]],[1205,1205],[1150,1150]]],[1564228359649,["GJX@GJXAIOU",[[1,19,"\n"]],[18,18],[19,19]]],[1564228362948,["GJX@GJXAIOU",[[1,19,"@toc"]],[19,19],[23,23]]],[1564228364642,["GJX@GJXAIOU",[[1,24,"\n"]],[23,23],[24,24]]],[1564228397779,["GJX@GJXAIOU",[[-1,157,"[静态网站和动态网站的区别](https://www.jianshu.com/p/649d2a0ebde5)"]],[157,211],[157,157]]],[1564228399108,["GJX@GJXAIOU",[[-1,158,"\n"]],[157,157],[156,156]]],[1564228399433,["GJX@GJXAIOU",[[-1,157,"\n"]],[156,156],[155,155]]],[1564228402112,["GJX@GJXAIOU",[[1,25,"\n"]],[24,24],[25,25]]],[1564228406356,["GJX@GJXAIOU",[[1,25,"## yi /"]],[25,25],[32,32]]],[1564228407649,["GJX@GJXAIOU",[[-1,28,"yi /"]],[32,32],[28,28]]],[1564228410587,["GJX@GJXAIOU",[[1,28,"一、前言"]],[28,28],[32,32]]],[1564228413729,["GJX@GJXAIOU",[[1,239,"二 "]],[239,239],[240,240]]],[1564228414947,["GJX@GJXAIOU",[[1,240,"、"]],[240,240],[241,241]]],[1564228477187,[null,[[-1,1111,">"],[1,1112,"!"],[1,1122,">"],[-1,1123," "],[-1,1160," "],[1,1161,"*"],[1,1165," "],[-1,1166,"s"]],[1111,1111],[1166,1166]]],[1564228477187,[null,[[1,1111,">"],[-1,1111,"!"],[-1,1122,">"],[1,1124," "],[1,1160," "],[-1,1160,"*"],[-1,1165," "],[1,1167,"s"]],[1166,1166],[1111,1111]]],[1564228430937,["GJX@GJXAIOU",[[-1,72,"\n"]],[73,73],[72,72]]],[1564228432970,["GJX@GJXAIOU",[[1,72,"，"]],[72,72],[73,73]]],[1564228438501,["GJX@GJXAIOU",[[1,33,"- "]],[33,33],[35,35]]],[1564228441074,["GJX@GJXAIOU",[[1,99,"- "]],[99,99],[101,101]]],[1564228444939,["GJX@GJXAIOU",[[1,112,"- "]],[112,112],[114,114]]],[1564228448563,["GJX@GJXAIOU",[[1,98,"；"]],[98,98],[99,99]]],[1564228449562,["GJX@GJXAIOU",[[1,102,"\n- "]],[99,99],[102,102]]],[1564228450441,["GJX@GJXAIOU",[[-1,100,"- "]],[102,102],[100,100]]],[1564228453292,["GJX@GJXAIOU",[[1,113,"；"]],[113,113],[114,114]]],[1564228453656,["GJX@GJXAIOU",[[1,117,"\n- "]],[114,114],[117,117]]],[1564228453717,["GJX@GJXAIOU",[[-1,115,"- "]],[117,117],[116,116]]],[1564228537189,[null,[[-1,1121,">"],[1,1122,"!"],[1,1132,">"],[-1,1133," "],[-1,1170," "],[1,1171,"*"],[1,1175," "],[-1,1176,"s"]],[1121,1121],[1176,1176]]],[1564228537189,[null,[[1,1121,">"],[-1,1121,"!"],[-1,1132,">"],[1,1134," "],[1,1170," "],[-1,1170,"*"],[-1,1175," "],[1,1177,"s"]],[1176,1176],[1121,1121]]],[1564228484752,["GJX@GJXAIOU",[[1,256,"\n"]],[255,255],[256,256]]],[1564228487360,["GJX@GJXAIOU",[[1,256,"### "]],[256,256],[260,260]]],[1564228490249,["GJX@GJXAIOU",[[-1,259," "]],[260,260],[259,259]]],[1564228491724,["GJX@GJXAIOU",[[1,259,"（）"]],[259,259],[261,261]]],[1564228494440,["GJX@GJXAIOU",[[1,260,"一"]],[260,260],[261,261]]],[1564228496904,["GJX@GJXAIOU",[[1,262,"概念"]],[262,262],[264,264]]],[1564228499177,["GJX@GJXAIOU",[[1,259," "]],[259,259],[260,260]]],[1564228504928,["GJX@GJXAIOU",[[1,266,"\n"]],[266,266],[267,267]]],[1564228505426,["GJX@GJXAIOU",[[1,267,"- "]],[267,267],[269,269]]],[1564228509354,["GJX@GJXAIOU",[[1,305,"- "]],[305,305],[307,307]]],[1564228515984,["GJX@GJXAIOU",[[1,363,"\n"]],[363,363],[364,364]]],[1564228516540,["GJX@GJXAIOU",[[1,364,"- "]],[364,364],[366,366]]],[1564228519812,["GJX@GJXAIOU",[[1,395,"- "]],[395,395],[397,397]]],[1564228525915,["GJX@GJXAIOU",[[1,403,"  - "]],[403,403],[407,407]]],[1564228597192,[null,[[-1,1145,">"],[1,1146,"!"],[1,1156,">"],[-1,1157," "],[-1,1194," "],[1,1195,"*"],[1,1199," "],[-1,1200,"s"]],[1145,1145],[1200,1200]]],[1564228597192,[null,[[1,1145,">"],[-1,1145,"!"],[-1,1156,">"],[1,1158," "],[1,1194," "],[-1,1194,"*"],[-1,1199," "],[1,1201,"s"]],[1200,1200],[1145,1145]]],[1564228545442,["GJX@GJXAIOU",[[1,503,"    - "]],[503,503],[509,509]]],[1564228549121,["GJX@GJXAIOU",[[1,514,"      "]],[514,514],[520,520]]],[1564228550649,["GJX@GJXAIOU",[[1,533,"      "]],[533,533],[539,539]]],[1564228552290,["GJX@GJXAIOU",[[1,557,"    "]],[557,557],[561,561]]],[1564228572891,["GJX@GJXAIOU",[[1,397,"**"],[1,401,"**"]],[397,401],[397,405]]],[1564228578954,["GJX@GJXAIOU",[[1,413,"**"],[1,426,"**"]],[413,426],[413,430]]],[1564228586177,["GJX@GJXAIOU",[[1,661,"**"],[1,668,"**"]],[661,668],[661,672]]],[1564228587971,["GJX@GJXAIOU",[[-1,679,"\n"],[1,680,"；"]],[679,679],[680,680]]],[1564228589360,["GJX@GJXAIOU",[[1,681,"\n"]],[680,680],[681,681]]],[1564228657190,[null,[[-1,1180,">"],[1,1181,"!"],[1,1191,">"],[-1,1192," "],[-1,1229," "],[1,1230,"*"],[1,1234," "],[-1,1235,"s"]],[1180,1180],[1235,1235]]],[1564228657190,[null,[[1,1180,">"],[-1,1180,"!"],[-1,1191,">"],[1,1193," "],[1,1229," "],[-1,1229,"*"],[-1,1234," "],[1,1236,"s"]],[1235,1235],[1180,1180]]],[1564228597656,["GJX@GJXAIOU",[[1,684,"#"]],[685,685],[694,694]]],[1564228602088,["GJX@GJXAIOU",[[1,686,"（）"]],[686,686],[688,688]]],[1564228603379,["GJX@GJXAIOU",[[1,687,"二"]],[687,687],[688,688]]],[1564228625049,["GJX@GJXAIOU",[[1,702,"#"]],[702,702],[710,710]]],[1564228646280,["GJX@GJXAIOU",[[-1,256,"### （一）概念"]],[256,265],[256,256]]],[1564228648957,["GJX@GJXAIOU",[[1,255,"概念"]],[255,255],[257,257]]],[1564228648996,["GJX@GJXAIOU",[[1,255," "]],[257,257],[258,258]]],[1564228651376,["GJX@GJXAIOU",[[-1,260,"\n"]],[259,259],[258,258]]],[1564228717271,[null,[[-1,1178,">"],[1,1179,"!"],[1,1189,">"],[-1,1190," "],[-1,1227," "],[1,1228,"*"],[1,1232," "],[-1,1233,"s"]],[1178,1178],[1233,1233]]],[1564228717271,[null,[[1,1178,">"],[-1,1178,"!"],[-1,1189,">"],[1,1191," "],[1,1227," "],[-1,1227,"*"],[-1,1232," "],[1,1234,"s"]],[1233,1233],[1178,1178]]],[1564228659238,["GJX@GJXAIOU",[[-1,679,"（二）"],[1,682,"三"]],[679,679],[680,680]]],[1564228660926,["GJX@GJXAIOU",[[1,680,"、"]],[680,680],[681,681]]],[1564228662456,["GJX@GJXAIOU",[[-1,677,"#"]],[681,681],[688,688]]],[1564228664827,["GJX@GJXAIOU",[[-1,693,"#"]],[695,695],[700,700]]],[1564228668127,["GJX@GJXAIOU",[[-1,694,"一、"]],[696,696],[694,694]]],[1564228669310,["GJX@GJXAIOU",[[1,694,"（）"]],[694,694],[696,696]]],[1564228670723,["GJX@GJXAIOU",[[1,695,"一"]],[695,695],[696,696]]],[1564228681453,["GJX@GJXAIOU",[[-1,813,"二、"],[1,815,"（"]],[813,813],[814,814]]],[1564228681518,["GJX@GJXAIOU",[[1,814,"）"]],[814,814],[815,815]]],[1564228682941,["GJX@GJXAIOU",[[1,814,"二"]],[814,814],[815,815]]],[1564228685860,["GJX@GJXAIOU",[[-1,1059,"三、"]],[1061,1061],[1059,1059]]],[1564228687158,["GJX@GJXAIOU",[[1,1059,"（）"]],[1059,1059],[1061,1061]]],[1564228688652,["GJX@GJXAIOU",[[1,1060,"三"]],[1060,1060],[1061,1061]]],[1564228691172,["GJX@GJXAIOU",[[-1,1168,"四、"]],[1170,1170],[1168,1168]]],[1564228692290,["GJX@GJXAIOU",[[1,1168,"（）"]],[1168,1168],[1170,1170]]],[1564228693540,["GJX@GJXAIOU",[[1,1169,"四"]],[1169,1169],[1170,1170]]],[1564228696408,["GJX@GJXAIOU",[[-1,1332,"五、"]],[1334,1334],[1332,1332]]],[1564228697518,["GJX@GJXAIOU",[[1,1332,"（）"]],[1332,1332],[1334,1334]]],[1564228698910,["GJX@GJXAIOU",[[1,1333,"五"]],[1333,1333],[1334,1334]]],[1564228704714,["GJX@GJXAIOU",[[1,1589,"三 "]],[1589,1589],[1590,1590]]],[1564228704996,["GJX@GJXAIOU",[[1,1590,"、"]],[1590,1590],[1591,1591]]],[1564228708385,["GJX@GJXAIOU",[[-1,1591," "]],[1592,1592],[1591,1591]]],[1564229017276,[null,[[-1,1179,">"],[1,1180,"!"],[1,1190,">"],[-1,1191," "],[-1,1228," "],[1,1229,"*"],[1,1233," "],[-1,1234,"s"]],[1179,1179],[1234,1234]]],[1564229017276,[null,[[1,1179,">"],[-1,1179,"!"],[-1,1190,">"],[1,1192," "],[1,1228," "],[-1,1228,"*"],[-1,1233," "],[1,1235,"s"]],[1234,1234],[1179,1179]]],[1564229005704,["GJX@GJXAIOU",[[-1,1446," &  "],[1,1450,"&amp;"]],[1446,1450],[1451,1451]]],[1564229012882,["GJX@GJXAIOU",[[1,1446,"·"]],[1446,1446],[1447,1447]]],[1564229014289,["GJX@GJXAIOU",[[-1,1446,"·"]],[1447,1447],[1446,1446]]],[1564229014753,["GJX@GJXAIOU",[[1,1446,"`"]],[1446,1446],[1447,1447]]],[1564229016173,["GJX@GJXAIOU",[[1,1452,"`"]],[1452,1452],[1453,1453]]],[1564229077280,[null,[[-1,1179,">"],[1,1180,"!"],[1,1190,">"],[-1,1191," "],[-1,1228," "],[1,1229,"*"],[1,1233," "],[-1,1234,"s"]],[1179,1179],[1234,1234]]],[1564229077280,[null,[[1,1179,">"],[-1,1179,"!"],[-1,1190,">"],[1,1192," "],[1,1228," "],[-1,1228,"*"],[-1,1233," "],[1,1235,"s"]],[1234,1234],[1179,1179]]],[1564229024539,["GJX@GJXAIOU",[[-1,1480," < "],[1,1483,"·"]],[1480,1480],[1481,1481]]],[1564229024747,["GJX@GJXAIOU",[[1,1481,"·"]],[1481,1481],[1482,1482]]],[1564229026095,["GJX@GJXAIOU",[[-1,1480,"··"]],[1482,1482],[1480,1480]]],[1564229026850,["GJX@GJXAIOU",[[1,1480,"``"]],[1480,1480],[1482,1482]]],[1564229028186,["GJX@GJXAIOU",[[1,1481,"&lt;"]],[1481,1481],[1485,1485]]],[1564229042235,["GJX@GJXAIOU",[[-1,1514," > "],[1,1517,"| \n\n &gt;\n\n |"]],[1514,1517],[1527,1527]]],[1564229044776,["GJX@GJXAIOU",[[1,1514," > "],[-1,1514,"| \n\n &gt;\n\n |"]],[1527,1527],[1514,1517]]],[1564229046795,["GJX@GJXAIOU",[[-1,1515,">"]],[1516,1516],[1515,1515]]],[1564229047283,["GJX@GJXAIOU",[[1,1515,"| \n\n &gt;\n\n |"]],[1515,1515],[1528,1528]]],[1564229048615,["GJX@GJXAIOU",[[-1,1515,"| \n\n &gt;\n\n |"]],[1528,1528],[1515,1515]]],[1564229056114,["GJX@GJXAIOU",[[1,1514,"``"]],[1514,1514],[1516,1516]]],[1564229057632,["GJX@GJXAIOU",[[1,1515,"&gt;"]],[1515,1515],[1519,1519]]],[1564229065240,["GJX@GJXAIOU",[[-1,1548,"\""]],[1549,1549],[1548,1548]]],[1564229066275,["GJX@GJXAIOU",[[1,1548,"··"]],[1548,1548],[1550,1550]]],[1564229067736,["GJX@GJXAIOU",[[-1,1548,"··"]],[1550,1550],[1548,1548]]],[1564229068522,["GJX@GJXAIOU",[[1,1548,"``"]],[1548,1548],[1550,1550]]],[1564229070016,["GJX@GJXAIOU",[[1,1549,"&quot;"]],[1549,1549],[1555,1555]]],[1564229076419,["GJX@GJXAIOU",[[-1,1585,"'"]],[1586,1586],[1585,1585]]],[1564229077125,["GJX@GJXAIOU",[[1,1585,"·"]],[1585,1585],[1586,1586]]],[1564229137276,[null,[[-1,1179,">"],[1,1180,"!"],[1,1190,">"],[-1,1191," "],[-1,1228," "],[1,1229,"*"],[1,1233," "],[-1,1234,"s"]],[1179,1179],[1234,1234]]],[1564229137276,[null,[[1,1179,">"],[-1,1179,"!"],[-1,1190,">"],[1,1192," "],[1,1228," "],[-1,1228,"*"],[-1,1233," "],[1,1235,"s"]],[1234,1234],[1179,1179]]],[1564229077314,["GJX@GJXAIOU",[[1,1586,"·"]],[1586,1586],[1587,1587]]],[1564229078515,["GJX@GJXAIOU",[[-1,1585,"··"]],[1587,1587],[1585,1585]]],[1564229079157,["GJX@GJXAIOU",[[1,1585,"``"]],[1585,1585],[1587,1587]]],[1564229080249,["GJX@GJXAIOU",[[1,1586,"&apos;"]],[1586,1586],[1592,1592]]],[1564229083890,["GJX@GJXAIOU",[[-1,1512,"  "]],[1512,1514],[1512,1512]]],[1564229085999,["GJX@GJXAIOU",[[-1,1544,"  "]],[1544,1546],[1544,1544]]],[1564229087610,["GJX@GJXAIOU",[[-1,1578,"   "]],[1578,1581],[1578,1578]]],[1564229089298,["GJX@GJXAIOU",[[-1,1554," "]],[1554,1554],[1553,1553]]],[1564229090138,["GJX@GJXAIOU",[[-1,1553," "]],[1554,1554],[1553,1553]]],[1564229091537,["GJX@GJXAIOU",[[-1,1585," "]],[1585,1585],[1584,1584]]],[1564229092360,["GJX@GJXAIOU",[[-1,1584," "]],[1585,1585],[1584,1584]]],[1564229093555,["GJX@GJXAIOU",[[1,1584," "]],[1584,1584],[1585,1585]]],[1564229095719,["GJX@GJXAIOU",[[-1,1467," "]],[1468,1468],[1467,1467]]],[1564229097220,["GJX@GJXAIOU",[[1,1434," "]],[1434,1434],[1435,1435]]],[1564229099995,["GJX@GJXAIOU",[[1,1468," "]],[1468,1468],[1469,1469]]],[1564229197277,[null,[[-1,1179,">"],[1,1180,"!"],[1,1190,">"],[-1,1191," "],[-1,1228," "],[1,1229,"*"],[1,1233," "],[-1,1234,"s"]],[1179,1179],[1234,1234]]],[1564229197277,[null,[[1,1179,">"],[-1,1179,"!"],[-1,1190,">"],[1,1192," "],[1,1228," "],[-1,1228,"*"],[-1,1233," "],[1,1235,"s"]],[1234,1234],[1179,1179]]],[1564229137785,["GJX@GJXAIOU",[[1,1659,"\n"]],[1658,1658],[1659,1659]]],[1564229139985,["GJX@GJXAIOU",[[1,1633,"\n"]],[1632,1632],[1633,1633]]]],null,"GJX@GJXAIOU"],["9d7623ae-c299-443b-84cd-3f8c8632e998",1564229368822,"# JavaEEDay31 XML\n\n@toc\n\n## 一、前言\n- HTML：HyperText Markup Language 超文本标记语言 ，不经过任何的编译，浏览器通过标记进行对应的响应；\n\n- CSS： 层级样式表；\n\n- JavaScript： 让页面完成一些动态的特效；\n\nHTML+CSS+JavaScript：用来制作静态网站\n\nHTML 由标签组成，不区分大小写，是 W3C 组织制定的规范，所有的 HTML 标签都是确定的，固定的，不能自己创建，大约 100 多个\n\n## 二、 XML 概念\n\n- XML：Extend Markup Language 可拓展的标记语言\n- XML 也是通过便签来组成语言，但是这些标签程序员可以自定义，但是要符合语法规定，同时标签是严格区分大小写的；\n\n- 通常的使用方式：`<自定义标签>数据</自定义标签>`\n\n- **使用场景**：\n  - 1.**properties 文件**，采用键值对保存的（key - value），用于作为配置文件，例如：Tomcat 服务器配置文件和 Spring、SpringMVC、MyBatis 配置文件\n    - 例如：\n       name = root\n       password = 12345\n     对应的 XML 标签：\n \n```xml\n<User>\n  <name>root</name>\n  <password>12345</password>\n</User>\n```\n\n2.**作为小型数据库**，是数据的载体；\n\n## 三、XML 语法规范\n\n### （一）文档声明\n这是固定的格式：\n`<?xml version = \"1.0\" encoding = \"utf-8\"？>`\n其中：version： XML 使用的版本号\nencoding: 解析当前 XML 文件使用的字符编码\n\n### （二）标签语法\n- 基本格式：`<自定义标签名>数据</自定义标签名>`\n- 语法规范：\n  - 结束标签必须有`/`进行标记；\n  - `<student />` 为空标签，没有内容，一般用于占位；\n  - XML 文件中使用的自定义标签是严格区分大小写的；\n  - XML 文件中使用的标签必须一一匹配，不能交叉嵌套；\n  - XML 文件中标签不能存在空格；\n  - XML 文件中使用的自定义标签不能使用数字开头；\n  - XML 文件中有且只能有一个根节点；☆☆☆\n\n\n\n\n### （三）属性 \n格式 示例：`<student name = \"nnn\"> </student>`\n注意：\n- 属性必须使用引号包含，尽量使用双引号；\n- 一个标签内可以使用多个属性，但是属性的名字不能相同；\n\n### （四）注释\n格式：`<!-- 这里是注释-->`\n- 其他注释汇总：\n  - Java： `//` `/* */` `/** */ `单行注释、多行注释、文档注释\n  - HTML: `<!-- -->`\n  - CSS :`/* */`\n  - JS: `//` `/* */`\n  - JSP: `<%  %>`\n\n### （五）转义字符\nXML 中有很多特殊含义的字符，例如：<> ? “”\n对应的转义字符：\n|   字符|   转义字符   |  描述   |\n|--------|-------|-----------   |\n|  &     |`&amp;`  |  和         |\n|   <    |`&lt;`   | 小于号      |\n|   >    |`&gt;`   |  大于号     |\n|   \"    |`&quot;` |   双引号    |\n|   '    |`&apos;` | 单引号      |\n\n\n\n## 三、XML 解析\n将 XML 文件解析到 Java 中\n\n![DOM]($resource/DOM.jpg)\n\n- XML 文件解析方式：\n  - DOM 解析；\n  - SAX 解析；\n- XML 解析常用的工具：\n  - DOM 解析：针对 XML 文件，可读可写可修改\n    - JAXP（sun 公司官方，不好用）\n    - JDOM（非官方，还行）\n    - Dom4j(非官方，好用) ☆☆是三大框架默认使用功能 XML 解析方式；\n  - SAX 解析：针对 XML 文件，只可读\n    - SAX 解析工具（官方，常用于 Android 开发），了解即可； \n- Dom4j 工具使用：\n  - 官网下载，解压找到 dom4j-XXX.jar \n  - 在 Java 的 Project 中新建文件夹，一般命名为 libs 或者 Lib,然后复制 dom4j-XXX.jar，文件，到该文件夹黏贴；\n  - 右击该包，找到 Build Path - 》 add to build path \n\n### XML 解析示例\n下面代码分为三个文件\n- contact.xml  :需要解析的 xml 文件\n- ParsingElementNode.java :Dom4j 中常见方法是的使用 Demo\n- TrueUse.java :真正的用于解析 contact.xml 文件的代码，即实现 XML 文件解析到 Java 中；\n\ncontact.xml\n```xml\n<?xml version = \"1.0\" encoding = \"utf-8\" ?>\n\n\t\n<ContactList>\n\t\t<contact id = \"1\" test = \"1\" tag = \"2\">\n\t\t\t<name>张三</name>\n\t\t\t<gender>男</gender>\n\t\t\t<tel>666666</tel>\n\t\t\t<age>18</age>\n\t\t\t<qq>1111111</qq>\n\t\t\t<email>1111111@qq.com</email>\n\t\t</contact>\n\t\t<contact id = \"2\">\n\t\t\t<name>李四</name>\n\t\t\t<gender>女</gender>\n\t\t\t<tel>8888888</tel>\n\t\t\t<age>17</age>\n\t\t\t<qq>2222222</qq>\n\t\t\t<email>2222222@qq.com</email>\n\t    </contact>\n\t<haha></haha>\n\t\n</ContactList>\n```\n\nParsingElementNode.java\n```java\nimport org.dom4j.*;\nimport org.dom4j.io.SAXReader;\nimport org.junit.jupiter.api.Test;\n\nimport java.io.File;\nimport java.util.Iterator;\nimport java.util.List;\n\n/**获取XML文件的结点信息，包括：\n * Node结点；\n * Element结点\n * Attribute结点\n * text文本结点\n *\n * @author GJXAIOU\n * @create 2019-07-27-16:19\n */\npublic class ParsingElementNode {\n    //获取节点信息，最原始的方式\n    @Test\n    public void XMLNode() throws DocumentException {\n\n        /*\n        //1.创建一个XML文件的解析器\n        SAXReader saxReader = new SAXReader();\n\n        //2.读取XML文件，得到XML文件的Document对象\n        Document read = saxReader.read(new File(\"E:\\\\Program\\\\Java\\\\study\\\\code\\\\Day30\\\\Day30\\\\contact.xml\"));\n         */\n\n        //1.创建XML文档的解析器，返回Document对象(将上面代码写成一行如下)\n        Document document = new SAXReader().read(new File(\"E:\\\\Program\\\\Java\\\\study\\\\code\\\\Day30\\\\Day30\\\\contact.xml\"));\n\n        //示例：nodeIterator // 得到当前结点下的所有子节点，不能跨界（不能往里读）\n        Iterator<Node> nodeIterator = document.nodeIterator();\n\n        //之前使用的Iterator迭代器中方法都可以使用，因为它是一个接口： hasNext()   next() remove()\n        while (nodeIterator.hasNext()){\n            Node node = nodeIterator.next(); //得到一个Node类型的结点，所有的XML文件结点中都是Node结点\n            String nodeName = node.getName(); //获取节点的名字\n            System.out.println(nodeName); //得到的是根节点名称\n\n\n            /*\n            以上的输出显示：在XML文件中，有一些标签是没有子节点的，这些标签也不是Element标签\n            这里需要进行过滤，如果是Element标签就继续解析\n            使用：Instanceof  作用是判断当前对象是不是指定类的对象；\n\n             */\n\n            //如果是一个标签结点，我们就继续解析；\n            if (node instanceof Element){\n                Element ele = (Element) node;\n\n                Iterator<Node> it2 = ele.nodeIterator();\n\n                while (it2.hasNext()){\n                    Node node2 = it2.next();\n                    System.out.println(node2.getName());\n                }\n            }\n\n        }\n    }\n\n\n\n\n    //方法二：使用递归，遍历所有的XML文件的结点\n\n    public void XMLNode2() throws DocumentException {\n        //1.创建XML文档的解析器，返回Document对象\n        Document document = new SAXReader().read(new File(\"E:\\\\Program\\\\Java\\\\study\\\\code\\\\Day30\\\\Day30\\\\contact.xml\"));\n\n        //2.获取根节点\n        Element rootElement = document.getRootElement();\n        System.out.println(rootElement.getName());\n\n        //3.调用递归方法,遍历整个XML文件\n        getChildNode(rootElement);\n    }\n\n\n\n    private void getChildNode(Element element){\n        System.out.println(element.getName()); //看当前解析的什么对象\n\n        Iterator<Node> nodeIterator = element.nodeIterator();\n        while (nodeIterator.hasNext()) {\n            Node node = nodeIterator.next();\n\n            if (node instanceof Element){\n                Element node1 = (Element) node;\n                getChildNode(node1);\n            }\n        }\n\n    }\n\n\n    /**\n     * 获取标签\n     */\n    @Test\n    public void XMLElement() throws DocumentException {\n\n        //1.创建XML解析器，获取到Document对象\n        Document document = new SAXReader().read(new File(\"E:\\\\Program\\\\Java\\\\study\\\\code\\\\Day30\\\\Day30\\\\contact.xml\"));\n\n        //2.获取根节点\n        Element rootElement = document.getRootElement();\n\n        //3.获取当前节点下的指定名字的结点，如果有多个名字相同，拿到的是第一个节点\n        Element contact = rootElement.element(\"contact\");\n        System.out.println(contact.attributeValue(\"id\"));\n\n        //4.获取当前结点下指定名字节点的所有子节点迭代器,即能把两个ContactList都拿到，并且用迭代器操作\n        //这里相当于获取两个\n        Iterator<Element> elementIterator = rootElement.elementIterator(\"contact\");\n\n        while (elementIterator.hasNext()) {\n            Element element = elementIterator.next();\n            System.out.println(element.attributeValue(\"id\"));\n        }\n\n        //5.获取当前结点下的所有子节点\n        List<Element> elements = rootElement.elements();\n        for (Element element : elements) {\n            System.out.println(element.getName());\n        }\n    }\n\n\n    /**\n     * 获取属性\n     */\n    @Test\n    public void XMLAttribute() throws DocumentException {\n        //1.读取XML文件，获取Document对象\n        Document document = new SAXReader().read(new File(\"E:\\\\Program\\\\Java\\\\study\\\\code\\\\Day30\\\\Day30\\\\contact.xml\"));\n\n        //获取属性值方式一：\n        //2.获取属性前提：必须获取到属性所在标签的节点（当前只有contact标签有属性）\n        Element element = document.getRootElement().element(\"contact\");\n        String value = element.attributeValue(\"id\"); //所有属性的值都是String类型\n        System.out.println(element.getName() + \":\" + value);\n\n        //获取属性值方式二：\n        Attribute idAttr = element.attribute(\"id\");\n        System.out.println(idAttr.getName() + \":\" + idAttr.getValue());\n\n        //获取属性值方式三：获取指定节点里面所有属性节点的List集合\n        List<Attribute> listAttr = element.attributes();\n        for (Attribute attribute : listAttr) {\n            System.out.println(attribute.getName() + \":\" + attribute.getValue());\n        }\n\n        //获取属性值方式四：获取指定节点里面所有属性节点的迭代器\n        Iterator<Attribute> attributeIterator = element.attributeIterator();\n        while (attributeIterator.hasNext()){\n            Attribute next = attributeIterator.next();\n            System.out.println(next.getName() + \":\" + next.getValue());\n        }\n\n    }\n\n\n    /**\n     * 获取文本结点\n     */\n    @Test\n    public void XMLText() throws DocumentException {\n        //1.读取XML文件，获取Document对象\n        Document document = new SAXReader().read(new File(\"E:\\\\Program\\\\Java\\\\study\\\\code\\\\Day30\\\\Day30\\\\contact.xml\"));\n\n        //2.获取根节点\n        Element rootElement = document.getRootElement();\n\n        Element element = rootElement.element(\"contact\").element(\"name\");\n        System.out.println(element.getName() + \":\" + element.getText());\n\n    }\n}\n\n```\n上面方法测试 Demo 结果：\n```java\nContactList\nnull\ncontact\nnull\ncontact\nnull\nhaha\nnull\nname:张三\n1\n1\n2\ncontact\ncontact\nhaha\ncontact:1\nid:1\nid:1\ntest:1\ntag:2\nid:1\ntest:1\ntag:2\n```\n\nTrueUse.java\n```java\nimport org.dom4j.Document;\nimport org.dom4j.DocumentException;\nimport org.dom4j.Element;\nimport org.dom4j.io.SAXReader;\n\nimport java.io.File;\nimport java.util.ArrayList;\nimport java.util.Iterator;\n\n/**将XML里面的数据读取到Contact对象里面\n * @author GJXAIOU\n * @create 2019-07-27-17:45\n */\npublic class TrueUse {\n    public static void main(String[] args) throws DocumentException {\n        ArrayList<Contact> contacts = new ArrayList<>();\n\n        //获取到XML对应的Document对象\n        Document doc = new SAXReader().read(new File(\"E:\\\\Program\\\\Java\\\\study\\\\code\\\\Day30\\\\Day30\\\\contact.xml\"));\n        Iterator<Element> it = doc.getRootElement().elementIterator(\"contact\"); //拿到根节点下面contact的迭代器\n\n        while (it.hasNext()){\n            Element contactElem = it.next();\n            Integer id = Integer.valueOf(contactElem.attributeValue(\"id\")); //拿到id的值，并将string类型强转为int类型\n            String name = contactElem.elementText(\"name\"); //这里直接拿文本就行\n            char gender = contactElem.elementText(\"gender\").charAt(0);\n            String tel = contactElem.elementText(\"tel\");\n            Integer age = Integer.valueOf(contactElem.elementText(\"age\"));\n            String qq = contactElem.elementText(\"qq\");\n            String email = contactElem.elementText(\"email\");\n\n            Contact contact = new Contact(id, age, gender, tel, qq, name, email);\n            contacts.add(contact);\n\n        }\n\n        //展示数据\n        for (Contact contact : contacts) {\n            System.out.println(contact);\n        }\n\n    }\n}\n\n```\n以上程序结果：\n```java\nContact{id=1, age=18, gender=男, tel='666666', qq='1111111', name='张三', email='1111111@qq.com'}\nContact{id=2, age=17, gender=女, tel='8888888', qq='2222222', name='李四', email='2222222@qq.com'}\n```\n\n\n\n\n\n\n\n",[[1564229351362,["GJX@GJXAIOU",[[-1,1913,"- 官网下载，解压找到 dom4j-XXX.jar \n  - 在 Java 的 Project 中新建文件夹，一般命名为 libs 或者 Lib,然后复制 dom4j-XXX.jar，文件，到该文件夹黏贴；\n  - 右击该包，找到 Build Path - 》 add to build path "]],[1913,2062],[1913,1913]]],[1564229354011,["GJX@GJXAIOU",[[1,1899,"yi"]],[1899,1899],[1901,1901]]],[1564229354777,["GJX@GJXAIOU",[[-1,1899,"yi"]],[1901,1901],[1899,1899]]],[1564229357216,["GJX@GJXAIOU",[[1,1899,"一般 "]],[1899,1899],[1901,1901]]],[1564229359324,["GJX@GJXAIOU",[[1,1901,"借助于"]],[1901,1901],[1904,1904]]],[1564229371092,["GJX@GJXAIOU",[[1,1925,"（）"]],[1925,1925],[1927,1927]]],[1564229372764,["GJX@GJXAIOU",[[1,1926,"一"]],[1926,1926],[1927,1927]]],[1564229925251,["GJX@GJXAIOU",[[1,3831,"☆☆☆"]],[3831,3831],[3834,3834]]],[1564231502615,["GJX@GJXAIOU",[[1,4391,"    \n    "]],[4386,4386],[4395,4395]]],[1564231505846,["GJX@GJXAIOU",[[-1,4376,"\n"]],[4376,4376],[4375,4375]]],[1564231514554,["GJX@GJXAIOU",[[1,4394,"System.out.println(\"***********************************\");"]],[4394,4394],[4452,4452]]],[1564231530205,["GJX@GJXAIOU",[[1,8132,"***********************************\n"]],[8079,8131],[8167,8167]]],[1564231532134,["GJX@GJXAIOU",[[1,8168,"\n"]],[8167,8167],[8168,8168]]],[1564231591854,["GJX@GJXAIOU",[[-1,4781,"        System.out.println(rootElement.getName());"]],[4781,4831],[4781,4781]]],[1564231592383,["GJX@GJXAIOU",[[-1,4782,"\n"]],[4781,4781],[4780,4780]]],[1564231603814,["GJX@GJXAIOU",[[1,4850,"    \n    "]],[4845,4845],[4854,4854]]],[1564231604479,["GJX@GJXAIOU",[[1,4854,"System.out.println(\"***********************************\");"]],[4854,4854],[4912,4912]]],[1564231609367,["GJX@GJXAIOU",[[1,5340,"\n"]],[5338,5338],[5339,5339]]],[1564231609495,["GJX@GJXAIOU",[[1,5341,"\n"]],[5339,5339],[5340,5340]]],[1564231614529,["GJX@GJXAIOU",[[1,4463,"\n"]],[4461,4461],[4462,4462]]],[1564231629209,["GJX@GJXAIOU",[[1,4462,"、、"]],[4462,4462],[4464,4464]]],[1564231630270,["GJX@GJXAIOU",[[-1,4462,"、、"]],[4464,4464],[4462,4462]]],[1564231637581,["GJX@GJXAIOU",[[1,4462,"//------------------------------------------------------------------"]],[4462,4462],[4530,4530]]],[1564231643728,["GJX@GJXAIOU",[[-1,4462,"//--------------------------------------------------\n----------------"]],[4514,4530],[4461,4461]]],[1564231645455,["GJX@GJXAIOU",[[1,4462,"//--------------------------------------------------\n"]],[4461,4461],[4514,4514]]],[1564231648454,["GJX@GJXAIOU",[[1,5394,"//--------------------------------------------------\n"]],[5393,5393],[5446,5446]]],[1564231666022,["GJX@GJXAIOU",[[1,8292,"ContactList\ncontact\nname\ngender\ntel\nage\nqq\nemail\ncontact\nname\ngender\ntel\nage\nqq\nemail\nhaha\n***********************************"]],[8292,8292],[8418,8418]]],[1564232404253,["GJX@GJXAIOU",[[1,8419,"\n"]],[8418,8418],[8419,8419]]],[1564232405408,["GJX@GJXAIOU",[[1,8419,"1\n1\n2\ncontact\ncontact\nhaha\n***********************************"]],[8419,8419],[8481,8481]]],[1564232507574,["GJX@GJXAIOU",[[-1,8482,"name:张三\n1\n1\n2\ncontact\ncontact\nhaha\ncontact:1\nid:1\nid:1\ntest:1\ntag:2\nid:1\ntest:1\ntag:2"]],[8482,8567],[8482,8482]]],[1564232508383,["GJX@GJXAIOU",[[1,8482,"contact:1\nid:1\nid:1\ntest:1\ntag:2\nid:1\ntest:1\ntag:2\n***********************************"]],[8482,8482],[8568,8568]]],[1564232555392,["GJX@GJXAIOU",[[1,8569,"\n"]],[8568,8568],[8569,8569]]],[1564232556102,["GJX@GJXAIOU",[[1,8569,"name:张三"]],[8569,8569],[8576,8576]]]],null,"GJX@GJXAIOU"],["c9b4f429-6228-42ad-b8e6-c572b10e0e5b",1564315485684,"# JavaEEDay31 XML\n\n@toc\n\n## 一、前言\n- HTML：HyperText Markup Language 超文本标记语言 ，不经过任何的编译，浏览器通过标记进行对应的响应；\n\n- CSS： 层级样式表；\n\n- JavaScript： 让页面完成一些动态的特效；\n\nHTML+CSS+JavaScript：用来制作静态网站\n\nHTML 由标签组成，不区分大小写，是 W3C 组织制定的规范，所有的 HTML 标签都是确定的，固定的，不能自己创建，大约 100 多个\n\n## 二、 XML 概念\n\n- XML：Extend Markup Language 可拓展的标记语言\n- XML 也是通过便签来组成语言，但是这些标签程序员可以自定义，但是要符合语法规定，同时标签是严格区分大小写的；\n\n- 通常的使用方式：`<自定义标签>数据</自定义标签>`\n\n- **使用场景**：\n  - 1.**properties 文件**，采用键值对保存的（key - value），用于作为配置文件，例如：Tomcat 服务器配置文件和 Spring、SpringMVC、MyBatis 配置文件\n    - 例如：\n       name = root\n       password = 12345\n     对应的 XML 标签：\n \n```xml\n<User>\n  <name>root</name>\n  <password>12345</password>\n</User>\n```\n\n2.**作为小型数据库**，是数据的载体；\n\n## 三、XML 语法规范\n\n### （一）文档声明\n这是固定的格式：\n`<?xml version = \"1.0\" encoding = \"utf-8\"？>`\n其中：version： XML 使用的版本号\nencoding: 解析当前 XML 文件使用的字符编码\n\n### （二）标签语法\n- 基本格式：`<自定义标签名>数据</自定义标签名>`\n- 语法规范：\n  - 结束标签必须有`/`进行标记；\n  - `<student />` 为空标签，没有内容，一般用于占位；\n  - XML 文件中使用的自定义标签是严格区分大小写的；\n  - XML 文件中使用的标签必须一一匹配，不能交叉嵌套；\n  - XML 文件中标签不能存在空格；\n  - XML 文件中使用的自定义标签不能使用数字开头；\n  - XML 文件中有且只能有一个根节点；☆☆☆\n\n\n\n\n### （三）属性 \n格式 示例：`<student name = \"nnn\"> </student>`\n注意：\n- 属性必须使用引号包含，尽量使用双引号；\n- 一个标签内可以使用多个属性，但是属性的名字不能相同；\n\n### （四）注释\n格式：`<!-- 这里是注释-->`\n- 其他注释汇总：\n  - Java： `//` `/* */` `/** */ `单行注释、多行注释、文档注释\n  - HTML: `<!-- -->`\n  - CSS :`/* */`\n  - JS: `//` `/* */`\n  - JSP: `<%  %>`\n\n### （五）转义字符\nXML 中有很多特殊含义的字符，例如：<> ? “”\n对应的转义字符：\n|   字符|   转义字符   |  描述   |\n|--------|-------|-----------   |\n|  &     |`&amp;`  |  和         |\n|   <    |`&lt;`   | 小于号      |\n|   >    |`&gt;`   |  大于号     |\n|   \"    |`&quot;` |   双引号    |\n|   '    |`&apos;` | 单引号      |\n\n\n\n## 三、XML 解析\n将 XML 文件解析到 Java 中\n\n![DOM]($resource/DOM.jpg)\n\n- XML 文件解析方式：\n  - DOM 解析；\n  - SAX 解析；\n- XML 解析常用的工具：\n  - DOM 解析：针对 XML 文件，可读可写可修改\n    - JAXP（sun 公司官方，不好用）\n    - JDOM（非官方，还行）\n    - Dom4j(非官方，好用) ☆☆是三大框架默认使用功能 XML 解析方式；\n  - SAX 解析：针对 XML 文件，只可读\n    - SAX 解析工具（官方，常用于 Android 开发），了解即可； \n- 一般借助于 Dom4j 工具使用：\n  \n\n### （一）XML 解析示例\n下面代码分为三个文件\n- contact.xml  :需要解析的 xml 文件\n- ParsingElementNode.java :Dom4j 中常见方法是的使用 Demo\n- TrueUse.java :真正的用于解析 contact.xml 文件的代码，即实现 XML 文件解析到 Java 中；\n\ncontact.xml\n```xml\n<?xml version = \"1.0\" encoding = \"utf-8\" ?>\n\n\t\n<ContactList>\n\t\t<contact id = \"1\" test = \"1\" tag = \"2\">\n\t\t\t<name>张三</name>\n\t\t\t<gender>男</gender>\n\t\t\t<tel>666666</tel>\n\t\t\t<age>18</age>\n\t\t\t<qq>1111111</qq>\n\t\t\t<email>1111111@qq.com</email>\n\t\t</contact>\n\t\t<contact id = \"2\">\n\t\t\t<name>李四</name>\n\t\t\t<gender>女</gender>\n\t\t\t<tel>8888888</tel>\n\t\t\t<age>17</age>\n\t\t\t<qq>2222222</qq>\n\t\t\t<email>2222222@qq.com</email>\n\t    </contact>\n\t<haha></haha>\n\t\n</ContactList>\n```\n\nParsingElementNode.java\n```java\nimport org.dom4j.*;\nimport org.dom4j.io.SAXReader;\nimport org.junit.jupiter.api.Test;\n\nimport java.io.File;\nimport java.util.Iterator;\nimport java.util.List;\n\n/**获取XML文件的结点信息，包括：\n * Node结点；\n * Element结点\n * Attribute结点\n * text文本结点\n *\n * @author GJXAIOU\n * @create 2019-07-27-16:19\n */\npublic class ParsingElementNode {\n    //获取节点信息，最原始的方式\n    @Test\n    public void XMLNode() throws DocumentException {\n\n        /*\n        //1.创建一个XML文件的解析器\n        SAXReader saxReader = new SAXReader();\n\n        //2.读取XML文件，得到XML文件的Document对象\n        Document read = saxReader.read(new File(\"E:\\\\Program\\\\Java\\\\study\\\\code\\\\Day30\\\\Day30\\\\contact.xml\"));\n         */\n\n        //1.创建XML文档的解析器，返回Document对象(将上面代码写成一行如下)\n        Document document = new SAXReader().read(new File(\"E:\\\\Program\\\\Java\\\\study\\\\code\\\\Day30\\\\Day30\\\\contact.xml\"));\n\n        //示例：nodeIterator // 得到当前结点下的所有子节点，不能跨界（不能往里读）\n        Iterator<Node> nodeIterator = document.nodeIterator();\n\n        //之前使用的Iterator迭代器中方法都可以使用，因为它是一个接口： hasNext()   next() remove()\n        while (nodeIterator.hasNext()){\n            Node node = nodeIterator.next(); //得到一个Node类型的结点，所有的XML文件结点中都是Node结点\n            String nodeName = node.getName(); //获取节点的名字\n            System.out.println(nodeName); //☆☆☆得到的是根节点名称\n\n\n            /*\n            以上的输出显示：在XML文件中，有一些标签是没有子节点的，这些标签也不是Element标签\n            这里需要进行过滤，如果是Element标签就继续解析\n            使用：Instanceof  作用是判断当前对象是不是指定类的对象；\n\n             */\n\n            //如果是一个标签结点，我们就继续解析；\n            if (node instanceof Element){\n                Element ele = (Element) node;\n\n                Iterator<Node> it2 = ele.nodeIterator();\n\n                while (it2.hasNext()){\n                    Node node2 = it2.next();\n                    System.out.println(node2.getName());\n                }\n            }\n        }\n        System.out.println(\"***********************************\");\n    }\n\n\n\n//--------------------------------------------------\n\n    //方法二：使用递归，遍历所有的XML文件的结点\n\n    public void XMLNode2() throws DocumentException {\n        //1.创建XML文档的解析器，返回Document对象\n        Document document = new SAXReader().read(new File(\"E:\\\\Program\\\\Java\\\\study\\\\code\\\\Day30\\\\Day30\\\\contact.xml\"));\n\n        //2.获取根节点\n        Element rootElement = document.getRootElement();\n\n        //3.调用递归方法,遍历整个XML文件\n        getChildNode(rootElement);\n        System.out.println(\"***********************************\");\n    }\n\n\n\n    private void getChildNode(Element element){\n        System.out.println(element.getName()); //看当前解析的什么对象\n\n        Iterator<Node> nodeIterator = element.nodeIterator();\n        while (nodeIterator.hasNext()) {\n            Node node = nodeIterator.next();\n\n            if (node instanceof Element){\n                Element node1 = (Element) node;\n                getChildNode(node1);\n            }\n        }\n\n    }\n\n\n\n//--------------------------------------------------\n\n    /**\n     * 获取标签\n     */\n    @Test\n    public void XMLElement() throws DocumentException {\n\n        //1.创建XML解析器，获取到Document对象\n        Document document = new SAXReader().read(new File(\"E:\\\\Program\\\\Java\\\\study\\\\code\\\\Day30\\\\Day30\\\\contact.xml\"));\n\n        //2.获取根节点\n        Element rootElement = document.getRootElement();\n\n        //3.获取当前节点下的指定名字的结点，如果有多个名字相同，拿到的是第一个节点\n        Element contact = rootElement.element(\"contact\");\n        System.out.println(contact.attributeValue(\"id\"));\n\n        //4.获取当前结点下指定名字节点的所有子节点迭代器,即能把两个ContactList都拿到，并且用迭代器操作\n        //这里相当于获取两个\n        Iterator<Element> elementIterator = rootElement.elementIterator(\"contact\");\n\n        while (elementIterator.hasNext()) {\n            Element element = elementIterator.next();\n            System.out.println(element.attributeValue(\"id\"));\n        }\n\n        //5.获取当前结点下的所有子节点\n        List<Element> elements = rootElement.elements();\n        for (Element element : elements) {\n            System.out.println(element.getName());\n        }\n    }\n\n\n    /**\n     * 获取属性\n     */\n    @Test\n    public void XMLAttribute() throws DocumentException {\n        //1.读取XML文件，获取Document对象\n        Document document = new SAXReader().read(new File(\"E:\\\\Program\\\\Java\\\\study\\\\code\\\\Day30\\\\Day30\\\\contact.xml\"));\n\n        //获取属性值方式一：\n        //2.获取属性前提：必须获取到属性所在标签的节点（当前只有contact标签有属性）\n        Element element = document.getRootElement().element(\"contact\");\n        String value = element.attributeValue(\"id\"); //所有属性的值都是String类型\n        System.out.println(element.getName() + \":\" + value);\n\n        //获取属性值方式二：\n        Attribute idAttr = element.attribute(\"id\");\n        System.out.println(idAttr.getName() + \":\" + idAttr.getValue());\n\n        //获取属性值方式三：获取指定节点里面所有属性节点的List集合\n        List<Attribute> listAttr = element.attributes();\n        for (Attribute attribute : listAttr) {\n            System.out.println(attribute.getName() + \":\" + attribute.getValue());\n        }\n\n        //获取属性值方式四：获取指定节点里面所有属性节点的迭代器\n        Iterator<Attribute> attributeIterator = element.attributeIterator();\n        while (attributeIterator.hasNext()){\n            Attribute next = attributeIterator.next();\n            System.out.println(next.getName() + \":\" + next.getValue());\n        }\n\n    }\n\n\n    /**\n     * 获取文本结点\n     */\n    @Test\n    public void XMLText() throws DocumentException {\n        //1.读取XML文件，获取Document对象\n        Document document = new SAXReader().read(new File(\"E:\\\\Program\\\\Java\\\\study\\\\code\\\\Day30\\\\Day30\\\\contact.xml\"));\n\n        //2.获取根节点\n        Element rootElement = document.getRootElement();\n\n        Element element = rootElement.element(\"contact\").element(\"name\");\n        System.out.println(element.getName() + \":\" + element.getText());\n\n    }\n}\n\n```\n上面方法测试 Demo 结果：\n```java\nContactList\nnull\ncontact\nnull\ncontact\nnull\nhaha\nnull\n***********************************\nContactList\ncontact\nname\ngender\ntel\nage\nqq\nemail\ncontact\nname\ngender\ntel\nage\nqq\nemail\nhaha\n***********************************\n1\n1\n2\ncontact\ncontact\nhaha\n***********************************\ncontact:1\nid:1\nid:1\ntest:1\ntag:2\nid:1\ntest:1\ntag:2\n***********************************\nname:张三\n```\n\nTrueUse.java\n```java\nimport org.dom4j.Document;\nimport org.dom4j.DocumentException;\nimport org.dom4j.Element;\nimport org.dom4j.io.SAXReader;\n\nimport java.io.File;\nimport java.util.ArrayList;\nimport java.util.Iterator;\n\n/**将XML里面的数据读取到Contact对象里面\n * @author GJXAIOU\n * @create 2019-07-27-17:45\n */\npublic class TrueUse {\n    public static void main(String[] args) throws DocumentException {\n        ArrayList<Contact> contacts = new ArrayList<>();\n\n        //获取到XML对应的Document对象\n        Document doc = new SAXReader().read(new File(\"E:\\\\Program\\\\Java\\\\study\\\\code\\\\Day30\\\\Day30\\\\contact.xml\"));\n        Iterator<Element> it = doc.getRootElement().elementIterator(\"contact\"); //拿到根节点下面contact的迭代器\n\n        while (it.hasNext()){\n            Element contactElem = it.next();\n            Integer id = Integer.valueOf(contactElem.attributeValue(\"id\")); //拿到id的值，并将string类型强转为int类型\n            String name = contactElem.elementText(\"name\"); //这里直接拿文本就行\n            char gender = contactElem.elementText(\"gender\").charAt(0);\n            String tel = contactElem.elementText(\"tel\");\n            Integer age = Integer.valueOf(contactElem.elementText(\"age\"));\n            String qq = contactElem.elementText(\"qq\");\n            String email = contactElem.elementText(\"email\");\n\n            Contact contact = new Contact(id, age, gender, tel, qq, name, email);\n            contacts.add(contact);\n\n        }\n\n        //展示数据\n        for (Contact contact : contacts) {\n            System.out.println(contact);\n        }\n\n    }\n}\n\n```\n以上程序结果：\n```java\nContact{id=1, age=18, gender=男, tel='666666', qq='1111111', name='张三', email='1111111@qq.com'}\nContact{id=2, age=17, gender=女, tel='8888888', qq='2222222', name='李四', email='2222222@qq.com'}\n```\n\n\n\n\n\n\n\n",[[1564315449567,["GJX@GJXAIOU",[[1,0,"\n"]],[0,0],[1,1]]],[1564315450907,["GJX@GJXAIOU",[[1,0,"-"]],[0,0],[1,1]]],[1564315451034,["GJX@GJXAIOU",[[1,0,"-"]],[1,1],[2,2]]],[1564315451155,["GJX@GJXAIOU",[[1,2,"-"]],[2,2],[3,3]]],[1564315451194,["GJX@GJXAIOU",[[1,4,"\n---\n\n"]],[3,3],[4,4]]],[1564315451761,["GJX@GJXAIOU",[[1,5,"\n"]],[4,4],[5,5]]],[1564315452423,["GJX@GJXAIOU",[[-1,5,"\n"]],[5,5],[4,4]]],[1564315454417,["GJX@GJXAIOU",[[1,4,"tags:"]],[4,4],[9,9]]],[1564315455008,["GJX@GJXAIOU",[[1,10,"\n"]],[9,9],[10,10]]],[1564315457035,["GJX@GJXAIOU",[[1,10,"- XML"]],[10,10],[15,15]]]],null,"GJX@GJXAIOU"]]}