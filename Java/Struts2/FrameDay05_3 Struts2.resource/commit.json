{"compress":true,"commitItems":[["ff27d27d-a865-4561-be6e-35bfce2827a0",1570069791980,"",[[1570069759332,["GJX@GJXAIOU",[[1,0,"# FrameDay05_3 Struts2\n\n\n\n"]],[0,0],[25,25]]],[1570069767021,["GJX@GJXAIOU",[[1,25,"# Struts2_day03\n\n## 上节内容\n\n| \n\n**1** **在action****获取表单提交数据**\n\n**（1****）使用ActionContext****类获取**\n\n**（2****）使用ServletActionContext****类获取**\n\n**（3****）接口注入**\n\n**2** **结果配置**\n\n**（1****）全局结果页面和局部结果页面**\n\n**（2****）result****标签type****属性**\n\n**- type****属性值：**\n\n**--** **默认值是dispatcher****做转发**\n\n**-- redirect****做重定向**\n\n**-- chain****转发到action**\n\n**-- redirectAction****重定向到action**\n\n**3 struts2****提供获取表单数据方式**\n\n**（1****）属性封装**\n\n**（2****）模型驱动封装**\n\n**（3****）表达式封装**\n\n**4 struts2****获取数据封装到集合中**\n\n**5** **使用模型驱动和属性封装注意问题：**\n\n**（1****）不能同时使用对同一个表单进行数据操作**\n\n**6** **表达式封装和模型驱动比较**\n\n**（1****）相同点：可以把数据封装到实体类对象里面**\n\n**（2****）不同的：表达式封装可以封装到多个实体类对象里面**\n\n |\n\n## 今天内容\n\n| \n\n**1 ognl****概述**\n\n**2 ognl****入门案例**\n\n**3** **什么是值栈**\n\n**（1****）servlet****和action****区别**\n\n**（2****）值栈存储位置**\n\n**-** **每个action****对象里面有一个值栈对象**\n\n**-** **值栈对象里面有action****引用**\n\n**4** **如何获取值栈对象**\n\n**5** **值栈内部结构**\n\n**（1****）root****：list****集合**\n\n**（****2****）****context****：****map****集合**\n\n**6** **向值栈放数据**\n\n**（1****）s:debug****标签**\n\n**（2****）向值栈放字符串**\n\n**（3****）向值栈放对象**\n\n**（4****）向值栈放list****集合**\n\n**- set****方法**\n\n**- push****方法**\n\n**-** **定义变量，get****方法**\n\n**7** **从值栈获取数据**\n\n**（1****）从值栈获取字符串**\n\n**（2****）从值栈获取对象**\n\n**（3****）从值栈获取list****集合**\n\n**- s:iterator****标签使用**\n\n**8 EL****表达式获取值栈数据**\n\n**（1****）增强request****里面getAttribute****方法**\n\n**9 ognl****表达式 #****、%****使用**\n\n |\n\n## OGNL概述\n\n| \n\n**1** **之前****web****阶段，学习过****EL****表达式，****EL****表达式在****jsp****中获取域对象里面的值**\n\n**2 OGNL****是一种表达式，这个表达式功能更加强大，**\n\n**（****1****）一般用于在****struts2****里面操作值栈数据**\n\n**（****2****）一般把****ognl****在****struts2****操作：和****struts2****标签一起使用来操作值栈**\n\n**3 OGNL****不是****struts2****的一部分，是一个单独的项目，经常和****struts2****一起使用**\n\n**（****1****）使用****ognl****时候首先导入****jar****包，****struts2****里面已经提供****jar****包；**\n\n |\n\n## OGNL入门案例\n\n| \n\n**1** **使用****ognl+struts2****标签实现计算字符串长度**\n\n**![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image002.jpg)**\n\n**（****1****）在****java****代码中，调用字符串****.length();**\n\n**2** **使用****struts2****标签【上面的实现】**\n\n**（****1****）之前使用****jstl****时候，导入****jar****包之外，在****jsp****页面中引入标签库**\n\n**使用****struts2****标签时候，也需要在****jsp****中引入标签库**\n\n**![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image004.jpg)****（****ognl.jsp****最上面中）**\n\n**（****2****）使用****struts2****标签实现操作（****ognl.jsp****中****body** **中）**\n\n**![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image006.jpg)**\n\n |\n\n## 什么是值栈\n\n| \n\n**1** **之前在****web****阶段，在****servlet****里面进行操作，把数据放到域对象里面，在页面中使用****el****表达式获取到，域对象主要作用：在一定范围内存值和取值；**\n\n**2** **在****struts2****里面提供本身一种存储机制，类似于域对象，是值栈，可以存值和取值**\n\n**（****1****）可以这样做：在****action****里面把数据放到值栈里面，在页面中获取到值栈数据**\n\n**3 servlet****和****action****区别**\n\n**（****1****）****Servlet****：默认在第一次访问时候创建，只创建一次，单实例对象**\n\n**（****2****）****Action****：访问时候创建，每次访问****action****时候，都会创建****action****对象，创建多次，多实例对象**\n\n**4** **值栈存储位置**\n\n**（****1****）每次访问****action****时候，都会创建****action****对象，**\n\n**（****2****）在每个****action****对象里面都会有一个值栈对象（只有一个）**\n\n![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image008.jpg)\n\n |\n\n## 获取值栈对象（UserAction中代码）\n\n| \n\n**1** **获取值栈对象有多种方式**\n\n**（****1****）常用方式：使用****ActionContext****类里面的方法得到值栈对象**\n\n![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image010.jpg)\n\n**2** **验证每个****action****对象中只有一个值栈对象**\n\n![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image012.jpg)\n\n![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image014.jpg)\n\n**![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image016.jpg)**\n\n |\n\n## 值栈内部结构\n\n| \n\n**1** **值栈分为两部分：**\n\n**第一部分** **root****，结构是本质上是****list****集合**\n\n**（****1****）一般操作都是****root****里面数据**\n\n![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image018.jpg)\n\n**第二部分** **context****，结构本质上是****map****集合**\n\n![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image020.jpg)\n\n（上面红色图为 Context中的结构）应为三个域对象中的的name 值相同，使用attr 获取域对象中的值，获取域对象范围最小（request域）的那个里面的值；\n\n**2 struts2****里面标签** **s:debug****，使用这个标签可以查看值栈结构和存储值**\n\n**（****1****）访问****action****，执行****action****的方法有返回值，配置返回值到****jsp****页面中，在****jsp****页面中使用这个标签（****ValueStackDemoActon****和** **struts****配置，****valueStack.jsp****（要引入标签库），****body****中写：****<s:debug></s:debug>****）**\n\n访问结果：![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image022.jpg)\n\n**点击超链接可以看到结构，下面是** **root** **结构**\n\n![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image024.jpg)\n\n**（****2****）在****action****没有做任何操作，栈顶元素就是** **action****引用**\n\n![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image026.jpg)\n\n**- action****对象里面有值栈对象**\n\n**-** **值栈对象里面有****action****引用，不是真正的** **action****对象；**\n\n |\n\n## 向值栈放数据\n\n| \n\n- **向值栈放数据多种方式**\n\n**第一种：首先获取值栈对象，调用值栈对象里面的** **set** **方法**\n\n![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image028.jpg)\n\n![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image030.jpg)这是栈顶元素了；root是 list结构，但是 list中可以放入一个 map集合，用来存储使用 set方法设置的值；\n\n**第二种：获取值栈对象，调用值栈对象里面的** **push****方法**\n\n![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image032.jpg)\n\n**![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image034.jpg)****这是栈顶元素，上面的** **set****是上一部分的；**\n\n**第三种：在****action****定义变量，生成变量的****get****方法（最常用），因为直接在值栈中放数据，不需要像上面的需要分配空间。**\n\n**![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image036.jpg)**\n\n![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image038.jpg)\n\n |\n\n### 向值栈放对象\n\n| \n\n**1** **实现步骤**\n\n**第一步****定义对象变量**\n\n**第二步****生成变量的****get****方法**\n\n**第三步****在执行的方法里面向对象中设置值**\n\nUser方法见代码，下面是ObjectDemoAction.java代码![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image040.jpg)\n\n![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image042.jpg)\n\n |\n\n### 向值栈放list集合\n\n| \n\n**第一步****定义****list****集合变量**\n\n**第二步****生成变量的****get****方法**\n\n**第三步****在执行的方法里面向****list****集合设置值**\n\n**代码见** **ListDemoAction.java****以及** **User.java****，以及和上面一样在** **struts.xml** **中配置，****jsp****中使用** **debug****。**\n\n![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image044.jpg)\n\n![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image046.jpg)\n\n |\n\n## 从值栈获取数据\n\n| \n\n**1** **使用****struts2****的标签****+ognl****表达式获取值栈数据**\n\n**（1****）<s:property value=”ognl****表达式”/>**\n\n |\n\n### 获取字符串\n\n| \n\n**1** **向值栈放字符串**\n\n![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image048.jpg)\n\n**2** **在****jsp****使用****struts2****标签****+ognl****表达式获取**\n\n**![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image050.jpg)**\n\n |\n\n### 获取对象\n\n| \n\n**1** **向值栈放对象**\n\n**![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image052.jpg)**\n\n**2** **在页面中获取值**\n\n**![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image054.jpg)**\n\n |\n\n### 获取list集合\n\n| \n\n**第一种方式：**\n\n![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image056.jpg)\n\n**第二种方式：****value****值为** **List****对象名；**\n\n![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image058.jpg)\n\n**第三种方式：最常用**\n\n![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image060.jpg)\n\n因为值是从 Context中取；\n\n |\n\n### 其他操作\n\n| \n\n**1** **使用****set****方法向值栈放数据，获取方法：**\n\n![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image062.jpg)\n\n![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image064.jpg)\n\n**2** **使用****push****方法向值栈放数据，获取方法：**\n\n![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image066.jpg)\n\n**（****1****）使用****push****方法设置值，没有名称，只有设置的值**\n\n**（****2****）向值栈放数据，会把向值栈放数据存到数组里面，数组名称** **top****，根据数组获取值**\n\n![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image068.jpg)\n\n |\n\n## EL表达式获取值栈数据（为什么）\n\n| \n\n**1 EL****表达式获取域对象值** **ValueStack.jsp**\n\n**首先加上标签头：`****<%@** **taglib** **uri=\"****http://java.sun.com/jsp/jstl/core****\" prefix=\"****c****\"%>****`**\n\n**然后使用 foreach**\n\n **<!--** **使用****foreach****标签****+el****表达式获取值栈****list****集合数据** **-->**\n\n **<c:forEach items=\"${list }\" var=\"user\">**\n\n **${user.username }**\n\n **${user.password }**\n\n **${user.address }**\n\n **<br/>**\n\n **</c:forEach>**\n\n**2** **向域对象里面放值使用****setAttribute****方法，获取值使用****getAttribute****方法**\n\n**3** **底层增强****request****对象里面的方法：****getAttribute****方法**\n\n**（****1****）首先从****request****域获取值，如果获取到，直接返回**\n\n**（****2****）如果从****request****域获取不到值，到值栈中把值获取出来，把值放到域对象里面**\n\n**4** **查看源代码（****web.xml****中过滤器点击进入）**\n\n![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image070.jpg)\n\n![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image072.jpg)\n\n |\n\n## OGNL的#、%使用\n\n### #使用\n\n| \n\n**1** **使用****#****获取****context****里面数据**\n\n![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image073.jpg)\n\n**2** **演示****#** **操作**\n\n**（****1****）向****request****域放值（见****ContextAction.java****）**\n\n**（****2****）在页面中使用****ognl****获取**\n\n![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image075.jpg)\n\n |\n\n### %使用\n\n| \n\n**1** **在****struts2****标签中表单标签**\n\n**（****1****）在****struts2****标签里面使用****ognl****表达式，如果直接在****struts2****表单标签里面使用****ognl****表达式不识别，只有****%****之后才会识别。**\n\n![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image077.jpg)\n\n |\n\n## 案例-列表功能改造（值栈）\n\n| \n\n![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image079.jpg)\n\n![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image081.jpg)\n\n |"]],[25,25],[9378,9378]]],[1570069794000,["GJX@GJXAIOU",[[-1,25,"# Struts2_day03"]],[25,40],[25,25]]],[1570069794402,["GJX@GJXAIOU",[[-1,26,"\n"]],[25,25],[24,24]]],[1570069796040,["GJX@GJXAIOU",[[-1,26,"## "]],[26,29],[26,26]]],[1570069797992,["GJX@GJXAIOU",[[1,26,"**"],[1,30,"**"]],[26,30],[26,34]]],[1570069811284,["GJX@GJXAIOU",[[-1,35,"\n| \n\n**"],[-1,43,"**"],[-1,46,"**"],[-1,55,"****"],[-1,67,"**"],[-1,71,"**"],[-1,75,"****"],[-1,95,"****"],[-1,102,"**"],[-1,106,"**"],[-1,110,"****"],[-1,137,"****"],[-1,144,"**"],[-1,148,"**"],[-1,152,"****"],[-1,161,"**"],[-1,165,"**"],[-1,168,"**"],[-1,171,"**"],[-1,177,"**"],[-1,181,"**"],[-1,185,"****"],[-1,203,"**"],[-1,207,"**"],[-1,211,"****"],[-1,222,"****"],[-1,232,"****"],[-1,238,"**"],[-1,242,"**"],[-1,250,"****"],[-1,258,"**"],[-1,262,"**"],[-1,266,"**"],[-1,269,"**"],[-1,285,"****"],[-1,292,"**"],[-1,296,"**"],[-1,309,"****"],[-1,317,"**"],[-1,321,"**"],[-1,331,"****"],[-1,344,"**"],[-1,348,"**"],[-1,367,"****"],[-1,381,"**"],[-1,385,"**"],[-1,396,"****"],[-1,410,"**"],[-1,414,"**"],[-1,418,"****"],[-1,427,"**"],[-1,431,"**"],[-1,435,"****"],[-1,446,"**"],[-1,450,"**"],[-1,454,"****"],[-1,464,"**"],[-1,468,"**"],[-1,479,"****"],[-1,493,"**"],[-1,497,"**"],[-1,500,"**"],[-1,503,"**"],[-1,521,"**"],[-1,525,"**"],[-1,529,"****"],[-1,552,"**"],[-1,556,"**"],[-1,559,"**"],[-1,562,"**"],[-1,576,"**"],[-1,580,"**"],[-1,584,"****"],[-1,608,"**"],[-1,612,"**"],[-1,616,"****"],[-1,644,"**\n\n |\n"]],[35,651],[441,441]]],[1570069815608,["GJX@GJXAIOU",[[-1,53,"\n"]],[53,53],[52,52]]],[1570069816407,["GJX@GJXAIOU",[[-1,75,"\n"]],[75,75],[74,74]]],[1570069817074,["GJX@GJXAIOU",[[-1,104,"\n"]],[104,104],[103,103]]],[1570069818095,["GJX@GJXAIOU",[[-1,120,"\n"]],[120,120],[119,119]]],[1570069818735,["GJX@GJXAIOU",[[-1,137,"\n"]],[137,137],[136,136]]],[1570069826111,["GJX@GJXAIOU",[[-1,155,"\n"]],[155,155],[154,154]]],[1570069829080,["GJX@GJXAIOU",[[1,155,"  "]],[155,155],[157,157]]],[1570069831265,["GJX@GJXAIOU",[[-1,168,"\n"]],[168,168],[167,167]]],[1570069832888,["GJX@GJXAIOU",[[-1,189,"\n"]],[189,189],[188,188]]],[1570069833763,["GJX@GJXAIOU",[[-1,205,"\n"]],[205,205],[204,204]]],[1570069834665,["GJX@GJXAIOU",[[-1,223,"\n"]],[223,223],[222,222]]],[1570069837751,["GJX@GJXAIOU",[[-1,169,"-"]],[168,169],[168,168]]],[1570069839184,["GJX@GJXAIOU",[[-1,189,"-"]],[188,189],[188,188]]],[1570069841336,["GJX@GJXAIOU",[[-1,204,"-"]],[204,204],[203,203]]],[1570069842311,["GJX@GJXAIOU",[[-1,221,"-"]],[221,221],[220,220]]],[1570069845240,["GJX@GJXAIOU",[[1,168,"  "],[1,188,"  "],[1,203,"  "],[1,220,"  "]],[168,246],[168,254]]],[1570069845903,["GJX@GJXAIOU",[[1,170,"  "],[1,190,"  "],[1,209,"  "],[1,226,"  "]],[168,254],[168,262]]],[1570069851616,["GJX@GJXAIOU",[[-1,113,"2"]],[113,114],[113,113]]],[1570069852141,["GJX@GJXAIOU",[[1,113,"-"]],[113,113],[114,114]]],[1570069853880,["GJX@GJXAIOU",[[-1,35,"1 "]],[35,37],[35,35]]],[1570069854717,["GJX@GJXAIOU",[[1,35,"- "]],[35,35],[37,37]]],[1570069861768,["GJX@GJXAIOU",[[-1,264,"3 "]],[264,266],[264,264]]],[1570069862813,["GJX@GJXAIOU",[[1,264,"- "]],[264,264],[266,266]]],[1570069866067,["GJX@GJXAIOU",[[1,273," "]],[273,273],[274,274]]],[1570069870912,["GJX@GJXAIOU",[[-1,285,"\n"]],[285,285],[284,284]]],[1570069871702,["GJX@GJXAIOU",[[-1,293,"\n"]],[293,293],[292,292]]],[1570069872368,["GJX@GJXAIOU",[[-1,303,"\n"]],[303,303],[302,302]]],[1570069874408,["GJX@GJXAIOU",[[-1,303,"（3）"]],[303,306],[303,303]]],[1570069875563,["GJX@GJXAIOU",[[-1,293,"（2）"]],[293,296],[293,293]]],[1570069877503,["GJX@GJXAIOU",[[-1,285,"（1）"]],[285,288],[285,285]]],[1570069882024,["GJX@GJXAIOU",[[1,285,"- "],[1,290,"- "],[1,297,"- "]],[285,303],[287,309]]],[1570069882641,["GJX@GJXAIOU",[[1,285,"  "],[1,292,"  "],[1,301,"  "]],[287,309],[289,315]]],[1570069891203,["GJX@GJXAIOU",[[-1,316,"4"]],[316,317],[316,316]]],[1570069891496,["GJX@GJXAIOU",[[1,316,"-"]],[316,316],[317,317]]],[1570069892816,["GJX@GJXAIOU",[[-1,337,"5"]],[338,338],[337,337]]],[1570069893411,["GJX@GJXAIOU",[[1,337,"-"]],[337,337],[338,338]]],[1570069895192,["GJX@GJXAIOU",[[-1,357,"（1）"]],[357,360],[357,357]]],[1570069895600,["GJX@GJXAIOU",[[-1,356,"\n"]],[357,357],[356,356]]],[1570069898107,["GJX@GJXAIOU",[[-1,376,"6"]],[376,377],[376,376]]],[1570069899055,["GJX@GJXAIOU",[[1,376,"-"]],[376,376],[377,377]]],[1570069901488,["GJX@GJXAIOU",[[-1,392,"（1）"]],[392,395],[392,392]]],[1570069901938,["GJX@GJXAIOU",[[-1,391,"\n"]],[392,392],[391,391]]],[1570069903222,["GJX@GJXAIOU",[[1,391,"- "]],[391,391],[393,393]]],[1570069905435,["GJX@GJXAIOU",[[-1,413,"\n（2"]],[413,416],[413,413]]],[1570069905752,["GJX@GJXAIOU",[[-1,412,"\n"]],[413,413],[412,412]]],[1570069907715,["GJX@GJXAIOU",[[-1,412,"）"]],[413,413],[412,412]]],[1570069909763,["GJX@GJXAIOU",[[1,412,"\n"]],[412,412],[413,413]]],[1570069910331,["GJX@GJXAIOU",[[1,413,"- "]],[413,413],[415,415]]],[1570069912681,["GJX@GJXAIOU",[[-1,417,"的"]],[418,418],[417,417]]],[1570069913331,["GJX@GJXAIOU",[[1,417,"d"]],[417,417],[418,418]]],[1570069913391,["GJX@GJXAIOU",[[1,417," "]],[418,418],[419,419]]],[1570069913695,["GJX@GJXAIOU",[[1,419,"ain"]],[419,419],[422,422]]],[1570069914469,["GJX@GJXAIOU",[[-1,417," dain"]],[422,422],[417,417]]],[1570069917862,["GJX@GJXAIOU",[[1,417,"点"]],[417,417],[418,418]]],[1570069919746,["GJX@GJXAIOU",[[1,391,"  "]],[396,396],[398,398]]],[1570069920418,["GJX@GJXAIOU",[[1,415,"  "]],[421,421],[423,423]]],[1570069923321,["GJX@GJXAIOU",[[1,443,"\n"]],[443,443],[444,444]]],[1570069923435,["GJX@GJXAIOU",[[1,444,"\n"]],[444,444],[445,445]]],[1570069923608,["GJX@GJXAIOU",[[1,445,"\n"]],[445,445],[446,446]]],[1570069926074,["GJX@GJXAIOU",[[-1,446,"## "]],[446,449],[446,446]]],[1570069928457,["GJX@GJXAIOU",[[1,446,"**"],[1,450,"**"]],[446,450],[446,454]]],[1570069937935,["GJX@GJXAIOU",[[-1,468,"****"]],[468,472],[468,468]]],[1570069953552,["GJX@GJXAIOU",[[-1,456,"| \n\n**"],[-1,470,"**"],[-1,474,"**"],[-1,482,"****"],[-1,490,"**"],[-1,494,"**"],[-1,497,"**"],[-1,500,"**"],[-1,507,"**"],[-1,511,"**"],[-1,515,"****"],[-1,527,"****"],[-1,538,"****"],[-1,544,"**"],[-1,548,"**"],[-1,552,"****"],[-1,563,"**"],[-1,567,"**"],[-1,570,"**"],[-1,573,"**"],[-1,583,"****"],[-1,598,"**"],[-1,602,"**"],[-1,605,"**"],[-1,608,"**"],[-1,623,"****"],[-1,629,"**"],[-1,633,"**"],[-1,636,"**"],[-1,639,"**"],[-1,649,"**"],[-1,653,"**"],[-1,656,"**"],[-1,659,"**"],[-1,667,"**"],[-1,671,"**"],[-1,675,"****"],[-1,684,"****"],[-1,693,"****"],[-1,699,"**"],[-1,703,"**"],[-1,706,"****"],[-1,711,"****"],[-1,716,"****"],[-1,727,"****"],[-1,732,"****"],[-1,739,"****"],[-1,745,"**"],[-1,749,"**"],[-1,752,"**"],[-1,755,"**"],[-1,763,"**"],[-1,767,"**"],[-1,771,"****"],[-1,783,"****"],[-1,789,"**"],[-1,793,"**"],[-1,797,"****"],[-1,809,"**"],[-1,813,"**"],[-1,817,"****"],[-1,828,"**"],[-1,832,"**"],[-1,836,"****"],[-1,849,"****"],[-1,855,"**"],[-1,859,"**"],[-1,866,"****"],[-1,872,"**"],[-1,876,"**"],[-1,884,"****"],[-1,890,"**"],[-1,894,"**"],[-1,897,"**"],[-1,900,"**"],[-1,910,"****"],[-1,916,"**"],[-1,920,"**"],[-1,923,"**"],[-1,926,"**"],[-1,935,"**"],[-1,939,"**"],[-1,943,"****"],[-1,956,"**"],[-1,960,"**"],[-1,964,"****"],[-1,976,"**"],[-1,980,"**"],[-1,984,"****"],[-1,998,"****"],[-1,1004,"**"],[-1,1008,"**"],[-1,1022,"****"],[-1,1030,"**"],[-1,1034,"**"],[-1,1040,"****"],[-1,1053,"**"],[-1,1057,"**"],[-1,1061,"****"],[-1,1075,"****"],[-1,1093,"****"],[-1,1099,"**"],[-1,1103,"**"],[-1,1111,"****"],[-1,1120,"****"],[-1,1126,"****"],[-1,1132,"**\n\n |"]],[456,1138],[842,842]]],[1570069960753,["GJX@GJXAIOU",[[-1,456,"1 "]],[456,458],[456,456]]],[1570069961218,["GJX@GJXAIOU",[[1,456,"-"]],[456,456],[457,457]]],[1570069961873,["GJX@GJXAIOU",[[-1,456,"-"]],[457,457],[456,456]]],[1570069962148,["GJX@GJXAIOU",[[1,456," "]],[456,456],[457,457]]],[1570069963217,["GJX@GJXAIOU",[[-1,456," "]],[457,457],[456,456]]],[1570069963923,["GJX@GJXAIOU",[[1,456,"- "]],[456,456],[458,458]]],[1570069965282,["GJX@GJXAIOU",[[-1,466,"2 "]],[466,468],[466,466]]],[1570069966004,["GJX@GJXAIOU",[[1,466,"- "]],[466,466],[468,468]]],[1570069966799,["GJX@GJXAIOU",[[-1,465,"\n"]],[465,465],[464,464]]],[1570069967751,["GJX@GJXAIOU",[[-1,476,"\n"]],[476,476],[475,475]]],[1570069969273,["GJX@GJXAIOU",[[-1,476,"3"]],[476,477],[476,476]]],[1570069969706,["GJX@GJXAIOU",[[1,476,"-"]],[476,476],[477,477]]],[1570069977016,["GJX@GJXAIOU",[[-1,485,"（1）"]],[485,488],[485,485]]],[1570069977417,["GJX@GJXAIOU",[[-1,484,"\n"]],[485,485],[484,484]]],[1570069978782,["GJX@GJXAIOU",[[1,484,"- "]],[484,484],[486,486]]],[1570069980842,["GJX@GJXAIOU",[[1,484,"  "]],[486,486],[488,488]]],[1570069984042,["GJX@GJXAIOU",[[-1,505,"\n（2）"]],[505,509],[505,505]]],[1570069985054,["GJX@GJXAIOU",[[1,505,"- "]],[505,505],[507,507]]],[1570069986218,["GJX@GJXAIOU",[[1,505,"  "]],[507,507],[509,509]]],[1570069988831,["GJX@GJXAIOU",[[-1,516,"\n"]],[516,516],[515,515]]],[1570069989752,["GJX@GJXAIOU",[[-1,538,"\n"]],[538,538],[537,537]]],[1570069993704,["GJX@GJXAIOU",[[1,516,"    "]],[518,518],[522,522]]],[1570069994728,["GJX@GJXAIOU",[[1,542,"    "]],[544,544],[548,548]]],[1570069996633,["GJX@GJXAIOU",[[-1,565,"4 "]],[565,567],[565,565]]],[1570069998003,["GJX@GJXAIOU",[[1,565,"- "]],[565,565],[567,567]]],[1570069999752,["GJX@GJXAIOU",[[-1,566," "]],[567,567],[566,566]]],[1570070000899,["GJX@GJXAIOU",[[1,566," "]],[566,566],[567,567]]],[1570070001327,["GJX@GJXAIOU",[[-1,566," "]],[567,567],[566,566]]],[1570070002094,["GJX@GJXAIOU",[[1,566," "]],[566,566],[567,567]]],[1570070003314,["GJX@GJXAIOU",[[1,564,"    "]],[564,564],[568,568]]],[1570070004784,["GJX@GJXAIOU",[[-1,564,"    "]],[568,568],[564,564]]],[1570070005355,["GJX@GJXAIOU",[[-1,564,"\n"]],[564,564],[563,563]]],[1570070010224,["GJX@GJXAIOU",[[-1,576,"5 "]],[576,578],[576,576]]],[1570070011012,["GJX@GJXAIOU",[[1,576,"- "]],[576,576],[578,578]]],[1570070013074,["GJX@GJXAIOU",[[-1,586,"（1）"]],[586,589],[586,586]]],[1570070013455,["GJX@GJXAIOU",[[-1,585,"\n"]],[586,586],[585,585]]],[1570070014885,["GJX@GJXAIOU",[[1,585,"- "]],[585,585],[587,587]]],[1570070016562,["GJX@GJXAIOU",[[-1,599,"\n（2）"]],[599,603],[599,599]]],[1570070016864,["GJX@GJXAIOU",[[-1,598,"\n"]],[599,599],[598,598]]],[1570070018108,["GJX@GJXAIOU",[[1,598,"\n"]],[598,598],[599,599]]],[1570070018708,["GJX@GJXAIOU",[[1,599,"- "]],[599,599],[601,601]]],[1570070020531,["GJX@GJXAIOU",[[1,599,"  "]],[601,601],[603,603]]],[1570070021623,["GJX@GJXAIOU",[[1,585,"  "]],[586,586],[588,588]]],[1570070024832,["GJX@GJXAIOU",[[-1,575,"\n"]],[575,575],[574,574]]],[1570070028687,["GJX@GJXAIOU",[[-1,619,"6"]],[619,620],[619,619]]],[1570070032114,["GJX@GJXAIOU",[[1,619,"-"]],[619,619],[620,620]]],[1570070034746,["GJX@GJXAIOU",[[-1,628,"\n（1）"]],[628,632],[628,628]]],[1570070035190,["GJX@GJXAIOU",[[1,628,"- "]],[628,628],[630,630]]],[1570070038953,["GJX@GJXAIOU",[[-1,640,"\n（2）"]],[640,644],[640,640]]],[1570070039289,["GJX@GJXAIOU",[[-1,639,"\n"]],[640,640],[639,639]]],[1570070040752,["GJX@GJXAIOU",[[1,639,"\n"]],[639,639],[640,640]]],[1570070042328,["GJX@GJXAIOU",[[-1,648,"\n（3）"]],[648,652],[648,648]]],[1570070043720,["GJX@GJXAIOU",[[-1,655,"\n（4）"]],[655,659],[655,655]]],[1570070047112,["GJX@GJXAIOU",[[1,640,"- "],[1,648,"- "],[1,655,"- "]],[640,665],[642,671]]],[1570070050320,["GJX@GJXAIOU",[[1,628,"  "],[1,640,"  "],[1,650,"  "],[1,659,"  "]],[630,672],[632,680]]],[1570070053296,["GJX@GJXAIOU",[[-1,618,"\n"]],[618,618],[617,617]]],[1570070159903,["GJX@GJXAIOU",[[-1,679,"\n"]],[679,679],[678,678]]],[1570070160734,["GJX@GJXAIOU",[[-1,687,"\n"]],[687,687],[686,686]]],[1570070161942,["GJX@GJXAIOU",[[-1,696,"\n"]],[696,696],[695,695]]],[1570070164777,["GJX@GJXAIOU",[[1,679,"  "],[1,687,"  "],[1,696,"  "]],[679,708],[679,714]]],[1570070165223,["GJX@GJXAIOU",[[1,681,"  "],[1,689," "],[1,691," "],[1,700,"  "]],[679,714],[679,720]]],[1570070169335,["GJX@GJXAIOU",[[-1,722,"7 "]],[722,724],[722,722]]],[1570070170718,["GJX@GJXAIOU",[[1,722,"- "]],[722,722],[724,724]]],[1570070172656,["GJX@GJXAIOU",[[-1,721,"\n"]],[721,721],[720,720]]],[1570070176561,["GJX@GJXAIOU",[[-1,732,"（1）"]],[732,735],[732,732]]],[1570070178391,["GJX@GJXAIOU",[[-1,741,"\n（2）"]],[741,745],[741,741]]],[1570070180383,["GJX@GJXAIOU",[[-1,750,"（3）"]],[750,753],[750,750]]],[1570070180826,["GJX@GJXAIOU",[[-1,749,"\n"]],[750,750],[749,749]]],[1570070183615,["GJX@GJXAIOU",[[1,732,"* "],[1,741,"* "],[1,749,"* "]],[732,760],[734,766]]],[1570070184608,["GJX@GJXAIOU",[[1,732,"  "],[1,743,"  "],[1,753,"  "]],[734,766],[736,772]]],[1570070186671,["GJX@GJXAIOU",[[-1,731,"\n"]],[731,731],[730,730]]],[1570070197567,["GJX@GJXAIOU",[[-1,772,"\n"]],[773,773],[772,772]]],[1570070199030,["GJX@GJXAIOU",[[1,772,"    "]],[772,772],[776,776]]],[1570070201615,["GJX@GJXAIOU",[[-1,794,"8 "]],[794,796],[794,794]]],[1570070202110,["GJX@GJXAIOU",[[-1,793,"\n"]],[794,794],[793,793]]],[1570070203111,["GJX@GJXAIOU",[[1,793,"- "]],[793,793],[795,795]]],[1570070206185,["GJX@GJXAIOU",[[-1,807,"\n（1）"]],[807,811],[807,807]]],[1570070207803,["GJX@GJXAIOU",[[1,807,"  - "]],[807,807],[811,811]]],[1570070213435,["GJX@GJXAIOU",[[-1,838,"9 "]],[838,840],[838,838]]],[1570070213950,["GJX@GJXAIOU",[[-1,837,"\n"]],[838,838],[837,837]]],[1570070215276,["GJX@GJXAIOU",[[1,837,"- "]],[837,837],[839,839]]],[1570070218002,["GJX@GJXAIOU",[[1,843," "]],[843,843],[844,844]]],[1570070220036,["GJX@GJXAIOU",[[1,797," "]],[797,797],[798,798]]],[1570070222324,["GJX@GJXAIOU",[[1,788," "]],[788,788],[789,789]]],[1570070223396,["GJX@GJXAIOU",[[1,822," "]],[822,822],[823,823]]],[1570070225395,["GJX@GJXAIOU",[[1,815," "]],[815,815],[816,816]]],[1570070232598,["GJX@GJXAIOU",[[1,855," "]],[855,855],[856,856]]],[1570070233566,["GJX@GJXAIOU",[[1,826," "]],[826,826],[827,827]]],[1570070236492,["GJX@GJXAIOU",[[1,839," "]],[839,839],[840,840]]],[1570070239277,["GJX@GJXAIOU",[[1,769," "]],[769,769],[770,770]]],[1570070240573,["GJX@GJXAIOU",[[1,766," "]],[766,766],[767,767]]],[1570070241585,["GJX@GJXAIOU",[[-1,766," "]],[767,767],[766,766]]],[1570070242408,["GJX@GJXAIOU",[[1,765," "]],[765,765],[766,766]]],[1570070245142,["GJX@GJXAIOU",[[1,718," "]],[718,718],[719,719]]],[1570070247885,["GJX@GJXAIOU",[[1,701," "]],[701,701],[702,702]]],[1570070248796,["GJX@GJXAIOU",[[1,688," "]],[688,688],[689,689]]],[1570070249972,["GJX@GJXAIOU",[[1,672," "]],[672,672],[673,673]]],[1570070251486,["GJX@GJXAIOU",[[1,677," "]],[677,677],[678,678]]],[1570070253787,["GJX@GJXAIOU",[[1,638," "]],[638,638],[639,639]]],[1570070255755,["GJX@GJXAIOU",[[1,597," "]],[597,597],[598,598]]],[1570070257427,["GJX@GJXAIOU",[[1,616," "]],[616,616],[617,617]]],[1570070267566,["GJX@GJXAIOU",[[1,875,"一 "]],[875,875],[876,876]]],[1570070267899,["GJX@GJXAIOU",[[1,876,"、"]],[876,876],[877,877]]],[1570070270297,["GJX@GJXAIOU",[[-1,877," "]],[878,878],[877,877]]],[1570070373554,["GJX@GJXAIOU",[[-1,885,"| \n\n**"],[-1,892,"**"],[-1,895,"**"],[-1,899,"****"],[-1,906,"****"],[-1,916,"****"],[-1,922,"****"],[-1,930,"****"],[-1,936,"****"],[-1,944,"****"],[-1,951,"****"],[-1,965,"**"],[-1,969,"**"],[-1,977,"****"],[-1,1000,"**"],[-1,1003,"\n**"],[-1,1007,"****"],[-1,1012,"****"],[-1,1022,"****"],[-1,1033,"****"],[-1,1045,"**"],[-1,1048,"\n**"],[-1,1052,"****"],[-1,1057,"****"],[-1,1065,"****"],[-1,1073,"****"],[-1,1078,"****"],[-1,1089,"****"],[-1,1097,"****"],[-1,1108,"****"],[-1,1123,"**"],[-1,1127,"**"],[-1,1135,"****"],[-1,1141,"****"],[-1,1152,"****"],[-1,1173,"****"],[-1,1184,"****"],[-1,1192,"**"],[-1,1195,"\n**"],[-1,1199,"****"],[-1,1204,"****"],[-1,1211,"****"],[-1,1219,"****"],[-1,1229,"****"],[-1,1236,"****"],[-1,1242,"****"],[-1,1253,"****"],[-1,1263,"****"],[-1,1270,"****"],[-1,1276,"**"],[-1,1279,"\n |"]],[885,1282],[1100,1100]]],[1570070377521,["GJX@GJXAIOU",[[-1,885,"1 "]],[885,887],[885,885]]],[1570070378013,["GJX@GJXAIOU",[[1,885,"- "]],[885,885],[887,887]]],[1570070380750,["GJX@GJXAIOU",[[1,910," "]],[910,910],[911,911]]],[1570070381687,["GJX@GJXAIOU",[[1,914," "]],[914,914],[915,915]]],[1570070384252,["GJX@GJXAIOU",[[1,925,"；"]],[925,925],[926,926]]],[1570070388815,["GJX@GJXAIOU",[[1,904,"**"],[1,925,"**"]],[904,925],[904,929]]],[1570070390740,["GJX@GJXAIOU",[[1,908," "]],[908,908],[909,909]]],[1570070393935,["GJX@GJXAIOU",[[-1,933,"2"]],[933,934],[933,933]]],[1570070394247,["GJX@GJXAIOU",[[1,933,"0-"]],[933,933],[935,935]]],[1570070394327,["GJX@GJXAIOU",[[1,936," "]],[935,935],[936,936]]],[1570070396008,["GJX@GJXAIOU",[[-1,933,"0- "]],[936,936],[933,933]]],[1570070396867,["GJX@GJXAIOU",[[1,933,"-"]],[933,933],[934,934]]],[1570070400540,["GJX@GJXAIOU",[[1,967," "]],[967,967],[968,968]]],[1570070401661,["GJX@GJXAIOU",[[1,975," "]],[975,975],[976,976]]],[1570070404486,["GJX@GJXAIOU",[[1,991," "]],[991,991],[992,992]]],[1570070405395,["GJX@GJXAIOU",[[1,996," "]],[996,996],[997,997]]],[1570070406701,["GJX@GJXAIOU",[[1,1005," "]],[1005,1005],[1006,1006]]],[1570070412800,["GJX@GJXAIOU",[[-1,959,"（1）"]],[959,962],[959,959]]],[1570070413228,["GJX@GJXAIOU",[[1,959,"- "]],[959,959],[961,961]]],[1570070413715,["GJX@GJXAIOU",[[1,959,"  "]],[961,961],[963,963]]],[1570070415688,["GJX@GJXAIOU",[[-1,986,"（2）"]],[989,989],[986,986]]],[1570070416412,["GJX@GJXAIOU",[[1,986,"- "]],[986,986],[988,988]]],[1570070416827,["GJX@GJXAIOU",[[1,986,"  "]],[988,988],[990,990]]],[1570070420584,["GJX@GJXAIOU",[[-1,1032,"3"]],[1032,1033],[1032,1032]]],[1570070420851,["GJX@GJXAIOU",[[1,1032,"-"]],[1032,1032],[1033,1033]]],[1570070421084,["GJX@GJXAIOU",[[1,1034," "]],[1033,1033],[1034,1034]]],[1570070423299,["GJX@GJXAIOU",[[1,1039," "]],[1039,1039],[1040,1040]]],[1570070424260,["GJX@GJXAIOU",[[1,1042," "]],[1042,1042],[1043,1043]]],[1570070425045,["GJX@GJXAIOU",[[1,1050," "]],[1050,1050],[1051,1051]]],[1570070427916,["GJX@GJXAIOU",[[1,1068," "]],[1068,1068],[1069,1069]]],[1570070428692,["GJX@GJXAIOU",[[1,1076," "]],[1076,1076],[1077,1077]]],[1570070431515,["GJX@GJXAIOU",[[-1,1082,"（1）"]],[1082,1085],[1082,1082]]],[1570070432051,["GJX@GJXAIOU",[[1,1082,"- "]],[1082,1082],[1084,1084]]],[1570070433090,["GJX@GJXAIOU",[[1,1082,"  "]],[1084,1084],[1086,1086]]],[1570071103831,["GJX@GJXAIOU",[[-1,1137,"| \n\n**"],[-1,1144,"**"],[-1,1147,"**"],[-1,1151,"****"],[-1,1167,"****"],[-1,1182,"**"],[-1,1186,"**"],[-1,1268,"**"],[-1,1272,"**"],[-1,1275,"****"],[-1,1280,"****"],[-1,1286,"****"],[-1,1294,"****"],[-1,1307,"****"],[-1,1321,"**"],[-1,1325,"**"],[-1,1328,"**"],[-1,1331,"**"],[-1,1335,"****"],[-1,1346,"****"],[-1,1359,"**"],[-1,1363,"**"],[-1,1366,"****"],[-1,1371,"****"],[-1,1380,"****"],[-1,1388,"****"],[-1,1397,"****"],[-1,1404,"****"],[-1,1413,"****"],[-1,1420,"****"],[-1,1432,"**"],[-1,1436,"**"],[-1,1440,"****"],[-1,1451,"****"],[-1,1464,"****"],[-1,1471,"****"],[-1,1481,"**"],[-1,1485,"**"],[-1,1567,"****"],[-1,1572,"****"],[-1,1584,"****"],[-1,1593,"**"],[-1,1597,"**"],[-1,1600,"****"],[-1,1605,"****"],[-1,1612,"****"],[-1,1623,"****"],[-1,1634,"****"],[-1,1646,"****"],[-1,1651,"****"],[-1,1659,"**"],[-1,1662,"**"],[-1,1666,"**\n\n**![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image006.jpg)**\n\n |"]],[1137,1758],[1496,1496]]],[1570071111569,["GJX@GJXAIOU",[[-1,1137,"1 "]],[1137,1139],[1137,1137]]],[1570071113604,["GJX@GJXAIOU",[[1,1137,"示例："]],[1137,1137],[1140,1140]]],[1570071122375,["GJX@GJXAIOU",[[-1,1167,"![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image002.jpg)"]],[1167,1247],[1167,1167]]],[1570071122794,["GJX@GJXAIOU",[[-1,1168,"\n"]],[1167,1167],[1166,1166]]],[1570071127170,["GJX@GJXAIOU",[[-1,1167,"\n"]],[1167,1167],[1166,1166]]],[1570071129536,["GJX@GJXAIOU",[[-1,1167,"（1）"]],[1167,1170],[1167,1167]]],[1570071129959,["GJX@GJXAIOU",[[1,1167,"- "]],[1167,1167],[1169,1169]]],[1570071134835,["GJX@GJXAIOU",[[1,1180," ·"]],[1180,1180],[1182,1182]]],[1570071135983,["GJX@GJXAIOU",[[-1,1181,"·"]],[1182,1182],[1181,1181]]],[1570071136379,["GJX@GJXAIOU",[[1,1181,"`"]],[1181,1181],[1182,1182]]],[1570071141490,["GJX@GJXAIOU",[[1,1195,"`实现；"]],[1195,1195],[1199,1199]]],[1570071144047,["GJX@GJXAIOU",[[-1,1201,"2"]],[1201,1202],[1201,1201]]],[1570071144267,["GJX@GJXAIOU",[[1,1201,"-"]],[1201,1201],[1202,1202]]],[1570071144396,["GJX@GJXAIOU",[[1,1203," "]],[1202,1202],[1203,1203]]],[1570071146874,["GJX@GJXAIOU",[[-1,1215,"【上面的实现】"]],[1215,1222],[1215,1215]]],[1570071152976,["GJX@GJXAIOU",[[-1,1217,"（1）"]],[1217,1220],[1217,1217]]],[1570071154714,["GJX@GJXAIOU",[[-1,1216,"\n"]],[1217,1217],[1216,1216]]],[1570071160126,["GJX@GJXAIOU",[[1,1216,"  - 首先："]],[1216,1216],[1223,1223]]],[1570071162730,["GJX@GJXAIOU",[[-1,1256,"\n"]],[1257,1257],[1256,1256]]],[1570071162944,["GJX@GJXAIOU",[[-1,1255,"\n"]],[1256,1256],[1255,1255]]],[1570071164210,["GJX@GJXAIOU",[[1,1255,"，"]],[1255,1255],[1256,1256]]],[1570071166626,["GJX@GJXAIOU",[[1,1283,"；"]],[1283,1283],[1284,1284]]],[1570071171648,["GJX@GJXAIOU",[[-1,1286,"![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image004.jpg)"]],[1286,1366],[1286,1286]]],[1570071174008,["GJX@GJXAIOU",[[-1,1286,"（ognl.jsp最上面中）"]],[1286,1300],[1286,1286]]],[1570071174607,["GJX@GJXAIOU",[[-1,1287,"\n"]],[1286,1286],[1285,1285]]],[1570071193034,["GJX@GJXAIOU",[[1,1285,"``"]],[1285,1285],[1287,1287]]],[1570071194419,["GJX@GJXAIOU",[[1,1286,"<%@taglib uri=\"/struts-tags\" prefix=\"s\"%>"]],[1286,1286],[1327,1327]]],[1570071198359,["GJX@GJXAIOU",[[-1,1329,"\n（2）"]],[1329,1333],[1329,1329]]],[1570071198698,["GJX@GJXAIOU",[[-1,1328,"\n"]],[1329,1329],[1328,1328]]],[1570071199880,["GJX@GJXAIOU",[[1,1328,"\n"]],[1328,1328],[1329,1329]]],[1570071202126,["GJX@GJXAIOU",[[1,1329,"- "]],[1329,1329],[1331,1331]]],[1570071202488,["GJX@GJXAIOU",[[1,1329,"  "]],[1331,1331],[1333,1333]]],[1570071204153,["GJX@GJXAIOU",[[1,1333,"r "]],[1333,1333],[1334,1334]]],[1570071204596,["GJX@GJXAIOU",[[1,1334,"anho"]],[1334,1334],[1338,1338]]],[1570071206627,["GJX@GJXAIOU",[[-1,1334,"anho "]],[1338,1338],[1334,1334]]],[1570071208431,["GJX@GJXAIOU",[[1,1334,"然后"]],[1334,1334],[1336,1336]]],[1570071208484,["GJX@GJXAIOU",[[1,1334," "]],[1336,1336],[1337,1337]]],[1570071211456,["GJX@GJXAIOU",[[-1,1333,"r "]],[1335,1335],[1333,1333]]],[1570071214816,["GJX@GJXAIOU",[[-1,1350,"（ognl.jsp中body 中）"]],[1350,1367],[1350,1350]]],[1570071215375,["GJX@GJXAIOU",[[1,1350,"；"]],[1350,1350],[1351,1351]]],[1570071225691,["GJX@GJXAIOU",[[1,1352,"```"]],[1352,1352],[1355,1355]]],[1570071225747,["GJX@GJXAIOU",[[1,1355,"language\n```\n"]],[1355,1355],[1355,1363]]],[1570071231690,["GJX@GJXAIOU",[[-1,1355,"language"],[1,1363,"o"]],[1355,1363],[1356,1356]]],[1570071235970,["GJX@GJXAIOU",[[1,1356,"gnlDemo_jsp"]],[1356,1356],[1367,1367]]],[1570071236665,["GJX@GJXAIOU",[[1,1368,"\n"]],[1367,1367],[1368,1368]]],[1570071243612,["GJX@GJXAIOU",[[1,1368,"<%@ page contentType=\"text/html;charset=UTF-8\" language=\"java\" %>\n<%@taglib uri=\"/struts-tags\" prefix=\"s\"%>\n<html>\n<head>\n    <title>This is a demo of ognl</title>\n</head>\n<body>\n    <s:property value=\"'GJXAIOU'.length()\"/>\n</body>\n</html>"]],[1368,1368],[1607,1607]]],[1570071253811,["GJX@GJXAIOU",[[1,1613,"\n"]],[1611,1611],[1612,1612]]],[1570071256098,["GJX@GJXAIOU",[[1,1612,"- zuiho"]],[1612,1612],[1619,1619]]],[1570071257218,["GJX@GJXAIOU",[[-1,1614,"zuiho"]],[1619,1619],[1614,1614]]],[1570071273815,["GJX@GJXAIOU",[[1,1614,"最后在 web.xml zhong "]],[1614,1614],[1632,1632]]],[1570071274780,["GJX@GJXAIOU",[[-1,1626,"zhong "]],[1632,1632],[1626,1626]]],[1570071286512,["GJX@GJXAIOU",[[1,1626,"中向之前一样配置一样的锅炉器"]],[1626,1626],[1640,1640]]],[1570071287560,["GJX@GJXAIOU",[[-1,1637,"锅炉器"]],[1640,1640],[1637,1637]]],[1570071291437,["GJX@GJXAIOU",[[1,1637,"过滤器即可，"]],[1637,1637],[1643,1643]]],[1570071294058,["GJX@GJXAIOU",[[-1,1642,"，"]],[1643,1643],[1642,1642]]],[1570071294548,["GJX@GJXAIOU",[[1,1642,"；"]],[1642,1642],[1643,1643]]],[1570071296139,["GJX@GJXAIOU",[[1,1644,"- \n"]],[1643,1643],[1646,1646]]],[1570071296783,["GJX@GJXAIOU",[[-1,1644,"- "]],[1646,1646],[1644,1644]]],[1570071301298,["GJX@GJXAIOU",[[1,1644,"使用 URL"]],[1644,1644],[1650,1650]]],[1570071305762,["GJX@GJXAIOU",[[-1,1648,"RL"]],[1650,1650],[1648,1648]]],[1570071309283,["GJX@GJXAIOU",[[1,1648,"RL访问"]],[1648,1648],[1652,1652]]],[1570071309335,["GJX@GJXAIOU",[[1,1650," "]],[1652,1652],[1653,1653]]],[1570071322737,["GJX@GJXAIOU",[[1,1653,"，最后加上 ognlDemo.jsp 即可；"]],[1653,1653],[1675,1675]]],[1570071324735,["GJX@GJXAIOU",[[-1,1674,"；"]],[1675,1675],[1674,1674]]],[1570071329851,["GJX@GJXAIOU",[[1,1674,"；结果为：``"]],[1674,1674],[1681,1681]]],[1570071331501,["GJX@GJXAIOU",[[1,1680,"7"]],[1680,1680],[1681,1681]]],[1570071342331,["GJX@GJXAIOU",[[1,1675,"页面显示"]],[1675,1675],[1679,1679]]],[1570071358171,["GJX@GJXAIOU",[[1,1127,"一 "]],[1127,1127],[1128,1128]]],[1570071358422,["GJX@GJXAIOU",[[1,1128,"、"]],[1128,1128],[1129,1129]]],[1570071362657,["GJX@GJXAIOU",[[-1,1127,"一、"]],[1129,1129],[1127,1127]]],[1570071364578,["GJX@GJXAIOU",[[1,1127,"二、"]],[1127,1127],[1129,1129]]],[1570071365369,["GJX@GJXAIOU",[[-1,1129," "]],[1130,1130],[1129,1129]]],[1570071369664,["GJX@GJXAIOU",[[-1,1693,"什么是"]],[1696,1696],[1693,1693]]],[1570071372251,["GJX@GJXAIOU",[[1,1695,"含义"]],[1695,1695],[1697,1697]]],[1570071374931,["GJX@GJXAIOU",[[1,1693,"三、"]],[1693,1693],[1695,1695]]],[1570071384373,["GJX@GJXAIOU",[[-1,1701,"| \n\n**"],[-1,1708,"**"],[-1,1711,"**"],[-1,1716,"****"],[-1,1723,"****"],[-1,1731,"****"],[-1,1742,"****"],[-1,1770,"****"],[-1,1776,"****"],[-1,1807,"**"],[-1,1811,"**"],[-1,1814,"**"],[-1,1817,"**"],[-1,1820,"****"],[-1,1831,"****"],[-1,1866,"**"],[-1,1870,"**"],[-1,1873,"****"],[-1,1878,"****"],[-1,1890,"****"],[-1,1900,"****"],[-1,1927,"**"],[-1,1931,"**"],[-1,1942,"****"],[-1,1947,"****"],[-1,1957,"****"],[-1,1963,"**"],[-1,1967,"**"],[-1,1970,"****"],[-1,1975,"****"],[-1,1980,"****"],[-1,1991,"****"],[-1,2020,"**"],[-1,2024,"**"],[-1,2027,"****"],[-1,2032,"****"],[-1,2037,"****"],[-1,2047,"****"],[-1,2063,"****"],[-1,2073,"****"],[-1,2084,"****"],[-1,2094,"****"],[-1,2111,"**"],[-1,2115,"**"],[-1,2118,"**"],[-1,2121,"**"],[-1,2129,"**"],[-1,2133,"**"],[-1,2136,"****"],[-1,2141,"****"],[-1,2150,"****"],[-1,2160,"****"],[-1,2171,"****"],[-1,2181,"****"],[-1,2188,"**"],[-1,2192,"**"],[-1,2195,"****"],[-1,2200,"****"],[-1,2208,"****"],[-1,2218,"****"],[-1,2241,"**\n\n![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image008.jpg)\n\n |"]],[1701,2329],[2043,2043]]],[1570071387225,["GJX@GJXAIOU",[[-1,1701,"1 "]],[1701,1703],[1701,1701]]],[1570071389855,["GJX@GJXAIOU",[[1,1704," "]],[1704,1704],[1705,1705]]],[1570071390675,["GJX@GJXAIOU",[[1,1708," "]],[1708,1708],[1709,1709]]],[1570071391894,["GJX@GJXAIOU",[[1,1713," "]],[1713,1713],[1714,1714]]],[1570071394460,["GJX@GJXAIOU",[[1,1721," "]],[1721,1721],[1722,1722]]],[1570071400142,["GJX@GJXAIOU",[[1,1729,"通过"]],[1729,1729],[1731,1731]]],[1570071403811,["GJX@GJXAIOU",[[-1,1748,"el"]],[1748,1750],[1748,1748]]],[1570071404836,["GJX@GJXAIOU",[[1,1748,"EL"]],[1748,1748],[1750,1750]]],[1570071404886,["GJX@GJXAIOU",[[1,1748," "],[1,1750," "]],[1750,1750],[1751,1751]]],[1570071412648,["GJX@GJXAIOU",[[1,1759,"**"],[1,1778,"**"]],[1759,1778],[1759,1782]]],[1570071416074,["GJX@GJXAIOU",[[-1,1785,"2 "]],[1785,1787],[1785,1785]]],[1570071416604,["GJX@GJXAIOU",[[1,1785,"-"]],[1785,1785],[1786,1786]]],[1570071418241,["GJX@GJXAIOU",[[-1,1785,"-"]],[1786,1786],[1785,1785]]],[1570071427852,["GJX@GJXAIOU",[[1,1795,"本省"]],[1795,1795],[1797,1797]]],[1570071429960,["GJX@GJXAIOU",[[-1,1799,"本身"]],[1801,1801],[1799,1799]]],[1570071431186,["GJX@GJXAIOU",[[-1,1796,"省"]],[1797,1797],[1796,1796]]],[1570071437464,["GJX@GJXAIOU",[[1,1796,"身"]],[1796,1796],[1797,1797]]],[1570071440148,["GJX@GJXAIOU",[[1,1786," "]],[1786,1786],[1787,1787]]],[1570071441524,["GJX@GJXAIOU",[[1,1794," "]],[1794,1794],[1795,1795]]],[1570071447735,["GJX@GJXAIOU",[[-1,1827,"\n（1）"]],[1827,1831],[1827,1827]]],[1570071448784,["GJX@GJXAIOU",[[-1,1826,"\n"]],[1827,1827],[1826,1826]]],[1570071451052,["GJX@GJXAIOU",[[1,1826,"，因此"]],[1826,1826],[1829,1829]]],[1570071455659,["GJX@GJXAIOU",[[1,1836," "]],[1836,1836],[1837,1837]]],[1570071457347,["GJX@GJXAIOU",[[1,1843," "]],[1843,1843],[1844,1844]]],[1570071459970,["GJX@GJXAIOU",[[1,1867,"；"]],[1867,1867],[1868,1868]]],[1570071463031,["GJX@GJXAIOU",[[-1,1870,"3 "]],[1870,1872],[1870,1870]]],[1570071463444,["GJX@GJXAIOU",[[1,1870,"- "]],[1870,1870],[1872,1872]]],[1570071469283,["GJX@GJXAIOU",[[1,1701,"- "]],[1701,1701],[1703,1703]]],[1570071471541,["GJX@GJXAIOU",[[1,1787,"- "]],[1787,1787],[1789,1789]]],[1570071475600,["GJX@GJXAIOU",[[-1,1893,"\n（1）"]],[1893,1897],[1893,1893]]],[1570071477226,["GJX@GJXAIOU",[[1,1893,"  - "]],[1893,1893],[1897,1897]]],[1570071479863,["GJX@GJXAIOU",[[-1,1930,"\n（2）"]],[1930,1934],[1930,1930]]],[1570071480025,["GJX@GJXAIOU",[[-1,1929,"\n"]],[1930,1930],[1929,1929]]],[1570071480185,["GJX@GJXAIOU",[[1,1895,"  "]],[1929,1929],[1931,1931]]],[1570071481422,["GJX@GJXAIOU",[[1,1931,"- "]],[1931,1931],[1933,1933]]],[1570071483187,["GJX@GJXAIOU",[[1,1931,"\n    "]],[1931,1931],[1936,1936]]],[1570071485986,["GJX@GJXAIOU",[[1,1882," "]],[1882,1882],[1883,1883]]],[1570071486983,["GJX@GJXAIOU",[[-1,1882," "]],[1883,1883],[1882,1882]]],[1570071487603,["GJX@GJXAIOU",[[1,1883," "]],[1883,1883],[1884,1884]]],[1570071488674,["GJX@GJXAIOU",[[1,1885," "]],[1885,1885],[1886,1886]]],[1570071490308,["GJX@GJXAIOU",[[1,1892," "]],[1892,1892],[1893,1893]]],[1570071492298,["GJX@GJXAIOU",[[1,1959," "]],[1959,1959],[1960,1960]]],[1570071494147,["GJX@GJXAIOU",[[1,1966," "]],[1966,1966],[1967,1967]]],[1570071496316,["GJX@GJXAIOU",[[1,1974," "]],[1974,1974],[1975,1975]]],[1570071497687,["GJX@GJXAIOU",[[1,1981," "]],[1981,1981],[1982,1982]]],[1570071500643,["GJX@GJXAIOU",[[1,1995,"；"]],[1995,1995],[1996,1996]]],[1570071503158,["GJX@GJXAIOU",[[1,1934,"；"]],[1934,1934],[1935,1935]]],[1570071506745,["GJX@GJXAIOU",[[-1,1998,"\n4 "]],[1998,2001],[1998,1998]]],[1570071507125,["GJX@GJXAIOU",[[1,1998,"- "]],[1998,1998],[2000,2000]]],[1570071509960,["GJX@GJXAIOU",[[1,1998,"\n"]],[1998,1998],[1999,1999]]],[1570071516697,["GJX@GJXAIOU",[[-1,2008,"\n（1）"]],[2008,2012],[2008,2008]]],[1570071518094,["GJX@GJXAIOU",[[1,2008,"  - "]],[2008,2008],[2012,2012]]],[1570071520919,["GJX@GJXAIOU",[[-1,2039,"\n（2）"]],[2039,2043],[2039,2039]]],[1570071522243,["GJX@GJXAIOU",[[1,2039,"  - "]],[2039,2039],[2043,2043]]],[1570071674864,["GJX@GJXAIOU",[[1,2008,"- \n"]],[2007,2007],[2010,2010]]],[1570071676386,["GJX@GJXAIOU",[[-1,2008,"- "]],[2010,2010],[2008,2008]]],[1570071680649,["GJX@GJXAIOU",[[-1,2008,"\n"]],[2008,2008],[2007,2007]]],[1570071687126,["GJX@GJXAIOU",[[1,2072,"![值栈存储位置]($resource/%E5%80%BC%E6%A0%88%E5%AD%98%E5%82%A8%E4%BD%8D%E7%BD%AE.png)"]],[2072,2072],[2152,2152]]],[1570071690289,["GJX@GJXAIOU",[[1,2152,"\n"]],[2152,2152],[2153,2153]]],[1570071690419,["GJX@GJXAIOU",[[1,2153,"\n"]],[2153,2153],[2154,2154]]],[1570071695620,["GJX@GJXAIOU",[[1,2157,"四、"]],[2157,2157],[2159,2159]]],[1570071714639,["GJX@GJXAIOU",[[-1,2182,"| \n\n**"],[-1,2189,"**"],[-1,2192,"**"],[-1,2205,"**"],[-1,2209,"**"],[-1,2212,"****"],[-1,2217,"****"],[-1,2229,"****"],[-1,2246,"****"],[1,2262,"\n\n"],[-1,2264,"\n\n"],[-1,2339,"1"],[1,2341,"2"],[1,2346,"**"],[-1,2348,"**"],[-1,2351,"**"],[-1,2354,"**"],[-1,2360,"****"],[-1,2370,"****"],[-1,2385,"**\n\n![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image012.jpg)\n\n![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image014.jpg)\n\n**![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image016.jpg)**\n\n |"]],[2182,2641],[2343,2343]]],[1570071717719,["GJX@GJXAIOU",[[-1,2182,"1 "]],[2182,2184],[2182,2182]]],[1570071718094,["GJX@GJXAIOU",[[1,2182,"- "]],[2182,2182],[2184,2184]]],[1570071720407,["GJX@GJXAIOU",[[-1,2196,"\n（1）"]],[2196,2200],[2196,2196]]],[1570071722047,["GJX@GJXAIOU",[[1,2196,"- "]],[2196,2196],[2198,2198]]],[1570071724111,["GJX@GJXAIOU",[[-1,2182,"- "]],[2182,2184],[2182,2182]]],[1570071725685,["GJX@GJXAIOU",[[1,2203," "]],[2203,2203],[2204,2204]]],[1570071727949,["GJX@GJXAIOU",[[1,2217," "]],[2217,2217],[2218,2218]]],[1570071740841,["GJX@GJXAIOU",[[-1,2318,"2"]],[2318,2319],[2318,2318]]],[1570071743376,["GJX@GJXAIOU",[[-1,2232,"**![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image002.jpg)**\n"]],[2232,2317],[2232,2232]]],[1570072329439,["GJX@GJXAIOU",[[1,2234,"上面代码中同时"]],[2234,2234],[2241,2241]]],[1570072332253,["GJX@GJXAIOU",[[1,2243,"了"]],[2243,2243],[2244,2244]]],[1570072347390,["GJX@GJXAIOU",[[1,2231,"```"]],[2231,2231],[2234,2234]]],[1570072347442,["GJX@GJXAIOU",[[1,2234,"language\n```\n"]],[2234,2234],[2234,2242]]],[1570072348643,["GJX@GJXAIOU",[[-1,2234,"language"],[1,2242,"j"]],[2234,2242],[2235,2235]]],[1570072348991,["GJX@GJXAIOU",[[1,2235,"av"]],[2235,2235],[2237,2237]]],[1570072351488,["GJX@GJXAIOU",[[-1,2234,"jav"]],[2237,2237],[2234,2234]]],[1570072357100,["GJX@GJXAIOU",[[1,2234,"UserAction_java"]],[2234,2234],[2249,2249]]],[1570072357353,["GJX@GJXAIOU",[[1,2250,"\n"]],[2249,2249],[2250,2250]]],[1570072360561,["GJX@GJXAIOU",[[1,2250,"package com.gjxaiou.action;\n\nimport com.opensymphony.xwork2.ActionContext;\nimport com.opensymphony.xwork2.ActionSupport;\nimport com.opensymphony.xwork2.util.ValueStack;\n\n/**\n * @author GJXAIOU\n * @create 2019-10-03-11:02\n */\npublic class UserAction extends ActionSupport {\n    @Override\n    public String execute() throws Exception {\n        // 1.获取 ActionContext 类的对象\n        ActionContext actionContext = ActionContext.getContext();\n        // 2.调用方法获取值栈对象\n        ValueStack valueStack = actionContext.getValueStack();\n\n        // 验证每个 Action 对象只有一个值栈对象\n        ValueStack valueStack1 = actionContext.getValueStack();\n        System.out.println(valueStack == valueStack1);\n\n        return NONE;\n    }\n}\n"]],[2250,2250],[2956,2956]]],[1570072364952,["GJX@GJXAIOU",[[-1,2956,"\n"]],[2956,2956],[2955,2955]]],[1570072368788,["GJX@GJXAIOU",[[1,2960,"meic"]],[2960,2960],[2964,2964]]],[1570072369504,["GJX@GJXAIOU",[[-1,2960,"meic"]],[2964,2964],[2960,2960]]],[1570072371379,["GJX@GJXAIOU",[[1,2960,"每次"]],[2960,2960],[2962,2962]]],[1570072372628,["GJX@GJXAIOU",[[1,2962,"访问"]],[2962,2962],[2964,2964]]],[1570072375617,["GJX@GJXAIOU",[[-1,2960,"每次访问"]],[2964,2964],[2960,2960]]],[1570072375734,["GJX@GJXAIOU",[[-1,2961,"\n"]],[2960,2960],[2959,2959]]],[1570072376827,["GJX@GJXAIOU",[[1,2961,"\n"]],[2959,2959],[2960,2960]]],[1570072384148,["GJX@GJXAIOU",[[1,2960,"配置 strutsx"]],[2960,2960],[2970,2970]]],[1570072384624,["GJX@GJXAIOU",[[-1,2969,"x"]],[2970,2970],[2969,2969]]],[1570072386525,["GJX@GJXAIOU",[[1,2969,".xmlzho"]],[2969,2969],[2976,2976]]],[1570072387295,["GJX@GJXAIOU",[[-1,2973,"zho"]],[2976,2976],[2973,2973]]],[1570072406111,["GJX@GJXAIOU",[[1,2973," 后，每次访问该 Action 结果都是 true；"]],[2973,2973],[2999,2999]]],[1570072409080,["GJX@GJXAIOU",[[-1,3000,"\n"]],[3000,3000],[2999,2999]]],[1570072411499,["GJX@GJXAIOU",[[-1,3000," "]],[3000,3001],[3000,3000]]],[1570072414786,["GJX@GJXAIOU",[[1,3029,"；"]],[3029,3029],[3030,3030]]],[1570072445549,["GJX@GJXAIOU",[[1,3035,"五、"]],[3035,3035],[3037,3037]]],[1570072448185,["GJX@GJXAIOU",[[-1,3045,"| "]],[3045,3047],[3045,3045]]],[1570072460525,["GJX@GJXAIOU",[[1,3045,"因为栈是一种先进后出的"]],[3045,3045],[3056,3056]]],[1570072618251,["GJX@GJXAIOU",[[1,3056,"接口"]],[3056,3056],[3058,3058]]],[1570072618673,["GJX@GJXAIOU",[[-1,3056,"接口"]],[3058,3058],[3056,3056]]],[1570072620210,["GJX@GJXAIOU",[[1,3056,"结构；"]],[3056,3056],[3059,3059]]],[1570072634210,["GJX@GJXAIOU",[[-1,3061,"**1** **"],[1,3069," "],[-1,3077,"**"],[-1,3081,"**"],[-1,3087,"**"],[-1,3090,"**"],[-1,3096,"****"],[-1,3108,"****"],[-1,3116,"****"],[-1,3122,"**"],[-1,3126,"**"],[-1,3129,"****"],[-1,3134,"****"],[-1,3145,"****"],[-1,3153,"****"],[1,3161,"\n\n"],[-1,3163,"\n\n"],[-1,3238,"18"],[1,3240,"02"],[1,3245,"**"],[-1,3247,"**"],[-1,3253,"**"],[-1,3256,"**"],[-1,3265,"****"],[-1,3276,"****"],[-1,3283,"****"],[1,3289,"\n\n"],[-1,3291,"\n\n"],[-1,3366,"2"],[1,3368,"4"],[1,3373,"**"],[1,3375,"**"],[1,3382,"**"],[1,3383,"**"],[1,3390,"****"],[1,3405,"****"],[1,3409,"**"],[1,3410,"**"],[1,3416,"****"],[1,3420,"**"],[1,3421,"**"],[1,3440,"****"],[1,3447,"****"],[1,3457,"**"],[-1,3459,"**"],[-1,3470,"****"],[-1,3478,"**"],[-1,3481,"**"],[-1,3490,"****"],[-1,3513,"**"],[-1,3517,"**"],[-1,3520,"****"],[-1,3525,"****"],[-1,3532,"****"],[-1,3542,"****"],[-1,3549,"****"],[-1,3559,"****"],[-1,3577,"****"],[-1,3584,"****"],[-1,3593,"****"],[-1,3600,"****"],[-1,3614,"****"],[-1,3637,"****"],[-1,3642,"**"],[-1,3645,"**"],[-1,3653,"****"],[-1,3660,"****"],[-1,3678,"****"],[-1,3691,"****"],[-1,3699,"****"],[-1,3706,"****"],[-1,3729,"****"],[-1,3734,"**"],[1,3738,"**"],[1,3743,"****"],[-1,3816,"22"],[1,3818,"06"],[-1,3823,"\n\n"],[1,3827,"\n\n"],[-1,3842,"**"],[-1,3845,"**"],[-1,3851,"**"],[-1,3854,"**"],[-1,3858,"**\n\n![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image024.jpg)\n\n**（****2****）在****action****没有做任何操作，栈顶元素就是** **action****引用**\n\n![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image026.jpg)\n\n**- action****对象里面有值栈对象**\n\n**-** **值栈对象里面有****action****引用，不是真正的** **action****对象；**\n\n |"]],[3061,4177],[3731,3731]]],[1570072640690,["GJX@GJXAIOU",[[-1,3061," "],[1,3062," "],[1,3072,"- "]],[3072,3072],[3074,3074]]],[1570072642992,["GJX@GJXAIOU",[[-1,3061," "]],[3061,3062],[3061,3061]]],[1570072647371,["GJX@GJXAIOU",[[1,3090," "]],[3090,3090],[3091,3091]]],[1570072648034,["GJX@GJXAIOU",[[1,3095," "]],[3095,3095],[3096,3096]]],[1570072658587,["GJX@GJXAIOU",[[1,3205,"- "]],[3205,3205],[3207,3207]]],[1570072660777,["GJX@GJXAIOU",[[-1,3099,"\n（1）"]],[3099,3103],[3099,3099]]],[1570072664556,["GJX@GJXAIOU",[[1,3105," "]],[3105,3105],[3106,3106]]],[1570072665572,["GJX@GJXAIOU",[[1,3110," "]],[3110,3110],[3111,3111]]],[1570072667251,["GJX@GJXAIOU",[[1,3115,"；"]],[3115,3115],[3116,3116]]],[1570072670639,["GJX@GJXAIOU",[[-1,3070,"\n"]],[3070,3070],[3069,3069]]],[1570072915636,["GJX@GJXAIOU",[[1,3116,"```"]],[3116,3116],[3119,3119]]],[1570072915687,["GJX@GJXAIOU",[[1,3119,"language\n```\n"]],[3119,3119],[3119,3127]]],[1570072916964,["GJX@GJXAIOU",[[-1,3119,"language"],[1,3127,"j"]],[3119,3127],[3120,3120]]],[1570072917339,["GJX@GJXAIOU",[[1,3120,"ava"]],[3120,3120],[3123,3123]]],[1570072917483,["GJX@GJXAIOU",[[1,3124,"\n"]],[3123,3123],[3124,3124]]],[1570072920863,["GJX@GJXAIOU",[[1,3124,"public class CompoundRoot extends CopyOnWriteArrayList<Object> {"]],[3124,3124],[3188,3188]]],[1570072924328,["GJX@GJXAIOU",[[1,3189,"\n"]],[3188,3188],[3189,3189]]],[1570072926684,["GJX@GJXAIOU",[[1,3189,"}"]],[3189,3189],[3190,3190]]],[1570072927602,["GJX@GJXAIOU",[[1,3191,"\n"]],[3190,3190],[3191,3191]]],[1570072932138,["GJX@GJXAIOU",[[1,3189,"\n"]],[3189,3189],[3190,3190]]],[1570072935674,["GJX@GJXAIOU",[[1,3189,"// ........"]],[3189,3189],[3200,3200]]],[1570072937848,["GJX@GJXAIOU",[[1,3204,"\n"]],[3202,3202],[3203,3203]]],[1570072938268,["GJX@GJXAIOU",[[1,3205,"\n"]],[3203,3203],[3204,3204]]],[1570072962625,["GJX@GJXAIOU",[[1,3204,"public class CopyOnWriteArrayList<E> implements List<E>, RandomAccess, Cloneable, Serializable {"]],[3204,3204],[3300,3300]]],[1570072965889,["GJX@GJXAIOU",[[1,3302,"\n"]],[3300,3300],[3301,3301]]],[1570072970967,["GJX@GJXAIOU",[[1,3301,"// ......."]],[3301,3301],[3311,3311]]],[1570072971890,["GJX@GJXAIOU",[[1,3313,"\n"]],[3311,3311],[3312,3312]]],[1570072973308,["GJX@GJXAIOU",[[1,3312,"}"]],[3312,3312],[3313,3313]]],[1570080059727,["GJX@GJXAIOU",[[1,3070,"\n"]],[3069,3069],[3070,3070]]],[1570080060301,["GJX@GJXAIOU",[[1,3070,"valueStack = {OgnlValueStack@4512} \n root = {CompoundRoot@4559}  size = 2\n context = {OgnlContext@4474}  size = 22\n defaultType = null\n overrides = null\n ognlUtil = {OgnlUtil@4430} \n securityMemberAccess = {SecurityMemberAccess@4560} \n converter = {XWorkConverter@4561} \n devMode = true\n logMissingProperties = false"]],[3070,3070],[3386,3386]]],[1570080084697,["GJX@GJXAIOU",[[1,3063,"z"]],[3063,3063],[3064,3064]]],[1570080085224,["GJX@GJXAIOU",[[1,3063," "],[1,3064," huy"]],[3064,3064],[3068,3068]]],[1570080086301,["GJX@GJXAIOU",[[-1,3065,"huy"]],[3068,3068],[3065,3065]]],[1570080089381,["GJX@GJXAIOU",[[-1,3063," z 分为两部分："]],[3063,3072],[3063,3063]]],[1570080089971,["GJX@GJXAIOU",[[1,3063,"n"]],[3063,3063],[3064,3064]]],[1570080090021,["GJX@GJXAIOU",[[1,3063," "]],[3064,3064],[3065,3065]]],[1570080090206,["GJX@GJXAIOU",[[1,3065,"ei"]],[3065,3065],[3067,3067]]],[1570080091497,["GJX@GJXAIOU",[[-1,3063," nei"]],[3067,3067],[3063,3063]]],[1570080093408,["GJX@GJXAIOU",[[1,3063,"内容："]],[3063,3063],[3066,3066]]],[1570080102533,["GJX@GJXAIOU",[[1,3067,"* "],[1,3103,"*"],[1,3141,"*"],[1,3182,"*"],[1,3202,"*"],[1,3220,"*"],[1,3249,"*"],[1,3302,"*"],[1,3338,"*"],[1,3354,"*"]],[3067,3383],[3069,3394]]],[1570080105703,["GJX@GJXAIOU",[[1,3105,"  "],[1,3144,"  "],[1,3186,"  "],[1,3207,"  "],[1,3226,"  "],[1,3256,"  "],[1,3310,"  "],[1,3347,"  "],[1,3364,"  "]],[3106,3394],[3108,3412]]],[1570080110088,["GJX@GJXAIOU",[[1,3067,"\n"]],[3066,3066],[3067,3067]]],[1570080120777,["GJX@GJXAIOU",[[1,3067,"这里以示例通过砸死"]],[3067,3067],[3076,3076]]],[1570080121485,["GJX@GJXAIOU",[[-1,3074,"砸死"]],[3076,3076],[3074,3074]]],[1570080152188,["GJX@GJXAIOU",[[1,3074,"在 .getValueStack() 添加断点，可以看出值栈总"]],[3074,3074],[3105,3105]]],[1570080152973,["GJX@GJXAIOU",[[-1,3104,"总"]],[3105,3105],[3104,3104]]],[1570080156753,["GJX@GJXAIOU",[[1,3104,"中具体内筒"]],[3104,3104],[3109,3109]]],[1570080157374,["GJX@GJXAIOU",[[-1,3107,"内筒"]],[3109,3109],[3107,3107]]],[1570080160079,["GJX@GJXAIOU",[[1,3107,"内容："]],[3107,3107],[3110,3110]]],[1570080172093,["GJX@GJXAIOU",[[-1,3701,"\n"]],[3701,3701],[3700,3700]]],[1570080175247,["GJX@GJXAIOU",[[-1,3706,"**![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image002.jpg)**\n"]],[3706,3791],[3706,3706]]],[1570080177384,["GJX@GJXAIOU",[[1,3705,"、、"]],[3705,3705],[3707,3707]]],[1570080178461,["GJX@GJXAIOU",[[-1,3705,"、、"]],[3707,3707],[3705,3705]]],[1570080205290,["GJX@GJXAIOU",[[1,3705,"// 因为 root 对应于 CompoundRoot，其最终继承了 List"]],[3705,3705],[3744,3744]]],[1570080207365,["GJX@GJXAIOU",[[-1,3736,"继承了 List"]],[3744,3744],[3736,3736]]],[1570080214585,["GJX@GJXAIOU",[[1,3736,"实现了 List 接口；"]],[3736,3736],[3748,3748]]],[1570080314727,["GJX@GJXAIOU",[[-1,3778,"**![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image004.jpg)**"]],[3778,3862],[3778,3778]]],[1570080315249,["GJX@GJXAIOU",[[-1,3779,"\n"]],[3778,3778],[3777,3777]]],[1570080316644,["GJX@GJXAIOU",[[1,3777,"``"]],[3777,3777],[3779,3779]]],[1570080331666,["GJX@GJXAIOU",[[1,3778,"public class Ognlco"]],[3778,3778],[3797,3797]]],[1570080332223,["GJX@GJXAIOU",[[-1,3795,"co"]],[3797,3797],[3795,3795]]],[1570080338968,["GJX@GJXAIOU",[[1,3795,"Context extent"]],[3795,3795],[3809,3809]]],[1570080339719,["GJX@GJXAIOU",[[-1,3808,"t"]],[3809,3809],[3808,3808]]],[1570080346122,["GJX@GJXAIOU",[[1,3808,"ds Object implen"]],[3808,3808],[3824,3824]]],[1570080347366,["GJX@GJXAIOU",[[-1,3823,"n"]],[3824,3824],[3823,3823]]],[1570080350762,["GJX@GJXAIOU",[[1,3823,"ments Map"]],[3823,3823],[3832,3832]]],[1570080437359,["GJX@GJXAIOU",[[1,3835,"\n"]],[3833,3833],[3834,3834]]],[1570080437905,["GJX@GJXAIOU",[[1,3836,"\n"]],[3834,3834],[3835,3835]]],[1570080441892,["GJX@GJXAIOU",[[1,3835,"context 猴子那个"]],[3835,3835],[3847,3847]]],[1570080443375,["GJX@GJXAIOU",[[-1,3843,"猴子那个"]],[3847,3847],[3843,3843]]],[1570080446547,["GJX@GJXAIOU",[[1,3843,"中结构为："]],[3843,3843],[3848,3848]]],[1570080446857,["GJX@GJXAIOU",[[1,3850,"\n"]],[3848,3848],[3849,3849]]],[1570080454093,["GJX@GJXAIOU",[[1,3849,"可以"]],[3849,3849],[3851,3851]]],[1570080454753,["GJX@GJXAIOU",[[-1,3849,"可以"]],[3851,3851],[3849,3849]]],[1570080460049,["GJX@GJXAIOU",[[1,3849,"key | value|"]],[3849,3849],[3861,3861]]],[1570080460797,["GJX@GJXAIOU",[[1,3863,"\n"]],[3861,3861],[3862,3862]]],[1570080465001,["GJX@GJXAIOU",[[1,3862,"---|---|"]],[3862,3862],[3870,3870]]],[1570080465544,["GJX@GJXAIOU",[[1,3871,"   |   |\n"]],[3870,3870],[3871,3874]]],[1570080467785,["GJX@GJXAIOU",[[-1,3871,"   "],[1,3874,"r"]],[3871,3874],[3872,3872]]],[1570080469235,["GJX@GJXAIOU",[[1,3872,"equest"]],[3872,3872],[3878,3878]]],[1570080471123,["GJX@GJXAIOU",[[-1,3879,"   "],[1,3882,"r"]],[3879,3882],[3880,3880]]],[1570080476220,["GJX@GJXAIOU",[[1,3880,"equest 对象引用"]],[3880,3880],[3891,3891]]],[1570080476871,["GJX@GJXAIOU",[[1,3893,"   |   |\n"]],[3891,3891],[3893,3896]]],[1570080479977,["GJX@GJXAIOU",[[-1,3893,"   "],[1,3896,"session"]],[3893,3893],[3900,3900]]],[1570080484474,["GJX@GJXAIOU",[[-1,3901,"   "],[1,3904,"Http"]],[3901,3901],[3905,3905]]],[1570080490236,["GJX@GJXAIOU",[[1,3905,"Session 对象引用"]],[3905,3905],[3917,3917]]],[1570080490710,["GJX@GJXAIOU",[[1,3919,"   |   |\n"]],[3917,3917],[3919,3922]]],[1570080494235,["GJX@GJXAIOU",[[-1,3919,"   "],[1,3922,"app"]],[3919,3922],[3922,3922]]],[1570080495547,["GJX@GJXAIOU",[[1,3922,"lication"]],[3922,3922],[3930,3930]]],[1570080497434,["GJX@GJXAIOU",[[-1,3931,"   "],[1,3934,"S"]],[3931,3934],[3932,3932]]],[1570080503734,["GJX@GJXAIOU",[[1,3932,"ervletContext duix"]],[3932,3932],[3950,3950]]],[1570080505560,["GJX@GJXAIOU",[[-1,3946,"duix"]],[3950,3950],[3946,3946]]],[1570080508533,["GJX@GJXAIOU",[[1,3946,"对象引用"]],[3946,3946],[3950,3950]]],[1570080509642,["GJX@GJXAIOU",[[1,3952,"   |   |\n"]],[3950,3950],[3952,3955]]],[1570080514979,["GJX@GJXAIOU",[[-1,3952,"   "],[1,3955,"param"]],[3952,3952],[3957,3957]]],[1570080517346,["GJX@GJXAIOU",[[1,3957,"eters"]],[3957,3957],[3962,3962]]],[1570080519532,["GJX@GJXAIOU",[[-1,3963,"   "],[1,3966,"c"]],[3963,3966],[3964,3964]]],[1570080519972,["GJX@GJXAIOU",[[1,3964,"hua"]],[3964,3964],[3967,3967]]],[1570080521007,["GJX@GJXAIOU",[[-1,3963,"chua|"]],[3967,3967],[3962,3962]]],[1570080522122,["GJX@GJXAIOU",[[1,3963,"|"]],[3962,3962],[3963,3963]]],[1570080527221,["GJX@GJXAIOU",[[1,3963,"传递相关的参数"]],[3963,3963],[3970,3970]]],[1570080528647,["GJX@GJXAIOU",[[1,3972,"   |   |\n"]],[3970,3970],[3972,3975]]],[1570080531323,["GJX@GJXAIOU",[[-1,3972,"   "],[1,3975,"attr"]],[3972,3972],[3976,3976]]],[1570080541370,["GJX@GJXAIOU",[[-1,3977,"   "],[1,3980,"如果"]],[3977,3977],[3979,3979]]],[1570080564889,["GJX@GJXAIOU",[[1,3979,"在三个域对象中同时使用 setAttribute()"]],[3979,3979],[4005,4005]]],[1570080567562,["GJX@GJXAIOU",[[1,4004,"“"]],[4004,4004],[4005,4005]]],[1570080570358,["GJX@GJXAIOU",[[-1,4004,"“"]],[4005,4005],[4004,4004]]],[1570080571284,["GJX@GJXAIOU",[[1,4004,"\""]],[4004,4004],[4005,4005]]],[1570080571335,["GJX@GJXAIOU",[[-1,4004,"\""],[1,4005,"“"]],[4005,4005],[4005,4005]]],[1570080571778,["GJX@GJXAIOU",[[1,4005,"n"]],[4005,4005],[4006,4006]]],[1570080573086,["GJX@GJXAIOU",[[-1,4004,"“n"]],[4006,4006],[4004,4004]]],[1570080573612,["GJX@GJXAIOU",[[1,4004,"\""]],[4004,4004],[4005,4005]]],[1570080573662,["GJX@GJXAIOU",[[-1,4004,"\""],[1,4005,"“"]],[4005,4005],[4005,4005]]],[1570080576010,["GJX@GJXAIOU",[[1,4005,"name\""]],[4005,4005],[4010,4010]]],[1570080576060,["GJX@GJXAIOU",[[-1,4009,"\""],[1,4010,"”"]],[4010,4010],[4010,4010]]],[1570080578762,["GJX@GJXAIOU",[[1,4010,", value"]],[4010,4010],[4017,4017]]],[1570080590174,["GJX@GJXAIOU",[[1,4018,"放入同样"]],[4018,4018],[4022,4022]]],[1570080601995,["GJX@GJXAIOU",[[1,4022,"名称的值，使用attr"]],[4022,4022],[4033,4033]]],[1570080602049,["GJX@GJXAIOU",[[1,4029," "]],[4033,4033],[4034,4034]]],[1570080603737,["GJX@GJXAIOU",[[1,4034,"操作"]],[4034,4034],[4036,4036]]],[1570080603788,["GJX@GJXAIOU",[[1,4034," "]],[4036,4036],[4037,4037]]],[1570080604209,["GJX@GJXAIOU",[[1,4037,"的"]],[4037,4037],[4038,4038]]],[1570080610341,["GJX@GJXAIOU",[[-1,4037,"的"]],[4038,4038],[4037,4037]]],[1570080631985,["GJX@GJXAIOU",[[1,4037,"获取域对象中值时，获取的是域对象范围最小的那一个（）"]],[4037,4037],[4063,4063]]],[1570080635441,["GJX@GJXAIOU",[[1,4062,"request"]],[4062,4062],[4069,4069]]],[1570080637533,["GJX@GJXAIOU",[[1,4070,"的值"]],[4070,4070],[4072,4072]]],[1570080698205,["GJX@GJXAIOU",[[-1,4075,"**（上面红色图为** **Context****中的结构）应为三个域对象中的的****name** **值相同，使用****attr** **获取域对象中的值，获取域对象范围最小（****request****域）的那个里面的值；**"]],[4075,4193],[4075,4075]]],[1570080699997,["GJX@GJXAIOU",[[1,4075,"****"]],[4075,4075],[4077,4077]]],[1570080701930,["GJX@GJXAIOU",[[1,4077,"注："]],[4077,4077],[4079,4079]]],[1570080707954,["GJX@GJXAIOU",[[1,4081," Context中"]],[4081,4081],[4090,4090]]],[1570080708003,["GJX@GJXAIOU",[[1,4089," "]],[4090,4090],[4091,4091]]],[1570080710372,["GJX@GJXAIOU",[[1,4091,"存储的是"]],[4091,4091],[4095,4095]]],[1570080716130,["GJX@GJXAIOU",[[1,4095,"对象的应用"]],[4095,4095],[4100,4100]]],[1570080716711,["GJX@GJXAIOU",[[-1,4098,"应用"]],[4100,4100],[4098,4098]]],[1570080731690,["GJX@GJXAIOU",[[1,4098,"引用，其中 可以"]],[4098,4098],[4106,4106]]],[1570080732403,["GJX@GJXAIOU",[[-1,4104,"可以"]],[4106,4106],[4104,4104]]],[1570080742737,["GJX@GJXAIOU",[[1,4104,"key 值是固定只有这么多；"]],[4104,4104],[4118,4118]]],[1570080749437,["GJX@GJXAIOU",[[-1,4120,"2"]],[4120,4121],[4120,4120]]],[1570080749817,["GJX@GJXAIOU",[[1,4120,"-"]],[4120,4120],[4121,4121]]],[1570080757503,["GJX@GJXAIOU",[[1,4120,"\n"]],[4119,4119],[4120,4120]]],[1570080758674,["GJX@GJXAIOU",[[1,4120,"****"]],[4120,4120],[4122,4122]]],[1570080761474,["GJX@GJXAIOU",[[1,4122,"通过调试"]],[4122,4122],[4126,4126]]],[1570080767894,["GJX@GJXAIOU",[[-1,4120,"**通过调试**\n"]],[4119,4128],[4119,4119]]],[1570080768591,["GJX@GJXAIOU",[[1,4119,"### "]],[4119,4119],[4123,4123]]],[1570080771158,["GJX@GJXAIOU",[[1,4119,"\n"]],[4119,4119],[4120,4120]]],[1570080773064,["GJX@GJXAIOU",[[1,4124," "]],[4123,4123],[4124,4124]]],[1570080773623,["GJX@GJXAIOU",[[1,4124,"（）"]],[4124,4124],[4126,4126]]],[1570080775204,["GJX@GJXAIOU",[[1,4125,"一"]],[4125,4125],[4126,4126]]],[1570080778365,["GJX@GJXAIOU",[[1,4127,"通过调试"]],[4127,4127],[4131,4131]]],[1570080836835,["GJX@GJXAIOU",[[1,4131,"查看值栈内部结构"]],[4131,4131],[4139,4139]]],[1570080839890,["GJX@GJXAIOU",[[1,4141,"\n"]],[4141,4141],[4142,4142]]],[1570080842833,["GJX@GJXAIOU",[[1,4156,"<"]],[4156,4156],[4157,4157]]],[1570080848061,["GJX@GJXAIOU",[[1,4164,"><>"]],[4164,4164],[4167,4167]]],[1570080852441,["GJX@GJXAIOU",[[1,4166,"/s:debug"]],[4166,4166],[4174,4174]]],[1570080853698,["GJX@GJXAIOU",[[1,4175,"`"]],[4175,4175],[4176,4176]]],[1570080856081,["GJX@GJXAIOU",[[1,4156,"`"]],[4156,4156],[4157,4157]]],[1570080858521,["GJX@GJXAIOU",[[1,4196,";"]],[4196,4196],[4197,4197]]],[1570080859607,["GJX@GJXAIOU",[[-1,4196,";"]],[4197,4197],[4196,4196]]],[1570080860065,["GJX@GJXAIOU",[[1,4196,"；"]],[4196,4196],[4197,4197]]],[1570080871695,["GJX@GJXAIOU",[[-1,4199,"（1）"]],[4199,4202],[4199,4199]]],[1570080873401,["GJX@GJXAIOU",[[1,4199,"过程："]],[4199,4199],[4202,4202]]],[1570080884718,["GJX@GJXAIOU",[[-1,4253,"（ValueStackDemoActon和 struts配置，valueStack.jsp（要引入标签库），body中写：<s:debug></s:debug>）\n"]],[4253,4335],[4253,4253]]],[1570080886815,["GJX@GJXAIOU",[[1,4254,"\n"]],[4253,4253],[4254,4254]]],[1570080909695,["GJX@GJXAIOU",[[-1,4255,"**访问结果：****![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image006.jpg)**"]],[4255,4348],[4255,4255]]],[1570080981302,["GJX@GJXAIOU",[[1,4257,"\n"]],[4254,4254],[4255,4255]]],[1570080984262,["GJX@GJXAIOU",[[1,4255,"代码过程："]],[4255,4255],[4260,4260]]],[1570080992829,["GJX@GJXAIOU",[[1,4263,"方位"]],[4263,4263],[4265,4265]]],[1570080993408,["GJX@GJXAIOU",[[-1,4263,"方位"]],[4265,4265],[4263,4263]]],[1570080997207,["GJX@GJXAIOU",[[1,4263,"访问 URL "]],[4263,4263],[4269,4269]]],[1570080998577,["GJX@GJXAIOU",[[1,4269,"：[http://localhost:8080/StandardStrutsProject3_war_exploded/valueStackAction](http://localhost:8080/StandardStrutsProject3_war_exploded/valueStackAction)"]],[4269,4269],[4422,4422]]],[1570081001518,["GJX@GJXAIOU",[[-1,4421,")"]],[4421,4422],[4421,4421]]],[1570081006023,["GJX@GJXAIOU",[[-1,4270,"[http://localhost:8080/StandardStrutsProject3_war_exploded/valueStackAction]("]],[4270,4346],[4270,4270]]],[1570081010418,["GJX@GJXAIOU",[[1,4350,"··"]],[4350,4350],[4352,4352]]],[1570081011625,["GJX@GJXAIOU",[[-1,4350,"··"]],[4352,4352],[4350,4350]]],[1570081012259,["GJX@GJXAIOU",[[1,4350,"``"]],[4350,4350],[4352,4352]]],[1570081018194,["GJX@GJXAIOU",[[1,4351,"[Debug]"]],[4351,4351],[4358,4358]]],[1570081019147,["GJX@GJXAIOU",[[1,4359," "]],[4359,4359],[4360,4360]]],[1570081021098,["GJX@GJXAIOU",[[1,4350," "]],[4350,4350],[4351,4351]]],[1570081035014,["GJX@GJXAIOU",[[1,4381,"\n"]],[4380,4380],[4381,4381]]],[1570081035158,["GJX@GJXAIOU",[[1,4382,"\n"]],[4381,4381],[4382,4382]]],[1570081038863,["GJX@GJXAIOU",[[1,4380,"### Value Stack Contents\n\n| Object | Property Name | Property Value | Property Class |\n| com.gjxaiou.action.ValueStackAction | container | There is no read method for container | class java.lang.String |\n| actionErrors | [] | class java.util.LinkedList |\n| actionMessages | [] | class java.util.LinkedList |\n| fieldErrors | {} | class java.util.LinkedHashMap |\n| texts | null | null |\n| locale | zh_CN | class java.util.Locale |\n| com.opensymphony.xwork2.DefaultTextProvider | localizedTextProvider | There is no read method for localizedTextProvider | class java.lang.String |\n| texts | null | null |"]],[4380,4380],[4981,4981]]],[1570081055433,["GJX@GJXAIOU",[[1,4467,"\n"]],[4466,4466],[4467,4467]]],[1570081066121,["GJX@GJXAIOU",[[1,4467,"|---|---|---|---|"]],[4467,4467],[4484,4484]]],[1570081093253,["GJX@GJXAIOU",[[-1,4406,"| Object | Property Name | Property Value | Property Class |\n|---|---|---|---|\n| com.gjxaiou.action.ValueStackAction | container | There is no read method for container | class java.lang.String |\n| actionErrors | [] | class java.util.LinkedList |\n| actionMessages | [] | class java.util.LinkedList |\n| fieldErrors | {} | class java.util.LinkedHashMap |\n| texts | null | null |\n| locale | zh_CN | class java.util.Locale |\n| com.opensymphony.xwork2.DefaultTextProvider | localizedTextProvider | There is no read method for localizedTextProvider | class java.lang.String |\n| texts | null | null |"]],[4406,4999],[4406,4406]]],[1570081103172,["GJX@GJXAIOU",[[1,4379,",Context 结构忽略"]],[4379,4379],[4392,4392]]],[1570081108470,["GJX@GJXAIOU",[[-1,4393,"### Value Stack Contents"]],[4393,4417],[4393,4393]]],[1570081109050,["GJX@GJXAIOU",[[1,4398,"\n"]],[4393,4393],[4394,4394]]],[1570081139470,["GJX@GJXAIOU",[[1,4394,"![Root结构]($resource/Root%E7%BB%93%E6%9E%84.png)"]],[4394,4394],[4442,4442]]],[1570081177393,["GJX@GJXAIOU",[[1,4443,"如同"]],[4443,4443],[4445,4445]]],[1570081178856,["GJX@GJXAIOU",[[-1,4443,"如同"]],[4445,4445],[4443,4443]]],[1570081184617,["GJX@GJXAIOU",[[1,4443,"如图所示："]],[4443,4443],[4448,4448]]],[1570081210315,["GJX@GJXAIOU",[[1,4448,"在action没有做任何操作，栈顶元素就是 action引用；"]],[4448,4448],[4479,4479]]],[1570081210727,["GJX@GJXAIOU",[[1,4482,"\n"]],[4479,4479],[4480,4480]]],[1570081211663,["GJX@GJXAIOU",[[1,4480,"- action对象里面有值栈对象\n\n- 值栈对象里面有action引用，不是真正的 action对象；"]],[4480,4480],[4532,4532]]],[1570081215969,["GJX@GJXAIOU",[[-1,4498,"\n"]],[4498,4498],[4497,4497]]],[1570081222673,["GJX@GJXAIOU",[[1,4500,"这里面看出"]],[4500,4500],[4505,4505]]],[1570081236455,["GJX@GJXAIOU",[[1,4518,"，这仅仅是 action "]],[4518,4518],[4530,4530]]],[1570081238682,["GJX@GJXAIOU",[[1,4512," "]],[4512,4512],[4513,4513]]],[1570081263898,["GJX@GJXAIOU",[[1,4556,"六、"]],[4556,4556],[4558,4558]]],[1570081271294,["GJX@GJXAIOU",[[-1,4566,"| \n\n- **向值栈放数据多种方式**"]],[4566,4586],[4566,4566]]],[1570081271926,["GJX@GJXAIOU",[[-1,4567,"\n"]],[4566,4566],[4565,4565]]],[1570081274253,["GJX@GJXAIOU",[[-1,4567,"**"]],[4567,4569],[4567,4567]]],[1570081274714,["GJX@GJXAIOU",[[1,4567,"- "]],[4567,4567],[4569,4569]]],[1570081278318,["GJX@GJXAIOU",[[-1,4591,"** **"]],[4591,4596],[4591,4591]]],[1570081278490,["GJX@GJXAIOU",[[1,4591," "]],[4591,4591],[4592,4592]]],[1570081281021,["GJX@GJXAIOU",[[-1,4595,"**"],[-1,4595," **"]],[4595,4600],[4595,4595]]],[1570081281753,["GJX@GJXAIOU",[[1,4595," "]],[4595,4595],[4596,4596]]],[1570081283421,["GJX@GJXAIOU",[[-1,4598,"**"]],[4598,4600],[4598,4598]]],[1570081283912,["GJX@GJXAIOU",[[1,4598,"；"]],[4598,4598],[4599,4599]]],[1570081971083,[null,[[-1,4596,"**；**"],[1,4601,"方法；"]],[4596,4596],[4604,4604]]],[1570081971083,[null,[[1,4596,"**；**"],[-1,4596,"方法；"]],[4604,4604],[4596,4596]]],[1570081929590,["GJX@GJXAIOU",[[-1,4601,"![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image028.jpg)\n\n![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image030.jpg)"]],[4601,4763],[4601,4601]]],[1570081932752,["GJX@GJXAIOU",[[1,4600,"···"]],[4600,4600],[4603,4603]]],[1570081933453,["GJX@GJXAIOU",[[-1,4600,"···"]],[4603,4603],[4600,4600]]],[1570081934657,["GJX@GJXAIOU",[[1,4600,"```"]],[4600,4600],[4603,4603]]],[1570081934710,["GJX@GJXAIOU",[[1,4603,"language\n```\n"]],[4603,4603],[4603,4611]]],[1570081935682,["GJX@GJXAIOU",[[-1,4603,"language"],[1,4611,"p"]],[4603,4611],[4604,4604]]],[1570081937369,["GJX@GJXAIOU",[[1,4604,"utVlau"]],[4604,4604],[4610,4610]]],[1570081938079,["GJX@GJXAIOU",[[-1,4607,"lau"]],[4610,4610],[4607,4607]]],[1570081938922,["GJX@GJXAIOU",[[1,4607,"au"]],[4607,4607],[4609,4609]]],[1570081939360,["GJX@GJXAIOU",[[-1,4608,"u"]],[4609,4609],[4608,4608]]],[1570081940059,["GJX@GJXAIOU",[[1,4608,"luse"]],[4608,4608],[4612,4612]]],[1570081940781,["GJX@GJXAIOU",[[-1,4610,"se"]],[4612,4612],[4610,4610]]],[1570081946236,["GJX@GJXAIOU",[[1,4610,"eAction_xml"]],[4610,4610],[4621,4621]]],[1570081949694,["GJX@GJXAIOU",[[-1,4566,"\n"]],[4566,4566],[4565,4565]]],[1570081952207,["GJX@GJXAIOU",[[1,4621,"\n"]],[4620,4620],[4621,4621]]],[1570081964106,["GJX@GJXAIOU",[[1,4621,"public class PutValueAction extends ActionSupport {\n    @Override\n    public String execute() throws Exception {\n        ActionContext context = ActionContext.getContext();\n        ValueStack valueStack = context.getValueStack();\n\n        // 方式一：使用值栈对象中的 set 方法\n        valueStack.set(\"userName\", \"GJXAIOU\");\n\n        // 方式二：调用 push 方法\n        valueStack.push(\"gjxaiou\");\n\n        return SUCCESS;\n    }\n}"]],[4621,4621],[5025,5025]]],[1570081967324,["GJX@GJXAIOU",[[-1,4939,"// 方式二：调用 push 方法\n        valueStack.push(\"gjxaiou\");\n\n        "]],[4930,4993],[4930,4930]]],[1570082031083,[null,[[-1,4595,"**；*"],[1,4599,"方法；\n"],[-1,4967,"*g)"],[1,4970,"\n"]],[4595,4595],[4971,4971]]],[1570082031083,[null,[[1,4595,"**；*"],[-1,4595,"方法；\n"],[1,4967,"*g)"],[-1,4967,"\n"]],[4971,4971],[4595,4595]]],[1570081983669,["GJX@GJXAIOU",[[1,4968,"\n"]],[4966,4966],[4967,4967]]],[1570081983840,["GJX@GJXAIOU",[[1,4969,"\n"]],[4967,4967],[4968,4968]]],[1570081984875,["GJX@GJXAIOU",[[1,4968,"s"]],[4968,4968],[4969,4969]]],[1570081985574,["GJX@GJXAIOU",[[-1,4968,"s"]],[4969,4969],[4968,4968]]],[1570081986105,["GJX@GJXAIOU",[[-1,4969,"\n"]],[4968,4968],[4967,4967]]],[1570081991993,["GJX@GJXAIOU",[[1,4967,"配置 struts。"]],[4967,4967],[4977,4977]]],[1570081992609,["GJX@GJXAIOU",[[-1,4976,"。"]],[4977,4977],[4976,4976]]],[1570081993532,["GJX@GJXAIOU",[[1,4976,".xn"]],[4976,4976],[4979,4979]]],[1570081994374,["GJX@GJXAIOU",[[-1,4978,"n"]],[4979,4979],[4978,4978]]],[1570081995970,["GJX@GJXAIOU",[[1,4978,"ml wenj"]],[4978,4978],[4985,4985]]],[1570081996888,["GJX@GJXAIOU",[[-1,4981,"wenj"]],[4985,4985],[4981,4981]]],[1570082009209,["GJX@GJXAIOU",[[1,4981,"文件和 debug.jsp 文件（）"]],[4981,4981],[4999,4999]]],[1570082012948,["GJX@GJXAIOU",[[1,4998,"和上面一样"]],[4998,4998],[5003,5003]]],[1570082014570,["GJX@GJXAIOU",[[1,5004,"；"]],[5004,5004],[5005,5005]]],[1570082015063,["GJX@GJXAIOU",[[1,5007,"\n"]],[5005,5005],[5006,5006]]],[1570082026523,["GJX@GJXAIOU",[[1,5006,"![使用 set 放入数据]($resource/%E4%BD%BF%E7%94%A8%20set%20%E6%94%BE%E5%85%A5%E6%95%B0%E6%8D%AE.png)"]],[5006,5006],[5100,5100]]],[1570082071422,[null,[[-1,4595,"**；*"],[1,4599,"方法；\n"],[-1,5005,"*"],[1,5006,"\n"],[-1,5101,"g)"]],[4595,4595],[5101,5101]]],[1570082071422,[null,[[1,4595,"**；*"],[-1,4595,"方法；\n"],[1,5005,"*"],[-1,5005,"\n"],[1,5101,"g)"]],[5101,5101],[4595,4595]]],[1570082040127,["GJX@GJXAIOU",[[-1,5006,"![使用 set 放入数据]($resource/%E4%BD%BF%E7%94%A8%20set%20%E6%94%BE%E5%85%A5%E6%95%B0%E6%8D%AE.png)"]],[5006,5099],[5006,5006]]],[1570082049110,["GJX@GJXAIOU",[[1,5006,"![使用 set 放入数据 2]($resource/%E4%BD%BF%E7%94%A8%20set%20%E6%94%BE%E5%85%A5%E6%95%B0%E6%8D%AE%202.png)"]],[5006,5006],[5106,5106]]]],null,"GJX@GJXAIOU"],["5b521037-4902-4b11-82bf-1652eedb16f3",1570082139278,"# FrameDay05_3 Struts2\n\n\n\n**上节内容**\n- 在action获取表单提交数据\n（1）使用ActionContext类获取\n（2）使用ServletActionContext类获取\n（3）接口注入\n\n- 结果配置\n（1）全局结果页面和局部结果页面\n（2）result标签type属性\n  - type属性值：\n    - 默认值是dispatcher做转发\n    - redirect做重定向\n    - chain转发到action\n    - redirectAction重定向到action\n\n- struts2 提供获取表单数据方式\n  - 属性封装\n  - 模型驱动封装\n  - 表达式封装\n\n- struts2获取数据封装到集合中\n\n- 使用模型驱动和属性封装注意问题：\n不能同时使用对同一个表单进行数据操作\n\n- 表达式封装和模型驱动比较\n  - 相同点：可以把数据封装到实体类对象里面\n  - 不同点：表达式封装可以封装到多个实体类对象里面\n\n\n\n**今天内容**\n\n- ognl概述\n- ognl入门案例\n- 什么是值栈\n  - servlet和action区别\n  - 值栈存储位置\n    - 每个action对象里面有一个值栈对象\n    - 值栈对象里面有action引用\n- 如何获取值栈对象\n- 值栈内部结构\n  - root：list 集合\n  - context：map 集合\n- 向值栈放数据\n  - s:debug 标签\n  - 向值栈放字符串\n  - 向值栈放对象\n  - 向值栈放 list 集合\n    - set 方法\n    - push 方法\n    - 定义变量，get 方法\n- 从值栈获取数据\n  * 从值栈获取字符串\n  * 从值栈获取对象\n  * 从值栈获取 list 集合\n    - s:iterator 标签使用\n- EL 表达式获取值栈数据\n  - 增强 request 里面 getAttribute 方法\n- ognl 表达式 #、% 使用\n\n## 一、OGNL概述\n\n- 之前web阶段，学习过EL表达式，**EL 表达式在 jsp 中获取域对象里面的值**；\n\n- OGNL是一种表达式，这个表达式功能更加强大，\n  - 一般用于在 struts2 里面操作值栈数据\n  - 一般把 ognl 在struts2 操作：和struts2标签一起使用来操作值栈\n\n-  OGNL 不是 struts2 的一部分，是一个单独的项目，经常和 struts2 一起使用\n  - 使用ognl时候首先导入jar包，struts2里面已经提供jar包；\n\n\n## 二、OGNL入门案例\n\n示例：使用ognl+struts2标签实现计算字符串长度\n\n- 在java代码中，调用 `字符串.length();`实现；\n\n-  使用struts2标签\n  - 首先：之前使用jstl时候，导入jar包之外，在jsp页面中引入标签库，使用struts2标签时候，也需要在jsp中引入标签库；\n`<%@taglib uri=\"/struts-tags\" prefix=\"s\"%>`\n  - 然后使用struts2标签实现操作；\n```ognlDemo_jsp\n<%@ page contentType=\"text/html;charset=UTF-8\" language=\"java\" %>\n<%@taglib uri=\"/struts-tags\" prefix=\"s\"%>\n<html>\n<head>\n    <title>This is a demo of ognl</title>\n</head>\n<body>\n    <s:property value=\"'GJXAIOU'.length()\"/>\n</body>\n</html>\n```\n- 最后在 web.xml 中向之前一样配置一样的过滤器即可；\n使用 URL 访问，最后加上 ognlDemo.jsp 即可；页面显示结果为：`7`\n\n## 三、值栈含义\n\n- 之前在 web 阶段，在 servlet 里面进行操作，通过把数据放到域对象里面，在页面中使用 EL 表达式获取到，**域对象主要作用：在一定范围内存值和取值**；\n\n- 在 struts2 里面本身提供一种存储机制，类似于域对象，是值栈，可以存值和取值，因此可以这样做：在 action 里面把数据放到值栈里面，在页面中获取到值栈数据；\n\n- servlet 和 action 区别\n    - Servlet：默认在第一次访问时候创建，只创建一次，单实例对象；\n    - Action：访问时候创建，每次访问 action 时候，都会创建 action 对象，创建多次，多实例对象；\n\n- 值栈存储位置\n  - 每次访问action时候，都会创建action对象，\n  - 在每个action对象里面都会有一个值栈对象（只有一个）\n![值栈存储位置]($resource/%E5%80%BC%E6%A0%88%E5%AD%98%E5%82%A8%E4%BD%8D%E7%BD%AE.png)\n\n\n## 四、获取值栈对象（UserAction中代码）\n\n获取值栈对象有多种方式\n- 常用方式：使用 ActionContext 类里面的方法得到值栈对象\n```UserAction_java\npackage com.gjxaiou.action;\n\nimport com.opensymphony.xwork2.ActionContext;\nimport com.opensymphony.xwork2.ActionSupport;\nimport com.opensymphony.xwork2.util.ValueStack;\n\n/**\n * @author GJXAIOU\n * @create 2019-10-03-11:02\n */\npublic class UserAction extends ActionSupport {\n    @Override\n    public String execute() throws Exception {\n        // 1.获取 ActionContext 类的对象\n        ActionContext actionContext = ActionContext.getContext();\n        // 2.调用方法获取值栈对象\n        ValueStack valueStack = actionContext.getValueStack();\n\n        // 验证每个 Action 对象只有一个值栈对象\n        ValueStack valueStack1 = actionContext.getValueStack();\n        System.out.println(valueStack == valueStack1);\n\n        return NONE;\n    }\n}\n```\n配置 struts.xml 后，每次访问该 Action 结果都是 true；\n上面代码中同时验证了每个action对象中只有一个值栈对象；\n\n## 五、值栈内部结构\n\n因为栈是一种先进后出的结构；\n\n值栈内容：\n这里以示例通过在 .getValueStack() 添加断点，可以看出值栈中具体内容：\n* valueStack = {OgnlValueStack@4512} \n  * root = {CompoundRoot@4559}  size = 2\n  * context = {OgnlContext@4474}  size = 22\n  * defaultType = null\n  * overrides = null\n  * ognlUtil = {OgnlUtil@4430} \n  * securityMemberAccess = {SecurityMemberAccess@4560} \n  * converter = {XWorkConverter@4561} \n  * devMode = true\n  * logMissingProperties = false\n- 第一部分 root，结构是本质上是 list 集合\n一般操作都是 root 里面数据；\n```java\npublic class CompoundRoot extends CopyOnWriteArrayList<Object> {\n// ........\n}\n\npublic class CopyOnWriteArrayList<E> implements List<E>, RandomAccess, Cloneable, Serializable {\n// .......\n}\n```\n// 因为 root 对应于 CompoundRoot，其最终实现了 List 接口；\n\n- 第二部分 context，结构本质上是map集合\n`public class OgnlContext extends Object implements Map`\n\ncontext 中结构为：\nkey | value|\n---|---|\nrequest|request 对象引用|\nsession|HttpSession 对象引用|\napplication|ServletContext 对象引用|\nparameters|传递相关的参数|\nattr|如果在三个域对象中同时使用 setAttribute(“name”, value)放入同样名称的值，使用 attr 操作获取域对象中值时，获取的是域对象范围最小的那一个（request）的值|\n\n**注：** Context 中存储的是对象的引用，其中 key 值是固定只有这么多；\n\n### （一）通过调试查看值栈内部结构 \n\n- struts2里面标签 `<s:debug></s:debug>`，使用这个标签可以查看值栈结构和存储值；\n\n过程：访问action，执行action的方法有返回值，配置返回值到jsp页面中，在jsp页面中使用这个标签\n\n代码过程：\n\n\n访问 URL：http://localhost:8080/StandardStrutsProject3_war_exploded/valueStackAction 点击超链接 `[Debug]` 可以看到结构，下面是 root 结构,Context 结构忽略\n\n![Root结构]($resource/Root%E7%BB%93%E6%9E%84.png)\n\n如图所示：在action没有做任何操作，栈顶元素就是 action引用；\n- action对象里面有值栈对象\n- 这里面看出值栈对象里面有 action，这仅仅是 action 引用，不是真正的 action对象；\n\n\n## 六、向值栈放数据\n\n- 第一种：首先获取值栈对象，调用值栈对象里面的 set 方法；\n```putValueAction_xml\npublic class PutValueAction extends ActionSupport {\n    @Override\n    public String execute() throws Exception {\n        ActionContext context = ActionContext.getContext();\n        ValueStack valueStack = context.getValueStack();\n\n        // 方式一：使用值栈对象中的 set 方法\n        valueStack.set(\"userName\", \"GJXAIOU\");\n\n        return SUCCESS;\n    }\n}\n```\n配置 struts.xml 文件和 debug.jsp 文件（和上面一样）；\n![使用 set 放入数据 2]($resource/%E4%BD%BF%E7%94%A8%20set%20%E6%94%BE%E5%85%A5%E6%95%B0%E6%8D%AE%202.png)\n\n这是栈顶元素了；root是 list结构，但是 list中可以放入一个 map集合，用来存储使用 set方法设置的值；\n\n**第二种：获取值栈对象，调用值栈对象里面的** **push****方法**\n\n![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image032.jpg)\n\n**![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image034.jpg)****这是栈顶元素，上面的** **set****是上一部分的；**\n\n**第三种：在****action****定义变量，生成变量的****get****方法（最常用），因为直接在值栈中放数据，不需要像上面的需要分配空间。**\n\n**![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image036.jpg)**\n\n![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image038.jpg)\n\n |\n\n### 向值栈放对象\n\n| \n\n**1** **实现步骤**\n\n**第一步****定义对象变量**\n\n**第二步****生成变量的****get****方法**\n\n**第三步****在执行的方法里面向对象中设置值**\n\nUser方法见代码，下面是ObjectDemoAction.java代码![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image040.jpg)\n\n![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image042.jpg)\n\n |\n\n### 向值栈放list集合\n\n| \n\n**第一步****定义****list****集合变量**\n\n**第二步****生成变量的****get****方法**\n\n**第三步****在执行的方法里面向****list****集合设置值**\n\n**代码见** **ListDemoAction.java****以及** **User.java****，以及和上面一样在** **struts.xml** **中配置，****jsp****中使用** **debug****。**\n\n![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image044.jpg)\n\n![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image046.jpg)\n\n |\n\n## 从值栈获取数据\n\n| \n\n**1** **使用****struts2****的标签****+ognl****表达式获取值栈数据**\n\n**（1****）<s:property value=”ognl****表达式”/>**\n\n |\n\n### 获取字符串\n\n| \n\n**1** **向值栈放字符串**\n\n![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image048.jpg)\n\n**2** **在****jsp****使用****struts2****标签****+ognl****表达式获取**\n\n**![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image050.jpg)**\n\n |\n\n### 获取对象\n\n| \n\n**1** **向值栈放对象**\n\n**![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image052.jpg)**\n\n**2** **在页面中获取值**\n\n**![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image054.jpg)**\n\n |\n\n### 获取list集合\n\n| \n\n**第一种方式：**\n\n![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image056.jpg)\n\n**第二种方式：****value****值为** **List****对象名；**\n\n![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image058.jpg)\n\n**第三种方式：最常用**\n\n![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image060.jpg)\n\n因为值是从 Context中取；\n\n |\n\n### 其他操作\n\n| \n\n**1** **使用****set****方法向值栈放数据，获取方法：**\n\n![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image062.jpg)\n\n![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image064.jpg)\n\n**2** **使用****push****方法向值栈放数据，获取方法：**\n\n![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image066.jpg)\n\n**（****1****）使用****push****方法设置值，没有名称，只有设置的值**\n\n**（****2****）向值栈放数据，会把向值栈放数据存到数组里面，数组名称** **top****，根据数组获取值**\n\n![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image068.jpg)\n\n |\n\n## EL表达式获取值栈数据（为什么）\n\n| \n\n**1 EL****表达式获取域对象值** **ValueStack.jsp**\n\n**首先加上标签头：`****<%@** **taglib** **uri=\"****http://java.sun.com/jsp/jstl/core****\" prefix=\"****c****\"%>****`**\n\n**然后使用 foreach**\n\n **<!--** **使用****foreach****标签****+el****表达式获取值栈****list****集合数据** **-->**\n\n **<c:forEach items=\"${list }\" var=\"user\">**\n\n **${user.username }**\n\n **${user.password }**\n\n **${user.address }**\n\n **<br/>**\n\n **</c:forEach>**\n\n**2** **向域对象里面放值使用****setAttribute****方法，获取值使用****getAttribute****方法**\n\n**3** **底层增强****request****对象里面的方法：****getAttribute****方法**\n\n**（****1****）首先从****request****域获取值，如果获取到，直接返回**\n\n**（****2****）如果从****request****域获取不到值，到值栈中把值获取出来，把值放到域对象里面**\n\n**4** **查看源代码（****web.xml****中过滤器点击进入）**\n\n![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image070.jpg)\n\n![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image072.jpg)\n\n |\n\n## OGNL的#、%使用\n\n### #使用\n\n| \n\n**1** **使用****#****获取****context****里面数据**\n\n![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image073.jpg)\n\n**2** **演示****#** **操作**\n\n**（****1****）向****request****域放值（见****ContextAction.java****）**\n\n**（****2****）在页面中使用****ognl****获取**\n\n![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image075.jpg)\n\n |\n\n### %使用\n\n| \n\n**1** **在****struts2****标签中表单标签**\n\n**（****1****）在****struts2****标签里面使用****ognl****表达式，如果直接在****struts2****表单标签里面使用****ognl****表达式不识别，只有****%****之后才会识别。**\n\n![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image077.jpg)\n\n |\n\n## 案例-列表功能改造（值栈）\n\n| \n\n![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image079.jpg)\n\n![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image081.jpg)\n\n |\n",[[1570082100977,["GJX@GJXAIOU",[[-1,5168,"**"]],[5168,5170],[5168,5168]]],[1570082101437,["GJX@GJXAIOU",[[1,5168,"- "]],[5168,5168],[5170,5170]]],[1570082106175,["GJX@GJXAIOU",[[-1,5190,"** **"]],[5190,5195],[5190,5190]]],[1570082106419,["GJX@GJXAIOU",[[1,5190," "]],[5190,5190],[5191,5191]]],[1570082108072,["GJX@GJXAIOU",[[-1,5195,"****"]],[5195,5199],[5195,5195]]],[1570082108469,["GJX@GJXAIOU",[[1,5195," "]],[5195,5195],[5196,5196]]],[1570082109399,["GJX@GJXAIOU",[[-1,5197,"法"]],[5198,5198],[5197,5197]]],[1570082132895,["GJX@GJXAIOU",[[-1,5201,"![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image032.jpg)\n\n**![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image034.jpg)****"]],[5201,5369],[5201,5201]]],[1570082135521,["GJX@GJXAIOU",[[1,5200,"··"]],[5200,5200],[5202,5202]]],[1570082136190,["GJX@GJXAIOU",[[-1,5200,"··"]],[5202,5202],[5200,5200]]],[1570082137417,["GJX@GJXAIOU",[[1,5200,"~··"]],[5200,5200],[5203,5203]]],[1570082138137,["GJX@GJXAIOU",[[-1,5200,"~··"]],[5203,5203],[5200,5200]]],[1570082141502,["GJX@GJXAIOU",[[-1,5197,"**·"]],[5200,5200],[5197,5197]]],[1570082145144,["GJX@GJXAIOU",[[1,5197,"法"]],[5197,5197],[5198,5198]]],[1570082145487,["GJX@GJXAIOU",[[1,5199,"- \n"]],[5198,5198],[5201,5201]]],[1570082146351,["GJX@GJXAIOU",[[-1,5199,"- "]],[5201,5201],[5199,5199]]],[1570082148364,["GJX@GJXAIOU",[[1,5199,"```"]],[5199,5199],[5202,5202]]],[1570082148413,["GJX@GJXAIOU",[[1,5202,"language\n```\n"]],[5202,5202],[5202,5210]]],[1570082151409,["GJX@GJXAIOU",[[-1,5202,"language"],[1,5210,"p"]],[5202,5210],[5203,5203]]],[1570082153563,["GJX@GJXAIOU",[[1,5203,"utVau"]],[5203,5203],[5208,5208]]],[1570082154609,["GJX@GJXAIOU",[[-1,5207,"u"]],[5208,5208],[5207,5207]]],[1570082160425,["GJX@GJXAIOU",[[1,5207,"lueAction_xml"]],[5207,5207],[5220,5220]]],[1570082160777,["GJX@GJXAIOU",[[1,5221,"\n"]],[5220,5220],[5221,5221]]],[1570082164889,["GJX@GJXAIOU",[[-1,5106,"\n"]],[5106,5106],[5105,5105]]],[1570082167637,["GJX@GJXAIOU",[[1,5220,"public class PutValueAction extends ActionSupport {\n    @Override\n    public String execute() throws Exception {\n        ActionContext context = ActionContext.getContext();\n        ValueStack valueStack = context.getValueStack();\n\n        // 方式一：使用值栈对象中的 set 方法\n        valueStack.set(\"userName\", \"GJXAIOU\");\n\n        // 方式二：调用 push 方法\n        valueStack.push(\"gjxaiou\");\n\n        return SUCCESS;\n    }\n}"]],[5220,5220],[5624,5624]]],[1570082172158,["GJX@GJXAIOU",[[-1,5459,"// 方式一：使用值栈对象中的 set 方法\n        valueStack.set(\"userName\", \"GJXAIOU\");\n\n        "]],[5450,5481],[5450,5450]]],[1570082172567,["GJX@GJXAIOU",[[-1,5450,"\n"]],[5450,5450],[5449,5449]]],[1570082173640,["GJX@GJXAIOU",[[1,5458,"\n        "]],[5449,5449],[5458,5458]]],[1570082176417,["GJX@GJXAIOU",[[1,5559,"\n"]],[5558,5558],[5559,5559]]],[1570082184782,["GJX@GJXAIOU",[[1,5558,"配置 struts.xml 文件和 debug.jsp 文件（和上面一样）；"]],[5558,5558],[5596,5596]]],[1570082191632,["GJX@GJXAIOU",[[1,5597,"![调用 push 方法]($resource/%E8%B0%83%E7%94%A8%20push%20%E6%96%B9%E6%B3%95.png)"]],[5597,5597],[5673,5673]]],[1570082204825,["GJX@GJXAIOU",[[-1,5683,"** **"]],[5688,5688],[5683,5683]]],[1570082206536,["GJX@GJXAIOU",[[-1,5686,"****"]],[5690,5690],[5686,5686]]],[1570082207863,["GJX@GJXAIOU",[[-1,5693,"**"]],[5695,5695],[5693,5693]]],[1570082226458,["GJX@GJXAIOU",[[1,4261,"Vaulu"]],[4261,4261],[4266,4266]]],[1570082227313,["GJX@GJXAIOU",[[-1,4261,"Vaulu"]],[4266,4266],[4261,4261]]],[1570082230613,["GJX@GJXAIOU",[[1,4261,"```Vaulu"]],[4261,4261],[4269,4269]]],[1570082231234,["GJX@GJXAIOU",[[-1,4266,"ulu"]],[4269,4269],[4266,4266]]],[1570082242555,["GJX@GJXAIOU",[[1,4266,"lueStackAction_java"]],[4266,4266],[4285,4285]]],[1570082242922,["GJX@GJXAIOU",[[1,4287,"\n"]],[4285,4285],[4286,4286]]],[1570082243752,["GJX@GJXAIOU",[[1,4288,"\n"]],[4286,4286],[4287,4287]]],[1570082245378,["GJX@GJXAIOU",[[1,4287,"```"]],[4287,4287],[4290,4290]]],[1570082248780,["GJX@GJXAIOU",[[1,4286,"public class ValueStackAction extends ActionSupport {\n    @Override\n    public String execute() throws Exception {\n\n        ActionContext actionContext = ActionContext.getContext();\n        ValueStack valueStack = actionContext.getValueStack();\n        return SUCCESS;\n    }\n}\n"]],[4286,4286],[4563,4563]]],[1570082251023,["GJX@GJXAIOU",[[-1,4563,"\n"]],[4563,4563],[4562,4562]]],[1570082254468,["GJX@GJXAIOU",[[1,4568,"\n"]],[4566,4566],[4567,4567]]],[1570082254896,["GJX@GJXAIOU",[[1,4569,"\n"]],[4567,4567],[4568,4568]]],[1570082281561,["GJX@GJXAIOU",[[1,4567,"peizhi"]],[4567,4567],[4573,4573]]],[1570082282529,["GJX@GJXAIOU",[[-1,4567,"peizhi"]],[4573,4573],[4567,4567]]],[1570082289452,["GJX@GJXAIOU",[[1,4567,"配置 strutsx."]],[4567,4567],[4578,4578]]],[1570082290007,["GJX@GJXAIOU",[[-1,4576,"x."]],[4578,4578],[4576,4576]]],[1570082291204,["GJX@GJXAIOU",[[1,4576,".xml"]],[4576,4576],[4580,4580]]],[1570082292360,["GJX@GJXAIOU",[[1,4583,"\n"]],[4580,4580],[4581,4581]]],[1570082293409,["GJX@GJXAIOU",[[1,4581,"··"]],[4581,4581],[4583,4583]]],[1570082294050,["GJX@GJXAIOU",[[-1,4581,"··"]],[4583,4583],[4581,4581]]],[1570082297737,["GJX@GJXAIOU",[[1,4581,"```st"]],[4581,4581],[4586,4586]]],[1570082300118,["GJX@GJXAIOU",[[-1,4584,"st"]],[4586,4586],[4584,4584]]],[1570082301324,["GJX@GJXAIOU",[[1,4584,"xml"]],[4584,4584],[4587,4587]]],[1570082301625,["GJX@GJXAIOU",[[1,4590,"\n"]],[4587,4587],[4588,4588]]],[1570082301863,["GJX@GJXAIOU",[[1,4591,"\n"]],[4588,4588],[4589,4589]]],[1570082302666,["GJX@GJXAIOU",[[1,4589,"```"]],[4589,4589],[4592,4592]]],[1570082306608,["GJX@GJXAIOU",[[1,4588,"<struts>\n    <constant name=\"struts.devMode\" value=\"true\"></constant>\n    <package name=\"valueStack\" extends=\"struts-default\" namespace=\"/\">\n        <action name=\"userAction\" class=\"com.gjxaiou.action.UserAction\"></action>\n        <action name=\"valueStackAction\" class=\"com.gjxaiou.action.ValueStackAction\">\n            <result name=\"success\">/debug.jsp</result>\n        </action>\n        <action name=\"putValueAction\" class=\"com.gjxaiou.action.PutValueAction\">\n            <result name = \"success\">/debug.jsp</result>\n        </action>\n    </package>\n</struts>"]],[4588,4588],[5149,5149]]],[1570082315389,["GJX@GJXAIOU",[[-1,4733,"    <action name=\"userAction\" class=\"com.gjxaiou.action.UserAction\"></action>"]],[4736,4810],[4733,4733]]],[1570082316830,["GJX@GJXAIOU",[[-1,4730,"   "]],[4729,4732],[4729,4729]]],[1570082317141,["GJX@GJXAIOU",[[-1,4728,"\n"]],[4729,4729],[4728,4728]]],[1570082324255,["GJX@GJXAIOU",[[-1,4888,"        <action name=\"putValueAction\" class=\"com.gjxaiou.action.PutValueAction\">\n            <result name = \"success\">/debug.jsp</result>\n        </action>"]],[4896,5043],[4888,4888]]],[1570082324679,["GJX@GJXAIOU",[[-1,4888,"\n"]],[4888,4888],[4887,4887]]],[1570082339859,["GJX@GJXAIOU",[[1,4917," tia"]],[4917,4917],[4921,4921]]],[1570082340393,["GJX@GJXAIOU",[[-1,4918,"tia"]],[4921,4921],[4918,4918]]],[1570082350586,["GJX@GJXAIOU",[[1,4918,"调试页面：debug.jsp"]],[4918,4918],[4932,4932]]],[1570082351090,["GJX@GJXAIOU",[[1,4933," \n"]],[4932,4932],[4934,4934]]],[1570082354273,["GJX@GJXAIOU",[[1,4934,"```jspa"]],[4934,4934],[4941,4941]]],[1570082356904,["GJX@GJXAIOU",[[-1,4933," ```jspa"]],[4941,4941],[4933,4933]]],[1570082359532,["GJX@GJXAIOU",[[1,4933,"```jsp"]],[4933,4933],[4939,4939]]],[1570082360080,["GJX@GJXAIOU",[[1,4941,"\n"]],[4939,4939],[4940,4940]]],[1570082360312,["GJX@GJXAIOU",[[1,4942,"\n"]],[4940,4940],[4941,4941]]],[1570082361193,["GJX@GJXAIOU",[[1,4941,"```"]],[4941,4941],[4944,4944]]],[1570082364616,["GJX@GJXAIOU",[[1,4940,"<%@ page contentType=\"text/html;charset=UTF-8\" language=\"java\" %>\n<%@taglib uri=\"/struts-tags\" prefix=\"s\"%>\n<html>\n<head>\n    <title>This is debug page</title>\n</head>\n<body>\n    <s:debug></s:debug>\n\n</body>\n</html>"]],[4940,4940],[5155,5155]]],[1570082367894,["GJX@GJXAIOU",[[-1,5139,"\n"]],[5139,5139],[5138,5138]]],[1570082396013,["GJX@GJXAIOU",[[-1,6599,"****"]],[6599,6603],[6599,6599]]],[1570082398873,["GJX@GJXAIOU",[[-1,6605,"****"]],[6605,6609],[6605,6605]]],[1570082399315,["GJX@GJXAIOU",[[1,6605," "]],[6605,6605],[6606,6606]]],[1570082400238,["GJX@GJXAIOU",[[1,6599," "]],[6599,6599],[6600,6600]]],[1570082402599,["GJX@GJXAIOU",[[-1,6617,"****"]],[6617,6621],[6617,6617]]],[1570082402882,["GJX@GJXAIOU",[[1,6617," "]],[6617,6617],[6618,6618]]],[1570082404825,["GJX@GJXAIOU",[[-1,6621,"****"]],[6621,6625],[6621,6621]]],[1570082405059,["GJX@GJXAIOU",[[1,6621," "]],[6621,6621],[6622,6622]]],[1570082409516,["GJX@GJXAIOU",[[1,6592,"- "]],[6592,6592],[6594,6594]]],[1570082646326,["GJX@GJXAIOU",[[-1,6662,"**![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image036.jpg)**\n\n![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image038.jpg)\n\n |"]],[6662,6832],[6662,6662]]],[1570082649241,["GJX@GJXAIOU",[[1,6661,"···"]],[6661,6661],[6664,6664]]],[1570082650501,["GJX@GJXAIOU",[[-1,6661,"···"]],[6664,6664],[6661,6661]]],[1570082651746,["GJX@GJXAIOU",[[1,6661,"```"]],[6661,6661],[6664,6664]]],[1570082651808,["GJX@GJXAIOU",[[1,6664,"language\n```\n"]],[6664,6664],[6664,6672]]],[1570082655268,["GJX@GJXAIOU",[[-1,6664,"language"],[1,6672,"p"]],[6664,6672],[6665,6665]]],[1570082656956,["GJX@GJXAIOU",[[1,6665,"utVau"]],[6665,6665],[6670,6670]]],[1570082657809,["GJX@GJXAIOU",[[-1,6669,"u"]],[6670,6670],[6669,6669]]],[1570082661562,["GJX@GJXAIOU",[[1,6669,"lueStact"]],[6669,6669],[6677,6677]]],[1570082662296,["GJX@GJXAIOU",[[-1,6676,"t"]],[6677,6677],[6676,6676]]],[1570082670690,["GJX@GJXAIOU",[[1,6676,"kAction_java"]],[6676,6676],[6688,6688]]],[1570082671857,["GJX@GJXAIOU",[[1,6689,"\n"]],[6688,6688],[6689,6689]]],[1570082676391,["GJX@GJXAIOU",[[1,6689,"public class PutValueAction extends ActionSupport {\n//    @Override\n//    public String execute() throws Exception {\n//        ActionContext context = ActionContext.getContext();\n//        ValueStack valueStack = context.getValueStack();\n//\n//        // 方式一：使用值栈对象中的 set 方法\n//        valueStack.set(\"userName\", \"GJXAIOU\");\n//\n//        // 方式二：调用 push 方法\n//        valueStack.push(\"gjxaiou\");\n//\n//        return SUCCESS;\n//    }\n\n    // 方式三：定义变量然后生成对应的 get 方法\n    private String userName;\n\n    public String getUserName() {\n        return userName;\n    }\n\n    @Override\n    public String execute() throws Exception {\n        // 在执行的方法中面向变量设置值\n        userName = \"GJXaiou\";\n        return SUCCESS;\n    }\n}"]],[6689,6689],[7393,7393]]],[1570082679959,["GJX@GJXAIOU",[[-1,6741,"//    @Override\n//    public String execute() throws Exception {\n//        ActionContext context = ActionContext.getContext();\n//        ValueStack valueStack = context.getValueStack();\n//\n//        // 方式一：使用值栈对象中的 set 方法\n//        valueStack.set(\"userName\", \"GJXAIOU\");\n//\n//        // 方式二：调用 push 方法\n//        valueStack.push(\"gjxaiou\");\n//\n//        return SUCCESS;\n//    }"]],[6741,7117],[6741,6741]]],[1570082680530,["GJX@GJXAIOU",[[-1,6742,"\n"]],[6741,6741],[6740,6740]]],[1570082738276,["GJX@GJXAIOU",[[1,7022,"![第三种方式]($resource/%E7%AC%AC%E4%B8%89%E7%A7%8D%E6%96%B9%E5%BC%8F.png)"]],[7022,7022],[7092,7092]]],[1570082768254,["GJX@GJXAIOU",[[-1,6631,"，"]],[6631,6632],[6631,6631]]],[1570082769907,["GJX@GJXAIOU",[[1,6631,"****"]],[6631,6631],[6633,6633]]],[1570082770969,["GJX@GJXAIOU",[[1,6633,"\n"]],[6633,6633],[6634,6634]]],[1570082786186,["GJX@GJXAIOU",[[1,7097,"\n"]],[7097,7097],[7098,7098]]],[1570082809585,["GJX@GJXAIOU",[[1,5462,"### ()"]],[5462,5462],[5468,5468]]],[1570082811874,["GJX@GJXAIOU",[[-1,5466,"()"]],[5468,5468],[5466,5466]]],[1570082812490,["GJX@GJXAIOU",[[1,5466,"（0"]],[5466,5466],[5468,5468]]],[1570082814534,["GJX@GJXAIOU",[[-1,5466,"（0"]],[5468,5468],[5466,5466]]],[1570082815418,["GJX@GJXAIOU",[[1,5466,"（）"]],[5466,5466],[5468,5468]]],[1570082817067,["GJX@GJXAIOU",[[1,5467,"一"]],[5467,5467],[5468,5468]]],[1570082821553,["GJX@GJXAIOU",[[1,5469,"放入普通通"]],[5469,5469],[5474,5474]]],[1570082822094,["GJX@GJXAIOU",[[-1,5473,"通"]],[5474,5474],[5473,5473]]],[1570082823355,["GJX@GJXAIOU",[[1,5473,"数据"]],[5473,5473],[5475,5475]]],[1570082828640,["GJX@GJXAIOU",[[1,7115,"（）"]],[7115,7115],[7117,7117]]],[1570082829491,["GJX@GJXAIOU",[[1,7116,"二"]],[7116,7116],[7117,7117]]],[1570082844137,["GJX@GJXAIOU",[[-1,7126,"| \n\n**1** **"],[-1,7142,"**"],[-1,7146,"**"],[-1,7151,"****"],[1,7155,"  "],[-1,7161,"**"],[-1,7165,"**"],[-1,7170,"****"],[1,7174,"  "],[-1,7179,"****"],[-1,7186,"****"],[-1,7192,"**"],[-1,7196,"**"],[-1,7201,"****"],[1,7205,"  "],[-1,7220,"**"]],[7126,7222],[7182,7182]]],[1570082846335,["GJX@GJXAIOU",[[1,7126,"**"],[1,7130,"**"]],[7126,7130],[7126,7134]]],[1570082847534,["GJX@GJXAIOU",[[-1,7135,"\n"]],[7135,7135],[7134,7134]]],[1570082848173,["GJX@GJXAIOU",[[-1,7147,"\n"]],[7147,7147],[7146,7146]]],[1570082849248,["GJX@GJXAIOU",[[-1,7163,"\n"]],[7163,7163],[7162,7162]]],[1570082851983,["GJX@GJXAIOU",[[1,7135,"* "],[1,7147,"* "],[1,7163,"* "]],[7135,7183],[7137,7189]]],[1570082865201,["GJX@GJXAIOU",[[1,7191,"\n"]],[7190,7190],[7191,7191]]],[1570082868587,["GJX@GJXAIOU",[[1,7191,"User。"]],[7191,7191],[7196,7196]]],[1570082870320,["GJX@GJXAIOU",[[-1,7191,"User。"]],[7196,7196],[7191,7191]]],[1570082871635,["GJX@GJXAIOU",[[1,7191,"```"]],[7191,7191],[7194,7194]]],[1570082871689,["GJX@GJXAIOU",[[1,7194,"language\n```\n"]],[7194,7194],[7194,7202]]],[1570082872549,["GJX@GJXAIOU",[[-1,7194,"language"],[1,7202,"U"]],[7194,7202],[7195,7195]]],[1570082875526,["GJX@GJXAIOU",[[1,7195,"ser_java"]],[7195,7195],[7203,7203]]],[1570082875945,["GJX@GJXAIOU",[[1,7204,"\n"]],[7203,7203],[7204,7204]]],[1570083343656,["GJX@GJXAIOU",[[1,7210,"\n"]],[7208,7208],[7209,7209]]],[1570083343820,["GJX@GJXAIOU",[[1,7211,"\n"]],[7209,7209],[7210,7210]]],[1570083345587,["GJX@GJXAIOU",[[1,7210,"```"]],[7210,7210],[7213,7213]]],[1570083345642,["GJX@GJXAIOU",[[1,7213,"language\n```\n"]],[7213,7213],[7213,7221]]],[1570083347599,["GJX@GJXAIOU",[[-1,7213,"lang"],[-1,7213,"uage"]],[7213,7221],[7213,7213]]],[1570083360112,["GJX@GJXAIOU",[[1,7213,"putObjectAction_jacvava"]],[7213,7213],[7236,7236]]],[1570083361895,["GJX@GJXAIOU",[[-1,7231,"cvava"]],[7236,7236],[7231,7231]]],[1570083362246,["GJX@GJXAIOU",[[1,7231,"va"]],[7231,7231],[7233,7233]]],[1570083362826,["GJX@GJXAIOU",[[1,7234,"\n"]],[7233,7233],[7234,7234]]],[1570083365859,["GJX@GJXAIOU",[[1,7234,"public class putObjectAction extends ActionSupport {\n    // 首先定义对象变量\n    private User user = new User();\n    // 然后生成对应的 get 方法\n    public User getUser() {\n        return user;\n    }\n\n    @Override\n    public String execute() throws Exception {\n        // 最后向值栈的 user 中放入数据\n        user.setUsername(\"GJXAIOU\");\n        user.setPassword(\"gjxaiou\");\n        user.setAddress(\"南京\");\n\n        return SUCCESS;\n    }\n}"]],[7234,7234],[7644,7644]]],[1570083380597,["GJX@GJXAIOU",[[1,7204,"@Setter\npublic class User {\n    private String username;\n    private String password;\n    private String address;\n}"]],[7204,7204],[7319,7319]]],[1570083392835,["GJX@GJXAIOU",[[1,7764,"ranh"]],[7764,7764],[7768,7768]]],[1570083393537,["GJX@GJXAIOU",[[-1,7764,"ranh"]],[7768,7768],[7764,7764]]],[1570083397255,["GJX@GJXAIOU",[[1,7764,"然后同上"]],[7764,7764],[7768,7768]]],[1570083458442,[null,[[-1,7348,"u"],[1,7349,"\n"],[-1,7760,"age"],[1,7763,"```"],[-1,7768,"```\n"]],[7348,7348],[7768,7768]]],[1570083458442,[null,[[1,7348,"u"],[-1,7348,"\n"],[1,7760,"age"],[-1,7760,"```"],[1,7768,"```\n"]],[7768,7768],[7348,7348]]],[1570083403567,["GJX@GJXAIOU",[[1,7768,"配置 struts.xml he "]],[7768,7768],[7785,7785]]],[1570083404750,["GJX@GJXAIOU",[[-1,7782,"he "]],[7785,7785],[7782,7782]]],[1570083405066,["GJX@GJXAIOU",[[1,7782,"h"]],[7782,7782],[7783,7783]]],[1570083405437,["GJX@GJXAIOU",[[-1,7782,"h"]],[7783,7783],[7782,7782]]],[1570083419347,["GJX@GJXAIOU",[[1,7782,"和 debug.jsp"]],[7782,7782],[7793,7793]]],[1570083419904,["GJX@GJXAIOU",[[1,7795,"\n"]],[7793,7793],[7794,7794]]],[1570083431718,["GJX@GJXAIOU",[[1,7794,"![值栈中放入对象]($resource/%E5%80%BC%E6%A0%88%E4%B8%AD%E6%94%BE%E5%85%A5%E5%AF%B9%E8%B1%A1.png)"]],[7794,7794],[7884,7884]]],[1570083457449,["GJX@GJXAIOU",[[-1,7885,"User方法见代码，下面是ObjectDemoAction.java代码![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image040.jpg)\n\n![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image042.jpg)\n\n |\n"]],[7885,8088],[7885,7885]]],[1570083518451,[null,[[-1,7348,"u"],[1,7349,"\n"],[-1,7760,"age"],[1,7763,"```"],[-1,7793,"`"],[1,7794,"\n"],[-1,7883,"`"],[-1,7885,"\n |"]],[7348,7348],[7885,7885]]],[1570083518451,[null,[[1,7348,"u"],[-1,7348,"\n"],[1,7760,"age"],[-1,7760,"```"],[1,7793,"`"],[-1,7793,"\n"],[1,7883,"`"],[1,7884,"\n |"]],[7885,7885],[7348,7348]]],[1570083462977,["GJX@GJXAIOU",[[1,7890,"（）"]],[7890,7890],[7892,7892]]],[1570083465078,["GJX@GJXAIOU",[[1,7891,"三"]],[7891,7891],[7892,7892]]],[1570083467904,["GJX@GJXAIOU",[[-1,7905,"| "]],[7905,7907],[7905,7905]]],[1570083481387,["GJX@GJXAIOU",[[-1,7905,"\n\n**"],[-1,7912,"****"],[1,7916,"  "],[-1,7918,"****"],[-1,7926,"****"],[-1,7934,"**"],[-1,7938,"**"],[-1,7943,"****"],[1,7947,"  "],[-1,7952,"****"],[-1,7959,"****"],[-1,7965,"**"],[-1,7969,"**"],[-1,7974,"****"],[1,7978,"  "],[-1,7987,"****"],[-1,7995,"****"],[-1,8004,"**"],[-1,8008,"**"],[-1,8013,"**"],[-1,8016,"**"],[-1,8037,"****"],[-1,8043,"**"],[-1,8046,"**"],[-1,8057,"****"],[-1,8070,"**"],[-1,8073,"**"],[-1,8085,"**"],[-1,8088,"**"],[-1,8094,"****"],[-1,8101,"****"],[-1,8108,"**"],[-1,8111,"**"],[-1,8118,"****"],[-1,8123,"**\n\n![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image044.jpg)\n\n![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image046.jpg)\n\n |\n"]],[7905,8294],[8037,8037]]],[1570083483609,["GJX@GJXAIOU",[[-1,7921,"\n"]],[7921,7921],[7920,7920]]],[1570083484534,["GJX@GJXAIOU",[[-1,7937,"\n"]],[7937,7937],[7936,7936]]],[1570083486202,["GJX@GJXAIOU",[[1,7962,"\n"]],[7961,7961],[7962,7962]]],[1570083486499,["GJX@GJXAIOU",[[1,7963,"\n"]],[7962,7962],[7963,7963]]],[1570084598463,[null,[[-1,7348,"u"],[1,7349,"\n"],[-1,7760,"age"],[1,7763,"```"],[-1,7793,"`"],[1,7794,"\n"],[-1,7883,"`"],[-1,7885,"\n |"],[-1,7890,"（三）"],[1,7897,"（三）"],[1,7905,"集合"],[-1,7907,"*  **********变\n\n*  ****生*****方\n\n*"],[1,7940,"第一步  定义list集合变量\n第二步  生成变量的get方法\n第三步"],[-1,7942,"****"],[-1,7951,"********集"],[1,7960,"法里面向list集合设"],[-1,7966,"*码* **"],[1,7972,"代码见 "],[-1,7987,"**以* **"],[1,7994,"java以及 "],[-1,7999,"****"],[1,8003,"java"],[-1,8008,"样* **"],[1,8013,"面一样在 "],[-1,8019,"m* ********使* **d*\n |\n"],[1,8041,".xml 中配置，jsp中使用 debug。"]],[7348,7348],[8063,8063]]],[1570084598463,[null,[[1,7348,"u"],[-1,7348,"\n"],[1,7760,"age"],[-1,7760,"```"],[1,7793,"`"],[-1,7793,"\n"],[1,7883,"`"],[1,7884,"\n |"],[1,7886,"（三）"],[-1,7890,"（三）"],[-1,7901,"集合"],[1,7905,"*  **********变\n\n*  ****生*****方\n\n*"],[-1,7905,"第一步  定义list集合变量\n第二步  生成变量的get方法\n第三步"],[1,7942,"****"],[1,7947,"********集"],[-1,7947,"法里面向list集合设"],[1,7964,"*码* **"],[-1,7964,"代码见 "],[1,7983,"**以* **"],[-1,7983,"java以及 "],[1,7995,"****"],[-1,7995,"java"],[1,8004,"样* **"],[-1,8004,"面一样在 "],[1,8015,"m* ********使* **d*\n |\n"],[-1,8015,".xml 中配置，jsp中使用 debug。"]],[8063,8063],[7348,7348]]],[1570084589843,["GJX@GJXAIOU",[[1,8039,"\n"]],[8039,8039],[8040,8040]]],[1570084589975,["GJX@GJXAIOU",[[1,8040,"\n"]],[8040,8040],[8041,8041]]],[1570084590096,["GJX@GJXAIOU",[[1,8041,"\n"]],[8041,8041],[8042,8042]]],[1570084592073,["GJX@GJXAIOU",[[1,8043,"#"]],[8042,8042],[8052,8052]]],[1570084594287,["GJX@GJXAIOU",[[-1,8038,"#"]],[8039,8039],[8038,8038]]],[1570084594404,["GJX@GJXAIOU",[[-1,8040,"\n"]],[8038,8038],[8037,8037]]],[1570084658461,[null,[[-1,7348,"u"],[1,7349,"\n"],[-1,7760,"age"],[1,7763,"```"],[-1,7793,"`"],[1,7794,"\n"],[-1,7883,"`"],[-1,7885,"\n |"],[-1,7890,"（三）"],[1,7897,"（三）"],[1,7905,"集合"],[-1,7907,"*  **********变\n\n*  ****生*****方\n\n*"],[1,7940,"第一步  定义list集合变量\n第二步  生成变量的get方法\n第三步"],[-1,7942,"****"],[-1,7951,"********集"],[1,7960,"法里面向list集合设"],[-1,7966,"*码* **"],[1,7972,"代码见 "],[-1,7987,"**以* **"],[1,7994,"java以及 "],[-1,7999,"****"],[1,8003,"java"],[-1,8008,"样* **"],[1,8013,"面一样在 "],[-1,8019,"m* ********使* **d*\n\n\n|#"],[1,8042,".xml 中配置，jsp中使用 debug。\n"]],[7348,7348],[8065,8065]]],[1570084658461,[null,[[1,7348,"u"],[-1,7348,"\n"],[1,7760,"age"],[-1,7760,"```"],[1,7793,"`"],[-1,7793,"\n"],[1,7883,"`"],[1,7884,"\n |"],[1,7886,"（三）"],[-1,7890,"（三）"],[-1,7901,"集合"],[1,7905,"*  **********变\n\n*  ****生*****方\n\n*"],[-1,7905,"第一步  定义list集合变量\n第二步  生成变量的get方法\n第三步"],[1,7942,"****"],[1,7947,"********集"],[-1,7947,"法里面向list集合设"],[1,7964,"*码* **"],[-1,7964,"代码见 "],[1,7983,"**以* **"],[-1,7983,"java以及 "],[1,7995,"****"],[-1,7995,"java"],[1,8004,"样* **"],[-1,8004,"面一样在 "],[1,8015,"m* ********使* **d*\n\n\n|#"],[-1,8015,".xml 中配置，jsp中使用 debug。\n"]],[8065,8065],[7348,7348]]],[1570084602794,["GJX@GJXAIOU",[[-1,7964,"代码见 ListDemoAction.java以及 User.java，以及和上面一样在 struts.xml 中配置，jsp中使用 debug。"]],[7964,8037],[7964,7964]]],[1570084615225,["GJX@GJXAIOU",[[1,7964,"![堆栈中放入 List]($resource/%E5%A0%86%E6%A0%88%E4%B8%AD%E6%94%BE%E5%85%A5%20List.png)"]],[7964,7964],[8046,8046]]],[1570084639252,["GJX@GJXAIOU",[[1,7962,"···"]],[7962,7962],[7965,7965]]],[1570084639904,["GJX@GJXAIOU",[[-1,7962,"···"]],[7965,7965],[7962,7962]]],[1570084641244,["GJX@GJXAIOU",[[1,7962,"~··"]],[7962,7962],[7965,7965]]],[1570084641908,["GJX@GJXAIOU",[[-1,7962,"~··"]],[7965,7965],[7962,7962]]],[1570084642041,["GJX@GJXAIOU",[[-1,7963,"\n"]],[7962,7962],[7961,7961]]],[1570084642347,["GJX@GJXAIOU",[[1,7961,"·"]],[7961,7961],[7962,7962]]],[1570084643105,["GJX@GJXAIOU",[[-1,7961,"·"]],[7962,7962],[7961,7961]]],[1570084643624,["GJX@GJXAIOU",[[1,7963,"\n"]],[7961,7961],[7962,7962]]],[1570084644422,["GJX@GJXAIOU",[[1,7962,"~··"]],[7962,7962],[7965,7965]]],[1570084645100,["GJX@GJXAIOU",[[-1,7962,"~··"]],[7965,7965],[7962,7962]]],[1570084645588,["GJX@GJXAIOU",[[1,7962,"·"]],[7962,7962],[7963,7963]]],[1570084646057,["GJX@GJXAIOU",[[-1,7962,"·"]],[7963,7963],[7962,7962]]],[1570084647301,["GJX@GJXAIOU",[[1,7962,"```"]],[7962,7962],[7965,7965]]],[1570084647353,["GJX@GJXAIOU",[[1,7965,"language\n```\n"]],[7965,7965],[7965,7973]]],[1570084652915,["GJX@GJXAIOU",[[-1,7966,"anguage"]],[7965,7973],[7966,7966]]],[1570084653524,["GJX@GJXAIOU",[[1,7966,"i"]],[7966,7966],[7967,7967]]],[1570084655551,["GJX@GJXAIOU",[[-1,7965,"li"]],[7967,7967],[7965,7965]]],[1570084657555,["GJX@GJXAIOU",[[1,7965,"put"]],[7965,7965],[7968,7968]]],[1570084718461,[null,[[-1,7348,"u"],[1,7349,"\n"],[-1,7760,"age"],[1,7763,"```"],[-1,7793,"`"],[1,7794,"\n"],[-1,7883,"`"],[-1,7886," |"],[-1,7889,"\n（三）"],[1,7897,"（三）"],[1,7905,"集合"],[-1,7907,"*  **********变\n\n*  ****生*****方\n\n*"],[1,7940,"第一步  定义list集合变量\n第二步  生成变量的get方法\n第三步"],[-1,7942,"****"],[-1,7951,"********集"],[1,7960,"法里面向list集合设"],[1,7962,"\n\n"],[-1,8057,"\n\n|#"]],[7348,7348],[8057,8057]]],[1570084718461,[null,[[1,7348,"u"],[-1,7348,"\n"],[1,7760,"age"],[-1,7760,"```"],[1,7793,"`"],[-1,7793,"\n"],[1,7883,"`"],[1,7885," |"],[1,7886,"\n（三）"],[-1,7890,"（三）"],[-1,7901,"集合"],[1,7905,"*  **********变\n\n*  ****生*****方\n\n*"],[-1,7905,"第一步  定义list集合变量\n第二步  生成变量的get方法\n第三步"],[1,7942,"****"],[1,7947,"********集"],[-1,7947,"法里面向list集合设"],[-1,7960,"\n\n"],[1,8057,"\n\n|#"]],[8057,8057],[7348,7348]]],[1570084662450,["GJX@GJXAIOU",[[1,7968,"ListAction"]],[7968,7968],[7978,7978]]],[1570084663249,["GJX@GJXAIOU",[[1,7979,"\n"]],[7978,7978],[7979,7979]]],[1570084663863,["GJX@GJXAIOU",[[-1,7979,"\n"]],[7979,7979],[7978,7978]]],[1570084667924,["GJX@GJXAIOU",[[1,7978,"-_"]],[7978,7978],[7980,7980]]],[1570084668603,["GJX@GJXAIOU",[[-1,7978,"-_"]],[7980,7980],[7978,7978]]],[1570084670145,["GJX@GJXAIOU",[[1,7978,"_java"]],[7978,7978],[7983,7983]]],[1570084670305,["GJX@GJXAIOU",[[1,7984,"\n"]],[7983,7983],[7984,7984]]],[1570084673546,["GJX@GJXAIOU",[[1,7984,"public class putListAction extends ActionSupport{\n    // 首先定义 List 变量\n    private List<User> userList = new ArrayList<User>();\n    // 同时实现 get 方法\n    public List<User> getUserList() {\n        return userList;\n    }\n\n    @Override\n    public String execute() throws Exception {\n        // 向 list 中设置值\n        User user1 = new User();\n        user1.setUsername(\"GJXAIOU\");\n        user1.setPassword(\"GJXAIOU\");\n        user1.setAddress(\"江苏\");\n\n        User user2 = new User();\n        user2.setUsername(\"gjxaiou\");\n        user2.setPassword(\"gjxaiou\");\n        user2.setAddress(\"南京\");\n\n        userList.add(user1);\n        userList.add(user2);\n        return SUCCESS;\n    }\n}"]],[7984,7984],[8657,8657]]],[1570084677568,["GJX@GJXAIOU",[[1,8662,"qita"]],[8662,8662],[8666,8666]]],[1570084678332,["GJX@GJXAIOU",[[-1,8662,"qita"]],[8666,8666],[8662,8662]]],[1570084678712,["GJX@GJXAIOU",[[-1,8663,"\n"]],[8662,8662],[8661,8661]]],[1570084679548,["GJX@GJXAIOU",[[1,8663,"\n"]],[8661,8661],[8662,8662]]],[1570084686339,["GJX@GJXAIOU",[[1,8662,"其他配置参照上面；"]],[8662,8662],[8671,8671]]],[1570084701205,["GJX@GJXAIOU",[[1,8760,"七、"]],[8760,8760],[8762,8762]]],[1570084778463,[null,[[-1,7348,"u"],[1,7349,"\n"],[-1,7760,"age"],[1,7763,"```"],[-1,7793,"`"],[1,7794,"\n"],[-1,7883,"`"],[-1,7886," |"],[-1,7889,"\n（三）"],[1,7897,"（三）"],[1,7905,"集合"],[-1,7907,"*  **********变\n\n*  ****生*****方\n\n*"],[1,7940,"第一步  定义list集合变量\n第二步  生成变量的get方法\n第三步"],[-1,7942,"****"],[-1,7951,"********集"],[1,7960,"法里面向list集合设"],[1,7962,"\n\n"],[-1,8757,"|#\n七、\n"],[1,8766,"七、"]],[7348,7348],[8768,8768]]],[1570084778463,[null,[[1,7348,"u"],[-1,7348,"\n"],[1,7760,"age"],[-1,7760,"```"],[1,7793,"`"],[-1,7793,"\n"],[1,7883,"`"],[1,7885," |"],[1,7886,"\n（三）"],[-1,7890,"（三）"],[-1,7901,"集合"],[1,7905,"*  **********变\n\n*  ****生*****方\n\n*"],[-1,7905,"第一步  定义list集合变量\n第二步  生成变量的get方法\n第三步"],[1,7942,"****"],[1,7947,"********集"],[-1,7947,"法里面向list集合设"],[-1,7960,"\n\n"],[1,8757,"|#\n七、\n"],[-1,8760,"七、"]],[8768,8768],[7348,7348]]],[1570084738287,["GJX@GJXAIOU",[[-1,8771,"| \n\n**"],[-1,8778,"**"],[-1,8781,"**"],[-1,8785,"****"],[-1,8796,"****"],[-1,8803,"****"],[-1,8812,"****"],[-1,8825,"**"],[-1,8829,"**"],[-1,8833,"****"],[-1,8861,"****"],[-1,8871,"**\n\n |"]],[8771,8877],[8833,8833]]],[1570084740576,["GJX@GJXAIOU",[[-1,8771,"1 "]],[8771,8773],[8771,8771]]],[1570084742383,["GJX@GJXAIOU",[[-1,8783,"+"]],[8784,8784],[8783,8783]]],[1570084743430,["GJX@GJXAIOU",[[1,8783," 和 "]],[8783,8783],[8785,8785]]],[1570084746958,["GJX@GJXAIOU",[[1,8793,"组合"]],[8793,8793],[8795,8795]]],[1570084750247,["GJX@GJXAIOU",[[-1,8803,"（1）"]],[8803,8806],[8803,8803]]],[1570084750528,["GJX@GJXAIOU",[[-1,8802,"\n"]],[8803,8803],[8802,8802]]],[1570084750983,["GJX@GJXAIOU",[[-1,8801,"\n"]],[8802,8802],[8801,8801]]],[1570084755771,["GJX@GJXAIOU",[[1,8801,"；格式为：`"]],[8801,8801],[8807,8807]]],[1570084757970,["GJX@GJXAIOU",[[1,8836,"`"]],[8836,8836],[8837,8837]]],[1570084838465,[null,[[-1,7348,"u"],[1,7349,"\n"],[-1,7760,"age"],[1,7763,"```"],[-1,7793,"`"],[1,7794,"\n"],[-1,7883,"`"],[-1,7886," |"],[-1,7889,"\n（三）"],[1,7897,"（三）"],[1,7905,"集合"],[-1,7907,"*  **********变\n\n*  ****生*****方\n\n*"],[1,7940,"第一步  定义list集合变量\n第二步  生成变量的get方法\n第三步"],[-1,7942,"****"],[-1,7951,"********集"],[1,7960,"法里面向list集合设"],[1,7962,"\n\n"],[-1,8757,"|#\n"],[1,8760,"## "],[-1,8762,"\n## "],[-1,8771,"* ****str*** 和 ***+***组合*"],[1,8796,"数据\n\n使用struts2的标签 和 ognl"],[1,8799,"组合"],[1,8801,"值栈数据"],[-1,8807,"***）"],[-1,8830,"****"],[1,8834,"ognl"],[1,8836,"式”/>"],[-1,8837,"\n\n |"]],[7348,7348],[8837,8837]]],[1570084838465,[null,[[1,7348,"u"],[-1,7348,"\n"],[1,7760,"age"],[-1,7760,"```"],[1,7793,"`"],[-1,7793,"\n"],[1,7883,"`"],[1,7885," |"],[1,7886,"\n（三）"],[-1,7890,"（三）"],[-1,7901,"集合"],[1,7905,"*  **********变\n\n*  ****生*****方\n\n*"],[-1,7905,"第一步  定义list集合变量\n第二步  生成变量的get方法\n第三步"],[1,7942,"****"],[1,7947,"********集"],[-1,7947,"法里面向list集合设"],[-1,7960,"\n\n"],[1,8757,"|#\n"],[-1,8757,"## "],[1,8762,"\n## "],[1,8767,"* ****str*** 和 ***+***组合*"],[-1,8767,"数据\n\n使用struts2的标签 和 ognl"],[-1,8793,"组合"],[-1,8797,"值栈数据"],[1,8807,"***）"],[1,8826,"****"],[-1,8826,"ognl"],[-1,8832,"式”/>"],[1,8837,"\n\n |"]],[8837,8837],[7348,7348]]],[1570084820605,["GJX@GJXAIOU",[[1,8843,"()"]],[8843,8843],[8845,8845]]],[1570084821911,["GJX@GJXAIOU",[[-1,8843,"()"]],[8845,8845],[8843,8843]]],[1570084822508,["GJX@GJXAIOU",[[1,8843,"（）"]],[8843,8843],[8845,8845]]],[1570084823868,["GJX@GJXAIOU",[[1,8844,"一"]],[8844,8844],[8845,8845]]],[1570084898466,[null,[[-1,7348,"u"],[1,7349,"\n"],[-1,7760,"age"],[1,7763,"```"],[-1,7793,"`"],[1,7794,"\n"],[-1,7883,"`"],[-1,7886," |"],[-1,7889,"\n（三）"],[1,7897,"（三）"],[1,7905,"集合"],[-1,7907,"*  **********变\n\n*  ****生*****方\n\n*"],[1,7940,"第一步  定义list集合变量\n第二步  生成变量的get方法\n第三步"],[-1,7942,"****"],[-1,7951,"********集"],[1,7960,"法里面向list集合设"],[1,7962,"\n\n"],[-1,8757,"|#\n七、\n"],[1,8766,"七、"],[-1,8771,"* ****str*** 和 ***+***组合*"],[1,8796,"数据\n\n使用struts2的标签 和 ognl"],[1,8799,"组合"],[1,8801,"值栈数据"],[-1,8807,"***）"],[-1,8830,"****"],[1,8834,"ognl"],[1,8836,"式”/>"],[1,8839,"###"],[-1,8840,"|\n\n"],[-1,8846,"### "]],[7348,7348],[8846,8846]]],[1570084898467,[null,[[1,7348,"u"],[-1,7348,"\n"],[1,7760,"age"],[-1,7760,"```"],[1,7793,"`"],[-1,7793,"\n"],[1,7883,"`"],[1,7885," |"],[1,7886,"\n（三）"],[-1,7890,"（三）"],[-1,7901,"集合"],[1,7905,"*  **********变\n\n*  ****生*****方\n\n*"],[-1,7905,"第一步  定义list集合变量\n第二步  生成变量的get方法\n第三步"],[1,7942,"****"],[1,7947,"********集"],[-1,7947,"法里面向list集合设"],[-1,7960,"\n\n"],[1,8757,"|#\n七、\n"],[-1,8760,"七、"],[1,8767,"* ****str*** 和 ***+***组合*"],[-1,8767,"数据\n\n使用struts2的标签 和 ognl"],[-1,8793,"组合"],[-1,8797,"值栈数据"],[1,8807,"***）"],[1,8826,"****"],[-1,8826,"ognl"],[-1,8832,"式”/>"],[-1,8839,"###"],[1,8843,"|\n\n"],[1,8846,"### "]],[8846,8846],[7348,7348]]],[1570084848657,["GJX@GJXAIOU",[[-1,8853,"|"]],[8853,8854],[8853,8853]]],[1570084852550,["GJX@GJXAIOU",[[1,8853,"首先使用楼上吗"]],[8853,8853],[8860,8860]]],[1570084853382,["GJX@GJXAIOU",[[-1,8857,"楼上吗"]],[8860,8860],[8857,8857]]],[1570084863892,["GJX@GJXAIOU",[[1,8857,"上面的方法在值栈中放入字符串："]],[8857,8857],[8872,8872]]],[1570084864138,["GJX@GJXAIOU",[[1,8872,"\n"]],[8872,8872],[8873,8873]]],[1570084865705,["GJX@GJXAIOU",[[1,8873,"```"]],[8873,8873],[8876,8876]]],[1570084865757,["GJX@GJXAIOU",[[1,8876,"language\n```\n"]],[8876,8876],[8876,8884]]],[1570084866258,["GJX@GJXAIOU",[[-1,8876,"language"],[1,8884,"j"]],[8876,8884],[8877,8877]]],[1570084866665,["GJX@GJXAIOU",[[1,8877,"ava"]],[8877,8877],[8880,8880]]],[1570084867583,["GJX@GJXAIOU",[[1,8881,"\n"]],[8880,8880],[8881,8881]]],[1570084887763,["GJX@GJXAIOU",[[1,8881,"public class PutValueAction extends ActionSupport {\n\n    // 方式三：定义变量然后生成对应的 get 方法\n    private String userName;\n\n    public String getUserName() {\n        return userName;\n    }\n\n    @Override\n    public String execute() throws Exception {\n        // 在执行的方法中面向变量设置值\n        userName = \"GJXaiou\";\n        return SUCCESS;\n    }\n}"]],[8881,8881],[9208,9208]]],[1570084890486,["GJX@GJXAIOU",[[-1,8934,"    // 方式三：定义变量然后生成对应的 get 方法"]],[8934,8963],[8934,8934]]],[1570084890857,["GJX@GJXAIOU",[[-1,8934,"\n"]],[8934,8934],[8933,8933]]],[1570084891415,["GJX@GJXAIOU",[[-1,8933,"\n"]],[8933,8933],[8932,8932]]],[1570084958472,[null,[[-1,7348,"u"],[1,7349,"\n"],[-1,7760,"age"],[1,7763,"```"],[-1,7793,"`"],[1,7794,"\n"],[-1,7883,"`"],[-1,7886," |"],[-1,7889,"\n（三）"],[1,7897,"（三）"],[1,7905,"集合"],[-1,7907,"*  **********变\n\n*  ****生*****方\n\n*"],[1,7940,"第一步  定义list集合变量\n第二步  生成变量的get方法\n第三步"],[-1,7942,"****"],[-1,7951,"********集"],[1,7960,"法里面向list集合设"],[1,7962,"\n\n"],[-1,8757,"|#\n七、\n"],[1,8766,"七、"],[-1,8771,"* ****str*** 和 ***+***组合*"],[1,8796,"数据\n\n使用struts2的标签 和 ognl"],[1,8799,"组合"],[1,8801,"值栈数据"],[-1,8807,"***）"],[-1,8830,"****"],[1,8834,"ognl"],[1,8836,"式”/>"],[-1,8839," |\n\n（一）"],[1,8850,"（一）"],[1,8853,"符串\n\n"],[-1,9182,"串\n\n|"]],[7348,7348],[9182,9182]]],[1570084958472,[null,[[1,7348,"u"],[-1,7348,"\n"],[1,7760,"age"],[-1,7760,"```"],[1,7793,"`"],[-1,7793,"\n"],[1,7883,"`"],[1,7885," |"],[1,7886,"\n（三）"],[-1,7890,"（三）"],[-1,7901,"集合"],[1,7905,"*  **********变\n\n*  ****生*****方\n\n*"],[-1,7905,"第一步  定义list集合变量\n第二步  生成变量的get方法\n第三步"],[1,7942,"****"],[1,7947,"********集"],[-1,7947,"法里面向list集合设"],[-1,7960,"\n\n"],[1,8757,"|#\n七、\n"],[-1,8760,"七、"],[1,8767,"* ****str*** 和 ***+***组合*"],[-1,8767,"数据\n\n使用struts2的标签 和 ognl"],[-1,8793,"组合"],[-1,8797,"值栈数据"],[1,8807,"***）"],[1,8826,"****"],[-1,8826,"ognl"],[-1,8832,"式”/>"],[1,8839," |\n\n（一）"],[-1,8843,"（一）"],[-1,8849,"符串\n\n"],[1,9182,"串\n\n|"]],[9182,9182],[7348,7348]]],[1570084905303,["GJX@GJXAIOU",[[-1,9185,"**1** **向值栈放字符串**\n\n![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image048.jpg)\n\n**2** **在****jsp****使用****struts2****标签****+ognl****表达式获取**\n\n**![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image050.jpg)**\n\n |"]],[9185,9435],[9185,9185]]],[1570084906047,["GJX@GJXAIOU",[[1,9185,"在jsp使用struts2标签+ognl表达式获取"]],[9185,9185],[9210,9210]]],[1570084909297,["GJX@GJXAIOU",[[-1,9184,"\n"]],[9184,9184],[9183,9183]]],[1570084909663,["GJX@GJXAIOU",[[-1,9182," "]],[9183,9183],[9182,9182]]],[1570084911856,["GJX@GJXAIOU",[[-1,9182,"\n"]],[9183,9183],[9182,9182]]],[1570084912373,["GJX@GJXAIOU",[[1,9182,"r "]],[9182,9182],[9183,9183]]],[1570084912835,["GJX@GJXAIOU",[[1,9183,"anho"]],[9183,9183],[9187,9187]]],[1570084914983,["GJX@GJXAIOU",[[-1,9182,"ranho "]],[9187,9187],[9182,9182]]],[1570084915503,["GJX@GJXAIOU",[[1,9182,"r "]],[9182,9182],[9183,9183]]],[1570084915667,["GJX@GJXAIOU",[[1,9183,"an"]],[9183,9183],[9185,9185]]],[1570084917535,["GJX@GJXAIOU",[[-1,9182,"ran "]],[9185,9185],[9182,9182]]],[1570084918995,["GJX@GJXAIOU",[[1,9182,"然后"]],[9182,9182],[9184,9184]]],[1570084919523,["GJX@GJXAIOU",[[1,9185,"在"]],[9184,9184],[9185,9185]]],[1570084920982,["GJX@GJXAIOU",[[-1,9185,"在"]],[9186,9186],[9185,9185]]],[1570084922996,["GJX@GJXAIOU",[[1,9185," show."]],[9185,9185],[9191,9191]]],[1570084925989,["GJX@GJXAIOU",[[1,9194," 中"]],[9194,9194],[9196,9196]]],[1570084929127,["GJX@GJXAIOU",[[1,9219,"\n"]],[9218,9218],[9219,9219]]],[1570084929257,["GJX@GJXAIOU",[[1,9220,"\n"]],[9219,9219],[9220,9220]]],[1570084931666,["GJX@GJXAIOU",[[1,9218,"···"]],[9218,9218],[9221,9221]]],[1570084932380,["GJX@GJXAIOU",[[-1,9218,"···"]],[9221,9221],[9218,9218]]],[1570084933651,["GJX@GJXAIOU",[[1,9218,"```"]],[9218,9218],[9221,9221]]],[1570084933707,["GJX@GJXAIOU",[[1,9221,"language\n```\n"]],[9221,9221],[9221,9229]]],[1570084934141,["GJX@GJXAIOU",[[-1,9221,"language"],[1,9229,"s"]],[9221,9229],[9222,9222]]],[1570084934786,["GJX@GJXAIOU",[[1,9222,"ho2"]],[9222,9222],[9225,9225]]],[1570084935857,["GJX@GJXAIOU",[[-1,9224,"2"]],[9225,9225],[9224,9224]]],[1570084937946,["GJX@GJXAIOU",[[1,9224,"w_jsp"]],[9224,9224],[9229,9229]]],[1570084939671,["GJX@GJXAIOU",[[1,9230,"\n"]],[9229,9229],[9230,9230]]],[1570084946655,["GJX@GJXAIOU",[[-1,9186,"show"]],[9190,9190],[9186,9186]]],[1570084947899,["GJX@GJXAIOU",[[1,9186,"debug"]],[9186,9186],[9191,9191]]],[1570084953255,["GJX@GJXAIOU",[[-1,9222,"show"]],[9226,9226],[9222,9222]]],[1570084954818,["GJX@GJXAIOU",[[1,9222,"debug"]],[9222,9222],[9227,9227]]],[1570085138475,[null,[[-1,7348,"u"],[1,7349,"\n"],[-1,7760,"age"],[1,7763,"```"],[-1,7793,"`"],[1,7794,"\n"],[-1,7883,"`"],[-1,7886," |"],[-1,7889,"\n（三）"],[1,7897,"（三）"],[1,7905,"集合"],[-1,7907,"*  **********变\n\n*  ****生*****方\n\n*"],[1,7940,"第一步  定义list集合变量\n第二步  生成变量的get方法\n第三步"],[-1,7942,"****"],[-1,7951,"********集"],[1,7960,"法里面向list集合设"],[1,7962,"\n\n"],[-1,8757,"|#\n七、\n"],[1,8766,"七、"],[-1,8771,"* ****str*** 和 ***+***组合*"],[1,8796,"数据\n\n使用struts2的标签 和 ognl"],[1,8799,"组合"],[1,8801,"值栈数据"],[-1,8807,"***）"],[-1,8830,"****"],[1,8834,"ognl"],[1,8836,"式”/>"],[-1,8839," |\n\n（一）"],[1,8850,"（一）"],[1,8853,"符串\n\n"],[-1,9238,"\n\n |"]],[7348,7348],[9238,9238]]],[1570085138475,[null,[[1,7348,"u"],[-1,7348,"\n"],[1,7760,"age"],[-1,7760,"```"],[1,7793,"`"],[-1,7793,"\n"],[1,7883,"`"],[1,7885," |"],[1,7886,"\n（三）"],[-1,7890,"（三）"],[-1,7901,"集合"],[1,7905,"*  **********变\n\n*  ****生*****方\n\n*"],[-1,7905,"第一步  定义list集合变量\n第二步  生成变量的get方法\n第三步"],[1,7942,"****"],[1,7947,"********集"],[-1,7947,"法里面向list集合设"],[-1,7960,"\n\n"],[1,8757,"|#\n七、\n"],[-1,8760,"七、"],[1,8767,"* ****str*** 和 ***+***组合*"],[-1,8767,"数据\n\n使用struts2的标签 和 ognl"],[-1,8793,"组合"],[-1,8797,"值栈数据"],[1,8807,"***）"],[1,8826,"****"],[-1,8826,"ognl"],[-1,8832,"式”/>"],[1,8839," |\n\n（一）"],[-1,8843,"（一）"],[-1,8849,"符串\n\n"],[1,9238,"\n\n |"]],[9238,9238],[7348,7348]]],[1570085110172,["GJX@GJXAIOU",[[1,9238,"ji"]],[9238,9238],[9240,9240]]],[1570085110959,["GJX@GJXAIOU",[[-1,9238,"ji"]],[9240,9240],[9238,9238]]],[1570085111822,["GJX@GJXAIOU",[[1,9238,"Jiegu"]],[9238,9238],[9243,9243]]],[1570085112594,["GJX@GJXAIOU",[[-1,9238,"Jiegu"]],[9243,9243],[9238,9238]]],[1570085115748,["GJX@GJXAIOU",[[1,9238,"结果：``"]],[9238,9238],[9243,9243]]],[1570085116873,["GJX@GJXAIOU",[[1,9242,"获取 userName: GJXaiou"]],[9242,9242],[9262,9262]]],[1570085132837,["GJX@GJXAIOU",[[1,9232,"<%@ page contentType=\"text/html;charset=UTF-8\" language=\"java\" %>\n<%@taglib uri=\"/struts-tags\" prefix=\"s\"%>\n<html>\n<head>\n    <title>This is debug page</title>\n</head>\n<body>\n    <s:debug></s:debug>\n    <br>\n    获取 userName: <s:property value=\"userName\"></s:property>\n\n</body>\n</html>"]],[9232,9232],[9516,9516]]],[1570085135575,["GJX@GJXAIOU",[[-1,9407,"    <s:debug></s:debug>"]],[9407,9430],[9407,9407]]],[1570085136638,["GJX@GJXAIOU",[[-1,9412,"<br>\n    "]],[9407,9416],[9407,9407]]],[1570085198475,[null,[[-1,7348,"u"],[1,7349,"\n"],[-1,7760,"age"],[1,7763,"```"],[-1,7793,"`"],[1,7794,"\n"],[-1,7883,"`"],[-1,7886," |"],[-1,7889,"\n（三）"],[1,7897,"（三）"],[1,7905,"集合"],[-1,7907,"*  **********变\n\n*  ****生*****方\n\n*"],[1,7940,"第一步  定义list集合变量\n第二步  生成变量的get方法\n第三步"],[-1,7942,"****"],[-1,7951,"********集"],[1,7960,"法里面向list集合设"],[1,7962,"\n\n"],[-1,8757,"|#\n七、\n"],[1,8766,"七、"],[-1,8771,"* ****str*** 和 ***+***组合*"],[1,8796,"数据\n\n使用struts2的标签 和 ognl"],[1,8799,"组合"],[1,8801,"值栈数据"],[-1,8807,"***）"],[-1,8830,"****"],[1,8834,"ognl"],[1,8836,"式”/>"],[-1,8839," |\n\n（一）"],[1,8850,"（一）"],[1,8853,"符串\n\n"],[-1,9515,"\n\n |"],[1,9519,""]],[7348,7348],[9519,9519]]],[1570085198475,[null,[[1,7348,"u"],[-1,7348,"\n"],[1,7760,"age"],[-1,7760,"```"],[1,7793,"`"],[-1,7793,"\n"],[1,7883,"`"],[1,7885," |"],[1,7886,"\n（三）"],[-1,7890,"（三）"],[-1,7901,"集合"],[1,7905,"*  **********变\n\n*  ****生*****方\n\n*"],[-1,7905,"第一步  定义list集合变量\n第二步  生成变量的get方法\n第三步"],[1,7942,"****"],[1,7947,"********集"],[-1,7947,"法里面向list集合设"],[-1,7960,"\n\n"],[1,8757,"|#\n七、\n"],[-1,8760,"七、"],[1,8767,"* ****str*** 和 ***+***组合*"],[-1,8767,"数据\n\n使用struts2的标签 和 ognl"],[-1,8793,"组合"],[-1,8797,"值栈数据"],[1,8807,"***）"],[1,8826,"****"],[-1,8826,"ognl"],[-1,8832,"式”/>"],[1,8839," |\n\n（一）"],[-1,8843,"（一）"],[-1,8849,"符串\n\n"],[1,9515,"\n\n |"],[-1,9515,""]],[9519,9519],[7348,7348]]],[1570085175582,["GJX@GJXAIOU",[[1,9521,"()"]],[9521,9521],[9523,9523]]],[1570085176738,["GJX@GJXAIOU",[[-1,9521,"()"]],[9523,9523],[9521,9521]]],[1570085177263,["GJX@GJXAIOU",[[1,9521,"()"]],[9521,9521],[9523,9523]]],[1570085178583,["GJX@GJXAIOU",[[-1,9521,"()"]],[9523,9523],[9521,9521]]],[1570085179577,["GJX@GJXAIOU",[[1,9521,"（）"]],[9521,9521],[9523,9523]]],[1570085180687,["GJX@GJXAIOU",[[1,9522,"额"]],[9522,9522],[9523,9523]]],[1570085182470,["GJX@GJXAIOU",[[-1,9522,"额"]],[9523,9523],[9522,9522]]],[1570085182915,["GJX@GJXAIOU",[[1,9522,"二"]],[9522,9522],[9523,9523]]],[1570085678480,[null,[[-1,7348,"u"],[1,7349,"\n"],[-1,7760,"age"],[1,7763,"```"],[-1,7793,"`"],[1,7794,"\n"],[-1,7883,"`"],[-1,7886," |"],[-1,7889,"\n（三）"],[1,7897,"（三）"],[1,7905,"集合"],[-1,7907,"*  **********变\n\n*  ****生*****方\n\n*"],[1,7940,"第一步  定义list集合变量\n第二步  生成变量的get方法\n第三步"],[-1,7942,"****"],[-1,7951,"********集"],[1,7960,"法里面向list集合设"],[1,7962,"\n\n"],[-1,8757,"|#\n七、\n"],[1,8766,"七、"],[-1,8771,"* ****str*** 和 ***+***组合*"],[1,8796,"数据\n\n使用struts2的标签 和 ognl"],[1,8799,"组合"],[1,8801,"值栈数据"],[-1,8807,"***）"],[-1,8830,"****"],[1,8834,"ognl"],[1,8836,"式”/>"],[-1,8839," |\n\n（一）"],[1,8850,"（一）"],[1,8853,"符串\n\n"],[-1,9517," |\n\n（二）"],[1,9528,"（二）"]],[7348,7348],[9531,9531]]],[1570085678480,[null,[[1,7348,"u"],[-1,7348,"\n"],[1,7760,"age"],[-1,7760,"```"],[1,7793,"`"],[-1,7793,"\n"],[1,7883,"`"],[1,7885," |"],[1,7886,"\n（三）"],[-1,7890,"（三）"],[-1,7901,"集合"],[1,7905,"*  **********变\n\n*  ****生*****方\n\n*"],[-1,7905,"第一步  定义list集合变量\n第二步  生成变量的get方法\n第三步"],[1,7942,"****"],[1,7947,"********集"],[-1,7947,"法里面向list集合设"],[-1,7960,"\n\n"],[1,8757,"|#\n七、\n"],[-1,8760,"七、"],[1,8767,"* ****str*** 和 ***+***组合*"],[-1,8767,"数据\n\n使用struts2的标签 和 ognl"],[-1,8793,"组合"],[-1,8797,"值栈数据"],[1,8807,"***）"],[1,8826,"****"],[-1,8826,"ognl"],[-1,8832,"式”/>"],[1,8839," |\n\n（一）"],[-1,8843,"（一）"],[-1,8849,"符串\n\n"],[1,9517," |\n\n（二）"],[-1,9521,"（二）"]],[9531,9531],[7348,7348]]],[1570085663216,["GJX@GJXAIOU",[[-1,9743," |"]],[9743,9745],[9743,9743]]],[1570085664986,["GJX@GJXAIOU",[[1,9743,"结果："]],[9743,9743],[9746,9746]]],[1570085665450,["GJX@GJXAIOU",[[1,9748,"\n"]],[9746,9746],[9747,9747]]],[1570085666887,["GJX@GJXAIOU",[[1,9747,"```"]],[9747,9747],[9750,9750]]],[1570085666937,["GJX@GJXAIOU",[[1,9750,"language\n```\n"]],[9750,9750],[9750,9758]]],[1570085667210,["GJX@GJXAIOU",[[-1,9750,"language"],[1,9758,"j"]],[9750,9758],[9751,9751]]],[1570085667749,["GJX@GJXAIOU",[[1,9751,"ava"]],[9751,9751],[9754,9754]]],[1570085668047,["GJX@GJXAIOU",[[1,9755,"\n"]],[9754,9754],[9755,9755]]],[1570085669175,["GJX@GJXAIOU",[[1,9755,"获取对象的属性值：\nusername：GJXAIOU\npassword：gjxaiou\naddress： 南京"]],[9755,9755],[9810,9810]]],[1570085673107,["GJX@GJXAIOU",[[1,9530,"\n"]],[9529,9529],[9530,9530]]],[1570085674231,["GJX@GJXAIOU",[[1,9530,"****"]],[9530,9530],[9532,9532]]],[1570085676236,["GJX@GJXAIOU",[[1,9532,"duiy"]],[9532,9532],[9536,9536]]],[1570085677060,["GJX@GJXAIOU",[[-1,9532,"duiy"]],[9536,9536],[9532,9532]]],[1570085738481,[null,[[-1,7348,"u"],[1,7349,"\n"],[-1,7760,"age"],[1,7763,"```"],[-1,7793,"`"],[1,7794,"\n"],[-1,7883,"`"],[-1,7886," |"],[-1,7889,"\n（三）"],[1,7897,"（三）"],[1,7905,"集合"],[-1,7907,"*  **********变\n\n*  ****生*****方\n\n*"],[1,7940,"第一步  定义list集合变量\n第二步  生成变量的get方法\n第三步"],[-1,7942,"****"],[-1,7951,"********集"],[1,7960,"法里面向list集合设"],[1,7962,"\n\n"],[-1,8757,"|#\n七、\n"],[1,8766,"七、"],[-1,8771,"* ****str*** 和 ***+***组合*"],[1,8796,"数据\n\n使用struts2的标签 和 ognl"],[1,8799,"组合"],[1,8801,"值栈数据"],[-1,8807,"***）"],[-1,8830,"****"],[1,8834,"ognl"],[1,8836,"式”/>"],[-1,8839," |\n\n（一）"],[1,8850,"（一）"],[1,8853,"符串\n\n"],[-1,9517," |\n\n（二）"],[1,9528,"（二）"],[1,9530,"对象\n\n"],[-1,9534,"\n对象\n"],[-1,9748,""],[1,9748,"**\n\n"],[-1,9820,"\n\n |"]],[7348,7348],[9820,9820]]],[1570085738481,[null,[[1,7348,"u"],[-1,7348,"\n"],[1,7760,"age"],[-1,7760,"```"],[1,7793,"`"],[-1,7793,"\n"],[1,7883,"`"],[1,7885," |"],[1,7886,"\n（三）"],[-1,7890,"（三）"],[-1,7901,"集合"],[1,7905,"*  **********变\n\n*  ****生*****方\n\n*"],[-1,7905,"第一步  定义list集合变量\n第二步  生成变量的get方法\n第三步"],[1,7942,"****"],[1,7947,"********集"],[-1,7947,"法里面向list集合设"],[-1,7960,"\n\n"],[1,8757,"|#\n七、\n"],[-1,8760,"七、"],[1,8767,"* ****str*** 和 ***+***组合*"],[-1,8767,"数据\n\n使用struts2的标签 和 ognl"],[-1,8793,"组合"],[-1,8797,"值栈数据"],[1,8807,"***）"],[1,8826,"****"],[-1,8826,"ognl"],[-1,8832,"式”/>"],[1,8839," |\n\n（一）"],[-1,8843,"（一）"],[-1,8849,"符串\n\n"],[1,9517," |\n\n（二）"],[-1,9521,"（二）"],[-1,9526,"对象\n\n"],[1,9534,"\n对象\n"],[1,9744,""],[-1,9744,"**\n\n"],[1,9820,"\n\n |"]],[9820,9820],[7348,7348]]],[1570085684216,["GJX@GJXAIOU",[[1,9532,"对象：User必须"]],[9532,9532],[9541,9541]]],[1570085684266,["GJX@GJXAIOU",[[1,9539," "]],[9541,9541],[9542,9542]]],[1570085688749,["GJX@GJXAIOU",[[1,9542,"有 get方法"]],[9542,9542],[9549,9549]]],[1570085688800,["GJX@GJXAIOU",[[1,9547," "]],[9549,9549],[9550,9550]]],[1570085694174,["GJX@GJXAIOU",[[-1,9575,"**![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image052.jpg)**\n"]],[9574,9659],[9574,9574]]],[1570085695841,["GJX@GJXAIOU",[[-1,9553,"| \n\n**1** **"]],[9553,9565],[9553,9553]]],[1570085696922,["GJX@GJXAIOU",[[-1,9559,"**"]],[9561,9561],[9559,9559]]],[1570085698577,["GJX@GJXAIOU",[[1,9553,"\n"]],[9553,9553],[9554,9554]]],[1570085699017,["GJX@GJXAIOU",[[1,9554,"- "]],[9554,9554],[9556,9556]]],[1570085713539,["GJX@GJXAIOU",[[1,9563,"·"]],[9563,9563],[9564,9564]]],[1570085714782,["GJX@GJXAIOU",[[-1,9563,"·"]],[9564,9564],[9563,9563]]],[1570085725538,["GJX@GJXAIOU",[[1,9563,"```putObjectActon"]],[9563,9563],[9580,9580]]],[1570085727126,["GJX@GJXAIOU",[[-1,9578,"on"]],[9580,9580],[9578,9578]]],[1570085730083,["GJX@GJXAIOU",[[1,9578,"ion_x"]],[9578,9578],[9583,9583]]],[1570085731016,["GJX@GJXAIOU",[[-1,9582,"x"]],[9583,9583],[9582,9582]]],[1570085731782,["GJX@GJXAIOU",[[1,9582,"java"]],[9582,9582],[9586,9586]]],[1570085732025,["GJX@GJXAIOU",[[1,9588,"\n"]],[9586,9586],[9587,9587]]],[1570085732530,["GJX@GJXAIOU",[[1,9589,"\n"]],[9587,9587],[9588,9588]]],[1570085733290,["GJX@GJXAIOU",[[1,9588,"```"]],[9588,9588],[9591,9591]]],[1570085736068,["GJX@GJXAIOU",[[1,9587,"public class putObjectAction extends ActionSupport {\n    // 首先定义对象变量\n    private User user = new User();\n    // 然后生成对应的 get 方法\n    public User getUser() {\n        return user;\n    }\n\n    @Override\n    public String execute() throws Exception {\n        // 最后向值栈的 user 中放入数据\n        user.setUsername(\"GJXAIOU\");\n        user.setPassword(\"gjxaiou\");\n        user.setAddress(\"南京\");\n\n        return SUCCESS;\n    }\n}"]],[9587,9587],[9997,9997]]],[1570085798489,[null,[[-1,7348,"u"],[1,7349,"\n"],[-1,7760,"age"],[1,7763,"```"],[-1,7793,"`"],[1,7794,"\n"],[-1,7883,"`"],[-1,7886," |"],[-1,7889,"\n（三）"],[1,7897,"（三）"],[1,7905,"集合"],[-1,7907,"*  **********变\n\n*  ****生*****方\n\n*"],[1,7940,"第一步  定义list集合变量\n第二步  生成变量的get方法\n第三步"],[-1,7942,"****"],[-1,7951,"********集"],[1,7960,"法里面向list集合设"],[1,7962,"\n\n"],[-1,8757,"|#\n七、\n"],[1,8766,"七、"],[-1,8771,"* ****str*** 和 ***+***组合*"],[1,8796,"数据\n\n使用struts2的标签 和 ognl"],[1,8799,"组合"],[1,8801,"值栈数据"],[-1,8807,"***）"],[-1,8830,"****"],[1,8834,"ognl"],[1,8836,"式”/>"],[-1,8839," |\n\n（一）"],[1,8850,"（一）"],[1,8853,"符串\n\n"],[-1,9517," |\n\n（二）"],[1,9528,"（二）"],[1,9530,"对象\n\n"],[-1,9556,"* **"],[1,9562,"栈放"],[1,9563,"象\n"],[-1,9586,"象"],[1,9587,"\n"],[-1,9997,")"],[1,9998,"\n"],[-1,10001,"\n\n**"],[-1,10108,""],[1,10108,"**\n\n"],[-1,10180,"\n\n |"]],[7348,7348],[10180,10180]]],[1570085798489,[null,[[1,7348,"u"],[-1,7348,"\n"],[1,7760,"age"],[-1,7760,"```"],[1,7793,"`"],[-1,7793,"\n"],[1,7883,"`"],[1,7885," |"],[1,7886,"\n（三）"],[-1,7890,"（三）"],[-1,7901,"集合"],[1,7905,"*  **********变\n\n*  ****生*****方\n\n*"],[-1,7905,"第一步  定义list集合变量\n第二步  生成变量的get方法\n第三步"],[1,7942,"****"],[1,7947,"********集"],[-1,7947,"法里面向list集合设"],[-1,7960,"\n\n"],[1,8757,"|#\n七、\n"],[-1,8760,"七、"],[1,8767,"* ****str*** 和 ***+***组合*"],[-1,8767,"数据\n\n使用struts2的标签 和 ognl"],[-1,8793,"组合"],[-1,8797,"值栈数据"],[1,8807,"***）"],[1,8826,"****"],[-1,8826,"ognl"],[-1,8832,"式”/>"],[1,8839," |\n\n（一）"],[-1,8843,"（一）"],[-1,8849,"符串\n\n"],[1,9517," |\n\n（二）"],[-1,9521,"（二）"],[-1,9526,"对象\n\n"],[1,9556,"* **"],[-1,9558,"栈放"],[-1,9561,"象\n"],[1,9586,"象"],[-1,9586,"\n"],[1,9997,")"],[-1,9997,"\n"],[1,10001,"\n\n**"],[1,10104,""],[-1,10104,"**\n\n"],[1,10180,"\n\n |"]],[10180,10180],[7348,7348]]],[1570085742809,["GJX@GJXAIOU",[[-1,10003,"**2** **"]],[10003,10011],[10003,10003]]],[1570085743270,["GJX@GJXAIOU",[[1,10003,"- "]],[10003,10003],[10005,10005]]],[1570085746350,["GJX@GJXAIOU",[[-1,10012,"**"]],[10014,10014],[10012,10012]]],[1570085748951,["GJX@GJXAIOU",[[-1,10014,"**![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image054.jpg)**\n"]],[10014,10099],[10014,10014]]],[1570085775970,["GJX@GJXAIOU",[[1,10013,"```bu"]],[10013,10013],[10018,10018]]],[1570085777110,["GJX@GJXAIOU",[[-1,10017,"u"]],[10018,10018],[10017,10017]]],[1570085779146,["GJX@GJXAIOU",[[1,10017,"ebug"]],[10017,10017],[10021,10021]]],[1570085781169,["GJX@GJXAIOU",[[-1,10016,"bebug"]],[10021,10021],[10016,10016]]],[1570085785420,["GJX@GJXAIOU",[[1,10016,"debug_jsp"]],[10016,10016],[10025,10025]]],[1570085785873,["GJX@GJXAIOU",[[1,10027,"\n"]],[10025,10025],[10026,10026]]],[1570085786402,["GJX@GJXAIOU",[[1,10028,"\n"]],[10026,10026],[10027,10027]]],[1570085787372,["GJX@GJXAIOU",[[1,10027,"```"]],[10027,10027],[10030,10030]]],[1570085789968,["GJX@GJXAIOU",[[1,10026,"<body>\n    <s:debug></s:debug>\n    <br>\n    获取 userName: <s:property value=\"userName\"></s:property>\n\n    <br>\n    获取对象的属性值：\n    <br>\n    username：<s:property value=\"user.username\"/> <br>\n    password：<s:property value=\"user.password\"/><br>\n    address： <s:property value=\"user.address\"/> <br>\n\n</body>"]],[10026,10026],[10327,10327]]],[1570085858491,[null,[[-1,7348,"u"],[1,7349,"\n"],[-1,7760,"age"],[1,7763,"```"],[-1,7793,"`"],[1,7794,"\n"],[-1,7883,"`"],[-1,7886," |"],[-1,7889,"\n（三）"],[1,7897,"（三）"],[1,7905,"集合"],[-1,7907,"*  **********变\n\n*  ****生*****方\n\n*"],[1,7940,"第一步  定义list集合变量\n第二步  生成变量的get方法\n第三步"],[-1,7942,"****"],[-1,7951,"********集"],[1,7960,"法里面向list集合设"],[1,7962,"\n\n"],[-1,8757,"|#\n七、\n"],[1,8766,"七、"],[-1,8771,"* ****str*** 和 ***+***组合*"],[1,8796,"数据\n\n使用struts2的标签 和 ognl"],[1,8799,"组合"],[1,8801,"值栈数据"],[-1,8807,"***）"],[-1,8830,"****"],[1,8834,"ognl"],[1,8836,"式”/>"],[-1,8839," |\n\n（一）"],[1,8850,"（一）"],[1,8853,"符串\n\n"],[-1,9517," |\n\n（二）"],[1,9528,"（二）"],[1,9530,"对象\n\n"],[-1,9556,"* **"],[1,9562,"栈放"],[1,9563,"象\n"],[-1,9586,"象"],[1,9587,"\n"],[-1,9997,")"],[1,9998,"\n"],[-1,10005,"* **"],[1,10012,"中获"],[1,10013,"值\n"],[-1,10025,"值"],[1,10026,"\n"],[-1,10327,")"],[1,10328,"\n"],[-1,10405,"\n\n |"]],[7348,7348],[10405,10405]]],[1570085858491,[null,[[1,7348,"u"],[-1,7348,"\n"],[1,7760,"age"],[-1,7760,"```"],[1,7793,"`"],[-1,7793,"\n"],[1,7883,"`"],[1,7885," |"],[1,7886,"\n（三）"],[-1,7890,"（三）"],[-1,7901,"集合"],[1,7905,"*  **********变\n\n*  ****生*****方\n\n*"],[-1,7905,"第一步  定义list集合变量\n第二步  生成变量的get方法\n第三步"],[1,7942,"****"],[1,7947,"********集"],[-1,7947,"法里面向list集合设"],[-1,7960,"\n\n"],[1,8757,"|#\n七、\n"],[-1,8760,"七、"],[1,8767,"* ****str*** 和 ***+***组合*"],[-1,8767,"数据\n\n使用struts2的标签 和 ognl"],[-1,8793,"组合"],[-1,8797,"值栈数据"],[1,8807,"***）"],[1,8826,"****"],[-1,8826,"ognl"],[-1,8832,"式”/>"],[1,8839," |\n\n（一）"],[-1,8843,"（一）"],[-1,8849,"符串\n\n"],[1,9517," |\n\n（二）"],[-1,9521,"（二）"],[-1,9526,"对象\n\n"],[1,9556,"* **"],[-1,9558,"栈放"],[-1,9561,"象\n"],[1,9586,"象"],[-1,9586,"\n"],[1,9997,")"],[-1,9997,"\n"],[1,10005,"* **"],[-1,10008,"中获"],[-1,10011,"值\n"],[1,10025,"值"],[-1,10025,"\n"],[1,10327,")"],[-1,10327,"\n"],[1,10405,"\n\n |"]],[10405,10405],[7348,7348]]],[1570085801432,["GJX@GJXAIOU",[[-1,10033,"  \n    <br>\n    获取 userName: <s:property value=\"userName\"></s:property>\n\n    <br>"]],[10033,10114],[10033,10033]]],[1570085802454,["GJX@GJXAIOU",[[-1,10033,"\n"]],[10033,10033],[10032,10032]]],[1570093913850,[null,[[-1,7348,"u"],[1,7349,"\n"],[-1,7760,"age"],[1,7763,"```"],[-1,7793,"`"],[1,7794,"\n"],[-1,7883,"`"],[-1,7886," |"],[-1,7889,"\n（三）"],[1,7897,"（三）"],[1,7905,"集合"],[-1,7907,"*  **********变\n\n*  ****生*****方\n\n*"],[1,7940,"第一步  定义list集合变量\n第二步  生成变量的get方法\n第三步"],[-1,7942,"****"],[-1,7951,"********集"],[1,7960,"法里面向list集合设"],[1,7962,"\n\n"],[-1,8757,"|#\n七、\n"],[1,8766,"七、"],[-1,8771,"* ****str*** 和 ***+***组合*"],[1,8796,"数据\n\n使用struts2的标签 和 ognl"],[1,8799,"组合"],[1,8801,"值栈数据"],[-1,8807,"***）"],[-1,8830,"****"],[1,8834,"ognl"],[1,8836,"式”/>"],[-1,8839," |\n\n（一）"],[1,8850,"（一）"],[1,8853,"符串\n\n"],[-1,9517," |\n\n（二）"],[1,9528,"（二）"],[1,9530,"对象\n\n"],[-1,9556,"* **"],[1,9562,"栈放"],[1,9563,"象\n"],[-1,9586,"象"],[1,9587,"\n"],[-1,9997,")"],[1,9998,"\n"],[-1,10005,"* **"],[1,10012,"中获"],[1,10013,"值\n"],[-1,10025,"值"],[1,10026,"\n"],[-1,10031,">\n:property>\n\n    <br"],[-1,10245,")"],[1,10246,"\n"],[-1,10323,"\n\n |"]],[7348,7348],[10323,10323]]],[1570093913850,[null,[[1,7348,"u"],[-1,7348,"\n"],[1,7760,"age"],[-1,7760,"```"],[1,7793,"`"],[-1,7793,"\n"],[1,7883,"`"],[1,7885," |"],[1,7886,"\n（三）"],[-1,7890,"（三）"],[-1,7901,"集合"],[1,7905,"*  **********变\n\n*  ****生*****方\n\n*"],[-1,7905,"第一步  定义list集合变量\n第二步  生成变量的get方法\n第三步"],[1,7942,"****"],[1,7947,"********集"],[-1,7947,"法里面向list集合设"],[-1,7960,"\n\n"],[1,8757,"|#\n七、\n"],[-1,8760,"七、"],[1,8767,"* ****str*** 和 ***+***组合*"],[-1,8767,"数据\n\n使用struts2的标签 和 ognl"],[-1,8793,"组合"],[-1,8797,"值栈数据"],[1,8807,"***）"],[1,8826,"****"],[-1,8826,"ognl"],[-1,8832,"式”/>"],[1,8839," |\n\n（一）"],[-1,8843,"（一）"],[-1,8849,"符串\n\n"],[1,9517," |\n\n（二）"],[-1,9521,"（二）"],[-1,9526,"对象\n\n"],[1,9556,"* **"],[-1,9558,"栈放"],[-1,9561,"象\n"],[1,9586,"象"],[-1,9586,"\n"],[1,9997,")"],[-1,9997,"\n"],[1,10005,"* **"],[-1,10008,"中获"],[-1,10011,"值\n"],[1,10025,"值"],[-1,10025,"\n"],[1,10031,">\n:property>\n\n    <br"],[1,10224,")"],[-1,10224,"\n"],[1,10302,"\n\n |"]],[10323,10323],[7348,7348]]],[1570093888472,["GJX@GJXAIOU",[[-1,10318,"| \n\n**"]],[10318,10324],[10318,10318]]],[1570093889842,["GJX@GJXAIOU",[[-1,10324,"**"]],[10324,10326],[10324,10324]]],[1570093891407,["GJX@GJXAIOU",[[1,10318,"- "]],[10318,10318],[10320,10320]]],[1570094633872,[null,[[-1,7348,"u"],[1,7349,"\n"],[-1,7760,"age"],[1,7763,"```"],[-1,7793,"`"],[1,7794,"\n"],[-1,7883,"`"],[-1,7886," |"],[-1,7889,"\n（三）"],[1,7897,"（三）"],[1,7905,"集合"],[-1,7907,"*  **********变\n\n*  ****生*****方\n\n*"],[1,7940,"第一步  定义list集合变量\n第二步  生成变量的get方法\n第三步"],[-1,7942,"****"],[-1,7951,"********集"],[1,7960,"法里面向list集合设"],[1,7962,"\n\n"],[-1,8757,"|#\n七、\n"],[1,8766,"七、"],[-1,8771,"* ****str*** 和 ***+***组合*"],[1,8796,"数据\n\n使用struts2的标签 和 ognl"],[1,8799,"组合"],[1,8801,"值栈数据"],[-1,8807,"***）"],[-1,8830,"****"],[1,8834,"ognl"],[1,8836,"式”/>"],[-1,8839," |\n\n（一）"],[1,8850,"（一）"],[1,8853,"符串\n\n"],[-1,9517," |\n\n（二）"],[1,9528,"（二）"],[1,9530,"对象\n\n"],[-1,9556,"* **"],[1,9562,"栈放"],[1,9563,"象\n"],[-1,9586,"象"],[1,9587,"\n"],[-1,9997,")"],[1,9998,"\n"],[-1,10005,"* **"],[1,10012,"中获"],[1,10013,"值\n"],[-1,10025,"值"],[1,10026,"\n"],[-1,10031,">\n:property>\n\n    <br"],[-1,10245,")"],[1,10246,"\n"],[-1,10318,"- \n |"],[1,10323,"\n```\n"],[1,10326,"##"],[-1,10337,"| \n\n**"],[1,10343,"- "],[-1,10349,"**"]],[7348,7348],[10349,10349]]],[1570094633872,[null,[[1,7348,"u"],[-1,7348,"\n"],[1,7760,"age"],[-1,7760,"```"],[1,7793,"`"],[-1,7793,"\n"],[1,7883,"`"],[1,7885," |"],[1,7886,"\n（三）"],[-1,7890,"（三）"],[-1,7901,"集合"],[1,7905,"*  **********变\n\n*  ****生*****方\n\n*"],[-1,7905,"第一步  定义list集合变量\n第二步  生成变量的get方法\n第三步"],[1,7942,"****"],[1,7947,"********集"],[-1,7947,"法里面向list集合设"],[-1,7960,"\n\n"],[1,8757,"|#\n七、\n"],[-1,8760,"七、"],[1,8767,"* ****str*** 和 ***+***组合*"],[-1,8767,"数据\n\n使用struts2的标签 和 ognl"],[-1,8793,"组合"],[-1,8797,"值栈数据"],[1,8807,"***）"],[1,8826,"****"],[-1,8826,"ognl"],[-1,8832,"式”/>"],[1,8839," |\n\n（一）"],[-1,8843,"（一）"],[-1,8849,"符串\n\n"],[1,9517," |\n\n（二）"],[-1,9521,"（二）"],[-1,9526,"对象\n\n"],[1,9556,"* **"],[-1,9558,"栈放"],[-1,9561,"象\n"],[1,9586,"象"],[-1,9586,"\n"],[1,9997,")"],[-1,9997,"\n"],[1,10005,"* **"],[-1,10008,"中获"],[-1,10011,"值\n"],[1,10025,"值"],[-1,10025,"\n"],[1,10031,">\n:property>\n\n    <br"],[1,10224,")"],[-1,10224,"\n"],[1,10297,"- \n |"],[-1,10297,"\n```\n"],[-1,10305,"##"],[1,10318,"| \n\n**"],[-1,10318,"- "],[1,10326,"**"]],[10349,10349],[7348,7348]]],[1570094578154,["GJX@GJXAIOU",[[-1,10651," |"]],[10651,10653],[10651,10651]]],[1570094579073,["GJX@GJXAIOU",[[1,10651,"jie"]],[10651,10651],[10654,10654]]],[1570094580107,["GJX@GJXAIOU",[[-1,10651,"jie"]],[10654,10654],[10651,10651]]],[1570094581444,["GJX@GJXAIOU",[[1,10651,"结果："]],[10651,10651],[10654,10654]]],[1570094582065,["GJX@GJXAIOU",[[1,10656,"\n"]],[10654,10654],[10655,10655]]],[1570094583788,["GJX@GJXAIOU",[[1,10655,"```"]],[10655,10655],[10658,10658]]],[1570094583840,["GJX@GJXAIOU",[[1,10658,"language\n```\n"]],[10658,10658],[10658,10666]]],[1570094586885,["GJX@GJXAIOU",[[-1,10658,"language"],[1,10666,"j"]],[10658,10666],[10659,10659]]],[1570094587335,["GJX@GJXAIOU",[[1,10659,"ava"]],[10659,10659],[10662,10662]]],[1570094587485,["GJX@GJXAIOU",[[1,10663,"\n"]],[10662,10662],[10663,10663]]],[1570094588914,["GJX@GJXAIOU",[[1,10663,"获取 List 集合：方式一：\nGJXAIOU GJXAIOU 江苏\ngjxaiou gjxaiou 南京\n获取 List 集合：方式二：\nGJXAIOU GJXAIOU 江苏\ngjxaiou gjxaiou 南京\n\n获取 List 集合：方式三：\nGJXAIOU GJXAIOU 江苏\ngjxaiou gjxaiou 南京"]],[10663,10663],[10825,10825]]],[1570094591881,["GJX@GJXAIOU",[[1,10717,"\n"]],[10717,10717],[10718,10718]]],[1570094614842,["GJX@GJXAIOU",[[-1,10328,"![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image056.jpg)\n"]],[10328,10409],[10328,10328]]],[1570094618180,["GJX@GJXAIOU",[[1,10327,"```j"]],[10327,10327],[10331,10331]]],[1570094619402,["GJX@GJXAIOU",[[-1,10330,"j"]],[10331,10331],[10330,10330]]],[1570094628358,["GJX@GJXAIOU",[[1,10330,"debug_xm"]],[10330,10330],[10338,10338]]],[1570094628879,["GJX@GJXAIOU",[[-1,10336,"xm"]],[10338,10338],[10336,10336]]],[1570094629623,["GJX@GJXAIOU",[[1,10336,"hjs"]],[10336,10336],[10339,10339]]],[1570094630967,["GJX@GJXAIOU",[[-1,10336,"hjs"]],[10339,10339],[10336,10336]]],[1570094631852,["GJX@GJXAIOU",[[1,10336,"hsp"]],[10336,10336],[10339,10339]]],[1570094632495,["GJX@GJXAIOU",[[-1,10336,"hsp"]],[10339,10339],[10336,10336]]],[1570094633286,["GJX@GJXAIOU",[[1,10336,"jsp"]],[10336,10336],[10339,10339]]],[1570094693873,[null,[[-1,7348,"u"],[1,7349,"\n"],[-1,7760,"age"],[1,7763,"```"],[-1,7793,"`"],[1,7794,"\n"],[-1,7883,"`"],[-1,7886," |"],[-1,7889,"\n（三）"],[1,7897,"（三）"],[1,7905,"集合"],[-1,7907,"*  **********变\n\n*  ****生*****方\n\n*"],[1,7940,"第一步  定义list集合变量\n第二步  生成变量的get方法\n第三步"],[-1,7942,"****"],[-1,7951,"********集"],[1,7960,"法里面向list集合设"],[1,7962,"\n\n"],[-1,8757,"|#\n七、\n"],[1,8766,"七、"],[-1,8771,"* ****str*** 和 ***+***组合*"],[1,8796,"数据\n\n使用struts2的标签 和 ognl"],[1,8799,"组合"],[1,8801,"值栈数据"],[-1,8807,"***）"],[-1,8830,"****"],[1,8834,"ognl"],[1,8836,"式”/>"],[-1,8839," |\n\n（一）"],[1,8850,"（一）"],[1,8853,"符串\n\n"],[-1,9517," |\n\n（二）"],[1,9528,"（二）"],[1,9530,"对象\n\n"],[-1,9556,"* **"],[1,9562,"栈放"],[1,9563,"象\n"],[-1,9586,"象"],[1,9587,"\n"],[-1,9997,")"],[1,9998,"\n"],[-1,10005,"* **"],[1,10012,"中获"],[1,10013,"值\n"],[-1,10025,"值"],[1,10026,"\n"],[-1,10031,">\n:property>\n\n    <br"],[-1,10245,")"],[1,10246,"\n"],[-1,10318,"- \n |\n\n# "],[1,10327,"\n```\n\n\n### 获取list集合\n\n- 第一种方式：\n"],[-1,10339,"获p1/01/clip_image056.jpg)"],[1,10582,".jpg)\n\n因为值是从 Context中取；\n\n"],[-1,10585,"p"],[1,10586,"\n"],[-1,10762,"g\n)\n\n因为值是从 Context中取；\n\n |"]],[7348,7348],[10762,10762]]],[1570094693873,[null,[[1,7348,"u"],[-1,7348,"\n"],[1,7760,"age"],[-1,7760,"```"],[1,7793,"`"],[-1,7793,"\n"],[1,7883,"`"],[1,7885," |"],[1,7886,"\n（三）"],[-1,7890,"（三）"],[-1,7901,"集合"],[1,7905,"*  **********变\n\n*  ****生*****方\n\n*"],[-1,7905,"第一步  定义list集合变量\n第二步  生成变量的get方法\n第三步"],[1,7942,"****"],[1,7947,"********集"],[-1,7947,"法里面向list集合设"],[-1,7960,"\n\n"],[1,8757,"|#\n七、\n"],[-1,8760,"七、"],[1,8767,"* ****str*** 和 ***+***组合*"],[-1,8767,"数据\n\n使用struts2的标签 和 ognl"],[-1,8793,"组合"],[-1,8797,"值栈数据"],[1,8807,"***）"],[1,8826,"****"],[-1,8826,"ognl"],[-1,8832,"式”/>"],[1,8839," |\n\n（一）"],[-1,8843,"（一）"],[-1,8849,"符串\n\n"],[1,9517," |\n\n（二）"],[-1,9521,"（二）"],[-1,9526,"对象\n\n"],[1,9556,"* **"],[-1,9558,"栈放"],[-1,9561,"象\n"],[1,9586,"象"],[-1,9586,"\n"],[1,9997,")"],[-1,9997,"\n"],[1,10005,"* **"],[-1,10008,"中获"],[-1,10011,"值\n"],[1,10025,"值"],[-1,10025,"\n"],[1,10031,">\n:property>\n\n    <br"],[1,10224,")"],[-1,10224,"\n"],[1,10297,"- \n |\n\n# "],[-1,10297,"\n```\n\n\n### 获取list集合\n\n- 第一种方式：\n"],[1,10339,"获p1/01/clip_image056.jpg)"],[-1,10557,".jpg)\n\n因为值是从 Context中取；\n\n"],[1,10585,"p"],[-1,10585,"\n"],[1,10762,"g\n)\n\n因为值是从 Context中取；\n\n |"]],[10762,10762],[7348,7348]]],[1570094633930,["GJX@GJXAIOU",[[1,10341,"\n"]],[10339,10339],[10340,10340]]],[1570094634129,["GJX@GJXAIOU",[[1,10342,"\n"]],[10340,10340],[10341,10341]]],[1570094635189,["GJX@GJXAIOU",[[1,10341,"```"]],[10341,10341],[10344,10344]]],[1570094638485,["GJX@GJXAIOU",[[1,10340," 获取 List 集合：方式一：<br>\n    <s:property value=\"userList[0].username\"></s:property>\n    <s:property value=\"userList[0].password\"></s:property>\n    <s:property value=\"userList[0].address\"></s:property>\n    <br>\n    <s:property value=\"userList[1].username\"></s:property>\n    <s:property value=\"userList[1].password\"></s:property>\n    <s:property value=\"userList[1].address\"></s:property>"]],[10340,10340],[10721,10721]]],[1570094648171,["GJX@GJXAIOU",[[-1,10735,"****"]],[10735,10739],[10735,10735]]],[1570094649977,["GJX@GJXAIOU",[[-1,10740,"****"]],[10740,10744],[10740,10740]]],[1570094651856,["GJX@GJXAIOU",[[-1,10742,"** **"]],[10742,10747],[10742,10742]]],[1570094652456,["GJX@GJXAIOU",[[1,10742," "]],[10742,10742],[10743,10743]]],[1570094654058,["GJX@GJXAIOU",[[-1,10747,"****"]],[10747,10751],[10747,10747]]],[1570094654976,["GJX@GJXAIOU",[[-1,10751,"**"]],[10753,10753],[10751,10751]]],[1570094656370,["GJX@GJXAIOU",[[-1,10728,"*"]],[10727,10728],[10727,10727]]],[1570094657224,["GJX@GJXAIOU",[[-1,10727,"*"]],[10728,10728],[10727,10727]]],[1570094658132,["GJX@GJXAIOU",[[1,10738," "]],[10738,10738],[10739,10739]]],[1570094659390,["GJX@GJXAIOU",[[1,10746," "]],[10746,10746],[10747,10747]]],[1570094661316,["GJX@GJXAIOU",[[1,10727,"- "]],[10727,10727],[10729,10729]]],[1570094663553,["GJX@GJXAIOU",[[-1,10755,"![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image058.jpg)\n"]],[10755,10836],[10755,10755]]],[1570094664936,["GJX@GJXAIOU",[[-1,10767,"**"]],[10769,10769],[10767,10767]]],[1570094666359,["GJX@GJXAIOU",[[-1,10756,"**"]],[10758,10758],[10756,10756]]],[1570094667518,["GJX@GJXAIOU",[[1,10756,"- "]],[10756,10756],[10758,10758]]],[1570094668968,["GJX@GJXAIOU",[[-1,10769,"![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image060.jpg)"]],[10769,10849],[10769,10769]]],[1570094670328,["GJX@GJXAIOU",[[-1,10771,"因为值是从 Context中取；\n\n"]],[10769,10787],[10769,10769]]],[1570094681565,["GJX@GJXAIOU",[[1,10754,"···"]],[10754,10754],[10757,10757]]],[1570094682929,["GJX@GJXAIOU",[[-1,10754,"···"]],[10757,10757],[10754,10754]]],[1570094685239,["GJX@GJXAIOU",[[1,10754,"```java"]],[10754,10754],[10761,10761]]],[1570094685468,["GJX@GJXAIOU",[[1,10763,"\n"]],[10761,10761],[10762,10762]]],[1570094686641,["GJX@GJXAIOU",[[-1,10763,"\n"]],[10762,10762],[10761,10761]]],[1570094688042,["GJX@GJXAIOU",[[-1,10757,"java"]],[10761,10761],[10757,10757]]],[1570094690910,["GJX@GJXAIOU",[[1,10757,"debug_xml"]],[10757,10757],[10766,10766]]],[1570094691324,["GJX@GJXAIOU",[[1,10768,"\n"]],[10766,10766],[10767,10767]]],[1570094691937,["GJX@GJXAIOU",[[1,10769,"\n"]],[10767,10767],[10768,10768]]],[1570094692741,["GJX@GJXAIOU",[[1,10768,"```"]],[10768,10768],[10771,10771]]],[1570094753872,[null,[[-1,7348,"u"],[1,7349,"\n"],[-1,7760,"age"],[1,7763,"```"],[-1,7793,"`"],[1,7794,"\n"],[-1,7883,"`"],[-1,7886," |"],[-1,7889,"\n（三）"],[1,7897,"（三）"],[1,7905,"集合"],[-1,7907,"*  **********变\n\n*  ****生*****方\n\n*"],[1,7940,"第一步  定义list集合变量\n第二步  生成变量的get方法\n第三步"],[-1,7942,"****"],[-1,7951,"********集"],[1,7960,"法里面向list集合设"],[1,7962,"\n\n"],[-1,8757,"|#\n七、\n"],[1,8766,"七、"],[-1,8771,"* ****str*** 和 ***+***组合*"],[1,8796,"数据\n\n使用struts2的标签 和 ognl"],[1,8799,"组合"],[1,8801,"值栈数据"],[-1,8807,"***）"],[-1,8830,"****"],[1,8834,"ognl"],[1,8836,"式”/>"],[-1,8839," |\n\n（一）"],[1,8850,"（一）"],[1,8853,"符串\n\n"],[-1,9517," |\n\n（二）"],[1,9528,"（二）"],[1,9530,"对象\n\n"],[-1,9556,"* **"],[1,9562,"栈放"],[1,9563,"象\n"],[-1,9586,"象"],[1,9587,"\n"],[-1,9997,")"],[1,9998,"\n"],[-1,10005,"* **"],[1,10012,"中获"],[1,10013,"值\n"],[-1,10025,"值"],[1,10026,"\n"],[-1,10031,">\n:property>\n\n    <br"],[-1,10245,")"],[1,10246,"\n"],[-1,10318,"- \n |\n\n# "],[1,10327,"\n```\n\n\n### 获取list集合\n\n- 第一种方式：\n"],[-1,10339,"获"],[1,10340,"\n"],[-1,10721,"p"],[1,10722,"\n"],[-1,10729,"01/cliage05 g) "],[1,10744,"第"],[-1,10748," *val*"],[1,10754,"：value 值为 List 对象名；\n"],[-1,10766,"*p"],[1,10768,"\n\n"],[-1,10775,"01/clip_igeip结果：p"],[1,10792,"第三种方式：最常用\n\n\n\n结果：\n"],[-1,10968,"g\n)\n\n因为值是从 Context中取；\n\n |"]],[7348,7348],[10968,10968]]],[1570094753872,[null,[[1,7348,"u"],[-1,7348,"\n"],[1,7760,"age"],[-1,7760,"```"],[1,7793,"`"],[-1,7793,"\n"],[1,7883,"`"],[1,7885," |"],[1,7886,"\n（三）"],[-1,7890,"（三）"],[-1,7901,"集合"],[1,7905,"*  **********变\n\n*  ****生*****方\n\n*"],[-1,7905,"第一步  定义list集合变量\n第二步  生成变量的get方法\n第三步"],[1,7942,"****"],[1,7947,"********集"],[-1,7947,"法里面向list集合设"],[-1,7960,"\n\n"],[1,8757,"|#\n七、\n"],[-1,8760,"七、"],[1,8767,"* ****str*** 和 ***+***组合*"],[-1,8767,"数据\n\n使用struts2的标签 和 ognl"],[-1,8793,"组合"],[-1,8797,"值栈数据"],[1,8807,"***）"],[1,8826,"****"],[-1,8826,"ognl"],[-1,8832,"式”/>"],[1,8839," |\n\n（一）"],[-1,8843,"（一）"],[-1,8849,"符串\n\n"],[1,9517," |\n\n（二）"],[-1,9521,"（二）"],[-1,9526,"对象\n\n"],[1,9556,"* **"],[-1,9558,"栈放"],[-1,9561,"象\n"],[1,9586,"象"],[-1,9586,"\n"],[1,9997,")"],[-1,9997,"\n"],[1,10005,"* **"],[-1,10008,"中获"],[-1,10011,"值\n"],[1,10025,"值"],[-1,10025,"\n"],[1,10031,">\n:property>\n\n    <br"],[1,10224,")"],[-1,10224,"\n"],[1,10297,"- \n |\n\n# "],[-1,10297,"\n```\n\n\n### 获取list集合\n\n- 第一种方式：\n"],[1,10339,"获"],[-1,10339,"\n"],[1,10721,"p"],[-1,10721,"\n"],[1,10729,"01/cliage05 g) "],[-1,10729,"第"],[1,10734," *val*"],[-1,10734,"：value 值为 List 对象名；\n"],[1,10766,"*p"],[-1,10766,"\n\n"],[1,10775,"01/clip_igeip结果：p"],[-1,10775,"第三种方式：最常用\n\n\n\n结果：\n"],[1,10968,"g\n)\n\n因为值是从 Context中取；\n\n |"]],[10968,10968],[7348,7348]]],[1570094695533,["GJX@GJXAIOU",[[1,10767,"获取 List 集合：方式二：<br>\n    <s:iterator value=\"userList\">\n        <!--遍历 list 得到 list 里面每一个 user 对象-->\n        <s:property value=\"username\"></s:property>\n        <s:property value=\"password\"></s:property>\n        <s:property value=\"address\"></s:property>\n        <br>\n    </s:iterator>"]],[10767,10767],[11048,11048]]],[1570094705213,["GJX@GJXAIOU",[[1,11066,"`1`"]],[11066,11066],[11069,11069]]],[1570094707096,["GJX@GJXAIOU",[[-1,11066,"`1`"]],[11069,11069],[11066,11066]]],[1570094711724,["GJX@GJXAIOU",[[1,11066,"```debug_xm"]],[11066,11066],[11077,11077]]],[1570094712721,["GJX@GJXAIOU",[[-1,11075,"xm"]],[11077,11077],[11075,11075]]],[1570094713830,["GJX@GJXAIOU",[[1,11075,"jsp"]],[11075,11075],[11078,11078]]],[1570094714585,["GJX@GJXAIOU",[[1,11081,"\n"]],[11078,11078],[11079,11079]]],[1570094714795,["GJX@GJXAIOU",[[1,11082,"\n"]],[11079,11079],[11080,11080]]],[1570094715973,["GJX@GJXAIOU",[[1,11080,"```"]],[11080,11080],[11083,11083]]],[1570094718758,["GJX@GJXAIOU",[[1,11079," 获取 List 集合：方式三：<br>\n    <s:iterator value=\"userList\" var=\"user\">\n        <%--遍历值栈 List 集合，得到每一个 user 对象；\n            机制：把每次遍历得到的 user 对象放在 context 里面(因为值是从 context 中取到的)，\n            获取 context 里面数据使用 # 和 ognl 表达式；\n        --%>\n        <s:property value=\"#user.username\"></s:property>\n        <s:property value=\"#user.password\"></s:property>\n        <s:property value=\"#user.address\"></s:property>\n        <br>\n    </s:iterator>"]],[11079,11079],[11508,11508]]],[1570094721107,["GJX@GJXAIOU",[[-1,10763,"xml"]],[10766,10766],[10763,10763]]],[1570094722074,["GJX@GJXAIOU",[[1,10763,"jsp"]],[10763,10763],[10766,10766]]],[1570094747753,["GJX@GJXAIOU",[[1,10318,"\n"]],[10317,10317],[10318,10318]]],[1570094747909,["GJX@GJXAIOU",[[1,10319,"\n"]],[10318,10318],[10319,10319]]],[1570094749393,["GJX@GJXAIOU",[[1,10318,"fagn"]],[10318,10318],[10322,10322]]],[1570094750631,["GJX@GJXAIOU",[[-1,10318,"fagn"]],[10322,10322],[10318,10318]]],[1570094751957,["GJX@GJXAIOU",[[1,10318,"防止"]],[10318,10318],[10320,10320]]],[1570094752620,["GJX@GJXAIOU",[[-1,10318,"防止"]],[10320,10320],[10318,10318]]],[1570094813877,[null,[[-1,7348,"u"],[1,7349,"\n"],[-1,7760,"age"],[1,7763,"```"],[-1,7793,"`"],[1,7794,"\n"],[-1,7883,"`"],[-1,7886," |"],[-1,7889,"\n（三）"],[1,7897,"（三）"],[1,7905,"集合"],[-1,7907,"*  **********变\n\n*  ****生*****方\n\n*"],[1,7940,"第一步  定义list集合变量\n第二步  生成变量的get方法\n第三步"],[-1,7942,"****"],[-1,7951,"********集"],[1,7960,"法里面向list集合设"],[1,7962,"\n\n"],[-1,8757,"|#\n七、\n"],[1,8766,"七、"],[-1,8771,"* ****str*** 和 ***+***组合*"],[1,8796,"数据\n\n使用struts2的标签 和 ognl"],[1,8799,"组合"],[1,8801,"值栈数据"],[-1,8807,"***）"],[-1,8830,"****"],[1,8834,"ognl"],[1,8836,"式”/>"],[-1,8839," |\n\n（一）"],[1,8850,"（一）"],[1,8853,"符串\n\n"],[-1,9517," |\n\n（二）"],[1,9528,"（二）"],[1,9530,"对象\n\n"],[-1,9556,"* **"],[1,9562,"栈放"],[1,9563,"象\n"],[-1,9586,"象"],[1,9587,"\n"],[-1,9997,")"],[1,9998,"\n"],[-1,10005,"* **"],[1,10012,"中获"],[1,10013,"值\n"],[-1,10025,"值"],[1,10026,"\n"],[-1,10031,">\n:property>\n\n    <br"],[-1,10245,")"],[1,10246,"\n"],[-1,10319,"\n- \n |\n\n# "],[1,10329,"```\n\n\n### 获取list集合\n\n\n\n- 第一种方式：\n"],[-1,10341,"获"],[1,10342,"\n"],[-1,10723,"p"],[1,10724,"\n"],[-1,10731,"01/cliage05 g) "],[1,10746,"第"],[-1,10750," *val*"],[1,10756,"：value 值为 List 对象名；\n"],[-1,10768,"*"],[1,10769,"\n"],[-1,11050,"p"],[1,11051,"\n"],[-1,11058,"01/clip_ig"],[1,11068,"第三种方式：最常用\n"],[-1,11080,"e"],[1,11081,"\n"],[-1,11510,"i"],[1,11511,"\n"],[-1,11514,"p"],[1,11517,"\n"],[-1,11520,"p"],[1,11521,"\n"],[-1,11697,"g\n)\n\n因为值是从 Context中取；\n\n |"]],[7348,7348],[11697,11697]]],[1570094813877,[null,[[1,7348,"u"],[-1,7348,"\n"],[1,7760,"age"],[-1,7760,"```"],[1,7793,"`"],[-1,7793,"\n"],[1,7883,"`"],[1,7885," |"],[1,7886,"\n（三）"],[-1,7890,"（三）"],[-1,7901,"集合"],[1,7905,"*  **********变\n\n*  ****生*****方\n\n*"],[-1,7905,"第一步  定义list集合变量\n第二步  生成变量的get方法\n第三步"],[1,7942,"****"],[1,7947,"********集"],[-1,7947,"法里面向list集合设"],[-1,7960,"\n\n"],[1,8757,"|#\n七、\n"],[-1,8760,"七、"],[1,8767,"* ****str*** 和 ***+***组合*"],[-1,8767,"数据\n\n使用struts2的标签 和 ognl"],[-1,8793,"组合"],[-1,8797,"值栈数据"],[1,8807,"***）"],[1,8826,"****"],[-1,8826,"ognl"],[-1,8832,"式”/>"],[1,8839," |\n\n（一）"],[-1,8843,"（一）"],[-1,8849,"符串\n\n"],[1,9517," |\n\n（二）"],[-1,9521,"（二）"],[-1,9526,"对象\n\n"],[1,9556,"* **"],[-1,9558,"栈放"],[-1,9561,"象\n"],[1,9586,"象"],[-1,9586,"\n"],[1,9997,")"],[-1,9997,"\n"],[1,10005,"* **"],[-1,10008,"中获"],[-1,10011,"值\n"],[1,10025,"值"],[-1,10025,"\n"],[1,10031,">\n:property>\n\n    <br"],[1,10224,")"],[-1,10224,"\n"],[1,10298,"\n- \n |\n\n# "],[-1,10298,"```\n\n\n### 获取list集合\n\n\n\n- 第一种方式：\n"],[1,10341,"获"],[-1,10341,"\n"],[1,10723,"p"],[-1,10723,"\n"],[1,10731,"01/cliage05 g) "],[-1,10731,"第"],[1,10736," *val*"],[-1,10736,"：value 值为 List 对象名；\n"],[1,10768,"*"],[-1,10768,"\n"],[1,11050,"p"],[-1,11050,"\n"],[1,11058,"01/clip_ig"],[-1,11058,"第三种方式：最常用\n"],[1,11080,"e"],[-1,11080,"\n"],[1,11510,"i"],[-1,11510,"\n"],[1,11514,"p"],[-1,11516,"\n"],[1,11520,"p"],[-1,11520,"\n"],[1,11697,"g\n)\n\n因为值是从 Context中取；\n\n |"]],[11697,11697],[7348,7348]]],[1570094763089,["GJX@GJXAIOU",[[1,10318,"放置 List 代码（）"]],[10318,10318],[10330,10330]]],[1570094765901,["GJX@GJXAIOU",[[1,10329,"同上"]],[10329,10329],[10331,10331]]],[1570094767177,["GJX@GJXAIOU",[[1,10334,"\n"]],[10332,10332],[10333,10333]]],[1570094769334,["GJX@GJXAIOU",[[1,10333,"```java"]],[10333,10333],[10340,10340]]],[1570094769522,["GJX@GJXAIOU",[[1,10342,"\n"]],[10340,10340],[10341,10341]]],[1570094769652,["GJX@GJXAIOU",[[1,10343,"\n"]],[10341,10341],[10342,10342]]],[1570094770409,["GJX@GJXAIOU",[[1,10342,"```"]],[10342,10342],[10345,10345]]],[1570094773733,["GJX@GJXAIOU",[[1,10341,"public class putListAction extends ActionSupport{\n    // 首先定义 List 变量\n    private List<User> userList = new ArrayList<User>();\n    // 同时实现 get 方法\n    public List<User> getUserList() {\n        return userList;\n    }\n\n    @Override\n    public String execute() throws Exception {\n        // 向 list 中设置值\n        User user1 = new User();\n        user1.setUsername(\"GJXAIOU\");\n        user1.setPassword(\"GJXAIOU\");\n        user1.setAddress(\"江苏\");\n\n        User user2 = new User();\n        user2.setUsername(\"gjxaiou\");\n        user2.setPassword(\"gjxaiou\");\n        user2.setAddress(\"南京\");\n\n        userList.add(user1);\n        userList.add(user2);\n        return SUCCESS;\n    }\n}"]],[10341,10341],[11014,11014]]],[1570094873874,[null,[[-1,7348,"u"],[1,7349,"\n"],[-1,7760,"age"],[1,7763,"```"],[-1,7793,"`"],[1,7794,"\n"],[-1,7883,"`"],[-1,7886," |"],[-1,7889,"\n（三）"],[1,7897,"（三）"],[1,7905,"集合"],[-1,7907,"*  **********变\n\n*  ****生*****方\n\n*"],[1,7940,"第一步  定义list集合变量\n第二步  生成变量的get方法\n第三步"],[-1,7942,"****"],[-1,7951,"********集"],[1,7960,"法里面向list集合设"],[1,7962,"\n\n"],[-1,8757,"|#\n七、\n"],[1,8766,"七、"],[-1,8771,"* ****str*** 和 ***+***组合*"],[1,8796,"数据\n\n使用struts2的标签 和 ognl"],[1,8799,"组合"],[1,8801,"值栈数据"],[-1,8807,"***）"],[-1,8830,"****"],[1,8834,"ognl"],[1,8836,"式”/>"],[-1,8839," |\n\n（一）"],[1,8850,"（一）"],[1,8853,"符串\n\n"],[-1,9517," |\n\n（二）"],[1,9528,"（二）"],[1,9530,"对象\n\n"],[-1,9556,"* **"],[1,9562,"栈放"],[1,9563,"象\n"],[-1,9586,"象"],[1,9587,"\n"],[-1,9997,")"],[1,9998,"\n"],[-1,10005,"* **"],[1,10012,"中获"],[1,10013,"值\n"],[-1,10025,"值"],[1,10026,"\n"],[-1,10031,">\n:property>\n\n    <br"],[-1,10245,")"],[1,10246,"\n"],[-1,10318,""],[1,10318,"\n```\n\n\n### 获取list集合\n\n"],[-1,11022,"\n |\n\n# "],[1,11029,"第一种方式：\n"],[-1,11041,"获"],[1,11042,"\n"],[-1,11423,"p"],[1,11424,"\n"],[-1,11431,"01/cliage05 g) "],[1,11446,"第"],[-1,11450," *val*"],[1,11456,"：value 值为 List 对象名；\n"],[-1,11468,"*"],[1,11469,"\n"],[-1,11750,"p"],[1,11751,"\n"],[-1,11758,"01/clip_ig"],[1,11768,"第三种方式：最常用\n"],[-1,11780,"e"],[1,11781,"\n"],[-1,12210,"i"],[1,12211,"\n"],[-1,12214,"p"],[1,12217,"\n"],[-1,12220,"p"],[1,12221,"\n"],[-1,12397,"g\n)\n\n因为值是从 Context中取；\n\n |"]],[7348,7348],[12397,12397]]],[1570094873874,[null,[[1,7348,"u"],[-1,7348,"\n"],[1,7760,"age"],[-1,7760,"```"],[1,7793,"`"],[-1,7793,"\n"],[1,7883,"`"],[1,7885," |"],[1,7886,"\n（三）"],[-1,7890,"（三）"],[-1,7901,"集合"],[1,7905,"*  **********变\n\n*  ****生*****方\n\n*"],[-1,7905,"第一步  定义list集合变量\n第二步  生成变量的get方法\n第三步"],[1,7942,"****"],[1,7947,"********集"],[-1,7947,"法里面向list集合设"],[-1,7960,"\n\n"],[1,8757,"|#\n七、\n"],[-1,8760,"七、"],[1,8767,"* ****str*** 和 ***+***组合*"],[-1,8767,"数据\n\n使用struts2的标签 和 ognl"],[-1,8793,"组合"],[-1,8797,"值栈数据"],[1,8807,"***）"],[1,8826,"****"],[-1,8826,"ognl"],[-1,8832,"式”/>"],[1,8839," |\n\n（一）"],[-1,8843,"（一）"],[-1,8849,"符串\n\n"],[1,9517," |\n\n（二）"],[-1,9521,"（二）"],[-1,9526,"对象\n\n"],[1,9556,"* **"],[-1,9558,"栈放"],[-1,9561,"象\n"],[1,9586,"象"],[-1,9586,"\n"],[1,9997,")"],[-1,9997,"\n"],[1,10005,"* **"],[-1,10008,"中获"],[-1,10011,"值\n"],[1,10025,"值"],[-1,10025,"\n"],[1,10031,">\n:property>\n\n    <br"],[1,10224,")"],[-1,10224,"\n"],[1,10297,""],[-1,10297,"\n```\n\n\n### 获取list集合\n\n"],[1,11022,"\n |\n\n# "],[-1,11022,"第一种方式：\n"],[1,11041,"获"],[-1,11041,"\n"],[1,11423,"p"],[-1,11423,"\n"],[1,11431,"01/cliage05 g) "],[-1,11431,"第"],[1,11436," *val*"],[-1,11436,"：value 值为 List 对象名；\n"],[1,11468,"*"],[-1,11468,"\n"],[1,11750,"p"],[-1,11750,"\n"],[1,11758,"01/clip_ig"],[-1,11758,"第三种方式：最常用\n"],[1,11780,"e"],[-1,11780,"\n"],[1,12210,"i"],[-1,12210,"\n"],[1,12214,"p"],[-1,12216,"\n"],[1,12220,"p"],[-1,12220,"\n"],[1,12397,"g\n)\n\n因为值是从 Context中取；\n\n |"]],[12397,12397],[7348,7348]]],[1570094819679,["GJX@GJXAIOU",[[1,10308,"()"]],[10308,10308],[10310,10310]]],[1570094820967,["GJX@GJXAIOU",[[-1,10308,"()"]],[10310,10310],[10308,10308]]],[1570094821541,["GJX@GJXAIOU",[[1,10308,"()"]],[10308,10308],[10310,10310]]],[1570094823082,["GJX@GJXAIOU",[[-1,10308,"()"]],[10310,10310],[10308,10308]]],[1570094823746,["GJX@GJXAIOU",[[1,10308,"（）"]],[10308,10308],[10310,10310]]],[1570094825270,["GJX@GJXAIOU",[[1,10309,"三"]],[10309,10309],[10310,10310]]],[1570094830642,["GJX@GJXAIOU",[[1,12406,"（）"]],[12406,12406],[12408,12408]]],[1570094832302,["GJX@GJXAIOU",[[1,12407,"四"]],[12407,12407],[12408,12408]]],[1570094835273,["GJX@GJXAIOU",[[-1,12415,"| "]],[12415,12417],[12415,12415]]],[1570094843928,["GJX@GJXAIOU",[[1,12415,"即使用 set 和 浦发行"]],[12415,12415],[12428,12428]]],[1570094844952,["GJX@GJXAIOU",[[-1,12425,"浦发行"]],[12428,12428],[12425,12425]]],[1570094848237,["GJX@GJXAIOU",[[1,12425,"push方法"]],[12425,12425],[12431,12431]]],[1570094848290,["GJX@GJXAIOU",[[1,12429," "]],[12431,12431],[12432,12432]]],[1570094859132,["GJX@GJXAIOU",[[1,12432,"存入数据怎么取出；"]],[12432,12432],[12441,12441]]],[1570094859915,["GJX@GJXAIOU",[[1,12443,"\n"]],[12441,12441],[12442,12442]]],[1570094933872,[null,[[-1,7348,"u"],[1,7349,"\n"],[-1,7760,"age"],[1,7763,"```"],[-1,7793,"`"],[1,7794,"\n"],[-1,7883,"`"],[-1,7886," |"],[-1,7889,"\n（三）"],[1,7897,"（三）"],[1,7905,"集合"],[-1,7907,"*  **********变\n\n*  ****生*****方\n\n*"],[1,7940,"第一步  定义list集合变量\n第二步  生成变量的get方法\n第三步"],[-1,7942,"****"],[-1,7951,"********集"],[1,7960,"法里面向list集合设"],[1,7962,"\n\n"],[-1,8757,"|#\n七、\n"],[1,8766,"七、"],[-1,8771,"* ****str*** 和 ***+***组合*"],[1,8796,"数据\n\n使用struts2的标签 和 ognl"],[1,8799,"组合"],[1,8801,"值栈数据"],[-1,8807,"***）"],[-1,8830,"****"],[1,8834,"ognl"],[1,8836,"式”/>"],[-1,8839," |\n\n（一）"],[1,8850,"（一）"],[1,8853,"符串\n\n"],[-1,9517," |\n\n（二）"],[1,9528,"（二）"],[1,9530,"对象\n\n"],[-1,9556,"* **"],[1,9562,"栈放"],[1,9563,"象\n"],[-1,9586,"象"],[1,9587,"\n"],[-1,9997,")"],[1,9998,"\n"],[-1,10005,"* **"],[1,10012,"中获"],[1,10013,"值\n"],[-1,10025,"值"],[1,10026,"\n"],[-1,10031,">\n:property>\n\n    <br"],[-1,10245,")"],[1,10246,"\n"],[-1,10308,"（三）"],[1,10321,"\n```\n\n\n### （三）获取list集合\n\n"],[-1,11025,"\n |\n\n# "],[1,11032,"第一种方式：\n"],[-1,11044,"获"],[1,11045,"\n"],[-1,11426,"p"],[1,11427,"\n"],[-1,11434,"01/cliage05 g) "],[1,11449,"第"],[-1,11453," *val*"],[1,11459,"：value 值为 List 对象名；\n"],[-1,11471,"*"],[1,11472,"\n"],[-1,11753,"p"],[1,11754,"\n"],[-1,11761,"01/clip_ig"],[1,11771,"第三种方式：最常用\n"],[-1,11783,"e"],[1,11784,"\n"],[-1,12213,"i"],[1,12214,"\n"],[-1,12217,"p"],[1,12220,"\n"],[-1,12223,"p"],[1,12224,"\n"],[-1,12400,"g\n)\n\n因（四）为值是从 C"],[1,12415,"\n\n### （四）其他操作\n\n"],[-1,12441,"te"],[-1,12444,"xt中取；\n\n |\n\n### 其他操作\n\n| "]],[7348,7348],[12444,12444]]],[1570094933872,[null,[[1,7348,"u"],[-1,7348,"\n"],[1,7760,"age"],[-1,7760,"```"],[1,7793,"`"],[-1,7793,"\n"],[1,7883,"`"],[1,7885," |"],[1,7886,"\n（三）"],[-1,7890,"（三）"],[-1,7901,"集合"],[1,7905,"*  **********变\n\n*  ****生*****方\n\n*"],[-1,7905,"第一步  定义list集合变量\n第二步  生成变量的get方法\n第三步"],[1,7942,"****"],[1,7947,"********集"],[-1,7947,"法里面向list集合设"],[-1,7960,"\n\n"],[1,8757,"|#\n七、\n"],[-1,8760,"七、"],[1,8767,"* ****str*** 和 ***+***组合*"],[-1,8767,"数据\n\n使用struts2的标签 和 ognl"],[-1,8793,"组合"],[-1,8797,"值栈数据"],[1,8807,"***）"],[1,8826,"****"],[-1,8826,"ognl"],[-1,8832,"式”/>"],[1,8839," |\n\n（一）"],[-1,8843,"（一）"],[-1,8849,"符串\n\n"],[1,9517," |\n\n（二）"],[-1,9521,"（二）"],[-1,9526,"对象\n\n"],[1,9556,"* **"],[-1,9558,"栈放"],[-1,9561,"象\n"],[1,9586,"象"],[-1,9586,"\n"],[1,9997,")"],[-1,9997,"\n"],[1,10005,"* **"],[-1,10008,"中获"],[-1,10011,"值\n"],[1,10025,"值"],[-1,10025,"\n"],[1,10031,">\n:property>\n\n    <br"],[1,10224,")"],[-1,10224,"\n"],[1,10287,"（三）"],[-1,10297,"\n```\n\n\n### （三）获取list集合\n\n"],[1,11025,"\n |\n\n# "],[-1,11025,"第一种方式：\n"],[1,11044,"获"],[-1,11044,"\n"],[1,11426,"p"],[-1,11426,"\n"],[1,11434,"01/cliage05 g) "],[-1,11434,"第"],[1,11439," *val*"],[-1,11439,"：value 值为 List 对象名；\n"],[1,11471,"*"],[-1,11471,"\n"],[1,11753,"p"],[-1,11753,"\n"],[1,11761,"01/clip_ig"],[-1,11761,"第三种方式：最常用\n"],[1,11783,"e"],[-1,11783,"\n"],[1,12213,"i"],[-1,12213,"\n"],[1,12217,"p"],[-1,12219,"\n"],[1,12223,"p"],[-1,12223,"\n"],[1,12400,"g\n)\n\n因（四）为值是从 C"],[-1,12400,"\n\n### （四）其他操作\n\n"],[1,12441,"te"],[1,12442,"xt中取；\n\n |\n\n### 其他操作\n\n| "]],[12444,12444],[7348,7348]]],[1570094885648,["GJX@GJXAIOU",[[-1,12443,"\n**1** **"],[1,12452," "],[-1,12454,"****"],[-1,12461,"****"],[1,12479,"\n\n"],[-1,12481,"\n\n"],[-1,12556,"6"],[1,12557,"0"],[1,12563,"**"],[1,12565,"**"],[-1,12638,"6"],[1,12639,"0"],[1,12645,"**"],[-1,12647,"**"],[-1,12650,"**"],[-1,12653,"**"],[-1,12657,"****"],[-1,12665,"****"],[1,12683,"\n\n"],[-1,12685,"\n\n"],[-1,12760,"6"],[1,12761,"0"],[1,12767,"**"],[-1,12769,"**"],[-1,12772,"****"],[-1,12777,"****"],[-1,12784,"****"],[-1,12792,"****"],[-1,12813,"**"],[-1,12817,"**"],[-1,12820,"****"],[-1,12825,"****"],[-1,12856,"**"],[-1,12859,"**"],[-1,12864,"****"],[1,12876,"\n\n"],[-1,12878,"\n\n"],[-1,12953,"6"],[1,12954,"0"],[-1,12960,"\n\n |\n"],[1,12965,"**"]],[12443,12965],[12902,12902]]],[1570094888737,["GJX@GJXAIOU",[[-1,12444,"使用set方法向值栈放数据，获取方法：\n"]],[12444,12464],[12444,12444]]],[1570094889003,["GJX@GJXAIOU",[[-1,12443," "],[1,12444," -"]],[12444,12444],[12445,12445]]],[1570094889157,["GJX@GJXAIOU",[[1,12445," "]],[12445,12445],[12446,12446]]],[1570094890848,["GJX@GJXAIOU",[[-1,12445," "]],[12446,12446],[12445,12445]]],[1570094891332,["GJX@GJXAIOU",[[1,12443," "],[-1,12443," -"]],[12445,12445],[12444,12444]]],[1570094891918,["GJX@GJXAIOU",[[1,12444,"使用set方法向值栈放数据，获取方法：\n"]],[12444,12444],[12444,12464]]],[1570094894436,["GJX@GJXAIOU",[[-1,12443," "]],[12443,12444],[12443,12443]]],[1570094894886,["GJX@GJXAIOU",[[1,12443,"- "]],[12443,12443],[12445,12445]]],[1570094901187,["GJX@GJXAIOU",[[-1,12466,"**![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image002.jpg)**\n\n**![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image004.jpg)**\n"]],[12466,12637],[12466,12466]]],[1570094904021,["GJX@GJXAIOU",[[1,12465,"```"]],[12465,12465],[12468,12468]]],[1570094904074,["GJX@GJXAIOU",[[1,12468,"language\n```\n"]],[12468,12468],[12468,12476]]],[1570094905365,["GJX@GJXAIOU",[[-1,12468,"language"],[1,12476,"j"]],[12468,12476],[12469,12469]]],[1570094905831,["GJX@GJXAIOU",[[1,12469,"ava"]],[12469,12469],[12472,12472]]],[1570094906915,["GJX@GJXAIOU",[[1,12473,"\n"]],[12472,12472],[12473,12473]]],[1570094910486,["GJX@GJXAIOU",[[1,12473,"// fang"]],[12473,12473],[12480,12480]]],[1570094914633,["GJX@GJXAIOU",[[-1,12475," fang"]],[12480,12480],[12475,12475]]],[1570094920377,["GJX@GJXAIOU",[[1,12475," 放数据"]],[12475,12475],[12479,12479]]],[1570094920651,["GJX@GJXAIOU",[[1,12480,"\n"]],[12479,12479],[12480,12480]]],[1570094923048,["GJX@GJXAIOU",[[1,12480,"stact"]],[12480,12480],[12485,12485]]],[1570094923753,["GJX@GJXAIOU",[[-1,12484,"t"]],[12485,12485],[12484,12484]]],[1570094925567,["GJX@GJXAIOU",[[1,12484,"k.setr"]],[12484,12484],[12490,12490]]],[1570094925985,["GJX@GJXAIOU",[[-1,12489,"r"]],[12490,12490],[12489,12489]]],[1570094927566,["GJX@GJXAIOU",[[1,12489,"();"]],[12489,12489],[12492,12492]]],[1570094933423,["GJX@GJXAIOU",[[1,12490,"\"user"]],[12490,12490],[12495,12495]]],[1570094993978,[null,[[-1,7348,"u"],[1,7349,"\n"],[-1,7760,"age"],[1,7763,"```"],[-1,7793,"`"],[1,7794,"\n"],[-1,7883,"`"],[-1,7886," |"],[-1,7889,"\n（三）"],[1,7897,"（三）"],[1,7905,"集合"],[-1,7907,"*  **********变\n\n*  ****生*****方\n\n*"],[1,7940,"第一步  定义list集合变量\n第二步  生成变量的get方法\n第三步"],[-1,7942,"****"],[-1,7951,"********集"],[1,7960,"法里面向list集合设"],[1,7962,"\n\n"],[-1,8757,"|#\n七、\n"],[1,8766,"七、"],[-1,8771,"* ****str*** 和 ***+***组合*"],[1,8796,"数据\n\n使用struts2的标签 和 ognl"],[1,8799,"组合"],[1,8801,"值栈数据"],[-1,8807,"***）"],[-1,8830,"****"],[1,8834,"ognl"],[1,8836,"式”/>"],[-1,8839," |\n\n（一）"],[1,8850,"（一）"],[1,8853,"符串\n\n"],[-1,9517," |\n\n（二）"],[1,9528,"（二）"],[1,9530,"对象\n\n"],[-1,9556,"* **"],[1,9562,"栈放"],[1,9563,"象\n"],[-1,9586,"象"],[1,9587,"\n"],[-1,9997,")"],[1,9998,"\n"],[-1,10005,"* **"],[1,10012,"中获"],[1,10013,"值\n"],[-1,10025,"值"],[1,10026,"\n"],[-1,10031,">\n:property>\n\n    <br"],[-1,10245,")"],[1,10246,"\n"],[-1,10308,"（三）"],[1,10321,"\n```\n\n\n### （三）获取list集合\n\n"],[-1,11025,"\n |\n\n# "],[1,11032,"第一种方式：\n"],[-1,11044,"获"],[1,11045,"\n"],[-1,11426,"p"],[1,11427,"\n"],[-1,11434,"01/cliage05 g) "],[1,11449,"第"],[-1,11453," *val*"],[1,11459,"：value 值为 List 对象名；\n"],[-1,11471,"*"],[1,11472,"\n"],[-1,11753,"p"],[1,11754,"\n"],[-1,11761,"01/clip_ig"],[1,11771,"第三种方式：最常用\n"],[-1,11783,"e"],[1,11784,"\n"],[-1,12213,"i"],[1,12214,"\n"],[-1,12217,"p"],[1,12220,"\n"],[-1,12223,"p"],[1,12224,"\n"],[-1,12400,"g\n)\n\n因（四）为值是从 C"],[1,12415,"\n\n### （四）其他操作\n\n"],[-1,12441,"te"],[1,12443,"\n\n"],[-1,12503,"p0cp_e064)\n"],[-1,12515,"**"],[-1,12518,"**"],[-1,12521,"**"],[-1,12525,"*\n\n**"],[1,12530,"p"],[-1,12533,"****"],[1,12551,"\n\n"],[-1,12553,"\n\n"],[-1,12603,"0"],[1,12604,"o"],[-1,12610,"**"],[1,12614,"1/"],[1,12615,"1/cl"],[1,12616,"p_im"],[1,12619,"006."],[-1,12623,"（"],[-1,12626,"**1****）使用****sh*置"],[1,12644,"\n\n（1）使用push方法设置值，没有"],[-1,12653,"**"],[-1,12657,"**"],[-1,12660,"****"],[-1,12665,"****"],[1,12671,"值栈"],[1,12672,"数据"],[1,12675,"向值栈放"],[-1,12683,"\n\n"],[1,12687,"组名"],[-1,12688,"**"],[-1,12691,"**"],[-1,12696,"****"],[1,12708,"\n\n"],[-1,12710,"\n\n"],[-1,12760,"0"],[1,12761,"o"],[-1,12767,"**"],[1,12769,"ip1/0"],[-1,12782,"6"],[1,12783,"0"],[-1,12789,"\n\n |\n"],[1,12794,"**"]],[7348,7348],[12796,12796]]],[1570094993978,[null,[[1,7348,"u"],[-1,7348,"\n"],[1,7760,"age"],[-1,7760,"```"],[1,7793,"`"],[-1,7793,"\n"],[1,7883,"`"],[1,7885," |"],[1,7886,"\n（三）"],[-1,7890,"（三）"],[-1,7901,"集合"],[1,7905,"*  **********变\n\n*  ****生*****方\n\n*"],[-1,7905,"第一步  定义list集合变量\n第二步  生成变量的get方法\n第三步"],[1,7942,"****"],[1,7947,"********集"],[-1,7947,"法里面向list集合设"],[-1,7960,"\n\n"],[1,8757,"|#\n七、\n"],[-1,8760,"七、"],[1,8767,"* ****str*** 和 ***+***组合*"],[-1,8767,"数据\n\n使用struts2的标签 和 ognl"],[-1,8793,"组合"],[-1,8797,"值栈数据"],[1,8807,"***）"],[1,8826,"****"],[-1,8826,"ognl"],[-1,8832,"式”/>"],[1,8839," |\n\n（一）"],[-1,8843,"（一）"],[-1,8849,"符串\n\n"],[1,9517," |\n\n（二）"],[-1,9521,"（二）"],[-1,9526,"对象\n\n"],[1,9556,"* **"],[-1,9558,"栈放"],[-1,9561,"象\n"],[1,9586,"象"],[-1,9586,"\n"],[1,9997,")"],[-1,9997,"\n"],[1,10005,"* **"],[-1,10008,"中获"],[-1,10011,"值\n"],[1,10025,"值"],[-1,10025,"\n"],[1,10031,">\n:property>\n\n    <br"],[1,10224,")"],[-1,10224,"\n"],[1,10287,"（三）"],[-1,10297,"\n```\n\n\n### （三）获取list集合\n\n"],[1,11025,"\n |\n\n# "],[-1,11025,"第一种方式：\n"],[1,11044,"获"],[-1,11044,"\n"],[1,11426,"p"],[-1,11426,"\n"],[1,11434,"01/cliage05 g) "],[-1,11434,"第"],[1,11439," *val*"],[-1,11439,"：value 值为 List 对象名；\n"],[1,11471,"*"],[-1,11471,"\n"],[1,11753,"p"],[-1,11753,"\n"],[1,11761,"01/clip_ig"],[-1,11761,"第三种方式：最常用\n"],[1,11783,"e"],[-1,11783,"\n"],[1,12213,"i"],[-1,12213,"\n"],[1,12217,"p"],[-1,12219,"\n"],[1,12223,"p"],[-1,12223,"\n"],[1,12400,"g\n)\n\n因（四）为值是从 C"],[-1,12400,"\n\n### （四）其他操作\n\n"],[1,12441,"te"],[-1,12441,"\n\n"],[1,12503,"p0cp_e064)\n"],[1,12504,"**"],[1,12505,"**"],[1,12506,"**"],[1,12508,"*\n\n**"],[-1,12508,"p"],[1,12512,"****"],[-1,12526,"\n\n"],[1,12530,"\n\n"],[1,12578,"0"],[-1,12578,"o"],[1,12585,"**"],[-1,12587,"1/"],[-1,12590,"1/cl"],[-1,12595,"p_im"],[-1,12602,"006."],[1,12610,"（"],[1,12612,"**1****）使用****sh*置"],[-1,12612,"\n\n（1）使用push方法设置值，没有"],[1,12640,"**"],[1,12642,"**"],[1,12643,"****"],[1,12644,"****"],[-1,12646,"值栈"],[-1,12649,"数据"],[-1,12654,"向值栈放"],[1,12666,"\n\n"],[-1,12668,"组名"],[1,12671,"**"],[1,12672,"**"],[1,12675,"****"],[-1,12683,"\n\n"],[1,12687,"\n\n"],[1,12735,"0"],[-1,12735,"o"],[1,12742,"**"],[-1,12742,"ip1/0"],[1,12760,"6"],[-1,12760,"0"],[1,12767,"\n\n |\n"],[-1,12767,"**"]],[12796,12796],[7348,7348]]],[1570094939429,["GJX@GJXAIOU",[[1,12495,"name\", \"GJXAIOU\""]],[12495,12495],[12511,12511]]],[1570094941275,["GJX@GJXAIOU",[[1,12520,"\n"]],[12517,12517],[12518,12518]]],[1570094946082,["GJX@GJXAIOU",[[1,12521,"\n"]],[12518,12518],[12519,12519]]],[1570094946917,["GJX@GJXAIOU",[[1,12519,"···"]],[12519,12519],[12522,12522]]],[1570094947649,["GJX@GJXAIOU",[[-1,12519,"···"]],[12522,12522],[12519,12519]]],[1570094948773,["GJX@GJXAIOU",[[1,12519,"```"]],[12519,12519],[12522,12522]]],[1570094948825,["GJX@GJXAIOU",[[1,12522,"language\n```\n"]],[12522,12522],[12522,12530]]],[1570094950175,["GJX@GJXAIOU",[[-1,12522,"language"],[1,12530,"j"]],[12522,12530],[12523,12523]]],[1570094950449,["GJX@GJXAIOU",[[1,12523,"sp"]],[12523,12523],[12525,12525]]],[1570094950857,["GJX@GJXAIOU",[[1,12526,"\n"]],[12525,12525],[12526,12526]]],[1570094953500,["GJX@GJXAIOU",[[1,12526,"<>"]],[12526,12526],[12528,12528]]],[1570094956756,["GJX@GJXAIOU",[[1,12527,"!----"]],[12527,12527],[12532,12532]]],[1570094963909,["GJX@GJXAIOU",[[1,12530,"通过 set放置的数据"]],[12530,12530],[12541,12541]]],[1570094965891,["GJX@GJXAIOU",[[1,12536," "]],[12536,12536],[12537,12537]]],[1570094975261,["GJX@GJXAIOU",[[1,12542,"，根据名称进行获取"]],[12542,12542],[12551,12551]]],[1570094976898,["GJX@GJXAIOU",[[1,12555,"\n"]],[12554,12554],[12555,12555]]],[1570094992051,["GJX@GJXAIOU",[[1,12555,"<s:property value = \"guer"]],[12555,12555],[12580,12580]]],[1570094992700,["GJX@GJXAIOU",[[-1,12576,"guer"]],[12580,12580],[12576,12576]]],[1570094993758,["GJX@GJXAIOU",[[1,12576,"user"]],[12576,12576],[12580,12580]]],[1570095053979,[null,[[-1,7348,"u"],[1,7349,"\n"],[-1,7760,"age"],[1,7763,"```"],[-1,7793,"`"],[1,7794,"\n"],[-1,7883,"`"],[-1,7886," |"],[-1,7889,"\n（三）"],[1,7897,"（三）"],[1,7905,"集合"],[-1,7907,"*  **********变\n\n*  ****生*****方\n\n*"],[1,7940,"第一步  定义list集合变量\n第二步  生成变量的get方法\n第三步"],[-1,7942,"****"],[-1,7951,"********集"],[1,7960,"法里面向list集合设"],[1,7962,"\n\n"],[-1,8757,"|#\n七、\n"],[1,8766,"七、"],[-1,8771,"* ****str*** 和 ***+***组合*"],[1,8796,"数据\n\n使用struts2的标签 和 ognl"],[1,8799,"组合"],[1,8801,"值栈数据"],[-1,8807,"***）"],[-1,8830,"****"],[1,8834,"ognl"],[1,8836,"式”/>"],[-1,8839," |\n\n（一）"],[1,8850,"（一）"],[1,8853,"符串\n\n"],[-1,9517," |\n\n（二）"],[1,9528,"（二）"],[1,9530,"对象\n\n"],[-1,9556,"* **"],[1,9562,"栈放"],[1,9563,"象\n"],[-1,9586,"象"],[1,9587,"\n"],[-1,9997,")"],[1,9998,"\n"],[-1,10005,"* **"],[1,10012,"中获"],[1,10013,"值\n"],[-1,10025,"值"],[1,10026,"\n"],[-1,10031,">\n:property>\n\n    <br"],[-1,10245,")"],[1,10246,"\n"],[-1,10308,"（三）"],[1,10321,"\n```\n\n\n### （三）获取list集合\n\n"],[-1,11025,"\n |\n\n# "],[1,11032,"第一种方式：\n"],[-1,11044,"获"],[1,11045,"\n"],[-1,11426,"p"],[1,11427,"\n"],[-1,11434,"01/cliage05 g) "],[1,11449,"第"],[-1,11453," *val*"],[1,11459,"：value 值为 List 对象名；\n"],[-1,11471,"*"],[1,11472,"\n"],[-1,11753,"p"],[1,11754,"\n"],[-1,11761,"01/clip_ig"],[1,11771,"第三种方式：最常用\n"],[-1,11783,"e"],[1,11784,"\n"],[-1,12213,"i"],[1,12214,"\n"],[-1,12217,"p"],[1,12220,"\n"],[-1,12223,"p"],[1,12224,"\n"],[-1,12400,"g\n)\n\n因（四）为值是从 C"],[1,12415,"\n\n### （四）其他操作\n\n"],[-1,12441,"te"],[1,12443,"\n\n"],[-1,12585,"p"],[-1,12588,"0cp_e064)"],[-1,12598,"\n**"],[-1,12602,"**"],[-1,12605,"**"],[-1,12609,"*\n\n**"],[1,12614,"p"],[-1,12617,"****"],[1,12635,"\n\n"],[-1,12637,"\n\n"],[-1,12687,"0"],[1,12688,"o"],[-1,12694,"**"],[1,12698,"1/"],[1,12699,"1/clip_"],[1,12700,"m"],[1,12703,"006."],[-1,12707,"（**"],[1,12712,"\n\n（"],[-1,12713,"****"],[-1,12720,"****sh*置"],[1,12728,"push方法设置值，没有"],[-1,12737,"**"],[-1,12741,"**"],[-1,12744,"****"],[-1,12749,"****"],[1,12755,"值栈"],[1,12756,"数据"],[1,12759,"向值栈放"],[-1,12767,"\n\n"],[1,12771,"组名"],[-1,12772,"**"],[-1,12775,"**"],[-1,12780,"****"],[1,12792,"\n\n"],[-1,12794,"\n\n"],[-1,12844,"0"],[1,12845,"o"],[-1,12851,"**"],[1,12853,"ip1/0"],[-1,12866,"6"],[1,12867,"0"],[-1,12873,"\n\n |\n"],[1,12878,"**"]],[7348,7348],[12880,12880]]],[1570095053979,[null,[[1,7348,"u"],[-1,7348,"\n"],[1,7760,"age"],[-1,7760,"```"],[1,7793,"`"],[-1,7793,"\n"],[1,7883,"`"],[1,7885," |"],[1,7886,"\n（三）"],[-1,7890,"（三）"],[-1,7901,"集合"],[1,7905,"*  **********变\n\n*  ****生*****方\n\n*"],[-1,7905,"第一步  定义list集合变量\n第二步  生成变量的get方法\n第三步"],[1,7942,"****"],[1,7947,"********集"],[-1,7947,"法里面向list集合设"],[-1,7960,"\n\n"],[1,8757,"|#\n七、\n"],[-1,8760,"七、"],[1,8767,"* ****str*** 和 ***+***组合*"],[-1,8767,"数据\n\n使用struts2的标签 和 ognl"],[-1,8793,"组合"],[-1,8797,"值栈数据"],[1,8807,"***）"],[1,8826,"****"],[-1,8826,"ognl"],[-1,8832,"式”/>"],[1,8839," |\n\n（一）"],[-1,8843,"（一）"],[-1,8849,"符串\n\n"],[1,9517," |\n\n（二）"],[-1,9521,"（二）"],[-1,9526,"对象\n\n"],[1,9556,"* **"],[-1,9558,"栈放"],[-1,9561,"象\n"],[1,9586,"象"],[-1,9586,"\n"],[1,9997,")"],[-1,9997,"\n"],[1,10005,"* **"],[-1,10008,"中获"],[-1,10011,"值\n"],[1,10025,"值"],[-1,10025,"\n"],[1,10031,">\n:property>\n\n    <br"],[1,10224,")"],[-1,10224,"\n"],[1,10287,"（三）"],[-1,10297,"\n```\n\n\n### （三）获取list集合\n\n"],[1,11025,"\n |\n\n# "],[-1,11025,"第一种方式：\n"],[1,11044,"获"],[-1,11044,"\n"],[1,11426,"p"],[-1,11426,"\n"],[1,11434,"01/cliage05 g) "],[-1,11434,"第"],[1,11439," *val*"],[-1,11439,"：value 值为 List 对象名；\n"],[1,11471,"*"],[-1,11471,"\n"],[1,11753,"p"],[-1,11753,"\n"],[1,11761,"01/clip_ig"],[-1,11761,"第三种方式：最常用\n"],[1,11783,"e"],[-1,11783,"\n"],[1,12213,"i"],[-1,12213,"\n"],[1,12217,"p"],[-1,12219,"\n"],[1,12223,"p"],[-1,12223,"\n"],[1,12400,"g\n)\n\n因（四）为值是从 C"],[-1,12400,"\n\n### （四）其他操作\n\n"],[1,12441,"te"],[-1,12441,"\n\n"],[1,12585,"p"],[1,12587,"0cp_e064)"],[1,12588,"\n**"],[1,12589,"**"],[1,12590,"**"],[1,12592,"*\n\n**"],[-1,12592,"p"],[1,12596,"****"],[-1,12610,"\n\n"],[1,12614,"\n\n"],[1,12662,"0"],[-1,12662,"o"],[1,12669,"**"],[-1,12671,"1/"],[-1,12674,"1/clip_"],[-1,12682,"m"],[-1,12686,"006."],[1,12694,"（**"],[-1,12696,"\n\n（"],[1,12700,"****"],[1,12703,"****sh*置"],[-1,12703,"push方法设置值，没有"],[1,12724,"**"],[1,12726,"**"],[1,12727,"****"],[1,12728,"****"],[-1,12730,"值栈"],[-1,12733,"数据"],[-1,12738,"向值栈放"],[1,12750,"\n\n"],[-1,12752,"组名"],[1,12755,"**"],[1,12756,"**"],[1,12759,"****"],[-1,12767,"\n\n"],[1,12771,"\n\n"],[1,12819,"0"],[-1,12819,"o"],[1,12826,"**"],[-1,12826,"ip1/0"],[1,12844,"6"],[-1,12844,"0"],[1,12851,"\n\n |\n"],[-1,12851,"**"]],[12880,12880],[7348,7348]]],[1570094996357,["GJX@GJXAIOU",[[1,12580,"name\">"]],[12580,12580],[12586,12586]]],[1570094998381,["GJX@GJXAIOU",[[1,12585,"/"]],[12585,12585],[12586,12586]]],[1570095004779,["GJX@GJXAIOU",[[-1,12594,"\n2 "]],[12594,12597],[12594,12594]]],[1570095005277,["GJX@GJXAIOU",[[1,12594,"- "]],[12594,12594],[12596,12596]]],[1570095013561,["GJX@GJXAIOU",[[-1,12618,"**![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image006.jpg)**\n"]],[12618,12703],[12618,12618]]],[1570095014107,["GJX@GJXAIOU",[[-1,12618,"\n"]],[12618,12618],[12617,12617]]],[1570095018019,["GJX@GJXAIOU",[[1,12617,"··"]],[12617,12617],[12619,12619]]],[1570095018930,["GJX@GJXAIOU",[[-1,12617,"··"]],[12619,12619],[12617,12617]]],[1570095019725,["GJX@GJXAIOU",[[1,12617,"```"]],[12617,12617],[12620,12620]]],[1570095019777,["GJX@GJXAIOU",[[1,12620,"language\n```\n"]],[12620,12620],[12620,12628]]],[1570095020875,["GJX@GJXAIOU",[[-1,12620,"language"],[1,12628,"j"]],[12620,12628],[12621,12621]]],[1570095021258,["GJX@GJXAIOU",[[1,12621,"ava"]],[12621,12621],[12624,12624]]],[1570095021424,["GJX@GJXAIOU",[[1,12625,"\n"]],[12624,12624],[12625,12625]]],[1570095031393,["GJX@GJXAIOU",[[1,12625,"// 使用 push 方法放数据"]],[12625,12625],[12641,12641]]],[1570095031705,["GJX@GJXAIOU",[[1,12642,"\n"]],[12641,12641],[12642,12642]]],[1570095038605,["GJX@GJXAIOU",[[1,12642,"stack.push();"]],[12642,12642],[12655,12655]]],[1570095042767,["GJX@GJXAIOU",[[1,12653,"\"GJXAIOU\""]],[12653,12653],[12662,12662]]],[1570095048569,["GJX@GJXAIOU",[[-1,12697,"\n"]],[12697,12697],[12696,12696]]],[1570095051800,["GJX@GJXAIOU",[[-1,12740,"**![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image008.jpg)**"]],[12740,12824],[12740,12740]]],[1570095113978,[null,[[-1,7348,"u"],[1,7349,"\n"],[-1,7760,"age"],[1,7763,"```"],[-1,7793,"`"],[1,7794,"\n"],[-1,7883,"`"],[-1,7886," |"],[-1,7889,"\n（三）"],[1,7897,"（三）"],[1,7905,"集合"],[-1,7907,"*  **********变\n\n*  ****生*****方\n\n*"],[1,7940,"第一步  定义list集合变量\n第二步  生成变量的get方法\n第三步"],[-1,7942,"****"],[-1,7951,"********集"],[1,7960,"法里面向list集合设"],[1,7962,"\n\n"],[-1,8757,"|#\n七、\n"],[1,8766,"七、"],[-1,8771,"* ****str*** 和 ***+***组合*"],[1,8796,"数据\n\n使用struts2的标签 和 ognl"],[1,8799,"组合"],[1,8801,"值栈数据"],[-1,8807,"***）"],[-1,8830,"****"],[1,8834,"ognl"],[1,8836,"式”/>"],[-1,8839," |\n\n（一）"],[1,8850,"（一）"],[1,8853,"符串\n\n"],[-1,9517," |\n\n（二）"],[1,9528,"（二）"],[1,9530,"对象\n\n"],[-1,9556,"* **"],[1,9562,"栈放"],[1,9563,"象\n"],[-1,9586,"象"],[1,9587,"\n"],[-1,9997,")"],[1,9998,"\n"],[-1,10005,"* **"],[1,10012,"中获"],[1,10013,"值\n"],[-1,10025,"值"],[1,10026,"\n"],[-1,10031,">\n:property>\n\n    <br"],[-1,10245,")"],[1,10246,"\n"],[-1,10308,"（三）"],[1,10321,"\n```\n\n\n### （三）获取list集合\n\n"],[-1,11025,"\n |\n\n# "],[1,11032,"第一种方式：\n"],[-1,11044,"获"],[1,11045,"\n"],[-1,11426,"p"],[1,11427,"\n"],[-1,11434,"01/cliage05 g) "],[1,11449,"第"],[-1,11453," *val*"],[1,11459,"：value 值为 List 对象名；\n"],[-1,11471,"*"],[1,11472,"\n"],[-1,11753,"p"],[1,11754,"\n"],[-1,11761,"01/clip_ig"],[1,11771,"第三种方式：最常用\n"],[-1,11783,"e"],[1,11784,"\n"],[-1,12213,"i"],[1,12214,"\n"],[-1,12217,"p"],[1,12220,"\n"],[-1,12223,"p"],[1,12224,"\n"],[-1,12400,"g\n)\n\n因（四）为值是从 C"],[1,12415,"\n\n### （四）其他操作\n\n"],[-1,12441,"te"],[1,12443,"\n\n"],[-1,12592,"p"],[1,12593,"\n"],[-1,12596,"p_e064)\n\n**2** **"],[-1,12615,"*"],[1,12616,"push方法向值栈放数据，获取方法："],[-1,12670,"0iagejpg)"],[-1,12680,"****"],[-1,12685,"****"],[-1,12692,"****s*置"],[1,12699,"push方法设置值，没有"],[-1,12708,"**"],[-1,12711,"\n**"],[-1,12715,"****"],[-1,12720,"****"],[1,12726,"值栈"],[1,12727,"数据"],[1,12730,"向值栈放"],[-1,12738,"\n\n1/clip_image068.jpg)\n\n |"],[1,12764,"，数组名称 top，根据数组获取值\n"]],[7348,7348],[12782,12782]]],[1570095113978,[null,[[1,7348,"u"],[-1,7348,"\n"],[1,7760,"age"],[-1,7760,"```"],[1,7793,"`"],[-1,7793,"\n"],[1,7883,"`"],[1,7885," |"],[1,7886,"\n（三）"],[-1,7890,"（三）"],[-1,7901,"集合"],[1,7905,"*  **********变\n\n*  ****生*****方\n\n*"],[-1,7905,"第一步  定义list集合变量\n第二步  生成变量的get方法\n第三步"],[1,7942,"****"],[1,7947,"********集"],[-1,7947,"法里面向list集合设"],[-1,7960,"\n\n"],[1,8757,"|#\n七、\n"],[-1,8760,"七、"],[1,8767,"* ****str*** 和 ***+***组合*"],[-1,8767,"数据\n\n使用struts2的标签 和 ognl"],[-1,8793,"组合"],[-1,8797,"值栈数据"],[1,8807,"***）"],[1,8826,"****"],[-1,8826,"ognl"],[-1,8832,"式”/>"],[1,8839," |\n\n（一）"],[-1,8843,"（一）"],[-1,8849,"符串\n\n"],[1,9517," |\n\n（二）"],[-1,9521,"（二）"],[-1,9526,"对象\n\n"],[1,9556,"* **"],[-1,9558,"栈放"],[-1,9561,"象\n"],[1,9586,"象"],[-1,9586,"\n"],[1,9997,")"],[-1,9997,"\n"],[1,10005,"* **"],[-1,10008,"中获"],[-1,10011,"值\n"],[1,10025,"值"],[-1,10025,"\n"],[1,10031,">\n:property>\n\n    <br"],[1,10224,")"],[-1,10224,"\n"],[1,10287,"（三）"],[-1,10297,"\n```\n\n\n### （三）获取list集合\n\n"],[1,11025,"\n |\n\n# "],[-1,11025,"第一种方式：\n"],[1,11044,"获"],[-1,11044,"\n"],[1,11426,"p"],[-1,11426,"\n"],[1,11434,"01/cliage05 g) "],[-1,11434,"第"],[1,11439," *val*"],[-1,11439,"：value 值为 List 对象名；\n"],[1,11471,"*"],[-1,11471,"\n"],[1,11753,"p"],[-1,11753,"\n"],[1,11761,"01/clip_ig"],[-1,11761,"第三种方式：最常用\n"],[1,11783,"e"],[-1,11783,"\n"],[1,12213,"i"],[-1,12213,"\n"],[1,12217,"p"],[-1,12219,"\n"],[1,12223,"p"],[-1,12223,"\n"],[1,12400,"g\n)\n\n因（四）为值是从 C"],[-1,12400,"\n\n### （四）其他操作\n\n"],[1,12441,"te"],[-1,12441,"\n\n"],[1,12592,"p"],[-1,12592,"\n"],[1,12596,"p_e064)\n\n**2** **"],[1,12598,"*"],[-1,12598,"push方法向值栈放数据，获取方法："],[1,12670,"0iagejpg)"],[1,12671,"****"],[1,12672,"****"],[1,12675,"****s*置"],[-1,12675,"push方法设置值，没有"],[1,12696,"**"],[1,12697,"\n**"],[1,12698,"****"],[1,12699,"****"],[-1,12701,"值栈"],[-1,12704,"数据"],[-1,12709,"向值栈放"],[1,12721,"\n\n1/clip_image068.jpg)\n\n |"],[-1,12721,"，数组名称 top，根据数组获取值\n"]],[12782,12782],[7348,7348]]],[1570095057004,["GJX@GJXAIOU",[[1,12739,"```"]],[12739,12739],[12742,12742]]],[1570095057056,["GJX@GJXAIOU",[[1,12742,"language\n```\n"]],[12742,12742],[12742,12750]]],[1570095058997,["GJX@GJXAIOU",[[-1,12742,"language"],[1,12750,"j"]],[12742,12750],[12743,12743]]],[1570095059897,["GJX@GJXAIOU",[[1,12743,"s;"]],[12743,12743],[12745,12745]]],[1570095060546,["GJX@GJXAIOU",[[-1,12744,";"]],[12745,12745],[12744,12744]]],[1570095061331,["GJX@GJXAIOU",[[1,12744,"["]],[12744,12744],[12745,12745]]],[1570095061833,["GJX@GJXAIOU",[[-1,12744,"["]],[12745,12745],[12744,12744]]],[1570095063820,["GJX@GJXAIOU",[[1,12744,"p"]],[12744,12744],[12745,12745]]],[1570095064225,["GJX@GJXAIOU",[[1,12746,"\n"]],[12745,12745],[12746,12746]]],[1570095066376,["GJX@GJXAIOU",[[1,12746,"// huo"]],[12746,12746],[12752,12752]]],[1570095067731,["GJX@GJXAIOU",[[-1,12746,"// huo"]],[12752,12752],[12746,12746]]],[1570095068543,["GJX@GJXAIOU",[[1,12746,"<>"]],[12746,12746],[12748,12748]]],[1570095071879,["GJX@GJXAIOU",[[1,12747,"!----"]],[12747,12747],[12752,12752]]],[1570095078631,["GJX@GJXAIOU",[[1,12750,"获取 push非"]],[12750,12750],[12758,12758]]],[1570095079312,["GJX@GJXAIOU",[[-1,12757,"非"]],[12758,12758],[12757,12757]]],[1570095084096,["GJX@GJXAIOU",[[1,12757," 方法放入的值"]],[12757,12757],[12764,12764]]],[1570095088070,["GJX@GJXAIOU",[[1,12602," "]],[12602,12602],[12603,12603]]],[1570095088949,["GJX@GJXAIOU",[[1,12598," "]],[12598,12598],[12599,12599]]],[1570095090245,["GJX@GJXAIOU",[[1,12677," "]],[12677,12677],[12678,12678]]],[1570095090925,["GJX@GJXAIOU",[[1,12682," "]],[12682,12682],[12683,12683]]],[1570095093406,["GJX@GJXAIOU",[[1,12772,"\n"]],[12771,12771],[12772,12772]]],[1570095112902,["GJX@GJXAIOU",[[1,12772,"<s:property value = \"[0].top"]],[12772,12772],[12800,12800]]],[1570095173983,[null,[[-1,7348,"u"],[1,7349,"\n"],[-1,7760,"age"],[1,7763,"```"],[-1,7793,"`"],[1,7794,"\n"],[-1,7883,"`"],[-1,7886," |"],[-1,7889,"\n（三）"],[1,7897,"（三）"],[1,7905,"集合"],[-1,7907,"*  **********变\n\n*  ****生*****方\n\n*"],[1,7940,"第一步  定义list集合变量\n第二步  生成变量的get方法\n第三步"],[-1,7942,"****"],[-1,7951,"********集"],[1,7960,"法里面向list集合设"],[1,7962,"\n\n"],[-1,8757,"|#\n七、\n"],[1,8766,"七、"],[-1,8771,"* ****str*** 和 ***+***组合*"],[1,8796,"数据\n\n使用struts2的标签 和 ognl"],[1,8799,"组合"],[1,8801,"值栈数据"],[-1,8807,"***）"],[-1,8830,"****"],[1,8834,"ognl"],[1,8836,"式”/>"],[-1,8839," |\n\n（一）"],[1,8850,"（一）"],[1,8853,"符串\n\n"],[-1,9517," |\n\n（二）"],[1,9528,"（二）"],[1,9530,"对象\n\n"],[-1,9556,"* **"],[1,9562,"栈放"],[1,9563,"象\n"],[-1,9586,"象"],[1,9587,"\n"],[-1,9997,")"],[1,9998,"\n"],[-1,10005,"* **"],[1,10012,"中获"],[1,10013,"值\n"],[-1,10025,"值"],[1,10026,"\n"],[-1,10031,">\n:property>\n\n    <br"],[-1,10245,")"],[1,10246,"\n"],[-1,10308,"（三）"],[1,10321,"\n```\n\n\n### （三）获取list集合\n\n"],[-1,11025,"\n |\n\n# "],[1,11032,"第一种方式：\n"],[-1,11044,"获"],[1,11045,"\n"],[-1,11426,"p"],[1,11427,"\n"],[-1,11434,"01/cliage05 g) "],[1,11449,"第"],[-1,11453," *val*"],[1,11459,"：value 值为 List 对象名；\n"],[-1,11471,"*"],[1,11472,"\n"],[-1,11753,"p"],[1,11754,"\n"],[-1,11761,"01/clip_ig"],[1,11771,"第三种方式：最常用\n"],[-1,11783,"e"],[1,11784,"\n"],[-1,12213,"i"],[1,12214,"\n"],[-1,12217,"p"],[1,12220,"\n"],[-1,12223,"p"],[1,12224,"\n"],[-1,12400,"g\n)\n\n因（四）为值是从 C"],[1,12415,"\n\n### （四）其他操作\n\n"],[-1,12441,"te"],[1,12443,"\n\n"],[-1,12592,"p"],[1,12593,"\n"],[-1,12596,"p_ e064 )\n\n**2** **"],[-1,12617,"*"],[1,12618," push 方法向值栈放数据，获取方法："],[-1,12672,"0iage jpg) "],[-1,12684,"****"],[-1,12689,"****"],[-1,12696,"****s*置"],[1,12703," push 方法设置值，没有"],[-1,12712,"**"],[-1,12715,"\n**"],[-1,12719,"****"],[-1,12724,"****"],[1,12730,"值栈"],[1,12731,"数据"],[1,12734,"向值栈放"],[1,12742,"，数组名称 top，根据数组获取值"],[-1,12805,"\n1/clip_image068.jpg)\n\n |"]],[7348,7348],[12805,12805]]],[1570095173983,[null,[[1,7348,"u"],[-1,7348,"\n"],[1,7760,"age"],[-1,7760,"```"],[1,7793,"`"],[-1,7793,"\n"],[1,7883,"`"],[1,7885," |"],[1,7886,"\n（三）"],[-1,7890,"（三）"],[-1,7901,"集合"],[1,7905,"*  **********变\n\n*  ****生*****方\n\n*"],[-1,7905,"第一步  定义list集合变量\n第二步  生成变量的get方法\n第三步"],[1,7942,"****"],[1,7947,"********集"],[-1,7947,"法里面向list集合设"],[-1,7960,"\n\n"],[1,8757,"|#\n七、\n"],[-1,8760,"七、"],[1,8767,"* ****str*** 和 ***+***组合*"],[-1,8767,"数据\n\n使用struts2的标签 和 ognl"],[-1,8793,"组合"],[-1,8797,"值栈数据"],[1,8807,"***）"],[1,8826,"****"],[-1,8826,"ognl"],[-1,8832,"式”/>"],[1,8839," |\n\n（一）"],[-1,8843,"（一）"],[-1,8849,"符串\n\n"],[1,9517," |\n\n（二）"],[-1,9521,"（二）"],[-1,9526,"对象\n\n"],[1,9556,"* **"],[-1,9558,"栈放"],[-1,9561,"象\n"],[1,9586,"象"],[-1,9586,"\n"],[1,9997,")"],[-1,9997,"\n"],[1,10005,"* **"],[-1,10008,"中获"],[-1,10011,"值\n"],[1,10025,"值"],[-1,10025,"\n"],[1,10031,">\n:property>\n\n    <br"],[1,10224,")"],[-1,10224,"\n"],[1,10287,"（三）"],[-1,10297,"\n```\n\n\n### （三）获取list集合\n\n"],[1,11025,"\n |\n\n# "],[-1,11025,"第一种方式：\n"],[1,11044,"获"],[-1,11044,"\n"],[1,11426,"p"],[-1,11426,"\n"],[1,11434,"01/cliage05 g) "],[-1,11434,"第"],[1,11439," *val*"],[-1,11439,"：value 值为 List 对象名；\n"],[1,11471,"*"],[-1,11471,"\n"],[1,11753,"p"],[-1,11753,"\n"],[1,11761,"01/clip_ig"],[-1,11761,"第三种方式：最常用\n"],[1,11783,"e"],[-1,11783,"\n"],[1,12213,"i"],[-1,12213,"\n"],[1,12217,"p"],[-1,12219,"\n"],[1,12223,"p"],[-1,12223,"\n"],[1,12400,"g\n)\n\n因（四）为值是从 C"],[-1,12400,"\n\n### （四）其他操作\n\n"],[1,12441,"te"],[-1,12441,"\n\n"],[1,12592,"p"],[-1,12592,"\n"],[1,12596,"p_ e064 )\n\n**2** **"],[1,12598,"*"],[-1,12598," push 方法向值栈放数据，获取方法："],[1,12672,"0iage jpg) "],[1,12673,"****"],[1,12674,"****"],[1,12677,"****s*置"],[-1,12677," push 方法设置值，没有"],[1,12700,"**"],[1,12701,"\n**"],[1,12702,"****"],[1,12703,"****"],[-1,12705,"值栈"],[-1,12708,"数据"],[-1,12713,"向值栈放"],[-1,12725,"，数组名称 top，根据数组获取值"],[1,12805,"\n1/clip_image068.jpg)\n\n |"]],[12805,12805],[7348,7348]]],[1570095116285,["GJX@GJXAIOU",[[1,12801,"、"]],[12801,12801],[12802,12802]]],[1570095116952,["GJX@GJXAIOU",[[-1,12801,"、"]],[12802,12802],[12801,12801]]],[1570095117708,["GJX@GJXAIOU",[[1,12801,"？"]],[12801,12801],[12802,12802]]],[1570095118408,["GJX@GJXAIOU",[[-1,12801,"？"]],[12802,12802],[12801,12801]]],[1570095119047,["GJX@GJXAIOU",[[1,12801,"?"]],[12801,12801],[12802,12802]]],[1570095119810,["GJX@GJXAIOU",[[-1,12801,"?"]],[12802,12802],[12801,12801]]],[1570095121549,["GJX@GJXAIOU",[[1,12801,"?"]],[12801,12801],[12802,12802]]],[1570095122328,["GJX@GJXAIOU",[[-1,12801,"?"]],[12802,12802],[12801,12801]]],[1570095122933,["GJX@GJXAIOU",[[1,12801,"？"]],[12801,12801],[12802,12802]]],[1570095123737,["GJX@GJXAIOU",[[-1,12801,"？"]],[12802,12802],[12801,12801]]],[1570095124998,["GJX@GJXAIOU",[[1,12801,"、"]],[12801,12801],[12802,12802]]],[1570095125632,["GJX@GJXAIOU",[[-1,12801,"、"]],[12802,12802],[12801,12801]]],[1570095126853,["GJX@GJXAIOU",[[1,12801,"/>"]],[12801,12801],[12803,12803]]],[1570095154234,["GJX@GJXAIOU",[[1,12813,"ba"]],[12813,12813],[12815,12815]]],[1570095155101,["GJX@GJXAIOU",[[-1,12813,"ba"]],[12815,12815],[12813,12813]]],[1570095157289,["GJX@GJXAIOU",[[1,12813,"八 "]],[12813,12813],[12814,12814]]],[1570095157525,["GJX@GJXAIOU",[[1,12814,"、"]],[12814,12814],[12815,12815]]],[1570095167612,["GJX@GJXAIOU",[[1,12821,"可以"]],[12821,12821],[12823,12823]]],[1570095169929,["GJX@GJXAIOU",[[-1,12829,"（为什么）"]],[12829,12834],[12829,12829]]],[1570095171912,["GJX@GJXAIOU",[[1,12829,"的原因"]],[12829,12829],[12832,12832]]],[1570095233984,[null,[[-1,7348,"u"],[1,7349,"\n"],[-1,7760,"age"],[1,7763,"```"],[-1,7793,"`"],[1,7794,"\n"],[-1,7883,"`"],[-1,7886," |"],[-1,7889,"\n（三）"],[1,7897,"（三）"],[1,7905,"集合"],[-1,7907,"*  **********变\n\n*  ****生*****方\n\n*"],[1,7940,"第一步  定义list集合变量\n第二步  生成变量的get方法\n第三步"],[-1,7942,"****"],[-1,7951,"********集"],[1,7960,"法里面向list集合设"],[1,7962,"\n\n"],[-1,8757,"|#\n七、\n"],[1,8766,"七、"],[-1,8771,"* ****str*** 和 ***+***组合*"],[1,8796,"数据\n\n使用struts2的标签 和 ognl"],[1,8799,"组合"],[1,8801,"值栈数据"],[-1,8807,"***）"],[-1,8830,"****"],[1,8834,"ognl"],[1,8836,"式”/>"],[-1,8839," |\n\n（一）"],[1,8850,"（一）"],[1,8853,"符串\n\n"],[-1,9517," |\n\n（二）"],[1,9528,"（二）"],[1,9530,"对象\n\n"],[-1,9556,"* **"],[1,9562,"栈放"],[1,9563,"象\n"],[-1,9586,"象"],[1,9587,"\n"],[-1,9997,")"],[1,9998,"\n"],[-1,10005,"* **"],[1,10012,"中获"],[1,10013,"值\n"],[-1,10025,"值"],[1,10026,"\n"],[-1,10031,">\n:property>\n\n    <br"],[-1,10245,")"],[1,10246,"\n"],[-1,10308,"（三）"],[1,10321,"\n```\n\n\n### （三）获取list集合\n\n"],[-1,11025,"\n |\n\n# "],[1,11032,"第一种方式：\n"],[-1,11044,"获"],[1,11045,"\n"],[-1,11426,"p"],[1,11427,"\n"],[-1,11434,"01/cliage05 g) "],[1,11449,"第"],[-1,11453," *val*"],[1,11459,"：value 值为 List 对象名；\n"],[-1,11471,"*"],[1,11472,"\n"],[-1,11753,"p"],[1,11754,"\n"],[-1,11761,"01/clip_ig"],[1,11771,"第三种方式：最常用\n"],[-1,11783,"e"],[1,11784,"\n"],[-1,12213,"i"],[1,12214,"\n"],[-1,12217,"p"],[1,12220,"\n"],[-1,12223,"p"],[1,12224,"\n"],[-1,12400,"g\n)\n\n因（四）为值是从 C"],[1,12415,"\n\n### （四）其他操作\n\n"],[-1,12441,"te"],[1,12443,"\n\n"],[-1,12592,"p"],[1,12593,"\n"],[-1,12596,"p_ e064 )\n\n**2** **"],[-1,12617,"*"],[1,12618," push 方法向值栈放数据，获取方法："],[-1,12672,"0iage jpg) "],[-1,12684,"****"],[-1,12689,"****"],[-1,12696,"****s*置"],[1,12703," push 方法设置值，没有"],[-1,12712,"**"],[-1,12715,"\n**"],[-1,12719,"****"],[-1,12724,"****"],[1,12730,"值栈"],[1,12731,"数据"],[1,12734,"向值栈放"],[1,12742,"，数组名称 top，根据数组获取值"],[-1,12800,"\n"],[1,12801,"\""],[1,12803,"\n"],[-1,12808,"1/cli八、 p_ima可以ge068.的原因\n |\n"],[1,12840,"八、 "],[1,12845,"可以"],[-1,12851,"（为什么）"],[1,12856,"的原因"]],[7348,7348],[12859,12859]]],[1570095233984,[null,[[1,7348,"u"],[-1,7348,"\n"],[1,7760,"age"],[-1,7760,"```"],[1,7793,"`"],[-1,7793,"\n"],[1,7883,"`"],[1,7885," |"],[1,7886,"\n（三）"],[-1,7890,"（三）"],[-1,7901,"集合"],[1,7905,"*  **********变\n\n*  ****生*****方\n\n*"],[-1,7905,"第一步  定义list集合变量\n第二步  生成变量的get方法\n第三步"],[1,7942,"****"],[1,7947,"********集"],[-1,7947,"法里面向list集合设"],[-1,7960,"\n\n"],[1,8757,"|#\n七、\n"],[-1,8760,"七、"],[1,8767,"* ****str*** 和 ***+***组合*"],[-1,8767,"数据\n\n使用struts2的标签 和 ognl"],[-1,8793,"组合"],[-1,8797,"值栈数据"],[1,8807,"***）"],[1,8826,"****"],[-1,8826,"ognl"],[-1,8832,"式”/>"],[1,8839," |\n\n（一）"],[-1,8843,"（一）"],[-1,8849,"符串\n\n"],[1,9517," |\n\n（二）"],[-1,9521,"（二）"],[-1,9526,"对象\n\n"],[1,9556,"* **"],[-1,9558,"栈放"],[-1,9561,"象\n"],[1,9586,"象"],[-1,9586,"\n"],[1,9997,")"],[-1,9997,"\n"],[1,10005,"* **"],[-1,10008,"中获"],[-1,10011,"值\n"],[1,10025,"值"],[-1,10025,"\n"],[1,10031,">\n:property>\n\n    <br"],[1,10224,")"],[-1,10224,"\n"],[1,10287,"（三）"],[-1,10297,"\n```\n\n\n### （三）获取list集合\n\n"],[1,11025,"\n |\n\n# "],[-1,11025,"第一种方式：\n"],[1,11044,"获"],[-1,11044,"\n"],[1,11426,"p"],[-1,11426,"\n"],[1,11434,"01/cliage05 g) "],[-1,11434,"第"],[1,11439," *val*"],[-1,11439,"：value 值为 List 对象名；\n"],[1,11471,"*"],[-1,11471,"\n"],[1,11753,"p"],[-1,11753,"\n"],[1,11761,"01/clip_ig"],[-1,11761,"第三种方式：最常用\n"],[1,11783,"e"],[-1,11783,"\n"],[1,12213,"i"],[-1,12213,"\n"],[1,12217,"p"],[-1,12219,"\n"],[1,12223,"p"],[-1,12223,"\n"],[1,12400,"g\n)\n\n因（四）为值是从 C"],[-1,12400,"\n\n### （四）其他操作\n\n"],[1,12441,"te"],[-1,12441,"\n\n"],[1,12592,"p"],[-1,12592,"\n"],[1,12596,"p_ e064 )\n\n**2** **"],[1,12598,"*"],[-1,12598," push 方法向值栈放数据，获取方法："],[1,12672,"0iage jpg) "],[1,12673,"****"],[1,12674,"****"],[1,12677,"****s*置"],[-1,12677," push 方法设置值，没有"],[1,12700,"**"],[1,12701,"\n**"],[1,12702,"****"],[1,12703,"****"],[-1,12705,"值栈"],[-1,12708,"数据"],[-1,12713,"向值栈放"],[-1,12725,"，数组名称 top，根据数组获取值"],[1,12800,"\n"],[-1,12800,"\""],[-1,12803,"\n"],[1,12809,"1/cli八、 p_ima可以ge068.的原因\n |\n"],[-1,12813,"八、 "],[-1,12821,"可以"],[1,12829,"（为什么）"],[-1,12829,"的原因"]],[12859,12859],[7348,7348]]],[1570095197169,["GJX@GJXAIOU",[[-1,12844,"****"]],[12848,12848],[12844,12844]]],[1570095198348,["GJX@GJXAIOU",[[1,12844," "]],[12844,12844],[12845,12845]]],[1570095200241,["GJX@GJXAIOU",[[-1,12854,"** **"]],[12854,12859],[12854,12854]]],[1570095202682,["GJX@GJXAIOU",[[-1,12854,"ValueStack.jsp**"]],[12870,12870],[12854,12854]]],[1570095204752,["GJX@GJXAIOU",[[-1,12834,"| \n\n**1"]],[12834,12841],[12834,12834]]],[1570095206284,["GJX@GJXAIOU",[[1,12834,"-"]],[12834,12834],[12835,12835]]],[1570095209112,["GJX@GJXAIOU",[[-1,12849,"\n**"]],[12849,12852],[12849,12849]]],[1570095211897,["GJX@GJXAIOU",[[-1,12858,"****"]],[12858,12862],[12858,12858]]],[1570095213960,["GJX@GJXAIOU",[[-1,12861,"** **"]],[12861,12866],[12861,12861]]],[1570095217418,["GJX@GJXAIOU",[[-1,12868,"*"]],[12868,12868],[12867,12867]]],[1570095219304,["GJX@GJXAIOU",[[-1,12867,"* **"]],[12867,12871],[12867,12867]]],[1570095219854,["GJX@GJXAIOU",[[1,12867," "]],[12867,12867],[12868,12868]]],[1570095221978,["GJX@GJXAIOU",[[-1,12873,"****"]],[12873,12877],[12873,12873]]],[1570095222645,["GJX@GJXAIOU",[[1,12873," "]],[12873,12873],[12874,12874]]],[1570095224497,["GJX@GJXAIOU",[[-1,12907,"****"]],[12907,12911],[12907,12907]]],[1570095226849,["GJX@GJXAIOU",[[-1,12918,"***"]],[12917,12920],[12917,12917]]],[1570095227968,["GJX@GJXAIOU",[[-1,12917,"*"]],[12918,12918],[12917,12917]]],[1570095230609,["GJX@GJXAIOU",[[-1,12918,"****"]],[12918,12922],[12918,12918]]],[1570095232608,["GJX@GJXAIOU",[[-1,12921,"****"]],[12921,12925],[12921,12921]]],[1570095233537,["GJX@GJXAIOU",[[-1,12922,"**"]],[12924,12924],[12922,12922]]],[1570095293985,[null,[[-1,7348,"u"],[1,7349,"\n"],[-1,7760,"age"],[1,7763,"```"],[-1,7793,"`"],[1,7794,"\n"],[-1,7883,"`"],[-1,7886," |"],[-1,7889,"\n（三）"],[1,7897,"（三）"],[1,7905,"集合"],[-1,7907,"*  **********变\n\n*  ****生*****方\n\n*"],[1,7940,"第一步  定义list集合变量\n第二步  生成变量的get方法\n第三步"],[-1,7942,"****"],[-1,7951,"********集"],[1,7960,"法里面向list集合设"],[1,7962,"\n\n"],[-1,8757,"|#\n七、\n"],[1,8766,"七、"],[-1,8771,"* ****str*** 和 ***+***组合*"],[1,8796,"数据\n\n使用struts2的标签 和 ognl"],[1,8799,"组合"],[1,8801,"值栈数据"],[-1,8807,"***）"],[-1,8830,"****"],[1,8834,"ognl"],[1,8836,"式”/>"],[-1,8839," |\n\n（一）"],[1,8850,"（一）"],[1,8853,"符串\n\n"],[-1,9517," |\n\n（二）"],[1,9528,"（二）"],[1,9530,"对象\n\n"],[-1,9556,"* **"],[1,9562,"栈放"],[1,9563,"象\n"],[-1,9586,"象"],[1,9587,"\n"],[-1,9997,")"],[1,9998,"\n"],[-1,10005,"* **"],[1,10012,"中获"],[1,10013,"值\n"],[-1,10025,"值"],[1,10026,"\n"],[-1,10031,">\n:property>\n\n    <br"],[-1,10245,")"],[1,10246,"\n"],[-1,10308,"（三）"],[1,10321,"\n```\n\n\n### （三）获取list集合\n\n"],[-1,11025,"\n |\n\n# "],[1,11032,"第一种方式：\n"],[-1,11044,"获"],[1,11045,"\n"],[-1,11426,"p"],[1,11427,"\n"],[-1,11434,"01/cliage05 g) "],[1,11449,"第"],[-1,11453," *val*"],[1,11459,"：value 值为 List 对象名；\n"],[-1,11471,"*"],[1,11472,"\n"],[-1,11753,"p"],[1,11754,"\n"],[-1,11761,"01/clip_ig"],[1,11771,"第三种方式：最常用\n"],[-1,11783,"e"],[1,11784,"\n"],[-1,12213,"i"],[1,12214,"\n"],[-1,12217,"p"],[1,12220,"\n"],[-1,12223,"p"],[1,12224,"\n"],[-1,12400,"g\n)\n\n因（四）为值是从 C"],[1,12415,"\n\n### （四）其他操作\n\n"],[-1,12441,"te"],[1,12443,"\n\n"],[-1,12592,"p"],[1,12593,"\n"],[-1,12596,"p_ e064 )\n\n**2** **"],[-1,12617,"*"],[1,12618," push 方法向值栈放数据，获取方法："],[-1,12672,"0iage jpg) "],[-1,12684,"****"],[-1,12689,"****"],[-1,12696,"****s*置"],[1,12703," push 方法设置值，没有"],[-1,12712,"**\n"],[-1,12716,"**"],[-1,12719,"****"],[-1,12724,"****"],[1,12730,"值栈"],[1,12731,"数据"],[1,12734,"向值栈放"],[1,12742,"，数组名称 top，根据数组获取值"],[-1,12800,"\n"],[1,12801,"\""],[1,12803,"\n"],[-1,12808,"1/cli八、 p_ima可以ge068."],[1,12829,"\n## 八、 EL表达式可以获取值栈数据"],[-1,12833," -L表达 栈数据（为什么）\n对* **Valuek.j\n**首先加 `**** * **"],[1,12878,"\n- EL 表达式获取域对象值\n首先加上标签头：`<%@"],[-1,12884,"**"],[-1,12887,"**"],[-1,12894,"****"],[1,12898," "],[1,12907,"va.s"],[-1,12917,"le**p"],[1,12922,"/jstl/core\" pre"],[-1,12927,"****"],[-1,12932,"****"],[-1,12939,"****"],[-1,12944,"**"]],[7348,7348],[12944,12944]]],[1570095293985,[null,[[1,7348,"u"],[-1,7348,"\n"],[1,7760,"age"],[-1,7760,"```"],[1,7793,"`"],[-1,7793,"\n"],[1,7883,"`"],[1,7885," |"],[1,7886,"\n（三）"],[-1,7890,"（三）"],[-1,7901,"集合"],[1,7905,"*  **********变\n\n*  ****生*****方\n\n*"],[-1,7905,"第一步  定义list集合变量\n第二步  生成变量的get方法\n第三步"],[1,7942,"****"],[1,7947,"********集"],[-1,7947,"法里面向list集合设"],[-1,7960,"\n\n"],[1,8757,"|#\n七、\n"],[-1,8760,"七、"],[1,8767,"* ****str*** 和 ***+***组合*"],[-1,8767,"数据\n\n使用struts2的标签 和 ognl"],[-1,8793,"组合"],[-1,8797,"值栈数据"],[1,8807,"***）"],[1,8826,"****"],[-1,8826,"ognl"],[-1,8832,"式”/>"],[1,8839," |\n\n（一）"],[-1,8843,"（一）"],[-1,8849,"符串\n\n"],[1,9517," |\n\n（二）"],[-1,9521,"（二）"],[-1,9526,"对象\n\n"],[1,9556,"* **"],[-1,9558,"栈放"],[-1,9561,"象\n"],[1,9586,"象"],[-1,9586,"\n"],[1,9997,")"],[-1,9997,"\n"],[1,10005,"* **"],[-1,10008,"中获"],[-1,10011,"值\n"],[1,10025,"值"],[-1,10025,"\n"],[1,10031,">\n:property>\n\n    <br"],[1,10224,")"],[-1,10224,"\n"],[1,10287,"（三）"],[-1,10297,"\n```\n\n\n### （三）获取list集合\n\n"],[1,11025,"\n |\n\n# "],[-1,11025,"第一种方式：\n"],[1,11044,"获"],[-1,11044,"\n"],[1,11426,"p"],[-1,11426,"\n"],[1,11434,"01/cliage05 g) "],[-1,11434,"第"],[1,11439," *val*"],[-1,11439,"：value 值为 List 对象名；\n"],[1,11471,"*"],[-1,11471,"\n"],[1,11753,"p"],[-1,11753,"\n"],[1,11761,"01/clip_ig"],[-1,11761,"第三种方式：最常用\n"],[1,11783,"e"],[-1,11783,"\n"],[1,12213,"i"],[-1,12213,"\n"],[1,12217,"p"],[-1,12219,"\n"],[1,12223,"p"],[-1,12223,"\n"],[1,12400,"g\n)\n\n因（四）为值是从 C"],[-1,12400,"\n\n### （四）其他操作\n\n"],[1,12441,"te"],[-1,12441,"\n\n"],[1,12592,"p"],[-1,12592,"\n"],[1,12596,"p_ e064 )\n\n**2** **"],[1,12598,"*"],[-1,12598," push 方法向值栈放数据，获取方法："],[1,12672,"0iage jpg) "],[1,12673,"****"],[1,12674,"****"],[1,12677,"****s*置"],[-1,12677," push 方法设置值，没有"],[1,12700,"**\n"],[1,12701,"**"],[1,12702,"****"],[1,12703,"****"],[-1,12705,"值栈"],[-1,12708,"数据"],[-1,12713,"向值栈放"],[-1,12725,"，数组名称 top，根据数组获取值"],[1,12800,"\n"],[-1,12800,"\""],[-1,12803,"\n"],[1,12809,"1/cli八、 p_ima可以ge068."],[-1,12809,"\n## 八、 EL表达式可以获取值栈数据"],[1,12833," -L表达 栈数据（为什么）\n对* **Valuek.j\n**首先加 `**** * **"],[-1,12833,"\n- EL 表达式获取域对象值\n首先加上标签头：`<%@"],[1,12867,"**"],[1,12868,"**"],[1,12873,"****"],[-1,12873," "],[-1,12883,"va.s"],[1,12897,"le**p"],[-1,12897,"/jstl/core\" pre"],[1,12917,"****"],[1,12918,"****"],[1,12921,"****"],[1,12922,"**"]],[12944,12944],[7348,7348]]],[1570095235370,["GJX@GJXAIOU",[[-1,12908," "]],[12909,12909],[12908,12908]]],[1570095239778,["GJX@GJXAIOU",[[-1,12873," "]],[12873,12874],[12873,12873]]],[1570095240725,["GJX@GJXAIOU",[[1,12872," "]],[12872,12872],[12873,12873]]],[1570095246678,["GJX@GJXAIOU",[[1,12861," "]],[12861,12861],[12862,12862]]],[1570095252311,["GJX@GJXAIOU",[[-1,12873," "]],[12874,12874],[12873,12873]]],[1570095260297,["GJX@GJXAIOU",[[-1,12922,"\n**"]],[12922,12925],[12922,12922]]],[1570095263482,["GJX@GJXAIOU",[[-1,12934,"**"]],[12934,12936],[12934,12934]]],[1570095272988,["GJX@GJXAIOU",[[1,12935,"··"]],[12935,12935],[12937,12937]]],[1570095273503,["GJX@GJXAIOU",[[-1,12935,"··"]],[12937,12937],[12935,12935]]],[1570095274685,["GJX@GJXAIOU",[[1,12935,"```"]],[12935,12935],[12938,12938]]],[1570095274737,["GJX@GJXAIOU",[[1,12938,"language\n```\n"]],[12938,12938],[12938,12946]]],[1570095276278,["GJX@GJXAIOU",[[-1,12938,"language"],[1,12946,"j"]],[12938,12946],[12939,12939]]],[1570095276570,["GJX@GJXAIOU",[[1,12939,"sp"]],[12939,12939],[12941,12941]]],[1570095277060,["GJX@GJXAIOU",[[1,12942,"\n"]],[12941,12941],[12942,12942]]],[1570095283872,["GJX@GJXAIOU",[[1,12942,"<!-- 使用foreach标签+el表达式获取值栈list集合数据 -->\n\n <c:forEach items=\"${list }\" var=\"user\">\n\n ${user.username }\n\n ${user.password }\n\n ${user.address }\n\n <br/>\n\n </c:forEach>"]],[12942,12942],[13104,13104]]],[1570095287109,["GJX@GJXAIOU",[[-1,12942,"<!-- 使用foreach标签+el表达式获取值栈list集合数据 -->\n\n <c:forEach items=\"${list }\" var=\"user\">\n\n ${user.username }\n\n ${user.password }\n\n ${user.address }\n\n <br/>\n\n </c:forEach>"]],[13104,13104],[12942,12942]]],[1570095289297,["GJX@GJXAIOU",[[1,12942,"<!-- 使用foreach标签+el表达式获取值栈list集合数据 -->\n\t<c:forEach items=\"${list }\" var=\"user\">\n\t\t${user.username }\n\t\t${user.password }\n\t\t${user.address }\n\t\t<br/>\n\t</c:forEach>\n"]],[12942,12942],[13103,13103]]],[1570095291435,["GJX@GJXAIOU",[[-1,13103,"\n"]],[13103,13103],[13102,13102]]],[1570095353986,[null,[[-1,7348,"u"],[1,7349,"\n"],[-1,7760,"age"],[1,7763,"```"],[-1,7793,"`"],[1,7794,"\n"],[-1,7883,"`"],[-1,7886," |"],[-1,7889,"\n（三）"],[1,7897,"（三）"],[1,7905,"集合"],[-1,7907,"*  **********变\n\n*  ****生*****方\n\n*"],[1,7940,"第一步  定义list集合变量\n第二步  生成变量的get方法\n第三步"],[-1,7942,"****"],[-1,7951,"********集"],[1,7960,"法里面向list集合设"],[1,7962,"\n\n"],[-1,8757,"|#\n七、\n"],[1,8766,"七、"],[-1,8771,"* ****str*** 和 ***+***组合*"],[1,8796,"数据\n\n使用struts2的标签 和 ognl"],[1,8799,"组合"],[1,8801,"值栈数据"],[-1,8807,"***）"],[-1,8830,"****"],[1,8834,"ognl"],[1,8836,"式”/>"],[-1,8839," |\n\n（一）"],[1,8850,"（一）"],[1,8853,"符串\n\n"],[-1,9517," |\n\n（二）"],[1,9528,"（二）"],[1,9530,"对象\n\n"],[-1,9556,"* **"],[1,9562,"栈放"],[1,9563,"象\n"],[-1,9586,"象"],[1,9587,"\n"],[-1,9997,")"],[1,9998,"\n"],[-1,10005,"* **"],[1,10012,"中获"],[1,10013,"值\n"],[-1,10025,"值"],[1,10026,"\n"],[-1,10031,">\n:property>\n\n    <br"],[-1,10245,")"],[1,10246,"\n"],[-1,10308,"（三）"],[1,10321,"\n```\n\n\n### （三）获取list集合\n\n"],[-1,11025,"\n |\n\n# "],[1,11032,"第一种方式：\n"],[-1,11044,"获"],[1,11045,"\n"],[-1,11426,"p"],[1,11427,"\n"],[-1,11434,"01/cliage05 g) "],[1,11449,"第"],[-1,11453," *val*"],[1,11459,"：value 值为 List 对象名；\n"],[-1,11471,"*"],[1,11472,"\n"],[-1,11753,"p"],[1,11754,"\n"],[-1,11761,"01/clip_ig"],[1,11771,"第三种方式：最常用\n"],[-1,11783,"e"],[1,11784,"\n"],[-1,12213,"i"],[1,12214,"\n"],[-1,12217,"p"],[1,12220,"\n"],[-1,12223,"p"],[1,12224,"\n"],[-1,12400,"g\n)\n\n因（四）为值是从 C"],[1,12415,"\n\n### （四）其他操作\n\n"],[-1,12441,"te"],[1,12443,"\n\n"],[-1,12592,"p"],[1,12593,"\n"],[-1,12596,"p_ e064 )\n\n**2** **"],[-1,12617,"*"],[1,12618," push 方法向值栈放数据，获取方法："],[-1,12672,"0iage jpg) "],[-1,12684,"****"],[-1,12689,"****"],[-1,12696,"****s*置"],[1,12703," push 方法设置值，没有"],[-1,12712,"**"],[-1,12715,"\n**"],[-1,12719,"****"],[-1,12724,"****"],[1,12730,"值栈"],[1,12731,"数据"],[1,12734,"向值栈放"],[1,12742,"，数组名称 top，根据数组获取值"],[-1,12800,"\n"],[1,12801,"\""],[1,12803,"\n"],[-1,12808,"1/cli八、 p_ima可以ge068."],[1,12829,"\n## 八、 EL表达式可以获取值栈数据"],[-1,12833," -L表达 栈数据（为什么）\n对* **Valuek.j \n**首先加 `***** **"],[1,12878,"\n- EL 表达式获取域对象值\n首先加上标签头：`<%@ "],[-1,12884,"**"],[-1,12887,"**"],[-1,12894,"****"],[1,12907,"va.s"],[1,12908,"n"],[-1,12916,"le**pf\"****c****\"%*"],[1,12935,"/jstl/core\"prefix=\"c\"%>`\n然后使用 foreach\n"],[-1,13106,"\n**`**\n\n**然后使用 foreach**"],[1,13130,""]],[7348,7348],[13130,13130]]],[1570095353986,[null,[[1,7348,"u"],[-1,7348,"\n"],[1,7760,"age"],[-1,7760,"```"],[1,7793,"`"],[-1,7793,"\n"],[1,7883,"`"],[1,7885," |"],[1,7886,"\n（三）"],[-1,7890,"（三）"],[-1,7901,"集合"],[1,7905,"*  **********变\n\n*  ****生*****方\n\n*"],[-1,7905,"第一步  定义list集合变量\n第二步  生成变量的get方法\n第三步"],[1,7942,"****"],[1,7947,"********集"],[-1,7947,"法里面向list集合设"],[-1,7960,"\n\n"],[1,8757,"|#\n七、\n"],[-1,8760,"七、"],[1,8767,"* ****str*** 和 ***+***组合*"],[-1,8767,"数据\n\n使用struts2的标签 和 ognl"],[-1,8793,"组合"],[-1,8797,"值栈数据"],[1,8807,"***）"],[1,8826,"****"],[-1,8826,"ognl"],[-1,8832,"式”/>"],[1,8839," |\n\n（一）"],[-1,8843,"（一）"],[-1,8849,"符串\n\n"],[1,9517," |\n\n（二）"],[-1,9521,"（二）"],[-1,9526,"对象\n\n"],[1,9556,"* **"],[-1,9558,"栈放"],[-1,9561,"象\n"],[1,9586,"象"],[-1,9586,"\n"],[1,9997,")"],[-1,9997,"\n"],[1,10005,"* **"],[-1,10008,"中获"],[-1,10011,"值\n"],[1,10025,"值"],[-1,10025,"\n"],[1,10031,">\n:property>\n\n    <br"],[1,10224,")"],[-1,10224,"\n"],[1,10287,"（三）"],[-1,10297,"\n```\n\n\n### （三）获取list集合\n\n"],[1,11025,"\n |\n\n# "],[-1,11025,"第一种方式：\n"],[1,11044,"获"],[-1,11044,"\n"],[1,11426,"p"],[-1,11426,"\n"],[1,11434,"01/cliage05 g) "],[-1,11434,"第"],[1,11439," *val*"],[-1,11439,"：value 值为 List 对象名；\n"],[1,11471,"*"],[-1,11471,"\n"],[1,11753,"p"],[-1,11753,"\n"],[1,11761,"01/clip_ig"],[-1,11761,"第三种方式：最常用\n"],[1,11783,"e"],[-1,11783,"\n"],[1,12213,"i"],[-1,12213,"\n"],[1,12217,"p"],[-1,12219,"\n"],[1,12223,"p"],[-1,12223,"\n"],[1,12400,"g\n)\n\n因（四）为值是从 C"],[-1,12400,"\n\n### （四）其他操作\n\n"],[1,12441,"te"],[-1,12441,"\n\n"],[1,12592,"p"],[-1,12592,"\n"],[1,12596,"p_ e064 )\n\n**2** **"],[1,12598,"*"],[-1,12598," push 方法向值栈放数据，获取方法："],[1,12672,"0iage jpg) "],[1,12673,"****"],[1,12674,"****"],[1,12677,"****s*置"],[-1,12677," push 方法设置值，没有"],[1,12700,"**"],[1,12701,"\n**"],[1,12702,"****"],[1,12703,"****"],[-1,12705,"值栈"],[-1,12708,"数据"],[-1,12713,"向值栈放"],[-1,12725,"，数组名称 top，根据数组获取值"],[1,12800,"\n"],[-1,12800,"\""],[-1,12803,"\n"],[1,12809,"1/cli八、 p_ima可以ge068."],[-1,12809,"\n## 八、 EL表达式可以获取值栈数据"],[1,12833," -L表达 栈数据（为什么）\n对* **Valuek.j \n**首先加 `***** **"],[-1,12833,"\n- EL 表达式获取域对象值\n首先加上标签头：`<%@ "],[1,12868,"**"],[1,12869,"**"],[1,12874,"****"],[-1,12883,"va.s"],[-1,12888,"n"],[1,12897,"le**pf\"****c****\"%*"],[-1,12897,"/jstl/core\"prefix=\"c\"%>`\n然后使用 foreach\n"],[1,13106,"\n**`**\n\n**然后使用 foreach**"],[-1,13106,""]],[13130,13130],[7348,7348]]],[1570095322715,["GJX@GJXAIOU",[[-1,13109,"**<!--** **使用****foreach****标签****+el****表达式获取值栈****list****集合数据** **-->**\n\n **<c:forEach items=\"${list }\" var=\"user\">**\n\n **${user.username }**\n\n **${user.password }**\n\n **${user.address }**\n\n **<br/>**\n\n **</c:forEach>**\n"]],[13109,13332],[13109,13109]]],[1570095330804,["GJX@GJXAIOU",[[-1,13110,"**2** **"],[-1,13128,"****"],[-1,13144,"****"],[-1,13156,"****"],[-1,13172,"****"],[-1,13178,"**"],[-1,13182,"**"],[-1,13185,"**"],[-1,13188,"**"],[-1,13194,"****"],[-1,13205,"****"],[-1,13217,"****"],[-1,13233,"****"],[-1,13239,"**"],[-1,13243,"**"],[-1,13246,"****"],[-1,13251,"****"],[-1,13259,"****"],[-1,13270,"****"],[-1,13289,"**"],[-1,13293,"**"],[-1,13296,"****"],[-1,13301,"****"],[-1,13309,"****"],[-1,13320,"****"],[-1,13351,"**"],[-1,13355,"**"],[-1,13358,"**"],[-1,13361,"**"],[-1,13369,"****"],[-1,13380,"****"],[-1,13393,"**\n\n![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image070.jpg)\n\n![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image072.jpg)\n\n |"]],[13110,13563],[13289,13289]]],[1570095333446,["GJX@GJXAIOU",[[1,13110,"- "]],[13110,13110],[13112,13112]]],[1570095334505,["GJX@GJXAIOU",[[-1,13108," "]],[13109,13109],[13108,13108]]],[1570095335945,["GJX@GJXAIOU",[[-1,13108,"\n"]],[13108,13108],[13107,13107]]],[1570095337715,["GJX@GJXAIOU",[[-1,13156,"3 "]],[13156,13158],[13156,13156]]],[1570095338573,["GJX@GJXAIOU",[[1,13156,"- "]],[13156,13156],[13158,13158]]],[1570095341100,["GJX@GJXAIOU",[[1,13162," "]],[13162,13162],[13163,13163]]],[1570095345132,["GJX@GJXAIOU",[[1,13170," "]],[13170,13170],[13171,13171]]],[1570095347013,["GJX@GJXAIOU",[[1,13191," "]],[13191,13191],[13192,13192]]],[1570095350059,["GJX@GJXAIOU",[[-1,13225,"\n"]],[13225,13225],[13224,13224]]],[1570095414002,[null,[[-1,7348,"u"],[1,7349,"\n"],[-1,7760,"age"],[1,7763,"```"],[-1,7793,"`"],[1,7794,"\n"],[-1,7883,"`"],[-1,7886," |"],[-1,7889,"\n（三）"],[1,7897,"（三）"],[1,7905,"集合"],[-1,7907,"*  **********变\n\n*  ****生*****方\n\n*"],[1,7940,"第一步  定义list集合变量\n第二步  生成变量的get方法\n第三步"],[-1,7942,"****"],[-1,7951,"********集"],[1,7960,"法里面向list集合设"],[1,7962,"\n\n"],[-1,8757,"|#\n七、\n"],[1,8766,"七、"],[-1,8771,"* ****str*** 和 ***+***组合*"],[1,8796,"数据\n\n使用struts2的标签 和 ognl"],[1,8799,"组合"],[1,8801,"值栈数据"],[-1,8807,"***）"],[-1,8830,"****"],[1,8834,"ognl"],[1,8836,"式”/>"],[-1,8839," |\n\n（一）"],[1,8850,"（一）"],[1,8853,"符串\n\n"],[-1,9517," |\n\n（二）"],[1,9528,"（二）"],[1,9530,"对象\n\n"],[-1,9556,"* **"],[1,9562,"栈放"],[1,9563,"象\n"],[-1,9586,"象"],[1,9587,"\n"],[-1,9997,")"],[1,9998,"\n"],[-1,10005,"* **"],[1,10012,"中获"],[1,10013,"值\n"],[-1,10025,"值"],[1,10026,"\n"],[-1,10031,">\n:property>\n\n    <br"],[-1,10245,")"],[1,10246,"\n"],[-1,10308,"（三）"],[1,10321,"\n```\n\n\n### （三）获取list集合\n\n"],[-1,11025,"\n |\n\n# "],[1,11032,"第一种方式：\n"],[-1,11044,"获"],[1,11045,"\n"],[-1,11426,"p"],[1,11427,"\n"],[-1,11434,"01/cliage05 g) "],[1,11449,"第"],[-1,11453," *val*"],[1,11459,"：value 值为 List 对象名；\n"],[-1,11471,"*"],[1,11472,"\n"],[-1,11753,"p"],[1,11754,"\n"],[-1,11761,"01/clip_ig"],[1,11771,"第三种方式：最常用\n"],[-1,11783,"e"],[1,11784,"\n"],[-1,12213,"i"],[1,12214,"\n"],[-1,12217,"p"],[1,12220,"\n"],[-1,12223,"p"],[1,12224,"\n"],[-1,12400,"g\n)\n\n因（四）为值是从 C"],[1,12415,"\n\n### （四）其他操作\n\n"],[-1,12441,"te"],[1,12443,"\n\n"],[-1,12592,"p"],[1,12593,"\n"],[-1,12596,"p_ e064 )\n\n**2** **"],[-1,12617,"*"],[1,12618," push 方法向值栈放数据，获取方法："],[-1,12672,"0iage jpg) "],[-1,12684,"****"],[-1,12689,"****"],[-1,12696,"****s*置"],[1,12703," push 方法设置值，没有"],[-1,12712,"**\n"],[-1,12716,"**"],[-1,12719,"****"],[-1,12724,"****"],[1,12730,"值栈"],[1,12731,"数据"],[1,12734,"向值栈放"],[1,12742,"，数组名称 top，根据数组获取值"],[-1,12800,"\n"],[1,12801,"\""],[1,12803,"\n"],[-1,12808,"1/cli八、 p_ima可以ge068."],[1,12829,"\n## 八、 EL表达式可以获取值栈数据"],[-1,12833," -L表达 栈数据（为什么）\n对* **Valuek.j \n**首先加 `***** **"],[1,12878,"\n- EL 表达式获取域对象值\n首先加上标签头：`<%@ "],[-1,12884,"**"],[-1,12887,"**"],[-1,12894,"****"],[1,12907,"va.s"],[1,12908,"n"],[-1,12916,"le**pf\"****c****\"%*"],[1,12935,"/jstl/core\"prefix=\"c\"%>`\n然后使用 foreach\n"],[-1,13107,"*"],[1,13108,"\n"],[-1,13110,"</c:forEac\n\n**2** **"],[1,13132,"对象里面"],[-1,13136,"****"],[1,13140,"setA"],[-1,13148,"****取值**- "],[1,13158,"方法，获取值使用getAtt"],[-1,13162," **"],[1,13165,"te"],[-1,13167,"**"],[1,13170,"\n-"],[-1,13171,"** **"],[-1,13179,"*"],[1,13180,"强 "],[-1,13187,"****"],[1,13192,"对象里面"],[-1,13194,"**gtte****"],[1,13204,"法：getAttribute 方法"],[-1,13206,"**"],[-1,13210,"****"],[-1,13218,"****"],[-1,13224,"e*取"],[1,13227,"quest域获取值，如果"],[-1,13231,"**\n\n**"],[1,13237,"直接返回\n"],[-1,13239,"****"],[-1,13247,"****"],[-1,13258,"****"],[1,13265,"不到"],[1,13267,"到值"],[1,13268,"中把"],[1,13269,"获取"],[1,13275,"到域对象"],[-1,13277,"**"],[-1,13281,"* **"],[1,13285,"4 "],[-1,13291,"1/clip_image072.jpg)\n\n |"],[1,13315,"web.xml中过滤器点击进入）"]],[7348,7348],[13331,13331]]],[1570095414002,[null,[[1,7348,"u"],[-1,7348,"\n"],[1,7760,"age"],[-1,7760,"```"],[1,7793,"`"],[-1,7793,"\n"],[1,7883,"`"],[1,7885," |"],[1,7886,"\n（三）"],[-1,7890,"（三）"],[-1,7901,"集合"],[1,7905,"*  **********变\n\n*  ****生*****方\n\n*"],[-1,7905,"第一步  定义list集合变量\n第二步  生成变量的get方法\n第三步"],[1,7942,"****"],[1,7947,"********集"],[-1,7947,"法里面向list集合设"],[-1,7960,"\n\n"],[1,8757,"|#\n七、\n"],[-1,8760,"七、"],[1,8767,"* ****str*** 和 ***+***组合*"],[-1,8767,"数据\n\n使用struts2的标签 和 ognl"],[-1,8793,"组合"],[-1,8797,"值栈数据"],[1,8807,"***）"],[1,8826,"****"],[-1,8826,"ognl"],[-1,8832,"式”/>"],[1,8839," |\n\n（一）"],[-1,8843,"（一）"],[-1,8849,"符串\n\n"],[1,9517," |\n\n（二）"],[-1,9521,"（二）"],[-1,9526,"对象\n\n"],[1,9556,"* **"],[-1,9558,"栈放"],[-1,9561,"象\n"],[1,9586,"象"],[-1,9586,"\n"],[1,9997,")"],[-1,9997,"\n"],[1,10005,"* **"],[-1,10008,"中获"],[-1,10011,"值\n"],[1,10025,"值"],[-1,10025,"\n"],[1,10031,">\n:property>\n\n    <br"],[1,10224,")"],[-1,10224,"\n"],[1,10287,"（三）"],[-1,10297,"\n```\n\n\n### （三）获取list集合\n\n"],[1,11025,"\n |\n\n# "],[-1,11025,"第一种方式：\n"],[1,11044,"获"],[-1,11044,"\n"],[1,11426,"p"],[-1,11426,"\n"],[1,11434,"01/cliage05 g) "],[-1,11434,"第"],[1,11439," *val*"],[-1,11439,"：value 值为 List 对象名；\n"],[1,11471,"*"],[-1,11471,"\n"],[1,11753,"p"],[-1,11753,"\n"],[1,11761,"01/clip_ig"],[-1,11761,"第三种方式：最常用\n"],[1,11783,"e"],[-1,11783,"\n"],[1,12213,"i"],[-1,12213,"\n"],[1,12217,"p"],[-1,12219,"\n"],[1,12223,"p"],[-1,12223,"\n"],[1,12400,"g\n)\n\n因（四）为值是从 C"],[-1,12400,"\n\n### （四）其他操作\n\n"],[1,12441,"te"],[-1,12441,"\n\n"],[1,12592,"p"],[-1,12592,"\n"],[1,12596,"p_ e064 )\n\n**2** **"],[1,12598,"*"],[-1,12598," push 方法向值栈放数据，获取方法："],[1,12672,"0iage jpg) "],[1,12673,"****"],[1,12674,"****"],[1,12677,"****s*置"],[-1,12677," push 方法设置值，没有"],[1,12700,"**\n"],[1,12701,"**"],[1,12702,"****"],[1,12703,"****"],[-1,12705,"值栈"],[-1,12708,"数据"],[-1,12713,"向值栈放"],[-1,12725,"，数组名称 top，根据数组获取值"],[1,12800,"\n"],[-1,12800,"\""],[-1,12803,"\n"],[1,12809,"1/cli八、 p_ima可以ge068."],[-1,12809,"\n## 八、 EL表达式可以获取值栈数据"],[1,12833," -L表达 栈数据（为什么）\n对* **Valuek.j \n**首先加 `***** **"],[-1,12833,"\n- EL 表达式获取域对象值\n首先加上标签头：`<%@ "],[1,12868,"**"],[1,12869,"**"],[1,12874,"****"],[-1,12883,"va.s"],[-1,12888,"n"],[1,12897,"le**pf\"****c****\"%*"],[-1,12897,"/jstl/core\"prefix=\"c\"%>`\n然后使用 foreach\n"],[1,13107,"*"],[-1,13107,"\n"],[1,13110,"</c:forEac\n\n**2** **"],[-1,13112,"对象里面"],[1,13120,"****"],[-1,13120,"setA"],[1,13132,"****取值**- "],[-1,13132,"方法，获取值使用getAtt"],[1,13150," **"],[-1,13150,"te"],[1,13154,"**"],[-1,13155,"\n-"],[1,13158,"** **"],[1,13161,"*"],[-1,13161,"强 "],[1,13170,"****"],[-1,13171,"对象里面"],[1,13177,"**gtte****"],[-1,13177,"法：getAttribute 方法"],[1,13196,"**"],[1,13198,"****"],[1,13202,"****"],[1,13204,"e*取"],[-1,13204,"quest域获取值，如果"],[1,13220,"**\n\n**"],[-1,13220,"直接返回\n"],[1,13227,"****"],[1,13231,"****"],[1,13238,"****"],[-1,13241,"不到"],[-1,13245,"到值"],[-1,13248,"中把"],[-1,13251,"获取"],[-1,13259,"到域对象"],[1,13265,"**"],[1,13267,"* **"],[-1,13267,"4 "],[1,13275,"1/clip_image072.jpg)\n\n |"],[-1,13275,"web.xml中过滤器点击进入）"]],[13331,13331],[7348,7348]]],[1570095360000,["GJX@GJXAIOU",[[-1,13267,"4 查看源代码（web.xml中过滤器点击进入）\n"]],[13267,13292],[13267,13267]]],[1570095365185,["GJX@GJXAIOU",[[1,13271,"jiu"]],[13271,13271],[13274,13274]]],[1570095366336,["GJX@GJXAIOU",[[-1,13271,"jiu"]],[13274,13274],[13271,13271]]],[1570095366854,["GJX@GJXAIOU",[[1,13271,"Jiu"]],[13271,13271],[13274,13274]]],[1570095367554,["GJX@GJXAIOU",[[-1,13271,"Jiu"]],[13274,13274],[13271,13271]]],[1570095368833,["GJX@GJXAIOU",[[1,13271,"就 "]],[13271,13271],[13272,13272]]],[1570095369273,["GJX@GJXAIOU",[[-1,13271,"就"]],[13272,13272],[13271,13271]]],[1570095371048,["GJX@GJXAIOU",[[1,13271,"九、"]],[13271,13271],[13273,13273]]],[1570095372672,["GJX@GJXAIOU",[[-1,13273," "]],[13274,13274],[13273,13273]]],[1570095376904,["GJX@GJXAIOU",[[1,13289,"（）"]],[13289,13289],[13291,13291]]],[1570095378329,["GJX@GJXAIOU",[[1,13290,"一"]],[13290,13290],[13291,13291]]],[1570095395327,["GJX@GJXAIOU",[[-1,13297,"| "]],[13297,13299],[13297,13297]]],[1570095399021,["GJX@GJXAIOU",[[1,13297,"- 可以使用#获取context里面数据"]],[13297,13297],[13317,13317]]],[1570095474002,[null,[[-1,7348,"u"],[1,7349,"\n"],[-1,7760,"age"],[1,7763,"```"],[-1,7793,"`"],[1,7794,"\n"],[-1,7883,"`"],[-1,7886," |"],[-1,7889,"\n（三）"],[1,7897,"（三）"],[1,7905,"集合"],[-1,7907,"*  **********变\n\n*  ****生*****方\n\n*"],[1,7940,"第一步  定义list集合变量\n第二步  生成变量的get方法\n第三步"],[-1,7942,"****"],[-1,7951,"********集"],[1,7960,"法里面向list集合设"],[1,7962,"\n\n"],[-1,8757,"|#\n七、\n"],[1,8766,"七、"],[-1,8771,"* ****str*** 和 ***+***组合*"],[1,8796,"数据\n\n使用struts2的标签 和 ognl"],[1,8799,"组合"],[1,8801,"值栈数据"],[-1,8807,"***）"],[-1,8830,"****"],[1,8834,"ognl"],[1,8836,"式”/>"],[-1,8839," |\n\n（一）"],[1,8850,"（一）"],[1,8853,"符串\n\n"],[-1,9517," |\n\n（二）"],[1,9528,"（二）"],[1,9530,"对象\n\n"],[-1,9556,"* **"],[1,9562,"栈放"],[1,9563,"象\n"],[-1,9586,"象"],[1,9587,"\n"],[-1,9997,")"],[1,9998,"\n"],[-1,10005,"* **"],[1,10012,"中获"],[1,10013,"值\n"],[-1,10025,"值"],[1,10026,"\n"],[-1,10031,">\n:property>\n\n    <br"],[-1,10245,")"],[1,10246,"\n"],[-1,10308,"（三）"],[1,10321,"\n```\n\n\n### （三）获取list集合\n\n"],[-1,11025,"\n |\n\n# "],[1,11032,"第一种方式：\n"],[-1,11044,"获"],[1,11045,"\n"],[-1,11426,"p"],[1,11427,"\n"],[-1,11434,"01/cliage05 g) "],[1,11449,"第"],[-1,11453," *val*"],[1,11459,"：value 值为 List 对象名；\n"],[-1,11471,"*"],[1,11472,"\n"],[-1,11753,"p"],[1,11754,"\n"],[-1,11761,"01/clip_ig"],[1,11771,"第三种方式：最常用\n"],[-1,11783,"e"],[1,11784,"\n"],[-1,12213,"i"],[1,12214,"\n"],[-1,12217,"p"],[1,12220,"\n"],[-1,12223,"p"],[1,12224,"\n"],[-1,12400,"g\n)\n\n因（四）为值是从 C"],[1,12415,"\n\n### （四）其他操作\n\n"],[-1,12441,"te"],[1,12443,"\n\n"],[-1,12592,"p"],[1,12593,"\n"],[-1,12596,"p_ e064 )\n\n**2** **"],[-1,12617,"*"],[1,12618," push 方法向值栈放数据，获取方法："],[-1,12672,"0iage jpg) "],[-1,12684,"****"],[-1,12689,"****"],[-1,12696,"****s*置"],[1,12703," push 方法设置值，没有"],[-1,12712,"**\n"],[-1,12716,"**"],[-1,12719,"****"],[-1,12724,"****"],[1,12730,"值栈"],[1,12731,"数据"],[1,12734,"向值栈放"],[1,12742,"，数组名称 top，根据数组获取值"],[-1,12800,"\n"],[1,12801,"\""],[1,12803,"\n"],[-1,12808,"1/cli八、 p_ima可以ge068."],[1,12829,"\n## 八、 EL表达式可以获取值栈数据"],[-1,12833," -L表达 栈数据（为什么）\n对* **Valuek.j \n**首先加 `***** **"],[1,12878,"\n- EL 表达式获取域对象值\n首先加上标签头：`<%@ "],[-1,12884,"**"],[-1,12887,"**"],[-1,12894,"****"],[1,12907,"va.s"],[1,12908,"n"],[-1,12916,"le**pf\"****c****\"%*"],[1,12935,"/jstl/core\"prefix=\"c\"%>`\n然后使用 foreach\n"],[-1,13107,"*- </c:forEac\n\n**2** **"],[1,13130,"\n- "],[1,13132,"对象里面"],[-1,13136,"****"],[1,13140,"setA"],[-1,13148,"****取值**- "],[1,13158,"方法，获取值使用getAtt"],[-1,13162," **方法**\n ** **底层增*"],[1,13180,"te方法\n\n- 底层增强 "],[-1,13187,"****"],[1,13192,"对象里面"],[-1,13194,"**gtte****"],[1,13204,"法：getAttribute 方法"],[-1,13206,"**"],[-1,13210,"****"],[-1,13218,"****"],[-1,13224,"e*取"],[1,13227,"quest域获取值，如果"],[-1,13231,"**\n\n**"],[1,13237,"直接返回\n"],[-1,13239,"****"],[-1,13247,"****"],[-1,13258,"****"],[1,13265,"不到"],[-1,13267,"/cli九、p_image072.jpg)\n（一）\n |"],[1,13295,"到值栈中把值获取出来，把值放到域对象里面\n\n\n## 九、OGNL的#、%使用\n\n### （一）#使用"],[-1,13317," OGNL的#、%使用\n\n### #使用\n\n| "]],[7348,7348],[13317,13317]]],[1570095474002,[null,[[1,7348,"u"],[-1,7348,"\n"],[1,7760,"age"],[-1,7760,"```"],[1,7793,"`"],[-1,7793,"\n"],[1,7883,"`"],[1,7885," |"],[1,7886,"\n（三）"],[-1,7890,"（三）"],[-1,7901,"集合"],[1,7905,"*  **********变\n\n*  ****生*****方\n\n*"],[-1,7905,"第一步  定义list集合变量\n第二步  生成变量的get方法\n第三步"],[1,7942,"****"],[1,7947,"********集"],[-1,7947,"法里面向list集合设"],[-1,7960,"\n\n"],[1,8757,"|#\n七、\n"],[-1,8760,"七、"],[1,8767,"* ****str*** 和 ***+***组合*"],[-1,8767,"数据\n\n使用struts2的标签 和 ognl"],[-1,8793,"组合"],[-1,8797,"值栈数据"],[1,8807,"***）"],[1,8826,"****"],[-1,8826,"ognl"],[-1,8832,"式”/>"],[1,8839," |\n\n（一）"],[-1,8843,"（一）"],[-1,8849,"符串\n\n"],[1,9517," |\n\n（二）"],[-1,9521,"（二）"],[-1,9526,"对象\n\n"],[1,9556,"* **"],[-1,9558,"栈放"],[-1,9561,"象\n"],[1,9586,"象"],[-1,9586,"\n"],[1,9997,")"],[-1,9997,"\n"],[1,10005,"* **"],[-1,10008,"中获"],[-1,10011,"值\n"],[1,10025,"值"],[-1,10025,"\n"],[1,10031,">\n:property>\n\n    <br"],[1,10224,")"],[-1,10224,"\n"],[1,10287,"（三）"],[-1,10297,"\n```\n\n\n### （三）获取list集合\n\n"],[1,11025,"\n |\n\n# "],[-1,11025,"第一种方式：\n"],[1,11044,"获"],[-1,11044,"\n"],[1,11426,"p"],[-1,11426,"\n"],[1,11434,"01/cliage05 g) "],[-1,11434,"第"],[1,11439," *val*"],[-1,11439,"：value 值为 List 对象名；\n"],[1,11471,"*"],[-1,11471,"\n"],[1,11753,"p"],[-1,11753,"\n"],[1,11761,"01/clip_ig"],[-1,11761,"第三种方式：最常用\n"],[1,11783,"e"],[-1,11783,"\n"],[1,12213,"i"],[-1,12213,"\n"],[1,12217,"p"],[-1,12219,"\n"],[1,12223,"p"],[-1,12223,"\n"],[1,12400,"g\n)\n\n因（四）为值是从 C"],[-1,12400,"\n\n### （四）其他操作\n\n"],[1,12441,"te"],[-1,12441,"\n\n"],[1,12592,"p"],[-1,12592,"\n"],[1,12596,"p_ e064 )\n\n**2** **"],[1,12598,"*"],[-1,12598," push 方法向值栈放数据，获取方法："],[1,12672,"0iage jpg) "],[1,12673,"****"],[1,12674,"****"],[1,12677,"****s*置"],[-1,12677," push 方法设置值，没有"],[1,12700,"**\n"],[1,12701,"**"],[1,12702,"****"],[1,12703,"****"],[-1,12705,"值栈"],[-1,12708,"数据"],[-1,12713,"向值栈放"],[-1,12725,"，数组名称 top，根据数组获取值"],[1,12800,"\n"],[-1,12800,"\""],[-1,12803,"\n"],[1,12809,"1/cli八、 p_ima可以ge068."],[-1,12809,"\n## 八、 EL表达式可以获取值栈数据"],[1,12833," -L表达 栈数据（为什么）\n对* **Valuek.j \n**首先加 `***** **"],[-1,12833,"\n- EL 表达式获取域对象值\n首先加上标签头：`<%@ "],[1,12868,"**"],[1,12869,"**"],[1,12874,"****"],[-1,12883,"va.s"],[-1,12888,"n"],[1,12897,"le**pf\"****c****\"%*"],[-1,12897,"/jstl/core\"prefix=\"c\"%>`\n然后使用 foreach\n"],[1,13107,"*- </c:forEac\n\n**2** **"],[-1,13107,"\n- "],[-1,13112,"对象里面"],[1,13120,"****"],[-1,13120,"setA"],[1,13132,"****取值**- "],[-1,13132,"方法，获取值使用getAtt"],[1,13150," **方法**\n ** **底层增*"],[-1,13150,"te方法\n\n- 底层增强 "],[1,13170,"****"],[-1,13171,"对象里面"],[1,13177,"**gtte****"],[-1,13177,"法：getAttribute 方法"],[1,13196,"**"],[1,13198,"****"],[1,13202,"****"],[1,13204,"e*取"],[-1,13204,"quest域获取值，如果"],[1,13220,"**\n\n**"],[-1,13220,"直接返回\n"],[1,13227,"****"],[1,13231,"****"],[1,13238,"****"],[-1,13241,"不到"],[1,13245,"/cli九、p_image072.jpg)\n（一）\n |"],[-1,13245,"到值栈中把值获取出来，把值放到域对象里面\n\n\n## 九、OGNL的#、%使用\n\n### （一）#使用"],[1,13317," OGNL的#、%使用\n\n### #使用\n\n| "]],[13317,13317],[7348,7348]]],[1570095420428,["GJX@GJXAIOU",[[1,13318,"···"]],[13318,13318],[13321,13321]]],[1570095421354,["GJX@GJXAIOU",[[-1,13318,"···"]],[13321,13321],[13318,13318]]],[1570095422456,["GJX@GJXAIOU",[[1,13318,"```"]],[13318,13318],[13321,13321]]],[1570095422506,["GJX@GJXAIOU",[[1,13321,"language\n```\n"]],[13321,13321],[13321,13329]]],[1570095422923,["GJX@GJXAIOU",[[-1,13321,"language"],[1,13329,"d"]],[13321,13329],[13322,13322]]],[1570095425837,["GJX@GJXAIOU",[[1,13322,"ebug_xml"]],[13322,13322],[13330,13330]]],[1570095426448,["GJX@GJXAIOU",[[-1,13327,"xml"]],[13330,13330],[13327,13327]]],[1570095427185,["GJX@GJXAIOU",[[1,13327,"jsp"]],[13327,13327],[13330,13330]]],[1570095427844,["GJX@GJXAIOU",[[1,13331,"\n"]],[13330,13330],[13331,13331]]],[1570095436829,["GJX@GJXAIOU",[[1,13331,"    <s:iterator value=\"userList\" var=\"user\">\n        <%--遍历值栈 List 集合，得到每一个 user 对象；\n            机制：把每次遍历得到的 user 对象放在 context 里面(因为值是从 context 中取到的)，\n            获取 context 里面数据使用 # 和 ognl 表达式；\n        --%>\n        <s:property value=\"#user.username\"></s:property>\n        <s:property value=\"#user.password\"></s:property>\n        <s:property value=\"#user.address\"></s:property>\n        <br>\n    </s:iterator>"]],[13331,13331],[13739,13739]]],[1570095444176,["GJX@GJXAIOU",[[-1,13376,"        <%--遍历值栈 List 集合，得到每一个 user 对象；\n            机制：把每次遍历得到的 user 对象放在 context 里面(因为值是从 context 中取到的)，\n            获取 context 里面数据使用 # 和 ognl 表达式；\n        --%>"]],[13384,13538],[13376,13376]]],[1570095444576,["GJX@GJXAIOU",[[-1,13376,"\n"]],[13376,13376],[13375,13375]]],[1570095447826,["GJX@GJXAIOU",[[-1,13333,"  "],[-1,13376,"  "],[-1,13433,"  "],[-1,13496,"  "],[-1,13552,"  "],[-1,13559,"  "]],[13331,13576],[13331,13564]]],[1570095448560,["GJX@GJXAIOU",[[-1,13331,"  "],[-1,13374,"  "],[-1,13429,"  "],[-1,13488,"  "],[-1,13542,"  "],[-1,13549,"  "]],[13331,13564],[13331,13552]]],[1570095452107,["GJX@GJXAIOU",[[-1,13530,"    <br>"]],[13530,13538],[13530,13530]]],[1570095452498,["GJX@GJXAIOU",[[-1,13530,"\n"]],[13530,13530],[13529,13529]]],[1570095464660,["GJX@GJXAIOU",[[1,13306," "]],[13306,13306],[13307,13307]]],[1570095465424,["GJX@GJXAIOU",[[1,13314," "]],[13314,13314],[13315,13315]]],[1570095468843,["GJX@GJXAIOU",[[-1,13551,"**1** **使用****#****获取****context****里面数据**\n\n![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image073.jpg)\n\n**2** **演示****#** **操作**\n\n**（****1****）向****request****域放值（见****ContextAction.java****）**\n\n**（****2****）在页面中使用****ognl****获取**\n\n![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image075.jpg)\n\n |\n"]],[13551,13890],[13551,13551]]],[1570095534001,[null,[[-1,7348,"u"],[1,7349,"\n"],[-1,7760,"age"],[1,7763,"```"],[-1,7793,"`"],[1,7794,"\n"],[-1,7883,"`"],[-1,7886," |"],[-1,7889,"\n（三）"],[1,7897,"（三）"],[1,7905,"集合"],[-1,7907,"*  **********变\n\n*  ****生*****方\n\n*"],[1,7940,"第一步  定义list集合变量\n第二步  生成变量的get方法\n第三步"],[-1,7942,"****"],[-1,7951,"********集"],[1,7960,"法里面向list集合设"],[1,7962,"\n\n"],[-1,8757,"|#\n七、\n"],[1,8766,"七、"],[-1,8771,"* ****str*** 和 ***+***组合*"],[1,8796,"数据\n\n使用struts2的标签 和 ognl"],[1,8799,"组合"],[1,8801,"值栈数据"],[-1,8807,"***）"],[-1,8830,"****"],[1,8834,"ognl"],[1,8836,"式”/>"],[-1,8839," |\n\n（一）"],[1,8850,"（一）"],[1,8853,"符串\n\n"],[-1,9517," |\n\n（二）"],[1,9528,"（二）"],[1,9530,"对象\n\n"],[-1,9556,"* **"],[1,9562,"栈放"],[1,9563,"象\n"],[-1,9586,"象"],[1,9587,"\n"],[-1,9997,")"],[1,9998,"\n"],[-1,10005,"* **"],[1,10012,"中获"],[1,10013,"值\n"],[-1,10025,"值"],[1,10026,"\n"],[-1,10031,">\n:property>\n\n    <br"],[-1,10245,")"],[1,10246,"\n"],[-1,10308,"（三）"],[1,10321,"\n```\n\n\n### （三）获取list集合\n\n"],[-1,11025,"\n |\n\n# "],[1,11032,"第一种方式：\n"],[-1,11044,"获"],[1,11045,"\n"],[-1,11426,"p"],[1,11427,"\n"],[-1,11434,"01/cliage05 g) "],[1,11449,"第"],[-1,11453," *val*"],[1,11459,"：value 值为 List 对象名；\n"],[-1,11471,"*"],[1,11472,"\n"],[-1,11753,"p"],[1,11754,"\n"],[-1,11761,"01/clip_ig"],[1,11771,"第三种方式：最常用\n"],[-1,11783,"e"],[1,11784,"\n"],[-1,12213,"i"],[1,12214,"\n"],[-1,12217,"p"],[1,12220,"\n"],[-1,12223,"p"],[1,12224,"\n"],[-1,12400,"g\n)\n\n因（四）为值是从 C"],[1,12415,"\n\n### （四）其他操作\n\n"],[-1,12441,"te"],[1,12443,"\n\n"],[-1,12592,"p"],[1,12593,"\n"],[-1,12596,"p_ e064 )\n\n**2** **"],[-1,12617,"*"],[1,12618," push 方法向值栈放数据，获取方法："],[-1,12672,"0iage jpg) "],[-1,12684,"****"],[-1,12689,"****"],[-1,12696,"****s*置"],[1,12703," push 方法设置值，没有"],[-1,12712,"**"],[-1,12715,"\n**"],[-1,12719,"****"],[-1,12724,"****"],[1,12730,"值栈"],[1,12731,"数据"],[1,12734,"向值栈放"],[1,12742,"，数组名称 top，根据数组获取值"],[-1,12800,"\n"],[1,12801,"\""],[1,12803,"\n"],[-1,12808,"1/cli八、 p_ima可以ge068."],[1,12829,"\n## 八、 EL表达式可以获取值栈数据"],[-1,12833," -L表达 栈数据（为什么）\n对* **Valuek.j \n**首先加 `***** **"],[1,12878,"\n- EL 表达式获取域对象值\n首先加上标签头：`<%@ "],[-1,12884,"**"],[-1,12887,"**"],[-1,12894,"****"],[1,12907,"va.s"],[1,12908,"n"],[-1,12916,"le**pf\"****c****\"%*"],[1,12935,"/jstl/core\"prefix=\"c\"%>`\n然后使用 foreach\n"],[-1,13107,"*- </c:forEac\n\n**2** **"],[1,13130,"\n- "],[1,13132,"对象里面"],[-1,13136,"****"],[1,13140,"setA"],[-1,13148,"****取值**- "],[1,13158,"方法，获取值使用getAtt"],[-1,13162," **方法**\n ** **底层增*"],[1,13180,"te方法\n\n- 底层增强 "],[-1,13187,"****"],[1,13192,"对象里面"],[-1,13194,"**gtte****"],[1,13204,"法：getAttribute 方法"],[-1,13206,"**"],[-1,13210,"****"],[-1,13218,"****"],[-1,13224,"e*取"],[1,13227,"quest域获取值，如果"],[-1,13231,"**\n\n**"],[1,13237,"直接返回\n"],[-1,13239,"****"],[-1,13247,"****"],[-1,13258,"****"],[1,13265,"不到"],[-1,13267,"/cli九、p_image072.jpg)\n（一）\n |"],[1,13295,"到值栈中把值获取出来，把值放到域对象里面\n\n\n## 九、OGNL的#、%使用\n\n### （一）#使用"],[-1,13319," "],[1,13320,"\n"],[-1,13550,"O/clip_image075.jpg)\n\n |"]],[7348,7348],[13550,13550]]],[1570095534001,[null,[[1,7348,"u"],[-1,7348,"\n"],[1,7760,"age"],[-1,7760,"```"],[1,7793,"`"],[-1,7793,"\n"],[1,7883,"`"],[1,7885," |"],[1,7886,"\n（三）"],[-1,7890,"（三）"],[-1,7901,"集合"],[1,7905,"*  **********变\n\n*  ****生*****方\n\n*"],[-1,7905,"第一步  定义list集合变量\n第二步  生成变量的get方法\n第三步"],[1,7942,"****"],[1,7947,"********集"],[-1,7947,"法里面向list集合设"],[-1,7960,"\n\n"],[1,8757,"|#\n七、\n"],[-1,8760,"七、"],[1,8767,"* ****str*** 和 ***+***组合*"],[-1,8767,"数据\n\n使用struts2的标签 和 ognl"],[-1,8793,"组合"],[-1,8797,"值栈数据"],[1,8807,"***）"],[1,8826,"****"],[-1,8826,"ognl"],[-1,8832,"式”/>"],[1,8839," |\n\n（一）"],[-1,8843,"（一）"],[-1,8849,"符串\n\n"],[1,9517," |\n\n（二）"],[-1,9521,"（二）"],[-1,9526,"对象\n\n"],[1,9556,"* **"],[-1,9558,"栈放"],[-1,9561,"象\n"],[1,9586,"象"],[-1,9586,"\n"],[1,9997,")"],[-1,9997,"\n"],[1,10005,"* **"],[-1,10008,"中获"],[-1,10011,"值\n"],[1,10025,"值"],[-1,10025,"\n"],[1,10031,">\n:property>\n\n    <br"],[1,10224,")"],[-1,10224,"\n"],[1,10287,"（三）"],[-1,10297,"\n```\n\n\n### （三）获取list集合\n\n"],[1,11025,"\n |\n\n# "],[-1,11025,"第一种方式：\n"],[1,11044,"获"],[-1,11044,"\n"],[1,11426,"p"],[-1,11426,"\n"],[1,11434,"01/cliage05 g) "],[-1,11434,"第"],[1,11439," *val*"],[-1,11439,"：value 值为 List 对象名；\n"],[1,11471,"*"],[-1,11471,"\n"],[1,11753,"p"],[-1,11753,"\n"],[1,11761,"01/clip_ig"],[-1,11761,"第三种方式：最常用\n"],[1,11783,"e"],[-1,11783,"\n"],[1,12213,"i"],[-1,12213,"\n"],[1,12217,"p"],[-1,12219,"\n"],[1,12223,"p"],[-1,12223,"\n"],[1,12400,"g\n)\n\n因（四）为值是从 C"],[-1,12400,"\n\n### （四）其他操作\n\n"],[1,12441,"te"],[-1,12441,"\n\n"],[1,12592,"p"],[-1,12592,"\n"],[1,12596,"p_ e064 )\n\n**2** **"],[1,12598,"*"],[-1,12598," push 方法向值栈放数据，获取方法："],[1,12672,"0iage jpg) "],[1,12673,"****"],[1,12674,"****"],[1,12677,"****s*置"],[-1,12677," push 方法设置值，没有"],[1,12700,"**"],[1,12701,"\n**"],[1,12702,"****"],[1,12703,"****"],[-1,12705,"值栈"],[-1,12708,"数据"],[-1,12713,"向值栈放"],[-1,12725,"，数组名称 top，根据数组获取值"],[1,12800,"\n"],[-1,12800,"\""],[-1,12803,"\n"],[1,12809,"1/cli八、 p_ima可以ge068."],[-1,12809,"\n## 八、 EL表达式可以获取值栈数据"],[1,12833," -L表达 栈数据（为什么）\n对* **Valuek.j \n**首先加 `***** **"],[-1,12833,"\n- EL 表达式获取域对象值\n首先加上标签头：`<%@ "],[1,12868,"**"],[1,12869,"**"],[1,12874,"****"],[-1,12883,"va.s"],[-1,12888,"n"],[1,12897,"le**pf\"****c****\"%*"],[-1,12897,"/jstl/core\"prefix=\"c\"%>`\n然后使用 foreach\n"],[1,13107,"*- </c:forEac\n\n**2** **"],[-1,13107,"\n- "],[-1,13112,"对象里面"],[1,13120,"****"],[-1,13120,"setA"],[1,13132,"****取值**- "],[-1,13132,"方法，获取值使用getAtt"],[1,13150," **方法**\n ** **底层增*"],[-1,13150,"te方法\n\n- 底层增强 "],[1,13170,"****"],[-1,13171,"对象里面"],[1,13177,"**gtte****"],[-1,13177,"法：getAttribute 方法"],[1,13196,"**"],[1,13198,"****"],[1,13202,"****"],[1,13204,"e*取"],[-1,13204,"quest域获取值，如果"],[1,13220,"**\n\n**"],[-1,13220,"直接返回\n"],[1,13227,"****"],[1,13231,"****"],[1,13238,"****"],[-1,13241,"不到"],[1,13245,"/cli九、p_image072.jpg)\n（一）\n |"],[-1,13245,"到值栈中把值获取出来，把值放到域对象里面\n\n\n## 九、OGNL的#、%使用\n\n### （一）#使用"],[1,13319," "],[-1,13319,"\n"],[1,13550,"O/clip_image075.jpg)\n\n |"]],[13550,13550],[7348,7348]]],[1570095476124,["GJX@GJXAIOU",[[1,13552,"\n"]],[13550,13550],[13551,13551]]],[1570095476577,["GJX@GJXAIOU",[[1,13551,"2 演示# 操作\n\n（1）向request域放值（见ContextAction.java）\n\n（2）在页面中使用ognl获取"]],[13551,13551],[13613,13613]]],[1570095482657,["GJX@GJXAIOU",[[-1,13551,"2 演示# 操作\n"]],[13551,13560],[13551,13551]]],[1570095485482,["GJX@GJXAIOU",[[1,13551,"- dang"]],[13551,13551],[13557,13557]]],[1570095486266,["GJX@GJXAIOU",[[-1,13553,"dang"]],[13557,13557],[13553,13553]]],[1570095491751,["GJX@GJXAIOU",[[1,13553,"当是想"]],[13553,13553],[13556,13556]]],[1570095493138,["GJX@GJXAIOU",[[-1,13555,"想"]],[13556,13556],[13555,13555]]],[1570095499285,["GJX@GJXAIOU",[[1,13555,"向 request 与"]],[13555,13555],[13566,13566]]],[1570095499897,["GJX@GJXAIOU",[[-1,13565,"与"]],[13566,13566],[13565,13565]]],[1570095506198,["GJX@GJXAIOU",[[1,13565,"域中放置"]],[13565,13565],[13569,13569]]],[1570095506795,["GJX@GJXAIOU",[[-1,13568,"置"]],[13569,13569],[13568,13568]]],[1570095512300,["GJX@GJXAIOU",[[1,13568,"值和取值的时候："]],[13568,13568],[13576,13576]]],[1570095594004,[null,[[-1,7348,"u"],[1,7349,"\n"],[-1,7760,"age"],[1,7763,"```"],[-1,7793,"`"],[1,7794,"\n"],[-1,7883,"`"],[-1,7886," |"],[-1,7889,"\n（三）"],[1,7897,"（三）"],[1,7905,"集合"],[-1,7907,"*  **********变\n\n*  ****生*****方\n\n*"],[1,7940,"第一步  定义list集合变量\n第二步  生成变量的get方法\n第三步"],[-1,7942,"****"],[-1,7951,"********集"],[1,7960,"法里面向list集合设"],[1,7962,"\n\n"],[-1,8757,"|#\n七、\n"],[1,8766,"七、"],[-1,8771,"* ****str*** 和 ***+***组合*"],[1,8796,"数据\n\n使用struts2的标签 和 ognl"],[1,8799,"组合"],[1,8801,"值栈数据"],[-1,8807,"***）"],[-1,8830,"****"],[1,8834,"ognl"],[1,8836,"式”/>"],[-1,8839," |\n\n（一）"],[1,8850,"（一）"],[1,8853,"符串\n\n"],[-1,9517," |\n\n（二）"],[1,9528,"（二）"],[1,9530,"对象\n\n"],[-1,9556,"* **"],[1,9562,"栈放"],[1,9563,"象\n"],[-1,9586,"象"],[1,9587,"\n"],[-1,9997,")"],[1,9998,"\n"],[-1,10005,"* **"],[1,10012,"中获"],[1,10013,"值\n"],[-1,10025,"值"],[1,10026,"\n"],[-1,10031,">\n:property>\n\n    <br"],[-1,10245,")"],[1,10246,"\n"],[-1,10308,"（三）"],[1,10321,"\n```\n\n\n### （三）获取list集合\n\n"],[-1,11025,"\n |\n\n# "],[1,11032,"第一种方式：\n"],[-1,11044,"获"],[1,11045,"\n"],[-1,11426,"p"],[1,11427,"\n"],[-1,11434,"01/cliage05 g) "],[1,11449,"第"],[-1,11453," *val*"],[1,11459,"：value 值为 List 对象名；\n"],[-1,11471,"*"],[1,11472,"\n"],[-1,11753,"p"],[1,11754,"\n"],[-1,11761,"01/clip_ig"],[1,11771,"第三种方式：最常用\n"],[-1,11783,"e"],[1,11784,"\n"],[-1,12213,"i"],[1,12214,"\n"],[-1,12217,"p"],[1,12220,"\n"],[-1,12223,"p"],[1,12224,"\n"],[-1,12400,"g\n)\n\n因（四）为值是从 C"],[1,12415,"\n\n### （四）其他操作\n\n"],[-1,12441,"te"],[1,12443,"\n\n"],[-1,12592,"p"],[1,12593,"\n"],[-1,12596,"p_ e064 )\n\n**2** **"],[-1,12617,"*"],[1,12618," push 方法向值栈放数据，获取方法："],[-1,12672,"0iage jpg) "],[-1,12684,"****"],[-1,12689,"****"],[-1,12696,"****s*置"],[1,12703," push 方法设置值，没有"],[-1,12712,"**"],[-1,12715,"\n**"],[-1,12719,"****"],[-1,12724,"****"],[1,12730,"值栈"],[1,12731,"数据"],[1,12734,"向值栈放"],[1,12742,"，数组名称 top，根据数组获取值"],[-1,12800,"\n"],[1,12801,"\""],[1,12803,"\n"],[-1,12808,"1/cli八、 p_ima可以ge068."],[1,12829,"\n## 八、 EL表达式可以获取值栈数据"],[-1,12833," -L表达 栈数据（为什么）\n对* **Valuek.j \n**首先加 `***** **"],[1,12878,"\n- EL 表达式获取域对象值\n首先加上标签头：`<%@ "],[-1,12884,"**"],[-1,12887,"**"],[-1,12894,"****"],[1,12907,"va.s"],[1,12908,"n"],[-1,12916,"le**pf\"****c****\"%*"],[1,12935,"/jstl/core\"prefix=\"c\"%>`\n然后使用 foreach\n"],[-1,13107,"*- </c:forEac\n\n**2** **"],[1,13130,"\n- "],[1,13132,"对象里面"],[-1,13136,"****"],[1,13140,"setA"],[-1,13148,"****取值**- "],[1,13158,"方法，获取值使用getAtt"],[-1,13162," **方法**\n ** **底层增*"],[1,13180,"te方法\n\n- 底层增强 "],[-1,13187,"****"],[1,13192,"对象里面"],[-1,13194,"**gtte****"],[1,13204,"法：getAttribute 方法"],[-1,13206,"**"],[-1,13210,"****"],[-1,13218,"****"],[-1,13224,"e*取"],[1,13227,"quest域获取值，如果"],[-1,13231,"**\n\n**"],[1,13237,"直接返回\n"],[-1,13239,"****"],[-1,13247,"****"],[-1,13258,"****"],[1,13265,"不到"],[-1,13267,"/cli九、p_image072.jpg)\n（一）\n |"],[1,13295,"到值栈中把值获取出来，把值放到域对象里面\n\n\n## 九、OGNL的#、%使用\n\n### （一）#使用"],[-1,13319," "],[1,13320,"\n"],[-1,13550,"O"],[1,13551,"\n"],[-1,13629,"/\nclip_image075.jpg)\n\n |"],[1,13653,""]],[7348,7348],[13653,13653]]],[1570095594004,[null,[[1,7348,"u"],[-1,7348,"\n"],[1,7760,"age"],[-1,7760,"```"],[1,7793,"`"],[-1,7793,"\n"],[1,7883,"`"],[1,7885," |"],[1,7886,"\n（三）"],[-1,7890,"（三）"],[-1,7901,"集合"],[1,7905,"*  **********变\n\n*  ****生*****方\n\n*"],[-1,7905,"第一步  定义list集合变量\n第二步  生成变量的get方法\n第三步"],[1,7942,"****"],[1,7947,"********集"],[-1,7947,"法里面向list集合设"],[-1,7960,"\n\n"],[1,8757,"|#\n七、\n"],[-1,8760,"七、"],[1,8767,"* ****str*** 和 ***+***组合*"],[-1,8767,"数据\n\n使用struts2的标签 和 ognl"],[-1,8793,"组合"],[-1,8797,"值栈数据"],[1,8807,"***）"],[1,8826,"****"],[-1,8826,"ognl"],[-1,8832,"式”/>"],[1,8839," |\n\n（一）"],[-1,8843,"（一）"],[-1,8849,"符串\n\n"],[1,9517," |\n\n（二）"],[-1,9521,"（二）"],[-1,9526,"对象\n\n"],[1,9556,"* **"],[-1,9558,"栈放"],[-1,9561,"象\n"],[1,9586,"象"],[-1,9586,"\n"],[1,9997,")"],[-1,9997,"\n"],[1,10005,"* **"],[-1,10008,"中获"],[-1,10011,"值\n"],[1,10025,"值"],[-1,10025,"\n"],[1,10031,">\n:property>\n\n    <br"],[1,10224,")"],[-1,10224,"\n"],[1,10287,"（三）"],[-1,10297,"\n```\n\n\n### （三）获取list集合\n\n"],[1,11025,"\n |\n\n# "],[-1,11025,"第一种方式：\n"],[1,11044,"获"],[-1,11044,"\n"],[1,11426,"p"],[-1,11426,"\n"],[1,11434,"01/cliage05 g) "],[-1,11434,"第"],[1,11439," *val*"],[-1,11439,"：value 值为 List 对象名；\n"],[1,11471,"*"],[-1,11471,"\n"],[1,11753,"p"],[-1,11753,"\n"],[1,11761,"01/clip_ig"],[-1,11761,"第三种方式：最常用\n"],[1,11783,"e"],[-1,11783,"\n"],[1,12213,"i"],[-1,12213,"\n"],[1,12217,"p"],[-1,12219,"\n"],[1,12223,"p"],[-1,12223,"\n"],[1,12400,"g\n)\n\n因（四）为值是从 C"],[-1,12400,"\n\n### （四）其他操作\n\n"],[1,12441,"te"],[-1,12441,"\n\n"],[1,12592,"p"],[-1,12592,"\n"],[1,12596,"p_ e064 )\n\n**2** **"],[1,12598,"*"],[-1,12598," push 方法向值栈放数据，获取方法："],[1,12672,"0iage jpg) "],[1,12673,"****"],[1,12674,"****"],[1,12677,"****s*置"],[-1,12677," push 方法设置值，没有"],[1,12700,"**"],[1,12701,"\n**"],[1,12702,"****"],[1,12703,"****"],[-1,12705,"值栈"],[-1,12708,"数据"],[-1,12713,"向值栈放"],[-1,12725,"，数组名称 top，根据数组获取值"],[1,12800,"\n"],[-1,12800,"\""],[-1,12803,"\n"],[1,12809,"1/cli八、 p_ima可以ge068."],[-1,12809,"\n## 八、 EL表达式可以获取值栈数据"],[1,12833," -L表达 栈数据（为什么）\n对* **Valuek.j \n**首先加 `***** **"],[-1,12833,"\n- EL 表达式获取域对象值\n首先加上标签头：`<%@ "],[1,12868,"**"],[1,12869,"**"],[1,12874,"****"],[-1,12883,"va.s"],[-1,12888,"n"],[1,12897,"le**pf\"****c****\"%*"],[-1,12897,"/jstl/core\"prefix=\"c\"%>`\n然后使用 foreach\n"],[1,13107,"*- </c:forEac\n\n**2** **"],[-1,13107,"\n- "],[-1,13112,"对象里面"],[1,13120,"****"],[-1,13120,"setA"],[1,13132,"****取值**- "],[-1,13132,"方法，获取值使用getAtt"],[1,13150," **方法**\n ** **底层增*"],[-1,13150,"te方法\n\n- 底层增强 "],[1,13170,"****"],[-1,13171,"对象里面"],[1,13177,"**gtte****"],[-1,13177,"法：getAttribute 方法"],[1,13196,"**"],[1,13198,"****"],[1,13202,"****"],[1,13204,"e*取"],[-1,13204,"quest域获取值，如果"],[1,13220,"**\n\n**"],[-1,13220,"直接返回\n"],[1,13227,"****"],[1,13231,"****"],[1,13238,"****"],[-1,13241,"不到"],[1,13245,"/cli九、p_image072.jpg)\n（一）\n |"],[-1,13245,"到值栈中把值获取出来，把值放到域对象里面\n\n\n## 九、OGNL的#、%使用\n\n### （一）#使用"],[1,13319," "],[-1,13319,"\n"],[1,13550,"O"],[-1,13550,"\n"],[1,13629,"/\nclip_image075.jpg)\n\n |"],[-1,13629,""]],[13653,13653],[7348,7348]]],[1570095538085,["GJX@GJXAIOU",[[1,13613,"·"]],[13613,13613],[13614,13614]]],[1570095539128,["GJX@GJXAIOU",[[-1,13613,"·"]],[13614,13614],[13613,13613]]],[1570095539925,["GJX@GJXAIOU",[[1,13613,"```"]],[13613,13613],[13616,13616]]],[1570095539975,["GJX@GJXAIOU",[[1,13616,"language\n```\n"]],[13616,13616],[13616,13624]]],[1570095541213,["GJX@GJXAIOU",[[-1,13616,"language"],[1,13624,"j"]],[13616,13624],[13617,13617]]],[1570095542339,["GJX@GJXAIOU",[[-1,13616,"j"]],[13617,13617],[13616,13616]]],[1570095543360,["GJX@GJXAIOU",[[1,13616,"con"]],[13616,13616],[13619,13619]]],[1570095544561,["GJX@GJXAIOU",[[-1,13616,"con"]],[13619,13619],[13616,13616]]],[1570095546086,["GJX@GJXAIOU",[[1,13616,"COnte"]],[13616,13616],[13621,13621]]],[1570095547184,["GJX@GJXAIOU",[[-1,13617,"Onte"]],[13621,13621],[13617,13617]]],[1570095553279,["GJX@GJXAIOU",[[1,13617,"ontextAction_java"]],[13617,13617],[13634,13634]]],[1570095553555,["GJX@GJXAIOU",[[1,13635,"\n"]],[13634,13634],[13635,13635]]],[1570095556876,["GJX@GJXAIOU",[[1,13635,"public class ContextAction extends ActionSupport {\n\n\tpublic String execute() throws Exception {\n\t\t\n\t\tHttpServletRequest request = ServletActionContext.getRequest();\n\t\trequest.setAttribute(\"req\", \"reqValue\");\n\t\treturn \"success\";\n\t}\n}\n"]],[13635,13635],[13868,13868]]],[1570095559171,["GJX@GJXAIOU",[[-1,13732,"\t"]],[13732,13732],[13731,13731]]],[1570095559875,["GJX@GJXAIOU",[[-1,13730,"\n"]],[13731,13731],[13730,13730]]],[1570095563859,["GJX@GJXAIOU",[[1,13686,"    @W"]],[13686,13686],[13692,13692]]],[1570095564873,["GJX@GJXAIOU",[[-1,13691,"W"]],[13692,13692],[13691,13691]]],[1570095567207,["GJX@GJXAIOU",[[1,13691,"override"]],[13691,13691],[13699,13699]]],[1570095569826,["GJX@GJXAIOU",[[-1,13879,"\n"]],[13879,13879],[13878,13878]]],[1570095578672,["GJX@GJXAIOU",[[-1,13884,"（2）"]],[13884,13887],[13884,13884]]],[1570095580408,["GJX@GJXAIOU",[[1,13884,"- "]],[13884,13884],[13886,13886]]],[1570095581329,["GJX@GJXAIOU",[[1,13884,"  "]],[13886,13886],[13888,13888]]],[1570095583521,["GJX@GJXAIOU",[[-1,13577,"（1）"]],[13577,13580],[13577,13577]]],[1570095583973,["GJX@GJXAIOU",[[1,13577,"- "]],[13577,13577],[13579,13579]]],[1570095584410,["GJX@GJXAIOU",[[1,13577,"  "]],[13579,13579],[13581,13581]]],[1570095587997,["GJX@GJXAIOU",[[1,13902,"```"]],[13902,13902],[13905,13905]]],[1570095588047,["GJX@GJXAIOU",[[1,13905,"language\n```\n"]],[13905,13905],[13905,13913]]],[1570095590149,["GJX@GJXAIOU",[[-1,13905,"language"],[1,13913,"j"]],[13905,13913],[13906,13906]]],[1570095590427,["GJX@GJXAIOU",[[1,13906,"sp"]],[13906,13906],[13908,13908]]],[1570095591141,["GJX@GJXAIOU",[[1,13909,"\n"]],[13908,13908],[13909,13909]]],[1570095654048,[null,[[-1,7348,"u"],[1,7349,"\n"],[-1,7760,"age"],[1,7763,"```"],[-1,7793,"`"],[1,7794,"\n"],[-1,7883,"`"],[-1,7886," |"],[-1,7889,"\n（三）"],[1,7897,"（三）"],[1,7905,"集合"],[-1,7907,"*  **********变\n\n*  ****生*****方\n\n*"],[1,7940,"第一步  定义list集合变量\n第二步  生成变量的get方法\n第三步"],[-1,7942,"****"],[-1,7951,"********集"],[1,7960,"法里面向list集合设"],[1,7962,"\n\n"],[-1,8757,"|#\n七、\n"],[1,8766,"七、"],[-1,8771,"* ****str*** 和 ***+***组合*"],[1,8796,"数据\n\n使用struts2的标签 和 ognl"],[1,8799,"组合"],[1,8801,"值栈数据"],[-1,8807,"***）"],[-1,8830,"****"],[1,8834,"ognl"],[1,8836,"式”/>"],[-1,8839," |\n\n（一）"],[1,8850,"（一）"],[1,8853,"符串\n\n"],[-1,9517," |\n\n（二）"],[1,9528,"（二）"],[1,9530,"对象\n\n"],[-1,9556,"* **"],[1,9562,"栈放"],[1,9563,"象\n"],[-1,9586,"象"],[1,9587,"\n"],[-1,9997,")"],[1,9998,"\n"],[-1,10005,"* **"],[1,10012,"中获"],[1,10013,"值\n"],[-1,10025,"值"],[1,10026,"\n"],[-1,10031,">\n:property>\n\n    <br"],[-1,10245,")"],[1,10246,"\n"],[-1,10308,"（三）"],[1,10321,"\n```\n\n\n### （三）获取list集合\n\n"],[-1,11025,"\n |\n\n# "],[1,11032,"第一种方式：\n"],[-1,11044,"获"],[1,11045,"\n"],[-1,11426,"p"],[1,11427,"\n"],[-1,11434,"01/cliage05 g) "],[1,11449,"第"],[-1,11453," *val*"],[1,11459,"：value 值为 List 对象名；\n"],[-1,11471,"*"],[1,11472,"\n"],[-1,11753,"p"],[1,11754,"\n"],[-1,11761,"01/clip_ig"],[1,11771,"第三种方式：最常用\n"],[-1,11783,"e"],[1,11784,"\n"],[-1,12213,"i"],[1,12214,"\n"],[-1,12217,"p"],[1,12220,"\n"],[-1,12223,"p"],[1,12224,"\n"],[-1,12400,"g\n)\n\n因（四）为值是从 C"],[1,12415,"\n\n### （四）其他操作\n\n"],[-1,12441,"te"],[1,12443,"\n\n"],[-1,12592,"p"],[1,12593,"\n"],[-1,12596,"p_ e064 )\n\n**2** **"],[-1,12617,"*"],[1,12618," push 方法向值栈放数据，获取方法："],[-1,12672,"0iage jpg) "],[-1,12684,"****"],[-1,12689,"****"],[-1,12696,"****s*置"],[1,12703," push 方法设置值，没有"],[-1,12712,"**"],[-1,12715,"\n**"],[-1,12719,"****"],[-1,12724,"****"],[1,12730,"值栈"],[1,12731,"数据"],[1,12734,"向值栈放"],[1,12742,"，数组名称 top，根据数组获取值"],[-1,12800,"\n"],[1,12801,"\""],[1,12803,"\n"],[-1,12808,"1/cli八、 p_ima可以ge068."],[1,12829,"\n## 八、 EL表达式可以获取值栈数据"],[-1,12833," -L表达 栈数据（为什么）\n对* **Valuek.j \n**首先加 `***** **"],[1,12878,"\n- EL 表达式获取域对象值\n首先加上标签头：`<%@ "],[-1,12884,"**"],[-1,12887,"**"],[-1,12894,"****"],[1,12907,"va.s"],[1,12908,"n"],[-1,12916,"le**pf\"****c****\"%*"],[1,12935,"/jstl/core\"prefix=\"c\"%>`\n然后使用 foreach\n"],[-1,13107,"*- </c:forEac\n\n**2** **"],[1,13130,"\n- "],[1,13132,"对象里面"],[-1,13136,"****"],[1,13140,"setA"],[-1,13148,"****取值**- "],[1,13158,"方法，获取值使用getAtt"],[-1,13162," **方法**\n ** **底层增*"],[1,13180,"te方法\n\n- 底层增强 "],[-1,13187,"****"],[1,13192,"对象里面"],[-1,13194,"**gtte****"],[1,13204,"法：getAttribute 方法"],[-1,13206,"**"],[-1,13210,"****"],[-1,13218,"****"],[-1,13224,"e*取"],[1,13227,"quest域获取值，如果"],[-1,13231,"**\n\n**"],[1,13237,"直接返回\n"],[-1,13239,"****"],[-1,13247,"****"],[-1,13258,"****"],[1,13265,"不到"],[-1,13267,"/cli九、p_image072.jpg)\n（一）\n |"],[1,13295,"到值栈中把值获取出来，把值放到域对象里面\n\n\n## 九、OGNL的#、%使用\n\n### （一）#使用"],[-1,13319," "],[1,13320,"\n"],[-1,13550,"O"],[1,13551,"\n"],[-1,13901,"/"],[1,13902,"\n"],[-1,13913,"\n\nclip_image075.jpg)\n\n |"]],[7348,7348],[13913,13913]]],[1570095654048,[null,[[1,7348,"u"],[-1,7348,"\n"],[1,7760,"age"],[-1,7760,"```"],[1,7793,"`"],[-1,7793,"\n"],[1,7883,"`"],[1,7885," |"],[1,7886,"\n（三）"],[-1,7890,"（三）"],[-1,7901,"集合"],[1,7905,"*  **********变\n\n*  ****生*****方\n\n*"],[-1,7905,"第一步  定义list集合变量\n第二步  生成变量的get方法\n第三步"],[1,7942,"****"],[1,7947,"********集"],[-1,7947,"法里面向list集合设"],[-1,7960,"\n\n"],[1,8757,"|#\n七、\n"],[-1,8760,"七、"],[1,8767,"* ****str*** 和 ***+***组合*"],[-1,8767,"数据\n\n使用struts2的标签 和 ognl"],[-1,8793,"组合"],[-1,8797,"值栈数据"],[1,8807,"***）"],[1,8826,"****"],[-1,8826,"ognl"],[-1,8832,"式”/>"],[1,8839," |\n\n（一）"],[-1,8843,"（一）"],[-1,8849,"符串\n\n"],[1,9517," |\n\n（二）"],[-1,9521,"（二）"],[-1,9526,"对象\n\n"],[1,9556,"* **"],[-1,9558,"栈放"],[-1,9561,"象\n"],[1,9586,"象"],[-1,9586,"\n"],[1,9997,")"],[-1,9997,"\n"],[1,10005,"* **"],[-1,10008,"中获"],[-1,10011,"值\n"],[1,10025,"值"],[-1,10025,"\n"],[1,10031,">\n:property>\n\n    <br"],[1,10224,")"],[-1,10224,"\n"],[1,10287,"（三）"],[-1,10297,"\n```\n\n\n### （三）获取list集合\n\n"],[1,11025,"\n |\n\n# "],[-1,11025,"第一种方式：\n"],[1,11044,"获"],[-1,11044,"\n"],[1,11426,"p"],[-1,11426,"\n"],[1,11434,"01/cliage05 g) "],[-1,11434,"第"],[1,11439," *val*"],[-1,11439,"：value 值为 List 对象名；\n"],[1,11471,"*"],[-1,11471,"\n"],[1,11753,"p"],[-1,11753,"\n"],[1,11761,"01/clip_ig"],[-1,11761,"第三种方式：最常用\n"],[1,11783,"e"],[-1,11783,"\n"],[1,12213,"i"],[-1,12213,"\n"],[1,12217,"p"],[-1,12219,"\n"],[1,12223,"p"],[-1,12223,"\n"],[1,12400,"g\n)\n\n因（四）为值是从 C"],[-1,12400,"\n\n### （四）其他操作\n\n"],[1,12441,"te"],[-1,12441,"\n\n"],[1,12592,"p"],[-1,12592,"\n"],[1,12596,"p_ e064 )\n\n**2** **"],[1,12598,"*"],[-1,12598," push 方法向值栈放数据，获取方法："],[1,12672,"0iage jpg) "],[1,12673,"****"],[1,12674,"****"],[1,12677,"****s*置"],[-1,12677," push 方法设置值，没有"],[1,12700,"**"],[1,12701,"\n**"],[1,12702,"****"],[1,12703,"****"],[-1,12705,"值栈"],[-1,12708,"数据"],[-1,12713,"向值栈放"],[-1,12725,"，数组名称 top，根据数组获取值"],[1,12800,"\n"],[-1,12800,"\""],[-1,12803,"\n"],[1,12809,"1/cli八、 p_ima可以ge068."],[-1,12809,"\n## 八、 EL表达式可以获取值栈数据"],[1,12833," -L表达 栈数据（为什么）\n对* **Valuek.j \n**首先加 `***** **"],[-1,12833,"\n- EL 表达式获取域对象值\n首先加上标签头：`<%@ "],[1,12868,"**"],[1,12869,"**"],[1,12874,"****"],[-1,12883,"va.s"],[-1,12888,"n"],[1,12897,"le**pf\"****c****\"%*"],[-1,12897,"/jstl/core\"prefix=\"c\"%>`\n然后使用 foreach\n"],[1,13107,"*- </c:forEac\n\n**2** **"],[-1,13107,"\n- "],[-1,13112,"对象里面"],[1,13120,"****"],[-1,13120,"setA"],[1,13132,"****取值**- "],[-1,13132,"方法，获取值使用getAtt"],[1,13150," **方法**\n ** **底层增*"],[-1,13150,"te方法\n\n- 底层增强 "],[1,13170,"****"],[-1,13171,"对象里面"],[1,13177,"**gtte****"],[-1,13177,"法：getAttribute 方法"],[1,13196,"**"],[1,13198,"****"],[1,13202,"****"],[1,13204,"e*取"],[-1,13204,"quest域获取值，如果"],[1,13220,"**\n\n**"],[-1,13220,"直接返回\n"],[1,13227,"****"],[1,13231,"****"],[1,13238,"****"],[-1,13241,"不到"],[1,13245,"/cli九、p_image072.jpg)\n（一）\n |"],[-1,13245,"到值栈中把值获取出来，把值放到域对象里面\n\n\n## 九、OGNL的#、%使用\n\n### （一）#使用"],[1,13319," "],[-1,13319,"\n"],[1,13550,"O"],[-1,13550,"\n"],[1,13901,"/"],[-1,13901,"\n"],[1,13913,"\n\nclip_image075.jpg)\n\n |"]],[13913,13913],[7348,7348]]],[1570095630712,["GJX@GJXAIOU",[[1,13909,"<~---"]],[13909,13909],[13914,13914]]],[1570095631611,["GJX@GJXAIOU",[[-1,13909,"<~---"]],[13914,13914],[13909,13909]]],[1570095631896,["GJX@GJXAIOU",[[-1,13909,"\n"]],[13909,13909],[13908,13908]]],[1570095632805,["GJX@GJXAIOU",[[1,13908,"<"]],[13908,13908],[13909,13909]]],[1570095633600,["GJX@GJXAIOU",[[-1,13908,"<"]],[13909,13909],[13908,13908]]],[1570095634154,["GJX@GJXAIOU",[[1,13909,"\n"]],[13908,13908],[13909,13909]]],[1570095638175,["GJX@GJXAIOU",[[1,13909,"<!---->"]],[13909,13909],[13916,13916]]],[1570095653870,["GJX@GJXAIOU",[[1,13913,"获取 context 里面的数据，在写"]],[13913,13913],[13932,13932]]],[1570095714038,[null,[[-1,7348,"u"],[1,7349,"\n"],[-1,7760,"age"],[1,7763,"```"],[-1,7793,"`"],[1,7794,"\n"],[-1,7883,"`"],[-1,7886," |"],[-1,7889,"\n（三）"],[1,7897,"（三）"],[1,7905,"集合"],[-1,7907,"*  **********变\n\n*  ****生*****方\n\n*"],[1,7940,"第一步  定义list集合变量\n第二步  生成变量的get方法\n第三步"],[-1,7942,"****"],[-1,7951,"********集"],[1,7960,"法里面向list集合设"],[1,7962,"\n\n"],[-1,8757,"|#\n七、\n"],[1,8766,"七、"],[-1,8771,"* ****str*** 和 ***+***组合*"],[1,8796,"数据\n\n使用struts2的标签 和 ognl"],[1,8799,"组合"],[1,8801,"值栈数据"],[-1,8807,"***）"],[-1,8830,"****"],[1,8834,"ognl"],[1,8836,"式”/>"],[-1,8839," |\n\n（一）"],[1,8850,"（一）"],[1,8853,"符串\n\n"],[-1,9517," |\n\n（二）"],[1,9528,"（二）"],[1,9530,"对象\n\n"],[-1,9556,"* **"],[1,9562,"栈放"],[1,9563,"象\n"],[-1,9586,"象"],[1,9587,"\n"],[-1,9997,")"],[1,9998,"\n"],[-1,10005,"* **"],[1,10012,"中获"],[1,10013,"值\n"],[-1,10025,"值"],[1,10026,"\n"],[-1,10031,">\n:property>\n\n    <br"],[-1,10245,")"],[1,10246,"\n"],[-1,10308,"（三）"],[1,10321,"\n```\n\n\n### （三）获取list集合\n\n"],[-1,11025,"\n |\n\n# "],[1,11032,"第一种方式：\n"],[-1,11044,"获"],[1,11045,"\n"],[-1,11426,"p"],[1,11427,"\n"],[-1,11434,"01/cliage05 g) "],[1,11449,"第"],[-1,11453," *val*"],[1,11459,"：value 值为 List 对象名；\n"],[-1,11471,"*"],[1,11472,"\n"],[-1,11753,"p"],[1,11754,"\n"],[-1,11761,"01/clip_ig"],[1,11771,"第三种方式：最常用\n"],[-1,11783,"e"],[1,11784,"\n"],[-1,12213,"i"],[1,12214,"\n"],[-1,12217,"p"],[1,12220,"\n"],[-1,12223,"p"],[1,12224,"\n"],[-1,12400,"g\n)\n\n因（四）为值是从 C"],[1,12415,"\n\n### （四）其他操作\n\n"],[-1,12441,"te"],[1,12443,"\n\n"],[-1,12592,"p"],[1,12593,"\n"],[-1,12596,"p_ e064 )\n\n**2** **"],[-1,12617,"*"],[1,12618," push 方法向值栈放数据，获取方法："],[-1,12672,"0iage jpg) "],[-1,12684,"****"],[-1,12689,"****"],[-1,12696,"****s*置"],[1,12703," push 方法设置值，没有"],[-1,12712,"**"],[-1,12715,"\n**"],[-1,12719,"****"],[-1,12724,"****"],[1,12730,"值栈"],[1,12731,"数据"],[1,12734,"向值栈放"],[1,12742,"，数组名称 top，根据数组获取值"],[-1,12800,"\n"],[1,12801,"\""],[1,12803,"\n"],[-1,12808,"1/cli八、 p_ima可以ge068."],[1,12829,"\n## 八、 EL表达式可以获取值栈数据"],[-1,12833," -L表达 栈数据（为什么）\n对* **Valuek.j \n**首先加 `***** **"],[1,12878,"\n- EL 表达式获取域对象值\n首先加上标签头：`<%@ "],[-1,12884,"**"],[-1,12887,"**"],[-1,12894,"****"],[1,12907,"va.s"],[1,12908,"n"],[-1,12916,"le**pf\"****c****\"%*"],[1,12935,"/jstl/core\"prefix=\"c\"%>`\n然后使用 foreach\n"],[-1,13107,"*- </c:forEac\n\n**2** **"],[1,13130,"\n- "],[1,13132,"对象里面"],[-1,13136,"****"],[1,13140,"setA"],[-1,13148,"****取值**- "],[1,13158,"方法，获取值使用getAtt"],[-1,13162," **方法**\n ** **底层增*"],[1,13180,"te方法\n\n- 底层增强 "],[-1,13187,"****"],[1,13192,"对象里面"],[-1,13194,"**gtte****"],[1,13204,"法：getAttribute 方法"],[-1,13206,"**"],[-1,13210,"****"],[-1,13218,"****"],[-1,13224,"e*取"],[1,13227,"quest域获取值，如果"],[-1,13231,"**\n\n**"],[1,13237,"直接返回\n"],[-1,13239,"****"],[-1,13247,"****"],[-1,13258,"****"],[1,13265,"不到"],[-1,13267,"/cli九、p_image072.jpg)\n（一）\n |"],[1,13295,"到值栈中把值获取出来，把值放到域对象里面\n\n\n## 九、OGNL的#、%使用\n\n### （一）#使用"],[-1,13319," "],[1,13320,"\n"],[-1,13550,"O"],[1,13551,"\n"],[-1,13901,"/"],[1,13902,"\n"],[-1,13939,"\n\nclip_image075.jpg)\n\n |"],[1,13963,""]],[7348,7348],[13963,13963]]],[1570095714038,[null,[[1,7348,"u"],[-1,7348,"\n"],[1,7760,"age"],[-1,7760,"```"],[1,7793,"`"],[-1,7793,"\n"],[1,7883,"`"],[1,7885," |"],[1,7886,"\n（三）"],[-1,7890,"（三）"],[-1,7901,"集合"],[1,7905,"*  **********变\n\n*  ****生*****方\n\n*"],[-1,7905,"第一步  定义list集合变量\n第二步  生成变量的get方法\n第三步"],[1,7942,"****"],[1,7947,"********集"],[-1,7947,"法里面向list集合设"],[-1,7960,"\n\n"],[1,8757,"|#\n七、\n"],[-1,8760,"七、"],[1,8767,"* ****str*** 和 ***+***组合*"],[-1,8767,"数据\n\n使用struts2的标签 和 ognl"],[-1,8793,"组合"],[-1,8797,"值栈数据"],[1,8807,"***）"],[1,8826,"****"],[-1,8826,"ognl"],[-1,8832,"式”/>"],[1,8839," |\n\n（一）"],[-1,8843,"（一）"],[-1,8849,"符串\n\n"],[1,9517," |\n\n（二）"],[-1,9521,"（二）"],[-1,9526,"对象\n\n"],[1,9556,"* **"],[-1,9558,"栈放"],[-1,9561,"象\n"],[1,9586,"象"],[-1,9586,"\n"],[1,9997,")"],[-1,9997,"\n"],[1,10005,"* **"],[-1,10008,"中获"],[-1,10011,"值\n"],[1,10025,"值"],[-1,10025,"\n"],[1,10031,">\n:property>\n\n    <br"],[1,10224,")"],[-1,10224,"\n"],[1,10287,"（三）"],[-1,10297,"\n```\n\n\n### （三）获取list集合\n\n"],[1,11025,"\n |\n\n# "],[-1,11025,"第一种方式：\n"],[1,11044,"获"],[-1,11044,"\n"],[1,11426,"p"],[-1,11426,"\n"],[1,11434,"01/cliage05 g) "],[-1,11434,"第"],[1,11439," *val*"],[-1,11439,"：value 值为 List 对象名；\n"],[1,11471,"*"],[-1,11471,"\n"],[1,11753,"p"],[-1,11753,"\n"],[1,11761,"01/clip_ig"],[-1,11761,"第三种方式：最常用\n"],[1,11783,"e"],[-1,11783,"\n"],[1,12213,"i"],[-1,12213,"\n"],[1,12217,"p"],[-1,12219,"\n"],[1,12223,"p"],[-1,12223,"\n"],[1,12400,"g\n)\n\n因（四）为值是从 C"],[-1,12400,"\n\n### （四）其他操作\n\n"],[1,12441,"te"],[-1,12441,"\n\n"],[1,12592,"p"],[-1,12592,"\n"],[1,12596,"p_ e064 )\n\n**2** **"],[1,12598,"*"],[-1,12598," push 方法向值栈放数据，获取方法："],[1,12672,"0iage jpg) "],[1,12673,"****"],[1,12674,"****"],[1,12677,"****s*置"],[-1,12677," push 方法设置值，没有"],[1,12700,"**"],[1,12701,"\n**"],[1,12702,"****"],[1,12703,"****"],[-1,12705,"值栈"],[-1,12708,"数据"],[-1,12713,"向值栈放"],[-1,12725,"，数组名称 top，根据数组获取值"],[1,12800,"\n"],[-1,12800,"\""],[-1,12803,"\n"],[1,12809,"1/cli八、 p_ima可以ge068."],[-1,12809,"\n## 八、 EL表达式可以获取值栈数据"],[1,12833," -L表达 栈数据（为什么）\n对* **Valuek.j \n**首先加 `***** **"],[-1,12833,"\n- EL 表达式获取域对象值\n首先加上标签头：`<%@ "],[1,12868,"**"],[1,12869,"**"],[1,12874,"****"],[-1,12883,"va.s"],[-1,12888,"n"],[1,12897,"le**pf\"****c****\"%*"],[-1,12897,"/jstl/core\"prefix=\"c\"%>`\n然后使用 foreach\n"],[1,13107,"*- </c:forEac\n\n**2** **"],[-1,13107,"\n- "],[-1,13112,"对象里面"],[1,13120,"****"],[-1,13120,"setA"],[1,13132,"****取值**- "],[-1,13132,"方法，获取值使用getAtt"],[1,13150," **方法**\n ** **底层增*"],[-1,13150,"te方法\n\n- 底层增强 "],[1,13170,"****"],[-1,13171,"对象里面"],[1,13177,"**gtte****"],[-1,13177,"法：getAttribute 方法"],[1,13196,"**"],[1,13198,"****"],[1,13202,"****"],[1,13204,"e*取"],[-1,13204,"quest域获取值，如果"],[1,13220,"**\n\n**"],[-1,13220,"直接返回\n"],[1,13227,"****"],[1,13231,"****"],[1,13238,"****"],[-1,13241,"不到"],[1,13245,"/cli九、p_image072.jpg)\n（一）\n |"],[-1,13245,"到值栈中把值获取出来，把值放到域对象里面\n\n\n## 九、OGNL的#、%使用\n\n### （一）#使用"],[1,13319," "],[-1,13319,"\n"],[1,13550,"O"],[-1,13550,"\n"],[1,13901,"/"],[-1,13901,"\n"],[1,13939,"\n\nclip_image075.jpg)\n\n |"],[-1,13939,""]],[13963,13963],[7348,7348]]],[1570095671806,["GJX@GJXAIOU",[[1,13932," ognl 的时候，首先添加 #"]],[13932,13932],[13948,13948]]],[1570095672442,["GJX@GJXAIOU",[[1,13948,"\n"]],[13948,13948],[13949,13949]]],[1570095674060,["GJX@GJXAIOU",[[1,13949,"\n"]],[13949,13949],[13950,13950]]],[1570095674442,["GJX@GJXAIOU",[[1,13950,"  "]],[13950,13950],[13952,13952]]],[1570095677011,["GJX@GJXAIOU",[[-1,13950,"  "]],[13952,13952],[13950,13950]]],[1570095690408,["GJX@GJXAIOU",[[1,13949,"    格式为：#context 的可以"]],[13949,13949],[13969,13969]]],[1570095693026,["GJX@GJXAIOU",[[-1,13967,"可以"]],[13969,13969],[13967,13967]]],[1570095698622,["GJX@GJXAIOU",[[1,13967," key 名称.yu"]],[13967,13967],[13977,13977]]],[1570095699270,["GJX@GJXAIOU",[[-1,13975,"yu"]],[13977,13977],[13975,13975]]],[1570095706986,["GJX@GJXAIOU",[[1,13975,"域对象名称；  （）"]],[13975,13975],[13985,13985]]],[1570095712254,["GJX@GJXAIOU",[[1,13984,"key 名称都是"]],[13984,13984],[13992,13992]]],[1570095774043,[null,[[-1,7348,"u"],[1,7349,"\n"],[-1,7760,"age"],[1,7763,"```"],[-1,7793,"`"],[1,7794,"\n"],[-1,7883,"`"],[-1,7886," |"],[-1,7889,"\n（三）"],[1,7897,"（三）"],[1,7905,"集合"],[-1,7907,"*  **********变\n\n*  ****生*****方\n\n*"],[1,7940,"第一步  定义list集合变量\n第二步  生成变量的get方法\n第三步"],[-1,7942,"****"],[-1,7951,"********集"],[1,7960,"法里面向list集合设"],[1,7962,"\n\n"],[-1,8757,"|#\n七、\n"],[1,8766,"七、"],[-1,8771,"* ****str*** 和 ***+***组合*"],[1,8796,"数据\n\n使用struts2的标签 和 ognl"],[1,8799,"组合"],[1,8801,"值栈数据"],[-1,8807,"***）"],[-1,8830,"****"],[1,8834,"ognl"],[1,8836,"式”/>"],[-1,8839," |\n\n（一）"],[1,8850,"（一）"],[1,8853,"符串\n\n"],[-1,9517," |\n\n（二）"],[1,9528,"（二）"],[1,9530,"对象\n\n"],[-1,9556,"* **"],[1,9562,"栈放"],[1,9563,"象\n"],[-1,9586,"象"],[1,9587,"\n"],[-1,9997,")"],[1,9998,"\n"],[-1,10005,"* **"],[1,10012,"中获"],[1,10013,"值\n"],[-1,10025,"值"],[1,10026,"\n"],[-1,10031,">\n:property>\n\n    <br"],[-1,10245,")"],[1,10246,"\n"],[-1,10308,"（三）"],[1,10321,"\n```\n\n\n### （三）获取list集合\n\n"],[-1,11025,"\n |\n\n# "],[1,11032,"第一种方式：\n"],[-1,11044,"获"],[1,11045,"\n"],[-1,11426,"p"],[1,11427,"\n"],[-1,11434,"01/cliage05 g) "],[1,11449,"第"],[-1,11453," *val*"],[1,11459,"：value 值为 List 对象名；\n"],[-1,11471,"*"],[1,11472,"\n"],[-1,11753,"p"],[1,11754,"\n"],[-1,11761,"01/clip_ig"],[1,11771,"第三种方式：最常用\n"],[-1,11783,"e"],[1,11784,"\n"],[-1,12213,"i"],[1,12214,"\n"],[-1,12217,"p"],[1,12220,"\n"],[-1,12223,"p"],[1,12224,"\n"],[-1,12400,"g\n)\n\n因（四）为值是从 C"],[1,12415,"\n\n### （四）其他操作\n\n"],[-1,12441,"te"],[1,12443,"\n\n"],[-1,12592,"p"],[1,12593,"\n"],[-1,12596,"p_ e064 )\n\n**2** **"],[-1,12617,"*"],[1,12618," push 方法向值栈放数据，获取方法："],[-1,12672,"0iage jpg) "],[-1,12684,"****"],[-1,12689,"****"],[-1,12696,"****s*置"],[1,12703," push 方法设置值，没有"],[-1,12712,"**"],[-1,12715,"\n**"],[-1,12719,"****"],[-1,12724,"****"],[1,12730,"值栈"],[1,12731,"数据"],[1,12734,"向值栈放"],[1,12742,"，数组名称 top，根据数组获取值"],[-1,12800,"\n"],[1,12801,"\""],[1,12803,"\n"],[-1,12808,"1/cli八、 p_ima可以ge068."],[1,12829,"\n## 八、 EL表达式可以获取值栈数据"],[-1,12833," -L表达 栈数据（为什么）\n对* **Valuek.j \n**首先加 `***** **"],[1,12878,"\n- EL 表达式获取域对象值\n首先加上标签头：`<%@ "],[-1,12884,"**"],[-1,12887,"**"],[-1,12894,"****"],[1,12907,"va.s"],[1,12908,"n"],[-1,12916,"le**pf\"****c****\"%*"],[1,12935,"/jstl/core\"prefix=\"c\"%>`\n然后使用 foreach\n"],[-1,13107,"*- </c:forEac\n\n**2** **"],[1,13130,"\n- "],[1,13132,"对象里面"],[-1,13136,"****"],[1,13140,"setA"],[-1,13148,"****取值**- "],[1,13158,"方法，获取值使用getAtt"],[-1,13162," **方法**\n ** **底层增*"],[1,13180,"te方法\n\n- 底层增强 "],[-1,13187,"****"],[1,13192,"对象里面"],[-1,13194,"**gtte****"],[1,13204,"法：getAttribute 方法"],[-1,13206,"**"],[-1,13210,"****"],[-1,13218,"****"],[-1,13224,"e*取"],[1,13227,"quest域获取值，如果"],[-1,13231,"**\n\n**"],[1,13237,"直接返回\n"],[-1,13239,"****"],[-1,13247,"****"],[-1,13258,"****"],[1,13265,"不到"],[-1,13267,"/cli九、p_image072.jpg)\n（一）\n |"],[1,13295,"到值栈中把值获取出来，把值放到域对象里面\n\n\n## 九、OGNL的#、%使用\n\n### （一）#使用"],[-1,13319," "],[1,13320,"\n"],[-1,13550,"O"],[1,13551,"\n"],[-1,13901,"/"],[1,13902,"\n"],[-1,14001,"\n\nclip_image075.jpg)\n\n |"],[1,14025,""]],[7348,7348],[14025,14025]]],[1570095774043,[null,[[1,7348,"u"],[-1,7348,"\n"],[1,7760,"age"],[-1,7760,"```"],[1,7793,"`"],[-1,7793,"\n"],[1,7883,"`"],[1,7885," |"],[1,7886,"\n（三）"],[-1,7890,"（三）"],[-1,7901,"集合"],[1,7905,"*  **********变\n\n*  ****生*****方\n\n*"],[-1,7905,"第一步  定义list集合变量\n第二步  生成变量的get方法\n第三步"],[1,7942,"****"],[1,7947,"********集"],[-1,7947,"法里面向list集合设"],[-1,7960,"\n\n"],[1,8757,"|#\n七、\n"],[-1,8760,"七、"],[1,8767,"* ****str*** 和 ***+***组合*"],[-1,8767,"数据\n\n使用struts2的标签 和 ognl"],[-1,8793,"组合"],[-1,8797,"值栈数据"],[1,8807,"***）"],[1,8826,"****"],[-1,8826,"ognl"],[-1,8832,"式”/>"],[1,8839," |\n\n（一）"],[-1,8843,"（一）"],[-1,8849,"符串\n\n"],[1,9517," |\n\n（二）"],[-1,9521,"（二）"],[-1,9526,"对象\n\n"],[1,9556,"* **"],[-1,9558,"栈放"],[-1,9561,"象\n"],[1,9586,"象"],[-1,9586,"\n"],[1,9997,")"],[-1,9997,"\n"],[1,10005,"* **"],[-1,10008,"中获"],[-1,10011,"值\n"],[1,10025,"值"],[-1,10025,"\n"],[1,10031,">\n:property>\n\n    <br"],[1,10224,")"],[-1,10224,"\n"],[1,10287,"（三）"],[-1,10297,"\n```\n\n\n### （三）获取list集合\n\n"],[1,11025,"\n |\n\n# "],[-1,11025,"第一种方式：\n"],[1,11044,"获"],[-1,11044,"\n"],[1,11426,"p"],[-1,11426,"\n"],[1,11434,"01/cliage05 g) "],[-1,11434,"第"],[1,11439," *val*"],[-1,11439,"：value 值为 List 对象名；\n"],[1,11471,"*"],[-1,11471,"\n"],[1,11753,"p"],[-1,11753,"\n"],[1,11761,"01/clip_ig"],[-1,11761,"第三种方式：最常用\n"],[1,11783,"e"],[-1,11783,"\n"],[1,12213,"i"],[-1,12213,"\n"],[1,12217,"p"],[-1,12219,"\n"],[1,12223,"p"],[-1,12223,"\n"],[1,12400,"g\n)\n\n因（四）为值是从 C"],[-1,12400,"\n\n### （四）其他操作\n\n"],[1,12441,"te"],[-1,12441,"\n\n"],[1,12592,"p"],[-1,12592,"\n"],[1,12596,"p_ e064 )\n\n**2** **"],[1,12598,"*"],[-1,12598," push 方法向值栈放数据，获取方法："],[1,12672,"0iage jpg) "],[1,12673,"****"],[1,12674,"****"],[1,12677,"****s*置"],[-1,12677," push 方法设置值，没有"],[1,12700,"**"],[1,12701,"\n**"],[1,12702,"****"],[1,12703,"****"],[-1,12705,"值栈"],[-1,12708,"数据"],[-1,12713,"向值栈放"],[-1,12725,"，数组名称 top，根据数组获取值"],[1,12800,"\n"],[-1,12800,"\""],[-1,12803,"\n"],[1,12809,"1/cli八、 p_ima可以ge068."],[-1,12809,"\n## 八、 EL表达式可以获取值栈数据"],[1,12833," -L表达 栈数据（为什么）\n对* **Valuek.j \n**首先加 `***** **"],[-1,12833,"\n- EL 表达式获取域对象值\n首先加上标签头：`<%@ "],[1,12868,"**"],[1,12869,"**"],[1,12874,"****"],[-1,12883,"va.s"],[-1,12888,"n"],[1,12897,"le**pf\"****c****\"%*"],[-1,12897,"/jstl/core\"prefix=\"c\"%>`\n然后使用 foreach\n"],[1,13107,"*- </c:forEac\n\n**2** **"],[-1,13107,"\n- "],[-1,13112,"对象里面"],[1,13120,"****"],[-1,13120,"setA"],[1,13132,"****取值**- "],[-1,13132,"方法，获取值使用getAtt"],[1,13150," **方法**\n ** **底层增*"],[-1,13150,"te方法\n\n- 底层增强 "],[1,13170,"****"],[-1,13171,"对象里面"],[1,13177,"**gtte****"],[-1,13177,"法：getAttribute 方法"],[1,13196,"**"],[1,13198,"****"],[1,13202,"****"],[1,13204,"e*取"],[-1,13204,"quest域获取值，如果"],[1,13220,"**\n\n**"],[-1,13220,"直接返回\n"],[1,13227,"****"],[1,13231,"****"],[1,13238,"****"],[-1,13241,"不到"],[1,13245,"/cli九、p_image072.jpg)\n（一）\n |"],[-1,13245,"到值栈中把值获取出来，把值放到域对象里面\n\n\n## 九、OGNL的#、%使用\n\n### （一）#使用"],[1,13319," "],[-1,13319,"\n"],[1,13550,"O"],[-1,13550,"\n"],[1,13901,"/"],[-1,13901,"\n"],[1,14001,"\n\nclip_image075.jpg)\n\n |"],[-1,14001,""]],[14025,14025],[7348,7348]]],[1570095717840,["GJX@GJXAIOU",[[1,13992,"固定的，见上面"]],[13992,13992],[13999,13999]]],[1570095724065,["GJX@GJXAIOU",[[1,14001,"    \n"]],[14000,14000],[14005,14005]]],[1570095740757,["GJX@GJXAIOU",[[1,14005,"<s:property value = \"#request:"]],[14005,14005],[14035,14035]]],[1570095741233,["GJX@GJXAIOU",[[-1,14034,":"]],[14035,14035],[14034,14034]]],[1570095741930,["GJX@GJXAIOU",[[1,14034,".s"]],[14034,14034],[14036,14036]]],[1570095742514,["GJX@GJXAIOU",[[-1,14035,"s"]],[14036,14036],[14035,14035]]],[1570095746364,["GJX@GJXAIOU",[[1,14035,"req\"?"]],[14035,14035],[14040,14040]]],[1570095746935,["GJX@GJXAIOU",[[-1,14039,"?"]],[14040,14040],[14039,14039]]],[1570095747444,["GJX@GJXAIOU",[[1,14039,"、"]],[14039,14039],[14040,14040]]],[1570095748153,["GJX@GJXAIOU",[[-1,14039,"、"]],[14040,14040],[14039,14039]]],[1570095748660,["GJX@GJXAIOU",[[1,14039,"、"]],[14039,14039],[14040,14040]]],[1570095749404,["GJX@GJXAIOU",[[-1,14039,"、"]],[14040,14040],[14039,14039]]],[1570095750198,["GJX@GJXAIOU",[[1,14039,"？"]],[14039,14039],[14040,14040]]],[1570095750817,["GJX@GJXAIOU",[[-1,14039,"？"]],[14040,14040],[14039,14039]]],[1570095751278,["GJX@GJXAIOU",[[1,14039,"、"]],[14039,14039],[14040,14040]]],[1570095751827,["GJX@GJXAIOU",[[-1,14039,"、"]],[14040,14040],[14039,14039]]],[1570095753263,["GJX@GJXAIOU",[[1,14039,"/>"]],[14039,14039],[14041,14041]]],[1570095768454,["GJX@GJXAIOU",[[1,14055,"()"]],[14055,14055],[14057,14057]]],[1570095769720,["GJX@GJXAIOU",[[-1,14055,"()"]],[14057,14057],[14055,14055]]],[1570095770353,["GJX@GJXAIOU",[[1,14055,"（）"]],[14055,14055],[14057,14057]]],[1570095771441,["GJX@GJXAIOU",[[1,14056,"二"]],[14056,14056],[14057,14057]]],[1570095834044,[null,[[-1,7348,"u"],[1,7349,"\n"],[-1,7760,"age"],[1,7763,"```"],[-1,7793,"`"],[1,7794,"\n"],[-1,7883,"`"],[-1,7886," |"],[-1,7889,"\n（三）"],[1,7897,"（三）"],[1,7905,"集合"],[-1,7907,"*  **********变\n\n*  ****生*****方\n\n*"],[1,7940,"第一步  定义list集合变量\n第二步  生成变量的get方法\n第三步"],[-1,7942,"****"],[-1,7951,"********集"],[1,7960,"法里面向list集合设"],[1,7962,"\n\n"],[-1,8757,"|#\n七、\n"],[1,8766,"七、"],[-1,8771,"* ****str*** 和 ***+***组合*"],[1,8796,"数据\n\n使用struts2的标签 和 ognl"],[1,8799,"组合"],[1,8801,"值栈数据"],[-1,8807,"***）"],[-1,8830,"****"],[1,8834,"ognl"],[1,8836,"式”/>"],[-1,8839," |\n\n（一）"],[1,8850,"（一）"],[1,8853,"符串\n\n"],[-1,9517," |\n\n（二）"],[1,9528,"（二）"],[1,9530,"对象\n\n"],[-1,9556,"* **"],[1,9562,"栈放"],[1,9563,"象\n"],[-1,9586,"象"],[1,9587,"\n"],[-1,9997,")"],[1,9998,"\n"],[-1,10005,"* **"],[1,10012,"中获"],[1,10013,"值\n"],[-1,10025,"值"],[1,10026,"\n"],[-1,10031,">\n:property>\n\n    <br"],[-1,10245,")"],[1,10246,"\n"],[-1,10308,"（三）"],[1,10321,"\n```\n\n\n### （三）获取list集合\n\n"],[-1,11025,"\n |\n\n# "],[1,11032,"第一种方式：\n"],[-1,11044,"获"],[1,11045,"\n"],[-1,11426,"p"],[1,11427,"\n"],[-1,11434,"01/cliage05 g) "],[1,11449,"第"],[-1,11453," *val*"],[1,11459,"：value 值为 List 对象名；\n"],[-1,11471,"*"],[1,11472,"\n"],[-1,11753,"p"],[1,11754,"\n"],[-1,11761,"01/clip_ig"],[1,11771,"第三种方式：最常用\n"],[-1,11783,"e"],[1,11784,"\n"],[-1,12213,"i"],[1,12214,"\n"],[-1,12217,"p"],[1,12220,"\n"],[-1,12223,"p"],[1,12224,"\n"],[-1,12400,"g\n)\n\n因（四）为值是从 C"],[1,12415,"\n\n### （四）其他操作\n\n"],[-1,12441,"te"],[1,12443,"\n\n"],[-1,12592,"p"],[1,12593,"\n"],[-1,12596,"p_ e064 )\n\n**2** **"],[-1,12617,"*"],[1,12618," push 方法向值栈放数据，获取方法："],[-1,12672,"0iage jpg) "],[-1,12684,"****"],[-1,12689,"****"],[-1,12696,"****s*置"],[1,12703," push 方法设置值，没有"],[-1,12712,"**"],[-1,12715,"\n**"],[-1,12719,"****"],[-1,12724,"****"],[1,12730,"值栈"],[1,12731,"数据"],[1,12734,"向值栈放"],[1,12742,"，数组名称 top，根据数组获取值"],[-1,12800,"\n"],[1,12801,"\""],[1,12803,"\n"],[-1,12808,"1/cli八、 p_ima可以ge068."],[1,12829,"\n## 八、 EL表达式可以获取值栈数据"],[-1,12833," -L表达 栈数据（为什么）\n对* **Valuek.j \n**首先加 `***** **"],[1,12878,"\n- EL 表达式获取域对象值\n首先加上标签头：`<%@ "],[-1,12884,"**"],[-1,12887,"**"],[-1,12894,"****"],[1,12907,"va.s"],[1,12908,"n"],[-1,12916,"le**pf\"****c****\"%*"],[1,12935,"/jstl/core\"prefix=\"c\"%>`\n然后使用 foreach\n"],[-1,13107,"*- </c:forEac\n\n**2** **"],[1,13130,"\n- "],[1,13132,"对象里面"],[-1,13136,"****"],[1,13140,"setA"],[-1,13148,"****取值**- "],[1,13158,"方法，获取值使用getAtt"],[-1,13162," **方法**\n ** **底层增*"],[1,13180,"te方法\n\n- 底层增强 "],[-1,13187,"****"],[1,13192,"对象里面"],[-1,13194,"**gtte****"],[1,13204,"法：getAttribute 方法"],[-1,13206,"**"],[-1,13210,"****"],[-1,13218,"****"],[-1,13224,"e*取"],[1,13227,"quest域获取值，如果"],[-1,13231,"**\n\n**"],[1,13237,"直接返回\n"],[-1,13239,"****"],[-1,13247,"****"],[-1,13258,"****"],[1,13265,"不到"],[-1,13267,"/cli九、p_image072.jpg)\n（一）\n |"],[1,13295,"到值栈中把值获取出来，把值放到域对象里面\n\n\n## 九、OGNL的#、%使用\n\n### （一）#使用"],[-1,13319," "],[1,13320,"\n"],[-1,13550,"O"],[1,13551,"\n"],[-1,13901,"/"],[1,13902,"\n"],[-1,14051,"clip（二）_image075.jpg)\n\n |\n\n"],[1,14082,"（二）"]],[7348,7348],[14085,14085]]],[1570095834044,[null,[[1,7348,"u"],[-1,7348,"\n"],[1,7760,"age"],[-1,7760,"```"],[1,7793,"`"],[-1,7793,"\n"],[1,7883,"`"],[1,7885," |"],[1,7886,"\n（三）"],[-1,7890,"（三）"],[-1,7901,"集合"],[1,7905,"*  **********变\n\n*  ****生*****方\n\n*"],[-1,7905,"第一步  定义list集合变量\n第二步  生成变量的get方法\n第三步"],[1,7942,"****"],[1,7947,"********集"],[-1,7947,"法里面向list集合设"],[-1,7960,"\n\n"],[1,8757,"|#\n七、\n"],[-1,8760,"七、"],[1,8767,"* ****str*** 和 ***+***组合*"],[-1,8767,"数据\n\n使用struts2的标签 和 ognl"],[-1,8793,"组合"],[-1,8797,"值栈数据"],[1,8807,"***）"],[1,8826,"****"],[-1,8826,"ognl"],[-1,8832,"式”/>"],[1,8839," |\n\n（一）"],[-1,8843,"（一）"],[-1,8849,"符串\n\n"],[1,9517," |\n\n（二）"],[-1,9521,"（二）"],[-1,9526,"对象\n\n"],[1,9556,"* **"],[-1,9558,"栈放"],[-1,9561,"象\n"],[1,9586,"象"],[-1,9586,"\n"],[1,9997,")"],[-1,9997,"\n"],[1,10005,"* **"],[-1,10008,"中获"],[-1,10011,"值\n"],[1,10025,"值"],[-1,10025,"\n"],[1,10031,">\n:property>\n\n    <br"],[1,10224,")"],[-1,10224,"\n"],[1,10287,"（三）"],[-1,10297,"\n```\n\n\n### （三）获取list集合\n\n"],[1,11025,"\n |\n\n# "],[-1,11025,"第一种方式：\n"],[1,11044,"获"],[-1,11044,"\n"],[1,11426,"p"],[-1,11426,"\n"],[1,11434,"01/cliage05 g) "],[-1,11434,"第"],[1,11439," *val*"],[-1,11439,"：value 值为 List 对象名；\n"],[1,11471,"*"],[-1,11471,"\n"],[1,11753,"p"],[-1,11753,"\n"],[1,11761,"01/clip_ig"],[-1,11761,"第三种方式：最常用\n"],[1,11783,"e"],[-1,11783,"\n"],[1,12213,"i"],[-1,12213,"\n"],[1,12217,"p"],[-1,12219,"\n"],[1,12223,"p"],[-1,12223,"\n"],[1,12400,"g\n)\n\n因（四）为值是从 C"],[-1,12400,"\n\n### （四）其他操作\n\n"],[1,12441,"te"],[-1,12441,"\n\n"],[1,12592,"p"],[-1,12592,"\n"],[1,12596,"p_ e064 )\n\n**2** **"],[1,12598,"*"],[-1,12598," push 方法向值栈放数据，获取方法："],[1,12672,"0iage jpg) "],[1,12673,"****"],[1,12674,"****"],[1,12677,"****s*置"],[-1,12677," push 方法设置值，没有"],[1,12700,"**"],[1,12701,"\n**"],[1,12702,"****"],[1,12703,"****"],[-1,12705,"值栈"],[-1,12708,"数据"],[-1,12713,"向值栈放"],[-1,12725,"，数组名称 top，根据数组获取值"],[1,12800,"\n"],[-1,12800,"\""],[-1,12803,"\n"],[1,12809,"1/cli八、 p_ima可以ge068."],[-1,12809,"\n## 八、 EL表达式可以获取值栈数据"],[1,12833," -L表达 栈数据（为什么）\n对* **Valuek.j \n**首先加 `***** **"],[-1,12833,"\n- EL 表达式获取域对象值\n首先加上标签头：`<%@ "],[1,12868,"**"],[1,12869,"**"],[1,12874,"****"],[-1,12883,"va.s"],[-1,12888,"n"],[1,12897,"le**pf\"****c****\"%*"],[-1,12897,"/jstl/core\"prefix=\"c\"%>`\n然后使用 foreach\n"],[1,13107,"*- </c:forEac\n\n**2** **"],[-1,13107,"\n- "],[-1,13112,"对象里面"],[1,13120,"****"],[-1,13120,"setA"],[1,13132,"****取值**- "],[-1,13132,"方法，获取值使用getAtt"],[1,13150," **方法**\n ** **底层增*"],[-1,13150,"te方法\n\n- 底层增强 "],[1,13170,"****"],[-1,13171,"对象里面"],[1,13177,"**gtte****"],[-1,13177,"法：getAttribute 方法"],[1,13196,"**"],[1,13198,"****"],[1,13202,"****"],[1,13204,"e*取"],[-1,13204,"quest域获取值，如果"],[1,13220,"**\n\n**"],[-1,13220,"直接返回\n"],[1,13227,"****"],[1,13231,"****"],[1,13238,"****"],[-1,13241,"不到"],[1,13245,"/cli九、p_image072.jpg)\n（一）\n |"],[-1,13245,"到值栈中把值获取出来，把值放到域对象里面\n\n\n## 九、OGNL的#、%使用\n\n### （一）#使用"],[1,13319," "],[-1,13319,"\n"],[1,13550,"O"],[-1,13550,"\n"],[1,13901,"/"],[-1,13901,"\n"],[1,14051,"clip（二）_image075.jpg)\n\n |\n\n"],[-1,14055,"（二）"]],[14085,14085],[7348,7348]]],[1570095784882,["GJX@GJXAIOU",[[-1,14063,"| \n\n**1** **在****"],[1,14080," 在"],[-1,14087,"****"],[-1,14098,"**"],[-1,14102,"**"],[-1,14105,"****"],[-1,14110,"****"],[-1,14116,"****"],[-1,14127,"****"],[-1,14137,"****"],[-1,14145,"****"],[-1,14158,"****"],[-1,14169,"****"],[-1,14181,"****"],[-1,14189,"****"],[-1,14202,"****"],[-1,14207,"****"],[-1,14218,"**\n\n![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image077.jpg)\n\n |\n"]],[14063,14307],[14147,14147]]],[1570095796258,["GJX@GJXAIOU",[[-1,14080,"\n（1）"]],[14080,14084],[14080,14080]]],[1570095798885,["GJX@GJXAIOU",[[-1,14063," "],[1,14064,"- "]],[14063,14063],[14064,14064]]],[1570095799033,["GJX@GJXAIOU",[[1,14065," "]],[14064,14064],[14065,14065]]],[1570095812193,["GJX@GJXAIOU",[[1,14146,"\n"]],[14146,14146],[14147,14147]]],[1570095812371,["GJX@GJXAIOU",[[1,14147,"\n"]],[14147,14147],[14148,14148]]],[1570095815069,["GJX@GJXAIOU",[[1,14146,"《"]],[14146,14146],[14147,14147]]],[1570095815890,["GJX@GJXAIOU",[[-1,14146,"《"]],[14147,14147],[14146,14146]]],[1570095817113,["GJX@GJXAIOU",[[1,14146,"``"]],[14146,14146],[14148,14148]]],[1570095825052,["GJX@GJXAIOU",[[1,14147,"<s:textfile"]],[14147,14147],[14158,14158]]],[1570095826027,["GJX@GJXAIOU",[[-1,14156,"le"]],[14158,14158],[14156,14156]]],[1570095833739,["GJX@GJXAIOU",[[1,14156,"eld name = \"user"]],[14156,14156],[14172,14172]]],[1570095894043,[null,[[-1,7348,"u"],[1,7349,"\n"],[-1,7760,"age"],[1,7763,"```"],[-1,7793,"`"],[1,7794,"\n"],[-1,7883,"`"],[-1,7886," |"],[-1,7889,"\n（三）"],[1,7897,"（三）"],[1,7905,"集合"],[-1,7907,"*  **********变\n\n*  ****生*****方\n\n*"],[1,7940,"第一步  定义list集合变量\n第二步  生成变量的get方法\n第三步"],[-1,7942,"****"],[-1,7951,"********集"],[1,7960,"法里面向list集合设"],[1,7962,"\n\n"],[-1,8757,"|#\n七、\n"],[1,8766,"七、"],[-1,8771,"* ****str*** 和 ***+***组合*"],[1,8796,"数据\n\n使用struts2的标签 和 ognl"],[1,8799,"组合"],[1,8801,"值栈数据"],[-1,8807,"***）"],[-1,8830,"****"],[1,8834,"ognl"],[1,8836,"式”/>"],[-1,8839," |\n\n（一）"],[1,8850,"（一）"],[1,8853,"符串\n\n"],[-1,9517," |\n\n（二）"],[1,9528,"（二）"],[1,9530,"对象\n\n"],[-1,9556,"* **"],[1,9562,"栈放"],[1,9563,"象\n"],[-1,9586,"象"],[1,9587,"\n"],[-1,9997,")"],[1,9998,"\n"],[-1,10005,"* **"],[1,10012,"中获"],[1,10013,"值\n"],[-1,10025,"值"],[1,10026,"\n"],[-1,10031,">\n:property>\n\n    <br"],[-1,10245,")"],[1,10246,"\n"],[-1,10308,"（三）"],[1,10321,"\n```\n\n\n### （三）获取list集合\n\n"],[-1,11025,"\n |\n\n# "],[1,11032,"第一种方式：\n"],[-1,11044,"获"],[1,11045,"\n"],[-1,11426,"p"],[1,11427,"\n"],[-1,11434,"01/cliage05 g) "],[1,11449,"第"],[-1,11453," *val*"],[1,11459,"：value 值为 List 对象名；\n"],[-1,11471,"*"],[1,11472,"\n"],[-1,11753,"p"],[1,11754,"\n"],[-1,11761,"01/clip_ig"],[1,11771,"第三种方式：最常用\n"],[-1,11783,"e"],[1,11784,"\n"],[-1,12213,"i"],[1,12214,"\n"],[-1,12217,"p"],[1,12220,"\n"],[-1,12223,"p"],[1,12224,"\n"],[-1,12400,"g\n)\n\n因（四）为值是从 C"],[1,12415,"\n\n### （四）其他操作\n\n"],[-1,12441,"te"],[1,12443,"\n\n"],[-1,12592,"p"],[1,12593,"\n"],[-1,12596,"p_ e064 )\n\n**2** **"],[-1,12617,"*"],[1,12618," push 方法向值栈放数据，获取方法："],[-1,12672,"0iage jpg) "],[-1,12684,"****"],[-1,12689,"****"],[-1,12696,"****s*置"],[1,12703," push 方法设置值，没有"],[-1,12712,"**"],[-1,12715,"\n**"],[-1,12719,"****"],[-1,12724,"****"],[1,12730,"值栈"],[1,12731,"数据"],[1,12734,"向值栈放"],[1,12742,"，数组名称 top，根据数组获取值"],[-1,12800,"\n"],[1,12801,"\""],[1,12803,"\n"],[-1,12808,"1/cli八、 p_ima可以ge068."],[1,12829,"\n## 八、 EL表达式可以获取值栈数据"],[-1,12833," -L表达 栈数据（为什么）\n对* **Valuek.j \n**首先加 `***** **"],[1,12878,"\n- EL 表达式获取域对象值\n首先加上标签头：`<%@ "],[-1,12884,"**"],[-1,12887,"**"],[-1,12894,"****"],[1,12907,"va.s"],[1,12908,"n"],[-1,12916,"le**pf\"****c****\"%*"],[1,12935,"/jstl/core\"prefix=\"c\"%>`\n然后使用 foreach\n"],[-1,13107,"*- </c:forEac\n\n**2** **"],[1,13130,"\n- "],[1,13132,"对象里面"],[-1,13136,"****"],[1,13140,"setA"],[-1,13148,"****取值**- "],[1,13158,"方法，获取值使用getAtt"],[-1,13162," **方法**\n ** **底层增*"],[1,13180,"te方法\n\n- 底层增强 "],[-1,13187,"****"],[1,13192,"对象里面"],[-1,13194,"**gtte****"],[1,13204,"法：getAttribute 方法"],[-1,13206,"**"],[-1,13210,"****"],[-1,13218,"****"],[-1,13224,"e*取"],[1,13227,"quest域获取值，如果"],[-1,13231,"**\n\n**"],[1,13237,"直接返回\n"],[-1,13239,"****"],[-1,13247,"****"],[-1,13258,"****"],[1,13265,"不到"],[-1,13267,"/cli九、p_image072.jpg)\n（一）\n |"],[1,13295,"到值栈中把值获取出来，把值放到域对象里面\n\n\n## 九、OGNL的#、%使用\n\n### （一）#使用"],[-1,13319," "],[1,13320,"\n"],[-1,13550,"O"],[1,13551,"\n"],[-1,13901,"/"],[1,13902,"\n"],[-1,14051,"clip"],[1,14055,"### "],[-1,14058,"_imag-  在# "],[-1,14074,"**1** **标标签**\n\n***1******s"],[1,14100,"-  在struts2标签中表单标签\n在strut"],[-1,14102,"****"],[-1,14109,"***"],[1,14112,"面使用"],[-1,14124,"*str****"],[1,14132,"在struts2"],[-1,14137,"*nl****表/"],[1,14146,"面使用ognl表达式不识别，只有%之后才会识别。\n"],[-1,14173,"\n\nclip_image077.jpg)\n\n |"]],[7348,7348],[14173,14173]]],[1570095894043,[null,[[1,7348,"u"],[-1,7348,"\n"],[1,7760,"age"],[-1,7760,"```"],[1,7793,"`"],[-1,7793,"\n"],[1,7883,"`"],[1,7885," |"],[1,7886,"\n（三）"],[-1,7890,"（三）"],[-1,7901,"集合"],[1,7905,"*  **********变\n\n*  ****生*****方\n\n*"],[-1,7905,"第一步  定义list集合变量\n第二步  生成变量的get方法\n第三步"],[1,7942,"****"],[1,7947,"********集"],[-1,7947,"法里面向list集合设"],[-1,7960,"\n\n"],[1,8757,"|#\n七、\n"],[-1,8760,"七、"],[1,8767,"* ****str*** 和 ***+***组合*"],[-1,8767,"数据\n\n使用struts2的标签 和 ognl"],[-1,8793,"组合"],[-1,8797,"值栈数据"],[1,8807,"***）"],[1,8826,"****"],[-1,8826,"ognl"],[-1,8832,"式”/>"],[1,8839," |\n\n（一）"],[-1,8843,"（一）"],[-1,8849,"符串\n\n"],[1,9517," |\n\n（二）"],[-1,9521,"（二）"],[-1,9526,"对象\n\n"],[1,9556,"* **"],[-1,9558,"栈放"],[-1,9561,"象\n"],[1,9586,"象"],[-1,9586,"\n"],[1,9997,")"],[-1,9997,"\n"],[1,10005,"* **"],[-1,10008,"中获"],[-1,10011,"值\n"],[1,10025,"值"],[-1,10025,"\n"],[1,10031,">\n:property>\n\n    <br"],[1,10224,")"],[-1,10224,"\n"],[1,10287,"（三）"],[-1,10297,"\n```\n\n\n### （三）获取list集合\n\n"],[1,11025,"\n |\n\n# "],[-1,11025,"第一种方式：\n"],[1,11044,"获"],[-1,11044,"\n"],[1,11426,"p"],[-1,11426,"\n"],[1,11434,"01/cliage05 g) "],[-1,11434,"第"],[1,11439," *val*"],[-1,11439,"：value 值为 List 对象名；\n"],[1,11471,"*"],[-1,11471,"\n"],[1,11753,"p"],[-1,11753,"\n"],[1,11761,"01/clip_ig"],[-1,11761,"第三种方式：最常用\n"],[1,11783,"e"],[-1,11783,"\n"],[1,12213,"i"],[-1,12213,"\n"],[1,12217,"p"],[-1,12219,"\n"],[1,12223,"p"],[-1,12223,"\n"],[1,12400,"g\n)\n\n因（四）为值是从 C"],[-1,12400,"\n\n### （四）其他操作\n\n"],[1,12441,"te"],[-1,12441,"\n\n"],[1,12592,"p"],[-1,12592,"\n"],[1,12596,"p_ e064 )\n\n**2** **"],[1,12598,"*"],[-1,12598," push 方法向值栈放数据，获取方法："],[1,12672,"0iage jpg) "],[1,12673,"****"],[1,12674,"****"],[1,12677,"****s*置"],[-1,12677," push 方法设置值，没有"],[1,12700,"**"],[1,12701,"\n**"],[1,12702,"****"],[1,12703,"****"],[-1,12705,"值栈"],[-1,12708,"数据"],[-1,12713,"向值栈放"],[-1,12725,"，数组名称 top，根据数组获取值"],[1,12800,"\n"],[-1,12800,"\""],[-1,12803,"\n"],[1,12809,"1/cli八、 p_ima可以ge068."],[-1,12809,"\n## 八、 EL表达式可以获取值栈数据"],[1,12833," -L表达 栈数据（为什么）\n对* **Valuek.j \n**首先加 `***** **"],[-1,12833,"\n- EL 表达式获取域对象值\n首先加上标签头：`<%@ "],[1,12868,"**"],[1,12869,"**"],[1,12874,"****"],[-1,12883,"va.s"],[-1,12888,"n"],[1,12897,"le**pf\"****c****\"%*"],[-1,12897,"/jstl/core\"prefix=\"c\"%>`\n然后使用 foreach\n"],[1,13107,"*- </c:forEac\n\n**2** **"],[-1,13107,"\n- "],[-1,13112,"对象里面"],[1,13120,"****"],[-1,13120,"setA"],[1,13132,"****取值**- "],[-1,13132,"方法，获取值使用getAtt"],[1,13150," **方法**\n ** **底层增*"],[-1,13150,"te方法\n\n- 底层增强 "],[1,13170,"****"],[-1,13171,"对象里面"],[1,13177,"**gtte****"],[-1,13177,"法：getAttribute 方法"],[1,13196,"**"],[1,13198,"****"],[1,13202,"****"],[1,13204,"e*取"],[-1,13204,"quest域获取值，如果"],[1,13220,"**\n\n**"],[-1,13220,"直接返回\n"],[1,13227,"****"],[1,13231,"****"],[1,13238,"****"],[-1,13241,"不到"],[1,13245,"/cli九、p_image072.jpg)\n（一）\n |"],[-1,13245,"到值栈中把值获取出来，把值放到域对象里面\n\n\n## 九、OGNL的#、%使用\n\n### （一）#使用"],[1,13319," "],[-1,13319,"\n"],[1,13550,"O"],[-1,13550,"\n"],[1,13901,"/"],[-1,13901,"\n"],[1,14051,"clip"],[-1,14051,"### "],[1,14058,"_imag-  在# "],[1,14063,"**1** **标标签**\n\n***1******s"],[-1,14063,"-  在struts2标签中表单标签\n在strut"],[1,14090,"****"],[1,14093,"***"],[-1,14093,"面使用"],[1,14108,"*str****"],[-1,14108,"在struts2"],[1,14121,"*nl****表/"],[-1,14121,"面使用ognl表达式不识别，只有%之后才会识别。\n"],[1,14173,"\n\nclip_image077.jpg)\n\n |"]],[14173,14173],[7348,7348]]],[1570095843805,["GJX@GJXAIOU",[[1,14172,"name\" value = \"\">"]],[14172,14172],[14189,14189]]],[1570095856862,["GJX@GJXAIOU",[[1,14187,"%{}"]],[14187,14187],[14190,14190]]],[1570095860660,["GJX@GJXAIOU",[[1,14189,"#requer"]],[14189,14189],[14196,14196]]],[1570095862176,["GJX@GJXAIOU",[[-1,14193,"uer"]],[14196,14196],[14193,14193]]],[1570095866933,["GJX@GJXAIOU",[[1,14193,"uest.req"]],[14193,14193],[14201,14201]]],[1570095954051,[null,[[-1,7348,"u"],[1,7349,"\n"],[-1,7760,"age"],[1,7763,"```"],[-1,7793,"`"],[1,7794,"\n"],[-1,7883,"`"],[-1,7886," |"],[-1,7889,"\n（三）"],[1,7897,"（三）"],[1,7905,"集合"],[-1,7907,"*  **********变\n\n*  ****生*****方\n\n*"],[1,7940,"第一步  定义list集合变量\n第二步  生成变量的get方法\n第三步"],[-1,7942,"****"],[-1,7951,"********集"],[1,7960,"法里面向list集合设"],[1,7962,"\n\n"],[-1,8757,"|#\n七、\n"],[1,8766,"七、"],[-1,8771,"* ****str*** 和 ***+***组合*"],[1,8796,"数据\n\n使用struts2的标签 和 ognl"],[1,8799,"组合"],[1,8801,"值栈数据"],[-1,8807,"***）"],[-1,8830,"****"],[1,8834,"ognl"],[1,8836,"式”/>"],[-1,8839," |\n\n（一）"],[1,8850,"（一）"],[1,8853,"符串\n\n"],[-1,9517," |\n\n（二）"],[1,9528,"（二）"],[1,9530,"对象\n\n"],[-1,9556,"* **"],[1,9562,"栈放"],[1,9563,"象\n"],[-1,9586,"象"],[1,9587,"\n"],[-1,9997,")"],[1,9998,"\n"],[-1,10005,"* **"],[1,10012,"中获"],[1,10013,"值\n"],[-1,10025,"值"],[1,10026,"\n"],[-1,10031,">\n:property>\n\n    <br"],[-1,10245,")"],[1,10246,"\n"],[-1,10308,"（三）"],[1,10321,"\n```\n\n\n### （三）获取list集合\n\n"],[-1,11025,"\n |\n\n# "],[1,11032,"第一种方式：\n"],[-1,11044,"获"],[1,11045,"\n"],[-1,11426,"p"],[1,11427,"\n"],[-1,11434,"01/cliage05 g) "],[1,11449,"第"],[-1,11453," *val*"],[1,11459,"：value 值为 List 对象名；\n"],[-1,11471,"*"],[1,11472,"\n"],[-1,11753,"p"],[1,11754,"\n"],[-1,11761,"01/clip_ig"],[1,11771,"第三种方式：最常用\n"],[-1,11783,"e"],[1,11784,"\n"],[-1,12213,"i"],[1,12214,"\n"],[-1,12217,"p"],[1,12220,"\n"],[-1,12223,"p"],[1,12224,"\n"],[-1,12400,"g\n)\n\n因（四）为值是从 C"],[1,12415,"\n\n### （四）其他操作\n\n"],[-1,12441,"te"],[1,12443,"\n\n"],[-1,12592,"p"],[1,12593,"\n"],[-1,12596,"p_ e064 )\n\n**2** **"],[-1,12617,"*"],[1,12618," push 方法向值栈放数据，获取方法："],[-1,12672,"0iage jpg) "],[-1,12684,"****"],[-1,12689,"****"],[-1,12696,"****s*置"],[1,12703," push 方法设置值，没有"],[-1,12712,"**"],[-1,12715,"\n**"],[-1,12719,"****"],[-1,12724,"****"],[1,12730,"值栈"],[1,12731,"数据"],[1,12734,"向值栈放"],[1,12742,"，数组名称 top，根据数组获取值"],[-1,12800,"\n"],[1,12801,"\""],[1,12803,"\n"],[-1,12808,"1/cli八、 p_ima可以ge068."],[1,12829,"\n## 八、 EL表达式可以获取值栈数据"],[-1,12833," -L表达 栈数据（为什么）\n对* **Valuek.j \n**首先加 `***** **"],[1,12878,"\n- EL 表达式获取域对象值\n首先加上标签头：`<%@ "],[-1,12884,"**"],[-1,12887,"**"],[-1,12894,"****"],[1,12907,"va.s"],[1,12908,"n"],[-1,12916,"le**pf\"****c****\"%*"],[1,12935,"/jstl/core\"prefix=\"c\"%>`\n然后使用 foreach\n"],[-1,13107,"*- </c:forEac\n\n**2** **"],[1,13130,"\n- "],[1,13132,"对象里面"],[-1,13136,"****"],[1,13140,"setA"],[-1,13148,"****取值**- "],[1,13158,"方法，获取值使用getAtt"],[-1,13162," **方法**\n ** **底层增*"],[1,13180,"te方法\n\n- 底层增强 "],[-1,13187,"****"],[1,13192,"对象里面"],[-1,13194,"**gtte****"],[1,13204,"法：getAttribute 方法"],[-1,13206,"**"],[-1,13210,"****"],[-1,13218,"****"],[-1,13224,"e*取"],[1,13227,"quest域获取值，如果"],[-1,13231,"**\n\n**"],[1,13237,"直接返回\n"],[-1,13239,"****"],[-1,13247,"****"],[-1,13258,"****"],[1,13265,"不到"],[-1,13267,"/cli九、p_image072.jpg)\n（一）\n |"],[1,13295,"到值栈中把值获取出来，把值放到域对象里面\n\n\n## 九、OGNL的#、%使用\n\n### （一）#使用"],[-1,13319," "],[1,13320,"\n"],[-1,13550,"O"],[1,13551,"\n"],[-1,13901,"/"],[1,13902,"\n"],[-1,14051,"clip"],[1,14055,"### "],[-1,14058,"_imag-  在# "],[-1,14074,"**1** **标标签**\n\n***1******s"],[1,14100,"-  在struts2标签中表单标签\n在strut"],[-1,14102,"****"],[-1,14109,"***"],[1,14112,"面使用"],[-1,14124,"*str****"],[1,14132,"在struts2"],[-1,14137,"*nl****表/"],[1,14146,"面使用ognl表达式不识别，只有%之后才会识别。\n"],[-1,14205,"\n\nclip_image077.jpg)\n\n |"]],[7348,7348],[14205,14205]]],[1570095954051,[null,[[1,7348,"u"],[-1,7348,"\n"],[1,7760,"age"],[-1,7760,"```"],[1,7793,"`"],[-1,7793,"\n"],[1,7883,"`"],[1,7885," |"],[1,7886,"\n（三）"],[-1,7890,"（三）"],[-1,7901,"集合"],[1,7905,"*  **********变\n\n*  ****生*****方\n\n*"],[-1,7905,"第一步  定义list集合变量\n第二步  生成变量的get方法\n第三步"],[1,7942,"****"],[1,7947,"********集"],[-1,7947,"法里面向list集合设"],[-1,7960,"\n\n"],[1,8757,"|#\n七、\n"],[-1,8760,"七、"],[1,8767,"* ****str*** 和 ***+***组合*"],[-1,8767,"数据\n\n使用struts2的标签 和 ognl"],[-1,8793,"组合"],[-1,8797,"值栈数据"],[1,8807,"***）"],[1,8826,"****"],[-1,8826,"ognl"],[-1,8832,"式”/>"],[1,8839," |\n\n（一）"],[-1,8843,"（一）"],[-1,8849,"符串\n\n"],[1,9517," |\n\n（二）"],[-1,9521,"（二）"],[-1,9526,"对象\n\n"],[1,9556,"* **"],[-1,9558,"栈放"],[-1,9561,"象\n"],[1,9586,"象"],[-1,9586,"\n"],[1,9997,")"],[-1,9997,"\n"],[1,10005,"* **"],[-1,10008,"中获"],[-1,10011,"值\n"],[1,10025,"值"],[-1,10025,"\n"],[1,10031,">\n:property>\n\n    <br"],[1,10224,")"],[-1,10224,"\n"],[1,10287,"（三）"],[-1,10297,"\n```\n\n\n### （三）获取list集合\n\n"],[1,11025,"\n |\n\n# "],[-1,11025,"第一种方式：\n"],[1,11044,"获"],[-1,11044,"\n"],[1,11426,"p"],[-1,11426,"\n"],[1,11434,"01/cliage05 g) "],[-1,11434,"第"],[1,11439," *val*"],[-1,11439,"：value 值为 List 对象名；\n"],[1,11471,"*"],[-1,11471,"\n"],[1,11753,"p"],[-1,11753,"\n"],[1,11761,"01/clip_ig"],[-1,11761,"第三种方式：最常用\n"],[1,11783,"e"],[-1,11783,"\n"],[1,12213,"i"],[-1,12213,"\n"],[1,12217,"p"],[-1,12219,"\n"],[1,12223,"p"],[-1,12223,"\n"],[1,12400,"g\n)\n\n因（四）为值是从 C"],[-1,12400,"\n\n### （四）其他操作\n\n"],[1,12441,"te"],[-1,12441,"\n\n"],[1,12592,"p"],[-1,12592,"\n"],[1,12596,"p_ e064 )\n\n**2** **"],[1,12598,"*"],[-1,12598," push 方法向值栈放数据，获取方法："],[1,12672,"0iage jpg) "],[1,12673,"****"],[1,12674,"****"],[1,12677,"****s*置"],[-1,12677," push 方法设置值，没有"],[1,12700,"**"],[1,12701,"\n**"],[1,12702,"****"],[1,12703,"****"],[-1,12705,"值栈"],[-1,12708,"数据"],[-1,12713,"向值栈放"],[-1,12725,"，数组名称 top，根据数组获取值"],[1,12800,"\n"],[-1,12800,"\""],[-1,12803,"\n"],[1,12809,"1/cli八、 p_ima可以ge068."],[-1,12809,"\n## 八、 EL表达式可以获取值栈数据"],[1,12833," -L表达 栈数据（为什么）\n对* **Valuek.j \n**首先加 `***** **"],[-1,12833,"\n- EL 表达式获取域对象值\n首先加上标签头：`<%@ "],[1,12868,"**"],[1,12869,"**"],[1,12874,"****"],[-1,12883,"va.s"],[-1,12888,"n"],[1,12897,"le**pf\"****c****\"%*"],[-1,12897,"/jstl/core\"prefix=\"c\"%>`\n然后使用 foreach\n"],[1,13107,"*- </c:forEac\n\n**2** **"],[-1,13107,"\n- "],[-1,13112,"对象里面"],[1,13120,"****"],[-1,13120,"setA"],[1,13132,"****取值**- "],[-1,13132,"方法，获取值使用getAtt"],[1,13150," **方法**\n ** **底层增*"],[-1,13150,"te方法\n\n- 底层增强 "],[1,13170,"****"],[-1,13171,"对象里面"],[1,13177,"**gtte****"],[-1,13177,"法：getAttribute 方法"],[1,13196,"**"],[1,13198,"****"],[1,13202,"****"],[1,13204,"e*取"],[-1,13204,"quest域获取值，如果"],[1,13220,"**\n\n**"],[-1,13220,"直接返回\n"],[1,13227,"****"],[1,13231,"****"],[1,13238,"****"],[-1,13241,"不到"],[1,13245,"/cli九、p_image072.jpg)\n（一）\n |"],[-1,13245,"到值栈中把值获取出来，把值放到域对象里面\n\n\n## 九、OGNL的#、%使用\n\n### （一）#使用"],[1,13319," "],[-1,13319,"\n"],[1,13550,"O"],[-1,13550,"\n"],[1,13901,"/"],[-1,13901,"\n"],[1,14051,"clip"],[-1,14051,"### "],[1,14058,"_imag-  在# "],[1,14063,"**1** **标标签**\n\n***1******s"],[-1,14063,"-  在struts2标签中表单标签\n在strut"],[1,14090,"****"],[1,14093,"***"],[-1,14093,"面使用"],[1,14108,"*str****"],[-1,14108,"在struts2"],[1,14121,"*nl****表/"],[-1,14121,"面使用ognl表达式不识别，只有%之后才会识别。\n"],[1,14205,"\n\nclip_image077.jpg)\n\n |"]],[14205,14205],[7348,7348]]],[1570095914468,["GJX@GJXAIOU",[[1,14148,"%-- <input type=\"text\" name=\"name\" value=\"${req }\"/> --%> <"],[-1,14164," "],[-1,14166," "],[-1,14183," "],[-1,14185," "],[1,14203,"></s:textfield"]],[14147,14204],[14273,14273]]],[1570095927012,["GJX@GJXAIOU",[[-1,14148,"%-- <input type=\"text\" name=\"name\" value=\"${req }\"/> --%> <"]],[14147,14206],[14147,14147]]],[1570095929740,["GJX@GJXAIOU",[[1,14215,"x"]],[14215,14215],[14216,14216]]],[1570095930392,["GJX@GJXAIOU",[[-1,14215,"x"]],[14216,14216],[14215,14215]]],[1570095934133,["GJX@GJXAIOU",[[1,14215,"相当于一起拿的"]],[14215,14215],[14222,14222]]],[1570095934920,["GJX@GJXAIOU",[[-1,14219,"起拿的"]],[14222,14222],[14219,14219]]],[1570095935430,["GJX@GJXAIOU",[[1,14219,"的"]],[14219,14219],[14220,14220]]],[1570095936462,["GJX@GJXAIOU",[[-1,14218,"一的"]],[14220,14220],[14218,14218]]],[1570095939596,["GJX@GJXAIOU",[[1,14218,"以前的：``"]],[14218,14218],[14224,14224]]],[1570095940672,["GJX@GJXAIOU",[[1,14223,"<%-- <input type=\"text\" name=\"name\" value=\"${req }\"/> --%> "]],[14223,14223],[14282,14282]]],[1570095943864,["GJX@GJXAIOU",[[-1,14224,"%-- <"]],[14223,14228],[14223,14223]]],[1570095946304,["GJX@GJXAIOU",[[-1,14271," --%> "]],[14271,14277],[14271,14271]]],[1570095948346,["GJX@GJXAIOU",[[-1,14274,"## 案例-列表功能改造（值栈）\n\n| \n\n![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image079.jpg)\n\n![](file:///C:/Users/gjx16/AppData/Local/Temp/msohtmlclip1/01/clip_image081.jpg)\n\n |"]],[14274,14462],[14274,14274]]],[1570100553800,[null,[[-1,7348,"u"],[1,7349,"\n"],[-1,7760,"age"],[1,7763,"```"],[-1,7793,"`"],[1,7794,"\n"],[-1,7883,"`"],[-1,7886," |"],[-1,7889,"\n（三）"],[1,7897,"（三）"],[1,7905,"集合"],[-1,7907,"*  **********变\n\n*  ****生*****方\n\n*"],[1,7940,"第一步  定义list集合变量\n第二步  生成变量的get方法\n第三步"],[-1,7942,"****"],[-1,7951,"********集"],[1,7960,"法里面向list集合设"],[1,7962,"\n\n"],[-1,8757,"|#\n七、\n"],[1,8766,"七、"],[-1,8771,"* ****str*** 和 ***+***组合*"],[1,8796,"数据\n\n使用struts2的标签 和 ognl"],[1,8799,"组合"],[1,8801,"值栈数据"],[-1,8807,"***）"],[-1,8830,"****"],[1,8834,"ognl"],[1,8836,"式”/>"],[-1,8839," |\n\n（一）"],[1,8850,"（一）"],[1,8853,"符串\n\n"],[-1,9517," |\n\n（二）"],[1,9528,"（二）"],[1,9530,"对象\n\n"],[-1,9556,"* **"],[1,9562,"栈放"],[1,9563,"象\n"],[-1,9586,"象"],[1,9587,"\n"],[-1,9997,")"],[1,9998,"\n"],[-1,10005,"* **"],[1,10012,"中获"],[1,10013,"值\n"],[-1,10025,"值"],[1,10026,"\n"],[-1,10031,">\n:property>\n\n    <br"],[-1,10245,")"],[1,10246,"\n"],[-1,10308,"（三）"],[1,10321,"\n```\n\n\n### （三）获取list集合\n\n"],[-1,11025,"\n |\n\n# "],[1,11032,"第一种方式：\n"],[-1,11044,"获"],[1,11045,"\n"],[-1,11426,"p"],[1,11427,"\n"],[-1,11434,"01/cliage05 g) "],[1,11449,"第"],[-1,11453," *val*"],[1,11459,"：value 值为 List 对象名；\n"],[-1,11471,"*"],[1,11472,"\n"],[-1,11753,"p"],[1,11754,"\n"],[-1,11761,"01/clip_ig"],[1,11771,"第三种方式：最常用\n"],[-1,11783,"e"],[1,11784,"\n"],[-1,12213,"i"],[1,12214,"\n"],[-1,12217,"p"],[1,12220,"\n"],[-1,12223,"p"],[1,12224,"\n"],[-1,12400,"g\n)\n\n因（四）为值是从 C"],[1,12415,"\n\n### （四）其他操作\n\n"],[-1,12441,"te"],[1,12443,"\n\n"],[-1,12592,"p"],[1,12593,"\n"],[-1,12596,"p_ e064 )\n\n**2** **"],[-1,12617,"*"],[1,12618," push 方法向值栈放数据，获取方法："],[-1,12672,"0iage jpg) "],[-1,12684,"****"],[-1,12689,"****"],[-1,12696,"****s*置"],[1,12703," push 方法设置值，没有"],[-1,12712,"**"],[-1,12715,"\n**"],[-1,12719,"****"],[-1,12724,"****"],[1,12730,"值栈"],[1,12731,"数据"],[1,12734,"向值栈放"],[1,12742,"，数组名称 top，根据数组获取值"],[-1,12800,"\n"],[1,12801,"\""],[1,12803,"\n"],[-1,12808,"1/cli八、 p_ima可以ge068."],[1,12829,"\n## 八、 EL表达式可以获取值栈数据"],[-1,12833," -L表达 栈数据（为什么）\n对* **Valuek.j \n**首先加 `***** **"],[1,12878,"\n- EL 表达式获取域对象值\n首先加上标签头：`<%@ "],[-1,12884,"**"],[-1,12887,"**"],[-1,12894,"****"],[1,12907,"va.s"],[1,12908,"n"],[-1,12916,"le**pf\"****c****\"%*"],[1,12935,"/jstl/core\"prefix=\"c\"%>`\n然后使用 foreach\n"],[-1,13107,"*- </c:forEac\n\n**2** **"],[1,13130,"\n- "],[1,13132,"对象里面"],[-1,13136,"****"],[1,13140,"setA"],[-1,13148,"****取值**- "],[1,13158,"方法，获取值使用getAtt"],[-1,13162," **方法**\n ** **底层增*"],[1,13180,"te方法\n\n- 底层增强 "],[-1,13187,"****"],[1,13192,"对象里面"],[-1,13194,"**gtte****"],[1,13204,"法：getAttribute 方法"],[-1,13206,"**"],[-1,13210,"****"],[-1,13218,"****"],[-1,13224,"e*取"],[1,13227,"quest域获取值，如果"],[-1,13231,"**\n\n**"],[1,13237,"直接返回\n"],[-1,13239,"****"],[-1,13247,"****"],[-1,13258,"****"],[1,13265,"不到"],[-1,13267,"/cli九、p_image072.jpg)\n（一）\n |"],[1,13295,"到值栈中把值获取出来，把值放到域对象里面\n\n\n## 九、OGNL的#、%使用\n\n### （一）#使用"],[-1,13319," "],[1,13320,"\n"],[-1,13550,"O"],[1,13551,"\n"],[-1,13901,"/"],[1,13902,"\n"],[-1,14051,"clip"],[1,14055,"### "],[-1,14058,"_imag-  在# "],[-1,14074,"**1** **标标签**\n\n***1******s"],[1,14100,"-  在struts2标签中表单标签\n在strut"],[-1,14102,"****"],[-1,14109,"***"],[1,14112,"面使用"],[-1,14124,"*str****"],[1,14132,"在struts2"],[-1,14137,"*nl****表/"],[1,14146,"面使用ognl表达式不识别，只有%之后才会识别。\n"],[-1,14274,"1/clip_image081.jpg)\n\n |"]],[7348,7348],[14274,14274]]],[1570100553800,[null,[[1,7348,"u"],[-1,7348,"\n"],[1,7760,"age"],[-1,7760,"```"],[1,7793,"`"],[-1,7793,"\n"],[1,7883,"`"],[1,7885," |"],[1,7886,"\n（三）"],[-1,7890,"（三）"],[-1,7901,"集合"],[1,7905,"*  **********变\n\n*  ****生*****方\n\n*"],[-1,7905,"第一步  定义list集合变量\n第二步  生成变量的get方法\n第三步"],[1,7942,"****"],[1,7947,"********集"],[-1,7947,"法里面向list集合设"],[-1,7960,"\n\n"],[1,8757,"|#\n七、\n"],[-1,8760,"七、"],[1,8767,"* ****str*** 和 ***+***组合*"],[-1,8767,"数据\n\n使用struts2的标签 和 ognl"],[-1,8793,"组合"],[-1,8797,"值栈数据"],[1,8807,"***）"],[1,8826,"****"],[-1,8826,"ognl"],[-1,8832,"式”/>"],[1,8839," |\n\n（一）"],[-1,8843,"（一）"],[-1,8849,"符串\n\n"],[1,9517," |\n\n（二）"],[-1,9521,"（二）"],[-1,9526,"对象\n\n"],[1,9556,"* **"],[-1,9558,"栈放"],[-1,9561,"象\n"],[1,9586,"象"],[-1,9586,"\n"],[1,9997,")"],[-1,9997,"\n"],[1,10005,"* **"],[-1,10008,"中获"],[-1,10011,"值\n"],[1,10025,"值"],[-1,10025,"\n"],[1,10031,">\n:property>\n\n    <br"],[1,10224,")"],[-1,10224,"\n"],[1,10287,"（三）"],[-1,10297,"\n```\n\n\n### （三）获取list集合\n\n"],[1,11025,"\n |\n\n# "],[-1,11025,"第一种方式：\n"],[1,11044,"获"],[-1,11044,"\n"],[1,11426,"p"],[-1,11426,"\n"],[1,11434,"01/cliage05 g) "],[-1,11434,"第"],[1,11439," *val*"],[-1,11439,"：value 值为 List 对象名；\n"],[1,11471,"*"],[-1,11471,"\n"],[1,11753,"p"],[-1,11753,"\n"],[1,11761,"01/clip_ig"],[-1,11761,"第三种方式：最常用\n"],[1,11783,"e"],[-1,11783,"\n"],[1,12213,"i"],[-1,12213,"\n"],[1,12217,"p"],[-1,12219,"\n"],[1,12223,"p"],[-1,12223,"\n"],[1,12400,"g\n)\n\n因（四）为值是从 C"],[-1,12400,"\n\n### （四）其他操作\n\n"],[1,12441,"te"],[-1,12441,"\n\n"],[1,12592,"p"],[-1,12592,"\n"],[1,12596,"p_ e064 )\n\n**2** **"],[1,12598,"*"],[-1,12598," push 方法向值栈放数据，获取方法："],[1,12672,"0iage jpg) "],[1,12673,"****"],[1,12674,"****"],[1,12677,"****s*置"],[-1,12677," push 方法设置值，没有"],[1,12700,"**"],[1,12701,"\n**"],[1,12702,"****"],[1,12703,"****"],[-1,12705,"值栈"],[-1,12708,"数据"],[-1,12713,"向值栈放"],[-1,12725,"，数组名称 top，根据数组获取值"],[1,12800,"\n"],[-1,12800,"\""],[-1,12803,"\n"],[1,12809,"1/cli八、 p_ima可以ge068."],[-1,12809,"\n## 八、 EL表达式可以获取值栈数据"],[1,12833," -L表达 栈数据（为什么）\n对* **Valuek.j \n**首先加 `***** **"],[-1,12833,"\n- EL 表达式获取域对象值\n首先加上标签头：`<%@ "],[1,12868,"**"],[1,12869,"**"],[1,12874,"****"],[-1,12883,"va.s"],[-1,12888,"n"],[1,12897,"le**pf\"****c****\"%*"],[-1,12897,"/jstl/core\"prefix=\"c\"%>`\n然后使用 foreach\n"],[1,13107,"*- </c:forEac\n\n**2** **"],[-1,13107,"\n- "],[-1,13112,"对象里面"],[1,13120,"****"],[-1,13120,"setA"],[1,13132,"****取值**- "],[-1,13132,"方法，获取值使用getAtt"],[1,13150," **方法**\n ** **底层增*"],[-1,13150,"te方法\n\n- 底层增强 "],[1,13170,"****"],[-1,13171,"对象里面"],[1,13177,"**gtte****"],[-1,13177,"法：getAttribute 方法"],[1,13196,"**"],[1,13198,"****"],[1,13202,"****"],[1,13204,"e*取"],[-1,13204,"quest域获取值，如果"],[1,13220,"**\n\n**"],[-1,13220,"直接返回\n"],[1,13227,"****"],[1,13231,"****"],[1,13238,"****"],[-1,13241,"不到"],[1,13245,"/cli九、p_image072.jpg)\n（一）\n |"],[-1,13245,"到值栈中把值获取出来，把值放到域对象里面\n\n\n## 九、OGNL的#、%使用\n\n### （一）#使用"],[1,13319," "],[-1,13319,"\n"],[1,13550,"O"],[-1,13550,"\n"],[1,13901,"/"],[-1,13901,"\n"],[1,14051,"clip"],[-1,14051,"### "],[1,14058,"_imag-  在# "],[1,14063,"**1** **标标签**\n\n***1******s"],[-1,14063,"-  在struts2标签中表单标签\n在strut"],[1,14090,"****"],[1,14093,"***"],[-1,14093,"面使用"],[1,14108,"*str****"],[-1,14108,"在struts2"],[1,14121,"*nl****表/"],[-1,14121,"面使用ognl表达式不识别，只有%之后才会识别。\n"],[1,14274,"1/clip_image081.jpg)\n\n |"]],[14274,14274],[7348,7348]]],[1570100534714,["GJX@GJXAIOU",[[1,939,"()"]],[939,939],[941,941]]],[1570100537372,["GJX@GJXAIOU",[[-1,939,"()"]],[941,941],[939,939]]],[1570100538299,["GJX@GJXAIOU",[[1,939,"()"]],[939,939],[941,941]]],[1570100539321,["GJX@GJXAIOU",[[-1,939,"()"]],[941,941],[939,939]]],[1570100540440,["GJX@GJXAIOU",[[1,939,"（）"]],[939,939],[941,941]]],[1570100549612,["GJX@GJXAIOU",[[1,940,"Object-Graph "]],[940,940],[953,953]]],[1570100613799,[null,[[-1,7363,"u"],[1,7364,"\n"],[-1,7775,"age"],[1,7778,"```"],[-1,7808,"`"],[1,7809,"\n"],[-1,7898,"`"],[-1,7901," |"],[-1,7904,"\n（三）"],[1,7912,"（三）"],[1,7920,"集合"],[-1,7922,"*  **********变\n\n*  ****生*****方\n\n*"],[1,7955,"第一步  定义list集合变量\n第二步  生成变量的get方法\n第三步"],[-1,7957,"****"],[-1,7966,"********集"],[1,7975,"法里面向list集合设"],[1,7977,"\n\n"],[-1,8772,"|#\n七、\n"],[1,8781,"七、"],[-1,8786,"* ****str*** 和 ***+***组合*"],[1,8811,"数据\n\n使用struts2的标签 和 ognl"],[1,8814,"组合"],[1,8816,"值栈数据"],[-1,8822,"***）"],[-1,8845,"****"],[1,8849,"ognl"],[1,8851,"式”/>"],[-1,8854," |\n\n（一）"],[1,8865,"（一）"],[1,8868,"符串\n\n"],[-1,9532," |\n\n（二）"],[1,9543,"（二）"],[1,9545,"对象\n\n"],[-1,9571,"* **"],[1,9577,"栈放"],[1,9578,"象\n"],[-1,9601,"象"],[1,9602,"\n"],[-1,10012,")"],[1,10013,"\n"],[-1,10020,"* **"],[1,10027,"中获"],[1,10028,"值\n"],[-1,10040,"值"],[1,10041,"\n"],[-1,10046,">\n:property>\n\n    <br"],[-1,10260,")"],[1,10261,"\n"],[-1,10323,"（三）"],[1,10336,"\n```\n\n\n### （三）获取list集合\n\n"],[-1,11040,"\n |\n\n# "],[1,11047,"第一种方式：\n"],[-1,11059,"获"],[1,11060,"\n"],[-1,11441,"p"],[1,11442,"\n"],[-1,11449,"01/cliage05 g) "],[1,11464,"第"],[-1,11468," *val*"],[1,11474,"：value 值为 List 对象名；\n"],[-1,11486,"*"],[1,11487,"\n"],[-1,11768,"p"],[1,11769,"\n"],[-1,11776,"01/clip_ig"],[1,11786,"第三种方式：最常用\n"],[-1,11798,"e"],[1,11799,"\n"],[-1,12228,"i"],[1,12229,"\n"],[-1,12232,"p"],[1,12235,"\n"],[-1,12238,"p"],[1,12239,"\n"],[-1,12415,"g\n)\n\n因（四）为值是从 C"],[1,12430,"\n\n### （四）其他操作\n\n"],[-1,12456,"te"],[1,12458,"\n\n"],[-1,12607,"p"],[1,12608,"\n"],[-1,12611,"p_ e064 )\n\n**2** **"],[-1,12632,"*"],[1,12633," push 方法向值栈放数据，获取方法："],[-1,12687,"0iage jpg) "],[-1,12699,"****"],[-1,12704,"****"],[-1,12711,"****s*置"],[1,12718," push 方法设置值，没有"],[-1,12727,"**"],[-1,12730,"\n**"],[-1,12734,"****"],[-1,12739,"****"],[1,12745,"值栈"],[1,12746,"数据"],[1,12749,"向值栈放"],[1,12757,"，数组名称 top，根据数组获取值"],[-1,12815,"\n"],[1,12816,"\""],[1,12818,"\n"],[-1,12823,"1/cli八、 p_ima可以ge068."],[1,12844,"\n## 八、 EL表达式可以获取值栈数据"],[-1,12848," -L表达 栈数据（为什么）\n对* **Valuek.j \n**首先加 `***** **"],[1,12893,"\n- EL 表达式获取域对象值\n首先加上标签头：`<%@ "],[-1,12899,"**"],[-1,12902,"**"],[-1,12909,"****"],[1,12922,"va.s"],[1,12923,"n"],[-1,12931,"le**pf\"****c****\"%*"],[1,12950,"/jstl/core\"prefix=\"c\"%>`\n然后使用 foreach\n"],[-1,13122,"*- </c:forEac\n\n**2** **"],[1,13145,"\n- "],[1,13147,"对象里面"],[-1,13151,"****"],[1,13155,"setA"],[-1,13163,"****取值**- "],[1,13173,"方法，获取值使用getAtt"],[-1,13177," **方法**\n ** **底层增*"],[1,13195,"te方法\n\n- 底层增强 "],[-1,13202,"****"],[1,13207,"对象里面"],[-1,13209,"**gtte****"],[1,13219,"法：getAttribute 方法"],[-1,13221,"**"],[-1,13225,"****"],[-1,13233,"****"],[-1,13239,"e*取"],[1,13242,"quest域获取值，如果"],[-1,13246,"**\n\n**"],[1,13252,"直接返回\n"],[-1,13254,"****"],[-1,13262,"****"],[-1,13273,"****"],[1,13280,"不到"],[-1,13282,"/cli九、p_image072.jpg)\n（一）\n |"],[1,13310,"到值栈中把值获取出来，把值放到域对象里面\n\n\n## 九、OGNL的#、%使用\n\n### （一）#使用"],[-1,13334," "],[1,13335,"\n"],[-1,13565,"O"],[1,13566,"\n"],[-1,13916,"/"],[1,13917,"\n"],[-1,14066,"clip"],[1,14070,"### "],[-1,14073,"_imag-  在# "],[-1,14089,"**1** **标标签**\n\n***1******s"],[1,14115,"-  在struts2标签中表单标签\n在strut"],[-1,14117,"****"],[-1,14124,"***"],[1,14127,"面使用"],[-1,14139,"*str****"],[1,14147,"在struts2"],[-1,14152,"*nl****表/"],[1,14161,"面使用ognl表达式不识别，只有%之后才会识别。\n"],[-1,14289,"1/clip_image081.jpg)\n\n |"]],[7363,7363],[14289,14289]]],[1570100613799,[null,[[1,7363,"u"],[-1,7363,"\n"],[1,7775,"age"],[-1,7775,"```"],[1,7808,"`"],[-1,7808,"\n"],[1,7898,"`"],[1,7900," |"],[1,7901,"\n（三）"],[-1,7905,"（三）"],[-1,7916,"集合"],[1,7920,"*  **********变\n\n*  ****生*****方\n\n*"],[-1,7920,"第一步  定义list集合变量\n第二步  生成变量的get方法\n第三步"],[1,7957,"****"],[1,7962,"********集"],[-1,7962,"法里面向list集合设"],[-1,7975,"\n\n"],[1,8772,"|#\n七、\n"],[-1,8775,"七、"],[1,8782,"* ****str*** 和 ***+***组合*"],[-1,8782,"数据\n\n使用struts2的标签 和 ognl"],[-1,8808,"组合"],[-1,8812,"值栈数据"],[1,8822,"***）"],[1,8841,"****"],[-1,8841,"ognl"],[-1,8847,"式”/>"],[1,8854," |\n\n（一）"],[-1,8858,"（一）"],[-1,8864,"符串\n\n"],[1,9532," |\n\n（二）"],[-1,9536,"（二）"],[-1,9541,"对象\n\n"],[1,9571,"* **"],[-1,9573,"栈放"],[-1,9576,"象\n"],[1,9601,"象"],[-1,9601,"\n"],[1,10012,")"],[-1,10012,"\n"],[1,10020,"* **"],[-1,10023,"中获"],[-1,10026,"值\n"],[1,10040,"值"],[-1,10040,"\n"],[1,10046,">\n:property>\n\n    <br"],[1,10239,")"],[-1,10239,"\n"],[1,10302,"（三）"],[-1,10312,"\n```\n\n\n### （三）获取list集合\n\n"],[1,11040,"\n |\n\n# "],[-1,11040,"第一种方式：\n"],[1,11059,"获"],[-1,11059,"\n"],[1,11441,"p"],[-1,11441,"\n"],[1,11449,"01/cliage05 g) "],[-1,11449,"第"],[1,11454," *val*"],[-1,11454,"：value 值为 List 对象名；\n"],[1,11486,"*"],[-1,11486,"\n"],[1,11768,"p"],[-1,11768,"\n"],[1,11776,"01/clip_ig"],[-1,11776,"第三种方式：最常用\n"],[1,11798,"e"],[-1,11798,"\n"],[1,12228,"i"],[-1,12228,"\n"],[1,12232,"p"],[-1,12234,"\n"],[1,12238,"p"],[-1,12238,"\n"],[1,12415,"g\n)\n\n因（四）为值是从 C"],[-1,12415,"\n\n### （四）其他操作\n\n"],[1,12456,"te"],[-1,12456,"\n\n"],[1,12607,"p"],[-1,12607,"\n"],[1,12611,"p_ e064 )\n\n**2** **"],[1,12613,"*"],[-1,12613," push 方法向值栈放数据，获取方法："],[1,12687,"0iage jpg) "],[1,12688,"****"],[1,12689,"****"],[1,12692,"****s*置"],[-1,12692," push 方法设置值，没有"],[1,12715,"**"],[1,12716,"\n**"],[1,12717,"****"],[1,12718,"****"],[-1,12720,"值栈"],[-1,12723,"数据"],[-1,12728,"向值栈放"],[-1,12740,"，数组名称 top，根据数组获取值"],[1,12815,"\n"],[-1,12815,"\""],[-1,12818,"\n"],[1,12824,"1/cli八、 p_ima可以ge068."],[-1,12824,"\n## 八、 EL表达式可以获取值栈数据"],[1,12848," -L表达 栈数据（为什么）\n对* **Valuek.j \n**首先加 `***** **"],[-1,12848,"\n- EL 表达式获取域对象值\n首先加上标签头：`<%@ "],[1,12883,"**"],[1,12884,"**"],[1,12889,"****"],[-1,12898,"va.s"],[-1,12903,"n"],[1,12912,"le**pf\"****c****\"%*"],[-1,12912,"/jstl/core\"prefix=\"c\"%>`\n然后使用 foreach\n"],[1,13122,"*- </c:forEac\n\n**2** **"],[-1,13122,"\n- "],[-1,13127,"对象里面"],[1,13135,"****"],[-1,13135,"setA"],[1,13147,"****取值**- "],[-1,13147,"方法，获取值使用getAtt"],[1,13165," **方法**\n ** **底层增*"],[-1,13165,"te方法\n\n- 底层增强 "],[1,13185,"****"],[-1,13186,"对象里面"],[1,13192,"**gtte****"],[-1,13192,"法：getAttribute 方法"],[1,13211,"**"],[1,13213,"****"],[1,13217,"****"],[1,13219,"e*取"],[-1,13219,"quest域获取值，如果"],[1,13235,"**\n\n**"],[-1,13235,"直接返回\n"],[1,13242,"****"],[1,13246,"****"],[1,13253,"****"],[-1,13256,"不到"],[1,13260,"/cli九、p_image072.jpg)\n（一）\n |"],[-1,13260,"到值栈中把值获取出来，把值放到域对象里面\n\n\n## 九、OGNL的#、%使用\n\n### （一）#使用"],[1,13334," "],[-1,13334,"\n"],[1,13565,"O"],[-1,13565,"\n"],[1,13916,"/"],[-1,13916,"\n"],[1,14066,"clip"],[-1,14066,"### "],[1,14073,"_imag-  在# "],[1,14078,"**1** **标标签**\n\n***1******s"],[-1,14078,"-  在struts2标签中表单标签\n在strut"],[1,14105,"****"],[1,14108,"***"],[-1,14108,"面使用"],[1,14123,"*str****"],[-1,14123,"在struts2"],[1,14136,"*nl****表/"],[-1,14136,"面使用ognl表达式不识别，只有%之后才会识别。\n"],[1,14289,"1/clip_image081.jpg)\n\n |"]],[14289,14289],[7363,7363]]],[1570100558095,["GJX@GJXAIOU",[[1,953,"Navigation Language"]],[953,953],[972,972]]],[1570100593283,["GJX@GJXAIOU",[[1,973,"对象图导航语言，"]],[973,973],[981,981]]],[1570100598967,["GJX@GJXAIOU",[[1,987,"语言"]],[987,987],[989,989]]],[1570100733797,[null,[[-1,7392,"u"],[1,7393,"\n"],[-1,7804,"age"],[1,7807,"```"],[-1,7837,"`"],[1,7838,"\n"],[-1,7927,"`"],[-1,7930," |"],[-1,7933,"\n（三）"],[1,7941,"（三）"],[1,7949,"集合"],[-1,7951,"*  **********变\n\n*  ****生*****方\n\n*"],[1,7984,"第一步  定义list集合变量\n第二步  生成变量的get方法\n第三步"],[-1,7986,"****"],[-1,7995,"********集"],[1,8004,"法里面向list集合设"],[1,8006,"\n\n"],[-1,8801,"|#\n七、\n"],[1,8810,"七、"],[-1,8815,"* ****str*** 和 ***+***组合*"],[1,8840,"数据\n\n使用struts2的标签 和 ognl"],[1,8843,"组合"],[1,8845,"值栈数据"],[-1,8851,"***）"],[-1,8874,"****"],[1,8878,"ognl"],[1,8880,"式”/>"],[-1,8883," |\n\n（一）"],[1,8894,"（一）"],[1,8897,"符串\n\n"],[-1,9561," |\n\n（二）"],[1,9572,"（二）"],[1,9574,"对象\n\n"],[-1,9600,"* **"],[1,9606,"栈放"],[1,9607,"象\n"],[-1,9630,"象"],[1,9631,"\n"],[-1,10041,")"],[1,10042,"\n"],[-1,10049,"* **"],[1,10056,"中获"],[1,10057,"值\n"],[-1,10069,"值"],[1,10070,"\n"],[-1,10075,">\n:property>\n\n    <br"],[-1,10289,")"],[1,10290,"\n"],[-1,10352,"（三）"],[1,10365,"\n```\n\n\n### （三）获取list集合\n\n"],[-1,11069,"\n |\n\n# "],[1,11076,"第一种方式：\n"],[-1,11088,"获"],[1,11089,"\n"],[-1,11470,"p"],[1,11471,"\n"],[-1,11478,"01/cliage05 g) "],[1,11493,"第"],[-1,11497," *val*"],[1,11503,"：value 值为 List 对象名；\n"],[-1,11515,"*"],[1,11516,"\n"],[-1,11797,"p"],[1,11798,"\n"],[-1,11805,"01/clip_ig"],[1,11815,"第三种方式：最常用\n"],[-1,11827,"e"],[1,11828,"\n"],[-1,12257,"i"],[1,12258,"\n"],[-1,12261,"p"],[1,12264,"\n"],[-1,12267,"p"],[1,12268,"\n"],[-1,12444,"g\n)\n\n因（四）为值是从 C"],[1,12459,"\n\n### （四）其他操作\n\n"],[-1,12485,"te"],[1,12487,"\n\n"],[-1,12636,"p"],[1,12637,"\n"],[-1,12640,"p_ e064 )\n\n**2** **"],[-1,12661,"*"],[1,12662," push 方法向值栈放数据，获取方法："],[-1,12716,"0iage jpg) "],[-1,12728,"****"],[-1,12733,"****"],[-1,12740,"****s*置"],[1,12747," push 方法设置值，没有"],[-1,12756,"**"],[-1,12759,"\n**"],[-1,12763,"****"],[-1,12768,"****"],[1,12774,"值栈"],[1,12775,"数据"],[1,12778,"向值栈放"],[1,12786,"，数组名称 top，根据数组获取值"],[-1,12844,"\n"],[1,12845,"\""],[1,12847,"\n"],[-1,12852,"1/cli八、 p_ima可以ge068."],[1,12873,"\n## 八、 EL表达式可以获取值栈数据"],[-1,12877," -L表达 栈数据（为什么）\n对* **Valuek.j \n**首先加 `***** **"],[1,12922,"\n- EL 表达式获取域对象值\n首先加上标签头：`<%@ "],[-1,12928,"**"],[-1,12931,"**"],[-1,12938,"****"],[1,12951,"va.s"],[1,12952,"n"],[-1,12960,"le**pf\"****c****\"%*"],[1,12979,"/jstl/core\"prefix=\"c\"%>`\n然后使用 foreach\n"],[-1,13151,"*- </c:forEac\n\n**2** **"],[1,13174,"\n- "],[1,13176,"对象里面"],[-1,13180,"****"],[1,13184,"setA"],[-1,13192,"****取值**- "],[1,13202,"方法，获取值使用getAtt"],[-1,13206," **方法**\n ** **底层增*"],[1,13224,"te方法\n\n- 底层增强 "],[-1,13231,"****"],[1,13236,"对象里面"],[-1,13238,"**gtte****"],[1,13248,"法：getAttribute 方法"],[-1,13250,"**"],[-1,13254,"****"],[-1,13262,"****"],[-1,13268,"e*取"],[1,13271,"quest域获取值，如果"],[-1,13275,"**\n\n**"],[1,13281,"直接返回\n"],[-1,13283,"****"],[-1,13291,"****"],[-1,13302,"****"],[1,13309,"不到"],[-1,13311,"/cli九、p_image072.jpg)\n（一）\n |"],[1,13339,"到值栈中把值获取出来，把值放到域对象里面\n\n\n## 九、OGNL的#、%使用\n\n### （一）#使用"],[-1,13363," "],[1,13364,"\n"],[-1,13594,"O"],[1,13595,"\n"],[-1,13945,"/"],[1,13946,"\n"],[-1,14095,"clip"],[1,14099,"### "],[-1,14102,"_imag-  在# "],[-1,14118,"**1** **标标签**\n\n***1******s"],[1,14144,"-  在struts2标签中表单标签\n在strut"],[-1,14146,"****"],[-1,14153,"***"],[1,14156,"面使用"],[-1,14168,"*str****"],[1,14176,"在struts2"],[-1,14181,"*nl****表/"],[1,14190,"面使用ognl表达式不识别，只有%之后才会识别。\n"],[-1,14318,"1/clip_image081.jpg)\n\n |"]],[7392,7392],[14318,14318]]],[1570100733797,[null,[[1,7392,"u"],[-1,7392,"\n"],[1,7804,"age"],[-1,7804,"```"],[1,7837,"`"],[-1,7837,"\n"],[1,7927,"`"],[1,7929," |"],[1,7930,"\n（三）"],[-1,7934,"（三）"],[-1,7945,"集合"],[1,7949,"*  **********变\n\n*  ****生*****方\n\n*"],[-1,7949,"第一步  定义list集合变量\n第二步  生成变量的get方法\n第三步"],[1,7986,"****"],[1,7991,"********集"],[-1,7991,"法里面向list集合设"],[-1,8004,"\n\n"],[1,8801,"|#\n七、\n"],[-1,8804,"七、"],[1,8811,"* ****str*** 和 ***+***组合*"],[-1,8811,"数据\n\n使用struts2的标签 和 ognl"],[-1,8837,"组合"],[-1,8841,"值栈数据"],[1,8851,"***）"],[1,8870,"****"],[-1,8870,"ognl"],[-1,8876,"式”/>"],[1,8883," |\n\n（一）"],[-1,8887,"（一）"],[-1,8893,"符串\n\n"],[1,9561," |\n\n（二）"],[-1,9565,"（二）"],[-1,9570,"对象\n\n"],[1,9600,"* **"],[-1,9602,"栈放"],[-1,9605,"象\n"],[1,9630,"象"],[-1,9630,"\n"],[1,10041,")"],[-1,10041,"\n"],[1,10049,"* **"],[-1,10052,"中获"],[-1,10055,"值\n"],[1,10069,"值"],[-1,10069,"\n"],[1,10075,">\n:property>\n\n    <br"],[1,10268,")"],[-1,10268,"\n"],[1,10331,"（三）"],[-1,10341,"\n```\n\n\n### （三）获取list集合\n\n"],[1,11069,"\n |\n\n# "],[-1,11069,"第一种方式：\n"],[1,11088,"获"],[-1,11088,"\n"],[1,11470,"p"],[-1,11470,"\n"],[1,11478,"01/cliage05 g) "],[-1,11478,"第"],[1,11483," *val*"],[-1,11483,"：value 值为 List 对象名；\n"],[1,11515,"*"],[-1,11515,"\n"],[1,11797,"p"],[-1,11797,"\n"],[1,11805,"01/clip_ig"],[-1,11805,"第三种方式：最常用\n"],[1,11827,"e"],[-1,11827,"\n"],[1,12257,"i"],[-1,12257,"\n"],[1,12261,"p"],[-1,12263,"\n"],[1,12267,"p"],[-1,12267,"\n"],[1,12444,"g\n)\n\n因（四）为值是从 C"],[-1,12444,"\n\n### （四）其他操作\n\n"],[1,12485,"te"],[-1,12485,"\n\n"],[1,12636,"p"],[-1,12636,"\n"],[1,12640,"p_ e064 )\n\n**2** **"],[1,12642,"*"],[-1,12642," push 方法向值栈放数据，获取方法："],[1,12716,"0iage jpg) "],[1,12717,"****"],[1,12718,"****"],[1,12721,"****s*置"],[-1,12721," push 方法设置值，没有"],[1,12744,"**"],[1,12745,"\n**"],[1,12746,"****"],[1,12747,"****"],[-1,12749,"值栈"],[-1,12752,"数据"],[-1,12757,"向值栈放"],[-1,12769,"，数组名称 top，根据数组获取值"],[1,12844,"\n"],[-1,12844,"\""],[-1,12847,"\n"],[1,12853,"1/cli八、 p_ima可以ge068."],[-1,12853,"\n## 八、 EL表达式可以获取值栈数据"],[1,12877," -L表达 栈数据（为什么）\n对* **Valuek.j \n**首先加 `***** **"],[-1,12877,"\n- EL 表达式获取域对象值\n首先加上标签头：`<%@ "],[1,12912,"**"],[1,12913,"**"],[1,12918,"****"],[-1,12927,"va.s"],[-1,12932,"n"],[1,12941,"le**pf\"****c****\"%*"],[-1,12941,"/jstl/core\"prefix=\"c\"%>`\n然后使用 foreach\n"],[1,13151,"*- </c:forEac\n\n**2** **"],[-1,13151,"\n- "],[-1,13156,"对象里面"],[1,13164,"****"],[-1,13164,"setA"],[1,13176,"****取值**- "],[-1,13176,"方法，获取值使用getAtt"],[1,13194," **方法**\n ** **底层增*"],[-1,13194,"te方法\n\n- 底层增强 "],[1,13214,"****"],[-1,13215,"对象里面"],[1,13221,"**gtte****"],[-1,13221,"法：getAttribute 方法"],[1,13240,"**"],[1,13242,"****"],[1,13246,"****"],[1,13248,"e*取"],[-1,13248,"quest域获取值，如果"],[1,13264,"**\n\n**"],[-1,13264,"直接返回\n"],[1,13271,"****"],[1,13275,"****"],[1,13282,"****"],[-1,13285,"不到"],[1,13289,"/cli九、p_image072.jpg)\n（一）\n |"],[-1,13289,"到值栈中把值获取出来，把值放到域对象里面\n\n\n## 九、OGNL的#、%使用\n\n### （一）#使用"],[1,13363," "],[-1,13363,"\n"],[1,13594,"O"],[-1,13594,"\n"],[1,13945,"/"],[-1,13945,"\n"],[1,14095,"clip"],[-1,14095,"### "],[1,14102,"_imag-  在# "],[1,14107,"**1** **标标签**\n\n***1******s"],[-1,14107,"-  在struts2标签中表单标签\n在strut"],[1,14134,"****"],[1,14137,"***"],[-1,14137,"面使用"],[1,14152,"*str****"],[-1,14152,"在struts2"],[1,14165,"*nl****表/"],[-1,14165,"面使用ognl表达式不识别，只有%之后才会识别。\n"],[1,14318,"1/clip_image081.jpg)\n\n |"]],[14318,14318],[7392,7392]]],[1570100678699,["GJX@GJXAIOU",[[1,1168,"\n"]],[1166,1166],[1167,1167]]],[1570100679371,["GJX@GJXAIOU",[[1,1167,"Struts2默认的表达式语言就是OGNL, 它具有以下特点："]],[1167,1167],[1198,1198]]],[1570100683460,["GJX@GJXAIOU",[[1,1167,"- "]],[1167,1167],[1169,1169]]],[1570100685703,["GJX@GJXAIOU",[[1,1176," "]],[1176,1176],[1177,1177]]],[1570100688244,["GJX@GJXAIOU",[[1,1187," "]],[1187,1187],[1188,1188]]],[1570100695632,["GJX@GJXAIOU",[[1,1203,"•\t支持对象 方法调用 。 例如： objN ame. methodName()。\n•\t支持 类静态方法调用和值访问 ， 表达式的格式为＠［类全名（包括包路径）］＠［方法名I值 名］。例如： @java.lang.String@format('foo %s','bar')。\n•\t支持赋值操作和 表达式串联。\n例如： price= 100, discount=O 8, calculatePrice(), 在方法中进行乘法计算会返回80。\n•\t访问OGNL上下文(OGNL context)和ActionContext。\n•\t操作集合对象 。"]],[1203,1203],[1474,1474]]],[1570100697716,["GJX@GJXAIOU",[[1,1475,"\n"]],[1474,1474],[1475,1475]]],[1570100697857,["GJX@GJXAIOU",[[1,1476,"\n"]],[1475,1475],[1476,1476]]],[1570100700720,["GJX@GJXAIOU",[[-1,1203,"•\t"]],[1203,1205],[1203,1203]]],[1570100703336,["GJX@GJXAIOU",[[-1,1243,"•\t"]],[1243,1245],[1243,1243]]],[1570100704633,["GJX@GJXAIOU",[[-1,1337,"•\t"]],[1337,1339],[1337,1337]]],[1570100718529,["GJX@GJXAIOU",[[-1,1287," "]],[1287,1287],[1287,1287]]],[1570100725537,["GJX@GJXAIOU",[[-1,1285,"I"]],[1286,1286],[1285,1285]]],[1570100727260,["GJX@GJXAIOU",[[1,1285,"|"]],[1285,1285],[1286,1286]]],[1570100732081,["GJX@GJXAIOU",[[-1,1416,"•\t"]],[1416,1418],[1416,1416]]],[1570100733169,["GJX@GJXAIOU",[[-1,1455,"•"]],[1456,1456],[1455,1455]]],[1570100793797,[null,[[-1,7691,"u"],[1,7692,"\n"],[-1,8103,"age"],[1,8106,"```"],[-1,8136,"`"],[1,8137,"\n"],[-1,8226,"`"],[-1,8229," |"],[-1,8232,"\n（三）"],[1,8240,"（三）"],[1,8248,"集合"],[-1,8250,"*  **********变\n\n*  ****生*****方\n\n*"],[1,8283,"第一步  定义list集合变量\n第二步  生成变量的get方法\n第三步"],[-1,8285,"****"],[-1,8294,"********集"],[1,8303,"法里面向list集合设"],[1,8305,"\n\n"],[-1,9100,"|#\n七、\n"],[1,9109,"七、"],[-1,9114,"* ****str*** 和 ***+***组合*"],[1,9139,"数据\n\n使用struts2的标签 和 ognl"],[1,9142,"组合"],[1,9144,"值栈数据"],[-1,9150,"***）"],[-1,9173,"****"],[1,9177,"ognl"],[1,9179,"式”/>"],[-1,9182," |\n\n（一）"],[1,9193,"（一）"],[1,9196,"符串\n\n"],[-1,9860," |\n\n（二）"],[1,9871,"（二）"],[1,9873,"对象\n\n"],[-1,9899,"* **"],[1,9905,"栈放"],[1,9906,"象\n"],[-1,9929,"象"],[1,9930,"\n"],[-1,10340,")"],[1,10341,"\n"],[-1,10348,"* **"],[1,10355,"中获"],[1,10356,"值\n"],[-1,10368,"值"],[1,10369,"\n"],[-1,10374,">\n:property>\n\n    <br"],[-1,10588,")"],[1,10589,"\n"],[-1,10651,"（三）"],[1,10664,"\n```\n\n\n### （三）获取list集合\n\n"],[-1,11368,"\n |\n\n# "],[1,11375,"第一种方式：\n"],[-1,11387,"获"],[1,11388,"\n"],[-1,11769,"p"],[1,11770,"\n"],[-1,11777,"01/cliage05 g) "],[1,11792,"第"],[-1,11796," *val*"],[1,11802,"：value 值为 List 对象名；\n"],[-1,11814,"*"],[1,11815,"\n"],[-1,12096,"p"],[1,12097,"\n"],[-1,12104,"01/clip_ig"],[1,12114,"第三种方式：最常用\n"],[-1,12126,"e"],[1,12127,"\n"],[-1,12556,"i"],[1,12557,"\n"],[-1,12560,"p"],[1,12563,"\n"],[-1,12566,"p"],[1,12567,"\n"],[-1,12743,"g\n)\n\n因（四）为值是从 C"],[1,12758,"\n\n### （四）其他操作\n\n"],[-1,12784,"te"],[1,12786,"\n\n"],[-1,12935,"p"],[1,12936,"\n"],[-1,12939,"p_ e064 )\n\n**2** **"],[-1,12960,"*"],[1,12961," push 方法向值栈放数据，获取方法："],[-1,13015,"0iage jpg) "],[-1,13027,"****"],[-1,13032,"****"],[-1,13039,"****s*置"],[1,13046," push 方法设置值，没有"],[-1,13055,"**"],[-1,13058,"\n**"],[-1,13062,"****"],[-1,13067,"****"],[1,13073,"值栈"],[1,13074,"数据"],[1,13077,"向值栈放"],[1,13085,"，数组名称 top，根据数组获取值"],[-1,13143,"\n"],[1,13144,"\""],[1,13146,"\n"],[-1,13151,"1/cli八、 p_ima可以ge068."],[1,13172,"\n## 八、 EL表达式可以获取值栈数据"],[-1,13176," -L表达 栈数据（为什么）\n对* **Valuek.j \n**首先加 `***** **"],[1,13221,"\n- EL 表达式获取域对象值\n首先加上标签头：`<%@ "],[-1,13227,"**"],[-1,13230,"**"],[-1,13237,"****"],[1,13250,"va.s"],[1,13251,"n"],[-1,13259,"le**pf\"****c****\"%*"],[1,13278,"/jstl/core\"prefix=\"c\"%>`\n然后使用 foreach\n"],[-1,13450,"*- </c:forEac\n\n**2** **"],[1,13473,"\n- "],[1,13475,"对象里面"],[-1,13479,"****"],[1,13483,"setA"],[-1,13491,"****取值**- "],[1,13501,"方法，获取值使用getAtt"],[-1,13505," **方法**\n ** **底层增*"],[1,13523,"te方法\n\n- 底层增强 "],[-1,13530,"****"],[1,13535,"对象里面"],[-1,13537,"**gtte****"],[1,13547,"法：getAttribute 方法"],[-1,13549,"**"],[-1,13553,"****"],[-1,13561,"****"],[-1,13567,"e*取"],[1,13570,"quest域获取值，如果"],[-1,13574,"**\n\n**"],[1,13580,"直接返回\n"],[-1,13582,"****"],[-1,13590,"****"],[-1,13601,"****"],[1,13608,"不到"],[-1,13610,"/cli九、p_image072.jpg)\n（一）\n |"],[1,13638,"到值栈中把值获取出来，把值放到域对象里面\n\n\n## 九、OGNL的#、%使用\n\n### （一）#使用"],[-1,13662," "],[1,13663,"\n"],[-1,13893,"O"],[1,13894,"\n"],[-1,14244,"/"],[1,14245,"\n"],[-1,14394,"clip"],[1,14398,"### "],[-1,14401,"_imag-  在# "],[-1,14417,"**1** **标标签**\n\n***1******s"],[1,14443,"-  在struts2标签中表单标签\n在strut"],[-1,14445,"****"],[-1,14452,"***"],[1,14455,"面使用"],[-1,14467,"*str****"],[1,14475,"在struts2"],[-1,14480,"*nl****表/"],[1,14489,"面使用ognl表达式不识别，只有%之后才会识别。\n"],[-1,14617,"1/clip_image081.jpg)\n\n |"]],[7691,7691],[14617,14617]]],[1570100793798,[null,[[1,7691,"u"],[-1,7691,"\n"],[1,8103,"age"],[-1,8103,"```"],[1,8136,"`"],[-1,8136,"\n"],[1,8226,"`"],[1,8228," |"],[1,8229,"\n（三）"],[-1,8233,"（三）"],[-1,8244,"集合"],[1,8248,"*  **********变\n\n*  ****生*****方\n\n*"],[-1,8248,"第一步  定义list集合变量\n第二步  生成变量的get方法\n第三步"],[1,8285,"****"],[1,8290,"********集"],[-1,8290,"法里面向list集合设"],[-1,8303,"\n\n"],[1,9100,"|#\n七、\n"],[-1,9103,"七、"],[1,9110,"* ****str*** 和 ***+***组合*"],[-1,9110,"数据\n\n使用struts2的标签 和 ognl"],[-1,9136,"组合"],[-1,9140,"值栈数据"],[1,9150,"***）"],[1,9169,"****"],[-1,9169,"ognl"],[-1,9175,"式”/>"],[1,9182," |\n\n（一）"],[-1,9186,"（一）"],[-1,9192,"符串\n\n"],[1,9860," |\n\n（二）"],[-1,9864,"（二）"],[-1,9869,"对象\n\n"],[1,9899,"* **"],[-1,9901,"栈放"],[-1,9904,"象\n"],[1,9929,"象"],[-1,9929,"\n"],[1,10340,")"],[-1,10340,"\n"],[1,10348,"* **"],[-1,10351,"中获"],[-1,10354,"值\n"],[1,10368,"值"],[-1,10368,"\n"],[1,10374,">\n:property>\n\n    <br"],[1,10567,")"],[-1,10567,"\n"],[1,10630,"（三）"],[-1,10640,"\n```\n\n\n### （三）获取list集合\n\n"],[1,11368,"\n |\n\n# "],[-1,11368,"第一种方式：\n"],[1,11387,"获"],[-1,11387,"\n"],[1,11769,"p"],[-1,11769,"\n"],[1,11777,"01/cliage05 g) "],[-1,11777,"第"],[1,11782," *val*"],[-1,11782,"：value 值为 List 对象名；\n"],[1,11814,"*"],[-1,11814,"\n"],[1,12096,"p"],[-1,12096,"\n"],[1,12104,"01/clip_ig"],[-1,12104,"第三种方式：最常用\n"],[1,12126,"e"],[-1,12126,"\n"],[1,12556,"i"],[-1,12556,"\n"],[1,12560,"p"],[-1,12562,"\n"],[1,12566,"p"],[-1,12566,"\n"],[1,12743,"g\n)\n\n因（四）为值是从 C"],[-1,12743,"\n\n### （四）其他操作\n\n"],[1,12784,"te"],[-1,12784,"\n\n"],[1,12935,"p"],[-1,12935,"\n"],[1,12939,"p_ e064 )\n\n**2** **"],[1,12941,"*"],[-1,12941," push 方法向值栈放数据，获取方法："],[1,13015,"0iage jpg) "],[1,13016,"****"],[1,13017,"****"],[1,13020,"****s*置"],[-1,13020," push 方法设置值，没有"],[1,13043,"**"],[1,13044,"\n**"],[1,13045,"****"],[1,13046,"****"],[-1,13048,"值栈"],[-1,13051,"数据"],[-1,13056,"向值栈放"],[-1,13068,"，数组名称 top，根据数组获取值"],[1,13143,"\n"],[-1,13143,"\""],[-1,13146,"\n"],[1,13152,"1/cli八、 p_ima可以ge068."],[-1,13152,"\n## 八、 EL表达式可以获取值栈数据"],[1,13176," -L表达 栈数据（为什么）\n对* **Valuek.j \n**首先加 `***** **"],[-1,13176,"\n- EL 表达式获取域对象值\n首先加上标签头：`<%@ "],[1,13211,"**"],[1,13212,"**"],[1,13217,"****"],[-1,13226,"va.s"],[-1,13231,"n"],[1,13240,"le**pf\"****c****\"%*"],[-1,13240,"/jstl/core\"prefix=\"c\"%>`\n然后使用 foreach\n"],[1,13450,"*- </c:forEac\n\n**2** **"],[-1,13450,"\n- "],[-1,13455,"对象里面"],[1,13463,"****"],[-1,13463,"setA"],[1,13475,"****取值**- "],[-1,13475,"方法，获取值使用getAtt"],[1,13493," **方法**\n ** **底层增*"],[-1,13493,"te方法\n\n- 底层增强 "],[1,13513,"****"],[-1,13514,"对象里面"],[1,13520,"**gtte****"],[-1,13520,"法：getAttribute 方法"],[1,13539,"**"],[1,13541,"****"],[1,13545,"****"],[1,13547,"e*取"],[-1,13547,"quest域获取值，如果"],[1,13563,"**\n\n**"],[-1,13563,"直接返回\n"],[1,13570,"****"],[1,13574,"****"],[1,13581,"****"],[-1,13584,"不到"],[1,13588,"/cli九、p_image072.jpg)\n（一）\n |"],[-1,13588,"到值栈中把值获取出来，把值放到域对象里面\n\n\n## 九、OGNL的#、%使用\n\n### （一）#使用"],[1,13662," "],[-1,13662,"\n"],[1,13893,"O"],[-1,13893,"\n"],[1,14244,"/"],[-1,14244,"\n"],[1,14394,"clip"],[-1,14394,"### "],[1,14401,"_imag-  在# "],[1,14406,"**1** **标标签**\n\n***1******s"],[-1,14406,"-  在struts2标签中表单标签\n在strut"],[1,14433,"****"],[1,14436,"***"],[-1,14436,"面使用"],[1,14451,"*str****"],[-1,14451,"在struts2"],[1,14464,"*nl****表/"],[-1,14464,"面使用ognl表达式不识别，只有%之后才会识别。\n"],[1,14617,"1/clip_image081.jpg)\n\n |"]],[14617,14617],[7691,7691]]],[1570100734288,["GJX@GJXAIOU",[[-1,1455,"\t"]],[1455,1456],[1455,1455]]],[1570100737108,["GJX@GJXAIOU",[[1,1203,"- "],[1,1243,"- "],[1,1336,"- "],[1,1351,"- "],[1,1416,"- "],[1,1455,"- "]],[1203,1462],[1205,1474]]],[1570100737483,["GJX@GJXAIOU",[[1,1203,"  "],[1,1245,"  "],[1,1340,"  "],[1,1357,"  "],[1,1424,"  "],[1,1465,"  "]],[1205,1474],[1207,1486]]],[1570100740184,["GJX@GJXAIOU",[[-1,1363,"  - "]],[1363,1367],[1363,1363]]],[1570100759850,["GJX@GJXAIOU",[[1,1486,"\n"]],[1484,1484],[1485,1485]]],[1570100760004,["GJX@GJXAIOU",[[1,1487,"\n"]],[1485,1485],[1486,1486]]],[1570100771283,["GJX@GJXAIOU",[[1,1485,"- OGNL 三大要素"]],[1485,1485],[1496,1496]]],[1570100771656,["GJX@GJXAIOU",[[1,1497,"- \n"]],[1496,1496],[1499,1499]]],[1570100772683,["GJX@GJXAIOU",[[1,1497,"  "]],[1499,1499],[1501,1501]]],[1570100791300,["GJX@GJXAIOU",[[1,1501,"表达式：Expression："]],[1501,1501],[1516,1516]]],[1570100853801,[null,[[-1,7743,"u"],[1,7744,"\n"],[-1,8155,"age"],[1,8158,"```"],[-1,8188,"`"],[1,8189,"\n"],[-1,8278,"`"],[-1,8281," |"],[-1,8284,"\n（三）"],[1,8292,"（三）"],[1,8300,"集合"],[-1,8302,"*  **********变\n\n*  ****生*****方\n\n*"],[1,8335,"第一步  定义list集合变量\n第二步  生成变量的get方法\n第三步"],[-1,8337,"****"],[-1,8346,"********集"],[1,8355,"法里面向list集合设"],[1,8357,"\n\n"],[-1,9152,"|#\n七、\n"],[1,9161,"七、"],[-1,9166,"* ****str*** 和 ***+***组合*"],[1,9191,"数据\n\n使用struts2的标签 和 ognl"],[1,9194,"组合"],[1,9196,"值栈数据"],[-1,9202,"***）"],[-1,9225,"****"],[1,9229,"ognl"],[1,9231,"式”/>"],[-1,9234," |\n\n（一）"],[1,9245,"（一）"],[1,9248,"符串\n\n"],[-1,9912," |\n\n（二）"],[1,9923,"（二）"],[1,9925,"对象\n\n"],[-1,9951,"* **"],[1,9957,"栈放"],[1,9958,"象\n"],[-1,9981,"象"],[1,9982,"\n"],[-1,10392,")"],[1,10393,"\n"],[-1,10400,"* **"],[1,10407,"中获"],[1,10408,"值\n"],[-1,10420,"值"],[1,10421,"\n"],[-1,10426,">\n:property>\n\n    <br"],[-1,10640,")"],[1,10641,"\n"],[-1,10703,"（三）"],[1,10716,"\n```\n\n\n### （三）获取list集合\n\n"],[-1,11420,"\n |\n\n# "],[1,11427,"第一种方式：\n"],[-1,11439,"获"],[1,11440,"\n"],[-1,11821,"p"],[1,11822,"\n"],[-1,11829,"01/cliage05 g) "],[1,11844,"第"],[-1,11848," *val*"],[1,11854,"：value 值为 List 对象名；\n"],[-1,11866,"*"],[1,11867,"\n"],[-1,12148,"p"],[1,12149,"\n"],[-1,12156,"01/clip_ig"],[1,12166,"第三种方式：最常用\n"],[-1,12178,"e"],[1,12179,"\n"],[-1,12608,"i"],[1,12609,"\n"],[-1,12612,"p"],[1,12615,"\n"],[-1,12618,"p"],[1,12619,"\n"],[-1,12795,"g\n)\n\n因（四）为值是从 C"],[1,12810,"\n\n### （四）其他操作\n\n"],[-1,12836,"te"],[1,12838,"\n\n"],[-1,12987,"p"],[1,12988,"\n"],[-1,12991,"p_ e064 )\n\n**2** **"],[-1,13012,"*"],[1,13013," push 方法向值栈放数据，获取方法："],[-1,13067,"0iage jpg) "],[-1,13079,"****"],[-1,13084,"****"],[-1,13091,"****s*置"],[1,13098," push 方法设置值，没有"],[-1,13107,"**"],[-1,13110,"\n**"],[-1,13114,"****"],[-1,13119,"****"],[1,13125,"值栈"],[1,13126,"数据"],[1,13129,"向值栈放"],[1,13137,"，数组名称 top，根据数组获取值"],[-1,13195,"\n"],[1,13196,"\""],[1,13198,"\n"],[-1,13203,"1/cli八、 p_ima可以ge068."],[1,13224,"\n## 八、 EL表达式可以获取值栈数据"],[-1,13228," -L表达 栈数据（为什么）\n对* **Valuek.j \n**首先加 `***** **"],[1,13273,"\n- EL 表达式获取域对象值\n首先加上标签头：`<%@ "],[-1,13279,"**"],[-1,13282,"**"],[-1,13289,"****"],[1,13302,"va.s"],[1,13303,"n"],[-1,13311,"le**pf\"****c****\"%*"],[1,13330,"/jstl/core\"prefix=\"c\"%>`\n然后使用 foreach\n"],[-1,13502,"*- </c:forEac\n\n**2** **"],[1,13525,"\n- "],[1,13527,"对象里面"],[-1,13531,"****"],[1,13535,"setA"],[-1,13543,"****取值**- "],[1,13553,"方法，获取值使用getAtt"],[-1,13557," **方法**\n ** **底层增*"],[1,13575,"te方法\n\n- 底层增强 "],[-1,13582,"****"],[1,13587,"对象里面"],[-1,13589,"**gtte****"],[1,13599,"法：getAttribute 方法"],[-1,13601,"**"],[-1,13605,"****"],[-1,13613,"****"],[-1,13619,"e*取"],[1,13622,"quest域获取值，如果"],[-1,13626,"**\n\n**"],[1,13632,"直接返回\n"],[-1,13634,"****"],[-1,13642,"****"],[-1,13653,"****"],[1,13660,"不到"],[-1,13662,"/cli九、p_image072.jpg)\n（一）\n |"],[1,13690,"到值栈中把值获取出来，把值放到域对象里面\n\n\n## 九、OGNL的#、%使用\n\n### （一）#使用"],[-1,13714," "],[1,13715,"\n"],[-1,13945,"O"],[1,13946,"\n"],[-1,14296,"/"],[1,14297,"\n"],[-1,14446,"clip"],[1,14450,"### "],[-1,14453,"_imag-  在# "],[-1,14469,"**1** **标标签**\n\n***1******s"],[1,14495,"-  在struts2标签中表单标签\n在strut"],[-1,14497,"****"],[-1,14504,"***"],[1,14507,"面使用"],[-1,14519,"*str****"],[1,14527,"在struts2"],[-1,14532,"*nl****表/"],[1,14541,"面使用ognl表达式不识别，只有%之后才会识别。\n"],[-1,14669,"1/clip_image081.jpg)\n\n |"]],[7743,7743],[14669,14669]]],[1570100853801,[null,[[1,7743,"u"],[-1,7743,"\n"],[1,8155,"age"],[-1,8155,"```"],[1,8188,"`"],[-1,8188,"\n"],[1,8278,"`"],[1,8280," |"],[1,8281,"\n（三）"],[-1,8285,"（三）"],[-1,8296,"集合"],[1,8300,"*  **********变\n\n*  ****生*****方\n\n*"],[-1,8300,"第一步  定义list集合变量\n第二步  生成变量的get方法\n第三步"],[1,8337,"****"],[1,8342,"********集"],[-1,8342,"法里面向list集合设"],[-1,8355,"\n\n"],[1,9152,"|#\n七、\n"],[-1,9155,"七、"],[1,9162,"* ****str*** 和 ***+***组合*"],[-1,9162,"数据\n\n使用struts2的标签 和 ognl"],[-1,9188,"组合"],[-1,9192,"值栈数据"],[1,9202,"***）"],[1,9221,"****"],[-1,9221,"ognl"],[-1,9227,"式”/>"],[1,9234," |\n\n（一）"],[-1,9238,"（一）"],[-1,9244,"符串\n\n"],[1,9912," |\n\n（二）"],[-1,9916,"（二）"],[-1,9921,"对象\n\n"],[1,9951,"* **"],[-1,9953,"栈放"],[-1,9956,"象\n"],[1,9981,"象"],[-1,9981,"\n"],[1,10392,")"],[-1,10392,"\n"],[1,10400,"* **"],[-1,10403,"中获"],[-1,10406,"值\n"],[1,10420,"值"],[-1,10420,"\n"],[1,10426,">\n:property>\n\n    <br"],[1,10619,")"],[-1,10619,"\n"],[1,10682,"（三）"],[-1,10692,"\n```\n\n\n### （三）获取list集合\n\n"],[1,11420,"\n |\n\n# "],[-1,11420,"第一种方式：\n"],[1,11439,"获"],[-1,11439,"\n"],[1,11821,"p"],[-1,11821,"\n"],[1,11829,"01/cliage05 g) "],[-1,11829,"第"],[1,11834," *val*"],[-1,11834,"：value 值为 List 对象名；\n"],[1,11866,"*"],[-1,11866,"\n"],[1,12148,"p"],[-1,12148,"\n"],[1,12156,"01/clip_ig"],[-1,12156,"第三种方式：最常用\n"],[1,12178,"e"],[-1,12178,"\n"],[1,12608,"i"],[-1,12608,"\n"],[1,12612,"p"],[-1,12614,"\n"],[1,12618,"p"],[-1,12618,"\n"],[1,12795,"g\n)\n\n因（四）为值是从 C"],[-1,12795,"\n\n### （四）其他操作\n\n"],[1,12836,"te"],[-1,12836,"\n\n"],[1,12987,"p"],[-1,12987,"\n"],[1,12991,"p_ e064 )\n\n**2** **"],[1,12993,"*"],[-1,12993," push 方法向值栈放数据，获取方法："],[1,13067,"0iage jpg) "],[1,13068,"****"],[1,13069,"****"],[1,13072,"****s*置"],[-1,13072," push 方法设置值，没有"],[1,13095,"**"],[1,13096,"\n**"],[1,13097,"****"],[1,13098,"****"],[-1,13100,"值栈"],[-1,13103,"数据"],[-1,13108,"向值栈放"],[-1,13120,"，数组名称 top，根据数组获取值"],[1,13195,"\n"],[-1,13195,"\""],[-1,13198,"\n"],[1,13204,"1/cli八、 p_ima可以ge068."],[-1,13204,"\n## 八、 EL表达式可以获取值栈数据"],[1,13228," -L表达 栈数据（为什么）\n对* **Valuek.j \n**首先加 `***** **"],[-1,13228,"\n- EL 表达式获取域对象值\n首先加上标签头：`<%@ "],[1,13263,"**"],[1,13264,"**"],[1,13269,"****"],[-1,13278,"va.s"],[-1,13283,"n"],[1,13292,"le**pf\"****c****\"%*"],[-1,13292,"/jstl/core\"prefix=\"c\"%>`\n然后使用 foreach\n"],[1,13502,"*- </c:forEac\n\n**2** **"],[-1,13502,"\n- "],[-1,13507,"对象里面"],[1,13515,"****"],[-1,13515,"setA"],[1,13527,"****取值**- "],[-1,13527,"方法，获取值使用getAtt"],[1,13545," **方法**\n ** **底层增*"],[-1,13545,"te方法\n\n- 底层增强 "],[1,13565,"****"],[-1,13566,"对象里面"],[1,13572,"**gtte****"],[-1,13572,"法：getAttribute 方法"],[1,13591,"**"],[1,13593,"****"],[1,13597,"****"],[1,13599,"e*取"],[-1,13599,"quest域获取值，如果"],[1,13615,"**\n\n**"],[-1,13615,"直接返回\n"],[1,13622,"****"],[1,13626,"****"],[1,13633,"****"],[-1,13636,"不到"],[1,13640,"/cli九、p_image072.jpg)\n（一）\n |"],[-1,13640,"到值栈中把值获取出来，把值放到域对象里面\n\n\n## 九、OGNL的#、%使用\n\n### （一）#使用"],[1,13714," "],[-1,13714,"\n"],[1,13945,"O"],[-1,13945,"\n"],[1,14296,"/"],[-1,14296,"\n"],[1,14446,"clip"],[-1,14446,"### "],[1,14453,"_imag-  在# "],[1,14458,"**1** **标标签**\n\n***1******s"],[-1,14458,"-  在struts2标签中表单标签\n在strut"],[1,14485,"****"],[1,14488,"***"],[-1,14488,"面使用"],[1,14503,"*str****"],[-1,14503,"在struts2"],[1,14516,"*nl****表/"],[-1,14516,"面使用ognl表达式不识别，只有%之后才会识别。\n"],[1,14669,"1/clip_image081.jpg)\n\n |"]],[14669,14669],[7743,7743]]],[1570100837492,["GJX@GJXAIOU",[[1,1516,"这是核心，所有 OGNL 操作都是针对表达式解析后进行的，表明要****"]],[1516,1516],[1550,1550]]],[1570100839209,["GJX@GJXAIOU",[[1,1550,"做什么"]],[1550,1550],[1553,1553]]],[1570100839657,["GJX@GJXAIOU",[[1,1499,"  "]],[1553,1553],[1555,1555]]],[1570100842262,["GJX@GJXAIOU",[[-1,1499,"  "]],[1555,1555],[1553,1553]]],[1570100844767,["GJX@GJXAIOU",[[1,1555,"；"]],[1555,1555],[1556,1556]]],[1570100913799,[null,[[-1,7783,"u"],[1,7784,"\n"],[-1,8195,"age"],[1,8198,"```"],[-1,8228,"`"],[1,8229,"\n"],[-1,8318,"`"],[-1,8321," |"],[-1,8324,"\n（三）"],[1,8332,"（三）"],[1,8340,"集合"],[-1,8342,"*  **********变\n\n*  ****生*****方\n\n*"],[1,8375,"第一步  定义list集合变量\n第二步  生成变量的get方法\n第三步"],[-1,8377,"****"],[-1,8386,"********集"],[1,8395,"法里面向list集合设"],[1,8397,"\n\n"],[-1,9192,"|#\n七、\n"],[1,9201,"七、"],[-1,9206,"* ****str*** 和 ***+***组合*"],[1,9231,"数据\n\n使用struts2的标签 和 ognl"],[1,9234,"组合"],[1,9236,"值栈数据"],[-1,9242,"***）"],[-1,9265,"****"],[1,9269,"ognl"],[1,9271,"式”/>"],[-1,9274," |\n\n（一）"],[1,9285,"（一）"],[1,9288,"符串\n\n"],[-1,9952," |\n\n（二）"],[1,9963,"（二）"],[1,9965,"对象\n\n"],[-1,9991,"* **"],[1,9997,"栈放"],[1,9998,"象\n"],[-1,10021,"象"],[1,10022,"\n"],[-1,10432,")"],[1,10433,"\n"],[-1,10440,"* **"],[1,10447,"中获"],[1,10448,"值\n"],[-1,10460,"值"],[1,10461,"\n"],[-1,10466,">\n:property>\n\n    <br"],[-1,10680,")"],[1,10681,"\n"],[-1,10743,"（三）"],[1,10756,"\n```\n\n\n### （三）获取list集合\n\n"],[-1,11460,"\n |\n\n# "],[1,11467,"第一种方式：\n"],[-1,11479,"获"],[1,11480,"\n"],[-1,11861,"p"],[1,11862,"\n"],[-1,11869,"01/cliage05 g) "],[1,11884,"第"],[-1,11888," *val*"],[1,11894,"：value 值为 List 对象名；\n"],[-1,11906,"*"],[1,11907,"\n"],[-1,12188,"p"],[1,12189,"\n"],[-1,12196,"01/clip_ig"],[1,12206,"第三种方式：最常用\n"],[-1,12218,"e"],[1,12219,"\n"],[-1,12648,"i"],[1,12649,"\n"],[-1,12652,"p"],[1,12655,"\n"],[-1,12658,"p"],[1,12659,"\n"],[-1,12835,"g\n)\n\n因（四）为值是从 C"],[1,12850,"\n\n### （四）其他操作\n\n"],[-1,12876,"te"],[1,12878,"\n\n"],[-1,13027,"p"],[1,13028,"\n"],[-1,13031,"p_ e064 )\n\n**2** **"],[-1,13052,"*"],[1,13053," push 方法向值栈放数据，获取方法："],[-1,13107,"0iage jpg) "],[-1,13119,"****"],[-1,13124,"****"],[-1,13131,"****s*置"],[1,13138," push 方法设置值，没有"],[-1,13147,"**"],[-1,13150,"\n**"],[-1,13154,"****"],[-1,13159,"****"],[1,13165,"值栈"],[1,13166,"数据"],[1,13169,"向值栈放"],[1,13177,"，数组名称 top，根据数组获取值"],[-1,13235,"\n"],[1,13236,"\""],[1,13238,"\n"],[-1,13243,"1/cli八、 p_ima可以ge068."],[1,13264,"\n## 八、 EL表达式可以获取值栈数据"],[-1,13268," -L表达 栈数据（为什么）\n对* **Valuek.j \n**首先加 `***** **"],[1,13313,"\n- EL 表达式获取域对象值\n首先加上标签头：`<%@ "],[-1,13319,"**"],[-1,13322,"**"],[-1,13329,"****"],[1,13342,"va.s"],[1,13343,"n"],[-1,13351,"le**pf\"****c****\"%*"],[1,13370,"/jstl/core\"prefix=\"c\"%>`\n然后使用 foreach\n"],[-1,13542,"*- </c:forEac\n\n**2** **"],[1,13565,"\n- "],[1,13567,"对象里面"],[-1,13571,"****"],[1,13575,"setA"],[-1,13583,"****取值**- "],[1,13593,"方法，获取值使用getAtt"],[-1,13597," **方法**\n ** **底层增*"],[1,13615,"te方法\n\n- 底层增强 "],[-1,13622,"****"],[1,13627,"对象里面"],[-1,13629,"**gtte****"],[1,13639,"法：getAttribute 方法"],[-1,13641,"**"],[-1,13645,"****"],[-1,13653,"****"],[-1,13659,"e*取"],[1,13662,"quest域获取值，如果"],[-1,13666,"**\n\n**"],[1,13672,"直接返回\n"],[-1,13674,"****"],[-1,13682,"****"],[-1,13693,"****"],[1,13700,"不到"],[-1,13702,"/cli九、p_image072.jpg)\n（一）\n |"],[1,13730,"到值栈中把值获取出来，把值放到域对象里面\n\n\n## 九、OGNL的#、%使用\n\n### （一）#使用"],[-1,13754," "],[1,13755,"\n"],[-1,13985,"O"],[1,13986,"\n"],[-1,14336,"/"],[1,14337,"\n"],[-1,14486,"clip"],[1,14490,"### "],[-1,14493,"_imag-  在# "],[-1,14509,"**1** **标标签**\n\n***1******s"],[1,14535,"-  在struts2标签中表单标签\n在strut"],[-1,14537,"****"],[-1,14544,"***"],[1,14547,"面使用"],[-1,14559,"*str****"],[1,14567,"在struts2"],[-1,14572,"*nl****表/"],[1,14581,"面使用ognl表达式不识别，只有%之后才会识别。\n"],[-1,14709,"1/clip_image081.jpg)\n\n |"]],[7783,7783],[14709,14709]]],[1570100913799,[null,[[1,7783,"u"],[-1,7783,"\n"],[1,8195,"age"],[-1,8195,"```"],[1,8228,"`"],[-1,8228,"\n"],[1,8318,"`"],[1,8320," |"],[1,8321,"\n（三）"],[-1,8325,"（三）"],[-1,8336,"集合"],[1,8340,"*  **********变\n\n*  ****生*****方\n\n*"],[-1,8340,"第一步  定义list集合变量\n第二步  生成变量的get方法\n第三步"],[1,8377,"****"],[1,8382,"********集"],[-1,8382,"法里面向list集合设"],[-1,8395,"\n\n"],[1,9192,"|#\n七、\n"],[-1,9195,"七、"],[1,9202,"* ****str*** 和 ***+***组合*"],[-1,9202,"数据\n\n使用struts2的标签 和 ognl"],[-1,9228,"组合"],[-1,9232,"值栈数据"],[1,9242,"***）"],[1,9261,"****"],[-1,9261,"ognl"],[-1,9267,"式”/>"],[1,9274," |\n\n（一）"],[-1,9278,"（一）"],[-1,9284,"符串\n\n"],[1,9952," |\n\n（二）"],[-1,9956,"（二）"],[-1,9961,"对象\n\n"],[1,9991,"* **"],[-1,9993,"栈放"],[-1,9996,"象\n"],[1,10021,"象"],[-1,10021,"\n"],[1,10432,")"],[-1,10432,"\n"],[1,10440,"* **"],[-1,10443,"中获"],[-1,10446,"值\n"],[1,10460,"值"],[-1,10460,"\n"],[1,10466,">\n:property>\n\n    <br"],[1,10659,")"],[-1,10659,"\n"],[1,10722,"（三）"],[-1,10732,"\n```\n\n\n### （三）获取list集合\n\n"],[1,11460,"\n |\n\n# "],[-1,11460,"第一种方式：\n"],[1,11479,"获"],[-1,11479,"\n"],[1,11861,"p"],[-1,11861,"\n"],[1,11869,"01/cliage05 g) "],[-1,11869,"第"],[1,11874," *val*"],[-1,11874,"：value 值为 List 对象名；\n"],[1,11906,"*"],[-1,11906,"\n"],[1,12188,"p"],[-1,12188,"\n"],[1,12196,"01/clip_ig"],[-1,12196,"第三种方式：最常用\n"],[1,12218,"e"],[-1,12218,"\n"],[1,12648,"i"],[-1,12648,"\n"],[1,12652,"p"],[-1,12654,"\n"],[1,12658,"p"],[-1,12658,"\n"],[1,12835,"g\n)\n\n因（四）为值是从 C"],[-1,12835,"\n\n### （四）其他操作\n\n"],[1,12876,"te"],[-1,12876,"\n\n"],[1,13027,"p"],[-1,13027,"\n"],[1,13031,"p_ e064 )\n\n**2** **"],[1,13033,"*"],[-1,13033," push 方法向值栈放数据，获取方法："],[1,13107,"0iage jpg) "],[1,13108,"****"],[1,13109,"****"],[1,13112,"****s*置"],[-1,13112," push 方法设置值，没有"],[1,13135,"**"],[1,13136,"\n**"],[1,13137,"****"],[1,13138,"****"],[-1,13140,"值栈"],[-1,13143,"数据"],[-1,13148,"向值栈放"],[-1,13160,"，数组名称 top，根据数组获取值"],[1,13235,"\n"],[-1,13235,"\""],[-1,13238,"\n"],[1,13244,"1/cli八、 p_ima可以ge068."],[-1,13244,"\n## 八、 EL表达式可以获取值栈数据"],[1,13268," -L表达 栈数据（为什么）\n对* **Valuek.j \n**首先加 `***** **"],[-1,13268,"\n- EL 表达式获取域对象值\n首先加上标签头：`<%@ "],[1,13303,"**"],[1,13304,"**"],[1,13309,"****"],[-1,13318,"va.s"],[-1,13323,"n"],[1,13332,"le**pf\"****c****\"%*"],[-1,13332,"/jstl/core\"prefix=\"c\"%>`\n然后使用 foreach\n"],[1,13542,"*- </c:forEac\n\n**2** **"],[-1,13542,"\n- "],[-1,13547,"对象里面"],[1,13555,"****"],[-1,13555,"setA"],[1,13567,"****取值**- "],[-1,13567,"方法，获取值使用getAtt"],[1,13585," **方法**\n ** **底层增*"],[-1,13585,"te方法\n\n- 底层增强 "],[1,13605,"****"],[-1,13606,"对象里面"],[1,13612,"**gtte****"],[-1,13612,"法：getAttribute 方法"],[1,13631,"**"],[1,13633,"****"],[1,13637,"****"],[1,13639,"e*取"],[-1,13639,"quest域获取值，如果"],[1,13655,"**\n\n**"],[-1,13655,"直接返回\n"],[1,13662,"****"],[1,13666,"****"],[1,13673,"****"],[-1,13676,"不到"],[1,13680,"/cli九、p_image072.jpg)\n（一）\n |"],[-1,13680,"到值栈中把值获取出来，把值放到域对象里面\n\n\n## 九、OGNL的#、%使用\n\n### （一）#使用"],[1,13754," "],[-1,13754,"\n"],[1,13985,"O"],[-1,13985,"\n"],[1,14336,"/"],[-1,14336,"\n"],[1,14486,"clip"],[-1,14486,"### "],[1,14493,"_imag-  在# "],[1,14498,"**1** **标标签**\n\n***1******s"],[-1,14498,"-  在struts2标签中表单标签\n在strut"],[1,14525,"****"],[1,14528,"***"],[-1,14528,"面使用"],[1,14543,"*str****"],[-1,14543,"在struts2"],[1,14556,"*nl****表/"],[-1,14556,"面使用ognl表达式不识别，只有%之后才会识别。\n"],[1,14709,"1/clip_image081.jpg)\n\n |"]],[14709,14709],[7783,7783]]],[1570100882278,["GJX@GJXAIOU",[[1,1556,"表达式就是一个带有语法含义的字符串，该自负循环"]],[1556,1556],[1579,1579]]],[1570100883424,["GJX@GJXAIOU",[[-1,1575,"自负循环"]],[1579,1579],[1575,1575]]],[1570100897518,["GJX@GJXAIOU",[[1,1575,"字符串规定了操作的类型和操作的内容；"]],[1575,1575],[1593,1593]]],[1570100898096,["GJX@GJXAIOU",[[-1,1592,"；"]],[1593,1593],[1592,1592]]],[1570100898907,["GJX@GJXAIOU",[[1,1592,"；"]],[1592,1592],[1593,1593]]],[1570100899457,["GJX@GJXAIOU",[[-1,1592,"；"]],[1593,1593],[1592,1592]]],[1570100900046,["GJX@GJXAIOU",[[1,1592,"。"]],[1592,1592],[1593,1593]]],[1570100908425,["GJX@GJXAIOU",[[1,1594,"  - \n"]],[1593,1593],[1598,1598]]],[1570100911300,["GJX@GJXAIOU",[[1,1598,"更对象"]],[1598,1598],[1601,1601]]],[1570100912028,["GJX@GJXAIOU",[[-1,1598,"更对象"]],[1601,1601],[1598,1598]]],[1570100973805,[null,[[-1,7825,"u"],[1,7826,"\n"],[-1,8237,"age"],[1,8240,"```"],[-1,8270,"`"],[1,8271,"\n"],[-1,8360,"`"],[-1,8363," |"],[-1,8366,"\n（三）"],[1,8374,"（三）"],[1,8382,"集合"],[-1,8384,"*  **********变\n\n*  ****生*****方\n\n*"],[1,8417,"第一步  定义list集合变量\n第二步  生成变量的get方法\n第三步"],[-1,8419,"****"],[-1,8428,"********集"],[1,8437,"法里面向list集合设"],[1,8439,"\n\n"],[-1,9234,"|#\n七、\n"],[1,9243,"七、"],[-1,9248,"* ****str*** 和 ***+***组合*"],[1,9273,"数据\n\n使用struts2的标签 和 ognl"],[1,9276,"组合"],[1,9278,"值栈数据"],[-1,9284,"***）"],[-1,9307,"****"],[1,9311,"ognl"],[1,9313,"式”/>"],[-1,9316," |\n\n（一）"],[1,9327,"（一）"],[1,9330,"符串\n\n"],[-1,9994," |\n\n（二）"],[1,10005,"（二）"],[1,10007,"对象\n\n"],[-1,10033,"* **"],[1,10039,"栈放"],[1,10040,"象\n"],[-1,10063,"象"],[1,10064,"\n"],[-1,10474,")"],[1,10475,"\n"],[-1,10482,"* **"],[1,10489,"中获"],[1,10490,"值\n"],[-1,10502,"值"],[1,10503,"\n"],[-1,10508,">\n:property>\n\n    <br"],[-1,10722,")"],[1,10723,"\n"],[-1,10785,"（三）"],[1,10798,"\n```\n\n\n### （三）获取list集合\n\n"],[-1,11502,"\n |\n\n# "],[1,11509,"第一种方式：\n"],[-1,11521,"获"],[1,11522,"\n"],[-1,11903,"p"],[1,11904,"\n"],[-1,11911,"01/cliage05 g) "],[1,11926,"第"],[-1,11930," *val*"],[1,11936,"：value 值为 List 对象名；\n"],[-1,11948,"*"],[1,11949,"\n"],[-1,12230,"p"],[1,12231,"\n"],[-1,12238,"01/clip_ig"],[1,12248,"第三种方式：最常用\n"],[-1,12260,"e"],[1,12261,"\n"],[-1,12690,"i"],[1,12691,"\n"],[-1,12694,"p"],[1,12697,"\n"],[-1,12700,"p"],[1,12701,"\n"],[-1,12877,"g\n)\n\n因（四）为值是从 C"],[1,12892,"\n\n### （四）其他操作\n\n"],[-1,12918,"te"],[1,12920,"\n\n"],[-1,13069,"p"],[1,13070,"\n"],[-1,13073,"p_ e064 )\n\n**2** **"],[-1,13094,"*"],[1,13095," push 方法向值栈放数据，获取方法："],[-1,13149,"0iage jpg) "],[-1,13161,"****"],[-1,13166,"****"],[-1,13173,"****s*置"],[1,13180," push 方法设置值，没有"],[-1,13189,"**"],[-1,13192,"\n**"],[-1,13196,"****"],[-1,13201,"****"],[1,13207,"值栈"],[1,13208,"数据"],[1,13211,"向值栈放"],[1,13219,"，数组名称 top，根据数组获取值"],[-1,13277,"\n"],[1,13278,"\""],[1,13280,"\n"],[-1,13285,"1/cli八、 p_ima可以ge068."],[1,13306,"\n## 八、 EL表达式可以获取值栈数据"],[-1,13310," -L表达 栈数据（为什么）\n对* **Valuek.j \n**首先加 `***** **"],[1,13355,"\n- EL 表达式获取域对象值\n首先加上标签头：`<%@ "],[-1,13361,"**"],[-1,13364,"**"],[-1,13371,"****"],[1,13384,"va.s"],[1,13385,"n"],[-1,13393,"le**pf\"****c****\"%*"],[1,13412,"/jstl/core\"prefix=\"c\"%>`\n然后使用 foreach\n"],[-1,13584,"*- </c:forEac\n\n**2** **"],[1,13607,"\n- "],[1,13609,"对象里面"],[-1,13613,"****"],[1,13617,"setA"],[-1,13625,"****取值**- "],[1,13635,"方法，获取值使用getAtt"],[-1,13639," **方法**\n ** **底层增*"],[1,13657,"te方法\n\n- 底层增强 "],[-1,13664,"****"],[1,13669,"对象里面"],[-1,13671,"**gtte****"],[1,13681,"法：getAttribute 方法"],[-1,13683,"**"],[-1,13687,"****"],[-1,13695,"****"],[-1,13701,"e*取"],[1,13704,"quest域获取值，如果"],[-1,13708,"**\n\n**"],[1,13714,"直接返回\n"],[-1,13716,"****"],[-1,13724,"****"],[-1,13735,"****"],[1,13742,"不到"],[-1,13744,"/cli九、p_image072.jpg)\n（一）\n |"],[1,13772,"到值栈中把值获取出来，把值放到域对象里面\n\n\n## 九、OGNL的#、%使用\n\n### （一）#使用"],[-1,13796," "],[1,13797,"\n"],[-1,14027,"O"],[1,14028,"\n"],[-1,14378,"/"],[1,14379,"\n"],[-1,14528,"clip"],[1,14532,"### "],[-1,14535,"_imag-  在# "],[-1,14551,"**1** **标标签**\n\n***1******s"],[1,14577,"-  在struts2标签中表单标签\n在strut"],[-1,14579,"****"],[-1,14586,"***"],[1,14589,"面使用"],[-1,14601,"*str****"],[1,14609,"在struts2"],[-1,14614,"*nl****表/"],[1,14623,"面使用ognl表达式不识别，只有%之后才会识别。\n"],[-1,14751,"1/clip_image081.jpg)\n\n |"]],[7825,7825],[14751,14751]]],[1570100973805,[null,[[1,7825,"u"],[-1,7825,"\n"],[1,8237,"age"],[-1,8237,"```"],[1,8270,"`"],[-1,8270,"\n"],[1,8360,"`"],[1,8362," |"],[1,8363,"\n（三）"],[-1,8367,"（三）"],[-1,8378,"集合"],[1,8382,"*  **********变\n\n*  ****生*****方\n\n*"],[-1,8382,"第一步  定义list集合变量\n第二步  生成变量的get方法\n第三步"],[1,8419,"****"],[1,8424,"********集"],[-1,8424,"法里面向list集合设"],[-1,8437,"\n\n"],[1,9234,"|#\n七、\n"],[-1,9237,"七、"],[1,9244,"* ****str*** 和 ***+***组合*"],[-1,9244,"数据\n\n使用struts2的标签 和 ognl"],[-1,9270,"组合"],[-1,9274,"值栈数据"],[1,9284,"***）"],[1,9303,"****"],[-1,9303,"ognl"],[-1,9309,"式”/>"],[1,9316," |\n\n（一）"],[-1,9320,"（一）"],[-1,9326,"符串\n\n"],[1,9994," |\n\n（二）"],[-1,9998,"（二）"],[-1,10003,"对象\n\n"],[1,10033,"* **"],[-1,10035,"栈放"],[-1,10038,"象\n"],[1,10063,"象"],[-1,10063,"\n"],[1,10474,")"],[-1,10474,"\n"],[1,10482,"* **"],[-1,10485,"中获"],[-1,10488,"值\n"],[1,10502,"值"],[-1,10502,"\n"],[1,10508,">\n:property>\n\n    <br"],[1,10701,")"],[-1,10701,"\n"],[1,10764,"（三）"],[-1,10774,"\n```\n\n\n### （三）获取list集合\n\n"],[1,11502,"\n |\n\n# "],[-1,11502,"第一种方式：\n"],[1,11521,"获"],[-1,11521,"\n"],[1,11903,"p"],[-1,11903,"\n"],[1,11911,"01/cliage05 g) "],[-1,11911,"第"],[1,11916," *val*"],[-1,11916,"：value 值为 List 对象名；\n"],[1,11948,"*"],[-1,11948,"\n"],[1,12230,"p"],[-1,12230,"\n"],[1,12238,"01/clip_ig"],[-1,12238,"第三种方式：最常用\n"],[1,12260,"e"],[-1,12260,"\n"],[1,12690,"i"],[-1,12690,"\n"],[1,12694,"p"],[-1,12696,"\n"],[1,12700,"p"],[-1,12700,"\n"],[1,12877,"g\n)\n\n因（四）为值是从 C"],[-1,12877,"\n\n### （四）其他操作\n\n"],[1,12918,"te"],[-1,12918,"\n\n"],[1,13069,"p"],[-1,13069,"\n"],[1,13073,"p_ e064 )\n\n**2** **"],[1,13075,"*"],[-1,13075," push 方法向值栈放数据，获取方法："],[1,13149,"0iage jpg) "],[1,13150,"****"],[1,13151,"****"],[1,13154,"****s*置"],[-1,13154," push 方法设置值，没有"],[1,13177,"**"],[1,13178,"\n**"],[1,13179,"****"],[1,13180,"****"],[-1,13182,"值栈"],[-1,13185,"数据"],[-1,13190,"向值栈放"],[-1,13202,"，数组名称 top，根据数组获取值"],[1,13277,"\n"],[-1,13277,"\""],[-1,13280,"\n"],[1,13286,"1/cli八、 p_ima可以ge068."],[-1,13286,"\n## 八、 EL表达式可以获取值栈数据"],[1,13310," -L表达 栈数据（为什么）\n对* **Valuek.j \n**首先加 `***** **"],[-1,13310,"\n- EL 表达式获取域对象值\n首先加上标签头：`<%@ "],[1,13345,"**"],[1,13346,"**"],[1,13351,"****"],[-1,13360,"va.s"],[-1,13365,"n"],[1,13374,"le**pf\"****c****\"%*"],[-1,13374,"/jstl/core\"prefix=\"c\"%>`\n然后使用 foreach\n"],[1,13584,"*- </c:forEac\n\n**2** **"],[-1,13584,"\n- "],[-1,13589,"对象里面"],[1,13597,"****"],[-1,13597,"setA"],[1,13609,"****取值**- "],[-1,13609,"方法，获取值使用getAtt"],[1,13627," **方法**\n ** **底层增*"],[-1,13627,"te方法\n\n- 底层增强 "],[1,13647,"****"],[-1,13648,"对象里面"],[1,13654,"**gtte****"],[-1,13654,"法：getAttribute 方法"],[1,13673,"**"],[1,13675,"****"],[1,13679,"****"],[1,13681,"e*取"],[-1,13681,"quest域获取值，如果"],[1,13697,"**\n\n**"],[-1,13697,"直接返回\n"],[1,13704,"****"],[1,13708,"****"],[1,13715,"****"],[-1,13718,"不到"],[1,13722,"/cli九、p_image072.jpg)\n（一）\n |"],[-1,13722,"到值栈中把值获取出来，把值放到域对象里面\n\n\n## 九、OGNL的#、%使用\n\n### （一）#使用"],[1,13796," "],[-1,13796,"\n"],[1,14027,"O"],[-1,14027,"\n"],[1,14378,"/"],[-1,14378,"\n"],[1,14528,"clip"],[-1,14528,"### "],[1,14535,"_imag-  在# "],[1,14540,"**1** **标标签**\n\n***1******s"],[-1,14540,"-  在struts2标签中表单标签\n在strut"],[1,14567,"****"],[1,14570,"***"],[-1,14570,"面使用"],[1,14585,"*str****"],[-1,14585,"在struts2"],[1,14598,"*nl****表/"],[-1,14598,"面使用ognl表达式不识别，只有%之后才会识别。\n"],[1,14751,"1/clip_image081.jpg)\n\n |"]],[14751,14751],[7825,7825]]],[1570100925940,["GJX@GJXAIOU",[[1,1598,"根对象（）"]],[1598,1598],[1603,1603]]],[1570100928424,["GJX@GJXAIOU",[[1,1602,"Root"]],[1602,1602],[1606,1606]]],[1570100942638,["GJX@GJXAIOU",[[1,1607,"：Root对象"]],[1607,1607],[1614,1614]]],[1570100942687,["GJX@GJXAIOU",[[1,1612," "]],[1614,1614],[1615,1615]]],[1570100947582,["GJX@GJXAIOU",[[1,1615,"为 OGNL的"]],[1615,1615],[1622,1622]]],[1570100947629,["GJX@GJXAIOU",[[1,1621," "]],[1622,1622],[1623,1623]]],[1570100965046,["GJX@GJXAIOU",[[1,1623,"操作对象，它规定了 ****"]],[1623,1623],[1635,1635]]],[1570100969375,["GJX@GJXAIOU",[[1,1635,"对谁操作"]],[1635,1635],[1639,1639]]],[1570100970667,["GJX@GJXAIOU",[[1,1596,"  "]],[1639,1639],[1641,1641]]],[1570100972496,["GJX@GJXAIOU",[[-1,1596,"  "]],[1641,1641],[1639,1639]]],[1570101033822,[null,[[-1,7868,"u"],[1,7869,"\n"],[-1,8280,"age"],[1,8283,"```"],[-1,8313,"`"],[1,8314,"\n"],[-1,8403,"`"],[-1,8406," |"],[-1,8409,"\n（三）"],[1,8417,"（三）"],[1,8425,"集合"],[-1,8427,"*  **********变\n\n*  ****生*****方\n\n*"],[1,8460,"第一步  定义list集合变量\n第二步  生成变量的get方法\n第三步"],[-1,8462,"****"],[-1,8471,"********集"],[1,8480,"法里面向list集合设"],[1,8482,"\n\n"],[-1,9277,"|#\n七、\n"],[1,9286,"七、"],[-1,9291,"* ****str*** 和 ***+***组合*"],[1,9316,"数据\n\n使用struts2的标签 和 ognl"],[1,9319,"组合"],[1,9321,"值栈数据"],[-1,9327,"***）"],[-1,9350,"****"],[1,9354,"ognl"],[1,9356,"式”/>"],[-1,9359," |\n\n（一）"],[1,9370,"（一）"],[1,9373,"符串\n\n"],[-1,10037," |\n\n（二）"],[1,10048,"（二）"],[1,10050,"对象\n\n"],[-1,10076,"* **"],[1,10082,"栈放"],[1,10083,"象\n"],[-1,10106,"象"],[1,10107,"\n"],[-1,10517,")"],[1,10518,"\n"],[-1,10525,"* **"],[1,10532,"中获"],[1,10533,"值\n"],[-1,10545,"值"],[1,10546,"\n"],[-1,10551,">\n:property>\n\n    <br"],[-1,10765,")"],[1,10766,"\n"],[-1,10828,"（三）"],[1,10841,"\n```\n\n\n### （三）获取list集合\n\n"],[-1,11545,"\n |\n\n# "],[1,11552,"第一种方式：\n"],[-1,11564,"获"],[1,11565,"\n"],[-1,11946,"p"],[1,11947,"\n"],[-1,11954,"01/cliage05 g) "],[1,11969,"第"],[-1,11973," *val*"],[1,11979,"：value 值为 List 对象名；\n"],[-1,11991,"*"],[1,11992,"\n"],[-1,12273,"p"],[1,12274,"\n"],[-1,12281,"01/clip_ig"],[1,12291,"第三种方式：最常用\n"],[-1,12303,"e"],[1,12304,"\n"],[-1,12733,"i"],[1,12734,"\n"],[-1,12737,"p"],[1,12740,"\n"],[-1,12743,"p"],[1,12744,"\n"],[-1,12920,"g\n)\n\n因（四）为值是从 C"],[1,12935,"\n\n### （四）其他操作\n\n"],[-1,12961,"te"],[1,12963,"\n\n"],[-1,13112,"p"],[1,13113,"\n"],[-1,13116,"p_ e064 )\n\n**2** **"],[-1,13137,"*"],[1,13138," push 方法向值栈放数据，获取方法："],[-1,13192,"0iage jpg) "],[-1,13204,"****"],[-1,13209,"****"],[-1,13216,"****s*置"],[1,13223," push 方法设置值，没有"],[-1,13232,"**"],[-1,13235,"\n**"],[-1,13239,"****"],[-1,13244,"****"],[1,13250,"值栈"],[1,13251,"数据"],[1,13254,"向值栈放"],[1,13262,"，数组名称 top，根据数组获取值"],[-1,13320,"\n"],[1,13321,"\""],[1,13323,"\n"],[-1,13328,"1/cli八、 p_ima可以ge068."],[1,13349,"\n## 八、 EL表达式可以获取值栈数据"],[-1,13353," -L表达 栈数据（为什么）\n对* **Valuek.j \n**首先加 `***** **"],[1,13398,"\n- EL 表达式获取域对象值\n首先加上标签头：`<%@ "],[-1,13404,"**"],[-1,13407,"**"],[-1,13414,"****"],[1,13427,"va.s"],[1,13428,"n"],[-1,13436,"le**pf\"****c****\"%*"],[1,13455,"/jstl/core\"prefix=\"c\"%>`\n然后使用 foreach\n"],[-1,13627,"*- </c:forEac\n\n**2** **"],[1,13650,"\n- "],[1,13652,"对象里面"],[-1,13656,"****"],[1,13660,"setA"],[-1,13668,"****取值**- "],[1,13678,"方法，获取值使用getAtt"],[-1,13682," **方法**\n ** **底层增*"],[1,13700,"te方法\n\n- 底层增强 "],[-1,13707,"****"],[1,13712,"对象里面"],[-1,13714,"**gtte****"],[1,13724,"法：getAttribute 方法"],[-1,13726,"**"],[-1,13730,"****"],[-1,13738,"****"],[-1,13744,"e*取"],[1,13747,"quest域获取值，如果"],[-1,13751,"**\n\n**"],[1,13757,"直接返回\n"],[-1,13759,"****"],[-1,13767,"****"],[-1,13778,"****"],[1,13785,"不到"],[-1,13787,"/cli九、p_image072.jpg)\n（一）\n |"],[1,13815,"到值栈中把值获取出来，把值放到域对象里面\n\n\n## 九、OGNL的#、%使用\n\n### （一）#使用"],[-1,13839," "],[1,13840,"\n"],[-1,14070,"O"],[1,14071,"\n"],[-1,14421,"/"],[1,14422,"\n"],[-1,14571,"clip"],[1,14575,"### "],[-1,14578,"_imag-  在# "],[-1,14594,"**1** **标标签**\n\n***1******s"],[1,14620,"-  在struts2标签中表单标签\n在strut"],[-1,14622,"****"],[-1,14629,"***"],[1,14632,"面使用"],[-1,14644,"*str****"],[1,14652,"在struts2"],[-1,14657,"*nl****表/"],[1,14666,"面使用ognl表达式不识别，只有%之后才会识别。\n"],[-1,14794,"1/clip_image081.jpg)\n\n |"]],[7868,7868],[14794,14794]]],[1570101033822,[null,[[1,7868,"u"],[-1,7868,"\n"],[1,8280,"age"],[-1,8280,"```"],[1,8313,"`"],[-1,8313,"\n"],[1,8403,"`"],[1,8405," |"],[1,8406,"\n（三）"],[-1,8410,"（三）"],[-1,8421,"集合"],[1,8425,"*  **********变\n\n*  ****生*****方\n\n*"],[-1,8425,"第一步  定义list集合变量\n第二步  生成变量的get方法\n第三步"],[1,8462,"****"],[1,8467,"********集"],[-1,8467,"法里面向list集合设"],[-1,8480,"\n\n"],[1,9277,"|#\n七、\n"],[-1,9280,"七、"],[1,9287,"* ****str*** 和 ***+***组合*"],[-1,9287,"数据\n\n使用struts2的标签 和 ognl"],[-1,9313,"组合"],[-1,9317,"值栈数据"],[1,9327,"***）"],[1,9346,"****"],[-1,9346,"ognl"],[-1,9352,"式”/>"],[1,9359," |\n\n（一）"],[-1,9363,"（一）"],[-1,9369,"符串\n\n"],[1,10037," |\n\n（二）"],[-1,10041,"（二）"],[-1,10046,"对象\n\n"],[1,10076,"* **"],[-1,10078,"栈放"],[-1,10081,"象\n"],[1,10106,"象"],[-1,10106,"\n"],[1,10517,")"],[-1,10517,"\n"],[1,10525,"* **"],[-1,10528,"中获"],[-1,10531,"值\n"],[1,10545,"值"],[-1,10545,"\n"],[1,10551,">\n:property>\n\n    <br"],[1,10744,")"],[-1,10744,"\n"],[1,10807,"（三）"],[-1,10817,"\n```\n\n\n### （三）获取list集合\n\n"],[1,11545,"\n |\n\n# "],[-1,11545,"第一种方式：\n"],[1,11564,"获"],[-1,11564,"\n"],[1,11946,"p"],[-1,11946,"\n"],[1,11954,"01/cliage05 g) "],[-1,11954,"第"],[1,11959," *val*"],[-1,11959,"：value 值为 List 对象名；\n"],[1,11991,"*"],[-1,11991,"\n"],[1,12273,"p"],[-1,12273,"\n"],[1,12281,"01/clip_ig"],[-1,12281,"第三种方式：最常用\n"],[1,12303,"e"],[-1,12303,"\n"],[1,12733,"i"],[-1,12733,"\n"],[1,12737,"p"],[-1,12739,"\n"],[1,12743,"p"],[-1,12743,"\n"],[1,12920,"g\n)\n\n因（四）为值是从 C"],[-1,12920,"\n\n### （四）其他操作\n\n"],[1,12961,"te"],[-1,12961,"\n\n"],[1,13112,"p"],[-1,13112,"\n"],[1,13116,"p_ e064 )\n\n**2** **"],[1,13118,"*"],[-1,13118," push 方法向值栈放数据，获取方法："],[1,13192,"0iage jpg) "],[1,13193,"****"],[1,13194,"****"],[1,13197,"****s*置"],[-1,13197," push 方法设置值，没有"],[1,13220,"**"],[1,13221,"\n**"],[1,13222,"****"],[1,13223,"****"],[-1,13225,"值栈"],[-1,13228,"数据"],[-1,13233,"向值栈放"],[-1,13245,"，数组名称 top，根据数组获取值"],[1,13320,"\n"],[-1,13320,"\""],[-1,13323,"\n"],[1,13329,"1/cli八、 p_ima可以ge068."],[-1,13329,"\n## 八、 EL表达式可以获取值栈数据"],[1,13353," -L表达 栈数据（为什么）\n对* **Valuek.j \n**首先加 `***** **"],[-1,13353,"\n- EL 表达式获取域对象值\n首先加上标签头：`<%@ "],[1,13388,"**"],[1,13389,"**"],[1,13394,"****"],[-1,13403,"va.s"],[-1,13408,"n"],[1,13417,"le**pf\"****c****\"%*"],[-1,13417,"/jstl/core\"prefix=\"c\"%>`\n然后使用 foreach\n"],[1,13627,"*- </c:forEac\n\n**2** **"],[-1,13627,"\n- "],[-1,13632,"对象里面"],[1,13640,"****"],[-1,13640,"setA"],[1,13652,"****取值**- "],[-1,13652,"方法，获取值使用getAtt"],[1,13670," **方法**\n ** **底层增*"],[-1,13670,"te方法\n\n- 底层增强 "],[1,13690,"****"],[-1,13691,"对象里面"],[1,13697,"**gtte****"],[-1,13697,"法：getAttribute 方法"],[1,13716,"**"],[1,13718,"****"],[1,13722,"****"],[1,13724,"e*取"],[-1,13724,"quest域获取值，如果"],[1,13740,"**\n\n**"],[-1,13740,"直接返回\n"],[1,13747,"****"],[1,13751,"****"],[1,13758,"****"],[-1,13761,"不到"],[1,13765,"/cli九、p_image072.jpg)\n（一）\n |"],[-1,13765,"到值栈中把值获取出来，把值放到域对象里面\n\n\n## 九、OGNL的#、%使用\n\n### （一）#使用"],[1,13839," "],[-1,13839,"\n"],[1,14070,"O"],[-1,14070,"\n"],[1,14421,"/"],[-1,14421,"\n"],[1,14571,"clip"],[-1,14571,"### "],[1,14578,"_imag-  在# "],[1,14583,"**1** **标标签**\n\n***1******s"],[-1,14583,"-  在struts2标签中表单标签\n在strut"],[1,14610,"****"],[1,14613,"***"],[-1,14613,"面使用"],[1,14628,"*str****"],[-1,14628,"在struts2"],[1,14641,"*nl****表/"],[-1,14641,"面使用ognl表达式不识别，只有%之后才会识别。\n"],[1,14794,"1/clip_image081.jpg)\n\n |"]],[14794,14794],[7868,7868]]],[1570101002364,["GJX@GJXAIOU",[[1,1641,"，对象图的含义：以任意一个队形"]],[1641,1641],[1656,1656]]],[1570101002972,["GJX@GJXAIOU",[[-1,1654,"队形"]],[1656,1656],[1654,1654]]],[1570101030476,["GJX@GJXAIOU",[[1,1654,"对象为根，通过 OGNL 可以访问与这个对象关联的其他"]],[1654,1654],[1681,1681]]],[1570101093806,[null,[[-1,7908,"u"],[1,7909,"\n"],[-1,8320,"age"],[1,8323,"```"],[-1,8353,"`"],[1,8354,"\n"],[-1,8443,"`"],[-1,8446," |"],[-1,8449,"\n（三）"],[1,8457,"（三）"],[1,8465,"集合"],[-1,8467,"*  **********变\n\n*  ****生*****方\n\n*"],[1,8500,"第一步  定义list集合变量\n第二步  生成变量的get方法\n第三步"],[-1,8502,"****"],[-1,8511,"********集"],[1,8520,"法里面向list集合设"],[1,8522,"\n\n"],[-1,9317,"|#\n七、\n"],[1,9326,"七、"],[-1,9331,"* ****str*** 和 ***+***组合*"],[1,9356,"数据\n\n使用struts2的标签 和 ognl"],[1,9359,"组合"],[1,9361,"值栈数据"],[-1,9367,"***）"],[-1,9390,"****"],[1,9394,"ognl"],[1,9396,"式”/>"],[-1,9399," |\n\n（一）"],[1,9410,"（一）"],[1,9413,"符串\n\n"],[-1,10077," |\n\n（二）"],[1,10088,"（二）"],[1,10090,"对象\n\n"],[-1,10116,"* **"],[1,10122,"栈放"],[1,10123,"象\n"],[-1,10146,"象"],[1,10147,"\n"],[-1,10557,")"],[1,10558,"\n"],[-1,10565,"* **"],[1,10572,"中获"],[1,10573,"值\n"],[-1,10585,"值"],[1,10586,"\n"],[-1,10591,">\n:property>\n\n    <br"],[-1,10805,")"],[1,10806,"\n"],[-1,10868,"（三）"],[1,10881,"\n```\n\n\n### （三）获取list集合\n\n"],[-1,11585,"\n |\n\n# "],[1,11592,"第一种方式：\n"],[-1,11604,"获"],[1,11605,"\n"],[-1,11986,"p"],[1,11987,"\n"],[-1,11994,"01/cliage05 g) "],[1,12009,"第"],[-1,12013," *val*"],[1,12019,"：value 值为 List 对象名；\n"],[-1,12031,"*"],[1,12032,"\n"],[-1,12313,"p"],[1,12314,"\n"],[-1,12321,"01/clip_ig"],[1,12331,"第三种方式：最常用\n"],[-1,12343,"e"],[1,12344,"\n"],[-1,12773,"i"],[1,12774,"\n"],[-1,12777,"p"],[1,12780,"\n"],[-1,12783,"p"],[1,12784,"\n"],[-1,12960,"g\n)\n\n因（四）为值是从 C"],[1,12975,"\n\n### （四）其他操作\n\n"],[-1,13001,"te"],[1,13003,"\n\n"],[-1,13152,"p"],[1,13153,"\n"],[-1,13156,"p_ e064 )\n\n**2** **"],[-1,13177,"*"],[1,13178," push 方法向值栈放数据，获取方法："],[-1,13232,"0iage jpg) "],[-1,13244,"****"],[-1,13249,"****"],[-1,13256,"****s*置"],[1,13263," push 方法设置值，没有"],[-1,13272,"**"],[-1,13275,"\n**"],[-1,13279,"****"],[-1,13284,"****"],[1,13290,"值栈"],[1,13291,"数据"],[1,13294,"向值栈放"],[1,13302,"，数组名称 top，根据数组获取值"],[-1,13360,"\n"],[1,13361,"\""],[1,13363,"\n"],[-1,13368,"1/cli八、 p_ima可以ge068."],[1,13389,"\n## 八、 EL表达式可以获取值栈数据"],[-1,13393," -L表达 栈数据（为什么）\n对* **Valuek.j \n**首先加 `***** **"],[1,13438,"\n- EL 表达式获取域对象值\n首先加上标签头：`<%@ "],[-1,13444,"**"],[-1,13447,"**"],[-1,13454,"****"],[1,13467,"va.s"],[1,13468,"n"],[-1,13476,"le**pf\"****c****\"%*"],[1,13495,"/jstl/core\"prefix=\"c\"%>`\n然后使用 foreach\n"],[-1,13667,"*- </c:forEac\n\n**2** **"],[1,13690,"\n- "],[1,13692,"对象里面"],[-1,13696,"****"],[1,13700,"setA"],[-1,13708,"****取值**- "],[1,13718,"方法，获取值使用getAtt"],[-1,13722," **方法**\n ** **底层增*"],[1,13740,"te方法\n\n- 底层增强 "],[-1,13747,"****"],[1,13752,"对象里面"],[-1,13754,"**gtte****"],[1,13764,"法：getAttribute 方法"],[-1,13766,"**"],[-1,13770,"****"],[-1,13778,"****"],[-1,13784,"e*取"],[1,13787,"quest域获取值，如果"],[-1,13791,"**\n\n**"],[1,13797,"直接返回\n"],[-1,13799,"****"],[-1,13807,"****"],[-1,13818,"****"],[1,13825,"不到"],[-1,13827,"/cli九、p_image072.jpg)\n（一）\n |"],[1,13855,"到值栈中把值获取出来，把值放到域对象里面\n\n\n## 九、OGNL的#、%使用\n\n### （一）#使用"],[-1,13879," "],[1,13880,"\n"],[-1,14110,"O"],[1,14111,"\n"],[-1,14461,"/"],[1,14462,"\n"],[-1,14611,"clip"],[1,14615,"### "],[-1,14618,"_imag-  在# "],[-1,14634,"**1** **标标签**\n\n***1******s"],[1,14660,"-  在struts2标签中表单标签\n在strut"],[-1,14662,"****"],[-1,14669,"***"],[1,14672,"面使用"],[-1,14684,"*str****"],[1,14692,"在struts2"],[-1,14697,"*nl****表/"],[1,14706,"面使用ognl表达式不识别，只有%之后才会识别。\n"],[-1,14834,"1/clip_image081.jpg)\n\n |"]],[7908,7908],[14834,14834]]],[1570101093806,[null,[[1,7908,"u"],[-1,7908,"\n"],[1,8320,"age"],[-1,8320,"```"],[1,8353,"`"],[-1,8353,"\n"],[1,8443,"`"],[1,8445," |"],[1,8446,"\n（三）"],[-1,8450,"（三）"],[-1,8461,"集合"],[1,8465,"*  **********变\n\n*  ****生*****方\n\n*"],[-1,8465,"第一步  定义list集合变量\n第二步  生成变量的get方法\n第三步"],[1,8502,"****"],[1,8507,"********集"],[-1,8507,"法里面向list集合设"],[-1,8520,"\n\n"],[1,9317,"|#\n七、\n"],[-1,9320,"七、"],[1,9327,"* ****str*** 和 ***+***组合*"],[-1,9327,"数据\n\n使用struts2的标签 和 ognl"],[-1,9353,"组合"],[-1,9357,"值栈数据"],[1,9367,"***）"],[1,9386,"****"],[-1,9386,"ognl"],[-1,9392,"式”/>"],[1,9399," |\n\n（一）"],[-1,9403,"（一）"],[-1,9409,"符串\n\n"],[1,10077," |\n\n（二）"],[-1,10081,"（二）"],[-1,10086,"对象\n\n"],[1,10116,"* **"],[-1,10118,"栈放"],[-1,10121,"象\n"],[1,10146,"象"],[-1,10146,"\n"],[1,10557,")"],[-1,10557,"\n"],[1,10565,"* **"],[-1,10568,"中获"],[-1,10571,"值\n"],[1,10585,"值"],[-1,10585,"\n"],[1,10591,">\n:property>\n\n    <br"],[1,10784,")"],[-1,10784,"\n"],[1,10847,"（三）"],[-1,10857,"\n```\n\n\n### （三）获取list集合\n\n"],[1,11585,"\n |\n\n# "],[-1,11585,"第一种方式：\n"],[1,11604,"获"],[-1,11604,"\n"],[1,11986,"p"],[-1,11986,"\n"],[1,11994,"01/cliage05 g) "],[-1,11994,"第"],[1,11999," *val*"],[-1,11999,"：value 值为 List 对象名；\n"],[1,12031,"*"],[-1,12031,"\n"],[1,12313,"p"],[-1,12313,"\n"],[1,12321,"01/clip_ig"],[-1,12321,"第三种方式：最常用\n"],[1,12343,"e"],[-1,12343,"\n"],[1,12773,"i"],[-1,12773,"\n"],[1,12777,"p"],[-1,12779,"\n"],[1,12783,"p"],[-1,12783,"\n"],[1,12960,"g\n)\n\n因（四）为值是从 C"],[-1,12960,"\n\n### （四）其他操作\n\n"],[1,13001,"te"],[-1,13001,"\n\n"],[1,13152,"p"],[-1,13152,"\n"],[1,13156,"p_ e064 )\n\n**2** **"],[1,13158,"*"],[-1,13158," push 方法向值栈放数据，获取方法："],[1,13232,"0iage jpg) "],[1,13233,"****"],[1,13234,"****"],[1,13237,"****s*置"],[-1,13237," push 方法设置值，没有"],[1,13260,"**"],[1,13261,"\n**"],[1,13262,"****"],[1,13263,"****"],[-1,13265,"值栈"],[-1,13268,"数据"],[-1,13273,"向值栈放"],[-1,13285,"，数组名称 top，根据数组获取值"],[1,13360,"\n"],[-1,13360,"\""],[-1,13363,"\n"],[1,13369,"1/cli八、 p_ima可以ge068."],[-1,13369,"\n## 八、 EL表达式可以获取值栈数据"],[1,13393," -L表达 栈数据（为什么）\n对* **Valuek.j \n**首先加 `***** **"],[-1,13393,"\n- EL 表达式获取域对象值\n首先加上标签头：`<%@ "],[1,13428,"**"],[1,13429,"**"],[1,13434,"****"],[-1,13443,"va.s"],[-1,13448,"n"],[1,13457,"le**pf\"****c****\"%*"],[-1,13457,"/jstl/core\"prefix=\"c\"%>`\n然后使用 foreach\n"],[1,13667,"*- </c:forEac\n\n**2** **"],[-1,13667,"\n- "],[-1,13672,"对象里面"],[1,13680,"****"],[-1,13680,"setA"],[1,13692,"****取值**- "],[-1,13692,"方法，获取值使用getAtt"],[1,13710," **方法**\n ** **底层增*"],[-1,13710,"te方法\n\n- 底层增强 "],[1,13730,"****"],[-1,13731,"对象里面"],[1,13737,"**gtte****"],[-1,13737,"法：getAttribute 方法"],[1,13756,"**"],[1,13758,"****"],[1,13762,"****"],[1,13764,"e*取"],[-1,13764,"quest域获取值，如果"],[1,13780,"**\n\n**"],[-1,13780,"直接返回\n"],[1,13787,"****"],[1,13791,"****"],[1,13798,"****"],[-1,13801,"不到"],[1,13805,"/cli九、p_image072.jpg)\n（一）\n |"],[-1,13805,"到值栈中把值获取出来，把值放到域对象里面\n\n\n## 九、OGNL的#、%使用\n\n### （一）#使用"],[1,13879," "],[-1,13879,"\n"],[1,14110,"O"],[-1,14110,"\n"],[1,14461,"/"],[-1,14461,"\n"],[1,14611,"clip"],[-1,14611,"### "],[1,14618,"_imag-  在# "],[1,14623,"**1** **标标签**\n\n***1******s"],[-1,14623,"-  在struts2标签中表单标签\n在strut"],[1,14650,"****"],[1,14653,"***"],[-1,14653,"面使用"],[1,14668,"*str****"],[-1,14668,"在struts2"],[1,14681,"*nl****表/"],[-1,14681,"面使用ognl表达式不识别，只有%之后才会识别。\n"],[1,14834,"1/clip_image081.jpg)\n\n |"]],[14834,14834],[7908,7908]]],[1570101034235,["GJX@GJXAIOU",[[1,1683,"；"]],[1683,1683],[1684,1684]]],[1570101273812,[null,[[1,1681,"对象；"],[-1,1683,"；"],[-1,7909,"u"],[1,7910,"\n"],[-1,8321,"age"],[1,8324,"```"],[-1,8354,"`"],[1,8355,"\n"],[-1,8444,"`"],[-1,8447," |"],[-1,8450,"\n（三）"],[1,8458,"（三）"],[1,8466,"集合"],[-1,8468,"*  **********变\n\n*  ****生*****方\n\n*"],[1,8501,"第一步  定义list集合变量\n第二步  生成变量的get方法\n第三步"],[-1,8503,"****"],[-1,8512,"********集"],[1,8521,"法里面向list集合设"],[1,8523,"\n\n"],[-1,9318,"|#\n七、\n"],[1,9327,"七、"],[-1,9332,"* ****str*** 和 ***+***组合*"],[1,9357,"数据\n\n使用struts2的标签 和 ognl"],[1,9360,"组合"],[1,9362,"值栈数据"],[-1,9368,"***）"],[-1,9391,"****"],[1,9395,"ognl"],[1,9397,"式”/>"],[-1,9400," |\n\n（一）"],[1,9411,"（一）"],[1,9414,"符串\n\n"],[-1,10078," |\n\n（二）"],[1,10089,"（二）"],[1,10091,"对象\n\n"],[-1,10117,"* **"],[1,10123,"栈放"],[1,10124,"象\n"],[-1,10147,"象"],[1,10148,"\n"],[-1,10558,")"],[1,10559,"\n"],[-1,10566,"* **"],[1,10573,"中获"],[1,10574,"值\n"],[-1,10586,"值"],[1,10587,"\n"],[-1,10592,">\n:property>\n\n    <br"],[-1,10806,")"],[1,10807,"\n"],[-1,10869,"（三）"],[1,10882,"\n```\n\n\n### （三）获取list集合\n\n"],[-1,11586,"\n |\n\n# "],[1,11593,"第一种方式：\n"],[-1,11605,"获"],[1,11606,"\n"],[-1,11987,"p"],[1,11988,"\n"],[-1,11995,"01/cliage05 g) "],[1,12010,"第"],[-1,12014," *val*"],[1,12020,"：value 值为 List 对象名；\n"],[-1,12032,"*"],[1,12033,"\n"],[-1,12314,"p"],[1,12315,"\n"],[-1,12322,"01/clip_ig"],[1,12332,"第三种方式：最常用\n"],[-1,12344,"e"],[1,12345,"\n"],[-1,12774,"i"],[1,12775,"\n"],[-1,12778,"p"],[1,12781,"\n"],[-1,12784,"p"],[1,12785,"\n"],[-1,12961,"g\n)\n\n因（四）为值是从 C"],[1,12976,"\n\n### （四）其他操作\n\n"],[-1,13002,"te"],[1,13004,"\n\n"],[-1,13153,"p"],[1,13154,"\n"],[-1,13157,"p_ e064 )\n\n**2** **"],[-1,13178,"*"],[1,13179," push 方法向值栈放数据，获取方法："],[-1,13233,"0iage jpg) "],[-1,13245,"****"],[-1,13250,"****"],[-1,13257,"****s*置"],[1,13264," push 方法设置值，没有"],[-1,13273,"**"],[-1,13276,"\n**"],[-1,13280,"****"],[-1,13285,"****"],[1,13291,"值栈"],[1,13292,"数据"],[1,13295,"向值栈放"],[1,13303,"，数组名称 top，根据数组获取值"],[-1,13361,"\n"],[1,13362,"\""],[1,13364,"\n"],[-1,13369,"1/cli八、 p_ima可以ge068."],[1,13390,"\n## 八、 EL表达式可以获取值栈数据"],[-1,13394," -L表达 栈数据（为什么）\n对* **Valuek.j \n**首先加 `***** **"],[1,13439,"\n- EL 表达式获取域对象值\n首先加上标签头：`<%@ "],[-1,13445,"**"],[-1,13448,"**"],[-1,13455,"****"],[1,13468,"va.s"],[1,13469,"n"],[-1,13477,"le**pf\"****c****\"%*"],[1,13496,"/jstl/core\"prefix=\"c\"%>`\n然后使用 foreach\n"],[-1,13668,"*- </c:forEac\n\n**2** **"],[1,13691,"\n- "],[1,13693,"对象里面"],[-1,13697,"****"],[1,13701,"setA"],[-1,13709,"****取值**- "],[1,13719,"方法，获取值使用getAtt"],[-1,13723," **方法**\n ** **底层增*"],[1,13741,"te方法\n\n- 底层增强 "],[-1,13748,"****"],[1,13753,"对象里面"],[-1,13755,"**gtte****"],[1,13765,"法：getAttribute 方法"],[-1,13767,"**"],[-1,13771,"****"],[-1,13779,"****"],[-1,13785,"e*取"],[1,13788,"quest域获取值，如果"],[-1,13792,"**\n\n**"],[1,13798,"直接返回\n"],[-1,13800,"****"],[-1,13808,"****"],[-1,13819,"****"],[1,13826,"不到"],[-1,13828,"/cli九、p_image072.jpg)\n（一）\n |"],[1,13856,"到值栈中把值获取出来，把值放到域对象里面\n\n\n## 九、OGNL的#、%使用\n\n### （一）#使用"],[-1,13880," "],[1,13881,"\n"],[-1,14111,"O"],[1,14112,"\n"],[-1,14462,"/"],[1,14463,"\n"],[-1,14612,"clip"],[1,14616,"### "],[-1,14619,"_imag-  在# "],[-1,14635,"**1** **标标签**\n\n***1******s"],[1,14661,"-  在struts2标签中表单标签\n在strut"],[-1,14663,"****"],[-1,14670,"***"],[1,14673,"面使用"],[-1,14685,"*str****"],[1,14693,"在struts2"],[-1,14698,"*nl****表/"],[1,14707,"面使用ognl表达式不识别，只有%之后才会识别。\n"],[-1,14835,"1/clip_image081.jpg)\n\n |"]],[1681,1681],[14835,14835]]],[1570101273812,[null,[[-1,1681,"对象；"],[1,1686,"；"],[1,7911,"u"],[-1,7911,"\n"],[1,8323,"age"],[-1,8323,"```"],[1,8356,"`"],[-1,8356,"\n"],[1,8446,"`"],[1,8448," |"],[1,8449,"\n（三）"],[-1,8453,"（三）"],[-1,8464,"集合"],[1,8468,"*  **********变\n\n*  ****生*****方\n\n*"],[-1,8468,"第一步  定义list集合变量\n第二步  生成变量的get方法\n第三步"],[1,8505,"****"],[1,8510,"********集"],[-1,8510,"法里面向list集合设"],[-1,8523,"\n\n"],[1,9320,"|#\n七、\n"],[-1,9323,"七、"],[1,9330,"* ****str*** 和 ***+***组合*"],[-1,9330,"数据\n\n使用struts2的标签 和 ognl"],[-1,9356,"组合"],[-1,9360,"值栈数据"],[1,9370,"***）"],[1,9389,"****"],[-1,9389,"ognl"],[-1,9395,"式”/>"],[1,9402," |\n\n（一）"],[-1,9406,"（一）"],[-1,9412,"符串\n\n"],[1,10080," |\n\n（二）"],[-1,10084,"（二）"],[-1,10089,"对象\n\n"],[1,10119,"* **"],[-1,10121,"栈放"],[-1,10124,"象\n"],[1,10149,"象"],[-1,10149,"\n"],[1,10560,")"],[-1,10560,"\n"],[1,10568,"* **"],[-1,10571,"中获"],[-1,10574,"值\n"],[1,10588,"值"],[-1,10588,"\n"],[1,10594,">\n:property>\n\n    <br"],[1,10787,")"],[-1,10787,"\n"],[1,10850,"（三）"],[-1,10860,"\n```\n\n\n### （三）获取list集合\n\n"],[1,11588,"\n |\n\n# "],[-1,11588,"第一种方式：\n"],[1,11607,"获"],[-1,11607,"\n"],[1,11989,"p"],[-1,11989,"\n"],[1,11997,"01/cliage05 g) "],[-1,11997,"第"],[1,12002," *val*"],[-1,12002,"：value 值为 List 对象名；\n"],[1,12034,"*"],[-1,12034,"\n"],[1,12316,"p"],[-1,12316,"\n"],[1,12324,"01/clip_ig"],[-1,12324,"第三种方式：最常用\n"],[1,12346,"e"],[-1,12346,"\n"],[1,12776,"i"],[-1,12776,"\n"],[1,12780,"p"],[-1,12782,"\n"],[1,12786,"p"],[-1,12786,"\n"],[1,12963,"g\n)\n\n因（四）为值是从 C"],[-1,12963,"\n\n### （四）其他操作\n\n"],[1,13004,"te"],[-1,13004,"\n\n"],[1,13155,"p"],[-1,13155,"\n"],[1,13159,"p_ e064 )\n\n**2** **"],[1,13161,"*"],[-1,13161," push 方法向值栈放数据，获取方法："],[1,13235,"0iage jpg) "],[1,13236,"****"],[1,13237,"****"],[1,13240,"****s*置"],[-1,13240," push 方法设置值，没有"],[1,13263,"**"],[1,13264,"\n**"],[1,13265,"****"],[1,13266,"****"],[-1,13268,"值栈"],[-1,13271,"数据"],[-1,13276,"向值栈放"],[-1,13288,"，数组名称 top，根据数组获取值"],[1,13363,"\n"],[-1,13363,"\""],[-1,13366,"\n"],[1,13372,"1/cli八、 p_ima可以ge068."],[-1,13372,"\n## 八、 EL表达式可以获取值栈数据"],[1,13396," -L表达 栈数据（为什么）\n对* **Valuek.j \n**首先加 `***** **"],[-1,13396,"\n- EL 表达式获取域对象值\n首先加上标签头：`<%@ "],[1,13431,"**"],[1,13432,"**"],[1,13437,"****"],[-1,13446,"va.s"],[-1,13451,"n"],[1,13460,"le**pf\"****c****\"%*"],[-1,13460,"/jstl/core\"prefix=\"c\"%>`\n然后使用 foreach\n"],[1,13670,"*- </c:forEac\n\n**2** **"],[-1,13670,"\n- "],[-1,13675,"对象里面"],[1,13683,"****"],[-1,13683,"setA"],[1,13695,"****取值**- "],[-1,13695,"方法，获取值使用getAtt"],[1,13713," **方法**\n ** **底层增*"],[-1,13713,"te方法\n\n- 底层增强 "],[1,13733,"****"],[-1,13734,"对象里面"],[1,13740,"**gtte****"],[-1,13740,"法：getAttribute 方法"],[1,13759,"**"],[1,13761,"****"],[1,13765,"****"],[1,13767,"e*取"],[-1,13767,"quest域获取值，如果"],[1,13783,"**\n\n**"],[-1,13783,"直接返回\n"],[1,13790,"****"],[1,13794,"****"],[1,13801,"****"],[-1,13804,"不到"],[1,13808,"/cli九、p_image072.jpg)\n（一）\n |"],[-1,13808,"到值栈中把值获取出来，把值放到域对象里面\n\n\n## 九、OGNL的#、%使用\n\n### （一）#使用"],[1,13882," "],[-1,13882,"\n"],[1,14113,"O"],[-1,14113,"\n"],[1,14464,"/"],[-1,14464,"\n"],[1,14614,"clip"],[-1,14614,"### "],[1,14621,"_imag-  在# "],[1,14626,"**1** **标标签**\n\n***1******s"],[-1,14626,"-  在struts2标签中表单标签\n在strut"],[1,14653,"****"],[1,14656,"***"],[-1,14656,"面使用"],[1,14671,"*str****"],[-1,14671,"在struts2"],[1,14684,"*nl****表/"],[-1,14684,"面使用ognl表达式不识别，只有%之后才会识别。\n"],[1,14837,"1/clip_image081.jpg)\n\n |"]],[14835,14835],[1681,1681]]],[1570101229703,["GJX@GJXAIOU",[[1,1685,"  - COntext"]],[1685,1685],[1696,1696]]],[1570101231626,["GJX@GJXAIOU",[[-1,1689,"COntext"]],[1696,1696],[1689,1689]]],[1570101236477,["GJX@GJXAIOU",[[1,1689,"Context对象"]],[1689,1689],[1698,1698]]],[1570101236524,["GJX@GJXAIOU",[[1,1696," "]],[1698,1698],[1699,1699]]],[1570101258580,["GJX@GJXAIOU",[[1,1699,"：设置了 Root对象"]],[1699,1699],[1710,1710]]],[1570101258627,["GJX@GJXAIOU",[[1,1708," "]],[1710,1710],[1711,1711]]],[1570101266508,["GJX@GJXAIOU",[[1,1711,"， OGNL 可以对 Root对象"]],[1711,1711],[1728,1728]]],[1570101266557,["GJX@GJXAIOU",[[1,1726," "]],[1728,1728],[1729,1729]]],[1570101271181,["GJX@GJXAIOU",[[1,1729,"进行取值或者"]],[1729,1729],[1735,1735]]],[1570101333810,[null,[[-1,1681,"\n\n"],[1,1683,"对象"],[1,1735,"\n\n"],[-1,7959,"u"],[1,7960,"\n"],[-1,8371,"age"],[1,8374,"```"],[-1,8404,"`"],[1,8405,"\n"],[-1,8494,"`"],[-1,8497," |"],[-1,8500,"\n（三）"],[1,8508,"（三）"],[1,8516,"集合"],[-1,8518,"*  **********变\n\n*  ****生*****方\n\n*"],[1,8551,"第一步  定义list集合变量\n第二步  生成变量的get方法\n第三步"],[-1,8553,"****"],[-1,8562,"********集"],[1,8571,"法里面向list集合设"],[1,8573,"\n\n"],[-1,9368,"|#\n七、\n"],[1,9377,"七、"],[-1,9382,"* ****str*** 和 ***+***组合*"],[1,9407,"数据\n\n使用struts2的标签 和 ognl"],[1,9410,"组合"],[1,9412,"值栈数据"],[-1,9418,"***）"],[-1,9441,"****"],[1,9445,"ognl"],[1,9447,"式”/>"],[-1,9450," |\n\n（一）"],[1,9461,"（一）"],[1,9464,"符串\n\n"],[-1,10128," |\n\n（二）"],[1,10139,"（二）"],[1,10141,"对象\n\n"],[-1,10167,"* **"],[1,10173,"栈放"],[1,10174,"象\n"],[-1,10197,"象"],[1,10198,"\n"],[-1,10608,")"],[1,10609,"\n"],[-1,10616,"* **"],[1,10623,"中获"],[1,10624,"值\n"],[-1,10636,"值"],[1,10637,"\n"],[-1,10642,">\n:property>\n\n    <br"],[-1,10856,")"],[1,10857,"\n"],[-1,10919,"（三）"],[1,10932,"\n```\n\n\n### （三）获取list集合\n\n"],[-1,11636,"\n |\n\n# "],[1,11643,"第一种方式：\n"],[-1,11655,"获"],[1,11656,"\n"],[-1,12037,"p"],[1,12038,"\n"],[-1,12045,"01/cliage05 g) "],[1,12060,"第"],[-1,12064," *val*"],[1,12070,"：value 值为 List 对象名；\n"],[-1,12082,"*"],[1,12083,"\n"],[-1,12364,"p"],[1,12365,"\n"],[-1,12372,"01/clip_ig"],[1,12382,"第三种方式：最常用\n"],[-1,12394,"e"],[1,12395,"\n"],[-1,12824,"i"],[1,12825,"\n"],[-1,12828,"p"],[1,12831,"\n"],[-1,12834,"p"],[1,12835,"\n"],[-1,13011,"g\n)\n\n因（四）为值是从 C"],[1,13026,"\n\n### （四）其他操作\n\n"],[-1,13052,"te"],[1,13054,"\n\n"],[-1,13203,"p"],[1,13204,"\n"],[-1,13207,"p_ e064 )\n\n**2** **"],[-1,13228,"*"],[1,13229," push 方法向值栈放数据，获取方法："],[-1,13283,"0iage jpg) "],[-1,13295,"****"],[-1,13300,"****"],[-1,13307,"****s*置"],[1,13314," push 方法设置值，没有"],[-1,13323,"**"],[-1,13326,"\n**"],[-1,13330,"****"],[-1,13335,"****"],[1,13341,"值栈"],[1,13342,"数据"],[1,13345,"向值栈放"],[1,13353,"，数组名称 top，根据数组获取值"],[-1,13411,"\n"],[1,13412,"\""],[1,13414,"\n"],[-1,13419,"1/cli八、 p_ima可以ge068."],[1,13440,"\n## 八、 EL表达式可以获取值栈数据"],[-1,13444," -L表达 栈数据（为什么）\n对* **Valuek.j \n**首先加 `***** **"],[1,13489,"\n- EL 表达式获取域对象值\n首先加上标签头：`<%@ "],[-1,13495,"**"],[-1,13498,"**"],[-1,13505,"****"],[1,13518,"va.s"],[1,13519,"n"],[-1,13527,"le**pf\"****c****\"%*"],[1,13546,"/jstl/core\"prefix=\"c\"%>`\n然后使用 foreach\n"],[-1,13718,"*- </c:forEac\n\n**2** **"],[1,13741,"\n- "],[1,13743,"对象里面"],[-1,13747,"****"],[1,13751,"setA"],[-1,13759,"****取值**- "],[1,13769,"方法，获取值使用getAtt"],[-1,13773," **方法**\n ** **底层增*"],[1,13791,"te方法\n\n- 底层增强 "],[-1,13798,"****"],[1,13803,"对象里面"],[-1,13805,"**gtte****"],[1,13815,"法：getAttribute 方法"],[-1,13817,"**"],[-1,13821,"****"],[-1,13829,"****"],[-1,13835,"e*取"],[1,13838,"quest域获取值，如果"],[-1,13842,"**\n\n**"],[1,13848,"直接返回\n"],[-1,13850,"****"],[-1,13858,"****"],[-1,13869,"****"],[1,13876,"不到"],[-1,13878,"/cli九、p_image072.jpg)\n（一）\n |"],[1,13906,"到值栈中把值获取出来，把值放到域对象里面\n\n\n## 九、OGNL的#、%使用\n\n### （一）#使用"],[-1,13930," "],[1,13931,"\n"],[-1,14161,"O"],[1,14162,"\n"],[-1,14512,"/"],[1,14513,"\n"],[-1,14662,"clip"],[1,14666,"### "],[-1,14669,"_imag-  在# "],[-1,14685,"**1** **标标签**\n\n***1******s"],[1,14711,"-  在struts2标签中表单标签\n在strut"],[-1,14713,"****"],[-1,14720,"***"],[1,14723,"面使用"],[-1,14735,"*str****"],[1,14743,"在struts2"],[-1,14748,"*nl****表/"],[1,14757,"面使用ognl表达式不识别，只有%之后才会识别。\n"],[-1,14885,"1/clip_image081.jpg)\n\n |"]],[1681,1681],[14885,14885]]],[1570101333810,[null,[[1,1681,"\n\n"],[-1,1681,"对象"],[-1,1735,"\n\n"],[1,7961,"u"],[-1,7961,"\n"],[1,8373,"age"],[-1,8373,"```"],[1,8406,"`"],[-1,8406,"\n"],[1,8496,"`"],[1,8498," |"],[1,8499,"\n（三）"],[-1,8503,"（三）"],[-1,8514,"集合"],[1,8518,"*  **********变\n\n*  ****生*****方\n\n*"],[-1,8518,"第一步  定义list集合变量\n第二步  生成变量的get方法\n第三步"],[1,8555,"****"],[1,8560,"********集"],[-1,8560,"法里面向list集合设"],[-1,8573,"\n\n"],[1,9370,"|#\n七、\n"],[-1,9373,"七、"],[1,9380,"* ****str*** 和 ***+***组合*"],[-1,9380,"数据\n\n使用struts2的标签 和 ognl"],[-1,9406,"组合"],[-1,9410,"值栈数据"],[1,9420,"***）"],[1,9439,"****"],[-1,9439,"ognl"],[-1,9445,"式”/>"],[1,9452," |\n\n（一）"],[-1,9456,"（一）"],[-1,9462,"符串\n\n"],[1,10130," |\n\n（二）"],[-1,10134,"（二）"],[-1,10139,"对象\n\n"],[1,10169,"* **"],[-1,10171,"栈放"],[-1,10174,"象\n"],[1,10199,"象"],[-1,10199,"\n"],[1,10610,")"],[-1,10610,"\n"],[1,10618,"* **"],[-1,10621,"中获"],[-1,10624,"值\n"],[1,10638,"值"],[-1,10638,"\n"],[1,10644,">\n:property>\n\n    <br"],[1,10837,")"],[-1,10837,"\n"],[1,10900,"（三）"],[-1,10910,"\n```\n\n\n### （三）获取list集合\n\n"],[1,11638,"\n |\n\n# "],[-1,11638,"第一种方式：\n"],[1,11657,"获"],[-1,11657,"\n"],[1,12039,"p"],[-1,12039,"\n"],[1,12047,"01/cliage05 g) "],[-1,12047,"第"],[1,12052," *val*"],[-1,12052,"：value 值为 List 对象名；\n"],[1,12084,"*"],[-1,12084,"\n"],[1,12366,"p"],[-1,12366,"\n"],[1,12374,"01/clip_ig"],[-1,12374,"第三种方式：最常用\n"],[1,12396,"e"],[-1,12396,"\n"],[1,12826,"i"],[-1,12826,"\n"],[1,12830,"p"],[-1,12832,"\n"],[1,12836,"p"],[-1,12836,"\n"],[1,13013,"g\n)\n\n因（四）为值是从 C"],[-1,13013,"\n\n### （四）其他操作\n\n"],[1,13054,"te"],[-1,13054,"\n\n"],[1,13205,"p"],[-1,13205,"\n"],[1,13209,"p_ e064 )\n\n**2** **"],[1,13211,"*"],[-1,13211," push 方法向值栈放数据，获取方法："],[1,13285,"0iage jpg) "],[1,13286,"****"],[1,13287,"****"],[1,13290,"****s*置"],[-1,13290," push 方法设置值，没有"],[1,13313,"**"],[1,13314,"\n**"],[1,13315,"****"],[1,13316,"****"],[-1,13318,"值栈"],[-1,13321,"数据"],[-1,13326,"向值栈放"],[-1,13338,"，数组名称 top，根据数组获取值"],[1,13413,"\n"],[-1,13413,"\""],[-1,13416,"\n"],[1,13422,"1/cli八、 p_ima可以ge068."],[-1,13422,"\n## 八、 EL表达式可以获取值栈数据"],[1,13446," -L表达 栈数据（为什么）\n对* **Valuek.j \n**首先加 `***** **"],[-1,13446,"\n- EL 表达式获取域对象值\n首先加上标签头：`<%@ "],[1,13481,"**"],[1,13482,"**"],[1,13487,"****"],[-1,13496,"va.s"],[-1,13501,"n"],[1,13510,"le**pf\"****c****\"%*"],[-1,13510,"/jstl/core\"prefix=\"c\"%>`\n然后使用 foreach\n"],[1,13720,"*- </c:forEac\n\n**2** **"],[-1,13720,"\n- "],[-1,13725,"对象里面"],[1,13733,"****"],[-1,13733,"setA"],[1,13745,"****取值**- "],[-1,13745,"方法，获取值使用getAtt"],[1,13763," **方法**\n ** **底层增*"],[-1,13763,"te方法\n\n- 底层增强 "],[1,13783,"****"],[-1,13784,"对象里面"],[1,13790,"**gtte****"],[-1,13790,"法：getAttribute 方法"],[1,13809,"**"],[1,13811,"****"],[1,13815,"****"],[1,13817,"e*取"],[-1,13817,"quest域获取值，如果"],[1,13833,"**\n\n**"],[-1,13833,"直接返回\n"],[1,13840,"****"],[1,13844,"****"],[1,13851,"****"],[-1,13854,"不到"],[1,13858,"/cli九、p_image072.jpg)\n（一）\n |"],[-1,13858,"到值栈中把值获取出来，把值放到域对象里面\n\n\n## 九、OGNL的#、%使用\n\n### （一）#使用"],[1,13932," "],[-1,13932,"\n"],[1,14163,"O"],[-1,14163,"\n"],[1,14514,"/"],[-1,14514,"\n"],[1,14664,"clip"],[-1,14664,"### "],[1,14671,"_imag-  在# "],[1,14676,"**1** **标标签**\n\n***1******s"],[-1,14676,"-  在struts2标签中表单标签\n在strut"],[1,14703,"****"],[1,14706,"***"],[-1,14706,"面使用"],[1,14721,"*str****"],[-1,14721,"在struts2"],[1,14734,"*nl****表/"],[-1,14734,"面使用ognl表达式不识别，只有%之后才会识别。\n"],[1,14887,"1/clip_image081.jpg)\n\n |"]],[14885,14885],[1681,1681]]],[1570101285837,["GJX@GJXAIOU",[[1,1735,"写值操作，Root对象"]],[1735,1735],[1746,1746]]],[1570101285886,["GJX@GJXAIOU",[[1,1744," "]],[1746,1746],[1747,1747]]],[1570101294397,["GJX@GJXAIOU",[[1,1747,"所在的环境就是 OGNL的"]],[1747,1747],[1760,1760]]],[1570101294444,["GJX@GJXAIOU",[[1,1759," "]],[1760,1760],[1761,1761]]],[1570101298828,["GJX@GJXAIOU",[[1,1761,"上下文环境（）"]],[1761,1761],[1768,1768]]],[1570101303502,["GJX@GJXAIOU",[[1,1767,"Context"]],[1767,1767],[1774,1774]]],[1570101322478,["GJX@GJXAIOU",[[1,1775,"。上下文环境规定了 OGNL的"]],[1775,1775],[1790,1790]]],[1570101322524,["GJX@GJXAIOU",[[1,1789," "]],[1790,1790],[1791,1791]]],[1570101325870,["GJX@GJXAIOU",[[1,1791,"操作 ****"]],[1791,1791],[1796,1796]]],[1570101329989,["GJX@GJXAIOU",[[1,1796,"在哪里执行"]],[1796,1796],[1801,1801]]],[1570101393810,[null,[[-1,1681,"\n\n"],[1,1683,"对象"],[1,1803,"\n\n"],[-1,8027,"u"],[1,8028,"\n"],[-1,8439,"age"],[1,8442,"```"],[-1,8472,"`"],[1,8473,"\n"],[-1,8562,"`"],[-1,8565," |"],[-1,8568,"\n（三）"],[1,8576,"（三）"],[1,8584,"集合"],[-1,8586,"*  **********变\n\n*  ****生*****方\n\n*"],[1,8619,"第一步  定义list集合变量\n第二步  生成变量的get方法\n第三步"],[-1,8621,"****"],[-1,8630,"********集"],[1,8639,"法里面向list集合设"],[1,8641,"\n\n"],[-1,9436,"|#\n七、\n"],[1,9445,"七、"],[-1,9450,"* ****str*** 和 ***+***组合*"],[1,9475,"数据\n\n使用struts2的标签 和 ognl"],[1,9478,"组合"],[1,9480,"值栈数据"],[-1,9486,"***）"],[-1,9509,"****"],[1,9513,"ognl"],[1,9515,"式”/>"],[-1,9518," |\n\n（一）"],[1,9529,"（一）"],[1,9532,"符串\n\n"],[-1,10196," |\n\n（二）"],[1,10207,"（二）"],[1,10209,"对象\n\n"],[-1,10235,"* **"],[1,10241,"栈放"],[1,10242,"象\n"],[-1,10265,"象"],[1,10266,"\n"],[-1,10676,")"],[1,10677,"\n"],[-1,10684,"* **"],[1,10691,"中获"],[1,10692,"值\n"],[-1,10704,"值"],[1,10705,"\n"],[-1,10710,">\n:property>\n\n    <br"],[-1,10924,")"],[1,10925,"\n"],[-1,10987,"（三）"],[1,11000,"\n```\n\n\n### （三）获取list集合\n\n"],[-1,11704,"\n |\n\n# "],[1,11711,"第一种方式：\n"],[-1,11723,"获"],[1,11724,"\n"],[-1,12105,"p"],[1,12106,"\n"],[-1,12113,"01/cliage05 g) "],[1,12128,"第"],[-1,12132," *val*"],[1,12138,"：value 值为 List 对象名；\n"],[-1,12150,"*"],[1,12151,"\n"],[-1,12432,"p"],[1,12433,"\n"],[-1,12440,"01/clip_ig"],[1,12450,"第三种方式：最常用\n"],[-1,12462,"e"],[1,12463,"\n"],[-1,12892,"i"],[1,12893,"\n"],[-1,12896,"p"],[1,12899,"\n"],[-1,12902,"p"],[1,12903,"\n"],[-1,13079,"g\n)\n\n因（四）为值是从 C"],[1,13094,"\n\n### （四）其他操作\n\n"],[-1,13120,"te"],[1,13122,"\n\n"],[-1,13271,"p"],[1,13272,"\n"],[-1,13275,"p_ e064 )\n\n**2** **"],[-1,13296,"*"],[1,13297," push 方法向值栈放数据，获取方法："],[-1,13351,"0iage jpg) "],[-1,13363,"****"],[-1,13368,"****"],[-1,13375,"****s*置"],[1,13382," push 方法设置值，没有"],[-1,13391,"**"],[-1,13394,"\n**"],[-1,13398,"****"],[-1,13403,"****"],[1,13409,"值栈"],[1,13410,"数据"],[1,13413,"向值栈放"],[1,13421,"，数组名称 top，根据数组获取值"],[-1,13479,"\n"],[1,13480,"\""],[1,13482,"\n"],[-1,13487,"1/cli八、 p_ima可以ge068."],[1,13508,"\n## 八、 EL表达式可以获取值栈数据"],[-1,13512," -L表达 栈数据（为什么）\n对* **Valuek.j \n**首先加 `***** **"],[1,13557,"\n- EL 表达式获取域对象值\n首先加上标签头：`<%@ "],[-1,13563,"**"],[-1,13566,"**"],[-1,13573,"****"],[1,13586,"va.s"],[1,13587,"n"],[-1,13595,"le**pf\"****c****\"%*"],[1,13614,"/jstl/core\"prefix=\"c\"%>`\n然后使用 foreach\n"],[-1,13786,"*- </c:forEac\n\n**2** **"],[1,13809,"\n- "],[1,13811,"对象里面"],[-1,13815,"****"],[1,13819,"setA"],[-1,13827,"****取值**- "],[1,13837,"方法，获取值使用getAtt"],[-1,13841," **方法**\n ** **底层增*"],[1,13859,"te方法\n\n- 底层增强 "],[-1,13866,"****"],[1,13871,"对象里面"],[-1,13873,"**gtte****"],[1,13883,"法：getAttribute 方法"],[-1,13885,"**"],[-1,13889,"****"],[-1,13897,"****"],[-1,13903,"e*取"],[1,13906,"quest域获取值，如果"],[-1,13910,"**\n\n**"],[1,13916,"直接返回\n"],[-1,13918,"****"],[-1,13926,"****"],[-1,13937,"****"],[1,13944,"不到"],[-1,13946,"/cli九、p_image072.jpg)\n（一）\n |"],[1,13974,"到值栈中把值获取出来，把值放到域对象里面\n\n\n## 九、OGNL的#、%使用\n\n### （一）#使用"],[-1,13998," "],[1,13999,"\n"],[-1,14229,"O"],[1,14230,"\n"],[-1,14580,"/"],[1,14581,"\n"],[-1,14730,"clip"],[1,14734,"### "],[-1,14737,"_imag-  在# "],[-1,14753,"**1** **标标签**\n\n***1******s"],[1,14779,"-  在struts2标签中表单标签\n在strut"],[-1,14781,"****"],[-1,14788,"***"],[1,14791,"面使用"],[-1,14803,"*str****"],[1,14811,"在struts2"],[-1,14816,"*nl****表/"],[1,14825,"面使用ognl表达式不识别，只有%之后才会识别。\n"],[-1,14953,"1/clip_image081.jpg)\n\n |"]],[1681,1681],[14953,14953]]],[1570101393810,[null,[[1,1681,"\n\n"],[-1,1681,"对象"],[-1,1803,"\n\n"],[1,8029,"u"],[-1,8029,"\n"],[1,8441,"age"],[-1,8441,"```"],[1,8474,"`"],[-1,8474,"\n"],[1,8564,"`"],[1,8566," |"],[1,8567,"\n（三）"],[-1,8571,"（三）"],[-1,8582,"集合"],[1,8586,"*  **********变\n\n*  ****生*****方\n\n*"],[-1,8586,"第一步  定义list集合变量\n第二步  生成变量的get方法\n第三步"],[1,8623,"****"],[1,8628,"********集"],[-1,8628,"法里面向list集合设"],[-1,8641,"\n\n"],[1,9438,"|#\n七、\n"],[-1,9441,"七、"],[1,9448,"* ****str*** 和 ***+***组合*"],[-1,9448,"数据\n\n使用struts2的标签 和 ognl"],[-1,9474,"组合"],[-1,9478,"值栈数据"],[1,9488,"***）"],[1,9507,"****"],[-1,9507,"ognl"],[-1,9513,"式”/>"],[1,9520," |\n\n（一）"],[-1,9524,"（一）"],[-1,9530,"符串\n\n"],[1,10198," |\n\n（二）"],[-1,10202,"（二）"],[-1,10207,"对象\n\n"],[1,10237,"* **"],[-1,10239,"栈放"],[-1,10242,"象\n"],[1,10267,"象"],[-1,10267,"\n"],[1,10678,")"],[-1,10678,"\n"],[1,10686,"* **"],[-1,10689,"中获"],[-1,10692,"值\n"],[1,10706,"值"],[-1,10706,"\n"],[1,10712,">\n:property>\n\n    <br"],[1,10905,")"],[-1,10905,"\n"],[1,10968,"（三）"],[-1,10978,"\n```\n\n\n### （三）获取list集合\n\n"],[1,11706,"\n |\n\n# "],[-1,11706,"第一种方式：\n"],[1,11725,"获"],[-1,11725,"\n"],[1,12107,"p"],[-1,12107,"\n"],[1,12115,"01/cliage05 g) "],[-1,12115,"第"],[1,12120," *val*"],[-1,12120,"：value 值为 List 对象名；\n"],[1,12152,"*"],[-1,12152,"\n"],[1,12434,"p"],[-1,12434,"\n"],[1,12442,"01/clip_ig"],[-1,12442,"第三种方式：最常用\n"],[1,12464,"e"],[-1,12464,"\n"],[1,12894,"i"],[-1,12894,"\n"],[1,12898,"p"],[-1,12900,"\n"],[1,12904,"p"],[-1,12904,"\n"],[1,13081,"g\n)\n\n因（四）为值是从 C"],[-1,13081,"\n\n### （四）其他操作\n\n"],[1,13122,"te"],[-1,13122,"\n\n"],[1,13273,"p"],[-1,13273,"\n"],[1,13277,"p_ e064 )\n\n**2** **"],[1,13279,"*"],[-1,13279," push 方法向值栈放数据，获取方法："],[1,13353,"0iage jpg) "],[1,13354,"****"],[1,13355,"****"],[1,13358,"****s*置"],[-1,13358," push 方法设置值，没有"],[1,13381,"**"],[1,13382,"\n**"],[1,13383,"****"],[1,13384,"****"],[-1,13386,"值栈"],[-1,13389,"数据"],[-1,13394,"向值栈放"],[-1,13406,"，数组名称 top，根据数组获取值"],[1,13481,"\n"],[-1,13481,"\""],[-1,13484,"\n"],[1,13490,"1/cli八、 p_ima可以ge068."],[-1,13490,"\n## 八、 EL表达式可以获取值栈数据"],[1,13514," -L表达 栈数据（为什么）\n对* **Valuek.j \n**首先加 `***** **"],[-1,13514,"\n- EL 表达式获取域对象值\n首先加上标签头：`<%@ "],[1,13549,"**"],[1,13550,"**"],[1,13555,"****"],[-1,13564,"va.s"],[-1,13569,"n"],[1,13578,"le**pf\"****c****\"%*"],[-1,13578,"/jstl/core\"prefix=\"c\"%>`\n然后使用 foreach\n"],[1,13788,"*- </c:forEac\n\n**2** **"],[-1,13788,"\n- "],[-1,13793,"对象里面"],[1,13801,"****"],[-1,13801,"setA"],[1,13813,"****取值**- "],[-1,13813,"方法，获取值使用getAtt"],[1,13831," **方法**\n ** **底层增*"],[-1,13831,"te方法\n\n- 底层增强 "],[1,13851,"****"],[-1,13852,"对象里面"],[1,13858,"**gtte****"],[-1,13858,"法：getAttribute 方法"],[1,13877,"**"],[1,13879,"****"],[1,13883,"****"],[1,13885,"e*取"],[-1,13885,"quest域获取值，如果"],[1,13901,"**\n\n**"],[-1,13901,"直接返回\n"],[1,13908,"****"],[1,13912,"****"],[1,13919,"****"],[-1,13922,"不到"],[1,13926,"/cli九、p_image072.jpg)\n（一）\n |"],[-1,13926,"到值栈中把值获取出来，把值放到域对象里面\n\n\n## 九、OGNL的#、%使用\n\n### （一）#使用"],[1,14000," "],[-1,14000,"\n"],[1,14231,"O"],[-1,14231,"\n"],[1,14582,"/"],[-1,14582,"\n"],[1,14732,"clip"],[-1,14732,"### "],[1,14739,"_imag-  在# "],[1,14744,"**1** **标标签**\n\n***1******s"],[-1,14744,"-  在struts2标签中表单标签\n在strut"],[1,14771,"****"],[1,14774,"***"],[-1,14774,"面使用"],[1,14789,"*str****"],[-1,14789,"在struts2"],[1,14802,"*nl****表/"],[-1,14802,"面使用ognl表达式不识别，只有%之后才会识别。\n"],[1,14955,"1/clip_image081.jpg)\n\n |"]],[14953,14953],[1681,1681]]],[1570101345333,["GJX@GJXAIOU",[[1,1803,"，它是一个 Map类型"]],[1803,1803],[1814,1814]]],[1570101345381,["GJX@GJXAIOU",[[1,1812," "]],[1814,1814],[1815,1815]]],[1570101348219,["GJX@GJXAIOU",[[1,1815,"的对象。"]],[1815,1815],[1819,1819]]],[1570101513815,[null,[[-1,1681,"\n\n"],[1,1683,"对象"],[1,1819,"\n\n"],[-1,8043,"u"],[1,8044,"\n"],[-1,8455,"age"],[1,8458,"```"],[-1,8488,"`"],[1,8489,"\n"],[-1,8578,"`"],[-1,8581," |"],[-1,8584,"\n（三）"],[1,8592,"（三）"],[1,8600,"集合"],[-1,8602,"*  **********变\n\n*  ****生*****方\n\n*"],[1,8635,"第一步  定义list集合变量\n第二步  生成变量的get方法\n第三步"],[-1,8637,"****"],[-1,8646,"********集"],[1,8655,"法里面向list集合设"],[1,8657,"\n\n"],[-1,9452,"|#\n七、\n"],[1,9461,"七、"],[-1,9466,"* ****str*** 和 ***+***组合*"],[1,9491,"数据\n\n使用struts2的标签 和 ognl"],[1,9494,"组合"],[1,9496,"值栈数据"],[-1,9502,"***）"],[-1,9525,"****"],[1,9529,"ognl"],[1,9531,"式”/>"],[-1,9534," |\n\n（一）"],[1,9545,"（一）"],[1,9548,"符串\n\n"],[-1,10212," |\n\n（二）"],[1,10223,"（二）"],[1,10225,"对象\n\n"],[-1,10251,"* **"],[1,10257,"栈放"],[1,10258,"象\n"],[-1,10281,"象"],[1,10282,"\n"],[-1,10692,")"],[1,10693,"\n"],[-1,10700,"* **"],[1,10707,"中获"],[1,10708,"值\n"],[-1,10720,"值"],[1,10721,"\n"],[-1,10726,">\n:property>\n\n    <br"],[-1,10940,")"],[1,10941,"\n"],[-1,11003,"（三）"],[1,11016,"\n```\n\n\n### （三）获取list集合\n\n"],[-1,11720,"\n |\n\n# "],[1,11727,"第一种方式：\n"],[-1,11739,"获"],[1,11740,"\n"],[-1,12121,"p"],[1,12122,"\n"],[-1,12129,"01/cliage05 g) "],[1,12144,"第"],[-1,12148," *val*"],[1,12154,"：value 值为 List 对象名；\n"],[-1,12166,"*"],[1,12167,"\n"],[-1,12448,"p"],[1,12449,"\n"],[-1,12456,"01/clip_ig"],[1,12466,"第三种方式：最常用\n"],[-1,12478,"e"],[1,12479,"\n"],[-1,12908,"i"],[1,12909,"\n"],[-1,12912,"p"],[1,12915,"\n"],[-1,12918,"p"],[1,12919,"\n"],[-1,13095,"g\n)\n\n因（四）为值是从 C"],[1,13110,"\n\n### （四）其他操作\n\n"],[-1,13136,"te"],[1,13138,"\n\n"],[-1,13287,"p"],[1,13288,"\n"],[-1,13291,"p_ e064 )\n\n**2** **"],[-1,13312,"*"],[1,13313," push 方法向值栈放数据，获取方法："],[-1,13367,"0iage jpg) "],[-1,13379,"****"],[-1,13384,"****"],[-1,13391,"****s*置"],[1,13398," push 方法设置值，没有"],[-1,13407,"**"],[-1,13410,"\n**"],[-1,13414,"****"],[-1,13419,"****"],[1,13425,"值栈"],[1,13426,"数据"],[1,13429,"向值栈放"],[1,13437,"，数组名称 top，根据数组获取值"],[-1,13495,"\n"],[1,13496,"\""],[1,13498,"\n"],[-1,13503,"1/cli八、 p_ima可以ge068."],[1,13524,"\n## 八、 EL表达式可以获取值栈数据"],[-1,13528," -L表达 栈数据（为什么）\n对* **Valuek.j \n**首先加 `***** **"],[1,13573,"\n- EL 表达式获取域对象值\n首先加上标签头：`<%@ "],[-1,13579,"**"],[-1,13582,"**"],[-1,13589,"****"],[1,13602,"va.s"],[1,13603,"n"],[-1,13611,"le**pf\"****c****\"%*"],[1,13630,"/jstl/core\"prefix=\"c\"%>`\n然后使用 foreach\n"],[-1,13802,"*- </c:forEac\n\n**2** **"],[1,13825,"\n- "],[1,13827,"对象里面"],[-1,13831,"****"],[1,13835,"setA"],[-1,13843,"****取值**- "],[1,13853,"方法，获取值使用getAtt"],[-1,13857," **方法**\n ** **底层增*"],[1,13875,"te方法\n\n- 底层增强 "],[-1,13882,"****"],[1,13887,"对象里面"],[-1,13889,"**gtte****"],[1,13899,"法：getAttribute 方法"],[-1,13901,"**"],[-1,13905,"****"],[-1,13913,"****"],[-1,13919,"e*取"],[1,13922,"quest域获取值，如果"],[-1,13926,"**\n\n**"],[1,13932,"直接返回\n"],[-1,13934,"****"],[-1,13942,"****"],[-1,13953,"****"],[1,13960,"不到"],[-1,13962,"/cli九、p_image072.jpg)\n（一）\n |"],[1,13990,"到值栈中把值获取出来，把值放到域对象里面\n\n\n## 九、OGNL的#、%使用\n\n### （一）#使用"],[-1,14014," "],[1,14015,"\n"],[-1,14245,"O"],[1,14246,"\n"],[-1,14596,"/"],[1,14597,"\n"],[-1,14746,"clip"],[1,14750,"### "],[-1,14753,"_imag-  在# "],[-1,14769,"**1** **标标签**\n\n***1******s"],[1,14795,"-  在struts2标签中表单标签\n在strut"],[-1,14797,"****"],[-1,14804,"***"],[1,14807,"面使用"],[-1,14819,"*str****"],[1,14827,"在struts2"],[-1,14832,"*nl****表/"],[1,14841,"面使用ognl表达式不识别，只有%之后才会识别。\n"],[-1,14969,"1/clip_image081.jpg)\n\n |"]],[1681,1681],[14969,14969]]],[1570101513815,[null,[[1,1681,"\n\n"],[-1,1681,"对象"],[-1,1819,"\n\n"],[1,8045,"u"],[-1,8045,"\n"],[1,8457,"age"],[-1,8457,"```"],[1,8490,"`"],[-1,8490,"\n"],[1,8580,"`"],[1,8582," |"],[1,8583,"\n（三）"],[-1,8587,"（三）"],[-1,8598,"集合"],[1,8602,"*  **********变\n\n*  ****生*****方\n\n*"],[-1,8602,"第一步  定义list集合变量\n第二步  生成变量的get方法\n第三步"],[1,8639,"****"],[1,8644,"********集"],[-1,8644,"法里面向list集合设"],[-1,8657,"\n\n"],[1,9454,"|#\n七、\n"],[-1,9457,"七、"],[1,9464,"* ****str*** 和 ***+***组合*"],[-1,9464,"数据\n\n使用struts2的标签 和 ognl"],[-1,9490,"组合"],[-1,9494,"值栈数据"],[1,9504,"***）"],[1,9523,"****"],[-1,9523,"ognl"],[-1,9529,"式”/>"],[1,9536," |\n\n（一）"],[-1,9540,"（一）"],[-1,9546,"符串\n\n"],[1,10214," |\n\n（二）"],[-1,10218,"（二）"],[-1,10223,"对象\n\n"],[1,10253,"* **"],[-1,10255,"栈放"],[-1,10258,"象\n"],[1,10283,"象"],[-1,10283,"\n"],[1,10694,")"],[-1,10694,"\n"],[1,10702,"* **"],[-1,10705,"中获"],[-1,10708,"值\n"],[1,10722,"值"],[-1,10722,"\n"],[1,10728,">\n:property>\n\n    <br"],[1,10921,")"],[-1,10921,"\n"],[1,10984,"（三）"],[-1,10994,"\n```\n\n\n### （三）获取list集合\n\n"],[1,11722,"\n |\n\n# "],[-1,11722,"第一种方式：\n"],[1,11741,"获"],[-1,11741,"\n"],[1,12123,"p"],[-1,12123,"\n"],[1,12131,"01/cliage05 g) "],[-1,12131,"第"],[1,12136," *val*"],[-1,12136,"：value 值为 List 对象名；\n"],[1,12168,"*"],[-1,12168,"\n"],[1,12450,"p"],[-1,12450,"\n"],[1,12458,"01/clip_ig"],[-1,12458,"第三种方式：最常用\n"],[1,12480,"e"],[-1,12480,"\n"],[1,12910,"i"],[-1,12910,"\n"],[1,12914,"p"],[-1,12916,"\n"],[1,12920,"p"],[-1,12920,"\n"],[1,13097,"g\n)\n\n因（四）为值是从 C"],[-1,13097,"\n\n### （四）其他操作\n\n"],[1,13138,"te"],[-1,13138,"\n\n"],[1,13289,"p"],[-1,13289,"\n"],[1,13293,"p_ e064 )\n\n**2** **"],[1,13295,"*"],[-1,13295," push 方法向值栈放数据，获取方法："],[1,13369,"0iage jpg) "],[1,13370,"****"],[1,13371,"****"],[1,13374,"****s*置"],[-1,13374," push 方法设置值，没有"],[1,13397,"**"],[1,13398,"\n**"],[1,13399,"****"],[1,13400,"****"],[-1,13402,"值栈"],[-1,13405,"数据"],[-1,13410,"向值栈放"],[-1,13422,"，数组名称 top，根据数组获取值"],[1,13497,"\n"],[-1,13497,"\""],[-1,13500,"\n"],[1,13506,"1/cli八、 p_ima可以ge068."],[-1,13506,"\n## 八、 EL表达式可以获取值栈数据"],[1,13530," -L表达 栈数据（为什么）\n对* **Valuek.j \n**首先加 `***** **"],[-1,13530,"\n- EL 表达式获取域对象值\n首先加上标签头：`<%@ "],[1,13565,"**"],[1,13566,"**"],[1,13571,"****"],[-1,13580,"va.s"],[-1,13585,"n"],[1,13594,"le**pf\"****c****\"%*"],[-1,13594,"/jstl/core\"prefix=\"c\"%>`\n然后使用 foreach\n"],[1,13804,"*- </c:forEac\n\n**2** **"],[-1,13804,"\n- "],[-1,13809,"对象里面"],[1,13817,"****"],[-1,13817,"setA"],[1,13829,"****取值**- "],[-1,13829,"方法，获取值使用getAtt"],[1,13847," **方法**\n ** **底层增*"],[-1,13847,"te方法\n\n- 底层增强 "],[1,13867,"****"],[-1,13868,"对象里面"],[1,13874,"**gtte****"],[-1,13874,"法：getAttribute 方法"],[1,13893,"**"],[1,13895,"****"],[1,13899,"****"],[1,13901,"e*取"],[-1,13901,"quest域获取值，如果"],[1,13917,"**\n\n**"],[-1,13917,"直接返回\n"],[1,13924,"****"],[1,13928,"****"],[1,13935,"****"],[-1,13938,"不到"],[1,13942,"/cli九、p_image072.jpg)\n（一）\n |"],[-1,13942,"到值栈中把值获取出来，把值放到域对象里面\n\n\n## 九、OGNL的#、%使用\n\n### （一）#使用"],[1,14016," "],[-1,14016,"\n"],[1,14247,"O"],[-1,14247,"\n"],[1,14598,"/"],[-1,14598,"\n"],[1,14748,"clip"],[-1,14748,"### "],[1,14755,"_imag-  在# "],[1,14760,"**1** **标标签**\n\n***1******s"],[-1,14760,"-  在struts2标签中表单标签\n在strut"],[1,14787,"****"],[1,14790,"***"],[-1,14790,"面使用"],[1,14805,"*str****"],[-1,14805,"在struts2"],[1,14818,"*nl****表/"],[-1,14818,"面使用ognl表达式不识别，只有%之后才会识别。\n"],[1,14971,"1/clip_image081.jpg)\n\n |"]],[14969,14969],[1681,1681]]],[1570101502962,["GJX@GJXAIOU",[[1,2398,"\n"]],[2397,2397],[2398,2398]]],[1570101508313,["GJX@GJXAIOU",[[1,2397,"值栈（）"]],[2397,2397],[2401,2401]]],[1570101513317,["GJX@GJXAIOU",[[1,2400,"Value"]],[2400,2400],[2405,2405]]],[1570101573818,[null,[[-1,1681,"\n\n"],[1,1683,"对象"],[1,1819,"\n\n"],[-1,2395,"\n-"],[-1,2406," \n"],[1,2408,"\n\n- "],[-1,8053,"u"],[1,8054,"\n"],[-1,8465,"age"],[1,8468,"```"],[-1,8498,"`"],[1,8499,"\n"],[-1,8588,"`"],[-1,8591," |"],[-1,8594,"\n（三）"],[1,8602,"（三）"],[1,8610,"集合"],[-1,8612,"*  **********变\n\n*  ****生*****方\n\n*"],[1,8645,"第一步  定义list集合变量\n第二步  生成变量的get方法\n第三步"],[-1,8647,"****"],[-1,8656,"********集"],[1,8665,"法里面向list集合设"],[1,8667,"\n\n"],[-1,9462,"|#\n七、\n"],[1,9471,"七、"],[-1,9476,"* ****str*** 和 ***+***组合*"],[1,9501,"数据\n\n使用struts2的标签 和 ognl"],[1,9504,"组合"],[1,9506,"值栈数据"],[-1,9512,"***）"],[-1,9535,"****"],[1,9539,"ognl"],[1,9541,"式”/>"],[-1,9544," |\n\n（一）"],[1,9555,"（一）"],[1,9558,"符串\n\n"],[-1,10222," |\n\n（二）"],[1,10233,"（二）"],[1,10235,"对象\n\n"],[-1,10261,"* **"],[1,10267,"栈放"],[1,10268,"象\n"],[-1,10291,"象"],[1,10292,"\n"],[-1,10702,")"],[1,10703,"\n"],[-1,10710,"* **"],[1,10717,"中获"],[1,10718,"值\n"],[-1,10730,"值"],[1,10731,"\n"],[-1,10736,">\n:property>\n\n    <br"],[-1,10950,")"],[1,10951,"\n"],[-1,11013,"（三）"],[1,11026,"\n```\n\n\n### （三）获取list集合\n\n"],[-1,11730,"\n |\n\n# "],[1,11737,"第一种方式：\n"],[-1,11749,"获"],[1,11750,"\n"],[-1,12131,"p"],[1,12132,"\n"],[-1,12139,"01/cliage05 g) "],[1,12154,"第"],[-1,12158," *val*"],[1,12164,"：value 值为 List 对象名；\n"],[-1,12176,"*"],[1,12177,"\n"],[-1,12458,"p"],[1,12459,"\n"],[-1,12466,"01/clip_ig"],[1,12476,"第三种方式：最常用\n"],[-1,12488,"e"],[1,12489,"\n"],[-1,12918,"i"],[1,12919,"\n"],[-1,12922,"p"],[1,12925,"\n"],[-1,12928,"p"],[1,12929,"\n"],[-1,13105,"g\n)\n\n因（四）为值是从 C"],[1,13120,"\n\n### （四）其他操作\n\n"],[-1,13146,"te"],[1,13148,"\n\n"],[-1,13297,"p"],[1,13298,"\n"],[-1,13301,"p_ e064 )\n\n**2** **"],[-1,13322,"*"],[1,13323," push 方法向值栈放数据，获取方法："],[-1,13377,"0iage jpg) "],[-1,13389,"****"],[-1,13394,"****"],[-1,13401,"****s*置"],[1,13408," push 方法设置值，没有"],[-1,13417,"**"],[-1,13420,"\n**"],[-1,13424,"****"],[-1,13429,"****"],[1,13435,"值栈"],[1,13436,"数据"],[1,13439,"向值栈放"],[1,13447,"，数组名称 top，根据数组获取值"],[-1,13505,"\n"],[1,13506,"\""],[1,13508,"\n"],[-1,13513,"1/cli八、 p_ima可以ge068."],[1,13534,"\n## 八、 EL表达式可以获取值栈数据"],[-1,13538," -L表达 栈数据（为什么）\n对* **Valuek.j \n**首先加 `***** **"],[1,13583,"\n- EL 表达式获取域对象值\n首先加上标签头：`<%@ "],[-1,13589,"**"],[-1,13592,"**"],[-1,13599,"****"],[1,13612,"va.s"],[1,13613,"n"],[-1,13621,"le**pf\"****c****\"%*"],[1,13640,"/jstl/core\"prefix=\"c\"%>`\n然后使用 foreach\n"],[-1,13812,"*- </c:forEac\n\n**2** **"],[1,13835,"\n- "],[1,13837,"对象里面"],[-1,13841,"****"],[1,13845,"setA"],[-1,13853,"****取值**- "],[1,13863,"方法，获取值使用getAtt"],[-1,13867," **方法**\n ** **底层增*"],[1,13885,"te方法\n\n- 底层增强 "],[-1,13892,"****"],[1,13897,"对象里面"],[-1,13899,"**gtte****"],[1,13909,"法：getAttribute 方法"],[-1,13911,"**"],[-1,13915,"****"],[-1,13923,"****"],[-1,13929,"e*取"],[1,13932,"quest域获取值，如果"],[-1,13936,"**\n\n**"],[1,13942,"直接返回\n"],[-1,13944,"****"],[-1,13952,"****"],[-1,13963,"****"],[1,13970,"不到"],[-1,13972,"/cli九、p_image072.jpg)\n（一）\n |"],[1,14000,"到值栈中把值获取出来，把值放到域对象里面\n\n\n## 九、OGNL的#、%使用\n\n### （一）#使用"],[-1,14024," "],[1,14025,"\n"],[-1,14255,"O"],[1,14256,"\n"],[-1,14606,"/"],[1,14607,"\n"],[-1,14756,"clip"],[1,14760,"### "],[-1,14763,"_imag-  在# "],[-1,14779,"**1** **标标签**\n\n***1******s"],[1,14805,"-  在struts2标签中表单标签\n在strut"],[-1,14807,"****"],[-1,14814,"***"],[1,14817,"面使用"],[-1,14829,"*str****"],[1,14837,"在struts2"],[-1,14842,"*nl****表/"],[1,14851,"面使用ognl表达式不识别，只有%之后才会识别。\n"],[-1,14979,"1/clip_image081.jpg)\n\n |"]],[1681,1681],[14979,14979]]],[1570101573818,[null,[[1,1681,"\n\n"],[-1,1681,"对象"],[-1,1819,"\n\n"],[1,2397,"\n-"],[1,2406," \n"],[-1,2406,"\n\n- "],[1,8055,"u"],[-1,8055,"\n"],[1,8467,"age"],[-1,8467,"```"],[1,8500,"`"],[-1,8500,"\n"],[1,8590,"`"],[1,8592," |"],[1,8593,"\n（三）"],[-1,8597,"（三）"],[-1,8608,"集合"],[1,8612,"*  **********变\n\n*  ****生*****方\n\n*"],[-1,8612,"第一步  定义list集合变量\n第二步  生成变量的get方法\n第三步"],[1,8649,"****"],[1,8654,"********集"],[-1,8654,"法里面向list集合设"],[-1,8667,"\n\n"],[1,9464,"|#\n七、\n"],[-1,9467,"七、"],[1,9474,"* ****str*** 和 ***+***组合*"],[-1,9474,"数据\n\n使用struts2的标签 和 ognl"],[-1,9500,"组合"],[-1,9504,"值栈数据"],[1,9514,"***）"],[1,9533,"****"],[-1,9533,"ognl"],[-1,9539,"式”/>"],[1,9546," |\n\n（一）"],[-1,9550,"（一）"],[-1,9556,"符串\n\n"],[1,10224," |\n\n（二）"],[-1,10228,"（二）"],[-1,10233,"对象\n\n"],[1,10263,"* **"],[-1,10265,"栈放"],[-1,10268,"象\n"],[1,10293,"象"],[-1,10293,"\n"],[1,10704,")"],[-1,10704,"\n"],[1,10712,"* **"],[-1,10715,"中获"],[-1,10718,"值\n"],[1,10732,"值"],[-1,10732,"\n"],[1,10738,">\n:property>\n\n    <br"],[1,10931,")"],[-1,10931,"\n"],[1,10994,"（三）"],[-1,11004,"\n```\n\n\n### （三）获取list集合\n\n"],[1,11732,"\n |\n\n# "],[-1,11732,"第一种方式：\n"],[1,11751,"获"],[-1,11751,"\n"],[1,12133,"p"],[-1,12133,"\n"],[1,12141,"01/cliage05 g) "],[-1,12141,"第"],[1,12146," *val*"],[-1,12146,"：value 值为 List 对象名；\n"],[1,12178,"*"],[-1,12178,"\n"],[1,12460,"p"],[-1,12460,"\n"],[1,12468,"01/clip_ig"],[-1,12468,"第三种方式：最常用\n"],[1,12490,"e"],[-1,12490,"\n"],[1,12920,"i"],[-1,12920,"\n"],[1,12924,"p"],[-1,12926,"\n"],[1,12930,"p"],[-1,12930,"\n"],[1,13107,"g\n)\n\n因（四）为值是从 C"],[-1,13107,"\n\n### （四）其他操作\n\n"],[1,13148,"te"],[-1,13148,"\n\n"],[1,13299,"p"],[-1,13299,"\n"],[1,13303,"p_ e064 )\n\n**2** **"],[1,13305,"*"],[-1,13305," push 方法向值栈放数据，获取方法："],[1,13379,"0iage jpg) "],[1,13380,"****"],[1,13381,"****"],[1,13384,"****s*置"],[-1,13384," push 方法设置值，没有"],[1,13407,"**"],[1,13408,"\n**"],[1,13409,"****"],[1,13410,"****"],[-1,13412,"值栈"],[-1,13415,"数据"],[-1,13420,"向值栈放"],[-1,13432,"，数组名称 top，根据数组获取值"],[1,13507,"\n"],[-1,13507,"\""],[-1,13510,"\n"],[1,13516,"1/cli八、 p_ima可以ge068."],[-1,13516,"\n## 八、 EL表达式可以获取值栈数据"],[1,13540," -L表达 栈数据（为什么）\n对* **Valuek.j \n**首先加 `***** **"],[-1,13540,"\n- EL 表达式获取域对象值\n首先加上标签头：`<%@ "],[1,13575,"**"],[1,13576,"**"],[1,13581,"****"],[-1,13590,"va.s"],[-1,13595,"n"],[1,13604,"le**pf\"****c****\"%*"],[-1,13604,"/jstl/core\"prefix=\"c\"%>`\n然后使用 foreach\n"],[1,13814,"*- </c:forEac\n\n**2** **"],[-1,13814,"\n- "],[-1,13819,"对象里面"],[1,13827,"****"],[-1,13827,"setA"],[1,13839,"****取值**- "],[-1,13839,"方法，获取值使用getAtt"],[1,13857," **方法**\n ** **底层增*"],[-1,13857,"te方法\n\n- 底层增强 "],[1,13877,"****"],[-1,13878,"对象里面"],[1,13884,"**gtte****"],[-1,13884,"法：getAttribute 方法"],[1,13903,"**"],[1,13905,"****"],[1,13909,"****"],[1,13911,"e*取"],[-1,13911,"quest域获取值，如果"],[1,13927,"**\n\n**"],[-1,13927,"直接返回\n"],[1,13934,"****"],[1,13938,"****"],[1,13945,"****"],[-1,13948,"不到"],[1,13952,"/cli九、p_image072.jpg)\n（一）\n |"],[-1,13952,"到值栈中把值获取出来，把值放到域对象里面\n\n\n## 九、OGNL的#、%使用\n\n### （一）#使用"],[1,14026," "],[-1,14026,"\n"],[1,14257,"O"],[-1,14257,"\n"],[1,14608,"/"],[-1,14608,"\n"],[1,14758,"clip"],[-1,14758,"### "],[1,14765,"_imag-  在# "],[1,14770,"**1** **标标签**\n\n***1******s"],[-1,14770,"-  在struts2标签中表单标签\n在strut"],[1,14797,"****"],[1,14800,"***"],[-1,14800,"面使用"],[1,14815,"*str****"],[-1,14815,"在struts2"],[1,14828,"*nl****表/"],[-1,14828,"面使用ognl表达式不识别，只有%之后才会识别。\n"],[1,14981,"1/clip_image081.jpg)\n\n |"]],[14979,14979],[1681,1681]]],[1570101517142,["GJX@GJXAIOU",[[1,2405,"Stack"]],[2405,2405],[2410,2410]]],[1570101522941,["GJX@GJXAIOU",[[1,2411,"是 STruts"]],[2411,2411],[2419,2419]]],[1570101524257,["GJX@GJXAIOU",[[-1,2414,"Truts"]],[2419,2419],[2414,2414]]],[1570101572707,["GJX@GJXAIOU",[[1,2414,"truts 的一个接口，OgnlValueStack 是 ValueStack 的实现类；"]],[2414,2414],[2459,2459]]],[1570101573377,["GJX@GJXAIOU",[[1,2461,"\n"]],[2459,2459],[2460,2460]]],[1570101633818,[null,[[-1,1681,"\n\n"],[1,1683,"对象"],[1,1819,"\n\n"],[-1,2395,"\n-"],[-1,2459," "],[1,2460,"\n"],[1,2462,"- "],[-1,8107,"u"],[1,8108,"\n"],[-1,8519,"age"],[1,8522,"```"],[-1,8552,"`"],[1,8553,"\n"],[-1,8642,"`"],[-1,8645," |"],[-1,8648,"\n（三）"],[1,8656,"（三）"],[1,8664,"集合"],[-1,8666,"*  **********变\n\n*  ****生*****方\n\n*"],[1,8699,"第一步  定义list集合变量\n第二步  生成变量的get方法\n第三步"],[-1,8701,"****"],[-1,8710,"********集"],[1,8719,"法里面向list集合设"],[1,8721,"\n\n"],[-1,9516,"|#\n七、\n"],[1,9525,"七、"],[-1,9530,"* ****str*** 和 ***+***组合*"],[1,9555,"数据\n\n使用struts2的标签 和 ognl"],[1,9558,"组合"],[1,9560,"值栈数据"],[-1,9566,"***）"],[-1,9589,"****"],[1,9593,"ognl"],[1,9595,"式”/>"],[-1,9598," |\n\n（一）"],[1,9609,"（一）"],[1,9612,"符串\n\n"],[-1,10276," |\n\n（二）"],[1,10287,"（二）"],[1,10289,"对象\n\n"],[-1,10315,"* **"],[1,10321,"栈放"],[1,10322,"象\n"],[-1,10345,"象"],[1,10346,"\n"],[-1,10756,")"],[1,10757,"\n"],[-1,10764,"* **"],[1,10771,"中获"],[1,10772,"值\n"],[-1,10784,"值"],[1,10785,"\n"],[-1,10790,">\n:property>\n\n    <br"],[-1,11004,")"],[1,11005,"\n"],[-1,11067,"（三）"],[1,11080,"\n```\n\n\n### （三）获取list集合\n\n"],[-1,11784,"\n |\n\n# "],[1,11791,"第一种方式：\n"],[-1,11803,"获"],[1,11804,"\n"],[-1,12185,"p"],[1,12186,"\n"],[-1,12193,"01/cliage05 g) "],[1,12208,"第"],[-1,12212," *val*"],[1,12218,"：value 值为 List 对象名；\n"],[-1,12230,"*"],[1,12231,"\n"],[-1,12512,"p"],[1,12513,"\n"],[-1,12520,"01/clip_ig"],[1,12530,"第三种方式：最常用\n"],[-1,12542,"e"],[1,12543,"\n"],[-1,12972,"i"],[1,12973,"\n"],[-1,12976,"p"],[1,12979,"\n"],[-1,12982,"p"],[1,12983,"\n"],[-1,13159,"g\n)\n\n因（四）为值是从 C"],[1,13174,"\n\n### （四）其他操作\n\n"],[-1,13200,"te"],[1,13202,"\n\n"],[-1,13351,"p"],[1,13352,"\n"],[-1,13355,"p_ e064 )\n\n**2** **"],[-1,13376,"*"],[1,13377," push 方法向值栈放数据，获取方法："],[-1,13431,"0iage jpg) "],[-1,13443,"****"],[-1,13448,"****"],[-1,13455,"****s*置"],[1,13462," push 方法设置值，没有"],[-1,13471,"**"],[-1,13474,"\n**"],[-1,13478,"****"],[-1,13483,"****"],[1,13489,"值栈"],[1,13490,"数据"],[1,13493,"向值栈放"],[1,13501,"，数组名称 top，根据数组获取值"],[-1,13559,"\n"],[1,13560,"\""],[1,13562,"\n"],[-1,13567,"1/cli八、 p_ima可以ge068."],[1,13588,"\n## 八、 EL表达式可以获取值栈数据"],[-1,13592," -L表达 栈数据（为什么）\n对* **Valuek.j \n**首先加 `***** **"],[1,13637,"\n- EL 表达式获取域对象值\n首先加上标签头：`<%@ "],[-1,13643,"**"],[-1,13646,"**"],[-1,13653,"****"],[1,13666,"va.s"],[1,13667,"n"],[-1,13675,"le**pf\"****c****\"%*"],[1,13694,"/jstl/core\"prefix=\"c\"%>`\n然后使用 foreach\n"],[-1,13866,"*- </c:forEac\n\n**2** **"],[1,13889,"\n- "],[1,13891,"对象里面"],[-1,13895,"****"],[1,13899,"setA"],[-1,13907,"****取值**- "],[1,13917,"方法，获取值使用getAtt"],[-1,13921," **方法**\n ** **底层增*"],[1,13939,"te方法\n\n- 底层增强 "],[-1,13946,"****"],[1,13951,"对象里面"],[-1,13953,"**gtte****"],[1,13963,"法：getAttribute 方法"],[-1,13965,"**"],[-1,13969,"****"],[-1,13977,"****"],[-1,13983,"e*取"],[1,13986,"quest域获取值，如果"],[-1,13990,"**\n\n**"],[1,13996,"直接返回\n"],[-1,13998,"****"],[-1,14006,"****"],[-1,14017,"****"],[1,14024,"不到"],[-1,14026,"/cli九、p_image072.jpg)\n（一）\n |"],[1,14054,"到值栈中把值获取出来，把值放到域对象里面\n\n\n## 九、OGNL的#、%使用\n\n### （一）#使用"],[-1,14078," "],[1,14079,"\n"],[-1,14309,"O"],[1,14310,"\n"],[-1,14660,"/"],[1,14661,"\n"],[-1,14810,"clip"],[1,14814,"### "],[-1,14817,"_imag-  在# "],[-1,14833,"**1** **标标签**\n\n***1******s"],[1,14859,"-  在struts2标签中表单标签\n在strut"],[-1,14861,"****"],[-1,14868,"***"],[1,14871,"面使用"],[-1,14883,"*str****"],[1,14891,"在struts2"],[-1,14896,"*nl****表/"],[1,14905,"面使用ognl表达式不识别，只有%之后才会识别。\n"],[-1,15033,"1/clip_image081.jpg)\n\n |"]],[1681,1681],[15033,15033]]],[1570101633818,[null,[[1,1681,"\n\n"],[-1,1681,"对象"],[-1,1819,"\n\n"],[1,2397,"\n-"],[1,2459," "],[-1,2459,"\n"],[-1,2462,"- "],[1,8109,"u"],[-1,8109,"\n"],[1,8521,"age"],[-1,8521,"```"],[1,8554,"`"],[-1,8554,"\n"],[1,8644,"`"],[1,8646," |"],[1,8647,"\n（三）"],[-1,8651,"（三）"],[-1,8662,"集合"],[1,8666,"*  **********变\n\n*  ****生*****方\n\n*"],[-1,8666,"第一步  定义list集合变量\n第二步  生成变量的get方法\n第三步"],[1,8703,"****"],[1,8708,"********集"],[-1,8708,"法里面向list集合设"],[-1,8721,"\n\n"],[1,9518,"|#\n七、\n"],[-1,9521,"七、"],[1,9528,"* ****str*** 和 ***+***组合*"],[-1,9528,"数据\n\n使用struts2的标签 和 ognl"],[-1,9554,"组合"],[-1,9558,"值栈数据"],[1,9568,"***）"],[1,9587,"****"],[-1,9587,"ognl"],[-1,9593,"式”/>"],[1,9600," |\n\n（一）"],[-1,9604,"（一）"],[-1,9610,"符串\n\n"],[1,10278," |\n\n（二）"],[-1,10282,"（二）"],[-1,10287,"对象\n\n"],[1,10317,"* **"],[-1,10319,"栈放"],[-1,10322,"象\n"],[1,10347,"象"],[-1,10347,"\n"],[1,10758,")"],[-1,10758,"\n"],[1,10766,"* **"],[-1,10769,"中获"],[-1,10772,"值\n"],[1,10786,"值"],[-1,10786,"\n"],[1,10792,">\n:property>\n\n    <br"],[1,10985,")"],[-1,10985,"\n"],[1,11048,"（三）"],[-1,11058,"\n```\n\n\n### （三）获取list集合\n\n"],[1,11786,"\n |\n\n# "],[-1,11786,"第一种方式：\n"],[1,11805,"获"],[-1,11805,"\n"],[1,12187,"p"],[-1,12187,"\n"],[1,12195,"01/cliage05 g) "],[-1,12195,"第"],[1,12200," *val*"],[-1,12200,"：value 值为 List 对象名；\n"],[1,12232,"*"],[-1,12232,"\n"],[1,12514,"p"],[-1,12514,"\n"],[1,12522,"01/clip_ig"],[-1,12522,"第三种方式：最常用\n"],[1,12544,"e"],[-1,12544,"\n"],[1,12974,"i"],[-1,12974,"\n"],[1,12978,"p"],[-1,12980,"\n"],[1,12984,"p"],[-1,12984,"\n"],[1,13161,"g\n)\n\n因（四）为值是从 C"],[-1,13161,"\n\n### （四）其他操作\n\n"],[1,13202,"te"],[-1,13202,"\n\n"],[1,13353,"p"],[-1,13353,"\n"],[1,13357,"p_ e064 )\n\n**2** **"],[1,13359,"*"],[-1,13359," push 方法向值栈放数据，获取方法："],[1,13433,"0iage jpg) "],[1,13434,"****"],[1,13435,"****"],[1,13438,"****s*置"],[-1,13438," push 方法设置值，没有"],[1,13461,"**"],[1,13462,"\n**"],[1,13463,"****"],[1,13464,"****"],[-1,13466,"值栈"],[-1,13469,"数据"],[-1,13474,"向值栈放"],[-1,13486,"，数组名称 top，根据数组获取值"],[1,13561,"\n"],[-1,13561,"\""],[-1,13564,"\n"],[1,13570,"1/cli八、 p_ima可以ge068."],[-1,13570,"\n## 八、 EL表达式可以获取值栈数据"],[1,13594," -L表达 栈数据（为什么）\n对* **Valuek.j \n**首先加 `***** **"],[-1,13594,"\n- EL 表达式获取域对象值\n首先加上标签头：`<%@ "],[1,13629,"**"],[1,13630,"**"],[1,13635,"****"],[-1,13644,"va.s"],[-1,13649,"n"],[1,13658,"le**pf\"****c****\"%*"],[-1,13658,"/jstl/core\"prefix=\"c\"%>`\n然后使用 foreach\n"],[1,13868,"*- </c:forEac\n\n**2** **"],[-1,13868,"\n- "],[-1,13873,"对象里面"],[1,13881,"****"],[-1,13881,"setA"],[1,13893,"****取值**- "],[-1,13893,"方法，获取值使用getAtt"],[1,13911," **方法**\n ** **底层增*"],[-1,13911,"te方法\n\n- 底层增强 "],[1,13931,"****"],[-1,13932,"对象里面"],[1,13938,"**gtte****"],[-1,13938,"法：getAttribute 方法"],[1,13957,"**"],[1,13959,"****"],[1,13963,"****"],[1,13965,"e*取"],[-1,13965,"quest域获取值，如果"],[1,13981,"**\n\n**"],[-1,13981,"直接返回\n"],[1,13988,"****"],[1,13992,"****"],[1,13999,"****"],[-1,14002,"不到"],[1,14006,"/cli九、p_image072.jpg)\n（一）\n |"],[-1,14006,"到值栈中把值获取出来，把值放到域对象里面\n\n\n## 九、OGNL的#、%使用\n\n### （一）#使用"],[1,14080," "],[-1,14080,"\n"],[1,14311,"O"],[-1,14311,"\n"],[1,14662,"/"],[-1,14662,"\n"],[1,14812,"clip"],[-1,14812,"### "],[1,14819,"_imag-  在# "],[1,14824,"**1** **标标签**\n\n***1******s"],[-1,14824,"-  在struts2标签中表单标签\n在strut"],[1,14851,"****"],[1,14854,"***"],[-1,14854,"面使用"],[1,14869,"*str****"],[-1,14869,"在struts2"],[1,14882,"*nl****表/"],[-1,14882,"面使用ognl表达式不识别，只有%之后才会识别。\n"],[1,15035,"1/clip_image081.jpg)\n\n |"]],[15033,15033],[1681,1681]]],[1570101574773,["GJX@GJXAIOU",[[1,2460,"当"]],[2460,2460],[2461,2461]]],[1570101579355,["GJX@GJXAIOU",[[-1,2460,"当"]],[2461,2461],[2460,2460]]],[1570101580668,["GJX@GJXAIOU",[[1,2460,"****"]],[2460,2460],[2462,2462]]],[1570101606069,["GJX@GJXAIOU",[[1,2462,"当客户端发起一个请求，Struts2 架构会穿件"]],[2462,2462],[2486,2486]]],[1570101607800,["GJX@GJXAIOU",[[-1,2484,"穿件"]],[2486,2486],[2484,2484]]],[1570101609336,["GJX@GJXAIOU",[[1,2484,"闯将"]],[2484,2484],[2486,2486]]],[1570101609992,["GJX@GJXAIOU",[[-1,2484,"闯将"]],[2486,2486],[2484,2484]]],[1570101620276,["GJX@GJXAIOU",[[1,2484,"创建一个 action示例"]],[2484,2484],[2497,2497]]],[1570101620329,["GJX@GJXAIOU",[[1,2495," "]],[2497,2497],[2498,2498]]],[1570101628671,["GJX@GJXAIOU",[[1,2498,"，同时创建一个 Ognk"]],[2498,2498],[2510,2510]]],[1570101629736,["GJX@GJXAIOU",[[-1,2509,"k"]],[2510,2510],[2509,2509]]],[1570101631300,["GJX@GJXAIOU",[[1,2509,"lVau"]],[2509,2509],[2513,2513]]],[1570101632113,["GJX@GJXAIOU",[[-1,2512,"u"]],[2513,2513],[2512,2512]]],[1570101632798,["GJX@GJXAIOU",[[1,2512,"lue"]],[2512,2512],[2515,2515]]],[1570101693820,[null,[[-1,1681,"\n\n"],[1,1683,"对象"],[1,1819,"\n\n"],[-1,2395,"\n-"],[-1,2459," "],[1,2460,"\n"],[1,2519,"- "],[-1,8164,"u"],[1,8165,"\n"],[-1,8576,"age"],[1,8579,"```"],[-1,8609,"`"],[1,8610,"\n"],[-1,8699,"`"],[-1,8702," |"],[-1,8705,"\n（三）"],[1,8713,"（三）"],[1,8721,"集合"],[-1,8723,"*  **********变\n\n*  ****生*****方\n\n*"],[1,8756,"第一步  定义list集合变量\n第二步  生成变量的get方法\n第三步"],[-1,8758,"****"],[-1,8767,"********集"],[1,8776,"法里面向list集合设"],[1,8778,"\n\n"],[-1,9573,"|#\n七、\n"],[1,9582,"七、"],[-1,9587,"* ****str*** 和 ***+***组合*"],[1,9612,"数据\n\n使用struts2的标签 和 ognl"],[1,9615,"组合"],[1,9617,"值栈数据"],[-1,9623,"***）"],[-1,9646,"****"],[1,9650,"ognl"],[1,9652,"式”/>"],[-1,9655," |\n\n（一）"],[1,9666,"（一）"],[1,9669,"符串\n\n"],[-1,10333," |\n\n（二）"],[1,10344,"（二）"],[1,10346,"对象\n\n"],[-1,10372,"* **"],[1,10378,"栈放"],[1,10379,"象\n"],[-1,10402,"象"],[1,10403,"\n"],[-1,10813,")"],[1,10814,"\n"],[-1,10821,"* **"],[1,10828,"中获"],[1,10829,"值\n"],[-1,10841,"值"],[1,10842,"\n"],[-1,10847,">\n:property>\n\n    <br"],[-1,11061,")"],[1,11062,"\n"],[-1,11124,"（三）"],[1,11137,"\n```\n\n\n### （三）获取list集合\n\n"],[-1,11841,"\n |\n\n# "],[1,11848,"第一种方式：\n"],[-1,11860,"获"],[1,11861,"\n"],[-1,12242,"p"],[1,12243,"\n"],[-1,12250,"01/cliage05 g) "],[1,12265,"第"],[-1,12269," *val*"],[1,12275,"：value 值为 List 对象名；\n"],[-1,12287,"*"],[1,12288,"\n"],[-1,12569,"p"],[1,12570,"\n"],[-1,12577,"01/clip_ig"],[1,12587,"第三种方式：最常用\n"],[-1,12599,"e"],[1,12600,"\n"],[-1,13029,"i"],[1,13030,"\n"],[-1,13033,"p"],[1,13036,"\n"],[-1,13039,"p"],[1,13040,"\n"],[-1,13216,"g\n)\n\n因（四）为值是从 C"],[1,13231,"\n\n### （四）其他操作\n\n"],[-1,13257,"te"],[1,13259,"\n\n"],[-1,13408,"p"],[1,13409,"\n"],[-1,13412,"p_ e064 )\n\n**2** **"],[-1,13433,"*"],[1,13434," push 方法向值栈放数据，获取方法："],[-1,13488,"0iage jpg) "],[-1,13500,"****"],[-1,13505,"****"],[-1,13512,"****s*置"],[1,13519," push 方法设置值，没有"],[-1,13528,"**"],[-1,13531,"\n**"],[-1,13535,"****"],[-1,13540,"****"],[1,13546,"值栈"],[1,13547,"数据"],[1,13550,"向值栈放"],[1,13558,"，数组名称 top，根据数组获取值"],[-1,13616,"\n"],[1,13617,"\""],[1,13619,"\n"],[-1,13624,"1/cli八、 p_ima可以ge068."],[1,13645,"\n## 八、 EL表达式可以获取值栈数据"],[-1,13649," -L表达 栈数据（为什么）\n对* **Valuek.j \n**首先加 `***** **"],[1,13694,"\n- EL 表达式获取域对象值\n首先加上标签头：`<%@ "],[-1,13700,"**"],[-1,13703,"**"],[-1,13710,"****"],[1,13723,"va.s"],[1,13724,"n"],[-1,13732,"le**pf\"****c****\"%*"],[1,13751,"/jstl/core\"prefix=\"c\"%>`\n然后使用 foreach\n"],[-1,13923,"*- </c:forEac\n\n**2** **"],[1,13946,"\n- "],[1,13948,"对象里面"],[-1,13952,"****"],[1,13956,"setA"],[-1,13964,"****取值**- "],[1,13974,"方法，获取值使用getAtt"],[-1,13978," **方法**\n ** **底层增*"],[1,13996,"te方法\n\n- 底层增强 "],[-1,14003,"****"],[1,14008,"对象里面"],[-1,14010,"**gtte****"],[1,14020,"法：getAttribute 方法"],[-1,14022,"**"],[-1,14026,"****"],[-1,14034,"****"],[-1,14040,"e*取"],[1,14043,"quest域获取值，如果"],[-1,14047,"**\n\n**"],[1,14053,"直接返回\n"],[-1,14055,"****"],[-1,14063,"****"],[-1,14074,"****"],[1,14081,"不到"],[-1,14083,"/cli九、p_image072.jpg)\n（一）\n |"],[1,14111,"到值栈中把值获取出来，把值放到域对象里面\n\n\n## 九、OGNL的#、%使用\n\n### （一）#使用"],[-1,14135," "],[1,14136,"\n"],[-1,14366,"O"],[1,14367,"\n"],[-1,14717,"/"],[1,14718,"\n"],[-1,14867,"clip"],[1,14871,"### "],[-1,14874,"_imag-  在# "],[-1,14890,"**1** **标标签**\n\n***1******s"],[1,14916,"-  在struts2标签中表单标签\n在strut"],[-1,14918,"****"],[-1,14925,"***"],[1,14928,"面使用"],[-1,14940,"*str****"],[1,14948,"在struts2"],[-1,14953,"*nl****表/"],[1,14962,"面使用ognl表达式不识别，只有%之后才会识别。\n"],[-1,15090,"1/clip_image081.jpg)\n\n |"]],[1681,1681],[15090,15090]]],[1570101693820,[null,[[1,1681,"\n\n"],[-1,1681,"对象"],[-1,1819,"\n\n"],[1,2397,"\n-"],[1,2459," "],[-1,2459,"\n"],[-1,2519,"- "],[1,8166,"u"],[-1,8166,"\n"],[1,8578,"age"],[-1,8578,"```"],[1,8611,"`"],[-1,8611,"\n"],[1,8701,"`"],[1,8703," |"],[1,8704,"\n（三）"],[-1,8708,"（三）"],[-1,8719,"集合"],[1,8723,"*  **********变\n\n*  ****生*****方\n\n*"],[-1,8723,"第一步  定义list集合变量\n第二步  生成变量的get方法\n第三步"],[1,8760,"****"],[1,8765,"********集"],[-1,8765,"法里面向list集合设"],[-1,8778,"\n\n"],[1,9575,"|#\n七、\n"],[-1,9578,"七、"],[1,9585,"* ****str*** 和 ***+***组合*"],[-1,9585,"数据\n\n使用struts2的标签 和 ognl"],[-1,9611,"组合"],[-1,9615,"值栈数据"],[1,9625,"***）"],[1,9644,"****"],[-1,9644,"ognl"],[-1,9650,"式”/>"],[1,9657," |\n\n（一）"],[-1,9661,"（一）"],[-1,9667,"符串\n\n"],[1,10335," |\n\n（二）"],[-1,10339,"（二）"],[-1,10344,"对象\n\n"],[1,10374,"* **"],[-1,10376,"栈放"],[-1,10379,"象\n"],[1,10404,"象"],[-1,10404,"\n"],[1,10815,")"],[-1,10815,"\n"],[1,10823,"* **"],[-1,10826,"中获"],[-1,10829,"值\n"],[1,10843,"值"],[-1,10843,"\n"],[1,10849,">\n:property>\n\n    <br"],[1,11042,")"],[-1,11042,"\n"],[1,11105,"（三）"],[-1,11115,"\n```\n\n\n### （三）获取list集合\n\n"],[1,11843,"\n |\n\n# "],[-1,11843,"第一种方式：\n"],[1,11862,"获"],[-1,11862,"\n"],[1,12244,"p"],[-1,12244,"\n"],[1,12252,"01/cliage05 g) "],[-1,12252,"第"],[1,12257," *val*"],[-1,12257,"：value 值为 List 对象名；\n"],[1,12289,"*"],[-1,12289,"\n"],[1,12571,"p"],[-1,12571,"\n"],[1,12579,"01/clip_ig"],[-1,12579,"第三种方式：最常用\n"],[1,12601,"e"],[-1,12601,"\n"],[1,13031,"i"],[-1,13031,"\n"],[1,13035,"p"],[-1,13037,"\n"],[1,13041,"p"],[-1,13041,"\n"],[1,13218,"g\n)\n\n因（四）为值是从 C"],[-1,13218,"\n\n### （四）其他操作\n\n"],[1,13259,"te"],[-1,13259,"\n\n"],[1,13410,"p"],[-1,13410,"\n"],[1,13414,"p_ e064 )\n\n**2** **"],[1,13416,"*"],[-1,13416," push 方法向值栈放数据，获取方法："],[1,13490,"0iage jpg) "],[1,13491,"****"],[1,13492,"****"],[1,13495,"****s*置"],[-1,13495," push 方法设置值，没有"],[1,13518,"**"],[1,13519,"\n**"],[1,13520,"****"],[1,13521,"****"],[-1,13523,"值栈"],[-1,13526,"数据"],[-1,13531,"向值栈放"],[-1,13543,"，数组名称 top，根据数组获取值"],[1,13618,"\n"],[-1,13618,"\""],[-1,13621,"\n"],[1,13627,"1/cli八、 p_ima可以ge068."],[-1,13627,"\n## 八、 EL表达式可以获取值栈数据"],[1,13651," -L表达 栈数据（为什么）\n对* **Valuek.j \n**首先加 `***** **"],[-1,13651,"\n- EL 表达式获取域对象值\n首先加上标签头：`<%@ "],[1,13686,"**"],[1,13687,"**"],[1,13692,"****"],[-1,13701,"va.s"],[-1,13706,"n"],[1,13715,"le**pf\"****c****\"%*"],[-1,13715,"/jstl/core\"prefix=\"c\"%>`\n然后使用 foreach\n"],[1,13925,"*- </c:forEac\n\n**2** **"],[-1,13925,"\n- "],[-1,13930,"对象里面"],[1,13938,"****"],[-1,13938,"setA"],[1,13950,"****取值**- "],[-1,13950,"方法，获取值使用getAtt"],[1,13968," **方法**\n ** **底层增*"],[-1,13968,"te方法\n\n- 底层增强 "],[1,13988,"****"],[-1,13989,"对象里面"],[1,13995,"**gtte****"],[-1,13995,"法：getAttribute 方法"],[1,14014,"**"],[1,14016,"****"],[1,14020,"****"],[1,14022,"e*取"],[-1,14022,"quest域获取值，如果"],[1,14038,"**\n\n**"],[-1,14038,"直接返回\n"],[1,14045,"****"],[1,14049,"****"],[1,14056,"****"],[-1,14059,"不到"],[1,14063,"/cli九、p_image072.jpg)\n（一）\n |"],[-1,14063,"到值栈中把值获取出来，把值放到域对象里面\n\n\n## 九、OGNL的#、%使用\n\n### （一）#使用"],[1,14137," "],[-1,14137,"\n"],[1,14368,"O"],[-1,14368,"\n"],[1,14719,"/"],[-1,14719,"\n"],[1,14869,"clip"],[-1,14869,"### "],[1,14876,"_imag-  在# "],[1,14881,"**1** **标标签**\n\n***1******s"],[-1,14881,"-  在struts2标签中表单标签\n在strut"],[1,14908,"****"],[1,14911,"***"],[-1,14911,"面使用"],[1,14926,"*str****"],[-1,14926,"在struts2"],[1,14939,"*nl****表/"],[-1,14939,"面使用ognl表达式不识别，只有%之后才会识别。\n"],[1,15092,"1/clip_image081.jpg)\n\n |"]],[15090,15090],[1681,1681]]],[1570101638855,["GJX@GJXAIOU",[[1,2515,"Stack值栈"]],[2515,2515],[2522,2522]]],[1570101638902,["GJX@GJXAIOU",[[1,2520," "]],[2522,2522],[2523,2523]]],[1570101647213,["GJX@GJXAIOU",[[1,2523,"实例，Ognk"]],[2523,2523],[2530,2530]]],[1570101647674,["GJX@GJXAIOU",[[-1,2529,"k"]],[2530,2530],[2529,2529]]],[1570101649341,["GJX@GJXAIOU",[[1,2529,"lC"]],[2529,2529],[2531,2531]]],[1570101649962,["GJX@GJXAIOU",[[-1,2530,"C"]],[2531,2531],[2530,2530]]],[1570101657182,["GJX@GJXAIOU",[[1,2530,"ValueStack贯穿"]],[2530,2530],[2542,2542]]],[1570101657229,["GJX@GJXAIOU",[[1,2540," "]],[2542,2542],[2543,2543]]],[1570101677454,["GJX@GJXAIOU",[[1,2543,"整个 action 的生命周期。"]],[2543,2543],[2559,2559]]],[1570101753822,[null,[[-1,1681,"\n\n"],[1,1683,"对象"],[1,1819,"\n\n"],[-1,2395,"\n-"],[-1,2459," "],[1,2460,"\n"],[1,2563,"- "],[-1,8208,"u"],[1,8209,"\n"],[-1,8620,"age"],[1,8623,"```"],[-1,8653,"`"],[1,8654,"\n"],[-1,8743,"`"],[-1,8746," |"],[-1,8749,"\n（三）"],[1,8757,"（三）"],[1,8765,"集合"],[-1,8767,"*  **********变\n\n*  ****生*****方\n\n*"],[1,8800,"第一步  定义list集合变量\n第二步  生成变量的get方法\n第三步"],[-1,8802,"****"],[-1,8811,"********集"],[1,8820,"法里面向list集合设"],[1,8822,"\n\n"],[-1,9617,"|#\n七、\n"],[1,9626,"七、"],[-1,9631,"* ****str*** 和 ***+***组合*"],[1,9656,"数据\n\n使用struts2的标签 和 ognl"],[1,9659,"组合"],[1,9661,"值栈数据"],[-1,9667,"***）"],[-1,9690,"****"],[1,9694,"ognl"],[1,9696,"式”/>"],[-1,9699," |\n\n（一）"],[1,9710,"（一）"],[1,9713,"符串\n\n"],[-1,10377," |\n\n（二）"],[1,10388,"（二）"],[1,10390,"对象\n\n"],[-1,10416,"* **"],[1,10422,"栈放"],[1,10423,"象\n"],[-1,10446,"象"],[1,10447,"\n"],[-1,10857,")"],[1,10858,"\n"],[-1,10865,"* **"],[1,10872,"中获"],[1,10873,"值\n"],[-1,10885,"值"],[1,10886,"\n"],[-1,10891,">\n:property>\n\n    <br"],[-1,11105,")"],[1,11106,"\n"],[-1,11168,"（三）"],[1,11181,"\n```\n\n\n### （三）获取list集合\n\n"],[-1,11885,"\n |\n\n# "],[1,11892,"第一种方式：\n"],[-1,11904,"获"],[1,11905,"\n"],[-1,12286,"p"],[1,12287,"\n"],[-1,12294,"01/cliage05 g) "],[1,12309,"第"],[-1,12313," *val*"],[1,12319,"：value 值为 List 对象名；\n"],[-1,12331,"*"],[1,12332,"\n"],[-1,12613,"p"],[1,12614,"\n"],[-1,12621,"01/clip_ig"],[1,12631,"第三种方式：最常用\n"],[-1,12643,"e"],[1,12644,"\n"],[-1,13073,"i"],[1,13074,"\n"],[-1,13077,"p"],[1,13080,"\n"],[-1,13083,"p"],[1,13084,"\n"],[-1,13260,"g\n)\n\n因（四）为值是从 C"],[1,13275,"\n\n### （四）其他操作\n\n"],[-1,13301,"te"],[1,13303,"\n\n"],[-1,13452,"p"],[1,13453,"\n"],[-1,13456,"p_ e064 )\n\n**2** **"],[-1,13477,"*"],[1,13478," push 方法向值栈放数据，获取方法："],[-1,13532,"0iage jpg) "],[-1,13544,"****"],[-1,13549,"****"],[-1,13556,"****s*置"],[1,13563," push 方法设置值，没有"],[-1,13572,"**"],[-1,13575,"\n**"],[-1,13579,"****"],[-1,13584,"****"],[1,13590,"值栈"],[1,13591,"数据"],[1,13594,"向值栈放"],[1,13602,"，数组名称 top，根据数组获取值"],[-1,13660,"\n"],[1,13661,"\""],[1,13663,"\n"],[-1,13668,"1/cli八、 p_ima可以ge068."],[1,13689,"\n## 八、 EL表达式可以获取值栈数据"],[-1,13693," -L表达 栈数据（为什么）\n对* **Valuek.j \n**首先加 `***** **"],[1,13738,"\n- EL 表达式获取域对象值\n首先加上标签头：`<%@ "],[-1,13744,"**"],[-1,13747,"**"],[-1,13754,"****"],[1,13767,"va.s"],[1,13768,"n"],[-1,13776,"le**pf\"****c****\"%*"],[1,13795,"/jstl/core\"prefix=\"c\"%>`\n然后使用 foreach\n"],[-1,13967,"*- </c:forEac\n\n**2** **"],[1,13990,"\n- "],[1,13992,"对象里面"],[-1,13996,"****"],[1,14000,"setA"],[-1,14008,"****取值**- "],[1,14018,"方法，获取值使用getAtt"],[-1,14022," **方法**\n ** **底层增*"],[1,14040,"te方法\n\n- 底层增强 "],[-1,14047,"****"],[1,14052,"对象里面"],[-1,14054,"**gtte****"],[1,14064,"法：getAttribute 方法"],[-1,14066,"**"],[-1,14070,"****"],[-1,14078,"****"],[-1,14084,"e*取"],[1,14087,"quest域获取值，如果"],[-1,14091,"**\n\n**"],[1,14097,"直接返回\n"],[-1,14099,"****"],[-1,14107,"****"],[-1,14118,"****"],[1,14125,"不到"],[-1,14127,"/cli九、p_image072.jpg)\n（一）\n |"],[1,14155,"到值栈中把值获取出来，把值放到域对象里面\n\n\n## 九、OGNL的#、%使用\n\n### （一）#使用"],[-1,14179," "],[1,14180,"\n"],[-1,14410,"O"],[1,14411,"\n"],[-1,14761,"/"],[1,14762,"\n"],[-1,14911,"clip"],[1,14915,"### "],[-1,14918,"_imag-  在# "],[-1,14934,"**1** **标标签**\n\n***1******s"],[1,14960,"-  在struts2标签中表单标签\n在strut"],[-1,14962,"****"],[-1,14969,"***"],[1,14972,"面使用"],[-1,14984,"*str****"],[1,14992,"在struts2"],[-1,14997,"*nl****表/"],[1,15006,"面使用ognl表达式不识别，只有%之后才会识别。\n"],[-1,15134,"1/clip_image081.jpg)\n\n |"]],[1681,1681],[15134,15134]]],[1570101753822,[null,[[1,1681,"\n\n"],[-1,1681,"对象"],[-1,1819,"\n\n"],[1,2397,"\n-"],[1,2459," "],[-1,2459,"\n"],[-1,2563,"- "],[1,8210,"u"],[-1,8210,"\n"],[1,8622,"age"],[-1,8622,"```"],[1,8655,"`"],[-1,8655,"\n"],[1,8745,"`"],[1,8747," |"],[1,8748,"\n（三）"],[-1,8752,"（三）"],[-1,8763,"集合"],[1,8767,"*  **********变\n\n*  ****生*****方\n\n*"],[-1,8767,"第一步  定义list集合变量\n第二步  生成变量的get方法\n第三步"],[1,8804,"****"],[1,8809,"********集"],[-1,8809,"法里面向list集合设"],[-1,8822,"\n\n"],[1,9619,"|#\n七、\n"],[-1,9622,"七、"],[1,9629,"* ****str*** 和 ***+***组合*"],[-1,9629,"数据\n\n使用struts2的标签 和 ognl"],[-1,9655,"组合"],[-1,9659,"值栈数据"],[1,9669,"***）"],[1,9688,"****"],[-1,9688,"ognl"],[-1,9694,"式”/>"],[1,9701," |\n\n（一）"],[-1,9705,"（一）"],[-1,9711,"符串\n\n"],[1,10379," |\n\n（二）"],[-1,10383,"（二）"],[-1,10388,"对象\n\n"],[1,10418,"* **"],[-1,10420,"栈放"],[-1,10423,"象\n"],[1,10448,"象"],[-1,10448,"\n"],[1,10859,")"],[-1,10859,"\n"],[1,10867,"* **"],[-1,10870,"中获"],[-1,10873,"值\n"],[1,10887,"值"],[-1,10887,"\n"],[1,10893,">\n:property>\n\n    <br"],[1,11086,")"],[-1,11086,"\n"],[1,11149,"（三）"],[-1,11159,"\n```\n\n\n### （三）获取list集合\n\n"],[1,11887,"\n |\n\n# "],[-1,11887,"第一种方式：\n"],[1,11906,"获"],[-1,11906,"\n"],[1,12288,"p"],[-1,12288,"\n"],[1,12296,"01/cliage05 g) "],[-1,12296,"第"],[1,12301," *val*"],[-1,12301,"：value 值为 List 对象名；\n"],[1,12333,"*"],[-1,12333,"\n"],[1,12615,"p"],[-1,12615,"\n"],[1,12623,"01/clip_ig"],[-1,12623,"第三种方式：最常用\n"],[1,12645,"e"],[-1,12645,"\n"],[1,13075,"i"],[-1,13075,"\n"],[1,13079,"p"],[-1,13081,"\n"],[1,13085,"p"],[-1,13085,"\n"],[1,13262,"g\n)\n\n因（四）为值是从 C"],[-1,13262,"\n\n### （四）其他操作\n\n"],[1,13303,"te"],[-1,13303,"\n\n"],[1,13454,"p"],[-1,13454,"\n"],[1,13458,"p_ e064 )\n\n**2** **"],[1,13460,"*"],[-1,13460," push 方法向值栈放数据，获取方法："],[1,13534,"0iage jpg) "],[1,13535,"****"],[1,13536,"****"],[1,13539,"****s*置"],[-1,13539," push 方法设置值，没有"],[1,13562,"**"],[1,13563,"\n**"],[1,13564,"****"],[1,13565,"****"],[-1,13567,"值栈"],[-1,13570,"数据"],[-1,13575,"向值栈放"],[-1,13587,"，数组名称 top，根据数组获取值"],[1,13662,"\n"],[-1,13662,"\""],[-1,13665,"\n"],[1,13671,"1/cli八、 p_ima可以ge068."],[-1,13671,"\n## 八、 EL表达式可以获取值栈数据"],[1,13695," -L表达 栈数据（为什么）\n对* **Valuek.j \n**首先加 `***** **"],[-1,13695,"\n- EL 表达式获取域对象值\n首先加上标签头：`<%@ "],[1,13730,"**"],[1,13731,"**"],[1,13736,"****"],[-1,13745,"va.s"],[-1,13750,"n"],[1,13759,"le**pf\"****c****\"%*"],[-1,13759,"/jstl/core\"prefix=\"c\"%>`\n然后使用 foreach\n"],[1,13969,"*- </c:forEac\n\n**2** **"],[-1,13969,"\n- "],[-1,13974,"对象里面"],[1,13982,"****"],[-1,13982,"setA"],[1,13994,"****取值**- "],[-1,13994,"方法，获取值使用getAtt"],[1,14012," **方法**\n ** **底层增*"],[-1,14012,"te方法\n\n- 底层增强 "],[1,14032,"****"],[-1,14033,"对象里面"],[1,14039,"**gtte****"],[-1,14039,"法：getAttribute 方法"],[1,14058,"**"],[1,14060,"****"],[1,14064,"****"],[1,14066,"e*取"],[-1,14066,"quest域获取值，如果"],[1,14082,"**\n\n**"],[-1,14082,"直接返回\n"],[1,14089,"****"],[1,14093,"****"],[1,14100,"****"],[-1,14103,"不到"],[1,14107,"/cli九、p_image072.jpg)\n（一）\n |"],[-1,14107,"到值栈中把值获取出来，把值放到域对象里面\n\n\n## 九、OGNL的#、%使用\n\n### （一）#使用"],[1,14181," "],[-1,14181,"\n"],[1,14412,"O"],[-1,14412,"\n"],[1,14763,"/"],[-1,14763,"\n"],[1,14913,"clip"],[-1,14913,"### "],[1,14920,"_imag-  在# "],[1,14925,"**1** **标标签**\n\n***1******s"],[-1,14925,"-  在struts2标签中表单标签\n在strut"],[1,14952,"****"],[1,14955,"***"],[-1,14955,"面使用"],[1,14970,"*str****"],[-1,14970,"在struts2"],[1,14983,"*nl****表/"],[-1,14983,"面使用ognl表达式不识别，只有%之后才会识别。\n"],[1,15136,"1/clip_image081.jpg)\n\n |"]],[15134,15134],[1681,1681]]],[1570101723483,["GJX@GJXAIOU",[[1,2559,"struts2中使用 OGNL将诸求 Action的 参数封装为对象存储到值栈中，并通过OGNL表达式读取值栈中的对象屈性值。"]],[2559,2559],[2622,2622]]],[1570101727574,["GJX@GJXAIOU",[[-1,2575,"诸求"]],[2577,2577],[2575,2575]]],[1570101729052,["GJX@GJXAIOU",[[1,2575,"请求"]],[2575,2575],[2577,2577]]],[1570101734268,["GJX@GJXAIOU",[[1,2584," "]],[2584,2584],[2585,2585]]],[1570101735977,["GJX@GJXAIOU",[[-1,2586," "]],[2587,2587],[2586,2586]]],[1570101739408,["GJX@GJXAIOU",[[1,2603," "]],[2603,2603],[2604,2604]]],[1570101740769,["GJX@GJXAIOU",[[1,2608," "]],[2608,2608],[2609,2609]]],[1570101748168,["GJX@GJXAIOU",[[-1,2620,"屈性"]],[2622,2622],[2620,2620]]],[1570101749879,["GJX@GJXAIOU",[[1,2620,"属性"]],[2620,2620],[2622,2622]]]],null,"GJX@GJXAIOU"]]}