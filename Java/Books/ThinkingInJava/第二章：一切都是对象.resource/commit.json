{"compress":true,"commitItems":[["c7a5fcf4-8a8f-48ed-b1cb-ed03096f7286",1562421797501,"",[[1562421752119,["GJX@GJXAIOU",[[1,0,"# 第二章：一切都是对象\n\n\n\n"]],[0,0],[15,15]]],[1562421842863,["GJX@GJXAIOU",[[1,0,"\n"]],[0,0],[1,1]]],[1562421844202,["GJX@GJXAIOU",[[1,0,"---\ntags: \n- Java\n- Java编程思想\nflag: green\nstyle: summer\ndate: '2019-7-6'\n---"]],[0,0],[75,75]]]],null,"GJX@GJXAIOU"],["36534570-8b00-4f5e-9cd6-99f755f1ed22",1562462498424,"---\ntags: \n- Java\n- Java编程思想\nflag: green\nstyle: summer\ndate: '2019-7-6'\n---\n# 第二章：一切都是对象\n\n\n\n",[[1562462476375,["GJX@GJXAIOU",[[1,91,"### "]],[91,91],[95,95]]],[1562462477829,["GJX@GJXAIOU",[[-1,93,"# "]],[95,95],[93,93]]],[1562462480183,["GJX@GJXAIOU",[[1,93," 也能够"]],[93,93],[97,97]]],[1562462488373,["GJX@GJXAIOU",[[-1,94,"也能够"]],[97,97],[94,94]]],[1562462490017,["GJX@GJXAIOU",[[1,94,"用"]],[94,94],[95,95]]],[1562462490613,["GJX@GJXAIOU",[[-1,93," 用"]],[95,95],[93,93]]],[1562462497641,["GJX@GJXAIOU",[[1,93," 2.1 用应用"]],[93,93],[101,101]]],[1562462499032,["GJX@GJXAIOU",[[-1,99,"应用"]],[101,101],[99,99]]],[1562462504722,["GJX@GJXAIOU",[[1,99,"引用曹总"]],[99,99],[103,103]]],[1562462505541,["GJX@GJXAIOU",[[-1,101,"曹总"]],[103,103],[101,101]]],[1562462508609,["GJX@GJXAIOU",[[1,101,"曹总"]],[101,101],[103,103]]],[1562462509310,["GJX@GJXAIOU",[[-1,101,"曹总"]],[103,103],[101,101]]],[1562462520218,["GJX@GJXAIOU",[[1,101,"操纵对象"]],[101,101],[105,105]]],[1562462521006,["GJX@GJXAIOU",[[1,106,"\n"]],[105,105],[106,106]]],[1562462545062,["GJX@GJXAIOU",[[1,107,"\n"]],[106,106],[107,107]]],[1562462547782,["GJX@GJXAIOU",[[-1,107,"\n"],[1,108,"*"]],[107,107],[108,108]]],[1562462547943,["GJX@GJXAIOU",[[1,108,"***"]],[108,108],[109,109]]],[1562462557321,["GJX@GJXAIOU",[[1,109,"操纵的标识符"]],[109,109],[115,115]]],[1562462571744,["GJX@GJXAIOU",[[1,115,"实际上是对象的一个“引用”；"]],[115,115],[129,129]]],[1562462574236,["GJX@GJXAIOU",[[1,131,"\n\n"]],[131,131],[132,132]]],[1562462586871,["GJX@GJXAIOU",[[-1,132,"\n"],[1,133,"`"]],[132,132],[133,133]]],[1562462587480,["GJX@GJXAIOU",[[1,133,"``"]],[133,133],[135,135]]],[1562462587503,["GJX@GJXAIOU",[[1,135,"language\n```\n"]],[135,135],[135,143]]],[1562462588758,["GJX@GJXAIOU",[[-1,135,"language"],[1,143,"j"]],[135,143],[136,136]]],[1562462589263,["GJX@GJXAIOU",[[1,136,"ava"]],[136,136],[139,139]]],[1562462589517,["GJX@GJXAIOU",[[1,140,"\n"]],[139,139],[140,140]]],[1562462608817,["GJX@GJXAIOU",[[1,140,"String s; //创建的仅仅是一个引用，并不是"]],[140,140],[166,166]]],[1562462615144,["GJX@GJXAIOU",[[-1,132,"```java"]],[132,139],[132,132]]],[1562462617582,["GJX@GJXAIOU",[[-1,160,"```"]],[160,163],[160,160]]],[1562462621609,["GJX@GJXAIOU",[[1,132,"示例："]],[132,132],[135,135]]],[1562462627167,["GJX@GJXAIOU",[[-1,146,"//"]],[148,148],[146,146]]],[1562462628824,["GJX@GJXAIOU",[[1,146,"`"]],[146,146],[147,147]]],[1562462631703,["GJX@GJXAIOU",[[1,136,"`"]],[136,136],[137,137]]],[1562462638518,["GJX@GJXAIOU",[[1,162,"d"]],[162,162],[163,163]]],[1562462638541,["GJX@GJXAIOU",[[1,162," "]],[163,163],[164,164]]],[1562462638743,["GJX@GJXAIOU",[[1,164,"ui"]],[164,164],[166,166]]],[1562462639878,["GJX@GJXAIOU",[[-1,162," dui"]],[166,166],[162,162]]],[1562462650897,["GJX@GJXAIOU",[[1,162,"对象，如果向s"]],[162,162],[169,169]]],[1562462650919,["GJX@GJXAIOU",[[1,168," "]],[169,169],[170,170]]],[1562462658363,["GJX@GJXAIOU",[[1,170,"发送"]],[170,170],[172,172]]],[1562462658385,["GJX@GJXAIOU",[[1,170," "]],[172,172],[173,173]]],[1562462673256,["GJX@GJXAIOU",[[1,173,"一条消息，就会返回运行时存为"]],[173,173],[187,187]]],[1562462673967,["GJX@GJXAIOU",[[-1,185,"存为"]],[187,187],[185,185]]],[1562462675831,["GJX@GJXAIOU",[[1,185,"错误"]],[185,185],[187,187]]],[1562462695383,["GJX@GJXAIOU",[[1,187,"，因为此时s"]],[187,187],[193,193]]],[1562462695406,["GJX@GJXAIOU",[[1,192," "]],[193,193],[194,194]]],[1562462697408,["GJX@GJXAIOU",[[1,194,"没有"]],[194,194],[196,196]]],[1562462697431,["GJX@GJXAIOU",[[1,194," "]],[196,196],[197,197]]],[1562462703791,["GJX@GJXAIOU",[[1,197,"和任何对象相关联；"]],[197,197],[206,206]]],[1562462722893,["GJX@GJXAIOU",[[1,208,"\n"]],[206,206],[207,207]]],[1562462725359,["GJX@GJXAIOU",[[1,207,"``"]],[207,207],[209,209]]],[1562462735048,["GJX@GJXAIOU",[[1,208,"String s = \"hello\";"]],[208,208],[227,227]]],[1562462750673,["GJX@GJXAIOU",[[1,228," \""]],[228,228],[230,230]]],[1562462750696,["GJX@GJXAIOU",[[-1,229,"\""],[1,230,"“"]],[230,230],[230,230]]],[1562462751478,["GJX@GJXAIOU",[[-1,229,"“"]],[230,230],[229,229]]],[1562462752526,["GJX@GJXAIOU",[[1,229,"****"]],[229,229],[231,231]]],[1562462753807,["GJX@GJXAIOU",[[1,231,"chuanj"]],[231,231],[237,237]]],[1562462755149,["GJX@GJXAIOU",[[-1,231,"chuanj"]],[237,237],[231,231]]],[1562462763778,["GJX@GJXAIOU",[[1,231,"创建一个医用"]],[231,231],[237,237]]],[1562462764597,["GJX@GJXAIOU",[[-1,235,"医用"]],[237,237],[235,235]]],[1562462774842,["GJX@GJXAIOU",[[1,235,"引用的同时便进行初始化"]],[235,235],[246,246]]],[1562462827101,["GJX@GJXAIOU",[[1,250,"\n"]],[248,248],[249,249]]],[1562462827264,["GJX@GJXAIOU",[[1,251,"\n"]],[249,249],[250,250]]],[1562462828047,["GJX@GJXAIOU",[[1,252,"\n"]],[250,250],[251,251]]],[1562462848018,["GJX@GJXAIOU",[[1,251,"## 2.2 必须由你创建所有的对象"]],[251,251],[269,269]]],[1562462848446,["GJX@GJXAIOU",[[1,271,"\n"]],[269,269],[270,270]]],[1562462867614,["GJX@GJXAIOU",[[1,272,"\n"]],[270,270],[271,271]]],[1562462869081,["GJX@GJXAIOU",[[1,271,"#"]],[271,271],[272,272]]],[1562462870222,["GJX@GJXAIOU",[[-1,271,"#"]],[272,272],[271,271]]],[1562462873334,["GJX@GJXAIOU",[[1,271,"### 2.2.2"]],[271,271],[280,280]]],[1562462873926,["GJX@GJXAIOU",[[-1,279,"2"]],[280,280],[279,279]]],[1562462879136,["GJX@GJXAIOU",[[1,279,"1 对象存储区域"]],[279,279],[287,287]]],[1562462879510,["GJX@GJXAIOU",[[1,289,"\n"]],[287,287],[288,288]]],[1562462879902,["GJX@GJXAIOU",[[1,290,"\n"]],[288,288],[289,289]]],[1562462897160,["GJX@GJXAIOU",[[1,289,"- 寄存器： 最快的存储区"]],[289,289],[302,302]]],[1562462911394,["GJX@GJXAIOU",[[1,296,"在处理器的内存"]],[296,296],[303,303]]],[1562462912158,["GJX@GJXAIOU",[[-1,301,"内存"]],[303,303],[301,301]]],[1562462914193,["GJX@GJXAIOU",[[1,301,"内部"]],[301,301],[303,303]]],[1562462923561,["GJX@GJXAIOU",[[1,303,"，是"]],[303,303],[305,305]]],[1562462954487,["GJX@GJXAIOU",[[1,311,"，数量有限，不能直接控制；"]],[311,311],[324,324]]],[1562462955438,["GJX@GJXAIOU",[[1,325,"- \n"]],[324,324],[327,327]]],[1562462958793,["GJX@GJXAIOU",[[1,327,"队长"]],[327,327],[329,329]]],[1562462959423,["GJX@GJXAIOU",[[-1,327,"队长"]],[329,329],[327,327]]],[1562462976896,["GJX@GJXAIOU",[[1,327,"堆栈：位于通用RAM"]],[327,327],[337,337]]],[1562462976920,["GJX@GJXAIOU",[[1,334," "]],[337,337],[338,338]]],[1562462978175,["GJX@GJXAIOU",[[1,338,"（）"]],[338,338],[340,340]]],[1562462990160,["GJX@GJXAIOU",[[1,339,"随机访问存储器"]],[339,339],[346,346]]],[1562462993681,["GJX@GJXAIOU",[[1,347,"中，"]],[347,347],[349,349]]]],null,"GJX@GJXAIOU"],["c578e4d0-aae0-4d59-a068-b319af924df4",1562501956166,"---\ntags: \n- Java\n- Java编程思想\nflag: green\nstyle: summer\ndate: '2019-7-6'\n---\n# 第二章：一切都是对象\n\n\n## 2.1 用引用操纵对象\n\n**操纵的标识符实际上是对象的一个“引用”；**\n示例：\n`String s; `创建的仅仅是一个引用，并不是对象，如果向 s 发送一条消息，就会返回运行时错误，因为此时 s 没有和任何对象相关联；\n`String s = \"hello\";` **创建一个引用的同时便进行初始化**\n\n\n## 2.2 必须由你创建所有的对象\n\n### 2.2.1 对象存储区域\n\n- 寄存器： 在处理器的内部，是最快的存储区，数量有限，不能直接控制；\n- 堆栈：位于通用 RAM（随机访问存储器）中，\n\n",[[1562501905067,["GJX@GJXAIOU",[[1,349,"但是通过****"]],[349,349],[355,355]]],[1562501908549,["GJX@GJXAIOU",[[1,355,"堆栈指针"]],[355,355],[359,359]]],[1562501954941,["GJX@GJXAIOU",[[1,361,"可以从处理器直接获得支持"]],[361,361],[373,373]]],[1562501957272,["GJX@GJXAIOU",[[-1,373,"，"]],[374,374],[373,373]]],[1562501988371,["GJX@GJXAIOU",[[1,373,"。堆栈指针向下移动，则分配新的内存；若向上移动，则释放内存；"]],[373,373],[403,403]]],[1562502075124,[null,[[1,404,"\n"]],[404,404],[405,405]]],[1562502075124,[null,[[-1,404,"\n"]],[405,405],[404,404]]],[1562502041636,["GJX@GJXAIOU",[[1,403,"分配内存的"]],[403,403],[408,408]]],[1562502044986,["GJX@GJXAIOU",[[-1,405,"内存的"]],[408,408],[405,405]]],[1562502049973,["GJX@GJXAIOU",[[1,405,"存储的方法的"]],[405,405],[411,411]]],[1562502195126,[null,[[1,412,"\n"]],[412,412],[413,413]]],[1562502195126,[null,[[-1,412,"\n"]],[413,413],[412,412]]],[1562502167669,["GJX@GJXAIOU",[[1,411,"快速和有效性仅次于寄存器；因为java"]],[411,411],[430,430]]],[1562502167693,["GJX@GJXAIOU",[[1,426," "]],[430,430],[431,431]]],[1562502169110,["GJX@GJXAIOU",[[1,431,"系统"]],[431,431],[433,433]]],[1562502169134,["GJX@GJXAIOU",[[1,431," "]],[433,433],[434,434]]],[1562502191798,["GJX@GJXAIOU",[[1,434,"的知道存储在堆栈中对象具体的声明周期，因此"]],[434,434],[455,455]]],[1562502255129,[null,[[1,456,"\n"]],[456,456],[457,457]]],[1562502255129,[null,[[-1,456,"\n"]],[457,457],[456,456]]],[1562502205321,["GJX@GJXAIOU",[[1,455,"灵活性不好；****"]],[455,455],[463,463]]],[1562502218343,["GJX@GJXAIOU",[[1,463,"对象引用存放在随相"]],[463,463],[472,472]]],[1562502218968,["GJX@GJXAIOU",[[-1,470,"随相"]],[472,472],[470,470]]],[1562502222562,["GJX@GJXAIOU",[[1,470,"堆栈中。"]],[470,470],[474,474]]],[1562502223833,["GJX@GJXAIOU",[[1,477,"- \n"]],[476,476],[479,479]]],[1562502237572,["GJX@GJXAIOU",[[1,479,"堆：一种为"]],[479,479],[484,484]]],[1562502238249,["GJX@GJXAIOU",[[-1,483,"为"]],[484,484],[483,483]]],[1562502241532,["GJX@GJXAIOU",[[1,483,"位于RAM"]],[483,483],[488,488]]],[1562502241555,["GJX@GJXAIOU",[[1,485," "]],[488,488],[489,489]]],[1562502243458,["GJX@GJXAIOU",[[1,489,"的"]],[489,489],[490,490]]],[1562502243482,["GJX@GJXAIOU",[[1,489," "]],[490,490],[491,491]]],[1562502251636,["GJX@GJXAIOU",[[1,491,"通用内存池，用于"]],[491,491],[499,499]]],[1562502255095,["GJX@GJXAIOU",[[-1,497,"用于"]],[499,499],[497,497]]],[1562502315129,[null,[[1,498,"\n"]],[498,498],[499,499]]],[1562502315129,[null,[[-1,498,"\n"]],[499,499],[498,498]]],[1562502255946,["GJX@GJXAIOU",[[1,497,"（（"]],[497,497],[499,499]]],[1562502256439,["GJX@GJXAIOU",[[-1,497,"（（"]],[499,499],[497,497]]],[1562502257354,["GJX@GJXAIOU",[[1,497,"****"]],[497,497],[499,499]]],[1562502262781,["GJX@GJXAIOU",[[1,499,"用于存放多有的"]],[499,499],[506,506]]],[1562502263425,["GJX@GJXAIOU",[[-1,503,"多有的"]],[506,506],[503,503]]],[1562502266964,["GJX@GJXAIOU",[[1,503,"所有的Java"]],[503,503],[510,510]]],[1562502266988,["GJX@GJXAIOU",[[1,506," "]],[510,510],[511,511]]],[1562502268051,["GJX@GJXAIOU",[[1,511,"对象"]],[511,511],[513,513]]],[1562502268075,["GJX@GJXAIOU",[[1,511," "]],[513,513],[514,514]]],[1562502292972,["GJX@GJXAIOU",[[1,516,"，编译器不需要知道存储的数据在队中存活"]],[516,516],[535,535]]],[1562502294305,["GJX@GJXAIOU",[[-1,531,"队中存活"]],[535,535],[531,531]]],[1562502311788,["GJX@GJXAIOU",[[1,531,"堆中存活多长时间，因此灵活性较大"]],[531,531],[547,547]]],[1562502375129,[null,[[1,548,"\n"]],[548,548],[549,549]]],[1562502375129,[null,[[-1,548,"\n"]],[549,549],[548,548]]],[1562502336620,["GJX@GJXAIOU",[[1,547,"，但是堆进行存储分配和清理可能需要"]],[547,547],[564,564]]],[1562502340594,["GJX@GJXAIOU",[[-1,562,"需要"]],[564,564],[562,562]]],[1562502364292,["GJX@GJXAIOU",[[1,562,"比堆栈进行存储分配需要更多的时间。"]],[562,562],[579,579]]],[1562502365609,["GJX@GJXAIOU",[[1,580,"- \n"]],[579,579],[582,582]]],[1562502369507,["GJX@GJXAIOU",[[1,582,"常量存储："]],[582,582],[587,587]]],[1562502435132,[null,[[1,588,"\n"]],[588,588],[589,589]]],[1562502435132,[null,[[-1,588,"\n"]],[589,589],[588,588]]],[1562502377211,["GJX@GJXAIOU",[[1,587,"直接存储"]],[587,587],[591,591]]],[1562502379129,["GJX@GJXAIOU",[[-1,587,"直接存储"]],[591,591],[587,587]]],[1562502391196,["GJX@GJXAIOU",[[1,587,"常量值直接存储在程序代码内部；"]],[587,587],[602,602]]],[1562502407193,["GJX@GJXAIOU",[[1,603,"- \n"]],[602,602],[605,605]]],[1562502413987,["GJX@GJXAIOU",[[1,605,"非RAM"]],[605,605],[609,609]]],[1562502414011,["GJX@GJXAIOU",[[1,606," "]],[609,609],[610,610]]],[1562502415814,["GJX@GJXAIOU",[[1,610,"存储"]],[610,610],[612,612]]],[1562502415839,["GJX@GJXAIOU",[[1,610," "]],[612,612],[613,613]]],[1562502416885,["GJX@GJXAIOU",[[1,613,"，"]],[613,613],[614,614]]],[1562502423961,["GJX@GJXAIOU",[[-1,613,"，"]],[614,614],[613,613]]],[1562502434013,["GJX@GJXAIOU",[[1,613,"：数据完全存活与程序之外"]],[613,613],[625,625]]],[1562502495134,[null,[[1,626,"\n"]],[626,626],[627,627]]],[1562502495134,[null,[[-1,626,"\n"]],[627,627],[626,626]]],[1562502452147,["GJX@GJXAIOU",[[1,625,"，不受程序的约束，程序"]],[625,625],[636,636]]],[1562502457032,["GJX@GJXAIOU",[[-1,633,"，程序"]],[636,636],[633,633]]],[1562502462108,["GJX@GJXAIOU",[[1,633,"，与程序有没有云此案"]],[633,633],[643,643]]],[1562502462944,["GJX@GJXAIOU",[[-1,640,"云此案"]],[643,643],[640,640]]],[1562502474149,["GJX@GJXAIOU",[[1,640,"运行没有关系，例如：****"]],[640,640],[652,652]]],[1562502485931,["GJX@GJXAIOU",[[1,652,"流对象和持久化对象"]],[652,652],[661,661]]],[1562502490314,["GJX@GJXAIOU",[[1,663,"，"]],[663,663],[664,664]]],[1562502494705,["GJX@GJXAIOU",[[-1,663,"，"]],[664,664],[663,663]]],[1562502555135,[null,[[1,664,"\n"]],[664,664],[665,665]]],[1562502555135,[null,[[-1,664,"\n"]],[665,665],[664,664]]],[1562502495843,["GJX@GJXAIOU",[[1,664,"- \n"]],[663,663],[666,666]]],[1562502495968,["GJX@GJXAIOU",[[-1,664,"- "]],[666,666],[665,665]]],[1562502497553,["GJX@GJXAIOU",[[1,665,"## "]],[665,665],[668,668]]],[1562502498940,["GJX@GJXAIOU",[[1,667,"#"]],[668,668],[669,669]]],[1562502675137,[null,[[1,669,"\n"]],[669,669],[670,670]]],[1562502675137,[null,[[-1,669,"\n"]],[670,670],[669,669]]],[1562502668849,["GJX@GJXAIOU",[[1,669,"2.。2."]],[669,669],[674,674]]],[1562502669760,["GJX@GJXAIOU",[[-1,670,".。2."]],[674,674],[670,670]]],[1562502670762,["GJX@GJXAIOU",[[1,670,"。2."]],[670,670],[673,673]]],[1562502671729,["GJX@GJXAIOU",[[-1,669,"2。2."]],[673,673],[669,669]]],[1562502673237,["GJX@GJXAIOU",[[1,669,"2.。"]],[669,669],[672,672]]],[1562502673737,["GJX@GJXAIOU",[[-1,671,"。"]],[672,672],[671,671]]],[1562502675027,["GJX@GJXAIOU",[[1,671,"2.2"]],[671,671],[674,674]]],[1562502735140,[null,[[1,674,"\n"]],[674,674],[675,675]]],[1562502735140,[null,[[-1,674,"\n"]],[675,675],[674,674]]],[1562502682084,["GJX@GJXAIOU",[[1,674," 特例：基本类型"]],[674,674],[682,682]]],[1562502682737,["GJX@GJXAIOU",[[1,683,"\n"]],[682,682],[683,683]]],[1562502689029,["GJX@GJXAIOU",[[-1,683,"\n"],[1,684,"继承"]],[683,683],[685,685]]],[1562502689451,["GJX@GJXAIOU",[[-1,684,"承"]],[685,685],[684,684]]],[1562502689560,["GJX@GJXAIOU",[[-1,683,"继"],[1,684,"\n"]],[684,684],[683,683]]],[1562502692132,["GJX@GJXAIOU",[[-1,683,"\n"],[1,684,"基本"]],[683,683],[685,685]]],[1562502698173,["GJX@GJXAIOU",[[1,685,"数据类型的值是"]],[685,685],[692,692]]],[1562502698987,["GJX@GJXAIOU",[[-1,690,"值是"]],[692,692],[690,690]]],[1562502727116,["GJX@GJXAIOU",[[1,690,"变量是直接将“值”存储在堆栈中；"]],[690,690],[706,706]]],[1562502727467,["GJX@GJXAIOU",[[1,706,"\n\n"]],[706,706],[707,707]]],[1562502729277,["GJX@GJXAIOU",[[-1,707,"\n"],[1,708,"java"]],[707,707],[711,711]]],[1562502731290,["GJX@GJXAIOU",[[-1,708,"ava"]],[711,711],[708,708]]],[1562502731484,["GJX@GJXAIOU",[[-1,707,"j"],[1,708,"\n"]],[708,708],[707,707]]],[1562502733597,["GJX@GJXAIOU",[[-1,707,"\n"],[1,708,"Java"]],[707,707],[711,711]]],[1562502737412,["GJX@GJXAIOU",[[1,711,"继承"]],[711,711],[713,713]]],[1562502737436,["GJX@GJXAIOU",[[1,711," "]],[713,713],[714,714]]],[1562502738586,["GJX@GJXAIOU",[[-1,712,"继承"]],[714,714],[712,712]]],[1562502744293,["GJX@GJXAIOU",[[1,712,"基本数据类型栈"]],[712,712],[719,719]]],[1562502746018,["GJX@GJXAIOU",[[-1,718,"栈"]],[719,719],[718,718]]],[1562502757204,["GJX@GJXAIOU",[[1,718,"占的存储空间大小是不变的；"]],[718,718],[731,731]]],[1562502758506,["GJX@GJXAIOU",[[-1,730,"；"]],[731,731],[730,730]]],[1562502764070,["GJX@GJXAIOU",[[1,730,"，和系统无关；"]],[730,730],[737,737]]],[1562502764802,["GJX@GJXAIOU",[[1,737,"\n\n"]],[737,737],[738,738]]],[1562502916697,["GJX@GJXAIOU",[[1,739,"\n"]],[738,738],[739,739]]],[1562502935353,["GJX@GJXAIOU",[[1,736,"，**不随机器硬件架构的变化而变化**"]],[736,736],[755,755]]],[1562502938409,["GJX@GJXAIOU",[[1,759,"\n"]],[756,756],[757,757]]],[1562502947930,["GJX@GJXAIOU",[[1,760,"\n"]],[757,757],[758,758]]],[1562502948393,["GJX@GJXAIOU",[[1,758,"基本类型\t大小\t最小值\t最大值\t包装器类\nboolean\t-\t-\t-\tBoolean\nbyte\t8 bits\t-128\t+127\tByte\nchar\t16 bits\tUnicode 0\tUnicode 216-1\tCharacter\nshort\t16 bits\t-215\t+215-1\tShort\nint\t32 bits\t-232\t+232-1\tInteger\nfloat\t32 bits\tIEEE754\tIEEE754\tFloat\nlong\t64 bits\t-263\t+263-1\tLong\ndouble\t64 bits\tIEEE754\tIEEE754\tDouble\nvoid\t-\t-\t-\tVoid"]],[758,758],[1058,1058]]],[1562502958009,["GJX@GJXAIOU",[[-1,758,"基本类型\t大小\t最小值\t最大值\t包装器类\nboolean\t-\t-\t-\tBoolean\nbyte\t8 bits\t-128\t+127\tByte\nchar\t16 bits\tUnicode 0\tUnicode 216-1\tCharacter\nshort\t16 bits\t-215\t+215-1\tShort\nint\t32 bits\t-232\t+232-1\tInteger\nfloat\t32 bits\tIEEE754\tIEEE754\tFloat\nlong\t64 bits\t-263\t+263-1\tLong\ndouble\t64 bits\tIEEE754\tIEEE754\tDouble\nvoid\t-\t-\t-\tVoid"]],[758,1058],[758,758]]],[1562503031204,["GJX@GJXAIOU",[[1,761,"\n"]],[757,757],[758,758]]],[1562503031612,["GJX@GJXAIOU",[[1,758,"| 基本类型    | 大小      | 最小值       | 最大值            | 包装器类      |\n|---------|---------|-----------|----------------|-----------|\n| boolean | \\-      | \\-        | \\-             | Boolean   |\n| byte    | 8 bits  | \\-128     | \\+127          | Byte      |\n| char    | 16 bits | Unicode 0 | Unicode 216\\-1 | Character |\n| short   | 16 bits | \\-215     | \\+215\\-1       | Short     |\n| int     | 32 bits | \\-232     | \\+232\\-1       | Integer   |\n| float   | 32 bits | IEEE754   | IEEE754        | Float     |\n| long    | 64 bits | \\-263     | \\+263\\-1       | Long      |\n| double  | 64 bits | IEEE754   | IEEE754        | Double    |\n| void    | \\-      | \\-        | \\-             | Void      |"]],[758,758],[1450,1450]]],[1562503038508,["GJX@GJXAIOU",[[1,1098,"……"]],[1098,1098],[1100,1100]]],[1562503039748,["GJX@GJXAIOU",[[-1,1098,"……"]],[1100,1100],[1098,1098]]],[1562503040979,["GJX@GJXAIOU",[[1,1098,"^"]],[1098,1098],[1099,1099]]],[1562503045324,["GJX@GJXAIOU",[[1,1162,"^"]],[1162,1162],[1163,1163]]],[1562503051582,["GJX@GJXAIOU",[[1,1289,"^"]],[1289,1289],[1290,1290]]],[1562503056174,["GJX@GJXAIOU",[[1,1302,"^"]],[1302,1302],[1303,1303]]],[1562503075155,["GJX@GJXAIOU",[[1,1175,"^"]],[1175,1175],[1176,1176]]],[1562503076755,["GJX@GJXAIOU",[[1,1111,"^"]],[1111,1111],[1112,1112]]],[1562503080798,["GJX@GJXAIOU",[[1,1053,"^"]],[1053,1053],[1054,1054]]],[1562503179891,["GJX@GJXAIOU",[[1,579,"存储new出来的类的**对象（包括其成员变量）和数组**l堆中分配的内存由JVM的自动垃圾回收器来管理"]],[579,579],[630,630]]],[1562503179917,["GJX@GJXAIOU",[[1,608," "]],[630,630],[631,631]]],[1562503182372,["GJX@GJXAIOU",[[-1,608," "]],[609,609],[608,608]]],[1562503183236,["GJX@GJXAIOU",[[1,608,";"]],[608,608],[609,609]]],[1562503183924,["GJX@GJXAIOU",[[-1,607,"l;"]],[609,609],[607,607]]],[1562503184444,["GJX@GJXAIOU",[[1,607,";"]],[607,607],[608,608]]],[1562503203098,["GJX@GJXAIOU",[[1,698,"存放在编译期被确定，并被保存在已编译的.class文件中的一些数据；存放字符串常量，其他基本数据类型的常量，类和接口的全限定名，字段名称和描述符，方法名称和描述符,"]],[698,698],[780,780]]],[1562503244220,["GJX@GJXAIOU",[[1,1594,"\n"]],[1591,1591],[1592,1592]]],[1562503328162,["GJX@GJXAIOU",[[1,1594,"所有数值类型都有正负号 \n   boolean类型所占存储空间的大小没有明确指定（要看具体虚拟机的实现），仅定义为能够取字面值true或false。\n\n2.2 Java中的数组\n  Java确保数组会被初始化。而且不能在它的范围之外被访问。这种范围检查，是以每个数组上少量的内存开销及运行时的下标检查为代价的。\n\n《深入理解Java虚拟机》： \nJava 语言中对数组的访问比C/C++相对安全是因为：如有一维数组，其元素类型为 mypackage.MyClass，则虚拟机会自动生成一个直接继承于java.lang.Object的子类[Lmypackage.MyClass，创建动作由字节码指令newarray触发。这个类代表了一个元素类型为mypackage.MyClass的一维数组，数组中应有的属性和方法（用户可直接使用的只有被修饰为public的length属性和clone()方法）都实现在这个类里。Java语言中对数组的访问比C/C++相对安全就是因为这个类封装了数组元素的访问方法（准确地说，越界检查不是封装在数组元素访问的类中，而是封装在数组访问的xaload、xastore字节码中），而C/C++直接翻译为对数组指针的移动。\n\n// NotInit.java\npackage mypackage;\nclass MyClass{\n    static{\n        System.out.println(\"MyClass Init...\");\n    }\n}\npublic class NotInit{\n    public static void main(String[] args){\n        MyClass[] a = new MyClass[3];\n    }   \n}\n/*\n* 没有输出，说明数组元素没有初始化（虚拟机自动生成了别的类）。\n*/\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n数组对象，实际就是一个引用数组，每个元素会被初始化为null。\n基本数据类型的数组，编译器会将这种数组所占的内存全部置为零。\n在Java语言中，当检查到发生数组越界时会抛出java.lang.ArrayIndexOutOfBoundsException异常。\n2.3 作用域（scope）\n  1. Java 与 C/C++ 关于作用域的区别：如下，对于Java，非法，而对于 C/C++ 合法。（在 C/C++ 里将一个作用域的变量“隐藏”起来的做法，在Java里是不允许的。因为Java设计者认为这样做会导致程序混乱。）\n\n{\n    int x = 12;\n    {\n        int x = 96;     // Illegal for Java, but legal for C/C++\n    }\n}\n1\n2\n3\n4\n5\n6\n  2. Java对象不具备和基本类型一样的生命周期。当用new创建一个Java对象时，它可以存活于作用域之外。如：\n\n{\n    String s = new String(\"a string\");\n}   // End of scope\n1\n2\n3\n引用 s 在作用域终点就消失了。然而，s 指向的 String 对象仍继续占据内存空间。\n\n2.4 import 关键字\n  import关键字指示编译器导入一个包，也就是一个类库（在其他语言中，一个库不仅包含类，还可能包括方法和数据，但是Java中所有的代码都必须写在类里）。 \n  特定类 java.lang 会被自动导入到每一个Java文件中。\n\n2.5 static 关键字\n  5.1 通过 static 关键字可以满足以下两方面情形的需要：\n只想为某一特定域分配单一存储空间，而不去考虑空间要创建多少对象，甚至根本就不创建任何对象。\n希望某个方法不与包含它的类的任何对象关联在一起。也就是说，即使没有创建对象，也能够调用这个方法。\n  有些面向对象语言采用类数据和类方法两个术语，代表那些数据和方法只是作为整个类，而不是类的某个特定对象而存在的。例：\n\n  5.2 static 字段\nclass StaticTest{\n    static int i = 47;\n}\n1\n2\n3\n  如下创建两个对象，st1.i 和 st2.i 指向同一存储空间，共享同一个 i ，因此它们具有相同的值47。\n\nStaticTest st1 = new StaticTest();\nStaticTest st2 = new StaticTest();\n1\n2\n  5.3 static 方法\n  static作用于字段时，会改变数据的创建方式，但作用于方法时，差别却没有那么大。static方法的一个重要用法就是在不创建任何对象的前提下就可以调用它。这一点对定义main()方法很重要（所以main()方法是一个 satic 方法），这个方法是运行一个应用时的入口点。\n  和其它任何方法一样，static方法可以创建或使用与其类型相同的被命名对象，因此，static方法常常拿来做“牧羊人”的角色，负责看护与其隶属同一类型的实例群。\n  static方法的含义：static方法就是没有this的方法。关于static方法内部是否能调用非静态方法：因为没有this，就没有对象，所以不能直接调用非静态方法，但可以传递一个对象引用到静态方法里，然后通过这个引用（和this效果相同）来调用非静态方法和访问非静态数据成员。\n有些人认为static方法不是“面向对象”的，因为它们的确具有全局函数的语义；使用static方法时，由于不存在this，所以不是通过“向对象发送消息”的方式来完成的。"]],[1594,1594],[3971,3971]]],[1562503331769,["GJX@GJXAIOU",[[-1,1593,"\n"]],[1593,1593],[1592,1592]]],[1562503331908,["GJX@GJXAIOU",[[-1,1592,"\n"]],[1592,1592],[1591,1591]]],[1562503344795,["GJX@GJXAIOU",[[1,1668,"### "]],[1668,1668],[1684,1684]]],[1562503347659,["GJX@GJXAIOU",[[1,1675,".3"]],[1675,1675],[1677,1677]]],[1562503353964,["GJX@GJXAIOU",[[1,1754,"```"]],[1754,1754],[1757,1757]]],[1562503353991,["GJX@GJXAIOU",[[1,1757,"language\n```\n"]],[1757,1757],[1757,1765]]],[1562503356274,["GJX@GJXAIOU",[[-1,1766,"```"]],[1766,1769],[1766,1766]]],[1562503359097,["GJX@GJXAIOU",[[1,2135,"```"]],[2135,2135],[2138,2138]]],[1562503362049,["GJX@GJXAIOU",[[-1,1767,"\n"]],[1767,1767],[1766,1766]]],[1562503362218,["GJX@GJXAIOU",[[-1,1766,"\n"]],[1766,1766],[1765,1765]]],[1562503370404,["GJX@GJXAIOU",[[1,2137,"\n"]],[2137,2137],[2138,2138]]],[1562503371283,["GJX@GJXAIOU",[[1,2138,"```"]],[2138,2138],[2141,2141]]],[1562503371311,["GJX@GJXAIOU",[[1,2141,"language\n```\n"]],[2141,2141],[2141,2149]]],[1562503372459,["GJX@GJXAIOU",[[-1,2141,"language"],[1,2149,"h"]],[2141,2149],[2142,2142]]],[1562503372548,["GJX@GJXAIOU",[[1,2142,"a"]],[2142,2142],[2143,2143]]],[1562503373946,["GJX@GJXAIOU",[[-1,2141,"ha"]],[2143,2143],[2141,2141]]],[1562503374908,["GJX@GJXAIOU",[[1,2141,"java"]],[2141,2141],[2145,2145]]],[1562503375066,["GJX@GJXAIOU",[[1,2146,"\n"]],[2145,2145],[2146,2146]]],[1562503377858,["GJX@GJXAIOU",[[-1,2147,"```\n"]],[2146,2150],[2146,2146]]],[1562503389372,["GJX@GJXAIOU",[[1,2418,"\n"]],[2417,2417],[2418,2418]]],[1562503389860,["GJX@GJXAIOU",[[1,2419,"```\n"]],[2418,2418],[2422,2422]]],[1562503392971,["GJX@GJXAIOU",[[-1,2423,"1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15"]],[2423,2458],[2423,2423]]],[1562503397084,["GJX@GJXAIOU",[[1,2424,"- "]],[2424,2424],[2426,2426]]],[1562503399524,["GJX@GJXAIOU",[[1,2458,"- "]],[2458,2458],[2460,2460]]],[1562503402133,["GJX@GJXAIOU",[[1,2491,"- "]],[2491,2491],[2493,2493]]],[1562503405141,["GJX@GJXAIOU",[[1,2560,"\n"]],[2560,2560],[2561,2561]]],[1562503435787,["GJX@GJXAIOU",[[1,2561,"## "]],[2561,2561],[2578,2578]]],[1562503442066,["GJX@GJXAIOU",[[1,2584,"**"],[1,2605,"**"]],[2584,2605],[2584,2609]]],[1562503447171,["GJX@GJXAIOU",[[-1,2799,"1\n2\n3\n4\n5\n6"]],[2799,2810],[2799,2799]]],[1562503449620,["GJX@GJXAIOU",[[1,2701,"```"]],[2701,2701],[2704,2704]]],[1562503449649,["GJX@GJXAIOU",[[1,2704,"language\n```\n"]],[2704,2704],[2704,2712]]],[1562503452938,["GJX@GJXAIOU",[[-1,2713,"```"]],[2713,2716],[2713,2713]]],[1562503454452,["GJX@GJXAIOU",[[1,2812,"```"]],[2812,2812],[2815,2815]]],[1562503456409,["GJX@GJXAIOU",[[-1,2714,"\n"]],[2714,2714],[2713,2713]]],[1562503456818,["GJX@GJXAIOU",[[-1,2713,"\n"]],[2713,2713],[2712,2712]]],[1562503463937,["GJX@GJXAIOU",[[1,2819,"**"],[1,2840,"**"]],[2819,2840],[2819,2844]]],[1562503466212,["GJX@GJXAIOU",[[1,2877,"```"]],[2877,2877],[2880,2880]]],[1562503466240,["GJX@GJXAIOU",[[1,2880,"language\n```\n"]],[2880,2880],[2880,2888]]],[1562503468722,["GJX@GJXAIOU",[[-1,2889,"```"]],[2889,2892],[2889,2889]]],[1562503471019,["GJX@GJXAIOU",[[-1,2952,"1\n2\n3"],[1,2957,"```"]],[2952,2957],[2955,2955]]],[1562503473516,["GJX@GJXAIOU",[[-1,2890,"\n"]],[2890,2890],[2889,2889]]],[1562503473657,["GJX@GJXAIOU",[[-1,2889,"\n"]],[2889,2889],[2888,2888]]],[1562503483857,["GJX@GJXAIOU",[[1,2979,"**"],[1,2997,"**"]],[2979,2997],[2979,3001]]],[1562503485650,["GJX@GJXAIOU",[[-1,2997,"空"]],[2998,2998],[2997,2997]]],[1562503488034,["GJX@GJXAIOU",[[1,2997,"空"]],[2997,2997],[2998,2998]]],[1562503502618,["GJX@GJXAIOU",[[1,3076,"**"],[1,3095,"**"]],[3076,3095],[3076,3099]]],[1562503507587,["GJX@GJXAIOU",[[1,3121,"**"],[1,3125,"**"]],[3121,3125],[3121,3129]]],[1562503515523,["GJX@GJXAIOU",[[1,3198,"**"],[1,3209,"**"]],[3198,3209],[3198,3213]]],[1562503538146,["GJX@GJXAIOU",[[1,3274,"**"],[1,3290,"**"]],[3274,3290],[3274,3294]]],[1562503562443,["GJX@GJXAIOU",[[1,3160,"2."]],[3160,3160],[3162,3162]]],[1562503566786,["GJX@GJXAIOU",[[1,3143,"### "]],[3143,3143],[3161,3161]]],[1562503568818,["GJX@GJXAIOU",[[-1,3145,"#"]],[3161,3161],[3160,3160]]],[1562503571298,["GJX@GJXAIOU",[[1,3161,"### "]],[3163,3163],[3201,3201]]],[1562503573378,["GJX@GJXAIOU",[[-1,3166," "]],[3167,3167],[3166,3166]]],[1562503578141,["GJX@GJXAIOU",[[1,3004,"## "]],[3004,3004],[3021,3021]]],[1562503580969,["GJX@GJXAIOU",[[1,3368,"### "]],[3370,3370],[3387,3387]]],[1562503584426,["GJX@GJXAIOU",[[1,3374,"2."]],[3374,3374],[3376,3376]]],[1562503586442,["GJX@GJXAIOU",[[1,3390,"\n"]],[3389,3389],[3390,3390]]],[1562503587412,["GJX@GJXAIOU",[[1,3390,"···"]],[3390,3390],[3393,3393]]],[1562503588186,["GJX@GJXAIOU",[[-1,3390,"···"]],[3393,3393],[3390,3390]]],[1562503589379,["GJX@GJXAIOU",[[1,3390,"```"]],[3390,3390],[3393,3393]]],[1562503589407,["GJX@GJXAIOU",[[1,3393,"language\n```\n"]],[3393,3393],[3393,3401]]],[1562503590203,["GJX@GJXAIOU",[[-1,3393,"language"],[1,3401,"j"]],[3393,3401],[3394,3394]]],[1562503590636,["GJX@GJXAIOU",[[1,3394,"ava"]],[3394,3394],[3397,3397]]],[1562503590738,["GJX@GJXAIOU",[[1,3398,"\n"]],[3397,3397],[3398,3398]]],[1562503593819,["GJX@GJXAIOU",[[-1,3399,"```\n"]],[3398,3402],[3398,3398]]],[1562503595420,["GJX@GJXAIOU",[[1,3443,"\n"]],[3442,3442],[3443,3443]]],[1562503595970,["GJX@GJXAIOU",[[1,3444,"```\n"]],[3443,3443],[3447,3447]]],[1562503598002,["GJX@GJXAIOU",[[-1,3399,"\n"]],[3399,3399],[3398,3398]]],[1562503598394,["GJX@GJXAIOU",[[-1,3398,"\n"]],[3398,3398],[3397,3397]]],[1562503599275,["GJX@GJXAIOU",[[-1,3441,"\n"]],[3441,3441],[3440,3440]]],[1562503600530,["GJX@GJXAIOU",[[-1,3449,"3"]],[3450,3450],[3449,3449]]],[1562503600969,["GJX@GJXAIOU",[[-1,3449,"\n"]],[3449,3449],[3448,3448]]],[1562503601442,["GJX@GJXAIOU",[[-1,3447,"2"]],[3448,3448],[3447,3447]]],[1562503601764,["GJX@GJXAIOU",[[-1,3447,"\n"]],[3447,3447],[3446,3446]]],[1562503602210,["GJX@GJXAIOU",[[-1,3445,"1"]],[3446,3446],[3445,3445]]],[1562503602586,["GJX@GJXAIOU",[[-1,3445,"\n"]],[3445,3445],[3444,3444]]],[1562503610203,["GJX@GJXAIOU",[[-1,3573,"1\n2"]],[3573,3576],[3573,3573]]],[1562503612797,["GJX@GJXAIOU",[[1,3502,"```"]],[3502,3502],[3505,3505]]],[1562503612826,["GJX@GJXAIOU",[[1,3505,"language\n```\n"]],[3505,3505],[3505,3513]]],[1562503615258,["GJX@GJXAIOU",[[-1,3514,"```"]],[3514,3517],[3514,3514]]],[1562503616906,["GJX@GJXAIOU",[[1,3586,"```"]],[3586,3586],[3589,3589]]],[1562503619282,["GJX@GJXAIOU",[[-1,3515,"\n"]],[3515,3515],[3514,3514]]],[1562503619410,["GJX@GJXAIOU",[[-1,3514,"\n"]],[3514,3514],[3513,3513]]],[1562503624814,["GJX@GJXAIOU",[[1,3590,"2."]],[3590,3590],[3592,3592]]],[1562503627109,["GJX@GJXAIOU",[[-1,3588,"  "]],[3590,3590],[3588,3588]]],[1562503628395,["GJX@GJXAIOU",[[1,3588,"## "]],[3588,3588],[3606,3606]]],[1562503629490,["GJX@GJXAIOU",[[1,3590,"#"]],[3606,3606],[3607,3607]]],[1562503633949,["GJX@GJXAIOU",[[1,3610,"- "]],[3610,3610],[3612,3612]]],[1562503636427,["GJX@GJXAIOU",[[1,3751,"- "]],[3751,3751],[3753,3753]]],[1562503640045,["GJX@GJXAIOU",[[-1,3608,"  "]],[3608,3610],[3608,3608]]],[1562503644539,["GJX@GJXAIOU",[[-1,3747,"  "]],[3749,3749],[3747,3747]]],[1562503646098,["GJX@GJXAIOU",[[-1,3830,"  "]],[3830,3832],[3830,3830]]],[1562503647380,["GJX@GJXAIOU",[[1,3830,"- "]],[3830,3830],[3832,3832]]],[1562503664995,["GJX@GJXAIOU",[[1,1668,"\n"]],[1667,1667],[1668,1668]]],[1562503665395,["GJX@GJXAIOU",[[1,1669,"\n"]],[1668,1668],[1669,1669]]],[1562503670461,["GJX@GJXAIOU",[[1,1668,"jiben="]],[1668,1668],[1674,1674]]],[1562503671611,["GJX@GJXAIOU",[[-1,1668,"jiben="]],[1674,1674],[1668,1668]]],[1562503672554,["GJX@GJXAIOU",[[1,1668,"****"]],[1668,1668],[1670,1670]]],[1562503673196,["GJX@GJXAIOU",[[1,1670,"ji"]],[1670,1670],[1672,1672]]],[1562503674093,["GJX@GJXAIOU",[[-1,1670,"ji"]],[1672,1672],[1670,1670]]],[1562503674996,["GJX@GJXAIOU",[[1,1670,"Jiben"]],[1670,1670],[1675,1675]]],[1562503675883,["GJX@GJXAIOU",[[-1,1670,"Jiben"]],[1675,1675],[1670,1670]]],[1562503693829,["GJX@GJXAIOU",[[1,1670,"基本类型具有包装器类，使得可以在堆中"]],[1670,1670],[1688,1688]]],[1562503715753,["GJX@GJXAIOU",[[1,1688,"创建一个非基本对象，用来表示对应的及本行"]],[1688,1688],[1708,1708]]],[1562503716603,["GJX@GJXAIOU",[[-1,1705,"及本行"]],[1708,1708],[1705,1705]]],[1562503725711,["GJX@GJXAIOU",[[1,1705,"基本类型：相当于编程"]],[1705,1705],[1715,1715]]],[1562503727061,["GJX@GJXAIOU",[[-1,1713,"编程"]],[1715,1715],[1713,1713]]],[1562503732327,["GJX@GJXAIOU",[[1,1713,"变成了对象"]],[1713,1713],[1718,1718]]],[1562503781147,["GJX@GJXAIOU",[[1,1722,"\n"]],[1721,1721],[1722,1722]]],[1562503781291,["GJX@GJXAIOU",[[1,1723,"\n"]],[1722,1722],[1723,1723]]],[1562503815067,["GJX@GJXAIOU",[[1,1724,"\n"]],[1721,1721],[1722,1722]]],[1562503815636,["GJX@GJXAIOU",[[1,1722,"**自动装箱**：自动地将一个原始数据类型转换为一个封装类型\n\n**自动拆箱**：自动地将一个封装类型数据转换为原始数据类型"]],[1722,1722],[1784,1784]]],[1562503817851,["GJX@GJXAIOU",[[-1,1753,"\n"]],[1753,1753],[1752,1752]]],[1562503836739,["GJX@GJXAIOU",[[1,1786,"\n"]],[1784,1784],[1785,1785]]],[1562503839834,["GJX@GJXAIOU",[[1,1785,"****"]],[1785,1785],[1787,1787]]],[1562503846719,["GJX@GJXAIOU",[[1,1787,"补：高精度类"]],[1787,1787],[1793,1793]]],[1562503852854,["GJX@GJXAIOU",[[1,1792,"计算"]],[1792,1792],[1794,1794]]],[1562503854495,["GJX@GJXAIOU",[[1,1795,"："]],[1795,1795],[1796,1796]]],[1562503856030,["GJX@GJXAIOU",[[1,1798," "]],[1798,1798],[1799,1799]]],[1562503856507,["GJX@GJXAIOU",[[1,1801,"\n"]],[1799,1799],[1800,1800]]],[1562503857573,["GJX@GJXAIOU",[[1,1800," "]],[1800,1800],[1801,1801]]],[1562503858515,["GJX@GJXAIOU",[[-1,1800," "]],[1801,1801],[1800,1800]]],[1562503866462,["GJX@GJXAIOU",[[1,1800,"- BigInter"]],[1800,1800],[1810,1810]]],[1562503868443,["GJX@GJXAIOU",[[-1,1809,"r"]],[1810,1810],[1809,1809]]],[1562503871000,["GJX@GJXAIOU",[[1,1809,"ger："]],[1809,1809],[1813,1813]]],[1562503876622,["GJX@GJXAIOU",[[1,1799," "]],[1798,1798],[1799,1799]]],[1562503894431,["GJX@GJXAIOU",[[1,1799,"这两个包装器没有对应的数据类型"]],[1799,1799],[1814,1814]]],[1562503930266,["GJX@GJXAIOU",[[1,1829,"支持任意精度的整数，可以准确表示任何大小的****"]],[1829,1829],[1852,1852]]],[1562503932741,["GJX@GJXAIOU",[[1,1852,"整数值"]],[1852,1852],[1855,1855]]],[1562503935390,["GJX@GJXAIOU",[[1,1857,"；"]],[1857,1857],[1858,1858]]],[1562503935690,["GJX@GJXAIOU",[[1,1859,"- \n"]],[1858,1858],[1861,1861]]],[1562503962326,["GJX@GJXAIOU",[[1,1861,"BigDecimal： 支持任意精度的定点数，"]],[1861,1861],[1884,1884]]],[1562503965307,["GJX@GJXAIOU",[[-1,1883,"，"]],[1884,1884],[1883,1883]]],[1562503965838,["GJX@GJXAIOU",[[1,1883,"；"]],[1883,1883],[1884,1884]]],[1562503983674,["GJX@GJXAIOU",[[1,1938,"**"],[1,1970,"**"]],[1938,1970],[1938,1974]]],[1562504012774,["GJX@GJXAIOU",[[1,2648,"创建一个"]],[2648,2648],[2652,2652]]],[1562504019285,["GJX@GJXAIOU",[[1,2661,"创建"]],[2661,2661],[2663,2663]]],[1562504026462,["GJX@GJXAIOU",[[1,2672,"应用"]],[2672,2672],[2674,2674]]],[1562504027093,["GJX@GJXAIOU",[[-1,2672,"应用"]],[2674,2674],[2672,2672]]],[1562504030598,["GJX@GJXAIOU",[[1,2672,"引用"]],[2672,2672],[2674,2674]]],[1562504044973,["GJX@GJXAIOU",[[1,2687,"java看到"]],[2687,2687],[2693,2693]]],[1562504045005,["GJX@GJXAIOU",[[1,2691," "]],[2693,2693],[2694,2694]]],[1562504046607,["GJX@GJXAIOU",[[1,2694,"null"]],[2694,2694],[2698,2698]]],[1562504046638,["GJX@GJXAIOU",[[1,2694," "]],[2698,2698],[2699,2699]]],[1562504054206,["GJX@GJXAIOU",[[1,2699,"，认为该应用"]],[2699,2699],[2705,2705]]],[1562504055626,["GJX@GJXAIOU",[[-1,2703,"应用"]],[2705,2705],[2703,2703]]],[1562504061429,["GJX@GJXAIOU",[[1,2703,"引用没有指向对象；"]],[2703,2703],[2712,2712]]],[1562504073298,["GJX@GJXAIOU",[[1,2815,"- \n"]],[2814,2814],[2817,2817]]],[1562504075102,["GJX@GJXAIOU",[[1,2817,"****"]],[2817,2817],[2819,2819]]],[1562504079407,["GJX@GJXAIOU",[[1,2819,"使用任何医用"]],[2819,2819],[2825,2825]]],[1562504081011,["GJX@GJXAIOU",[[-1,2823,"医用"]],[2825,2825],[2823,2823]]],[1562504093110,["GJX@GJXAIOU",[[1,2823,"引用之前，必须为其制定一个对象"]],[2823,2823],[2838,2838]]],[1562504096603,["GJX@GJXAIOU",[[-1,2832,"制定"]],[2834,2834],[2832,2832]]],[1562504099159,["GJX@GJXAIOU",[[1,2832,"指定"]],[2832,2832],[2834,2834]]],[1562505270936,["GJX@GJXAIOU",[[1,3285,"\n"]],[3283,3283],[3284,3284]]],[1562505271509,["GJX@GJXAIOU",[[1,3286,"\n"]],[3284,3284],[3285,3285]]],[1562505275896,["GJX@GJXAIOU",[[1,3285,"Java中"]],[3285,3285],[3290,3290]]],[1562505275926,["GJX@GJXAIOU",[[1,3289," "]],[3290,3290],[3291,3291]]],[1562505279437,["GJX@GJXAIOU",[[1,3291,"的垃圾"]],[3291,3291],[3294,3294]]],[1562505281141,["GJX@GJXAIOU",[[-1,3291,"的垃圾"]],[3294,3294],[3291,3291]]],[1562505283037,["GJX@GJXAIOU",[[1,3291,"的****"]],[3291,3291],[3294,3294]]],[1562505287257,["GJX@GJXAIOU",[[1,3294,"垃圾回收机制"]],[3294,3294],[3300,3300]]],[1562505288237,["GJX@GJXAIOU",[[-1,3298,"机制"]],[3300,3300],[3298,3298]]],[1562505289577,["GJX@GJXAIOU",[[1,3298,"器"]],[3298,3298],[3299,3299]]],[1562505299063,["GJX@GJXAIOU",[[1,3301,"：用来监视用n"]],[3301,3301],[3308,3308]]],[1562505299093,["GJX@GJXAIOU",[[1,3307," "]],[3308,3308],[3309,3309]]],[1562505304449,["GJX@GJXAIOU",[[1,3309,"ew创建"]],[3309,3309],[3313,3313]]],[1562505304480,["GJX@GJXAIOU",[[1,3311," "]],[3313,3313],[3314,3314]]],[1562505314545,["GJX@GJXAIOU",[[1,3314,"的所有对象，"]],[3314,3314],[3320,3320]]],[1562505320584,["GJX@GJXAIOU",[[1,3320,"并辨别哪些"]],[3320,3320],[3325,3325]]],[1562505321263,["GJX@GJXAIOU",[[-1,3323,"哪些"]],[3325,3325],[3323,3323]]],[1562505333911,["GJX@GJXAIOU",[[1,3323,"那些不会再被引用的对西南，"]],[3323,3323],[3336,3336]]],[1562505337573,["GJX@GJXAIOU",[[-1,3332,"对西南，"]],[3336,3336],[3332,3332]]],[1562505367473,["GJX@GJXAIOU",[[1,3332,"对象，随后释放这些对象的空间，便于其他新的对象使用；"]],[3332,3332],[3358,3358]]],[1562505379821,["GJX@GJXAIOU",[[1,3360,"\n"]],[3358,3358],[3359,3359]]],[1562505447318,["GJX@GJXAIOU",[[1,3361,"\n"]],[3360,3360],[3361,3361]]],[1562505447447,["GJX@GJXAIOU",[[1,3362,"\n"]],[3361,3361],[3362,3362]]],[1562505451782,["GJX@GJXAIOU",[[1,3361,"****"]],[3361,3361],[3363,3363]]],[1562505468458,["GJX@GJXAIOU",[[1,3363,"基本成员默认值："]],[3363,3363],[3371,3371]]],[1562505470016,["GJX@GJXAIOU",[[1,3375,"\n"]],[3373,3373],[3374,3374]]],[1562505479992,["GJX@GJXAIOU",[[1,3374,"-"]],[3374,3374],[3375,3375]]],[1562505482016,["GJX@GJXAIOU",[[-1,3374,"-"]],[3375,3375],[3374,3374]]],[1562505483303,["GJX@GJXAIOU",[[1,3374,"****"]],[3374,3374],[3376,3376]]],[1562505486505,["GJX@GJXAIOU",[[1,3376,"只有当类"]],[3376,3376],[3380,3380]]],[1562505488189,["GJX@GJXAIOU",[[-1,3376,"**只有当类"]],[3380,3380],[3374,3374]]],[1562505489032,["GJX@GJXAIOU",[[-1,3375,"*"]],[3375,3375],[3374,3374]]],[1562505489158,["GJX@GJXAIOU",[[-1,3373,"\n"]],[3374,3374],[3373,3373]]],[1562505491087,["GJX@GJXAIOU",[[-1,3373,"*"]],[3374,3374],[3373,3373]]],[1562505491517,["GJX@GJXAIOU",[[1,3375,"\n"]],[3373,3373],[3374,3374]]],[1562505494385,["GJX@GJXAIOU",[[1,3374,"==只有"]],[3374,3374],[3378,3378]]],[1562505496362,["GJX@GJXAIOU",[[1,3378,"当类"]],[3378,3378],[3380,3380]]],[1562505498117,["GJX@GJXAIOU",[[-1,3379,"类"]],[3380,3380],[3379,3379]]],[1562505525251,["GJX@GJXAIOU",[[1,3379,"变量作为类的成员时候，Java才"]],[3379,3379],[3395,3395]]],[1562505525283,["GJX@GJXAIOU",[[1,3394," "]],[3395,3395],[3396,3396]]],[1562505534497,["GJX@GJXAIOU",[[1,3396,"确保给定其默认值；"]],[3396,3396],[3405,3405]]],[1562505535333,["GJX@GJXAIOU",[[-1,3404,"；"]],[3405,3405],[3404,3404]]],[1562505536137,["GJX@GJXAIOU",[[1,3404,"=="]],[3404,3404],[3406,3406]]],[1562505536846,["GJX@GJXAIOU",[[1,3408,"\n"]],[3406,3406],[3407,3407]]],[1562505547755,["GJX@GJXAIOU",[[1,3407,"对于有"]],[3407,3407],[3410,3410]]],[1562505548247,["GJX@GJXAIOU",[[-1,3409,"有"]],[3410,3410],[3409,3409]]],[1562505551896,["GJX@GJXAIOU",[[1,3409,"其他巨变"]],[3409,3409],[3413,3413]]],[1562505552414,["GJX@GJXAIOU",[[-1,3411,"巨变"]],[3413,3413],[3411,3411]]],[1562505560362,["GJX@GJXAIOU",[[1,3411,"局部变量：例如：``"]],[3411,3411],[3421,3421]]],[1562505565816,["GJX@GJXAIOU",[[1,3420,"int c;"]],[3420,3420],[3426,3426]]],[1562505567862,["GJX@GJXAIOU",[[1,3427," huo"]],[3427,3427],[3431,3431]]],[1562505568406,["GJX@GJXAIOU",[[-1,3428,"huo"]],[3431,3431],[3428,3428]]],[1562505585361,["GJX@GJXAIOU",[[1,3428,"获得的是一个随机值；"]],[3428,3428],[3438,3438]]],[1562505659895,["GJX@GJXAIOU",[[1,3360,"## 2.5"]],[3360,3360],[3366,3366]]],[1562505660693,["GJX@GJXAIOU",[[-1,3365,"5"]],[3366,3366],[3365,3365]]],[1562505668297,["GJX@GJXAIOU",[[1,3365,"4 创建新的数据类型：类"]],[3365,3365],[3377,3377]]],[1562505671749,["GJX@GJXAIOU",[[1,3457,"\n"]],[3456,3456],[3457,3457]]],[1562505671870,["GJX@GJXAIOU",[[1,3458,"\n"]],[3457,3457],[3458,3458]]],[1562505684810,["GJX@GJXAIOU",[[1,3457,"## 2.5 方法、参数、返回值"]],[3457,3457],[3473,3473]]],[1562505685173,["GJX@GJXAIOU",[[1,3475,"\n"]],[3473,3473],[3474,3474]]],[1562505685806,["GJX@GJXAIOU",[[1,3476,"\n"]],[3474,3474],[3475,3475]]],[1562505705101,["GJX@GJXAIOU",[[1,3475,"- 方法和参数列表唯一的标识出某个方法"]],[3475,3475],[3494,3494]]],[1562505705671,["GJX@GJXAIOU",[[1,3495,"- \n"]],[3494,3494],[3497,3497]]],[1562505706704,["GJX@GJXAIOU",[[-1,3495,"- "]],[3497,3497],[3495,3495]]],[1562505706869,["GJX@GJXAIOU",[[-1,3496,"\n"]],[3495,3495],[3494,3494]]],[1562505707368,["GJX@GJXAIOU",[[1,3494,"；"]],[3494,3494],[3495,3495]]],[1562505707623,["GJX@GJXAIOU",[[1,3496,"- \n"]],[3495,3495],[3498,3498]]],[1562505720095,["GJX@GJXAIOU",[[1,3498,"Java中"]],[3498,3498],[3503,3503]]],[1562505720127,["GJX@GJXAIOU",[[1,3502," "]],[3503,3503],[3504,3504]]],[1562505733830,["GJX@GJXAIOU",[[1,3504,"的方法只能作为类的一部分来创建，"]],[3504,3504],[3520,3520]]],[1562505740599,["GJX@GJXAIOU",[[1,3520,"方法（）"]],[3520,3520],[3524,3524]]],[1562505746705,["GJX@GJXAIOU",[[1,3523,"除了使用static"]],[3523,3523],[3533,3533]]],[1562505746738,["GJX@GJXAIOU",[[1,3527," "]],[3533,3533],[3534,3534]]],[1562505750207,["GJX@GJXAIOU",[[1,3534,"修饰"]],[3534,3534],[3536,3536]]],[1562505750238,["GJX@GJXAIOU",[[1,3534," "]],[3536,3536],[3537,3537]]],[1562505757551,["GJX@GJXAIOU",[[1,3538,"只能使用对象调用；"]],[3538,3538],[3547,3547]]],[1562505761718,["GJX@GJXAIOU",[[1,3548,"- \n"]],[3547,3547],[3550,3550]]],[1562505771626,["GJX@GJXAIOU",[[1,3550,"调用方法的行为称为：发动"]],[3550,3550],[3562,3562]]],[1562505772736,["GJX@GJXAIOU",[[-1,3560,"发动"]],[3562,3562],[3560,3560]]],[1562505779496,["GJX@GJXAIOU",[[1,3560,"发送消息给对象；"]],[3560,3560],[3568,3568]]],[1562505779919,["GJX@GJXAIOU",[[1,3569,"- \n"]],[3568,3568],[3571,3571]]],[1562505782935,["GJX@GJXAIOU",[[-1,3569,"- "]],[3571,3571],[3569,3569]]],[1562505783869,["GJX@GJXAIOU",[[-1,3570,"\n"]],[3569,3569],[3568,3568]]],[1562505784973,["GJX@GJXAIOU",[[1,3569,"- \n"]],[3568,3568],[3571,3571]]],[1562505785094,["GJX@GJXAIOU",[[-1,3569,"- "]],[3571,3571],[3570,3570]]],[1562505789095,["GJX@GJXAIOU",[[1,3570,"### 2.5.2"]],[3570,3570],[3579,3579]]],[1562505789656,["GJX@GJXAIOU",[[-1,3578,"2"]],[3579,3579],[3578,3578]]],[1562505792297,["GJX@GJXAIOU",[[1,3578,"1 cansh"]],[3578,3578],[3585,3585]]],[1562505793118,["GJX@GJXAIOU",[[-1,3580,"cansh"]],[3585,3585],[3580,3580]]],[1562505794515,["GJX@GJXAIOU",[[1,3580,"参数"]],[3580,3580],[3582,3582]]],[1562505796017,["GJX@GJXAIOU",[[1,3582,"列表"]],[3582,3582],[3584,3584]]],[1562505796558,["GJX@GJXAIOU",[[1,3585,"\n"]],[3584,3584],[3585,3585]]],[1562505796678,["GJX@GJXAIOU",[[1,3586,"\n"]],[3585,3585],[3586,3586]]],[1562505813417,["GJX@GJXAIOU",[[1,3585,"参数中传递的实际上也是引用"]],[3585,3585],[3598,3598]]],[1562505821009,["GJX@GJXAIOU",[[1,3596,"对象的"]],[3596,3596],[3599,3599]]],[1562505834159,["GJX@GJXAIOU",[[1,3601,"；"]],[3601,3601],[3602,3602]]],[1562505834407,["GJX@GJXAIOU",[[1,3604,"\n"]],[3602,3602],[3603,3603]]],[1562505839595,["GJX@GJXAIOU",[[1,3603,"字符创"]],[3603,3603],[3606,3606]]],[1562505841639,["GJX@GJXAIOU",[[-1,3603,"字符创"]],[3606,3606],[3603,3603]]],[1562505854830,["GJX@GJXAIOU",[[1,3603,"字符串中每个字符的尺寸都是1"]],[3603,3603],[3617,3617]]],[1562505854864,["GJX@GJXAIOU",[[1,3616," "]],[3617,3617],[3618,3618]]],[1562505856394,["GJX@GJXAIOU",[[1,3618,"6为"]],[3618,3618],[3620,3620]]],[1562505856425,["GJX@GJXAIOU",[[1,3619," "]],[3620,3620],[3621,3621]]],[1562505857485,["GJX@GJXAIOU",[[-1,3620,"为"]],[3621,3621],[3620,3620]]],[1562505861095,["GJX@GJXAIOU",[[1,3620,"位或者2"]],[3620,3620],[3624,3624]]],[1562505861127,["GJX@GJXAIOU",[[1,3623," "]],[3624,3624],[3625,3625]]],[1562505862778,["GJX@GJXAIOU",[[1,3625,"个"]],[3625,3625],[3626,3626]]],[1562505862809,["GJX@GJXAIOU",[[1,3625," "]],[3626,3626],[3627,3627]]],[1562505864313,["GJX@GJXAIOU",[[1,3627,"字节；"]],[3627,3627],[3630,3630]]],[1562505875317,["GJX@GJXAIOU",[[1,3632,"\n"]],[3630,3630],[3631,3631]]],[1562505875462,["GJX@GJXAIOU",[[1,3633,"\n"]],[3631,3631],[3632,3632]]],[1562505882776,["GJX@GJXAIOU",[[1,3632,"****"]],[3632,3632],[3634,3634]]],[1562505884722,["GJX@GJXAIOU",[[1,3634,"返回值"]],[3634,3634],[3637,3637]]],[1562505887253,["GJX@GJXAIOU",[[1,3641,"\n"]],[3639,3639],[3640,3640]]],[1562505890906,["GJX@GJXAIOU",[[1,3640,"- return作用"]],[3640,3640],[3650,3650]]],[1562505890938,["GJX@GJXAIOU",[[1,3648," "]],[3650,3650],[3651,3651]]],[1562505891880,["GJX@GJXAIOU",[[1,3651,"："]],[3651,3651],[3652,3652]]],[1562505892118,["GJX@GJXAIOU",[[1,3653,"- \n"]],[3652,3652],[3655,3655]]],[1562505893456,["GJX@GJXAIOU",[[1,3653,"  "]],[3655,3655],[3657,3657]]],[1562505914992,["GJX@GJXAIOU",[[1,3657,"结束该方法的"]],[3657,3657],[3663,3663]]],[1562505915922,["GJX@GJXAIOU",[[1,3663,"直系那个"]],[3663,3663],[3667,3667]]],[1562505916972,["GJX@GJXAIOU",[[-1,3663,"直系那个"]],[3667,3667],[3663,3663]]],[1562505918658,["GJX@GJXAIOU",[[1,3663,"执行；"]],[3663,3663],[3666,3666]]],[1562505918925,["GJX@GJXAIOU",[[1,3667,"  - \n"]],[3666,3666],[3671,3671]]],[1562505920597,["GJX@GJXAIOU",[[-1,3670," "]],[3671,3671],[3670,3670]]],[1562505923017,["GJX@GJXAIOU",[[1,3670,"   "]],[3670,3670],[3673,3673]]],[1562505923717,["GJX@GJXAIOU",[[-1,3672," "]],[3673,3673],[3672,3672]]],[1562505926315,["GJX@GJXAIOU",[[1,3672,"防护"]],[3672,3672],[3674,3674]]],[1562505927280,["GJX@GJXAIOU",[[-1,3672,"防护"]],[3674,3674],[3672,3672]]],[1562505931353,["GJX@GJXAIOU",[[1,3672,"返回函数要求"]],[3672,3672],[3678,3678]]],[1562505934357,["GJX@GJXAIOU",[[-1,3677,"求"]],[3678,3678],[3677,3677]]],[1562505939858,["GJX@GJXAIOU",[[1,3674,"该"]],[3674,3674],[3675,3675]]],[1562505953810,["GJX@GJXAIOU",[[1,3678,"返回的值到调研该方法出；"]],[3678,3678],[3690,3690]]],[1562505956109,["GJX@GJXAIOU",[[-1,3684,"研该方法出；"]],[3690,3690],[3684,3684]]],[1562505962137,["GJX@GJXAIOU",[[1,3684,"用该方法出；"]],[3684,3684],[3690,3690]]],[1562505963005,["GJX@GJXAIOU",[[-1,3688,"出；"]],[3690,3690],[3688,3688]]],[1562505964657,["GJX@GJXAIOU",[[1,3688,"处；"]],[3688,3688],[3690,3690]]],[1562505987566,["GJX@GJXAIOU",[[-1,3697,"4"]],[3698,3698],[3697,3697]]],[1562505988160,["GJX@GJXAIOU",[[1,3697,"6"]],[3697,3697],[3698,3698]]],[1562505990984,["GJX@GJXAIOU",[[-1,3839,"5"]],[3840,3840],[3839,3839]]],[1562505991529,["GJX@GJXAIOU",[[1,3839,"7"]],[3839,3839],[3840,3840]]],[1562505993968,["GJX@GJXAIOU",[[-1,3839,"7"]],[3840,3840],[3839,3839]]],[1562505997254,["GJX@GJXAIOU",[[1,3699,"\n"]],[3699,3699],[3700,3700]]],[1562506001188,["GJX@GJXAIOU",[[1,3699,"穿件"]],[3699,3699],[3701,3701]]],[1562506001807,["GJX@GJXAIOU",[[-1,3699,"穿件"]],[3701,3701],[3699,3699]]],[1562506005785,["GJX@GJXAIOU",[[1,3699,"创建一个Java"]],[3699,3699],[3707,3707]]],[1562506005818,["GJX@GJXAIOU",[[1,3703," "]],[3707,3707],[3708,3708]]],[1562506006930,["GJX@GJXAIOU",[[1,3708,"程序"]],[3708,3708],[3710,3710]]],[1562506006963,["GJX@GJXAIOU",[[1,3708," "]],[3710,3710],[3711,3711]]],[1562506020937,["GJX@GJXAIOU",[[1,3712,"### 2.6.1 "]],[3712,3712],[3722,3722]]],[1562506031937,["GJX@GJXAIOU",[[1,3861,"6"]],[3861,3861],[3862,3862]]],[1562506032202,["GJX@GJXAIOU",[[1,3863,"."]],[3862,3862],[3863,3863]]],[1562506032377,["GJX@GJXAIOU",[[1,3863,"3"]],[3863,3863],[3864,3864]]],[1562506035059,["GJX@GJXAIOU",[[1,3861,"。"]],[3861,3861],[3862,3862]]],[1562506037264,["GJX@GJXAIOU",[[-1,3861,"。"]],[3862,3862],[3861,3861]]],[1562506038176,["GJX@GJXAIOU",[[1,3861,"."]],[3861,3861],[3862,3862]]],[1562506039959,["GJX@GJXAIOU",[[-1,3865,"."]],[3866,3866],[3865,3865]]],[1562506042968,["GJX@GJXAIOU",[[1,3859,"#"]],[3859,3859],[3877,3877]]],[1562506050677,["GJX@GJXAIOU",[[-1,3878,"###  2.5.1 "]],[3878,3889],[3878,3878]]],[1562506053534,["GJX@GJXAIOU",[[1,3878,"- "]],[3878,3878],[3880,3880]]],[1562506065214,["GJX@GJXAIOU",[[1,3878,"\n"]],[3877,3877],[3878,3878]]],[1562506065894,["GJX@GJXAIOU",[[1,3879,"\n"]],[3878,3878],[3879,3879]]],[1562506070039,["GJX@GJXAIOU",[[1,3878,"*("]],[3878,3878],[3880,3880]]],[1562506070734,["GJX@GJXAIOU",[[-1,3878,"*("]],[3880,3880],[3878,3878]]],[1562506070919,["GJX@GJXAIOU",[[-1,3879,"\n"]],[3878,3878],[3877,3877]]],[1562506071814,["GJX@GJXAIOU",[[1,3879,"\n"]],[3877,3877],[3878,3878]]],[1562506072583,["GJX@GJXAIOU",[[1,3878,"****"]],[3878,3878],[3880,3880]]],[1562506073551,["GJX@GJXAIOU",[[1,3880,"zhiyo"]],[3880,3880],[3885,3885]]],[1562506074414,["GJX@GJXAIOU",[[-1,3880,"zhiyo"]],[3885,3885],[3880,3880]]],[1562506079303,["GJX@GJXAIOU",[[1,3880,"只有执行n"]],[3880,3880],[3885,3885]]],[1562506079335,["GJX@GJXAIOU",[[1,3884," "]],[3885,3885],[3886,3886]]],[1562506081939,["GJX@GJXAIOU",[[1,3886,"ew来"]],[3886,3886],[3889,3889]]],[1562506081971,["GJX@GJXAIOU",[[1,3888," "]],[3889,3889],[3890,3890]]],[1562506094616,["GJX@GJXAIOU",[[1,3890,"创建对象的时候，数据存储空间才"]],[3890,3890],[3905,3905]]],[1562506096434,["GJX@GJXAIOU",[[1,3905,"被分配"]],[3905,3905],[3908,3908]]],[1562506145846,["GJX@GJXAIOU",[[1,4797,"\n"]],[4796,4796],[4797,4797]]],[1562506146000,["GJX@GJXAIOU",[[1,4798,"\n"]],[4797,4797],[4798,4798]]],[1562506146087,["GJX@GJXAIOU",[[1,4799,"\n"]],[4798,4798],[4799,4799]]],[1562506146206,["GJX@GJXAIOU",[[1,4800,"\n"]],[4799,4799],[4800,4800]]],[1562506155568,["GJX@GJXAIOU",[[1,4107,"-"]],[4107,4107],[4108,4108]]],[1562506159026,["GJX@GJXAIOU",[[-1,4317,"### 2.5.3"],[1,4326,"-"]],[4317,4317],[4318,4318]]],[1562506171085,["GJX@GJXAIOU",[[1,4319,"**"],[1,4328,"**"]],[4319,4328],[4319,4332]]],[1562506174086,["GJX@GJXAIOU",[[1,4333,"  "]],[4334,4334],[4336,4336]]],[1562506175134,["GJX@GJXAIOU",[[1,4474,"  "]],[4476,4476],[4478,4478]]],[1562506176471,["GJX@GJXAIOU",[[1,4559,"  "]],[4561,4561],[4563,4563]]],[1562506181205,["GJX@GJXAIOU",[[1,4109,"**"],[1,4118,"**"]],[4109,4118],[4109,4122]]],[1562506187431,["GJX@GJXAIOU",[[1,3914,"**"],[1,3941,"**"]],[3914,3941],[3914,3945]]],[1562506275226,[null,[[-1,4112,"#**##"],[-1,4118,"  2.5."],[-1,4126,"2 "],[1,4137,"**"],[-1,4325,"-`**\n### 2.5."],[1,4338,"est();\n```\n- "],[-1,4340,"3   "],[1,4353,"**"],[1,4354,"  "],[-1,4482,"  "],[1,4495,"  "],[-1,4567,"  "],[1,4580,"  "]],[4112,4112],[4582,4582]]],[1562506275226,[null,[[1,4112,"#**##"],[1,4113,"  2.5."],[1,4115,"2 "],[-1,4124,"**"],[1,4314,"-`**\n### 2.5."],[-1,4314,"est();\n```\n- "],[1,4329,"3   "],[-1,4338,"**"],[-1,4341,"  "],[1,4471,"  "],[-1,4482,"  "],[1,4556,"  "],[-1,4567,"  "]],[4582,4582],[4112,4112]]],[1562506229210,["GJX@GJXAIOU",[[1,4799,"## 2.7 零碎知识点"]],[4799,4799],[4811,4811]]],[1562506229894,["GJX@GJXAIOU",[[1,4813,"\n"]],[4811,4811],[4812,4812]]],[1562506230087,["GJX@GJXAIOU",[[1,4814,"\n"]],[4812,4812],[4813,4813]]],[1562506236827,["GJX@GJXAIOU",[[1,4813,"- java。"]],[4813,4813],[4820,4820]]],[1562506238609,["GJX@GJXAIOU",[[-1,4819,"。"]],[4820,4820],[4819,4819]]],[1562506241684,["GJX@GJXAIOU",[[1,4819,".lang是"]],[4819,4819],[4825,4825]]],[1562506241716,["GJX@GJXAIOU",[[1,4824," "]],[4825,4825],[4826,4826]]],[1562506254389,["GJX@GJXAIOU",[[1,4826,"默认导入到每个Java"]],[4826,4826],[4837,4837]]],[1562506254423,["GJX@GJXAIOU",[[1,4833," "]],[4837,4837],[4838,4838]]],[1562506256844,["GJX@GJXAIOU",[[1,4838,"文件中"]],[4838,4838],[4841,4841]]],[1562506256877,["GJX@GJXAIOU",[[1,4838," "]],[4841,4841],[4842,4842]]],[1562506257833,["GJX@GJXAIOU",[[1,4842,"的"]],[4842,4842],[4843,4843]]],[1562506258695,["GJX@GJXAIOU",[[1,4844,"- \n"]],[4843,4843],[4846,4846]]],[1562506265313,["GJX@GJXAIOU",[[1,4846,"printlv"]],[4846,4846],[4853,4853]]],[1562506266023,["GJX@GJXAIOU",[[-1,4852,"v"]],[4853,4853],[4852,4852]]],[1562506266377,["GJX@GJXAIOU",[[1,4852,"b"]],[4852,4852],[4853,4853]]],[1562506266814,["GJX@GJXAIOU",[[-1,4852,"b"]],[4853,4853],[4852,4852]]],[1562506268204,["GJX@GJXAIOU",[[1,4852,"n（）"]],[4852,4852],[4855,4855]]],[1562506269431,["GJX@GJXAIOU",[[-1,4853,"（）"]],[4855,4855],[4853,4853]]],[1562506270258,["GJX@GJXAIOU",[[1,4853,"（）"]],[4853,4853],[4855,4855]]],[1562506270871,["GJX@GJXAIOU",[[-1,4853,"（）"]],[4855,4855],[4853,4853]]],[1562506272266,["GJX@GJXAIOU",[[1,4853,"();"]],[4853,4853],[4856,4856]]],[1562506335228,[null,[[-1,4112,"#**##"],[-1,4118,"  2.5."],[-1,4126,"2 "],[1,4137,"**"],[-1,4325,"-`**\n### 2.5."],[1,4338,"est();\n```\n- "],[-1,4340,"3   "],[1,4353,"**"],[1,4354,"  "],[-1,4482,"  "],[1,4495,"  "],[-1,4567,"  "],[1,4580,"  "],[1,4799,"的方式来完成的。\n\n\n"],[-1,4811,"的方"],[1,4813,"\n\n"],[-1,4858,"式来完成的。\n\n\n\n\n"]],[4112,4112],[4858,4858]]],[1562506335228,[null,[[1,4112,"#**##"],[1,4113,"  2.5."],[1,4115,"2 "],[-1,4124,"**"],[1,4314,"-`**\n### 2.5."],[-1,4314,"est();\n```\n- "],[1,4329,"3   "],[-1,4338,"**"],[-1,4341,"  "],[1,4471,"  "],[-1,4482,"  "],[1,4556,"  "],[-1,4567,"  "],[-1,4788,"的方式来完成的。\n\n\n"],[1,4811,"的方"],[-1,4811,"\n\n"],[1,4858,"式来完成的。\n\n\n\n\n"]],[4858,4858],[4112,4112]]],[1562506292440,["GJX@GJXAIOU",[[1,4856,"作用：将数据打印到控制台然后换行；"]],[4856,4856],[4873,4873]]],[1562506293287,["GJX@GJXAIOU",[[1,4874,"- \n"]],[4873,4873],[4876,4876]]],[1562506304339,["GJX@GJXAIOU",[[1,4876,"main方法"]],[4876,4876],[4882,4882]]],[1562506304372,["GJX@GJXAIOU",[[1,4880," "]],[4882,4882],[4883,4883]]],[1562506306224,["GJX@GJXAIOU",[[1,4883,"中的a"]],[4883,4883],[4886,4886]]],[1562506306259,["GJX@GJXAIOU",[[1,4885," "]],[4886,4886],[4887,4887]]],[1562506309290,["GJX@GJXAIOU",[[1,4887,"rgs参数及"]],[4887,4887],[4893,4893]]],[1562506309323,["GJX@GJXAIOU",[[1,4890," "]],[4893,4893],[4894,4894]]],[1562506309879,["GJX@GJXAIOU",[[-1,4893,"及"]],[4894,4894],[4893,4893]]],[1562506318849,["GJX@GJXAIOU",[[1,4893,"是用于存储命令行参数；"]],[4893,4893],[4904,4904]]],[1562506575233,[null,[[-1,4112,"#**##"],[-1,4118,"  2.5."],[-1,4126,"2 "],[1,4137,"**"],[-1,4325,"-`**\n### 2.5."],[1,4338,"est();\n```\n- "],[-1,4340,"3   "],[1,4353,"**"],[1,4354,"  "],[-1,4482,"  "],[1,4495,"  "],[-1,4567,"  "],[1,4580,"  "],[1,4799,"的方式来完成的。\n\n\n"],[-1,4811,"的方"],[1,4813,"\n\n"],[-1,4906,"式来完成的。\n\n\n\n\n"]],[4112,4112],[4906,4906]]],[1562506575233,[null,[[1,4112,"#**##"],[1,4113,"  2.5."],[1,4115,"2 "],[-1,4124,"**"],[1,4314,"-`**\n### 2.5."],[-1,4314,"est();\n```\n- "],[1,4329,"3   "],[-1,4338,"**"],[-1,4341,"  "],[1,4471,"  "],[-1,4482,"  "],[1,4556,"  "],[-1,4567,"  "],[-1,4788,"的方式来完成的。\n\n\n"],[1,4811,"的方"],[-1,4811,"\n\n"],[1,4906,"式来完成的。\n\n\n\n\n"]],[4906,4906],[4112,4112]]],[1562506552056,["GJX@GJXAIOU",[[1,4905,"- \n"]],[4904,4904],[4907,4907]]],[1562506552184,["GJX@GJXAIOU",[[-1,4905,"- "]],[4907,4907],[4906,4906]]],[1562506552304,["GJX@GJXAIOU",[[1,4907,"\n"]],[4906,4906],[4907,4907]]],[1562506566925,["GJX@GJXAIOU",[[1,4907,"## 2.8 注释和嵌入式文档"]],[4907,4907],[4922,4922]]],[1562506567535,["GJX@GJXAIOU",[[1,4923,"\n"]],[4922,4922],[4923,4923]]],[1562506567695,["GJX@GJXAIOU",[[1,4924,"\n"]],[4923,4923],[4924,4924]]],[1562506635231,[null,[[-1,4112,"#**##"],[-1,4118,"  2.5."],[-1,4126,"2 "],[1,4137,"**"],[-1,4325,"-`**\n### 2.5."],[1,4338,"est();\n```\n- "],[-1,4340,"3   "],[1,4353,"**"],[1,4354,"  "],[-1,4482,"  "],[1,4495,"  "],[-1,4567,"  "],[1,4580,"  "],[1,4799,"的方式来完成的。\n\n\n"],[-1,4811,"的方"],[1,4813,"\n\n"],[-1,4925,"式来完成的。\n\n\n\n\n"]],[4112,4112],[4925,4925]]],[1562506635231,[null,[[1,4112,"#**##"],[1,4113,"  2.5."],[1,4115,"2 "],[-1,4124,"**"],[1,4314,"-`**\n### 2.5."],[-1,4314,"est();\n```\n- "],[1,4329,"3   "],[-1,4338,"**"],[-1,4341,"  "],[1,4471,"  "],[-1,4482,"  "],[1,4556,"  "],[-1,4567,"  "],[-1,4788,"的方式来完成的。\n\n\n"],[1,4811,"的方"],[-1,4811,"\n\n"],[1,4925,"式来完成的。\n\n\n\n\n"]],[4925,4925],[4112,4112]]],[1562506584741,["GJX@GJXAIOU",[[-1,4924,"\n"],[1,4925,"P32"]],[4924,4924],[4927,4927]]],[1562506586626,["GJX@GJXAIOU",[[1,4927,"-36"]],[4927,4927],[4930,4930]]],[1562506588751,["GJX@GJXAIOU",[[1,4930,"\n\n"]],[4930,4930],[4931,4931]]]],null,"GJX@GJXAIOU"],["bc954928-fea3-4146-b56a-6c14d925f86d",1563157361764,"---\ntags: \n- Java\n- Java编程思想\nflag: green\nstyle: summer\ndate: '2019-7-6'\n---\n# 第二章：一切都是对象\n\n\n## 2.1 用引用操纵对象\n\n**操纵的标识符实际上是对象的一个“引用”；**\n示例：\n`String s; `创建的仅仅是一个引用，并不是对象，如果向 s 发送一条消息，就会返回运行时错误，因为此时 s 没有和任何对象相关联；\n`String s = \"hello\";` **创建一个引用的同时便进行初始化**\n\n\n## 2.2 必须由你创建所有的对象\n\n### 2.2.1 对象存储区域\n\n- 寄存器： 在处理器的内部，是最快的存储区，数量有限，不能直接控制；\n- 堆栈：位于通用 RAM（随机访问存储器）中，但是通过**堆栈指针**可以从处理器直接获得支持。堆栈指针向下移动，则分配新的内存；若向上移动，则释放内存；分配存储的方法的快速和有效性仅次于寄存器；因为 java 系统的知道存储在堆栈中对象具体的声明周期，因此灵活性不好；**对象引用存放在堆栈中。**\n- 堆：一种位于 RAM 的通用内存池，**用于存放所有的 Java 对象**，编译器不需要知道存储的数据在堆中存活多长时间，因此灵活性较大，但是堆进行存储分配和清理可能比堆栈进行存储分配需要更多的时间。存储new出来的类的**对象（包括其成员变量）和数组**;堆中分配的内存由JVM的自动垃圾回收器来管理\n- 常量存储：常量值直接存储在程序代码内部；\n- 非 RAM 存储：数据完全存活与程序之外，不受程序的约束，与程序有没有运行没有关系，存放在编译期被确定，并被保存在已编译的.class文件中的一些数据；存放字符串常量，其他基本数据类型的常量，类和接口的全限定名，字段名称和描述符，方法名称和描述符,例如：**流对象和持久化对象**\n\n### 2.2.2 特例：基本类型\n基本数据类型的变量是直接将“值”存储在堆栈中；\nJava 基本数据类型占的存储空间大小是不变的，和系统无关，**不随机器硬件架构的变化而变化**；\n\n| 基本类型    | 大小      | 最小值       | 最大值            | 包装器类      |\n|---------|---------|-----------|----------------|-----------|\n| boolean | \\-      | \\-        | \\-             | Boolean   |\n| byte    | 8 bits  | \\-128     | \\+127          | Byte      |\n| char    | 16 bits | Unicode 0 | Unicode 2^16\\-1 | Character |\n| short   | 16 bits | \\-2^15     | \\+2^15\\-1       | Short     |\n| int     | 32 bits | \\-2^32     | \\+2^32\\-1       | Integer   |\n| float   | 32 bits | IEEE754   | IEEE754        | Float     |\n| long    | 64 bits | \\-2^63     | \\+2^63\\-1       | Long      |\n| double  | 64 bits | IEEE754   | IEEE754        | Double    |\n| void    | \\-      | \\-        | \\-             | Void      |\n\n所有数值类型都有正负号 \n   boolean类型所占存储空间的大小没有明确指定（要看具体虚拟机的实现），仅定义为能够取字面值true或false。\n\n**基本类型具有包装器类，使得可以在堆中创建一个非基本对象，用来表示对应的基本类型：相当于变成了对象**\n\n**自动装箱**：自动地将一个原始数据类型转换为一个封装类型\n**自动拆箱**：自动地将一个封装类型数据转换为原始数据类型\n\n**补：高精度计算类：** 这两个包装器没有对应的数据类型 \n- BigInteger：支持任意精度的整数，可以准确表示任何大小的**整数值**；\n- BigDecimal： 支持任意精度的定点数；\n\n### 2.2.3 Java中的数组\n  Java确保数组会被初始化。而且不能在它的范围之外被访问。这种**范围检查，是以每个数组上少量的内存开销及运行时的下标检查为代价的**。\n```language\n《深入理解Java虚拟机》： \nJava 语言中对数组的访问比C/C++相对安全是因为：如有一维数组，其元素类型为 mypackage.MyClass，则虚拟机会自动生成一个直接继承于java.lang.Object的子类[Lmypackage.MyClass，创建动作由字节码指令newarray触发。这个类代表了一个元素类型为mypackage.MyClass的一维数组，数组中应有的属性和方法（用户可直接使用的只有被修饰为public的length属性和clone()方法）都实现在这个类里。Java语言中对数组的访问比C/C++相对安全就是因为这个类封装了数组元素的访问方法（准确地说，越界检查不是封装在数组元素访问的类中，而是封装在数组访问的xaload、xastore字节码中），而C/C++直接翻译为对数组指针的移动。\n```\n\n```java\n\n// NotInit.java\npackage mypackage;\nclass MyClass{\n    static{\n        System.out.println(\"MyClass Init...\");\n    }\n}\npublic class NotInit{\n    public static void main(String[] args){\n        MyClass[] a = new MyClass[3];\n    }   \n}\n/*\n* 没有输出，说明数组元素没有初始化（虚拟机自动生成了别的类）。\n*/\n\n```\n\n- 创建一个数组对象，实际就是创建一个引用数组，每个引用元素会被初始化为null。java 看到 null，认为该引用没有指向对象；\n- 基本数据类型的数组，编译器会将这种数组所占的内存全部置为零。\n- 在Java语言中，当检查到发生数组越界时会抛出java.lang.ArrayIndexOutOfBoundsException异常。\n- **使用任何引用之前，必须为其指定一个对象**\n\n## 2.3 作用域（scope）\n  1. **Java 与 C/C++ 关于作用域的区别**：如下，对于Java，非法，而对于 C/C++ 合法。（在 C/C++ 里将一个作用域的变量“隐藏”起来的做法，在Java里是不允许的。因为Java设计者认为这样做会导致程序混乱。）\n```language\n{\n    int x = 12;\n    {\n        int x = 96;     // Illegal for Java, but legal for C/C++\n    }\n}\n```\n  2. **Java对象不具备和基本类型一样的生命周期**。当用new创建一个Java对象时，它可以存活于作用域之外。如：\n```language\n{\n    String s = new String(\"a string\");\n}   // End of scope\n```\n引用 s 在作用域终点就消失了。然而，s 指向的 **String 对象仍继续占据内存空间**。\n\nJava 中的**垃圾回收器**：用来监视用 new 创建的所有对象，并辨别那些不会再被引用的对象，随后释放这些对象的空间，便于其他新的对象使用；\n\n## 2.4 创建新的数据类型：类\n**基本成员默认值：**\n==只有当变量作为类的成员时候，Java 才确保给定其默认值==\n对于其他局部变量：例如：`int c;` 获得的是一个随机值；\n\n## 2.5 方法、参数、返回值\n\n- 方法和参数列表唯一的标识出某个方法；\n- Java 中的方法只能作为类的一部分来创建，方法（除了使用 static 修饰）只能使用对象调用；\n- 调用方法的行为称为：发送消息给对象；\n\n### 2.5.1 参数列表\n参数中传递的实际上也是对象的引用；\n字符串中每个字符的尺寸都是 16 位或者 2 个字节；\n\n**返回值**\n- return 作用：\n  - 结束该方法的执行；\n  -  返回该函数要返回的值到调用该方法处；\n\n## 2.6 创建一个 Java 程序\n### 2.6.1 import 关键字\n  import关键字指示编译器导入一个包，也就是一个类库（在其他语言中，一个库不仅包含类，还可能包括方法和数据，**但是Java中所有的代码都必须写在类里**）。 \n  特定类 java.lang 会被**自动导入**到每一个Java文件中。\n\n### 2.6.3 static 关键字\n**只有执行 new 来创建对象的时候，数据存储空间才被分配**\n\n- **通过 static 关键字可以满足以下两方面情形的需要**：\n只想为某一**特定域分配单一存储空间**，而不去考虑空间要创建多少对象，甚至根本就不创建任何对象。\n希望某个方法不与包含它的类的任何对象关联在一起。也就是说，即使**没有创建对象，也能够调用这个方法**。\n  有些面向对象语言采用类数据和类方法两个术语，代表那些数据和方法只是作为整个类，而不是类的某个特定对象而存在的。例：\n\n- **static 字段**\n```java\nclass StaticTest{\n    static int i = 47;\n}\n```\n  如下创建两个对象，st1.i 和 st2.i 指向同一存储空间，共享同一个 i ，因此它们具有相同的值47。\n```language\nStaticTest st1 = new StaticTest();\nStaticTest st2 = new StaticTest();\n```\n- **static 方法**\n  - static作用于字段时，会改变数据的创建方式，但作用于方法时，差别却没有那么大。static方法的一个重要用法就是在不创建任何对象的前提下就可以调用它。这一点对定义main()方法很重要（所以main()方法是一个 satic 方法），这个方法是运行一个应用时的入口点。\n  - 和其它任何方法一样，static方法可以创建或使用与其类型相同的被命名对象，因此，static方法常常拿来做“牧羊人”的角色，负责看护与其隶属同一类型的实例群。\n  - static方法的含义：static方法就是没有this的方法。关于static方法内部是否能调用非静态方法：因为没有this，就没有对象，所以不能直接调用非静态方法，但可以传递一个对象引用到静态方法里，然后通过这个引用（和this效果相同）来调用非静态方法和访问非静态数据成员。\n有些人认为static方法不是“面向对象”的，因为它们的确具有全局函数的语义；使用static方法时，由于不存在this，所以不是通过“向对象发送消息”的方式来完成的。\n\n\n## 2.7 零碎知识点\n\n- java.lang 是默认导入到每个 Java 文件中的\n- println();作用：将数据打印到控制台然后换行；\n- main 方法中的 args 参数是用于存储命令行参数；\n\n\n## 2.8 注释和嵌入式文档\n\nP32-36\n\n",[[1563157357675,["GJX@GJXAIOU",[[-1,1979,"language"]],[1986,1986],[1979,1979]]],[1563157359598,["GJX@GJXAIOU",[[1,1979,"Java"]],[1979,1979],[1983,1983]]],[1563157363627,["GJX@GJXAIOU",[[1,1984,"\n"]],[1984,1984],[1985,1985]]],[1563157365766,["GJX@GJXAIOU",[[-1,1984,"\n"]],[1984,1984],[1983,1983]]],[1563157371908,["GJX@GJXAIOU",[[1,2095,"\n"]],[2095,2095],[2096,2096]]],[1563157381563,["GJX@GJXAIOU",[[-1,1984,"《深入理解Java虚拟机》： \nJava 语言中对数组的访问比C/C++相对安全是因为：如有一维数组，其元素类型为 mypackage.MyClass，则虚拟机会自动生成一个直接继承于java.lang.Object的子类\n[Lmypackage.MyClass，创建动作由字节码指令newarray触发。这个类代表了一个元素类型为mypackage.MyClass的一维数组，数组中应有的属性和方法（用户可直接使用的只有被修饰为public的length属性和clone()方法）都实现在这个类里。Java语言中对数组的访问比C/C++相对安全就是因为这个类封装了数组元素的访问方法（准确地说，越界检查不是封装在数组元素访问的类中，而是封装在数组访问的xaload、xastore字节码中），而C/C++直接翻译为对数组指针的移动。"]],[1984,2351],[1984,1984]]],[1563157384014,["GJX@GJXAIOU",[[1,1984,"《深入理解Java虚拟机》： \nJava 语言中对数组的访问比C/C++相对安全是因为：如有一维数组，其元素类型为 mypackage.MyClass，则虚拟机会自动生成一个直接继承于java.lang.Object的子类\n[Lmypackage.MyClass，创建动作由字节码指令newarray触发。这个类代表了一个元素类型为mypackage.MyClass的一维数组，数组中应有的属性和方法（用户可直接使用的只有被修饰为public的length属性和clone()方法）都实现在这个类里。Java语言中对数组的访问比C/C++相对安全就是因为这个类封装了数组元素的访问方法（准确地说，越界检查不是封装在数组元素访问的类中，而是封装在数组访问的xaload、xastore字节码中），而C/C++直接翻译为对数组指针的移动。"]],[1984,1984],[2351,2351]]],[1563157405817,["GJX@GJXAIOU",[[-1,1998," "]],[1984,2351],[2350,2350]]],[1563157413532,["GJX@GJXAIOU",[[1,2027,"\n"]],[2027,2027],[2028,2028]]],[1563157416949,["GJX@GJXAIOU",[[1,2060,"\n"]],[2060,2060],[2061,2061]]],[1563157423411,["GJX@GJXAIOU",[[1,2138,"\n"]],[2138,2138],[2139,2139]]],[1563157426164,["GJX@GJXAIOU",[[1,2175,"\n"]],[2175,2175],[2176,2176]]],[1563157426885,["GJX@GJXAIOU",[[1,2202,"\n"]],[2202,2202],[2203,2203]]],[1563157427643,["GJX@GJXAIOU",[[1,2238,"\n"]],[2238,2238],[2239,2239]]],[1563157429740,["GJX@GJXAIOU",[[1,2269,"\n"]],[2269,2269],[2270,2270]]],[1563157431315,["GJX@GJXAIOU",[[1,2296,"\n"]],[2296,2296],[2297,2297]]],[1563157432499,["GJX@GJXAIOU",[[1,2325,"\n"]],[2325,2325],[2326,2326]]],[1563157480975,["GJX@GJXAIOU",[[1,249,"这里的初始化可以理解为：将引用与"]],[249,249],[265,265]]],[1563157492184,["GJX@GJXAIOU",[[1,265,"某个对象相关联；"]],[265,265],[273,273]]]],null,"GJX@GJXAIOU"]]}