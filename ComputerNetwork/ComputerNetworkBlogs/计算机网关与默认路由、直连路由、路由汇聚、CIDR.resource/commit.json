{"compress":true,"commitItems":[["b7749356-d33c-430e-ba86-3a444294f4c1",1561032316067,"# 计算机网关与默认路由、直连路由、路由汇聚、CIDR",[[1561032258854,["GJX@GJXAIOU",[[1,27,"\n\n"]],[27,27],[28,28]]],[1561032259444,["GJX@GJXAIOU",[[1,29,"\n"]],[28,28],[29,29]]],[1561032263754,["GJX@GJXAIOU",[[1,29,"1、名词概念解释： \n①静态路由（Static Routing）：即由网络管理员/用户静态指定，不会随时间、流量、拓扑结构等因素变化而变化的路由路径。\n\n②动态路由（Dynamic Routing）：由路由器自动学习，受时间、网络流量、拓扑结构等因素变化而变化的路由路径。\n\n③直连路由（Connected Route）：因传输介质直连（直接连接）而产生的路由路径，直连不需要再设置路由，但设置也不会出错，如下图所示： \n \nR1和192.168.10.0、192.168.20.0两个网段直接连接，因此连线接通之后就直接存在直连路由，但是R1和192.168.30.0网段没有直接连接，则R3到192.168.30.0网段不存在直连路由。其他路由器类似，该拓扑中每个路由器都有两条直连路由并配置了两条静态路由如下： \n\n\n④路由汇聚（Routing aggregation）：多条路由路径合成一条路由路径（形态：合成的一条路由路径，其子网掩码1的位数必定不大于原有路由路径子网掩码1的位数）。对于上图，我们可以看到对于R1，无论是去192.168.30.0/24网段还是去192.168.40.0/24网段，其出口地址均为192.168.20.2。我们可以修改为ip route 192.168.0.0 16 192.168.20.2，即合并成一条，将网络位第三段的20或30整合到0便可实现路由聚合减少路由表项数目。对于R3路由器也是同理，但是R2不行。如下所示： \n \n其实也可以按下所示进行聚合，我们可以看到R3的聚合和R1的聚合不相同，R1将两条C类聚合为一个B类，而R3将两条C类聚合为一个A类，但是都达到了聚合的目的，所以都是可以的： \n\n\n⑤无类域间路由（Classless Interdomain Routing，CIDR）：严格的路由汇聚，或者说是路由汇聚的最优方式/精确汇聚（无类域间路由路由属于但不等于路由汇聚的范围）。因为上图中，其路由聚合有多种方式，而CIDR是比较严格的路由聚合，对于其聚合是跨越了A、B、C类地址分类的聚合方式，如对于R1，192.168.30.0/24、192.168.40.0/24是只能进行路由聚合而不能进行CIDR的。下图可以进行CIDR： \n\n\n对于R1，其需要设置静态路由的两个网段为192.168.2.0/24和192.168.3.0/24，其第三段为2（1 0）和3（1 1），则将原有子网掩码左移一位使得192.168.2.0/24和192.168.3.0/24变成同一个网段192.168.2.0/23，且该网段的/24子网只存在192.168.2.0/24和192.168.3.0/24两个，不存在其他，这就是CIDR。CIDR其实是“超网”的逆过程即子网划分的逆过程子网合并。而之前的R1的两条路由192.168.30.0/24和192.168.40.0/24其要合并成一个大网段，就是将30（00 01 1110）和40（00 10 1000）现有的子网网络位化为主机位，子网掩码至少需要左移6位才可以达到子网合并，这其中共有64个子网，而当前只有2个，因此不能“精确汇聚”，即不能CIDR。\n\n⑥默认路由（Default Routing）：路由器设置的不存在路由路径的所有报文均采用默认路由进行转发，对于192.168.30.0/24和192.168.40.0/24就是ip route 0.0.0.0 0.0.0.0 192.168.20.2，即最大范围的路由汇聚，包含了所有子网。 \n⑦网关（Gateway）：网关其实是对于PC/Server等非网络设备这个概念会更加明显，网关实质就是局域网的默认路由的下一跳地址。\n\n关于有多条路由设置的问题，优先级如下： \n直连路由 > 最长掩码匹配 > 路由汇聚 > CIDR > 默认路由 \n（因为有最长掩码优先匹配原则，因此默认路由必定是最后才会使用的路由方式）。\n\n2、计算机设置网关与默认路由： \n上面说网关实质就是局域网的默认路由的下一跳地址，我们可以使用route print命令在windows上查看，第一条就是网关代表的默认路由（下面有一部分192.168.10.0、192.168.20.0、192.168.80.0等的路由是VMware的路由记录）： \n\n\n如果我们在adapter属性设置中把IP设置为静态并不设置网关，但是通过自己设置路由的方式来代替在adapter中设置网关的目的。如下所示： \n \n可以ping一下百度，可以ping通： \n\n\n也就是说，有时候可能PC/Server需要不设置网关，改用设置路由的方式来达到一定的功能，如下所示： \n \n如果PC_A要和Internet与PC_B通信，那么应该将网关设为同在局域网内的R1的接口（192.168.10.1）还是R2的接口（192.168.10.2）。假设将PC_A的网关设置为192.168.10.1，则访问Internet直接由R1转发就出去了，但是如果与PC_B通信，则PC_A一看是目标地址192.168.20.10和自己不在用一个网段就会把数据包丢给R1网关，R1则根据路由表返回来丢给R2，R2再丢给PC_B。那为什么不把PC_A的网关直接设置成R2的192.168.10.2，其实访问PC_B少一次路由，但访问Internet又多一次路由。\n\n有没有什么办法让PC_A访问Internet直接由R1转发，而与PC_B通信直接发给R2而不经R1转发给R2？既然问出来这个问题，那当然是有的了，就是采用给PC_A设置网关为R1的192.168.10.1，但是也增加一条路由到PC_B：route ADD 192.168.20.0 MASK 255.255.255.0 192.168.10.2，则PC_A遇到发给PC_B（192.168.20.0网段）的数据则直接根据最长掩码匹配选择设置的路由将数据交给R2，而非192.168.20.0网段的数据就采用默认路由，即设置的网关来直接转发到Internet中去。"]],[29,29],[2544,2544]]],[1561032287311,["GJX@GJXAIOU",[[1,29,"**"],[1,38,"**"]],[29,38],[29,42]]],[1561032299755,["GJX@GJXAIOU",[[1,1679,"**"],[1,1695,"**"]],[1679,1695],[1679,1699]]],[1561032307211,["GJX@GJXAIOU",[[1,1993,"·"]],[1993,1993],[1994,1994]]],[1561032308391,["GJX@GJXAIOU",[[-1,1993,"·"]],[1994,1994],[1993,1993]]],[1561032309096,["GJX@GJXAIOU",[[1,1993,"`"]],[1993,1993],[1994,1994]]],[1561032310443,["GJX@GJXAIOU",[[1,1989,"`"]],[1989,1989],[1990,1990]]],[1561032312512,["GJX@GJXAIOU",[[1,2006,"`"]],[2006,2006],[2007,2007]]],[1561032313857,["GJX@GJXAIOU",[[1,2011,"`"]],[2011,2011],[2012,2012]]],[1561032315728,["GJX@GJXAIOU",[[1,2075,"`"]],[2075,2075],[2076,2076]]],[1561032316680,["GJX@GJXAIOU",[[1,2080,"`"]],[2080,2080],[2081,2081]]],[1561032318248,["GJX@GJXAIOU",[[1,2132,"`"]],[2132,2132],[2133,2133]]],[1561032319218,["GJX@GJXAIOU",[[1,2128,"`"]],[2128,2128],[2129,2129]]],[1561032320729,["GJX@GJXAIOU",[[1,2138,"`"]],[2138,2138],[2139,2139]]],[1561032321672,["GJX@GJXAIOU",[[1,2143,"`"]],[2143,2143],[2144,2144]]],[1561032323297,["GJX@GJXAIOU",[[1,2208,"`"]],[2208,2208],[2209,2209]]],[1561032324392,["GJX@GJXAIOU",[[1,2213,"`"]],[2213,2213],[2214,2214]]],[1561032326136,["GJX@GJXAIOU",[[1,2221,"`"]],[2221,2221],[2222,2222]]],[1561032327217,["GJX@GJXAIOU",[[1,2226,"`"]],[2226,2226],[2227,2227]]],[1561032328319,["GJX@GJXAIOU",[[1,2255,"`"]],[2255,2255],[2256,2256]]],[1561032329178,["GJX@GJXAIOU",[[1,2260,"`"]],[2260,2260],[2261,2261]]],[1561032331352,["GJX@GJXAIOU",[[1,2295,"`"]],[2295,2295],[2296,2296]]],[1561032332377,["GJX@GJXAIOU",[[1,2300,"`"]],[2300,2300],[2301,2301]]],[1561032333752,["GJX@GJXAIOU",[[1,2371,"`"]],[2371,2371],[2372,2372]]],[1561032334753,["GJX@GJXAIOU",[[1,2367,"`"]],[2367,2367],[2368,2368]]],[1561032336210,["GJX@GJXAIOU",[[1,2321,"`"]],[2321,2321],[2322,2322]]],[1561032337162,["GJX@GJXAIOU",[[1,2326,"`"]],[2326,2326],[2327,2327]]],[1561032339168,["GJX@GJXAIOU",[[1,2410,"`"]],[2410,2410],[2411,2411]]],[1561032340184,["GJX@GJXAIOU",[[1,2406,"`"]],[2406,2406],[2407,2407]]],[1561032341673,["GJX@GJXAIOU",[[1,2469,"`"]],[2469,2469],[2470,2470]]],[1561032342601,["GJX@GJXAIOU",[[1,2474,"`"]],[2474,2474],[2475,2475]]],[1561032344114,["GJX@GJXAIOU",[[1,2479,"`"]],[2479,2479],[2480,2480]]],[1561032344800,["GJX@GJXAIOU",[[1,2484,"`"]],[2484,2484],[2485,2485]]],[1561032419382,["GJX@GJXAIOU",[[-1,29,"**"],[-1,40,"**"]],[37,37],[29,38]]],[1561032422161,["GJX@GJXAIOU",[[1,29,"## "]],[29,38],[42,42]]],[1561032428993,["GJX@GJXAIOU",[[-1,1678,"**"],[-1,1696,"**"]],[1685,1685],[1678,1694]]],[1561032430173,["GJX@GJXAIOU",[[1,1678,"## "]],[1678,1694],[1697,1697]]],[1561032435689,["GJX@GJXAIOU",[[1,1678,"\n"]],[1677,1677],[1678,1678]]],[1561032435822,["GJX@GJXAIOU",[[1,1679,"\n"]],[1678,1678],[1679,1679]]],[1561032437617,["GJX@GJXAIOU",[[1,1678,"---"]],[1678,1678],[1681,1681]]],[1561032443440,["GJX@GJXAIOU",[[1,44,"1、名词概念解释： \n①"],[1,48,"（Static Routing）：即由网络管理员/用户静态指定，不会随时间、流量、拓扑结构等因素变化而变化的路由路径。\n\n②动态路由（Dynamic Routing）：由路由器自动学习，受时间、网络流量、拓扑结构等因素变化而变化的路由路径。\n\n③直连路由（Connected Route）：因传输介质直连（直接连接）而产生的路由路径，直连不需要再设置路由，但设置也不会出错，如下图所示： \n \nR1和192.168.10.0、192.168.20.0两个网段直接连接，因此连线接通之后就直接存在直连路由，但是R1和192.168.30.0网段没有直接连接，则R3到192.168.30.0网段不存在直连路由。其他路由器类似，该拓扑中每个路由器都有两条直连路由并配置了两条静态路由如下： \n\n\n④路由汇聚（Routing aggregation）：多条路由路径合成一条路由路径（形态：合成的一条路由路径，其子网掩码1的位数必定不大于原有路由路径子网掩码1的位数）。对于上图，我们可以看到对于R1，无论是去192.168.30.0/24网段还是去192.168.40.0/24网段，其出口地址均为192.168.20.2。我们可以修改为ip route 192.168.0.0 16 192.168.20.2，即合并成一条，将网络位第三段的20或30整合到0便可实现路由聚合减少路由表项数目。对于R3路由器也是同理，但是R2不行。如下所示： \n \n其实也可以按下所示进行聚合，我们可以看到R3的聚合和R1的聚合不相同，R1将两条C类聚合为一个B类，而R3将两条C类聚合为一个A类，但是都达到了聚合的目的，所以都是可以的： \n\n\n⑤无类域间路由（Classless Interdomain Routing，CIDR）：严格的路由汇聚，或者说是路由汇聚的最优方式/精确汇聚（无类域间路由路由属于但不等于路由汇聚的范围）。因为上图中，其路由聚合有多种方式，而CIDR是比较严格的路由聚合，对于其聚合是跨越了A、B、C类地址分类的聚合方式，如对于R1，192.168.30.0/24、192.168.40.0/24是只能进行路由聚合而不能进行CIDR的。下图可以进行CIDR： \n\n\n对于R1，其需要设置静态路由的两个网段为192.168.2.0/24和192.168.3.0/24，其第三段为2（1 0）和3（1 1），则将原有子网掩码左移一位使得192.168.2.0/24和192.168.3.0/24变成同一个网段192.168.2.0/23，且该网段的/24子网只存在192.168.2.0/24和192.168.3.0/24两个，不存在其他，这就是CIDR。CIDR其实是“超网”的逆过程即子网划分的逆过程子网合并。而之前的R1的两条路由192.168.30.0/24和192.168.40.0/24其要合并成一个大网段，就是将30（00 01 1110）和40（00 10 1000）现有的子网网络位化为主机位，子网掩码至少需要左移6位才可以达到子网合并，这其中共有64个子网，而当前只有2个，因此不能“精确汇聚”，即不能CIDR。\n\n⑥默认路由（Default Routing）：路由器设置的不存在路由路径的所有报文均采用默认路由进行转发，对于192.168.30.0/24和192.168.40.0/24就是ip route 0.0.0.0 0.0.0.0 192.168.20.2，即最大范围的路由汇聚，包含了所有子网。 \n⑦网关（Gateway）：网关其实是对于PC/Server等非网络设备这个概念会更加明显，网关实质就是局域网的默认路由的下一跳地址。\n\n关于有多条路由设置的问题，优先级如下： \n直连路由 > 最长掩码匹配 > 路由汇聚 > CIDR > 默认路由 \n（因为有最长掩码优先匹配原则，因此默认路由必定是最后才会使用的路由方式）。\n\n2、计算机设置网关与默认路由： \n上面说网关实质就是局域网的默认路由的下一跳地址，我们可以使用route print命令在windows上查看，第一条就是网关代表的默认路由（下面有一部分192.168.10.0、192.168.20.0、192.168.80.0等的路由是VMware的路由记录）： \n\n\n如果我们在adapter属性设置中把IP设置为静态并不设置网关，但是通过自己设置路由的方式来代替在adapter中设置网关的目的。如下所示： \n \n可以ping一下百度，可以ping通： \n\n\n也就是说，有时候可能PC/Server需要不设置网关，改用设置路由的方式来达到一定的功能，如下所示： \n \n如果PC_A要和Internet与PC_B通信，那么应该将网关设为同在局域网内的R1的接口（192.168.10.1）还是R2的接口（192.168.10.2）。假设将PC_A的网关设置为192.168.10.1，则访问Internet直接由R1转发就出去了，但是如果与PC_B通信，则PC_A一看是目标地址192.168.20.10和自己不在用一个网段就会把数据包丢给R1网关，R1则根据路由表返回来丢给R2，R2再丢给PC_B。那为什么不把PC_A的网关直接设置成R2的192.168.10.2，其实访问PC_B少一次路由，但访问Internet又多一次路由。\n\n有没有什么办法让PC_A访问Internet直接由R1转发，而与PC_B通信直接发给R2而不经R1转发给R2？既然问出来这个问题，那当然是有的了，就是采用给PC_A设置网关为R1的192.168.10.1，但是也增加一条路由到PC_B：route ADD 192.168.20.0 MASK 255.255.255.0 192.168.10.2，则PC_A遇到发给PC_B（192.168.20.0网段）的数据则直接根据最长掩码匹配选择设置的路由将数据交给R2，而非192.168.20.0网段的数据就采用默认路由，即设置的网关来直接转发到Internet中去。"]],[44,48],[2559,2559]]],[1561032446384,["GJX@GJXAIOU",[[-1,44,"1、名词概念解释： \n①"],[-1,60,"（Static Routing）：即由网络管理员/用户静态指定，不会随时间、流量、拓扑结构等因素变化而变化的路由路径。\n\n②动态路由（Dynamic Routing）：由路由器自动学习，受时间、网络流量、拓扑结构等因素变化而变化的路由路径。\n\n③直连路由（Connected Route）：因传输介质直连（直接连接）而产生的路由路径，直连不需要再设置路由，但设置也不会出错，如下图所示： \n \nR1和192.168.10.0、192.168.20.0两个网段直接连接，因此连线接通之后就直接存在直连路由，但是R1和192.168.30.0网段没有直接连接，则R3到192.168.30.0网段不存在直连路由。其他路由器类似，该拓扑中每个路由器都有两条直连路由并配置了两条静态路由如下： \n\n\n④路由汇聚（Routing aggregation）：多条路由路径合成一条路由路径（形态：合成的一条路由路径，其子网掩码1的位数必定不大于原有路由路径子网掩码1的位数）。对于上图，我们可以看到对于R1，无论是去192.168.30.0/24网段还是去192.168.40.0/24网段，其出口地址均为192.168.20.2。我们可以修改为ip route 192.168.0.0 16 192.168.20.2，即合并成一条，将网络位第三段的20或30整合到0便可实现路由聚合减少路由表项数目。对于R3路由器也是同理，但是R2不行。如下所示： \n \n其实也可以按下所示进行聚合，我们可以看到R3的聚合和R1的聚合不相同，R1将两条C类聚合为一个B类，而R3将两条C类聚合为一个A类，但是都达到了聚合的目的，所以都是可以的： \n\n\n⑤无类域间路由（Classless Interdomain Routing，CIDR）：严格的路由汇聚，或者说是路由汇聚的最优方式/精确汇聚（无类域间路由路由属于但不等于路由汇聚的范围）。因为上图中，其路由聚合有多种方式，而CIDR是比较严格的路由聚合，对于其聚合是跨越了A、B、C类地址分类的聚合方式，如对于R1，192.168.30.0/24、192.168.40.0/24是只能进行路由聚合而不能进行CIDR的。下图可以进行CIDR： \n\n\n对于R1，其需要设置静态路由的两个网段为192.168.2.0/24和192.168.3.0/24，其第三段为2（1 0）和3（1 1），则将原有子网掩码左移一位使得192.168.2.0/24和192.168.3.0/24变成同一个网段192.168.2.0/23，且该网段的/24子网只存在192.168.2.0/24和192.168.3.0/24两个，不存在其他，这就是CIDR。CIDR其实是“超网”的逆过程即子网划分的逆过程子网合并。而之前的R1的两条路由192.168.30.0/24和192.168.40.0/24其要合并成一个大网段，就是将30（00 01 1110）和40（00 10 1000）现有的子网网络位化为主机位，子网掩码至少需要左移6位才可以达到子网合并，这其中共有64个子网，而当前只有2个，因此不能“精确汇聚”，即不能CIDR。\n\n⑥默认路由（Default Routing）：路由器设置的不存在路由路径的所有报文均采用默认路由进行转发，对于192.168.30.0/24和192.168.40.0/24就是ip route 0.0.0.0 0.0.0.0 192.168.20.2，即最大范围的路由汇聚，包含了所有子网。 \n⑦网关（Gateway）：网关其实是对于PC/Server等非网络设备这个概念会更加明显，网关实质就是局域网的默认路由的下一跳地址。\n\n关于有多条路由设置的问题，优先级如下： \n直连路由 > 最长掩码匹配 > 路由汇聚 > CIDR > 默认路由 \n（因为有最长掩码优先匹配原则，因此默认路由必定是最后才会使用的路由方式）。\n\n2、计算机设置网关与默认路由： \n上面说网关实质就是局域网的默认路由的下一跳地址，我们可以使用route print命令在windows上查看，第一条就是网关代表的默认路由（下面有一部分192.168.10.0、192.168.20.0、192.168.80.0等的路由是VMware的路由记录）： \n\n\n如果我们在adapter属性设置中把IP设置为静态并不设置网关，但是通过自己设置路由的方式来代替在adapter中设置网关的目的。如下所示： \n \n可以ping一下百度，可以ping通： \n\n\n也就是说，有时候可能PC/Server需要不设置网关，改用设置路由的方式来达到一定的功能，如下所示： \n \n如果PC_A要和Internet与PC_B通信，那么应该将网关设为同在局域网内的R1的接口（192.168.10.1）还是R2的接口（192.168.10.2）。假设将PC_A的网关设置为192.168.10.1，则访问Internet直接由R1转发就出去了，但是如果与PC_B通信，则PC_A一看是目标地址192.168.20.10和自己不在用一个网段就会把数据包丢给R1网关，R1则根据路由表返回来丢给R2，R2再丢给PC_B。那为什么不把PC_A的网关直接设置成R2的192.168.10.2，其实访问PC_B少一次路由，但访问Internet又多一次路由。\n\n有没有什么办法让PC_A访问Internet直接由R1转发，而与PC_B通信直接发给R2而不经R1转发给R2？既然问出来这个问题，那当然是有的了，就是采用给PC_A设置网关为R1的192.168.10.1，但是也增加一条路由到PC_B：route ADD 192.168.20.0 MASK 255.255.255.0 192.168.10.2，则PC_A遇到发给PC_B（192.168.20.0网段）的数据则直接根据最长掩码匹配选择设置的路由将数据交给R2，而非192.168.20.0网段的数据就采用默认路由，即设置的网关来直接转发到Internet中去。"]],[2559,2559],[44,48]]],[1561032447039,["GJX@GJXAIOU",[[1,44,"**"],[1,48,"**"]],[44,48],[44,52]]],[1561032450653,["GJX@GJXAIOU",[[1,114,"**"],[1,118,"**"]],[114,118],[114,122]]],[1561032453771,["GJX@GJXAIOU",[[1,179,"**"],[1,183,"**"]],[179,183],[179,187]]],[1561032458946,["GJX@GJXAIOU",[[1,144,"**"],[1,148,"**"]],[144,148],[144,152]]],[1561032463114,["GJX@GJXAIOU",[[1,70,"**"],[1,83,"**"]],[70,83],[70,87]]],[1561032494592,["GJX@GJXAIOU",[[-1,29,"## "],[-1,44,"**"],[-1,50,"**"],[-1,70,"**"],[-1,85,"**"],[-1,118,"**"],[-1,124,"**"],[-1,148,"**"],[-1,154,"**"],[-1,187,"**"],[-1,193,"**"],[-1,1698,"---\n\n## "],[1,1706,""],[-1,2008," "],[-1,2012,"`"],[-1,2017,"`"],[-1,2029,"`"],[-1,2034,"`"],[-1,2098,"`"],[-1,2103,"`"],[-1,2151,"`"],[-1,2156,"`"],[-1,2161,"`"],[-1,2166,"`"],[-1,2231,"`"],[-1,2236,"`"],[-1,2244,"`"],[-1,2249,"`"],[-1,2278,"`"],[-1,2283,"`"],[-1,2318,"`"],[-1,2323,"`"],[-1,2344,"`"],[-1,2349,"`"],[-1,2392,"`"],[-1,2397,"`"],[-1,2429,"`"],[-1,2434,"`"],[-1,2492,"`"],[-1,2497,"`"],[-1,2502,"`"],[-1,2507,"`"]],[29,2603],[2543,2543]]],[1561032498834,["GJX@GJXAIOU",[[1,29,"## "],[1,41,"**"],[1,45,"**"],[1,63,"**"],[1,76,"**"],[1,107,"**"],[1,111,"**"],[1,133,"**"],[1,137,"**"],[1,168,"**"],[1,172,"**"],[1,1675,"---\n\n## "],[-1,1675,""],[1,1977," "],[1,1980,"`"],[1,1984,"`"],[1,1995,"`"],[1,1999,"`"],[1,2062,"`"],[1,2066,"`"],[1,2113,"`"],[1,2117,"`"],[1,2121,"`"],[1,2125,"`"],[1,2189,"`"],[1,2193,"`"],[1,2200,"`"],[1,2204,"`"],[1,2232,"`"],[1,2236,"`"],[1,2270,"`"],[1,2274,"`"],[1,2294,"`"],[1,2298,"`"],[1,2340,"`"],[1,2344,"`"],[1,2375,"`"],[1,2379,"`"],[1,2436,"`"],[1,2440,"`"],[1,2444,"`"],[1,2448,"`"]],[2543,2543],[29,2603]]],[1561032508733,["GJX@GJXAIOU",[[-1,29,"## "],[-1,44,"**"],[-1,50,"**"],[-1,70,"**"],[-1,85,"**"],[-1,118,"**"],[-1,124,"**"],[-1,148,"**"],[-1,154,"**"],[-1,187,"**"],[-1,193,"**"],[-1,1698,"---\n\n## "],[1,1706,""],[-1,2008," "],[-1,2012,"`"],[-1,2017,"`"],[-1,2029,"`"],[-1,2034,"`"],[-1,2098,"`"],[-1,2103,"`"],[-1,2151,"`"],[-1,2156,"`"],[-1,2161,"`"],[-1,2166,"`"],[-1,2231,"`"],[-1,2236,"`"],[-1,2244,"`"],[-1,2249,"`"],[-1,2278,"`"],[-1,2283,"`"],[-1,2318,"`"],[-1,2323,"`"],[-1,2344,"`"],[-1,2349,"`"],[-1,2392,"`"],[-1,2397,"`"],[-1,2429,"`"],[-1,2434,"`"],[-1,2492,"`"],[-1,2497,"`"],[-1,2502,"`"],[-1,29,"1、名词概念解释： \n①静态路由（Static Routing）：即由网络管理员/用户静态指定，不会随时间、流量、拓扑结构等因素变化而变化的路由路径。\n\n②动态路由（Dynamic Routing）：由路由器自动学习，受时间、网络流量、拓扑结构等因素变化而变化的路由路径。\n\n③直连路由（Connected Route）：因传输介质直连（直接连接）而产生的路由路径，直连不需要再设置路由，但设置也不会出错，如下图所示： \n \nR1和192.168.10.0、192.168.20.0两个网段直接连接，因此连线接通之后就直接存在直连路由，但是R1和192.168.30.0网段没有直接连接，则R3到192.168.30.0网段不存在直连路由。其他路由器类似，该拓扑中每个路由器都有两条直连路由并配置了两条静态路由如下： \n\n\n④路由汇聚（Routing aggregation）：多条路由路径合成一条路由路径（形态：合成的一条路由路径，其子网掩码1的位数必定不大于原有路由路径子网掩码1的位数）。对于上图，我们可以看到对于R1，无论是去192.168.30.0/24网段还是去192.168.40.0/24网段，其出口地址均为192.168.20.2。我们可以修改为ip route 192.168.0.0 16 192.168.20.2，即合并成一条，将网络位第三段的20或30整合到0便可实现路由聚合减少路由表项数目。对于R3路由器也是同理，但是R2不行。如下所示： \n \n其实也可以按下所示进行聚合，我们可以看到R3的聚合和R1的聚合不相同，R1将两条C类聚合为一个B类，而R3将两条C类聚合为一个A类，但是都达到了聚合的目的，所以都是可以的： \n\n\n⑤无类域间路由（Classless Interdomain Routing，CIDR）：严格的路由汇聚，或者说是路由汇聚的最优方式/精确汇聚（无类域间路由路由属于但不等于路由汇聚的范围）。因为上图中，其路由聚合有多种方式，而CIDR是比较严格的路由聚合，对于其聚合是跨越了A、B、C类地址分类的聚合方式，如对于R1，192.168.30.0/24、192.168.40.0/24是只能进行路由聚合而不能进行CIDR的。下图可以进行CIDR： \n\n\n对于R1，其需要设置静态路由的两个网段为192.168.2.0/24和192.168.3.0/24，其第三段为2（1 0）和3（1 1），则将原有子网掩码左移一位使得192.168.2.0/24和192.168.3.0/24变成同一个网段192.168.2.0/23，且该网段的/24子网只存在192.168.2.0/24和192.168.3.0/24两个，不存在其他，这就是CIDR。CIDR其实是“超网”的逆过程即子网划分的逆过程子网合并。而之前的R1的两条路由192.168.30.0/24和192.168.40.0/24其要合并成一个大网段，就是将30（00 01 1110）和40（00 10 1000）现有的子网网络位化为主机位，子网掩码至少需要左移6位才可以达到子网合并，这其中共有64个子网，而当前只有2个，因此不能“精确汇聚”，即不能CIDR。\n\n⑥默认路由（Default Routing）：路由器设置的不存在路由路径的所有报文均采用默认路由进行转发，对于192.168.30.0/24和192.168.40.0/24就是ip route 0.0.0.0 0.0.0.0 192.168.20.2，即最大范围的路由汇聚，包含了所有子网。 \n⑦网关（Gateway）：网关其实是对于PC/Server等非网络设备这个概念会更加明显，网关实质就是局域网的默认路由的下一跳地址。\n\n关于有多条路由设置的问题，优先级如下： \n直连路由 > 最长掩码匹配 > 路由汇聚 > CIDR > 默认路由 \n（因为有最长掩码优先匹配原则，因此默认路由必定是最后才会使用的路由方式）。\n\n2、计算机设置网关与默认路由： \n上面说网关实质就是局域网的默认路由的下一跳地址，我们可以使用route print命令在windows上查看，第一条就是网关代表的默认路由（下面有一部分192.168.10.0、192.168.20.0、192.168.80.0等的路由是VMware的路由记录）： \n\n\n如果我们在adapter属性设置中把IP设置为静态并不设置网关，但是通过自己设置路由的方式来代替在adapter中设置网关的目的。如下所示： \n \n可以ping一下百度，可以ping通： \n\n\n也就是说，有时候可能PC/Server需要不设置网关，改用设置路由的方式来达到一定的功能，如下所示： \n\n如果PC_A要和Internet与PC_B通信，那么应该将网关设为同在局域网内的R1的接口（192.168.10.1）还是R2的接口（192.168.10.2）。假设将PC_A的网关设置为192.168.10.1，则访问Internet直接由R1转发就出去了，但是如果与PC_B通信，则PC_A一看是目标地址192.168.20.10和自己不在用一个网段就会把数据包丢给R1网关，R1则根据路由表返回来丢给R2，R2再丢给PC_B。那为什么不把PC_A的网关直接设置成R2的192.168.10.2，其实访问PC_B少一次路由，但访问Internet又多一次路由。\n\n有没有什么办法让PC_A访问Internet直接由R1转发，而与PC_B通信直接发给R2而不经R1转发给R2？既然问出来这个问题，那当然是有的了，就是采用给PC_A设置网关为R1的192.168.10.1，但是也增加一条路由到PC_B：route ADD 192.168.20.0 MASK 255.255.255.0 192.168.10.2，则PC_A遇到发给PC_B（192.168.20.0网段）的数据则直接根据最长掩码匹配选择设置的路由将数据交给R2，而非192.168.20.0网段的数据就采用默认路由，即设置的网关来直接转发到Internet中去。`"]],[29,2603],[29,29]]],[1561032524384,["GJX@GJXAIOU",[[1,30,"\n"]],[29,29],[30,30]]],[1561032527346,["GJX@GJXAIOU",[[1,30,"1、名词概念解释： \n①静态路由（Static Routing）：即由网络管理员/用户静态指定，不会随时间、流量、拓扑结构等因素变化而变化的路由路径。\n\n②动态路由（Dynamic Routing）：由路由器自动学习，受时间、网络流量、拓扑结构等因素变化而变化的路由路径。\n\n③直连路由（Connected Route）：因传输介质直连（直接连接）而产生的路由路径，直连不需要再设置路由，但设置也不会出错，如下图所示： \n \nR1和192.168.10.0、192.168.20.0两个网段直接连接，因此连线接通之后就直接存在直连路由，但是R1和192.168.30.0网段没有直接连接，则R3到192.168.30.0网段不存在直连路由。其他路由器类似，该拓扑中每个路由器都有两条直连路由并配置了两条静态路由如下： \n\n\n④路由汇聚（Routing aggregation）：多条路由路径合成一条路由路径（形态：合成的一条路由路径，其子网掩码1的位数必定不大于原有路由路径子网掩码1的位数）。对于上图，我们可以看到对于R1，无论是去192.168.30.0/24网段还是去192.168.40.0/24网段，其出口地址均为192.168.20.2。我们可以修改为ip route 192.168.0.0 16 192.168.20.2，即合并成一条，将网络位第三段的20或30整合到0便可实现路由聚合减少路由表项数目。对于R3路由器也是同理，但是R2不行。如下所示： \n \n其实也可以按下所示进行聚合，我们可以看到R3的聚合和R1的聚合不相同，R1将两条C类聚合为一个B类，而R3将两条C类聚合为一个A类，但是都达到了聚合的目的，所以都是可以的： \n\n\n⑤无类域间路由（Classless Interdomain Routing，CIDR）：严格的路由汇聚，或者说是路由汇聚的最优方式/精确汇聚（无类域间路由路由属于但不等于路由汇聚的范围）。因为上图中，其路由聚合有多种方式，而CIDR是比较严格的路由聚合，对于其聚合是跨越了A、B、C类地址分类的聚合方式，如对于R1，192.168.30.0/24、192.168.40.0/24是只能进行路由聚合而不能进行CIDR的。下图可以进行CIDR： \n\n\n对于R1，其需要设置静态路由的两个网段为192.168.2.0/24和192.168.3.0/24，其第三段为2（1 0）和3（1 1），则将原有子网掩码左移一位使得192.168.2.0/24和192.168.3.0/24变成同一个网段192.168.2.0/23，且该网段的/24子网只存在192.168.2.0/24和192.168.3.0/24两个，不存在其他，这就是CIDR。CIDR其实是“超网”的逆过程即子网划分的逆过程子网合并。而之前的R1的两条路由192.168.30.0/24和192.168.40.0/24其要合并成一个大网段，就是将30（00 01 1110）和40（00 10 1000）现有的子网网络位化为主机位，子网掩码至少需要左移6位才可以达到子网合并，这其中共有64个子网，而当前只有2个，因此不能“精确汇聚”，即不能CIDR。\n\n⑥默认路由（Default Routing）：路由器设置的不存在路由路径的所有报文均采用默认路由进行转发，对于192.168.30.0/24和192.168.40.0/24就是ip route 0.0.0.0 0.0.0.0 192.168.20.2，即最大范围的路由汇聚，包含了所有子网。 \n⑦网关（Gateway）：网关其实是对于PC/Server等非网络设备这个概念会更加明显，网关实质就是局域网的默认路由的下一跳地址。\n\n关于有多条路由设置的问题，优先级如下： \n直连路由 > 最长掩码匹配 > 路由汇聚 > CIDR > 默认路由 \n（因为有最长掩码优先匹配原则，因此默认路由必定是最后才会使用的路由方式）。\n\n2、计算机设置网关与默认路由： \n上面说网关实质就是局域网的默认路由的下一跳地址，我们可以使用route print命令在windows上查看，第一条就是网关代表的默认路由（下面有一部分192.168.10.0、192.168.20.0、192.168.80.0等的路由是VMware的路由记录）： \n\n\n如果我们在adapter属性设置中把IP设置为静态并不设置网关，但是通过自己设置路由的方式来代替在adapter中设置网关的目的。如下所示： \n \n可以ping一下百度，可以ping通： \n\n\n也就是说，有时候可能PC/Server需要不设置网关，改用设置路由的方式来达到一定的功能，如下所示： \n\n如果PC_A要和Internet与PC_B通信，那么应该将网关设为同在局域网内的R1的接口（192.168.10.1）还是R2的接口（192.168.10.2）。假设将PC_A的网关设置为192.168.10.1，则访问Internet直接由R1转发就出去了，但是如果与PC_B通信，则PC_A一看是目标地址192.168.20.10和自己不在用一个网段就会把数据包丢给R1网关，R1则根据路由表返回来丢给R2，R2再丢给PC_B。那为什么不把PC_A的网关直接设置成R2的192.168.10.2，其实访问PC_B少一次路由，但访问Internet又多一次路由。\n\n有没有什么办法让PC_A访问Internet直接由R1转发，而与PC_B通信直接发给R2而不经R1转发给R2？既然问出来这个问题，那当然是有的了，就是采用给PC_A设置网关为R1的192.168.10.1，但是也增加一条路由到PC_B：route ADD 192.168.20.0 MASK 255.255.255.0 192.168.10.2，则PC_A遇到发给PC_B（192.168.20.0网段）的数据则直接根据最长掩码匹配选择设置的路由将数据交给R2，而非192.168.20.0网段的数据就采用默认路由，即设置的网关来直接转发到Internet中去。"]],[30,30],[2544,2544]]],[1561032533189,["GJX@GJXAIOU",[[-1,30,"1、名词概念解释： \n①静态路由（Static Routing）：即由网络管理员/用户静态指定，不会随时间、流量、拓扑结构等因素变化而变化的路由路径。\n\n②动态路由（Dynamic Routing）：由路由器自动学习，受时间、网络流量、拓扑结构等因素变化而变化的路由路径。\n\n③直连路由（Connected Route）：因传输介质直连（直接连接）而产生的路由路径，直连不需要再设置路由，但设置也不会出错，如下图所示： \n \nR1和192.168.10.0、192.168.20.0两个网段直接连接，因此连线接通之后就直接存在直连路由，但是R1和192.168.30.0网段没有直接连接，则R3到192.168.30.0网段不存在直连路由。其他路由器类似，该拓扑中每个路由器都有两条直连路由并配置了两条静态路由如下： \n\n\n④路由汇聚（Routing aggregation）：多条路由路径合成一条路由路径（形态：合成的一条路由路径，其子网掩码1的位数必定不大于原有路由路径子网掩码1的位数）。对于上图，我们可以看到对于R1，无论是去192.168.30.0/24网段还是去192.168.40.0/24网段，其出口地址均为192.168.20.2。我们可以修改为ip route 192.168.0.0 16 192.168.20.2，即合并成一条，将网络位第三段的20或30整合到0便可实现路由聚合减少路由表项数目。对于R3路由器也是同理，但是R2不行。如下所示： \n \n其实也可以按下所示进行聚合，我们可以看到R3的聚合和R1的聚合不相同，R1将两条C类聚合为一个B类，而R3将两条C类聚合为一个A类，但是都达到了聚合的目的，所以都是可以的： \n\n\n⑤无类域间路由（Classless Interdomain Routing，CIDR）：严格的路由汇聚，或者说是路由汇聚的最优方式/精确汇聚（无类域间路由路由属于但不等于路由汇聚的范围）。因为上图中，其路由聚合有多种方式，而CIDR是比较严格的路由聚合，对于其聚合是跨越了A、B、C类地址分类的聚合方式，如对于R1，192.168.30.0/24、192.168.40.0/24是只能进行路由聚合而不能进行CIDR的。下图可以进行CIDR： \n\n\n对于R1，其需要设置静态路由的两个网段为192.168.2.0/24和192.168.3.0/24，其第三段为2（1 0）和3（1 1），则将原有子网掩码左移一位使得192.168.2.0/24和192.168.3.0/24变成同一个网段192.168.2.0/23，且该网段的/24子网只存在192.168.2.0/24和192.168.3.0/24两个，不存在其他，这就是CIDR。CIDR其实是“超网”的逆过程即子网划分的逆过程子网合并。而之前的R1的两条路由192.168.30.0/24和192.168.40.0/24其要合并成一个大网段，就是将30（00 01 1110）和40（00 10 1000）现有的子网网络位化为主机位，子网掩码至少需要左移6位才可以达到子网合并，这其中共有64个子网，而当前只有2个，因此不能“精确汇聚”，即不能CIDR。\n\n⑥默认路由（Default Routing）：路由器设置的不存在路由路径的所有报文均采用默认路由进行转发，对于192.168.30.0/24和192.168.40.0/24就是ip route 0.0.0.0 0.0.0.0 192.168.20.2，即最大范围的路由汇聚，包含了所有子网。 \n⑦网关（Gateway）：网关其实是对于PC/Server等非网络设备这个概念会更加明显，网关实质就是局域网的默认路由的下一跳地址。\n\n关于有多条路由设置的问题，优先级如下： \n直连路由 > 最长掩码匹配 > 路由汇聚 > CIDR > 默认路由 \n（因为有最长掩码优先匹配原则，因此默认路由必定是最后才会使用的路由方式）。\n\n2、计算机设置网关与默认路由： \n上面说网关实质就是局域网的默认路由的下一跳地址，我们可以使用route print命令在windows上查看，第一条就是网关代表的默认路由（下面有一部分192.168.10.0、192.168.20.0、192.168.80.0等的路由是VMware的路由记录）： \n\n\n如果我们在adapter属性设置中把IP设置为静态并不设置网关，但是通过自己设置路由的方式来代替在adapter中设置网关的目的。如下所示： \n \n可以ping一下百度，可以ping通： \n\n\n也就是说，有时候可能PC/Server需要不设置网关，改用设置路由的方式来达到一定的功能，如下所示： \n\n如果PC_A要和Internet与PC_B通信，那么应该将网关设为同在局域网内的R1的接口（192.168.10.1）还是R2的接口（192.168.10.2）。假设将PC_A的网关设置为192.168.10.1，则访问Internet直接由R1转发就出去了，但是如果与PC_B通信，则PC_A一看是目标地址192.168.20.10和自己不在用一个网段就会把数据包丢给R1网关，R1则根据路由表返回来丢给R2，R2再丢给PC_B。那为什么不把PC_A的网关直接设置成R2的192.168.10.2，其实访问PC_B少一次路由，但访问Internet又多一次路由。\n\n有没有什么办法让PC_A访问Internet直接由R1转发，而与PC_B通信直接发给R2而不经R1转发给R2？既然问出来这个问题，那当然是有的了，就是采用给PC_A设置网关为R1的192.168.10.1，但是也增加一条路由到PC_B：route ADD 192.168.20.0 MASK 255.255.255.0 192.168.10.2，则PC_A遇到发给PC_B（192.168.20.0网段）的数据则直接根据最长掩码匹配选择设置的路由将数据交给R2，而非192.168.20.0网段的数据就采用默认路由，即设置的网关来直接转发到Internet中去。\n"]],[29,2544],[29,29]]],[1561032616102,[null,[[-1,29,"1、名词概念解释： \n①静态路由（Static Routing）：即由网络管理员/用户静态指定，不会随时间、流量、拓扑结构等因素变化而变化的路由路径。\n\n②动态路由（Dynamic Routing）：由路由器自动学习，受时间、网络流量、拓扑结构等因素变化而变化的路由路径。\n\n③直连路由（Connected Route）：因传输介质直连（直接连接）而产生的路由路径，直连不需要再设置路由，但设置也不会出错，如下图所示： \n \nR1和192.168.10.0、192.168.20.0两个网段直接连接，因此连线接通之后就直接存在直连路由，但是R1和192.168.30.0网段没有直接连接，则R3到192.168.30.0网段不存在直连路由。其他路由器类似，该拓扑中每个路由器都有两条直连路由并配置了两条静态路由如下： \n\n\n④路由汇聚（Routing aggregation）：多条路由路径合成一条路由路径（形态：合成的一条路由路径，其子网掩码1的位数必定不大于原有路由路径子网掩码1的位数）。对于上图，我们可以看到对于R1，无论是去192.168.30.0/24网段还是去192.168.40.0/24网段，其出口地址均为192.168.20.2。我们可以修改为ip route 192.168.0.0 16 192.168.20.2，即合并成一条，将网络位第三段的20或30整合到0便可实现路由聚合减少路由表项数目。对于R3路由器也是同理，但是R2不行。如下所示： \n \n其实也可以按下所示进行聚合，我们可以看到R3的聚合和R1的聚合不相同，R1将两条C类聚合为一个B类，而R3将两条C类聚合为一个A类，但是都达到了聚合的目的，所以都是可以的： \n\n\n⑤无类域间路由（Classless Interdomain Routing，CIDR）：严格的路由汇聚，或者说是路由汇聚的最优方式/精确汇聚（无类域间路由路由属于但不等于路由汇聚的范围）。因为上图中，其路由聚合有多种方式，而CIDR是比较严格的路由聚合，对于其聚合是跨越了A、B、C类地址分类的聚合方式，如对于R1，192.168.30.0/24、192.168.40.0/24是只能进行路由聚合而不能进行CIDR的。下图可以进行CIDR： \n\n\n对于R1，其需要设置静态路由的两个网段为192.168.2.0/24和192.168.3.0/24，其第三段为2（1 0）和3（1 1），则将原有子网掩码左移一位使得192.168.2.0/24和192.168.3.0/24变成同一个网段192.168.2.0/23，且该网段的/24子网只存在192.168.2.0/24和192.168.3.0/24两个，不存在其他，这就是CIDR。CIDR其实是“超网”的逆过程即子网划分的逆过程子网合并。而之前的R1的两条路由192.168.30.0/24和192.168.40.0/24其要合并成一个大网段，就是将30（00 01 1110）和40（00 10 1000）现有的子网网络位化为主机位，子网掩码至少需要左移6位才可以达到子网合并，这其中共有64个子网，而当前只有2个，因此不能“精确汇聚”，即不能CIDR。\n\n⑥默认路由（Default Routing）：路由器设置的不存在路由路径的所有报文均采用默认路由进行转发，对于192.168.30.0/24和192.168.40.0/24就是ip route 0.0.0.0 0.0.0.0 192.168.20.2，即最大范围的路由汇聚，包含了所有子网。 \n⑦网关（Gateway）：网关其实是对于PC/Server等非网络设备这个概念会更加明显，网关实质就是局域网的默认路由的下一跳地址。\n\n关于有多条路由设置的问题，优先级如下： \n直连路由 > 最长掩码匹配 > 路由汇聚 > CIDR > 默认路由 \n（因为有最长掩码优先匹配原则，因此默认路由必定是最后才会使用的路由方式）。\n\n2、计算机设置网关与默认路由： \n上面说网关实质就是局域网的默认路由的下一跳地址，我们可以使用route print命令在windows上查看，第一条就是网关代表的默认路由（下面有一部分192.168.10.0、192.168.20.0、192.168.80.0等的路由是VMware的路由记录）： \n\n\n如果我们在adapter属性设置中把IP设置为静态并不设置网关，但是通过自己设置路由的方式来代替在adapter中设置网关的目的。如下所示： \n \n可以ping一下百度，可以ping通： \n\n\n也就是说，有时候可能PC/Server需要不设置网关，改用设置路由的方式来达到一定的功能，如下所示： \n\n如果PC_A要和Internet与PC_B通信，那么应该将网关设为同在局域网内的R1的接口（192.168.10.1）还是R2的接口（192.168.10.2）。假设将PC_A的网关设置为192.168.10.1，则访问Internet直接由R1转发就出去了，但是如果与PC_B通信，则PC_A一看是目标地址192.168.20.10和自己不在用一个网段就会把数据包丢给R1网关，R1则根据路由表返回来丢给R2，R2再丢给PC_B。那为什么不把PC_A的网关直接设置成R2的192.168.10.2，其实访问PC_B少一次路由，但访问Internet又多一次路由。\n\n有没有什么办法让PC_A访问Internet直接由R1转发，而与PC_B通信直接发给R2而不经R1转发给R2？既然问出来这个问题，那当然是有的了，就是采用给PC_A设置网关为R1的192.168.10.1，但是也增加一条路由到PC_B：route ADD 192.168.20.0 MASK 255.255.255.0 192.168.10.2，则PC_A遇到发给由将数据交给R2，而非192.168.20.0网段的数据就采用默认路由，即设置的网关来直接转发到Internet中去。"]],[29,29],[29,29]]],[1561032616102,[null,[[1,29,"1、名词概念解释： \n①静态路由（Static Routing）：即由网络管理员/用户静态指定，不会随时间、流量、拓扑结构等因素变化而变化的路由路径。\n\n②动态路由（Dynamic Routing）：由路由器自动学习，受时间、网络流量、拓扑结构等因素变化而变化的路由路径。\n\n③直连路由（Connected Route）：因传输介质直连（直接连接）而产生的路由路径，直连不需要再设置路由，但设置也不会出错，如下图所示： \n \nR1和192.168.10.0、192.168.20.0两个网段直接连接，因此连线接通之后就直接存在直连路由，但是R1和192.168.30.0网段没有直接连接，则R3到192.168.30.0网段不存在直连路由。其他路由器类似，该拓扑中每个路由器都有两条直连路由并配置了两条静态路由如下： \n\n\n④路由汇聚（Routing aggregation）：多条路由路径合成一条路由路径（形态：合成的一条路由路径，其子网掩码1的位数必定不大于原有路由路径子网掩码1的位数）。对于上图，我们可以看到对于R1，无论是去192.168.30.0/24网段还是去192.168.40.0/24网段，其出口地址均为192.168.20.2。我们可以修改为ip route 192.168.0.0 16 192.168.20.2，即合并成一条，将网络位第三段的20或30整合到0便可实现路由聚合减少路由表项数目。对于R3路由器也是同理，但是R2不行。如下所示： \n \n其实也可以按下所示进行聚合，我们可以看到R3的聚合和R1的聚合不相同，R1将两条C类聚合为一个B类，而R3将两条C类聚合为一个A类，但是都达到了聚合的目的，所以都是可以的： \n\n\n⑤无类域间路由（Classless Interdomain Routing，CIDR）：严格的路由汇聚，或者说是路由汇聚的最优方式/精确汇聚（无类域间路由路由属于但不等于路由汇聚的范围）。因为上图中，其路由聚合有多种方式，而CIDR是比较严格的路由聚合，对于其聚合是跨越了A、B、C类地址分类的聚合方式，如对于R1，192.168.30.0/24、192.168.40.0/24是只能进行路由聚合而不能进行CIDR的。下图可以进行CIDR： \n\n\n对于R1，其需要设置静态路由的两个网段为192.168.2.0/24和192.168.3.0/24，其第三段为2（1 0）和3（1 1），则将原有子网掩码左移一位使得192.168.2.0/24和192.168.3.0/24变成同一个网段192.168.2.0/23，且该网段的/24子网只存在192.168.2.0/24和192.168.3.0/24两个，不存在其他，这就是CIDR。CIDR其实是“超网”的逆过程即子网划分的逆过程子网合并。而之前的R1的两条路由192.168.30.0/24和192.168.40.0/24其要合并成一个大网段，就是将30（00 01 1110）和40（00 10 1000）现有的子网网络位化为主机位，子网掩码至少需要左移6位才可以达到子网合并，这其中共有64个子网，而当前只有2个，因此不能“精确汇聚”，即不能CIDR。\n\n⑥默认路由（Default Routing）：路由器设置的不存在路由路径的所有报文均采用默认路由进行转发，对于192.168.30.0/24和192.168.40.0/24就是ip route 0.0.0.0 0.0.0.0 192.168.20.2，即最大范围的路由汇聚，包含了所有子网。 \n⑦网关（Gateway）：网关其实是对于PC/Server等非网络设备这个概念会更加明显，网关实质就是局域网的默认路由的下一跳地址。\n\n关于有多条路由设置的问题，优先级如下： \n直连路由 > 最长掩码匹配 > 路由汇聚 > CIDR > 默认路由 \n（因为有最长掩码优先匹配原则，因此默认路由必定是最后才会使用的路由方式）。\n\n2、计算机设置网关与默认路由： \n上面说网关实质就是局域网的默认路由的下一跳地址，我们可以使用route print命令在windows上查看，第一条就是网关代表的默认路由（下面有一部分192.168.10.0、192.168.20.0、192.168.80.0等的路由是VMware的路由记录）： \n\n\n如果我们在adapter属性设置中把IP设置为静态并不设置网关，但是通过自己设置路由的方式来代替在adapter中设置网关的目的。如下所示： \n \n可以ping一下百度，可以ping通： \n\n\n也就是说，有时候可能PC/Server需要不设置网关，改用设置路由的方式来达到一定的功能，如下所示： \n\n如果PC_A要和Internet与PC_B通信，那么应该将网关设为同在局域网内的R1的接口（192.168.10.1）还是R2的接口（192.168.10.2）。假设将PC_A的网关设置为192.168.10.1，则访问Internet直接由R1转发就出去了，但是如果与PC_B通信，则PC_A一看是目标地址192.168.20.10和自己不在用一个网段就会把数据包丢给R1网关，R1则根据路由表返回来丢给R2，R2再丢给PC_B。那为什么不把PC_A的网关直接设置成R2的192.168.10.2，其实访问PC_B少一次路由，但访问Internet又多一次路由。\n\n有没有什么办法让PC_A访问Internet直接由R1转发，而与PC_B通信直接发给R2而不经R1转发给R2？既然问出来这个问题，那当然是有的了，就是采用给PC_A设置网关为R1的192.168.10.1，但是也增加一条路由到PC_B：route ADD 192.168.20.0 MASK 255.255.255.0 192.168.10.2，则PC_A遇到发给由将数据交给R2，而非192.168.20.0网段的数据就采用默认路由，即设置的网关来直接转发到Internet中去。"]],[29,29],[29,29]]],[1561032582826,["GJX@GJXAIOU",[[1,29,"1、名词概念解释： \n①静态路由（Static Routing）：即由网络管理员/用户静态指定，不会随时间、流量、拓扑结构等因素变化而变化的路由路径。\n\n②动态路由（Dynamic Routing）：由路由器自动学习，受时间、网络流量、拓扑结构等因素变化而变化的路由路径。\n\n③直连路由（Connected Route）：因传输介质直连（直接连接）而产生的路由路径，直连不需要再设置路由，但设置也不会出错，如下图所示： \n \nR1和192.168.10.0、192.168.20.0两个网段直接连接，因此连线接通之后就直接存在直连路由，但是R1和192.168.30.0网段没有直接连接，则R3到192.168.30.0网段不存在直连路由。其他路由器类似，该拓扑中每个路由器都有两条直连路由并配置了两条静态路由如下： \n\n\n④路由汇聚（Routing aggregation）：多条路由路径合成一条路由路径（形态：合成的一条路由路径，其子网掩码1的位数必定不大于原有路由路径子网掩码1的位数）。对于上图，我们可以看到对于R1，无论是去192.168.30.0/24网段还是去192.168.40.0/24网段，其出口地址均为192.168.20.2。我们可以修改为ip route 192.168.0.0 16 192.168.20.2，即合并成一条，将网络位第三段的20或30整合到0便可实现路由聚合减少路由表项数目。对于R3路由器也是同理，但是R2不行。如下所示： \n \n其实也可以按下所示进行聚合，我们可以看到R3的聚合和R1的聚合不相同，R1将两条C类聚合为一个B类，而R3将两条C类聚合为一个A类，但是都达到了聚合的目的，所以都是可以的： \n\n\n⑤无类域间路由（Classless Interdomain Routing，CIDR）：严格的路由汇聚，或者说是路由汇聚的最优方式/精确汇聚（无类域间路由路由属于但不等于路由汇聚的范围）。因为上图中，其路由聚合有多种方式，而CIDR是比较严格的路由聚合，对于其聚合是跨越了A、B、C类地址分类的聚合方式，如对于R1，192.168.30.0/24、192.168.40.0/24是只能进行路由聚合而不能进行CIDR的。下图可以进行CIDR： \n\n\n对于R1，其需要设置静态路由的两个网段为192.168.2.0/24和192.168.3.0/24，其第三段为2（1 0）和3（1 1），则将原有子网掩码左移一位使得192.168.2.0/24和192.168.3.0/24变成同一个网段192.168.2.0/23，且该网段的/24子网只存在192.168.2.0/24和192.168.3.0/24两个，不存在其他，这就是CIDR。CIDR其实是“超网”的逆过程即子网划分的逆过程子网合并。而之前的R1的两条路由192.168.30.0/24和192.168.40.0/24其要合并成一个大网段，就是将30（00 01 1110）和40（00 10 1000）现有的子网网络位化为主机位，子网掩码至少需要左移6位才可以达到子网合并，这其中共有64个子网，而当前只有2个，因此不能“精确汇聚”，即不能CIDR。\n\n⑥默认路由（Default Routing）：路由器设置的不存在路由路径的所有报文均采用默认路由进行转发，对于192.168.30.0/24和192.168.40.0/24就是ip route 0.0.0.0 0.0.0.0 192.168.20.2，即最大范围的路由汇聚，包含了所有子网。 \n⑦网关（Gateway）：网关其实是对于PC/Server等非网络设备这个概念会更加明显，网关实质就是局域网的默认路由的下一跳地址。\n\n关于有多条路由设置的问题，优先级如下： \n直连路由 > 最长掩码匹配 > 路由汇聚 > CIDR > 默认路由 \n（因为有最长掩码优先匹配原则，因此默认路由必定是最后才会使用的路由方式）。\n\n2、计算机设置网关与默认路由： \n上面说网关实质就是局域网的默认路由的下一跳地址，我们可以使用route print命令在windows上查看，第一条就是网关代表的默认路由（下面有一部分192.168.10.0、192.168.20.0、192.168.80.0等的路由是VMware的路由记录）： \n\n\n如果我们在adapter属性设置中把IP设置为静态并不设置网关，但是通过自己设置路由的方式来代替在adapter中设置网关的目的。如下所示： \n \n可以ping一下百度，可以ping通： \n\n\n也就是说，有时候可能PC/Server需要不设置网关，改用设置路由的方式来达到一定的功能，如下所示： \n\n如果PC_A要和Internet与PC_B通信，那么应该将网关设为同在局域网内的R1的接口（192.168.10.1）还是R2的接口（192.168.10.2）。假设将PC_A的网关设置为192.168.10.1，则访问Internet直接由R1转发就出去了，但是如果与PC_B通信，则PC_A一看是目标地址192.168.20.10和自己不在用一个网段就会把数据包丢给R1网关，R1则根据路由表返回来丢给R2，R2再丢给PC_B。那为什么不把PC_A的网关直接设置成R2的192.168.10.2，其实访问PC_B少一次路由，但访问Internet又多一次路由。\n\n有没有什么办法让PC_A访问Internet直接由R1转发，而与PC_B通信直接发给R2而不经R1转发给R2？既然问出来这个问题，那当然是有的了，就是采用给PC_A设置网关为R1的192.168.10.1，但是也增加一条路由到PC_B：route ADD 192.168.20.0 MASK 255.255.255.0 192.168.10.2，则PC_A遇到发给PC_B（192.168.20.0网段）的数据则直接根据最长掩码匹配选择设置的路由将数据交给R2，而非192.168.20.0网段的数据就采用默认路由，即设置的网关来直接转发到Internet中去。[link](https://img-blog.csdn.net/20180819230612815?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0Fwb2xsb25fa3Jq/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70)"]],[29,29],[2713,2713]]],[1561032584517,["GJX@GJXAIOU",[[1,240,"\n"]],[239,239],[240,240]]],[1561032584702,["GJX@GJXAIOU",[[1,241,"\n"]],[240,240],[241,241]]],[1561032587070,["GJX@GJXAIOU",[[1,241,"[link](https://img-blog.csdn.net/20180819230612815?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0Fwb2xsb25fa3Jq/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70)"]],[241,241],[411,411]]],[1561032601080,["GJX@GJXAIOU",[[1,241,"!"]],[241,241],[242,242]]],[1561032676113,[null,[[-1,2886,"1、名词概念解释： \n①静态路由（Static Routing）：即由网络管理员/用户静态指定，不会随时间、流量、拓扑结构等因素变化而变化的路由路径。\n\n②动态路由（Dynamic Routing）：由路由器自动学习，受时间、网络流量、拓扑结构等因素变化而变化的路由路径。\n\n③直连路由（Connected Route）：因传输介质直连（直接连接）而产生的路由路径，直连不需要再设置路由，但设置也不会出错，如下图所示： \n \nR1和192.168.10.0、192.168.20.0两个网段直接连接，因此连线接通之后就直接存在直连路由，但是R1和192.168.30.0网段没有直接连接，则R3到192.168.30.0网段不存在直连路由。其他路由器类似，该拓扑中每个路由器都有两条直连路由并配置了两条静态路由如下： \n\n\n④路由汇聚（Routing aggregation）：多条路由路径合成一条路由路径（形态：合成的一条路由路径，其子网掩码1的位数必定不大于原有路由路径子网掩码1的位数）。对于上图，我们可以看到对于R1，无论是去192.168.30.0/24网段还是去192.168.40.0/24网段，其出口地址均为192.168.20.2。我们可以修改为ip route 192.168.0.0 16 192.168.20.2，即合并成一条，将网络位第三段的20或30整合到0便可实现路由聚合减少路由表项数目。对于R3路由器也是同理，但是R2不行。如下所示： \n \n其实也可以按下所示进行聚合，我们可以看到R3的聚合和R1的聚合不相同，R1将两条C类聚合为一个B类，而R3将两条C类聚合为一个A类，但是都达到了聚合的目的，所以都是可以的： \n\n\n⑤无类域间路由（Classless Interdomain Routing，CIDR）：严格的路由汇聚，或者说是路由汇聚的最优方式/精确汇聚（无类域间路由路由属于但不等于路由汇聚的范围）。因为上图中，其路由聚合有多种方式，而CIDR是比较严格的路由聚合，对于其聚合是跨越了A、B、C类地址分类的聚合方式，如对于R1，192.168.30.0/24、192.168.40.0/24是只能进行路由聚合而不能进行CIDR的。下图可以进行CIDR： \n\n\n对于R1，其需要设置静态路由的两个网段为192.168.2.0/24和192.168.3.0/24，其第三段为2（1 0）和3（1 1），则将原有子网掩码左移一位使得192.168.2.0/24和192.168.3.0/24变成同一个网段192.168.2.0/23，且该网段的/24子网只存在192.168.2.0/24和192.168.3.0/24两个，不存在其他，这就是CIDR。CIDR其实是“超网”的逆过程即子网划分的逆过程子网合并。而之前的R1的两条路由192.168.30.0/24和192.168.40.0/24其要合并成一个大网段，就是将30（00 01 1110）和40（00 10 1000）现有的子网网络位化为主机位，子网掩码至少需要左移6位才可以达到子网合并，这其中共有64个子网，而当前只有2个，因此不能“精确汇聚”，即不能CIDR。\n\n⑥默认路由（Default Routing）：路由器设置的不存在路由路径的所有报文均采用默认路由进行转发，对于192.168.30.0/24和192.168.40.0/24就是ip route 0.0.0.0 0.0.0.0 192.168.20.2，即最大范围的路由汇聚，包含了所有子网。 \n⑦网关（Gateway）：网关其实是对于PC/Server等非网络设备这个概念会更加明显，网关实质就是局域网的默认路由的下一跳地址。\n\n关于有多条路由设置的问题，优先级如下： \n直连路由 > 最长掩码匹配 > 路由汇聚 > CIDR > 默认路由 \n（因为有最长掩码优先匹配原则，因此默认路由必定是最后才会使用的路由方式）。\n\n2、计算机设置网关与默认路由： \n上面说网关实质就是局域网的默认路由的下一跳地址，我们可以使用route print命令在windows上查看，第一条就是网关代表的默认路由（下面有一部分192.168.10.0、192.168.20.0、192.168.80.0等的路由是VMware的路由记录）： \n\n\n如果我们在adapter属性设置中把IP设置为静态并不设置网关，但是通过自己设置路由的方式来代替在adapter中设置网关的目的。如下所示： \n \n可以ping一下百度，可以ping通： \n\n\n也就是说，有时候可能PC/Server需要不设置网关，改用设置路由的方式来达到一定的功能，如下所示： \n\n如果PC_A要和Internet与PC_B通信，那么应该将网关设为同在局域网内的R1的接口（192.168.10.1）还是R2的接口（192.168.10.2）。假设将PC_A的网关设置为192.168.10.1，则访问Internet直接由R1转发就出去了，但是如果与PC_B通信，则PC_A一看是目标地址192.168.20.10和自己不在用一个网段就会把数据包丢给R1网关，R1则根据路由表返回来丢给R2，R2再丢给PC_B。那为什么不把PC_A的网关直接设置成R2的192.168.10.2，其实访问PC_B少一次路由，但访问Internet又多一次路由。\n\n有没有什么办法让PC_A访问Internet直接由R1转发，而与PC_B通信直接发给R2而不经R1转发给R2？既然问出来这个问题，那当然是有的了，就是采用给PC_A设置网关为R1的192.168.10.1，但是也增加一条路由到PC_B：route ADD 192.168.20.0 MASK 255.255.255.0 192.168.10.2，则PC_A遇到发给由将数据交给R2，而非192.168.20.0网段的数据就采用默认路由，即设置的网关来直接转发到Internet中去。"]],[2886,2886],[2886,2886]]],[1561032676113,[null,[[1,2886,"1、名词概念解释： \n①静态路由（Static Routing）：即由网络管理员/用户静态指定，不会随时间、流量、拓扑结构等因素变化而变化的路由路径。\n\n②动态路由（Dynamic Routing）：由路由器自动学习，受时间、网络流量、拓扑结构等因素变化而变化的路由路径。\n\n③直连路由（Connected Route）：因传输介质直连（直接连接）而产生的路由路径，直连不需要再设置路由，但设置也不会出错，如下图所示： \n \nR1和192.168.10.0、192.168.20.0两个网段直接连接，因此连线接通之后就直接存在直连路由，但是R1和192.168.30.0网段没有直接连接，则R3到192.168.30.0网段不存在直连路由。其他路由器类似，该拓扑中每个路由器都有两条直连路由并配置了两条静态路由如下： \n\n\n④路由汇聚（Routing aggregation）：多条路由路径合成一条路由路径（形态：合成的一条路由路径，其子网掩码1的位数必定不大于原有路由路径子网掩码1的位数）。对于上图，我们可以看到对于R1，无论是去192.168.30.0/24网段还是去192.168.40.0/24网段，其出口地址均为192.168.20.2。我们可以修改为ip route 192.168.0.0 16 192.168.20.2，即合并成一条，将网络位第三段的20或30整合到0便可实现路由聚合减少路由表项数目。对于R3路由器也是同理，但是R2不行。如下所示： \n \n其实也可以按下所示进行聚合，我们可以看到R3的聚合和R1的聚合不相同，R1将两条C类聚合为一个B类，而R3将两条C类聚合为一个A类，但是都达到了聚合的目的，所以都是可以的： \n\n\n⑤无类域间路由（Classless Interdomain Routing，CIDR）：严格的路由汇聚，或者说是路由汇聚的最优方式/精确汇聚（无类域间路由路由属于但不等于路由汇聚的范围）。因为上图中，其路由聚合有多种方式，而CIDR是比较严格的路由聚合，对于其聚合是跨越了A、B、C类地址分类的聚合方式，如对于R1，192.168.30.0/24、192.168.40.0/24是只能进行路由聚合而不能进行CIDR的。下图可以进行CIDR： \n\n\n对于R1，其需要设置静态路由的两个网段为192.168.2.0/24和192.168.3.0/24，其第三段为2（1 0）和3（1 1），则将原有子网掩码左移一位使得192.168.2.0/24和192.168.3.0/24变成同一个网段192.168.2.0/23，且该网段的/24子网只存在192.168.2.0/24和192.168.3.0/24两个，不存在其他，这就是CIDR。CIDR其实是“超网”的逆过程即子网划分的逆过程子网合并。而之前的R1的两条路由192.168.30.0/24和192.168.40.0/24其要合并成一个大网段，就是将30（00 01 1110）和40（00 10 1000）现有的子网网络位化为主机位，子网掩码至少需要左移6位才可以达到子网合并，这其中共有64个子网，而当前只有2个，因此不能“精确汇聚”，即不能CIDR。\n\n⑥默认路由（Default Routing）：路由器设置的不存在路由路径的所有报文均采用默认路由进行转发，对于192.168.30.0/24和192.168.40.0/24就是ip route 0.0.0.0 0.0.0.0 192.168.20.2，即最大范围的路由汇聚，包含了所有子网。 \n⑦网关（Gateway）：网关其实是对于PC/Server等非网络设备这个概念会更加明显，网关实质就是局域网的默认路由的下一跳地址。\n\n关于有多条路由设置的问题，优先级如下： \n直连路由 > 最长掩码匹配 > 路由汇聚 > CIDR > 默认路由 \n（因为有最长掩码优先匹配原则，因此默认路由必定是最后才会使用的路由方式）。\n\n2、计算机设置网关与默认路由： \n上面说网关实质就是局域网的默认路由的下一跳地址，我们可以使用route print命令在windows上查看，第一条就是网关代表的默认路由（下面有一部分192.168.10.0、192.168.20.0、192.168.80.0等的路由是VMware的路由记录）： \n\n\n如果我们在adapter属性设置中把IP设置为静态并不设置网关，但是通过自己设置路由的方式来代替在adapter中设置网关的目的。如下所示： \n \n可以ping一下百度，可以ping通： \n\n\n也就是说，有时候可能PC/Server需要不设置网关，改用设置路由的方式来达到一定的功能，如下所示： \n\n如果PC_A要和Internet与PC_B通信，那么应该将网关设为同在局域网内的R1的接口（192.168.10.1）还是R2的接口（192.168.10.2）。假设将PC_A的网关设置为192.168.10.1，则访问Internet直接由R1转发就出去了，但是如果与PC_B通信，则PC_A一看是目标地址192.168.20.10和自己不在用一个网段就会把数据包丢给R1网关，R1则根据路由表返回来丢给R2，R2再丢给PC_B。那为什么不把PC_A的网关直接设置成R2的192.168.10.2，其实访问PC_B少一次路由，但访问Internet又多一次路由。\n\n有没有什么办法让PC_A访问Internet直接由R1转发，而与PC_B通信直接发给R2而不经R1转发给R2？既然问出来这个问题，那当然是有的了，就是采用给PC_A设置网关为R1的192.168.10.1，但是也增加一条路由到PC_B：route ADD 192.168.20.0 MASK 255.255.255.0 192.168.10.2，则PC_A遇到发给由将数据交给R2，而非192.168.20.0网段的数据就采用默认路由，即设置的网关来直接转发到Internet中去。"]],[2886,2886],[2886,2886]]],[1561032617054,["GJX@GJXAIOU",[[1,563,"[link](https://img-blog.csdn.net/20180819231431587?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0Fwb2xsb25fa3Jq/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70)"]],[563,563],[733,733]]],[1561032619223,["GJX@GJXAIOU",[[1,563,"!"]],[563,563],[564,564]]],[1561032625168,["GJX@GJXAIOU",[[-1,1009," "],[1,1010,"\n"]],[1010,1010],[1010,1010]]],[1561032628129,["GJX@GJXAIOU",[[1,1010,"[link](https://img-blog.csdn.net/20180819232308944?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0Fwb2xsb25fa3Jq/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70)"]],[1010,1010],[1180,1180]]],[1561032629474,["GJX@GJXAIOU",[[1,1010,"!"]],[1010,1010],[1011,1011]]],[1561032636102,["GJX@GJXAIOU",[[1,1270,"[link](https://img-blog.csdn.net/20180819232318476?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0Fwb2xsb25fa3Jq/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70)"]],[1270,1270],[1440,1440]]],[1561032637163,["GJX@GJXAIOU",[[1,1270,"!"]],[1270,1270],[1271,1271]]],[1561032644663,["GJX@GJXAIOU",[[1,1666,"[link](https://img-blog.csdn.net/20180819233419199?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0Fwb2xsb25fa3Jq/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70)"]],[1666,1666],[1836,1836]]],[1561032646080,["GJX@GJXAIOU",[[1,1666,"!"]],[1666,1666],[1667,1667]]],[1561032656098,["GJX@GJXAIOU",[[1,2683,"[link](https://img-blog.csdn.net/2018081923493640?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0Fwb2xsb25fa3Jq/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70)"]],[2683,2683],[2852,2852]]],[1561032657897,["GJX@GJXAIOU",[[1,2683,"!"]],[2683,2683],[2684,2684]]],[1561032666695,["GJX@GJXAIOU",[[1,2928,"[link](https://img-blog.csdn.net/2018081923591541?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0Fwb2xsb25fa3Jq/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70)"]],[2928,2928],[3097,3097]]],[1561032668264,["GJX@GJXAIOU",[[1,2927,"!"]],[2927,2927],[2928,2928]]],[1561032670202,["GJX@GJXAIOU",[[-1,2928," "]],[2929,2929],[2928,2928]]],[1561032736117,[null,[[-1,3909,"1、名词概念解释： \n①静态路由（Static Routing）：即由网络管理员/用户静态指定，不会随时间、流量、拓扑结构等因素变化而变化的路由路径。\n\n②动态路由（Dynamic Routing）：由路由器自动学习，受时间、网络流量、拓扑结构等因素变化而变化的路由路径。\n\n③直连路由（Connected Route）：因传输介质直连（直接连接）而产生的路由路径，直连不需要再设置路由，但设置也不会出错，如下图所示： \n \nR1和192.168.10.0、192.168.20.0两个网段直接连接，因此连线接通之后就直接存在直连路由，但是R1和192.168.30.0网段没有直接连接，则R3到192.168.30.0网段不存在直连路由。其他路由器类似，该拓扑中每个路由器都有两条直连路由并配置了两条静态路由如下： \n\n\n④路由汇聚（Routing aggregation）：多条路由路径合成一条路由路径（形态：合成的一条路由路径，其子网掩码1的位数必定不大于原有路由路径子网掩码1的位数）。对于上图，我们可以看到对于R1，无论是去192.168.30.0/24网段还是去192.168.40.0/24网段，其出口地址均为192.168.20.2。我们可以修改为ip route 192.168.0.0 16 192.168.20.2，即合并成一条，将网络位第三段的20或30整合到0便可实现路由聚合减少路由表项数目。对于R3路由器也是同理，但是R2不行。如下所示： \n \n其实也可以按下所示进行聚合，我们可以看到R3的聚合和R1的聚合不相同，R1将两条C类聚合为一个B类，而R3将两条C类聚合为一个A类，但是都达到了聚合的目的，所以都是可以的： \n\n\n⑤无类域间路由（Classless Interdomain Routing，CIDR）：严格的路由汇聚，或者说是路由汇聚的最优方式/精确汇聚（无类域间路由路由属于但不等于路由汇聚的范围）。因为上图中，其路由聚合有多种方式，而CIDR是比较严格的路由聚合，对于其聚合是跨越了A、B、C类地址分类的聚合方式，如对于R1，192.168.30.0/24、192.168.40.0/24是只能进行路由聚合而不能进行CIDR的。下图可以进行CIDR： \n\n\n对于R1，其需要设置静态路由的两个网段为192.168.2.0/24和192.168.3.0/24，其第三段为2（1 0）和3（1 1），则将原有子网掩码左移一位使得192.168.2.0/24和192.168.3.0/24变成同一个网段192.168.2.0/23，且该网段的/24子网只存在192.168.2.0/24和192.168.3.0/24两个，不存在其他，这就是CIDR。CIDR其实是“超网”的逆过程即子网划分的逆过程子网合并。而之前的R1的两条路由192.168.30.0/24和192.168.40.0/24其要合并成一个大网段，就是将30（00 01 1110）和40（00 10 1000）现有的子网网络位化为主机位，子网掩码至少需要左移6位才可以达到子网合并，这其中共有64个子网，而当前只有2个，因此不能“精确汇聚”，即不能CIDR。\n\n⑥默认路由（Default Routing）：路由器设置的不存在路由路径的所有报文均采用默认路由进行转发，对于192.168.30.0/24和192.168.40.0/24就是ip route 0.0.0.0 0.0.0.0 192.168.20.2，即最大范围的路由汇聚，包含了所有子网。 \n⑦网关（Gateway）：网关其实是对于PC/Server等非网络设备这个概念会更加明显，网关实质就是局域网的默认路由的下一跳地址。\n\n关于有多条路由设置的问题，优先级如下： \n直连路由 > 最长掩码匹配 > 路由汇聚 > CIDR > 默认路由 \n（因为有最长掩码优先匹配原则，因此默认路由必定是最后才会使用的路由方式）。\n\n2、计算机设置网关与默认路由： \n上面说网关实质就是局域网的默认路由的下一跳地址，我们可以使用route print命令在windows上查看，第一条就是网关代表的默认路由（下面有一部分192.168.10.0、192.168.20.0、192.168.80.0等的路由是VMware的路由记录）： \n\n\n如果我们在adapter属性设置中把IP设置为静态并不设置网关，但是通过自己设置路由的方式来代替在adapter中设置网关的目的。如下所示： \n \n可以ping一下百度，可以ping通： \n\n\n也就是说，有时候可能PC/Server需要不设置网关，改用设置路由的方式来达到一定的功能，如下所示： \n\n如果PC_A要和Internet与PC_B通信，那么应该将网关设为同在局域网内的R1的接口（192.168.10.1）还是R2的接口（192.168.10.2）。假设将PC_A的网关设置为192.168.10.1，则访问Internet直接由R1转发就出去了，但是如果与PC_B通信，则PC_A一看是目标地址192.168.20.10和自己不在用一个网段就会把数据包丢给R1网关，R1则根据路由表返回来丢给R2，R2再丢给PC_B。那为什么不把PC_A的网关直接设置成R2的192.168.10.2，其实访问PC_B少一次路由，但访问Internet又多一次路由。\n\n有没有什么办法让PC_A访问Internet直接由R1转发，而与PC_B通信直接发给R2而不经R1转发给R2？既然问出来这个问题，那当然是有的了，就是采用给PC_A设置网关为R1的192.168.10.1，但是也增加一条路由到PC_B：route ADD 192.168.20.0 MASK 255.255.255.0 192.168.10.2，则PC_A遇到发给由将数据交给R2，而非192.168.20.0网段的数据就采用默认路由，即设置的网关来直接转发到Internet中去。"]],[3909,3909],[3909,3909]]],[1561032736117,[null,[[1,3909,"1、名词概念解释： \n①静态路由（Static Routing）：即由网络管理员/用户静态指定，不会随时间、流量、拓扑结构等因素变化而变化的路由路径。\n\n②动态路由（Dynamic Routing）：由路由器自动学习，受时间、网络流量、拓扑结构等因素变化而变化的路由路径。\n\n③直连路由（Connected Route）：因传输介质直连（直接连接）而产生的路由路径，直连不需要再设置路由，但设置也不会出错，如下图所示： \n \nR1和192.168.10.0、192.168.20.0两个网段直接连接，因此连线接通之后就直接存在直连路由，但是R1和192.168.30.0网段没有直接连接，则R3到192.168.30.0网段不存在直连路由。其他路由器类似，该拓扑中每个路由器都有两条直连路由并配置了两条静态路由如下： \n\n\n④路由汇聚（Routing aggregation）：多条路由路径合成一条路由路径（形态：合成的一条路由路径，其子网掩码1的位数必定不大于原有路由路径子网掩码1的位数）。对于上图，我们可以看到对于R1，无论是去192.168.30.0/24网段还是去192.168.40.0/24网段，其出口地址均为192.168.20.2。我们可以修改为ip route 192.168.0.0 16 192.168.20.2，即合并成一条，将网络位第三段的20或30整合到0便可实现路由聚合减少路由表项数目。对于R3路由器也是同理，但是R2不行。如下所示： \n \n其实也可以按下所示进行聚合，我们可以看到R3的聚合和R1的聚合不相同，R1将两条C类聚合为一个B类，而R3将两条C类聚合为一个A类，但是都达到了聚合的目的，所以都是可以的： \n\n\n⑤无类域间路由（Classless Interdomain Routing，CIDR）：严格的路由汇聚，或者说是路由汇聚的最优方式/精确汇聚（无类域间路由路由属于但不等于路由汇聚的范围）。因为上图中，其路由聚合有多种方式，而CIDR是比较严格的路由聚合，对于其聚合是跨越了A、B、C类地址分类的聚合方式，如对于R1，192.168.30.0/24、192.168.40.0/24是只能进行路由聚合而不能进行CIDR的。下图可以进行CIDR： \n\n\n对于R1，其需要设置静态路由的两个网段为192.168.2.0/24和192.168.3.0/24，其第三段为2（1 0）和3（1 1），则将原有子网掩码左移一位使得192.168.2.0/24和192.168.3.0/24变成同一个网段192.168.2.0/23，且该网段的/24子网只存在192.168.2.0/24和192.168.3.0/24两个，不存在其他，这就是CIDR。CIDR其实是“超网”的逆过程即子网划分的逆过程子网合并。而之前的R1的两条路由192.168.30.0/24和192.168.40.0/24其要合并成一个大网段，就是将30（00 01 1110）和40（00 10 1000）现有的子网网络位化为主机位，子网掩码至少需要左移6位才可以达到子网合并，这其中共有64个子网，而当前只有2个，因此不能“精确汇聚”，即不能CIDR。\n\n⑥默认路由（Default Routing）：路由器设置的不存在路由路径的所有报文均采用默认路由进行转发，对于192.168.30.0/24和192.168.40.0/24就是ip route 0.0.0.0 0.0.0.0 192.168.20.2，即最大范围的路由汇聚，包含了所有子网。 \n⑦网关（Gateway）：网关其实是对于PC/Server等非网络设备这个概念会更加明显，网关实质就是局域网的默认路由的下一跳地址。\n\n关于有多条路由设置的问题，优先级如下： \n直连路由 > 最长掩码匹配 > 路由汇聚 > CIDR > 默认路由 \n（因为有最长掩码优先匹配原则，因此默认路由必定是最后才会使用的路由方式）。\n\n2、计算机设置网关与默认路由： \n上面说网关实质就是局域网的默认路由的下一跳地址，我们可以使用route print命令在windows上查看，第一条就是网关代表的默认路由（下面有一部分192.168.10.0、192.168.20.0、192.168.80.0等的路由是VMware的路由记录）： \n\n\n如果我们在adapter属性设置中把IP设置为静态并不设置网关，但是通过自己设置路由的方式来代替在adapter中设置网关的目的。如下所示： \n \n可以ping一下百度，可以ping通： \n\n\n也就是说，有时候可能PC/Server需要不设置网关，改用设置路由的方式来达到一定的功能，如下所示： \n\n如果PC_A要和Internet与PC_B通信，那么应该将网关设为同在局域网内的R1的接口（192.168.10.1）还是R2的接口（192.168.10.2）。假设将PC_A的网关设置为192.168.10.1，则访问Internet直接由R1转发就出去了，但是如果与PC_B通信，则PC_A一看是目标地址192.168.20.10和自己不在用一个网段就会把数据包丢给R1网关，R1则根据路由表返回来丢给R2，R2再丢给PC_B。那为什么不把PC_A的网关直接设置成R2的192.168.10.2，其实访问PC_B少一次路由，但访问Internet又多一次路由。\n\n有没有什么办法让PC_A访问Internet直接由R1转发，而与PC_B通信直接发给R2而不经R1转发给R2？既然问出来这个问题，那当然是有的了，就是采用给PC_A设置网关为R1的192.168.10.1，但是也增加一条路由到PC_B：route ADD 192.168.20.0 MASK 255.255.255.0 192.168.10.2，则PC_A遇到发给由将数据交给R2，而非192.168.20.0网段的数据就采用默认路由，即设置的网关来直接转发到Internet中去。"]],[3909,3909],[3909,3909]]],[1561032676483,["GJX@GJXAIOU",[[1,3120,"[link](https://img-blog.csdn.net/20180819235948354?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0Fwb2xsb25fa3Jq/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70)"]],[3120,3120],[3290,3290]]],[1561032678055,["GJX@GJXAIOU",[[1,3120,"!"]],[3120,3120],[3121,3121]]],[1561032683213,["GJX@GJXAIOU",[[1,3345,"\n"]],[3344,3344],[3345,3345]]],[1561032683339,["GJX@GJXAIOU",[[1,3346,"\n"]],[3345,3345],[3346,3346]]],[1561032687250,["GJX@GJXAIOU",[[1,3345,"[link](https://img-blog.csdn.net/2018082000100316?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0Fwb2xsb25fa3Jq/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70)"]],[3345,3345],[3514,3514]]],[1561032689199,["GJX@GJXAIOU",[[1,3345,"!"]],[3345,3345],[3346,3346]]],[1561032705620,["GJX@GJXAIOU",[[1,29,"## "]],[29,29],[42,42]]],[1561032713060,["GJX@GJXAIOU",[[1,2535,"## "]],[2535,2535],[2554,2554]]],[1561032796117,[null,[[-1,4258,"1、名词概念解释： \n①静态路由（Static Routing）：即由网络管理员/用户静态指定，不会随时间、流量、拓扑结构等因素变化而变化的路由路径。\n\n②动态路由（Dynamic Routing）：由路由器自动学习，受时间、网络流量、拓扑结构等因素变化而变化的路由路径。\n\n③直连路由（Connected Route）：因传输介质直连（直接连接）而产生的路由路径，直连不需要再设置路由，但设置也不会出错，如下图所示： \n \nR1和192.168.10.0、192.168.20.0两个网段直接连接，因此连线接通之后就直接存在直连路由，但是R1和192.168.30.0网段没有直接连接，则R3到192.168.30.0网段不存在直连路由。其他路由器类似，该拓扑中每个路由器都有两条直连路由并配置了两条静态路由如下： \n\n\n④路由汇聚（Routing aggregation）：多条路由路径合成一条路由路径（形态：合成的一条路由路径，其子网掩码1的位数必定不大于原有路由路径子网掩码1的位数）。对于上图，我们可以看到对于R1，无论是去192.168.30.0/24网段还是去192.168.40.0/24网段，其出口地址均为192.168.20.2。我们可以修改为ip route 192.168.0.0 16 192.168.20.2，即合并成一条，将网络位第三段的20或30整合到0便可实现路由聚合减少路由表项数目。对于R3路由器也是同理，但是R2不行。如下所示： \n \n其实也可以按下所示进行聚合，我们可以看到R3的聚合和R1的聚合不相同，R1将两条C类聚合为一个B类，而R3将两条C类聚合为一个A类，但是都达到了聚合的目的，所以都是可以的： \n\n\n⑤无类域间路由（Classless Interdomain Routing，CIDR）：严格的路由汇聚，或者说是路由汇聚的最优方式/精确汇聚（无类域间路由路由属于但不等于路由汇聚的范围）。因为上图中，其路由聚合有多种方式，而CIDR是比较严格的路由聚合，对于其聚合是跨越了A、B、C类地址分类的聚合方式，如对于R1，192.168.30.0/24、192.168.40.0/24是只能进行路由聚合而不能进行CIDR的。下图可以进行CIDR： \n\n\n对于R1，其需要设置静态路由的两个网段为192.168.2.0/24和192.168.3.0/24，其第三段为2（1 0）和3（1 1），则将原有子网掩码左移一位使得192.168.2.0/24和192.168.3.0/24变成同一个网段192.168.2.0/23，且该网段的/24子网只存在192.168.2.0/24和192.168.3.0/24两个，不存在其他，这就是CIDR。CIDR其实是“超网”的逆过程即子网划分的逆过程子网合并。而之前的R1的两条路由192.168.30.0/24和192.168.40.0/24其要合并成一个大网段，就是将30（00 01 1110）和40（00 10 1000）现有的子网网络位化为主机位，子网掩码至少需要左移6位才可以达到子网合并，这其中共有64个子网，而当前只有2个，因此不能“精确汇聚”，即不能CIDR。\n\n⑥默认路由（Default Routing）：路由器设置的不存在路由路径的所有报文均采用默认路由进行转发，对于192.168.30.0/24和192.168.40.0/24就是ip route 0.0.0.0 0.0.0.0 192.168.20.2，即最大范围的路由汇聚，包含了所有子网。 \n⑦网关（Gateway）：网关其实是对于PC/Server等非网络设备这个概念会更加明显，网关实质就是局域网的默认路由的下一跳地址。\n\n关于有多条路由设置的问题，优先级如下： \n直连路由 > 最长掩码匹配 > 路由汇聚 > CIDR > 默认路由 \n（因为有最长掩码优先匹配原则，因此默认路由必定是最后才会使用的路由方式）。\n\n2、计算机设置网关与默认路由： \n上面说网关实质就是局域网的默认路由的下一跳地址，我们可以使用route print命令在windows上查看，第一条就是网关代表的默认路由（下面有一部分192.168.10.0、192.168.20.0、192.168.80.0等的路由是VMware的路由记录）： \n\n\n如果我们在adapter属性设置中把IP设置为静态并不设置网关，但是通过自己设置路由的方式来代替在adapter中设置网关的目的。如下所示： \n \n可以ping一下百度，可以ping通： \n\n\n也就是说，有时候可能PC/Server需要不设置网关，改用设置路由的方式来达到一定的功能，如下所示： \n\n如果PC_A要和Internet与PC_B通信，那么应该将网关设为同在局域网内的R1的接口（192.168.10.1）还是R2的接口（192.168.10.2）。假设将PC_A的网关设置为192.168.10.1，则访问Internet直接由R1转发就出去了，但是如果与PC_B通信，则PC_A一看是目标地址192.168.20.10和自己不在用一个网段就会把数据包丢给R1网关，R1则根据路由表返回来丢给R2，R2再丢给PC_B。那为什么不把PC_A的网关直接设置成R2的192.168.10.2，其实访问PC_B少一次路由，但访问Internet又多一次路由。\n\n有没有什么办法让PC_A访问Internet直接由R1转发，而与PC_B通信直接发给R2而不经R1转发给R2？既然问出来这个问题，那当然是有的了，就是采用给PC_A设置网关为R1的192.168.10.1，但是也增加一条路由到PC_B：route ADD 192.168.20.0 MASK 255.255.255.0 192.168.10.2，则PC_A遇到发给由将数据交给R2，而非192.168.20.0网段的数据就采用默认路由，即设置的网关来直接转发到Internet中去。"]],[4258,4258],[4258,4258]]],[1561032796117,[null,[[1,4258,"1、名词概念解释： \n①静态路由（Static Routing）：即由网络管理员/用户静态指定，不会随时间、流量、拓扑结构等因素变化而变化的路由路径。\n\n②动态路由（Dynamic Routing）：由路由器自动学习，受时间、网络流量、拓扑结构等因素变化而变化的路由路径。\n\n③直连路由（Connected Route）：因传输介质直连（直接连接）而产生的路由路径，直连不需要再设置路由，但设置也不会出错，如下图所示： \n \nR1和192.168.10.0、192.168.20.0两个网段直接连接，因此连线接通之后就直接存在直连路由，但是R1和192.168.30.0网段没有直接连接，则R3到192.168.30.0网段不存在直连路由。其他路由器类似，该拓扑中每个路由器都有两条直连路由并配置了两条静态路由如下： \n\n\n④路由汇聚（Routing aggregation）：多条路由路径合成一条路由路径（形态：合成的一条路由路径，其子网掩码1的位数必定不大于原有路由路径子网掩码1的位数）。对于上图，我们可以看到对于R1，无论是去192.168.30.0/24网段还是去192.168.40.0/24网段，其出口地址均为192.168.20.2。我们可以修改为ip route 192.168.0.0 16 192.168.20.2，即合并成一条，将网络位第三段的20或30整合到0便可实现路由聚合减少路由表项数目。对于R3路由器也是同理，但是R2不行。如下所示： \n \n其实也可以按下所示进行聚合，我们可以看到R3的聚合和R1的聚合不相同，R1将两条C类聚合为一个B类，而R3将两条C类聚合为一个A类，但是都达到了聚合的目的，所以都是可以的： \n\n\n⑤无类域间路由（Classless Interdomain Routing，CIDR）：严格的路由汇聚，或者说是路由汇聚的最优方式/精确汇聚（无类域间路由路由属于但不等于路由汇聚的范围）。因为上图中，其路由聚合有多种方式，而CIDR是比较严格的路由聚合，对于其聚合是跨越了A、B、C类地址分类的聚合方式，如对于R1，192.168.30.0/24、192.168.40.0/24是只能进行路由聚合而不能进行CIDR的。下图可以进行CIDR： \n\n\n对于R1，其需要设置静态路由的两个网段为192.168.2.0/24和192.168.3.0/24，其第三段为2（1 0）和3（1 1），则将原有子网掩码左移一位使得192.168.2.0/24和192.168.3.0/24变成同一个网段192.168.2.0/23，且该网段的/24子网只存在192.168.2.0/24和192.168.3.0/24两个，不存在其他，这就是CIDR。CIDR其实是“超网”的逆过程即子网划分的逆过程子网合并。而之前的R1的两条路由192.168.30.0/24和192.168.40.0/24其要合并成一个大网段，就是将30（00 01 1110）和40（00 10 1000）现有的子网网络位化为主机位，子网掩码至少需要左移6位才可以达到子网合并，这其中共有64个子网，而当前只有2个，因此不能“精确汇聚”，即不能CIDR。\n\n⑥默认路由（Default Routing）：路由器设置的不存在路由路径的所有报文均采用默认路由进行转发，对于192.168.30.0/24和192.168.40.0/24就是ip route 0.0.0.0 0.0.0.0 192.168.20.2，即最大范围的路由汇聚，包含了所有子网。 \n⑦网关（Gateway）：网关其实是对于PC/Server等非网络设备这个概念会更加明显，网关实质就是局域网的默认路由的下一跳地址。\n\n关于有多条路由设置的问题，优先级如下： \n直连路由 > 最长掩码匹配 > 路由汇聚 > CIDR > 默认路由 \n（因为有最长掩码优先匹配原则，因此默认路由必定是最后才会使用的路由方式）。\n\n2、计算机设置网关与默认路由： \n上面说网关实质就是局域网的默认路由的下一跳地址，我们可以使用route print命令在windows上查看，第一条就是网关代表的默认路由（下面有一部分192.168.10.0、192.168.20.0、192.168.80.0等的路由是VMware的路由记录）： \n\n\n如果我们在adapter属性设置中把IP设置为静态并不设置网关，但是通过自己设置路由的方式来代替在adapter中设置网关的目的。如下所示： \n \n可以ping一下百度，可以ping通： \n\n\n也就是说，有时候可能PC/Server需要不设置网关，改用设置路由的方式来达到一定的功能，如下所示： \n\n如果PC_A要和Internet与PC_B通信，那么应该将网关设为同在局域网内的R1的接口（192.168.10.1）还是R2的接口（192.168.10.2）。假设将PC_A的网关设置为192.168.10.1，则访问Internet直接由R1转发就出去了，但是如果与PC_B通信，则PC_A一看是目标地址192.168.20.10和自己不在用一个网段就会把数据包丢给R1网关，R1则根据路由表返回来丢给R2，R2再丢给PC_B。那为什么不把PC_A的网关直接设置成R2的192.168.10.2，其实访问PC_B少一次路由，但访问Internet又多一次路由。\n\n有没有什么办法让PC_A访问Internet直接由R1转发，而与PC_B通信直接发给R2而不经R1转发给R2？既然问出来这个问题，那当然是有的了，就是采用给PC_A设置网关为R1的192.168.10.1，但是也增加一条路由到PC_B：route ADD 192.168.20.0 MASK 255.255.255.0 192.168.10.2，则PC_A遇到发给由将数据交给R2，而非192.168.20.0网段的数据就采用默认路由，即设置的网关来直接转发到Internet中去。"]],[4258,4258],[4258,4258]]],[1561032737009,["GJX@GJXAIOU",[[1,133,"**"],[1,140,"**"]],[133,140],[133,144]]],[1561032741686,["GJX@GJXAIOU",[[1,67,"**"],[1,79,"**"]],[67,79],[67,83]]],[1561032746493,["GJX@GJXAIOU",[[1,44,"**"],[1,48,"**"]],[44,48],[44,52]]],[1561032750204,["GJX@GJXAIOU",[[1,118,"**"],[1,122,"**"]],[118,122],[118,126]]],[1561032752811,["GJX@GJXAIOU",[[1,187,"**"],[1,191,"**"]],[187,191],[187,195]]],[1561032756366,["GJX@GJXAIOU",[[1,759,"**"],[1,812,"**"]],[759,812],[759,816]]],[1561032759707,["GJX@GJXAIOU",[[-1,759,"**"],[-1,814,"**"]],[764,764],[759,812]]],[1561032764782,["GJX@GJXAIOU",[[1,759,"**"],[1,763,"**"]],[759,763],[759,767]]],[1561032768583,["GJX@GJXAIOU",[[1,1471,"**"],[1,1477,"**"]],[1471,1477],[1471,1481]]],[1561032772901,["GJX@GJXAIOU",[[1,2253,"**"],[1,2257,"**"]],[2253,2257],[2253,2261]]],[1561033096156,[null,[[-1,4290,"1、名词概念解释： \n①静态路由（Static Routing）：即由网络管理员/用户静态指定，不会随时间、流量、拓扑结构等因素变化而变化的路由路径。\n\n②动态路由（Dynamic Routing）：由路由器自动学习，受时间、网络流量、拓扑结构等因素变化而变化的路由路径。\n\n③直连路由（Connected Route）：因传输介质直连（直接连接）而产生的路由路径，直连不需要再设置路由，但设置也不会出错，如下图所示： \n \nR1和192.168.10.0、192.168.20.0两个网段直接连接，因此连线接通之后就直接存在直连路由，但是R1和192.168.30.0网段没有直接连接，则R3到192.168.30.0网段不存在直连路由。其他路由器类似，该拓扑中每个路由器都有两条直连路由并配置了两条静态路由如下： \n\n\n④路由汇聚（Routing aggregation）：多条路由路径合成一条路由路径（形态：合成的一条路由路径，其子网掩码1的位数必定不大于原有路由路径子网掩码1的位数）。对于上图，我们可以看到对于R1，无论是去192.168.30.0/24网段还是去192.168.40.0/24网段，其出口地址均为192.168.20.2。我们可以修改为ip route 192.168.0.0 16 192.168.20.2，即合并成一条，将网络位第三段的20或30整合到0便可实现路由聚合减少路由表项数目。对于R3路由器也是同理，但是R2不行。如下所示： \n \n其实也可以按下所示进行聚合，我们可以看到R3的聚合和R1的聚合不相同，R1将两条C类聚合为一个B类，而R3将两条C类聚合为一个A类，但是都达到了聚合的目的，所以都是可以的： \n\n\n⑤无类域间路由（Classless Interdomain Routing，CIDR）：严格的路由汇聚，或者说是路由汇聚的最优方式/精确汇聚（无类域间路由路由属于但不等于路由汇聚的范围）。因为上图中，其路由聚合有多种方式，而CIDR是比较严格的路由聚合，对于其聚合是跨越了A、B、C类地址分类的聚合方式，如对于R1，192.168.30.0/24、192.168.40.0/24是只能进行路由聚合而不能进行CIDR的。下图可以进行CIDR： \n\n\n对于R1，其需要设置静态路由的两个网段为192.168.2.0/24和192.168.3.0/24，其第三段为2（1 0）和3（1 1），则将原有子网掩码左移一位使得192.168.2.0/24和192.168.3.0/24变成同一个网段192.168.2.0/23，且该网段的/24子网只存在192.168.2.0/24和192.168.3.0/24两个，不存在其他，这就是CIDR。CIDR其实是“超网”的逆过程即子网划分的逆过程子网合并。而之前的R1的两条路由192.168.30.0/24和192.168.40.0/24其要合并成一个大网段，就是将30（00 01 1110）和40（00 10 1000）现有的子网网络位化为主机位，子网掩码至少需要左移6位才可以达到子网合并，这其中共有64个子网，而当前只有2个，因此不能“精确汇聚”，即不能CIDR。\n\n⑥默认路由（Default Routing）：路由器设置的不存在路由路径的所有报文均采用默认路由进行转发，对于192.168.30.0/24和192.168.40.0/24就是ip route 0.0.0.0 0.0.0.0 192.168.20.2，即最大范围的路由汇聚，包含了所有子网。 \n⑦网关（Gateway）：网关其实是对于PC/Server等非网络设备这个概念会更加明显，网关实质就是局域网的默认路由的下一跳地址。\n\n关于有多条路由设置的问题，优先级如下： \n直连路由 > 最长掩码匹配 > 路由汇聚 > CIDR > 默认路由 \n（因为有最长掩码优先匹配原则，因此默认路由必定是最后才会使用的路由方式）。\n\n2、计算机设置网关与默认路由： \n上面说网关实质就是局域网的默认路由的下一跳地址，我们可以使用route print命令在windows上查看，第一条就是网关代表的默认路由（下面有一部分192.168.10.0、192.168.20.0、192.168.80.0等的路由是VMware的路由记录）： \n\n\n如果我们在adapter属性设置中把IP设置为静态并不设置网关，但是通过自己设置路由的方式来代替在adapter中设置网关的目的。如下所示： \n \n可以ping一下百度，可以ping通： \n\n\n也就是说，有时候可能PC/Server需要不设置网关，改用设置路由的方式来达到一定的功能，如下所示： \n\n如果PC_A要和Internet与PC_B通信，那么应该将网关设为同在局域网内的R1的接口（192.168.10.1）还是R2的接口（192.168.10.2）。假设将PC_A的网关设置为192.168.10.1，则访问Internet直接由R1转发就出去了，但是如果与PC_B通信，则PC_A一看是目标地址192.168.20.10和自己不在用一个网段就会把数据包丢给R1网关，R1则根据路由表返回来丢给R2，R2再丢给PC_B。那为什么不把PC_A的网关直接设置成R2的192.168.10.2，其实访问PC_B少一次路由，但访问Internet又多一次路由。\n\n有没有什么办法让PC_A访问Internet直接由R1转发，而与PC_B通信直接发给R2而不经R1转发给R2？既然问出来这个问题，那当然是有的了，就是采用给PC_A设置网关为R1的192.168.10.1，但是也增加一条路由到PC_B：route ADD 192.168.20.0 MASK 255.255.255.0 192.168.10.2，则PC_A遇到发给由将数据交给R2，而非192.168.20.0网段的数据就采用默认路由，即设置的网关来直接转发到Internet中去。"]],[4290,4290],[4290,4290]]],[1561033096156,[null,[[1,4290,"1、名词概念解释： \n①静态路由（Static Routing）：即由网络管理员/用户静态指定，不会随时间、流量、拓扑结构等因素变化而变化的路由路径。\n\n②动态路由（Dynamic Routing）：由路由器自动学习，受时间、网络流量、拓扑结构等因素变化而变化的路由路径。\n\n③直连路由（Connected Route）：因传输介质直连（直接连接）而产生的路由路径，直连不需要再设置路由，但设置也不会出错，如下图所示： \n \nR1和192.168.10.0、192.168.20.0两个网段直接连接，因此连线接通之后就直接存在直连路由，但是R1和192.168.30.0网段没有直接连接，则R3到192.168.30.0网段不存在直连路由。其他路由器类似，该拓扑中每个路由器都有两条直连路由并配置了两条静态路由如下： \n\n\n④路由汇聚（Routing aggregation）：多条路由路径合成一条路由路径（形态：合成的一条路由路径，其子网掩码1的位数必定不大于原有路由路径子网掩码1的位数）。对于上图，我们可以看到对于R1，无论是去192.168.30.0/24网段还是去192.168.40.0/24网段，其出口地址均为192.168.20.2。我们可以修改为ip route 192.168.0.0 16 192.168.20.2，即合并成一条，将网络位第三段的20或30整合到0便可实现路由聚合减少路由表项数目。对于R3路由器也是同理，但是R2不行。如下所示： \n \n其实也可以按下所示进行聚合，我们可以看到R3的聚合和R1的聚合不相同，R1将两条C类聚合为一个B类，而R3将两条C类聚合为一个A类，但是都达到了聚合的目的，所以都是可以的： \n\n\n⑤无类域间路由（Classless Interdomain Routing，CIDR）：严格的路由汇聚，或者说是路由汇聚的最优方式/精确汇聚（无类域间路由路由属于但不等于路由汇聚的范围）。因为上图中，其路由聚合有多种方式，而CIDR是比较严格的路由聚合，对于其聚合是跨越了A、B、C类地址分类的聚合方式，如对于R1，192.168.30.0/24、192.168.40.0/24是只能进行路由聚合而不能进行CIDR的。下图可以进行CIDR： \n\n\n对于R1，其需要设置静态路由的两个网段为192.168.2.0/24和192.168.3.0/24，其第三段为2（1 0）和3（1 1），则将原有子网掩码左移一位使得192.168.2.0/24和192.168.3.0/24变成同一个网段192.168.2.0/23，且该网段的/24子网只存在192.168.2.0/24和192.168.3.0/24两个，不存在其他，这就是CIDR。CIDR其实是“超网”的逆过程即子网划分的逆过程子网合并。而之前的R1的两条路由192.168.30.0/24和192.168.40.0/24其要合并成一个大网段，就是将30（00 01 1110）和40（00 10 1000）现有的子网网络位化为主机位，子网掩码至少需要左移6位才可以达到子网合并，这其中共有64个子网，而当前只有2个，因此不能“精确汇聚”，即不能CIDR。\n\n⑥默认路由（Default Routing）：路由器设置的不存在路由路径的所有报文均采用默认路由进行转发，对于192.168.30.0/24和192.168.40.0/24就是ip route 0.0.0.0 0.0.0.0 192.168.20.2，即最大范围的路由汇聚，包含了所有子网。 \n⑦网关（Gateway）：网关其实是对于PC/Server等非网络设备这个概念会更加明显，网关实质就是局域网的默认路由的下一跳地址。\n\n关于有多条路由设置的问题，优先级如下： \n直连路由 > 最长掩码匹配 > 路由汇聚 > CIDR > 默认路由 \n（因为有最长掩码优先匹配原则，因此默认路由必定是最后才会使用的路由方式）。\n\n2、计算机设置网关与默认路由： \n上面说网关实质就是局域网的默认路由的下一跳地址，我们可以使用route print命令在windows上查看，第一条就是网关代表的默认路由（下面有一部分192.168.10.0、192.168.20.0、192.168.80.0等的路由是VMware的路由记录）： \n\n\n如果我们在adapter属性设置中把IP设置为静态并不设置网关，但是通过自己设置路由的方式来代替在adapter中设置网关的目的。如下所示： \n \n可以ping一下百度，可以ping通： \n\n\n也就是说，有时候可能PC/Server需要不设置网关，改用设置路由的方式来达到一定的功能，如下所示： \n\n如果PC_A要和Internet与PC_B通信，那么应该将网关设为同在局域网内的R1的接口（192.168.10.1）还是R2的接口（192.168.10.2）。假设将PC_A的网关设置为192.168.10.1，则访问Internet直接由R1转发就出去了，但是如果与PC_B通信，则PC_A一看是目标地址192.168.20.10和自己不在用一个网段就会把数据包丢给R1网关，R1则根据路由表返回来丢给R2，R2再丢给PC_B。那为什么不把PC_A的网关直接设置成R2的192.168.10.2，其实访问PC_B少一次路由，但访问Internet又多一次路由。\n\n有没有什么办法让PC_A访问Internet直接由R1转发，而与PC_B通信直接发给R2而不经R1转发给R2？既然问出来这个问题，那当然是有的了，就是采用给PC_A设置网关为R1的192.168.10.1，但是也增加一条路由到PC_B：route ADD 192.168.20.0 MASK 255.255.255.0 192.168.10.2，则PC_A遇到发给由将数据交给R2，而非192.168.20.0网段的数据就采用默认路由，即设置的网关来直接转发到Internet中去。"]],[4290,4290],[4290,4290]]],[1561033061823,["GJX@GJXAIOU",[[1,3557,"·"]],[3557,3557],[3558,3558]]],[1561033063101,["GJX@GJXAIOU",[[-1,3557,"·"]],[3558,3558],[3557,3557]]],[1561033064478,["GJX@GJXAIOU",[[1,3557,"`"]],[3557,3557],[3558,3558]]],[1561033065976,["GJX@GJXAIOU",[[1,3562,"`"]],[3562,3562],[3563,3563]]],[1561033069846,["GJX@GJXAIOU",[[1,3574,"`"]],[3574,3574],[3575,3575]]],[1561033071096,["GJX@GJXAIOU",[[1,3579,"`"]],[3579,3579],[3580,3580]]],[1561033073256,["GJX@GJXAIOU",[[1,3770,"`"]],[3770,3770],[3771,3771]]],[1561033074374,["GJX@GJXAIOU",[[1,3775,"`"]],[3775,3775],[3776,3776]]],[1561033076286,["GJX@GJXAIOU",[[1,3783,"`"]],[3783,3783],[3784,3784]]],[1561033077358,["GJX@GJXAIOU",[[1,3788,"`"]],[3788,3788],[3789,3789]]],[1561033081840,["GJX@GJXAIOU",[[1,3694,"`"]],[3694,3694],[3695,3695]]],[1561033083198,["GJX@GJXAIOU",[[1,3699,"`"]],[3699,3699],[3700,3700]]],[1561033087510,["GJX@GJXAIOU",[[1,3927,"`"]],[3927,3927],[3928,3928]]],[1561033088543,["GJX@GJXAIOU",[[1,3932,"`"]],[3932,3932],[3933,3933]]],[1561033090167,["GJX@GJXAIOU",[[1,3885,"`"]],[3885,3885],[3886,3886]]],[1561033091407,["GJX@GJXAIOU",[[1,3881,"`"]],[3881,3881],[3882,3882]]],[1561033094998,["GJX@GJXAIOU",[[1,3970,"`"]],[3970,3970],[3971,3971]]],[1561033156754,[null,[[-1,4305,"1、名词概念解释： \n①静态路由（Static Routing）：即由网络管理员/用户静态指定，不会随时间、流量、拓扑结构等因素变化而变化的路由路径。\n\n②动态路由（Dynamic Routing）：由路由器自动学习，受时间、网络流量、拓扑结构等因素变化而变化的路由路径。\n\n③直连路由（Connected Route）：因传输介质直连（直接连接）而产生的路由路径，直连不需要再设置路由，但设置也不会出错，如下图所示： \n \nR1和192.168.10.0、192.168.20.0两个网段直接连接，因此连线接通之后就直接存在直连路由，但是R1和192.168.30.0网段没有直接连接，则R3到192.168.30.0网段不存在直连路由。其他路由器类似，该拓扑中每个路由器都有两条直连路由并配置了两条静态路由如下： \n\n\n④路由汇聚（Routing aggregation）：多条路由路径合成一条路由路径（形态：合成的一条路由路径，其子网掩码1的位数必定不大于原有路由路径子网掩码1的位数）。对于上图，我们可以看到对于R1，无论是去192.168.30.0/24网段还是去192.168.40.0/24网段，其出口地址均为192.168.20.2。我们可以修改为ip route 192.168.0.0 16 192.168.20.2，即合并成一条，将网络位第三段的20或30整合到0便可实现路由聚合减少路由表项数目。对于R3路由器也是同理，但是R2不行。如下所示： \n \n其实也可以按下所示进行聚合，我们可以看到R3的聚合和R1的聚合不相同，R1将两条C类聚合为一个B类，而R3将两条C类聚合为一个A类，但是都达到了聚合的目的，所以都是可以的： \n\n\n⑤无类域间路由（Classless Interdomain Routing，CIDR）：严格的路由汇聚，或者说是路由汇聚的最优方式/精确汇聚（无类域间路由路由属于但不等于路由汇聚的范围）。因为上图中，其路由聚合有多种方式，而CIDR是比较严格的路由聚合，对于其聚合是跨越了A、B、C类地址分类的聚合方式，如对于R1，192.168.30.0/24、192.168.40.0/24是只能进行路由聚合而不能进行CIDR的。下图可以进行CIDR： \n\n\n对于R1，其需要设置静态路由的两个网段为192.168.2.0/24和192.168.3.0/24，其第三段为2（1 0）和3（1 1），则将原有子网掩码左移一位使得192.168.2.0/24和192.168.3.0/24变成同一个网段192.168.2.0/23，且该网段的/24子网只存在192.168.2.0/24和192.168.3.0/24两个，不存在其他，这就是CIDR。CIDR其实是“超网”的逆过程即子网划分的逆过程子网合并。而之前的R1的两条路由192.168.30.0/24和192.168.40.0/24其要合并成一个大网段，就是将30（00 01 1110）和40（00 10 1000）现有的子网网络位化为主机位，子网掩码至少需要左移6位才可以达到子网合并，这其中共有64个子网，而当前只有2个，因此不能“精确汇聚”，即不能CIDR。\n\n⑥默认路由（Default Routing）：路由器设置的不存在路由路径的所有报文均采用默认路由进行转发，对于192.168.30.0/24和192.168.40.0/24就是ip route 0.0.0.0 0.0.0.0 192.168.20.2，即最大范围的路由汇聚，包含了所有子网。 \n⑦网关（Gateway）：网关其实是对于PC/Server等非网络设备这个概念会更加明显，网关实质就是局域网的默认路由的下一跳地址。\n\n关于有多条路由设置的问题，优先级如下： \n直连路由 > 最长掩码匹配 > 路由汇聚 > CIDR > 默认路由 \n（因为有最长掩码优先匹配原则，因此默认路由必定是最后才会使用的路由方式）。\n\n2、计算机设置网关与默认路由： \n上面说网关实质就是局域网的默认路由的下一跳地址，我们可以使用route print命令在windows上查看，第一条就是网关代表的默认路由（下面有一部分192.168.10.0、192.168.20.0、192.168.80.0等的路由是VMware的路由记录）： \n\n\n如果我们在adapter属性设置中把IP设置为静态并不设置网关，但是通过自己设置路由的方式来代替在adapter中设置网关的目的。如下所示： \n \n可以ping一下百度，可以ping通： \n\n\n也就是说，有时候可能PC/Server需要不设置网关，改用设置路由的方式来达到一定的功能，如下所示： \n\n如果PC_A要和Internet与PC_B通信，那么应该将网关设为同在局域网内的R1的接口（192.168.10.1）还是R2的接口（192.168.10.2）。假设将PC_A的网关设置为192.168.10.1，则访问Internet直接由R1转发就出去了，但是如果与PC_B通信，则PC_A一看是目标地址192.168.20.10和自己不在用一个网段就会把数据包丢给R1网关，R1则根据路由表返回来丢给R2，R2再丢给PC_B。那为什么不把PC_A的网关直接设置成R2的192.168.10.2，其实访问PC_B少一次路由，但访问Internet又多一次路由。\n\n有没有什么办法让PC_A访问Internet直接由R1转发，而与PC_B通信直接发给R2而不经R1转发给R2？既然问出来这个问题，那当然是有的了，就是采用给PC_A设置网关为R1的192.168.10.1，但是也增加一条路由到PC_B：route ADD 192.168.20.0 MASK 255.255.255.0 192.168.10.2，则PC_A遇到发给由将数据交给R2，而非192.168.20.0网段的数据就采用默认路由，即设置的网关来直接转发到Internet中去。"]],[4305,4305],[4305,4305]]],[1561033156754,[null,[[1,4305,"1、名词概念解释： \n①静态路由（Static Routing）：即由网络管理员/用户静态指定，不会随时间、流量、拓扑结构等因素变化而变化的路由路径。\n\n②动态路由（Dynamic Routing）：由路由器自动学习，受时间、网络流量、拓扑结构等因素变化而变化的路由路径。\n\n③直连路由（Connected Route）：因传输介质直连（直接连接）而产生的路由路径，直连不需要再设置路由，但设置也不会出错，如下图所示： \n \nR1和192.168.10.0、192.168.20.0两个网段直接连接，因此连线接通之后就直接存在直连路由，但是R1和192.168.30.0网段没有直接连接，则R3到192.168.30.0网段不存在直连路由。其他路由器类似，该拓扑中每个路由器都有两条直连路由并配置了两条静态路由如下： \n\n\n④路由汇聚（Routing aggregation）：多条路由路径合成一条路由路径（形态：合成的一条路由路径，其子网掩码1的位数必定不大于原有路由路径子网掩码1的位数）。对于上图，我们可以看到对于R1，无论是去192.168.30.0/24网段还是去192.168.40.0/24网段，其出口地址均为192.168.20.2。我们可以修改为ip route 192.168.0.0 16 192.168.20.2，即合并成一条，将网络位第三段的20或30整合到0便可实现路由聚合减少路由表项数目。对于R3路由器也是同理，但是R2不行。如下所示： \n \n其实也可以按下所示进行聚合，我们可以看到R3的聚合和R1的聚合不相同，R1将两条C类聚合为一个B类，而R3将两条C类聚合为一个A类，但是都达到了聚合的目的，所以都是可以的： \n\n\n⑤无类域间路由（Classless Interdomain Routing，CIDR）：严格的路由汇聚，或者说是路由汇聚的最优方式/精确汇聚（无类域间路由路由属于但不等于路由汇聚的范围）。因为上图中，其路由聚合有多种方式，而CIDR是比较严格的路由聚合，对于其聚合是跨越了A、B、C类地址分类的聚合方式，如对于R1，192.168.30.0/24、192.168.40.0/24是只能进行路由聚合而不能进行CIDR的。下图可以进行CIDR： \n\n\n对于R1，其需要设置静态路由的两个网段为192.168.2.0/24和192.168.3.0/24，其第三段为2（1 0）和3（1 1），则将原有子网掩码左移一位使得192.168.2.0/24和192.168.3.0/24变成同一个网段192.168.2.0/23，且该网段的/24子网只存在192.168.2.0/24和192.168.3.0/24两个，不存在其他，这就是CIDR。CIDR其实是“超网”的逆过程即子网划分的逆过程子网合并。而之前的R1的两条路由192.168.30.0/24和192.168.40.0/24其要合并成一个大网段，就是将30（00 01 1110）和40（00 10 1000）现有的子网网络位化为主机位，子网掩码至少需要左移6位才可以达到子网合并，这其中共有64个子网，而当前只有2个，因此不能“精确汇聚”，即不能CIDR。\n\n⑥默认路由（Default Routing）：路由器设置的不存在路由路径的所有报文均采用默认路由进行转发，对于192.168.30.0/24和192.168.40.0/24就是ip route 0.0.0.0 0.0.0.0 192.168.20.2，即最大范围的路由汇聚，包含了所有子网。 \n⑦网关（Gateway）：网关其实是对于PC/Server等非网络设备这个概念会更加明显，网关实质就是局域网的默认路由的下一跳地址。\n\n关于有多条路由设置的问题，优先级如下： \n直连路由 > 最长掩码匹配 > 路由汇聚 > CIDR > 默认路由 \n（因为有最长掩码优先匹配原则，因此默认路由必定是最后才会使用的路由方式）。\n\n2、计算机设置网关与默认路由： \n上面说网关实质就是局域网的默认路由的下一跳地址，我们可以使用route print命令在windows上查看，第一条就是网关代表的默认路由（下面有一部分192.168.10.0、192.168.20.0、192.168.80.0等的路由是VMware的路由记录）： \n\n\n如果我们在adapter属性设置中把IP设置为静态并不设置网关，但是通过自己设置路由的方式来代替在adapter中设置网关的目的。如下所示： \n \n可以ping一下百度，可以ping通： \n\n\n也就是说，有时候可能PC/Server需要不设置网关，改用设置路由的方式来达到一定的功能，如下所示： \n\n如果PC_A要和Internet与PC_B通信，那么应该将网关设为同在局域网内的R1的接口（192.168.10.1）还是R2的接口（192.168.10.2）。假设将PC_A的网关设置为192.168.10.1，则访问Internet直接由R1转发就出去了，但是如果与PC_B通信，则PC_A一看是目标地址192.168.20.10和自己不在用一个网段就会把数据包丢给R1网关，R1则根据路由表返回来丢给R2，R2再丢给PC_B。那为什么不把PC_A的网关直接设置成R2的192.168.10.2，其实访问PC_B少一次路由，但访问Internet又多一次路由。\n\n有没有什么办法让PC_A访问Internet直接由R1转发，而与PC_B通信直接发给R2而不经R1转发给R2？既然问出来这个问题，那当然是有的了，就是采用给PC_A设置网关为R1的192.168.10.1，但是也增加一条路由到PC_B：route ADD 192.168.20.0 MASK 255.255.255.0 192.168.10.2，则PC_A遇到发给由将数据交给R2，而非192.168.20.0网段的数据就采用默认路由，即设置的网关来直接转发到Internet中去。"]],[4305,4305],[4305,4305]]],[1561033096263,["GJX@GJXAIOU",[[1,3966,"`"]],[3966,3966],[3967,3967]]],[1561033099559,["GJX@GJXAIOU",[[1,4037,"`"]],[4037,4037],[4038,4038]]],[1561033100535,["GJX@GJXAIOU",[[1,4042,"`"]],[4042,4042],[4043,4043]]],[1561033102831,["GJX@GJXAIOU",[[1,4033,"`"]],[4033,4033],[4034,4034]]],[1561033104103,["GJX@GJXAIOU",[[1,4029,"`"]],[4029,4029],[4030,4030]]],[1561033108086,["GJX@GJXAIOU",[[1,3861,"`"]],[3861,3861],[3862,3862]]],[1561033109303,["GJX@GJXAIOU",[[1,3857,"`"]],[3857,3857],[3858,3858]]],[1561033112144,["GJX@GJXAIOU",[[1,3819,"`"]],[3819,3819],[3820,3820]]],[1561033113041,["GJX@GJXAIOU",[[1,3824,"`"]],[3824,3824],[3825,3825]]],[1561033117687,["GJX@GJXAIOU",[[1,3705,"`"]],[3705,3705],[3706,3706]]],[1561033119512,["GJX@GJXAIOU",[[-1,3705,"`"]],[3706,3706],[3705,3705]]],[1561033120430,["GJX@GJXAIOU",[[1,3704,"`"]],[3704,3704],[3705,3705]]],[1561033121600,["GJX@GJXAIOU",[[1,3709,"`"]],[3709,3709],[3710,3710]]]],null,"GJX@GJXAIOU"]]}