{"compress":true,"commitItems":[["bdfb3fd4-b44d-4c9d-a5fe-c8759a611b85",1561257717946,"",[[1561257668395,["GJX@GJXAIOU",[[1,0,"# Http协议分析\n\n\n\n"]],[0,0],[13,13]]],[1561257701722,["GJX@GJXAIOU",[[-1,13,"\n"],[1,14,"目录"]],[13,13],[15,15]]],[1561257702079,["GJX@GJXAIOU",[[1,15,"："]],[15,15],[16,16]]],[1561257702511,["GJX@GJXAIOU",[[1,16,"\n\n"]],[16,16],[17,17]]],[1561257703777,["GJX@GJXAIOU",[[-1,17,"\n"],[1,18,"-"]],[17,17],[18,18]]],[1561257716506,["GJX@GJXAIOU",[[1,18," HTTP请求和响应\n- 状态和"]],[18,18],[34,34]]],[1561257734851,["GJX@GJXAIOU",[[1,34,"回话\n- cookie欺骗\n- Burp suit\n- "]],[34,34],[62,62]]],[1561257734968,["GJX@GJXAIOU",[[-1,60,"- "],[1,62,"\n\n"]],[62,62],[61,61]]],[1561257735101,["GJX@GJXAIOU",[[1,62,"\n"]],[61,61],[62,62]]],[1561257735201,["GJX@GJXAIOU",[[1,63,"\n"]],[62,62],[63,63]]],[1561257755163,["GJX@GJXAIOU",[[1,62,"## 一、HTTP协议解析"]],[62,62],[75,75]]],[1561257755984,["GJX@GJXAIOU",[[1,77,"\n"]],[75,75],[76,76]]],[1561257763716,["GJX@GJXAIOU",[[1,77,"HTTP（HyperText Transfer Protocol）即超文本传输协议，是一种详细规定了浏览器和万维网服务器之间互相通信的规则，它是万维网交换信息的基础，它允许将HTML（超文本标记语言）文档从Web服务器传送到Web浏览器。\n\nHTTP协议目前最新版的版本是1.1，HTTP是一种无状态的协议，无状态是指Web浏览器与Web服务器之间不需要建立持久的连接，这意味着当一个客户端向服务器端发出请求，然后Web服务器返回响应（Response），连接就被关闭了，在服务器端不保留连接的有关信息。也就是说，HTTP请求只能由客户端发起，而服务器不能主动向客户端发送数据。\n\nHTTP遵循请求（Request）/应答（Response）模型，Web浏览器向Web服务器发送请求时，Web服务器处理请求并返回适当的应答，如图所示。\n\nHTTP使用一种基于消息的模型：客户端发送一条请求消息，而后由服务器返回一条响应消息。"]],[77,77],[489,489]]],[1561257782833,["GJX@GJXAIOU",[[1,163,"**"],[1,195,"**"]],[163,195],[163,199]]],[1561257836074,["GJX@GJXAIOU",[[1,235,"**"],[1,265,"**"]],[235,265],[235,269]]],[1561257845058,["GJX@GJXAIOU",[[1,342,"**"],[1,356,"**"]],[342,356],[342,360]]],[1561257981246,["GJX@GJXAIOU",[[1,466,"**"],[1,473,"**"]],[466,473],[466,477]]],[1561257998948,["GJX@GJXAIOU",[[1,506,"\n"]],[505,505],[506,506]]],[1561257999092,["GJX@GJXAIOU",[[1,507,"\n"]],[506,506],[507,507]]],[1561258000066,["GJX@GJXAIOU",[[1,508,"\n"]],[507,507],[508,508]]],[1561258002807,["GJX@GJXAIOU",[[1,508,"### ()"]],[508,508],[514,514]]],[1561258003742,["GJX@GJXAIOU",[[1,513,"sa"]],[513,513],[515,515]]],[1561258004732,["GJX@GJXAIOU",[[-1,513,"sa"]],[515,515],[513,513]]],[1561258006032,["GJX@GJXAIOU",[[1,513,"一"]],[513,513],[514,514]]],[1561258014108,["GJX@GJXAIOU",[[1,515,"HTTP请求字段"]],[515,515],[523,523]]],[1561258015003,["GJX@GJXAIOU",[[1,524,"\n"]],[523,523],[524,524]]],[1561258022162,["GJX@GJXAIOU",[[1,524,"•POST /test.php HTTP/1.1//请求行\n\n•HOST：www.test.com //请求头\n\n•User-Agent：Mozilla/5.0 （windows NT 6.1；rv：15.0）Gecko/20100101 Firefox/15.0 //空白行，代表请求头结束\n\n•Username=admin&password=admin //请求正文\n\n•"]],[524,524],[712,712]]],[1561258032020,["GJX@GJXAIOU",[[-1,711,"•"]],[712,712],[711,711]]],[1561258032542,["GJX@GJXAIOU",[[1,711,"HTTP请求包括三部分，分别是请求行（请求方法）、请求头（消息报头）和请求正文。\n\nHTTP请求第一行为请求行，由三部分组成，第一部分说明了该请求时POST请求，第二部分是一个斜杠（/login.php），用来说明请求是该域名根目录下的login.php，第三部分说明使用的是HTTP1.1版本。\n\nHTTP请求第二行至空白行为请求头（也被称为消息头）。其中，HOST代表请求主机地址，User-Agent代表浏览器的标识，请求头由客户端自行设定。\n\nHTTP请求第三行为请求正文，请求正文是可选的，它最常出现在POST请求方式中。"]],[711,711],[977,977]]],[1561258036113,["GJX@GJXAIOU",[[1,524,"\n"]],[523,523],[524,524]]],[1561258038184,["GJX@GJXAIOU",[[1,524,"··"]],[524,524],[526,526]]],[1561258039514,["GJX@GJXAIOU",[[-1,524,"··"]],[526,526],[524,524]]],[1561258040950,["GJX@GJXAIOU",[[1,524,"```"]],[524,524],[527,527]]],[1561258040974,["GJX@GJXAIOU",[[1,527,"language\n```\n"]],[527,527],[527,535]]],[1561258043728,["GJX@GJXAIOU",[[-1,536,"```"]],[536,539],[536,536]]],[1561258045807,["GJX@GJXAIOU",[[1,725,"\n"]],[723,723],[724,724]]],[1561258046214,["GJX@GJXAIOU",[[1,724,"```"]],[724,724],[727,727]]],[1561258050554,["GJX@GJXAIOU",[[-1,537,"\n"]],[537,537],[536,536]]],[1561258050671,["GJX@GJXAIOU",[[-1,536,"\n"]],[536,536],[535,535]]],[1561258062107,["GJX@GJXAIOU",[[1,813,"**"],[1,817,"**"]],[813,817],[813,821]]],[1561258067315,["GJX@GJXAIOU",[[1,834,"**"],[1,858,"**"]],[834,858],[834,862]]],[1561258074920,["GJX@GJXAIOU",[[1,915,"**"],[1,927,"**"]],[915,927],[915,931]]],[1561258092982,["GJX@GJXAIOU",[[1,923,"gai"]],[923,923],[926,926]]],[1561258093948,["GJX@GJXAIOU",[[-1,923,"gai"]],[926,926],[923,923]]],[1561258101633,["GJX@GJXAIOU",[[1,923,"该客户机所"]],[923,923],[928,928]]],[1561258110773,["GJX@GJXAIOU",[[1,985,"**"],[1,993,"**"]],[985,993],[985,997]]],[1561258112964,["GJX@GJXAIOU",[[1,1015,"\n"]],[1014,1014],[1015,1015]]],[1561258113093,["GJX@GJXAIOU",[[1,1016,"\n"]],[1015,1015],[1016,1016]]],[1561258125553,["GJX@GJXAIOU",[[1,1016,"### （）"]],[1016,1016],[1022,1022]]],[1561258132985,["GJX@GJXAIOU",[[1,1021,"二"]],[1021,1021],[1022,1022]]],[1561258136040,["GJX@GJXAIOU",[[1,1023,"HTTP"]],[1023,1023],[1027,1027]]],[1561258138897,["GJX@GJXAIOU",[[1,1027,"请求方法"]],[1027,1027],[1031,1031]]],[1561258139158,["GJX@GJXAIOU",[[1,1032,"\n"]],[1031,1031],[1032,1032]]],[1561258140541,["GJX@GJXAIOU",[[1,1032,"```"]],[1032,1032],[1035,1035]]],[1561258142631,["GJX@GJXAIOU",[[-1,1032,"```"]],[1035,1035],[1032,1032]]],[1561258143874,["GJX@GJXAIOU",[[1,1032,"```"]],[1032,1032],[1035,1035]]],[1561258147185,["GJX@GJXAIOU",[[-1,1032,"```"]],[1032,1035],[1032,1032]]],[1561258152938,["GJX@GJXAIOU",[[1,1032,"GET：GET方法用于获取请求页面的指定信息。如果请求资源为动态脚本（非HTML），那么返回文本是Web容器解析后的HTML源代码。GET请求没有消息主体，因此在消息头后的空白行是没有其他数据。\n\nPOST：POST方法也与GET方法相似，但最大的区别在于，GET方法没有请求内容，而POST是有请求内容的。\n\nHEAD：这个请求的功能与GET请求相似，不同之处在于服务器不会再其响应中返回消息主体，因此，这种方法可用于检查某一资源在向其提交GET请求前是否存在。\n\nPUT：PUT方法用于请求服务器把请求中的实体存储在请求资源下，如果请求资源已经在服务器中存在，那么将会用此请求中的数据替换原先的数据。向服务器上传指定的资源。"]],[1032,1032],[1346,1346]]],[1561258857469,["GJX@GJXAIOU",[[1,1036,"**"],[1,1054,"**"]],[1036,1054],[1036,1058]]],[1561258862747,["GJX@GJXAIOU",[[1,1061,"**"],[1,1101,"**"]],[1061,1101],[1061,1105]]],[1561258870223,["GJX@GJXAIOU",[[1,1111,"**"],[1,1117,"**"]],[1111,1117],[1111,1121]]],[1561258881625,["GJX@GJXAIOU",[[1,1186,"**"],[1,1197,"**"]],[1186,1197],[1186,1201]]],[1561258920788,["GJX@GJXAIOU",[[1,1256,"**"],[1,1279,"**"]],[1256,1279],[1256,1283]]],[1561259079984,["GJX@GJXAIOU",[[1,1297,"**"],[1,1317,"**"]],[1297,1317],[1297,1321]]],[1561259084028,["GJX@GJXAIOU",[[1,1350,"**"],[1,1352,"**"]],[1350,1352],[1350,1356]]],[1561259103800,["GJX@GJXAIOU",[[1,1375,"\n"]],[1374,1374],[1375,1375]]],[1561259103942,["GJX@GJXAIOU",[[1,1376,"\n"]],[1375,1375],[1376,1376]]],[1561259104070,["GJX@GJXAIOU",[[1,1377,"\n"]],[1376,1376],[1377,1377]]],[1561259104169,["GJX@GJXAIOU",[[1,1378,"\n"]],[1377,1377],[1378,1378]]],[1561259104293,["GJX@GJXAIOU",[[1,1379,"\n"]],[1378,1378],[1379,1379]]],[1561259106843,["GJX@GJXAIOU",[[1,1379,"### （）"]],[1379,1379],[1385,1385]]],[1561259110049,["GJX@GJXAIOU",[[1,1384,"三"]],[1384,1384],[1385,1385]]],[1561259116293,["GJX@GJXAIOU",[[1,1386,"HTTP响应"]],[1386,1386],[1392,1392]]],[1561259117762,["GJX@GJXAIOU",[[1,1393,"\n"]],[1392,1392],[1393,1393]]],[1561259129504,["GJX@GJXAIOU",[[1,1394,"\n"]],[1393,1393],[1394,1394]]],[1561259133344,["GJX@GJXAIOU",[[-1,1394,"\n"],[1,1395,"`"]],[1394,1394],[1395,1395]]],[1561259133711,["GJX@GJXAIOU",[[1,1395,"``"]],[1395,1395],[1397,1397]]],[1561259133736,["GJX@GJXAIOU",[[1,1397,"language\n```\n"]],[1397,1397],[1397,1405]]],[1561259135132,["GJX@GJXAIOU",[[-1,1397,"language"],[1,1405,"\n"]],[1397,1405],[1398,1398]]],[1561259135984,["GJX@GJXAIOU",[[1,1398,"•HTTP/1.1 200 OK //响应行\n\n•Date: Sun, 15 Nov 2015 11:02:04 GMT //响应头\n\n•Server: bfe/1.0.8.9\n\n•Content-Length: 2605\n\n•Content-Type: application/javascript\n\n•Cache-Control: max-age=315360000\n\n•Expires: Fri, 13 Jun 2025 09:54:00 GMT\n\n•Content-Encoding: gzip\n\n•Set-Cookie: H_PS_PSSID=2022_1438_1944_1788; path=/; domain=test.com\n\n•Connection: keep-alive\n\n• //空白行，代表响应头结束\n\n•<html>\n\n•<head><title> Index.html </title></head> //响应正文消息主题\n\n•"]],[1398,1398],[1827,1827]]],[1561259140317,["GJX@GJXAIOU",[[-1,1762,"\n"]],[1762,1762],[1761,1761]]],[1561259141207,["GJX@GJXAIOU",[[-1,1745,"\n"]],[1745,1745],[1744,1744]]],[1561259141948,["GJX@GJXAIOU",[[-1,1720,"\n"]],[1720,1720],[1719,1719]]],[1561259142676,["GJX@GJXAIOU",[[-1,1650,"\n"]],[1650,1650],[1649,1649]]],[1561259143332,["GJX@GJXAIOU",[[-1,1625,"\n"]],[1625,1625],[1624,1624]]],[1561259144533,["GJX@GJXAIOU",[[-1,1584,"\n"]],[1584,1584],[1583,1583]]],[1561259145334,["GJX@GJXAIOU",[[-1,1549,"\n"]],[1549,1549],[1548,1548]]],[1561259146045,["GJX@GJXAIOU",[[-1,1510,"\n"]],[1510,1510],[1509,1509]]],[1561259146776,["GJX@GJXAIOU",[[-1,1487,"\n"]],[1487,1487],[1486,1486]]],[1561259147484,["GJX@GJXAIOU",[[-1,1465,"\n"]],[1465,1465],[1464,1464]]],[1561259148205,["GJX@GJXAIOU",[[-1,1421,"\n"]],[1421,1421],[1420,1420]]],[1561259149372,["GJX@GJXAIOU",[[-1,1814,"\n"]],[1814,1814],[1813,1813]]],[1561259150237,["GJX@GJXAIOU",[[-1,1760,"\n"]],[1760,1760],[1759,1759]]],[1561259151045,["GJX@GJXAIOU",[[-1,1813,"•"]],[1814,1814],[1813,1813]]],[1561259151467,["GJX@GJXAIOU",[[-1,1813,"\n"]],[1813,1813],[1812,1812]]],[1561259155803,["GJX@GJXAIOU",[[1,1817,"\n"]],[1816,1816],[1817,1817]]],[1561259161640,["GJX@GJXAIOU",[[1,1818,"\n"]],[1817,1817],[1818,1818]]],[1561259162106,["GJX@GJXAIOU",[[1,1818,"HTTP响应的第一行为响应行，其中有HTTP版本（HTTP/1.1）、状态码（200）以及消息“OK”。\n\n第二行至末尾的空白行为响应头，由服务器向客户端发送。\n\n消息头之后是响应正文，是服务器向客户端发送的HTML数据。"]],[1818,1818],[1929,1929]]],[1561259175967,["GJX@GJXAIOU",[[1,1863,"**"],[1,1865,"**"]],[1863,1865],[1863,1869]]],[1561259192087,["GJX@GJXAIOU",[[1,1910,"**"],[1,1932,"**"]],[1910,1932],[1910,1936]]],[1561259200482,["GJX@GJXAIOU",[[1,1938,"\n"]],[1937,1937],[1938,1938]]],[1561259200630,["GJX@GJXAIOU",[[1,1939,"\n"]],[1938,1938],[1939,1939]]],[1561259206392,["GJX@GJXAIOU",[[-1,1939,"\n"],[1,1940,"-"]],[1939,1939],[1940,1940]]],[1561259210463,["GJX@GJXAIOU",[[1,1940," HTTp"]],[1940,1940],[1945,1945]]],[1561259211746,["GJX@GJXAIOU",[[-1,1944,"p"]],[1945,1945],[1944,1944]]],[1561259213368,["GJX@GJXAIOU",[[1,1944,"Pzh"]],[1944,1944],[1947,1947]]],[1561259213857,["GJX@GJXAIOU",[[-1,1945,"zh"]],[1947,1947],[1945,1945]]],[1561259218847,["GJX@GJXAIOU",[[1,1945,"状态码\n- "]],[1945,1945],[1951,1951]]],[1561259219793,["GJX@GJXAIOU",[[-1,1950," "]],[1951,1951],[1950,1950]]],[1561259221292,["GJX@GJXAIOU",[[-1,1949,"-"],[1,1950,"\n"]],[1950,1950],[1949,1949]]],[1561259232794,["GJX@GJXAIOU",[[1,1949,"• 五种状态码：\n\n•1xx：信息提示，表示请求已被成功接收，继续处理。\n\n•2xx：请求被成功提交。但不能说明被接收\n\n•3xx：客户端被重定向到其他资源。\n\n•4xx：客户端错误状态码，格式错误或者不存在资源。\n\n•5xx：描述服务器内部错误。"]],[1949,1949],[2073,2073]]],[1561259237750,["GJX@GJXAIOU",[[-1,1958,"\n"]],[1958,1958],[1957,1957]]],[1561259242052,["GJX@GJXAIOU",[[1,1949,"\n"]],[1949,1949],[1950,1950]]],[1561259245741,["GJX@GJXAIOU",[[-1,1986,"\n"]],[1986,1986],[1985,1985]]],[1561259246732,["GJX@GJXAIOU",[[-1,2008,"\n"]],[2008,2008],[2007,2007]]],[1561259247506,["GJX@GJXAIOU",[[-1,2027,"\n"]],[2027,2027],[2026,2026]]],[1561259248231,["GJX@GJXAIOU",[[-1,2054,"\n"]],[2054,2054],[2053,2053]]],[1561259250449,["GJX@GJXAIOU",[[1,1959,"  "],[1,1986,"  "],[1,2008,"  "],[1,2027,"  "],[1,2054,"  "]],[1959,2069],[1959,2079]]],[1561259254794,["GJX@GJXAIOU",[[-1,1961,"•"]],[1962,1962],[1961,1961]]],[1561259256692,["GJX@GJXAIOU",[[-1,1989,"•"]],[1990,1990],[1989,1989]]],[1561259257585,["GJX@GJXAIOU",[[-1,2012,"•"]],[2013,2013],[2012,2012]]],[1561259258473,["GJX@GJXAIOU",[[-1,2032,"•"]],[2033,2033],[2032,2032]]],[1561259259324,["GJX@GJXAIOU",[[-1,2060,"•"]],[2061,2061],[2060,2060]]],[1561259263691,["GJX@GJXAIOU",[[-1,1950,"• "]],[1952,1952],[1950,1950]]],[1561259265959,["GJX@GJXAIOU",[[1,1950,"  - "]],[1950,1950],[1954,1954]]],[1561259271083,["GJX@GJXAIOU",[[1,1963,"- "],[1,1991,"- "],[1,2014,"- "],[1,2033," -"],[1,2061," -"]],[1963,2076],[1965,2086]]],[1561259272586,["GJX@GJXAIOU",[[1,1963,"  "],[1,1993,"  "],[1,2016," "],[1,2018," "],[1,2038,"  "],[1,2068,"  "]],[1965,2086],[1967,2096]]],[1561259285614,["GJX@GJXAIOU",[[1,2097,"    - \n"]],[2096,2096],[2103,2103]]],[1561259285758,["GJX@GJXAIOU",[[-1,2097,"    - "]],[2103,2103],[2098,2098]]],[1561259288874,["GJX@GJXAIOU",[[1,2098,"  •常见的状态码描述如下：\n\n•200：客户端请求成功，是最常见的状态。\n\n•302：重定向。\n\n•404：请求资源不存在，是最常见的状态。\n\n•400：客户端请求有语法错误，不能被服务器所理解。\n\n•401：请求未经授权。\n\n•403：服务器收到请求，但是拒绝提供服务。\n\n•500：服务器内部错误，是最常见的状态。\n\n•503：服务器当前不能处理客户端的请求。"]],[2098,2098],[2281,2281]]],[1561259296532,["GJX@GJXAIOU",[[-1,2114,"•"]],[2115,2115],[2114,2114]]],[1561259301248,["GJX@GJXAIOU",[[-1,2136,"•"]],[2137,2137],[2136,2136]]],[1561259302304,["GJX@GJXAIOU",[[-1,2145,"\n"]],[2145,2145],[2144,2144]]],[1561259303049,["GJX@GJXAIOU",[[-1,2135,"\n"]],[2135,2135],[2134,2134]]],[1561259306899,["GJX@GJXAIOU",[[-1,2144,"•"]],[2145,2145],[2144,2144]]],[1561259307841,["GJX@GJXAIOU",[[-1,2165,"\n"]],[2165,2165],[2164,2164]]],[1561259310833,["GJX@GJXAIOU",[[-1,2165,"•"]],[2166,2166],[2165,2165]]],[1561259311957,["GJX@GJXAIOU",[[-1,2191,"\n"]],[2191,2191],[2190,2190]]],[1561259314122,["GJX@GJXAIOU",[[-1,2191,"•"]],[2192,2192],[2191,2191]]],[1561259315016,["GJX@GJXAIOU",[[-1,2203,"\n"]],[2203,2203],[2202,2202]]],[1561259318776,["GJX@GJXAIOU",[[-1,2203,"•"]],[2204,2204],[2203,2203]]],[1561259319646,["GJX@GJXAIOU",[[-1,2225,"\n"]],[2225,2225],[2224,2224]]],[1561259322301,["GJX@GJXAIOU",[[-1,2225,"•"]],[2226,2226],[2225,2225]]],[1561259323276,["GJX@GJXAIOU",[[-1,2246,"\n"]],[2246,2246],[2245,2245]]],[1561259326126,["GJX@GJXAIOU",[[-1,2246,"•"]],[2247,2247],[2246,2246]]],[1561259329051,["GJX@GJXAIOU",[[-1,2113,"\n"]],[2113,2113],[2112,2112]]],[1561259331149,["GJX@GJXAIOU",[[-1,2098,"  •"]],[2101,2101],[2098,2098]]],[1561259333625,["GJX@GJXAIOU",[[1,2098,"  - "]],[2098,2098],[2102,2102]]],[1561259336878,["GJX@GJXAIOU",[[1,2114,"  - "],[1,2135,"  - "],[1,2144,"  - "],[1,2165,"  - "],[1,2191,"  - "],[1,2203,"  - "],[1,2225,"  - "],[1,2246,"  - "]],[2114,2266],[2118,2298]]],[1561259337221,["GJX@GJXAIOU",[[1,2116,"  "],[1,2139,"  "],[1,2154,"  "],[1,2177,"  "],[1,2209,"  "],[1,2223,"  "],[1,2251,"  "],[1,2274,"  "]],[2118,2298],[2120,2314]]],[1561259337433,["GJX@GJXAIOU",[[1,2118,"  "],[1,2141,"  "],[1,2160,"  "],[1,2183,"  "],[1,2219,"  "],[1,2233,"  "],[1,2265,"  "],[1,2288,"  "]],[2120,2314],[2122,2330]]],[1561259357178,["GJX@GJXAIOU",[[1,1982,"**"],[1,1986,"**"]],[1982,1986],[1982,1990]]],[1561259360708,["GJX@GJXAIOU",[[1,2010,"**"],[1,2014,"**"]],[2010,2014],[2010,2018]]],[1561259397981,["GJX@GJXAIOU",[[1,2042,"**"],[1,2045,"**"]],[2042,2045],[2042,2049]]],[1561259411803,["GJX@GJXAIOU",[[1,2184,"**"],[1,2191,"**"]],[2184,2191],[2184,2195]]],[1561259411837,["GJX@GJXAIOU",[[-1,2184,"**"],[1,2186,"•常见的状态码描述如下：\n\n•200：客户端请求成功，是最常见的状态。\n\n•302：重定向。\n\n•404："],[-1,2193,"**"],[1,2195,"，是最常见的状态。\n\n•400：客户端请求有语法错误，不能被服务器所理解。\n\n•401：请求未经授权。\n\n•403：服务器收到请求，但是拒绝提供服务。\n\n•500：服务器内部错误，是最常见的状态。\n\n•503：服务器当前不能处理客户端的请求。"]],[2184,2195],[2365,2365]]],[1561259414453,["GJX@GJXAIOU",[[1,2184,"**"],[-1,2184,"•常见的状态码描述如下：\n\n•200：客户端请求成功，是最常见的状态。\n\n•302：重定向。\n\n•404："],[1,2244,"**"],[-1,2244,"，是最常见的状态。\n\n•400：客户端请求有语法错误，不能被服务器所理解。\n\n•401：请求未经授权。\n\n•403：服务器收到请求，但是拒绝提供服务。\n\n•500：服务器内部错误，是最常见的状态。\n\n•503：服务器当前不能处理客户端的请求。"]],[2365,2365],[2184,2195]]],[1561259439474,["GJX@GJXAIOU",[[1,2281,"**"],[1,2287,"**"]],[2281,2287],[2281,2291]]],[1561268712257,["GJX@GJXAIOU",[[1,2350,"\n      - "]],[2350,2350],[2359,2359]]],[1561268712392,["GJX@GJXAIOU",[[-1,2351,"      - "],[1,2359,"\n\n"]],[2359,2359],[2352,2352]]],[1561268712536,["GJX@GJXAIOU",[[1,2353,"\n"]],[2352,2352],[2353,2353]]],[1561268712664,["GJX@GJXAIOU",[[1,2354,"\n"]],[2353,2353],[2354,2354]]],[1561268724125,["GJX@GJXAIOU",[[1,2354,"### HTTP消息头"]],[2354,2354],[2365,2365]]],[1561268724530,["GJX@GJXAIOU",[[1,2366,"\n"]],[2365,2365],[2366,2366]]],[1561268725176,["GJX@GJXAIOU",[[1,2367,"\n"]],[2366,2366],[2367,2367]]],[1561268731996,["GJX@GJXAIOU",[[1,2366,"1.请求头：请求头只出现在HTTP请求中，请求报头允许客户端向服务端传递请求的附加信息和客户端自身信息。\n\n2.响应头：响应头是服务器根据请求向客户端发送的HTTP头。"]],[2366,2366],[2450,2450]]],[1561268736928,["GJX@GJXAIOU",[[1,2372,"**"],[1,2386,"**"]],[2372,2386],[2372,2390]]],[1561268792531,["GJX@GJXAIOU",[[1,2456,"\n"]],[2454,2454],[2455,2455]]],[1561268792650,["GJX@GJXAIOU",[[1,2457,"\n"]],[2455,2455],[2456,2456]]],[1561268793122,["GJX@GJXAIOU",[[1,2458,"\n"]],[2456,2456],[2457,2457]]],[1561268799998,["GJX@GJXAIOU",[[1,2457,"- 常见的请求头："]],[2457,2457],[2466,2466]]],[1561268800241,["GJX@GJXAIOU",[[1,2467,"- \n"]],[2466,2466],[2469,2469]]],[1561268801338,["GJX@GJXAIOU",[[-1,2467,"- "]],[2469,2469],[2467,2467]]],[1561268810717,["GJX@GJXAIOU",[[-1,2468,"\n"],[1,2469,"`"]],[2468,2468],[2469,2469]]],[1561268811066,["GJX@GJXAIOU",[[1,2469,"``"]],[2469,2469],[2471,2471]]],[1561268811096,["GJX@GJXAIOU",[[1,2471,"language\n```\n"]],[2471,2471],[2471,2479]]],[1561268812281,["GJX@GJXAIOU",[[-1,2471,"language"],[1,2479,"\n"]],[2471,2479],[2472,2472]]],[1561268813052,["GJX@GJXAIOU",[[1,2472,"•Host\n\n•User-Agent\n\n•Referer\n\n•Cookie\n\n•Accept\n\n•"]],[2472,2472],[2521,2521]]],[1561268816594,["GJX@GJXAIOU",[[-1,2520,"•\n"]],[2519,2521],[2519,2519]]],[1561268817980,["GJX@GJXAIOU",[[-1,2510,"\n"]],[2510,2510],[2509,2509]]],[1561268818699,["GJX@GJXAIOU",[[-1,2501,"\n"]],[2501,2501],[2500,2500]]],[1561268819377,["GJX@GJXAIOU",[[-1,2491,"\n"]],[2491,2491],[2490,2490]]],[1561268820106,["GJX@GJXAIOU",[[-1,2478,"\n"]],[2478,2478],[2477,2477]]],[1561268820865,["GJX@GJXAIOU",[[-1,2515,"\n"]],[2515,2515],[2514,2514]]],[1561268822481,["GJX@GJXAIOU",[[1,2519,"\n"]],[2518,2518],[2519,2519]]],[1561268828934,["GJX@GJXAIOU",[[1,2519,"①Host 请求报头域主要用于指定被请求资源的Internet主机和端口。\n\n②User-Agent 请求报头域允许客户端将它的操作系统、浏览器和其他属性告诉服务器\n\n③Referer  包含一个URL，代表当前访问URL的上一个URL，也就是说，用户是从什么地方来到本页面。当前请求的原始URL地址。\n\n④Cookie 是非常重要的请求头，常用来表示请求者的身份等。\n\n⑤Accept 这个消息头用于告诉服务器客户端愿意接受那些内容，比如图像类，办公文档格式等等。"]],[2519,2519],[2752,2752]]],[1561268836177,["GJX@GJXAIOU",[[-1,2557,"\n"]],[2557,2557],[2556,2556]]],[1561268838042,["GJX@GJXAIOU",[[-1,2601,"\n"]],[2601,2601],[2600,2600]]],[1561268838897,["GJX@GJXAIOU",[[-1,2669,"\n"]],[2669,2669],[2668,2668]]],[1561268839562,["GJX@GJXAIOU",[[-1,2701,"\n"]],[2701,2701],[2700,2700]]],[1561268849297,["GJX@GJXAIOU",[[1,2534,"**"],[1,2555,"**"]],[2534,2555],[2534,2559]]],[1561268926408,["GJX@GJXAIOU",[[1,2623,"**"],[1,2639,"**"]],[2623,2639],[2623,2643]]],[1561268933945,["GJX@GJXAIOU",[[1,2698,"**"],[1,2706,"**"]],[2698,2706],[2698,2710]]],[1561268940865,["GJX@GJXAIOU",[[1,2733,"**"],[1,2744,"**"]],[2733,2744],[2733,2748]]],[1561268951026,["GJX@GJXAIOU",[[1,2459,"**"],[1,2465,"**"]],[2459,2465],[2459,2469]]],[1561268961593,["GJX@GJXAIOU",[[1,2358,"()"]],[2358,2358],[2360,2360]]],[1561268963620,["GJX@GJXAIOU",[[1,2359,"四 "]],[2359,2359],[2361,2361]]],[1561268967092,["GJX@GJXAIOU",[[1,2773,"\n"]],[2772,2772],[2773,2773]]],[1561268967218,["GJX@GJXAIOU",[[1,2774,"\n"]],[2773,2773],[2774,2774]]],[1561268967579,["GJX@GJXAIOU",[[-1,2774,"\n"],[1,2775,"-"]],[2774,2774],[2775,2775]]],[1561268970594,["GJX@GJXAIOU",[[1,2775," （"]],[2775,2775],[2777,2777]]],[1561268971272,["GJX@GJXAIOU",[[-1,2775," （"]],[2777,2777],[2775,2775]]],[1561268972512,["GJX@GJXAIOU",[[1,2775," ****"]],[2775,2775],[2778,2778]]],[1561268978412,["GJX@GJXAIOU",[[1,2778,"常见的响应头"]],[2778,2778],[2784,2784]]],[1561268980256,["GJX@GJXAIOU",[[1,2786,"\n- "]],[2786,2786],[2789,2789]]],[1561268981600,["GJX@GJXAIOU",[[1,2787,"  "]],[2789,2789],[2791,2791]]],[1561268985651,["GJX@GJXAIOU",[[-1,2789,"- "]],[2791,2791],[2789,2789]]],[1561268992153,["GJX@GJXAIOU",[[1,2789,"``"]],[2789,2789],[2791,2791]]],[1561268993122,["GJX@GJXAIOU",[[-1,2789,"``"]],[2791,2791],[2789,2789]]],[1561268994080,["GJX@GJXAIOU",[[-1,2787,"  "],[1,2789,"\n\n"]],[2789,2789],[2788,2788]]],[1561268994324,["GJX@GJXAIOU",[[-1,2788,"\n"],[1,2789,"`"]],[2788,2788],[2789,2789]]],[1561268994737,["GJX@GJXAIOU",[[1,2789,"``"]],[2789,2789],[2791,2791]]],[1561268994766,["GJX@GJXAIOU",[[1,2791,"language\n```\n"]],[2791,2791],[2791,2799]]],[1561268995768,["GJX@GJXAIOU",[[-1,2791,"language"],[1,2799,"\n"]],[2791,2799],[2792,2792]]],[1561268996300,["GJX@GJXAIOU",[[1,2792,"•Server\n\n•Location\n\n•Content-Type\n\n•Content-Encoding\n\n•Content-Length\n\n•Connection\n\n•"]],[2792,2792],[2877,2877]]],[1561268999552,["GJX@GJXAIOU",[[-1,2876,"•\n"]],[2875,2877],[2875,2875]]],[1561269000225,["GJX@GJXAIOU",[[-1,2862,"\n"]],[2862,2862],[2861,2861]]],[1561269000911,["GJX@GJXAIOU",[[-1,2845,"\n"]],[2845,2845],[2844,2844]]],[1561269001651,["GJX@GJXAIOU",[[-1,2826,"\n"]],[2826,2826],[2825,2825]]],[1561269002216,["GJX@GJXAIOU",[[-1,2811,"\n"]],[2811,2811],[2810,2810]]],[1561269002879,["GJX@GJXAIOU",[[-1,2800,"\n"]],[2800,2800],[2799,2799]]],[1561269005059,["GJX@GJXAIOU",[[1,2875,"\n"]],[2874,2874],[2875,2875]]],[1561269012065,["GJX@GJXAIOU",[[1,2875,"①Server 服务器使用的Web服务器名称。\n\n②Location 服务器通过这个头告诉浏览器去访问哪个页面，浏览器接收到这个请求之后，通常会立刻访问Location头所指向的页面。用于在重定向响应中说明重定向的目标地址。\n\n③Content-Type 这个消息头用于规定主体的内容类型。例如，HTML文档的内容类型text/html。\n\n④Content-Encoding 这个消息头为消息主体中的内容指定编码形式，一些应用程序使用它来压缩响应以加快传输速度。\n\n⑤Content-Length 消息头规定消息主体的字节长度。实体头用于指明实体正文的长度，以字节方式存储的十进制数字来表示。\n\n⑥Connection 允许发送指定连接的选项。"]],[2875,2875],[3198,3198]]],[1561269015407,["GJX@GJXAIOU",[[-1,2870,"\n"]],[2870,2870],[2869,2869]]],[1561269050808,["GJX@GJXAIOU",[[1,2909,"**"],[1,2929,"**"]],[2909,2929],[2909,2933]]],[1561269057129,["GJX@GJXAIOU",[[1,2970,"**"],[1,2989,"**"]],[2970,2989],[2970,2993]]],[1561269064092,["GJX@GJXAIOU",[[1,3017,"**"],[1,3026,"**"]],[3017,3026],[3017,3030]]],[1561269073634,["GJX@GJXAIOU",[[1,3089,"**"],[1,3095,"**"]],[3089,3095],[3089,3099]]],[1561269080921,["GJX@GJXAIOU",[[1,3110,"**"],[1,3121,"**"]],[3110,3121],[3110,3125]]],[1561269085307,["GJX@GJXAIOU",[[1,3149,"**"],[1,3158,"**"]],[3149,3158],[3149,3162]]],[1561269088762,["GJX@GJXAIOU",[[1,3186,"**"],[1,3189,"**"]],[3186,3189],[3186,3193]]],[1561269093945,["GJX@GJXAIOU",[[1,3217,"**"],[1,3224,"**"]],[3217,3224],[3217,3228]]],[1561269129985,["GJX@GJXAIOU",[[1,3230,"\n"]],[3229,3229],[3230,3230]]],[1561269130123,["GJX@GJXAIOU",[[1,3231,"\n"]],[3230,3230],[3231,3231]]],[1561269300415,["GJX@GJXAIOU",[[1,3231,"![拦截HTTP请求的分析点]($resource/%E6%8B%A6%E6%88%AAHTTP%E8%AF%B7%E6%B1%82%E7%9A%84%E5%88%86%E6%9E%90%E7%82%B9.png)\n"]],[3231,3231],[3339,3339]]],[1561269303514,["GJX@GJXAIOU",[[1,3340,"\n"]],[3339,3339],[3340,3340]]],[1561269314553,["GJX@GJXAIOU",[[1,3341,"\n"]],[3340,3340],[3341,3341]]],[1561269314699,["GJX@GJXAIOU",[[1,3342,"\n"]],[3341,3341],[3342,3342]]],[1561269332722,["GJX@GJXAIOU",[[1,3342,"## er"]],[3342,3342],[3347,3347]]],[1561269333385,["GJX@GJXAIOU",[[-1,3345,"er"]],[3347,3347],[3345,3345]]],[1561269342735,["GJX@GJXAIOU",[[1,3345,"二、回话状态"]],[3345,3345],[3351,3351]]],[1561269345762,["GJX@GJXAIOU",[[-1,3346,"、回话状态"]],[3351,3351],[3346,3346]]],[1561269349239,["GJX@GJXAIOU",[[1,3346,"、回话"]],[3346,3346],[3349,3349]]],[1561269350060,["GJX@GJXAIOU",[[-1,3347,"回话"]],[3349,3349],[3347,3347]]],[1561269361756,["GJX@GJXAIOU",[[1,3347,"会话和会话状态简介"]],[3347,3347],[3356,3356]]],[1561269362234,["GJX@GJXAIOU",[[1,3357,"\n"]],[3356,3356],[3357,3357]]],[1561269362737,["GJX@GJXAIOU",[[1,3358,"\n"]],[3357,3357],[3358,3358]]],[1561269381151,["GJX@GJXAIOU",[[1,3358,"•WEB应用中的会话是指一个客户端浏览器与WEB服务器之间连续发生的一系列请求和响应过程。\n\n•WEB应用的会话状态是指WEB服务器与浏览器在会话过程中产生的状态信息，借助会话状态，WEB服务器能够把属于同一会话中的一系列的请求和响应过程关联起来。"]],[3358,3358],[3482,3482]]],[1561269389762,["GJX@GJXAIOU",[[1,3387,"**"],[1,3402,"**"]],[3387,3402],[3387,3406]]],[1561269402225,["GJX@GJXAIOU",[[1,3441,"**"],[1,3445,"**"]],[3441,3445],[3441,3449]]],[1561269406340,["GJX@GJXAIOU",[[1,3465,"**"],[1,3489,"**"]],[3465,3489],[3465,3493]]],[1561269430536,["GJX@GJXAIOU",[[1,3495,"\n"]],[3494,3494],[3495,3495]]],[1561269430651,["GJX@GJXAIOU",[[1,3496,"\n"]],[3495,3495],[3496,3496]]],[1561269445964,["GJX@GJXAIOU",[[1,3496,"### （）"]],[3496,3496],[3502,3502]]],[1561269448062,["GJX@GJXAIOU",[[1,3501,"一"]],[3501,3501],[3502,3502]]],[1561269457868,["GJX@GJXAIOU",[[1,3503,"如何实现有状态的回话"]],[3503,3503],[3513,3513]]],[1561269458800,["GJX@GJXAIOU",[[-1,3511,"回话"]],[3513,3513],[3511,3511]]],[1561269463863,["GJX@GJXAIOU",[[1,3511,"会话"]],[3511,3511],[3513,3513]]],[1561269464420,["GJX@GJXAIOU",[[1,3514,"\n"]],[3513,3513],[3514,3514]]],[1561269484111,["GJX@GJXAIOU",[[1,3514,"•某个用户从网站的登录页面登入后，再进入购物页面购物时，负责处理购物请求的服务器程序必须知道处理上一次请求的程序所得到的用户信息。\n\n•HTTP协议是一种无状态的协议，WEB服务器本身不能识别出哪些请求是同一个浏览器发出的 ，浏览器的每一次请求都是完全孤立的。\n\n•WEB服务器端程序要能从大量的请求消息中区分出哪些请求消息属于同一个会话，即能识别出来自同一个浏览器的访问请求，这需要浏览器对其发出的每个请求消息都进行标识，属于同一个会话中的请求消息都附带同样的标识号，而属于不同会话的请求消息总是附带不同的标识号，这个标识号就称之为会话ID（SessionID）。\n\n•会话ID可以通过一种称之为Cookie的技术在请求消息中进行传递，也可以作为请求URL的附加参数进行传递。会话ID是WEB服务器为每客户端浏览器分配的一个唯一代号，它通常是在WEB服务器接收到某个浏览器的第一次访问时产生，并且随同响应消息一道发送给浏览器。\n\n•会话过程由WEB服务器端的程序开启，一旦开启了一个会话，服务器端程序就要为这个会话创建一个独立的存储结构来保存该会话的状态信息，同一个会话中的访问请求都可以且只能访问属于该会话的存储结构中的状态信息。"]],[3514,3514],[4031,4031]]],[1561269597282,["GJX@GJXAIOU",[[1,3598,"**"],[1,3625,"**"]],[3598,3625],[3598,3629]]],[1561269609965,["GJX@GJXAIOU",[[1,3730,"**"],[1,3752,"**"]],[3730,3752],[3730,3756]]],[1561269621313,["GJX@GJXAIOU",[[1,3786,"**"],[1,3804,"**"]],[3786,3804],[3786,3808]]],[1561269676337,["GJX@GJXAIOU",[[1,3812,"**"],[1,3864,"**"]],[3812,3864],[3812,3868]]],[1561269701683,["GJX@GJXAIOU",[[1,3947,"**"],[1,3964,"**"]],[3947,3964],[3947,3968]]],[1561269710961,["GJX@GJXAIOU",[[1,4052,"\n"]],[4051,4051],[4052,4052]]],[1561269711113,["GJX@GJXAIOU",[[1,4053,"\n"]],[4052,4052],[4053,4053]]],[1561269714873,["GJX@GJXAIOU",[[1,4054,"\n"]],[4053,4053],[4054,4054]]],[1561269717224,["GJX@GJXAIOU",[[1,4054,"### （）"]],[4054,4054],[4060,4060]]],[1561269722438,["GJX@GJXAIOU",[[1,4059,"二"]],[4059,4059],[4060,4060]]],[1561269726870,["GJX@GJXAIOU",[[1,4061,"cookie"]],[4061,4061],[4067,4067]]],[1561269728881,["GJX@GJXAIOU",[[1,4068,"\n"]],[4067,4067],[4068,4068]]],[1561269734032,["GJX@GJXAIOU",[[1,4068,"•Cookie是一种在客户端保持HTTP状态信息的技术，它好比商场发放的优惠卡。\n\n•Cookie是在浏览器访问WEB服务器的某个资源时，由WEB服务器在HTTP响应消息头中附带传送给浏览器的一片数据，WEB服务器传送给各个客户端浏览器的数据是可以各不相同的。\n\n•一旦WEB浏览器保存了某个Cookie，那么它在以后每次访问该WEB服务器时，都应在HTTP请求头中将这个Cookie回传给WEB服务器。"]],[4068,4068],[4270,4270]]],[1561269764403,["GJX@GJXAIOU",[[1,4079,"**"],[1,4082,"**"]],[4079,4082],[4079,4086]]],[1561269779027,["GJX@GJXAIOU",[[1,4275,"\n"]],[4274,4274],[4275,4275]]],[1561269779821,["GJX@GJXAIOU",[[1,4275,"Cookie是一小段文本信息，伴随着用户请求和页 面在Web服务器和浏览器之间传递。Cookie包含每次 用户访问站点时Web应用程序都可以读取的信息。\n\nCookie只是一段文本，所以它只能保存字符串。"]],[4275,4275],[4377,4377]]],[1561269782168,["GJX@GJXAIOU",[[1,4068,"\n"]],[4067,4067],[4068,4068]]],[1561269803403,["GJX@GJXAIOU",[[1,4068,"[详解见这里](cookie详解)"]],[4068,4068],[4085,4085]]],[1561269806176,["GJX@GJXAIOU",[[1,4086,"\n"]],[4085,4085],[4086,4086]]],[1561269813187,["GJX@GJXAIOU",[[1,4074,"：cookie详解"]],[4074,4074],[4083,4083]]],[1561269827241,["GJX@GJXAIOU",[[1,4381,"**"],[1,4404,"**"]],[4381,4404],[4381,4408]]],[1561269828770,["GJX@GJXAIOU",[[1,4303," "]],[4303,4303],[4304,4304]]],[1561269832388,["GJX@GJXAIOU",[[1,4303,"\n"]],[4302,4302],[4303,4303]]],[1561269843980,["GJX@GJXAIOU",[[1,4412,"\n"]],[4411,4411],[4412,4412]]],[1561269844474,["GJX@GJXAIOU",[[1,4413,"\n"]],[4412,4412],[4413,4413]]],[1561269845185,["GJX@GJXAIOU",[[1,4413,"•WEB服务器通过在HTTP响应消息中增加Set-Cookie响应头字段将Cookie信息发送给浏览器，浏览器则通过在HTTP请求消息中增加Cookie请求头字段将Cookie回传给WEB服务器。\n\n•一个Cookie只能标识一种信息，它至少含有一个标识该信息的名称（NAME）和设置值（VALUE）。\n\n•一个WEB站点可以给一个WEB浏览器发送多个Cookie，一个WEB浏览器也可以存储多个WEB站点提供的Cookie。\n\n•浏览器一般只允许存放300个Cookie，每个站点最多存放20个Cookie，每个Cookie的大小限制为4KB。"]],[4413,4413],[4686,4686]]],[1561269875249,["GJX@GJXAIOU",[[1,4532,"**"],[1,4563,"**"]],[4532,4563],[4532,4567]]],[1561269884608,["GJX@GJXAIOU",[[1,4571,"**"],[1,4629,"**"]],[4571,4629],[4571,4633]]],[1561269925497,["GJX@GJXAIOU",[[1,4695,"\n"]],[4694,4694],[4695,4695]]],[1561269926300,["GJX@GJXAIOU",[[1,4696,"\n"]],[4695,4695],[4696,4696]]],[1561269936549,["GJX@GJXAIOU",[[1,4696,"![cookie传送过程]($resource/cookie%E4%BC%A0%E9%80%81%E8%BF%87%E7%A8%8B.png)\n"]],[4696,4696],[4768,4768]]],[1561269941674,["GJX@GJXAIOU",[[1,4769,"\n"]],[4768,4768],[4769,4769]]],[1561269963149,["GJX@GJXAIOU",[[1,4769,"### （）"]],[4769,4769],[4775,4775]]],[1561269966671,["GJX@GJXAIOU",[[1,4774,"三"]],[4774,4774],[4775,4775]]],[1561269972085,["GJX@GJXAIOU",[[1,4776,"cookie功能特点"]],[4776,4776],[4786,4786]]],[1561269972515,["GJX@GJXAIOU",[[1,4787,"\n"]],[4786,4786],[4787,4787]]],[1561269979349,["GJX@GJXAIOU",[[1,4787,"•存储于浏览器头部/传输于HTTP头部\n\n•写时带属性，读时无属性\n\n•HTTP头中Cookie: user=bob; cart=books;\n\n•\n\n•属性 \n\n•name/value/expire/domain/path/httponly/secure/......\n\n•\n\n•由三元组[name,domain,path]唯一确定cookie\n\n•唯一确定！= cookie唯一\n\n•"]],[4787,4787],[4981,4981]]],[1561269982096,["GJX@GJXAIOU",[[-1,4807,"\n"]],[4807,4807],[4806,4806]]],[1561269984807,["GJX@GJXAIOU",[[-1,4859,"•\n"]],[4859,4861],[4859,4859]]],[1561269985186,["GJX@GJXAIOU",[[-1,4859,"\n"]],[4859,4859],[4858,4858]]],[1561269986065,["GJX@GJXAIOU",[[-1,4858,"\n"]],[4858,4858],[4857,4857]]],[1561269986811,["GJX@GJXAIOU",[[-1,4863,"\n"]],[4863,4863],[4862,4862]]],[1561269989403,["GJX@GJXAIOU",[[-1,4863,"•"]],[4864,4864],[4863,4863]]],[1561269989737,["GJX@GJXAIOU",[[-1,4862,"\n"]],[4863,4863],[4862,4862]]],[1561269991315,["GJX@GJXAIOU",[[-1,4918,"\n"]],[4918,4918],[4917,4917]]],[1561269991640,["GJX@GJXAIOU",[[-1,4916,"•"]],[4917,4917],[4916,4916]]],[1561269992082,["GJX@GJXAIOU",[[-1,4916,"\n"]],[4916,4916],[4915,4915]]],[1561269992549,["GJX@GJXAIOU",[[-1,4915,"\n"]],[4915,4915],[4914,4914]]],[1561269993377,["GJX@GJXAIOU",[[-1,4949,"\n"]],[4949,4949],[4948,4948]]],[1561269994289,["GJX@GJXAIOU",[[-1,4820,"\n"]],[4820,4820],[4819,4819]]],[1561270011388,["GJX@GJXAIOU",[[1,4769,"\n"]],[4768,4768],[4769,4769]]],[1561270011529,["GJX@GJXAIOU",[[1,4770,"\n"]],[4769,4769],[4770,4770]]],[1561270014036,["GJX@GJXAIOU",[[-1,4968,"•"]],[4969,4969],[4968,4968]]],[1561270015468,["GJX@GJXAIOU",[[1,4969,"\n"]],[4968,4968],[4969,4969]]],[1561270017897,["GJX@GJXAIOU",[[1,4969,"### "]],[4969,4969],[4973,4973]]],[1561270019528,["GJX@GJXAIOU",[[-1,4862," "],[1,4863," "],[1,4973,"（）"]],[4973,4973],[4975,4975]]],[1561270022252,["GJX@GJXAIOU",[[1,4974,"四"]],[4974,4974],[4975,4975]]],[1561270039573,["GJX@GJXAIOU",[[1,4976,"set-cookie2响应头字段"]],[4976,4976],[4992,4992]]],[1561270040006,["GJX@GJXAIOU",[[1,4993,"\n"]],[4992,4992],[4993,4993]]],[1561270041989,["GJX@GJXAIOU",[[1,4993,"Set-Cookie2响应头字段"]],[4993,4993],[5009,5009]]],[1561270050012,["GJX@GJXAIOU",[[-1,4993,"Set-Cookie2响应头字段"]],[4993,5009],[4993,4993]]],[1561270050273,["GJX@GJXAIOU",[[1,4994,"\n"]],[4993,4993],[4994,4994]]],[1561270055391,["GJX@GJXAIOU",[[1,4994,"•Set-Cookie2头字段用于指定WEB服务器向客户端传送的Cookie内容，但是按照Netscape规范实现Cookie功能的WEB服务器，使用的是Set-Cookie头字段，两者的语法和作用类似。\n\n•Set-Cookie2头字段中设置的cookie内容是具有一定格式的字符串，它必须以Cookie的名称和设置值开头，格式为“名称=值”，后面可以加上0个或多个以分号（;）和空格分隔的其它可选属性，属性格式一般为“属性名=值”。\n\nØ举例：Set-Cookie2: user=hello; Version=1; Path=/"]],[4994,4994],[5260,5260]]],[1561270065379,["GJX@GJXAIOU",[[1,5161,"**"],[1,5165,"**"]],[5161,5165],[5161,5169]]],[1561270075601,["GJX@GJXAIOU",[[1,5265,"\n"]],[5264,5264],[5265,5265]]],[1561270076215,["GJX@GJXAIOU",[[1,5265,"•除了“名称=值”对必须位于最前面外，其它的可选属性的先后顺序可以任意。\n\n•Cookie的名称只能由普通的英文ASCII字符组成，浏览器不用关心和理解Cookie的值部分的意义和格式，只要WEB服务器能理解值部分的意义就行。\n\n•大多数现有的WEB服务器都是采用某种编码方式将值部分的内容编码成可打印的ASCII字符，RFC 2965规范中没有明确限定编码方式。"]],[5265,5265],[5447,5447]]],[1561270099065,["GJX@GJXAIOU",[[1,5448,"\n"]],[5447,5447],[5448,5448]]],[1561270099193,["GJX@GJXAIOU",[[1,5449,"\n"]],[5448,5448],[5449,5449]]],[1561270100173,["GJX@GJXAIOU",[[1,5450,"\n"]],[5449,5449],[5450,5450]]],[1561270101575,["GJX@GJXAIOU",[[-1,5450,"\n"],[1,5451,"-"]],[5450,5450],[5451,5451]]],[1561270113139,["GJX@GJXAIOU",[[1,5451," 响应头字段中的属性\n- "]],[5451,5451],[5464,5464]]],[1561270113955,["GJX@GJXAIOU",[[-1,5463," "]],[5464,5464],[5463,5463]]],[1561270114378,["GJX@GJXAIOU",[[-1,5462,"-"],[1,5463,"\n"]],[5463,5463],[5462,5462]]],[1561270122017,["GJX@GJXAIOU",[[1,5462,"•Comment=value\n\n•Discard\n\n•Domain=value\n\nØ例如：Set-Cookie2: user=hello; Version=1; Path=/; Domain=.hello.org\n\nØDomain 属性定义可访问该cookie的域名，对一些大的网站，如果希望cookie可以在子网站中共享，可以使用该属性。例如设置Domain为 .bigsite.com ,则sub1.bigsite.com和sub2.bigsite.com都可以访问已保存在客户端的cookie，这时还需要将Path设置为/。\n\n•Max-Age=value  定义cookie的有效时间，以秒计算，当超过有效期后，cookie的信息不会从客户端附加在HTTP消息头中发送到服务端。\n\n•Path=value定义网站上可以访问cookie的页面的路径，缺省状态下Path为产生cookie时的路径，此时cookie可以被该路径以及其子路径下的页面访问；可以将Path设置为/，使cookie可以被网站下所有页面访问。\n\n•Port[=\"portlist\"]\n\n•Secure属性值定义cookie的安全性，当该值为true时必须是HTTPS状态下cookie才从客户端附加在HTTP消息中发送到服务端\n\n•Version=value定义cookie的版本，由cookie的创建者定义。"]],[5462,5462],[6056,6056]]],[1561270124545,["GJX@GJXAIOU",[[-1,5477,"\n"]],[5477,5477],[5476,5476]]],[1561270129128,["GJX@GJXAIOU",[[1,5462,"\n"]],[5462,5462],[5463,5463]]],[1561270130492,["GJX@GJXAIOU",[[1,5462,"·"],[-1,5744," "],[1,5745," "]],[5462,5462],[5463,5463]]],[1561270130906,["GJX@GJXAIOU",[[1,5463,"··"]],[5463,5463],[5465,5465]]],[1561270132251,["GJX@GJXAIOU",[[-1,5462,"···"]],[5465,5465],[5462,5462]]],[1561270133437,["GJX@GJXAIOU",[[1,5462,"```"]],[5462,5462],[5465,5465]]],[1561270133470,["GJX@GJXAIOU",[[1,5465,"language\n```\n"]],[5465,5465],[5465,5473]]],[1561270137215,["GJX@GJXAIOU",[[1,5462,"\n"]],[5462,5462],[5463,5463]]],[1561270139488,["GJX@GJXAIOU",[[1,5475,"\n"]],[5474,5474],[5475,5475]]],[1561270147857,["GJX@GJXAIOU",[[-1,5481,"•Comment=value\n•Discard\n\n•Domain=value\n"]],[5481,5520],[5481,5481]]],[1561270149618,["GJX@GJXAIOU",[[1,5475,"•Comment=value\n•Discard\n\n•Domain=value\n"]],[5475,5475],[5514,5514]]],[1561270151251,["GJX@GJXAIOU",[[-1,5499,"\n"]],[5499,5499],[5498,5498]]],[1561270159715,["GJX@GJXAIOU",[[-1,5519,"\n"]],[5519,5519],[5518,5518]]],[1561270167386,["GJX@GJXAIOU",[[1,5587,"**"],[1,5611,"**"]],[5587,5611],[5587,5615]]],[1561270174339,["GJX@GJXAIOU",[[1,5910,"**"],[1,5941,"**"]],[5910,5941],[5910,5945]]],[1561270184029,["GJX@GJXAIOU",[[1,6081,"\n"]],[6080,6080],[6081,6081]]],[1561270184130,["GJX@GJXAIOU",[[1,6082,"\n"]],[6081,6081],[6082,6082]]],[1561270184281,["GJX@GJXAIOU",[[1,6083,"\n"]],[6082,6082],[6083,6083]]],[1561270194456,["GJX@GJXAIOU",[[1,6083,"### cookie请求头"]],[6083,6083],[6096,6096]]],[1561270195644,["GJX@GJXAIOU",[[1,6096,"字段"]],[6096,6096],[6098,6098]]],[1561270196044,["GJX@GJXAIOU",[[1,6099,"\n"]],[6098,6098],[6099,6099]]],[1561270205774,["GJX@GJXAIOU",[[1,6087,"（）"]],[6087,6087],[6089,6089]]],[1561270212333,["GJX@GJXAIOU",[[1,6088,"无"]],[6088,6088],[6089,6089]]],[1561270213124,["GJX@GJXAIOU",[[-1,6088,"无"]],[6089,6089],[6088,6088]]],[1561270214784,["GJX@GJXAIOU",[[1,6088,"五"]],[6088,6088],[6089,6089]]],[1561270216617,["GJX@GJXAIOU",[[1,6103,"\n"]],[6102,6102],[6103,6103]]],[1561270221495,["GJX@GJXAIOU",[[1,6103,"•Cookie请求头字段中的每个Cookie之间用逗号（,）或分号（;）分隔。\n\n•在Cookie请求头字段中除了必须有“名称=值”的设置外，还可以有Version、Path、Domain、Port等几个属性。\n\n•在Version、Path、Domain、Port等属性名之前，都要增加一个“$”字符作为前缀。\n\n•Version属性只能出现一次，且要位于Cookie请求头字段设置值的最前面，如果需要设置某个Cookie信息的 Path、Domain、Port等属性，它们必须位于该Cookie信息的“名称=值”设置之后。"]],[6103,6103],[6366,6366]]],[1561270227995,["GJX@GJXAIOU",[[1,6245,"**"],[1,6258,"**"]],[6245,6258],[6245,6262]]],[1561270233273,["GJX@GJXAIOU",[[1,6266,"**"],[1,6369,"**"]],[6266,6369],[6266,6373]]],[1561270241715,["GJX@GJXAIOU",[[1,6375,"\n"]],[6374,6374],[6375,6375]]],[1561270243377,["GJX@GJXAIOU",[[1,6375,"•浏览器使用Cookie请求头字段将Cookie信息回送给WEB服务器。\n\n•多个Cookie信息通过一个Cookie请求头字段回送给WEB服务器。 \n\n•浏览器根据下面的几个规则决定是否发送某个Cookie信息：\n\nØ请求的主机名是否与某个存储的Cookie的Domain属性匹配；\n\nØ请求的端口号是否在该Cookie的Port属性列表中；\n\nØ请求的资源路径是否在该Cookie的Path属性指定的目录及子目录中；\n\nØ该Cookie的有效期是否已过。\n\n•Path属性指向子目录的Cookie排在Path属性指向父目录的Cookie之前。   \n\n•举例：Cookie: $Version=1; Course=Java; $Path=/hello/lesson; Course=vc; $Path=/hello\n\n•"]],[6375,6375],[6737,6737]]],[1561270250043,["GJX@GJXAIOU",[[1,6615,"**"],[1,6618,"**"]],[6615,6618],[6615,6622]]],[1561270255489,["GJX@GJXAIOU",[[1,6630,"**"],[1,6631,"**"]],[6630,6631],[6630,6635]]],[1561270261161,["GJX@GJXAIOU",[[1,6643,"**"],[1,6655,"**"]],[6643,6655],[6643,6659]]],[1561270273768,["GJX@GJXAIOU",[[-1,6748,"•"]],[6749,6749],[6748,6748]]],[1561270273945,["GJX@GJXAIOU",[[-1,6748,"\n"]],[6748,6748],[6747,6747]]],[1561270275812,["GJX@GJXAIOU",[[1,6748,"\n"]],[6747,6747],[6748,6748]]],[1561270290217,["GJX@GJXAIOU",[[1,6748,"### "]],[6748,6748],[6752,6752]]],[1561270293750,["GJX@GJXAIOU",[[-1,6449," "],[1,6450," "],[-1,6660,"   "],[1,6663,"   "],[1,6752,"（）"]],[6752,6752],[6754,6754]]],[1561270295736,["GJX@GJXAIOU",[[1,6753,"六"]],[6753,6753],[6754,6754]]],[1561270302267,["GJX@GJXAIOU",[[1,6755,"cookie的安全属性"]],[6755,6755],[6766,6766]]],[1561270302640,["GJX@GJXAIOU",[[1,6767,"\n"]],[6766,6766],[6767,6767]]],[1561270307966,["GJX@GJXAIOU",[[1,6767,"•1 secure属性\n\nØ当设置为true时，表示创建的 Cookie 会被以安全的形式向服务器传输，也就是只能在 HTTPS 连接中被浏览器传递到服务器端进行会话验证，如果是 HTTP 连接则不会传递该信息，所以不会被窃取到Cookie 的具体内容。\n\n•\n\n•2 HttpOnly属性\n\nØ如果在Cookie中设置了\"HttpOnly\"属性，那么通过程序(JS脚本、Applet等)将无法读取到Cookie信息，这样能有效的防止XSS攻击。\n\nØsecure属性是防止信息在传递的过程中被监听捕获后信息泄漏，HttpOnly属性的目的是防止程序获取cookie后进行攻击。\n\nØ这两个属性并不能解决cookie在本机出现的信息泄漏的问题(FireFox的插件FireBug能直接看到cookie的相关信息)。"]],[6767,6767],[7124,7124]]],[1561270309705,["GJX@GJXAIOU",[[1,6748,"\n"]],[6747,6747],[6748,6748]]],[1561270313690,["GJX@GJXAIOU",[[-1,6768,"•"]],[6769,6769],[6768,6768]]],[1561270316059,["GJX@GJXAIOU",[[-1,6768,"1 "]],[6770,6770],[6768,6768]]],[1561270317077,["GJX@GJXAIOU",[[1,6768,"- "]],[6768,6768],[6770,6770]]],[1561270319954,["GJX@GJXAIOU",[[1,6768,"\n"]],[6768,6768],[6769,6769]]],[1561270324208,["GJX@GJXAIOU",[[-1,6897,"•"]],[6898,6898],[6897,6897]]],[1561270326960,["GJX@GJXAIOU",[[-1,6899,"•2 "]],[6902,6902],[6899,6899]]],[1561270328619,["GJX@GJXAIOU",[[1,6899,"- "]],[6899,6899],[6901,6901]]],[1561270330128,["GJX@GJXAIOU",[[-1,6898,"\n"]],[6897,6897],[6896,6896]]],[1561270331216,["GJX@GJXAIOU",[[-1,6897,"\n"]],[6897,6897],[6896,6896]]],[1561270336642,["GJX@GJXAIOU",[[-1,6911,"Ø"]],[6912,6912],[6911,6911]]],[1561270339611,["GJX@GJXAIOU",[[-1,6988,"Ø"]],[6989,6989],[6988,6988]]],[1561270340672,["GJX@GJXAIOU",[[-1,6987,"\n"]],[6987,6987],[6986,6986]]],[1561270342683,["GJX@GJXAIOU",[[-1,7051,"\n"]],[7051,7051],[7050,7050]]],[1561270345136,["GJX@GJXAIOU",[[-1,7051,"Ø"]],[7052,7052],[7051,7051]]],[1561270348464,["GJX@GJXAIOU",[[1,6911,"* "],[1,6987,"* "],[1,7051,"* "]],[6911,7116],[6913,7122]]],[1561270350528,["GJX@GJXAIOU",[[1,6911,"  "],[1,6989,"  "],[1,7055,"  "]],[6913,7122],[6915,7128]]],[1561270354200,["GJX@GJXAIOU",[[-1,6781,"Ø"]],[6782,6782],[6781,6781]]],[1561270355238,["GJX@GJXAIOU",[[1,6781,"  - "]],[6781,6781],[6785,6785]]],[1561270364160,["GJX@GJXAIOU",[[-1,6375,"•"]],[6376,6376],[6375,6375]]],[1561270366928,["GJX@GJXAIOU",[[-1,6411,"\n"]],[6411,6411],[6410,6410]]],[1561270369104,["GJX@GJXAIOU",[[-1,6411,"•"]],[6412,6412],[6411,6411]]],[1561270370344,["GJX@GJXAIOU",[[-1,6448,"\n"]],[6448,6448],[6447,6447]]],[1561270372386,["GJX@GJXAIOU",[[-1,6448,"•"]],[6449,6449],[6448,6448]]],[1561270375984,["GJX@GJXAIOU",[[-1,6479,"Ø"]],[6480,6480],[6479,6479]]],[1561270376783,["GJX@GJXAIOU",[[-1,6512,"\n"]],[6512,6512],[6511,6511]]],[1561270378408,["GJX@GJXAIOU",[[-1,6512,"Ø"]],[6513,6513],[6512,6512]]],[1561270379456,["GJX@GJXAIOU",[[-1,6540,"\n"]],[6540,6540],[6539,6539]]],[1561270380824,["GJX@GJXAIOU",[[-1,6540,"Ø"]],[6541,6541],[6540,6540]]],[1561270382408,["GJX@GJXAIOU",[[-1,6576,"\n"]],[6576,6576],[6575,6575]]],[1561270383827,["GJX@GJXAIOU",[[-1,6576,"Ø"]],[6577,6577],[6576,6576]]],[1561270385527,["GJX@GJXAIOU",[[-1,6594,"•"]],[6595,6595],[6594,6594]]],[1561270387112,["GJX@GJXAIOU",[[-1,6652,"•"]],[6653,6653],[6652,6652]]],[1561270389376,["GJX@GJXAIOU",[[-1,6651,"\n"]],[6651,6651],[6650,6650]]],[1561270393568,["GJX@GJXAIOU",[[1,6375,"* "],[1,6411,"* "],[1,6448,"* "]],[6375,6477],[6377,6483]]],[1561270402246,["GJX@GJXAIOU",[[-1,6375,"* "],[-1,6413,"* "],[-1,6452,"* "]],[6377,6483],[6375,6477]]],[1561270404688,["GJX@GJXAIOU",[[1,6375,"* "],[1,6411,"* "],[1,6448,"* "]],[6375,6477],[6377,6483]]],[1561270407208,["GJX@GJXAIOU",[[1,6375,"\n"]],[6375,6375],[6376,6376]]],[1561270417827,["GJX@GJXAIOU",[[1,6486,"* "],[1,6519,"* "],[1,6547,"* "],[1,6583,"* "]],[6486,6599],[6488,6607]]],[1561270419003,["GJX@GJXAIOU",[[1,6486,"  "],[1,6521,"  "],[1,6551,"  "],[1,6589,"  "]],[6488,6607],[6490,6615]]],[1561270423498,["GJX@GJXAIOU",[[1,6617,"- "]],[6617,6617],[6619,6619]]],[1561270429864,["GJX@GJXAIOU",[[-1,6265,"•"]],[6266,6266],[6265,6265]]],[1561270430422,["GJX@GJXAIOU",[[1,6265,"- "]],[6265,6265],[6267,6267]]],[1561270434073,["GJX@GJXAIOU",[[-1,6210,"•"]],[6211,6211],[6210,6210]]],[1561270434460,["GJX@GJXAIOU",[[1,6210,"- "]],[6210,6210],[6212,6212]]],[1561270436515,["GJX@GJXAIOU",[[-1,6144,"•"]],[6145,6145],[6144,6144]]],[1561270436946,["GJX@GJXAIOU",[[1,6144,"- "]],[6144,6144],[6146,6146]]],[1561270439456,["GJX@GJXAIOU",[[-1,6103,"•"]],[6104,6104],[6103,6103]]],[1561270440014,["GJX@GJXAIOU",[[1,6103,"- "]],[6103,6103],[6105,6105]]],[1561270454995,["GJX@GJXAIOU",[[1,6803,"**"],[1,6807,"**"]],[6803,6807],[6803,6811]]],[1561270461356,["GJX@GJXAIOU",[[1,6844,"**"],[1,6874,"**"]],[6844,6874],[6844,6878]]],[1561270509497,["GJX@GJXAIOU",[[1,6950,"**"],[1,6965,"**"]],[6950,6965],[6950,6969]]],[1561270513073,["GJX@GJXAIOU",[[1,6972,"**"],[1,7018,"**"]],[6972,7018],[6972,7022]]],[1561270518601,["GJX@GJXAIOU",[[1,7042,"**"],[1,7048,"**"]],[7042,7048],[7042,7052]]],[1561270524130,["GJX@GJXAIOU",[[1,7077,"**"],[1,7083,"**"]],[7077,7083],[7077,7087]]],[1561270528930,["GJX@GJXAIOU",[[1,7109,"**"],[1,7114,"**"]],[7109,7114],[7109,7118]]],[1561270533393,["GJX@GJXAIOU",[[1,7130,"**"],[1,7137,"**"]],[7130,7137],[7130,7141]]],[1561270570964,["GJX@GJXAIOU",[[1,7178,"  * \n"]],[7177,7177],[7182,7182]]],[1561270571112,["GJX@GJXAIOU",[[-1,7178,"  * "]],[7182,7182],[7179,7179]]],[1561270571283,["GJX@GJXAIOU",[[1,7179,"\n"]],[7179,7179],[7180,7180]]],[1561270579819,["GJX@GJXAIOU",[[1,7180,"##  "]],[7180,7180],[7183,7183]]],[1561270580414,["GJX@GJXAIOU",[[1,7183,"san"]],[7183,7183],[7186,7186]]],[1561270582096,["GJX@GJXAIOU",[[-1,7183,"san"]],[7186,7186],[7183,7183]]],[1561270592492,["GJX@GJXAIOU",[[1,7183,"三、回话与回话状态简介"]],[7183,7183],[7194,7194]]],[1561270593610,["GJX@GJXAIOU",[[1,7195," "]],[7194,7194],[7195,7195]]],[1561270594045,["GJX@GJXAIOU",[[1,7195,"--"]],[7195,7195],[7197,7197]]],[1561270594347,["GJX@GJXAIOU",[[1,7198," "]],[7197,7197],[7198,7198]]],[1561270602334,["GJX@GJXAIOU",[[1,7198,"色三四年"]],[7198,7198],[7202,7202]]],[1561270603386,["GJX@GJXAIOU",[[-1,7198,"色三四年"]],[7202,7202],[7198,7198]]],[1561270607735,["GJX@GJXAIOU",[[1,7198,"session"]],[7198,7198],[7205,7205]]],[1561270617560,["GJX@GJXAIOU",[[1,3356," -- cookie"]],[3356,3356],[3366,3366]]],[1561270622482,["GJX@GJXAIOU",[[1,7216,"\n\n"]],[7216,7216],[7217,7217]]],[1561270622594,["GJX@GJXAIOU",[[1,7218,"\n"]],[7217,7217],[7218,7218]]],[1561270628015,["GJX@GJXAIOU",[[1,7218,"•使用Cookie和附加URL参数都可以将上一次请求的状态信息传递到下一次请求中，但是如果传递的状态信息较多，将极大降低网络传输效率和增大服务器端程序处理的难度。\n\n•Session技术是一种将会话状态保存在服务器端的技术 ，它可以比喻成是医院发放给病人的病历卡和医院为每个病人保留的病历档案的结合方式 。\n\n•客户端需要接收、记忆和回送 Session的会话标识号，Session可以且通常是借助Cookie来传递会话标识号。"]],[7218,7218],[7432,7432]]],[1561270639155,["GJX@GJXAIOU",[[1,7221,"**"],[1,7235,"**"]],[7221,7235],[7221,7239]]],[1561270643249,["GJX@GJXAIOU",[[1,7265,"**"],[1,7302,"**"]],[7265,7302],[7265,7306]]],[1561270650633,["GJX@GJXAIOU",[[1,7310,"**"],[1,7337,"**"]],[7310,7337],[7310,7341]]],[1561270685298,["GJX@GJXAIOU",[[1,7445,"\n"]],[7444,7444],[7445,7445]]],[1561270685489,["GJX@GJXAIOU",[[1,7446,"\n"]],[7445,7445],[7446,7446]]],[1561270686210,["GJX@GJXAIOU",[[1,7447,"\n"]],[7446,7446],[7447,7447]]],[1561270694036,["GJX@GJXAIOU",[[1,7447,"### （0"]],[7447,7447],[7453,7453]]],[1561270695325,["GJX@GJXAIOU",[[-1,7452,"0"]],[7453,7453],[7452,7452]]],[1561270705590,["GJX@GJXAIOU",[[1,7452,"一）session的跟踪机制"]],[7452,7452],[7466,7466]]],[1561270705947,["GJX@GJXAIOU",[[1,7467,"\n"]],[7466,7466],[7467,7467]]],[1561270706521,["GJX@GJXAIOU",[[1,7468,"\n"]],[7467,7467],[7468,7468]]],[1561270712003,["GJX@GJXAIOU",[[1,7469,"\n"]],[7467,7467],[7468,7468]]],[1561270712286,["GJX@GJXAIOU",[[1,7468,"•Servlet API规范中定义了一个HttpSession接口，HttpSession接口定义了各种管理和操作会话状态的方法。\n\n•HttpSession对象是保持会话状态信息的存储结构，一个客户端在WEB服务器端对应一个各自的HttpSession对象。\n\n•WEB服务器并不会在客户端开始访问它时就创建HttpSession对象，只有客户端访问某个能与客户端开启会话的Servlet程序时，WEB应用程序才会创建一个与该客户端对应的HttpSession对象。\n\n•WEB服务器为HttpSession对象分配一个独一无二的会话标识号，然后在响应消息中将这个会话标识号传递给客户端。客户端需要记住会话标识号，并在后续的每次访问请求中都把这个会话标识号传送给WEB服务器，WEB服务器端程序依据回传的会话标识号就知道这次请求是哪个客户端发出的，从而选择与之对应的HttpSession对象。"]],[7468,7468],[7866,7866]]],[1561270724827,["GJX@GJXAIOU",[[1,7637,"**"],[1,7701,"**"]],[7637,7701],[7637,7705]]],[1561270732657,["GJX@GJXAIOU",[[1,7755,"**"],[1,7760,"**"]],[7755,7760],[7755,7764]]],[1561270740458,["GJX@GJXAIOU",[[1,7876,"\n"]],[7874,7874],[7875,7875]]],[1561270740689,["GJX@GJXAIOU",[[1,7877,"\n"]],[7875,7875],[7876,7876]]],[1561270741217,["GJX@GJXAIOU",[[1,7876,"•WEB应用程序创建了与某个客户端对应的HttpSession对象后，只要没有超出一个限定的空闲时间段，HttpSession对象就驻留在WEB服务器内存之中，该客户端此后访问任意的Servlet程序时，它们都使用与客户端对应的那个已存在的HttpSession对象。\n\n•HttpSession接口中专门定义了一个setAttribute方法来将对象存储到HttpSession对象中，还定义了一个getAttribute方法来检索存储在HttpSession对象中的对象，存储进HttpSession对象中的对象可以被属于同一个会话的各个请求的处理程序共享。\n\n•Session是实现网上商城的购物车的最佳方案，存储在某个客户Session中的一个集合对象就可充当该客户的一个购物车。"]],[7876,7876],[8220,8220]]],[1561270755289,["GJX@GJXAIOU",[[1,7913,"**"],[1,8009,"**"]],[7913,8009],[7913,8013]]],[1561270763866,["GJX@GJXAIOU",[[1,8226,"\n"]],[8224,8224],[8225,8225]]],[1561270764011,["GJX@GJXAIOU",[[1,8227,"\n"]],[8225,8225],[8226,8226]]],[1561270767501,["GJX@GJXAIOU",[[1,8226,"### （）"]],[8226,8226],[8232,8232]]],[1561270769861,["GJX@GJXAIOU",[[1,8231,"二"]],[8231,8231],[8232,8232]]],[1561270779333,["GJX@GJXAIOU",[[1,8233,"session的超时管理"]],[8233,8233],[8245,8245]]],[1561270779669,["GJX@GJXAIOU",[[1,8247,"\n"]],[8245,8245],[8246,8246]]],[1561270780357,["GJX@GJXAIOU",[[1,8248,"\n"]],[8246,8246],[8247,8247]]],[1561270784710,["GJX@GJXAIOU",[[1,8248,"•WEB服务器无法判断当前的客户端浏览器是否还会继续访问，也无法检测客户端浏览器是否关闭，所以，即使客户已经离开或关闭了浏览器，WEB服务器还要保留与之对应的HttpSession对象。\n\n•随着时间的推移而不断增加新的访问客户端，WEB服务器内存中将会因此积累起大量的不再被使用的HttpSession对象，并将最终导致服务器内存耗尽。\n\n•WEB服务器采用“超时限制”的办法来判断客户端是否还在继续访问，如果某个客户端在一定的时间之内没有发出后续请求，WEB服务器则认为客户端已经停止了活动，结束与该客户端的会话并将与之对应的HttpSession对象变成垃圾。"]],[8248,8248],[8531,8531]]],[1561270791898,["GJX@GJXAIOU",[[1,8532,"\n"]],[8531,8531],[8532,8532]]],[1561270792045,["GJX@GJXAIOU",[[1,8533,"\n"]],[8532,8532],[8533,8533]]],[1561270792433,["GJX@GJXAIOU",[[1,8533,"•如果客户端浏览器超时后再次发出访问请求，WEB服务器则认为这是一个新的会话的开始，将为之创建新的HttpSession对象和分配新的会话标识号。\n\n•会话的超时间隔可以在web.xml文件中设置，其默认值由Servlet容器定义。\n\n•  <session-config>\n\n• <session-timeout>30</session-timeout>\n\n• </session-config>"]],[8533,8533],[8732,8732]]],[1561270801984,["GJX@GJXAIOU",[[1,8542,"**"],[1,8574,"**"]],[8542,8574],[8542,8578]]],[1561270809905,["GJX@GJXAIOU",[[1,8623,"**"],[1,8652,"**"]],[8623,8652],[8623,8656]]],[1561270828177,["GJX@GJXAIOU",[[1,8226,"\n"]],[8225,8225],[8226,8226]]],[1561270828323,["GJX@GJXAIOU",[[1,8227,"\n"]],[8226,8226],[8227,8227]]],[1561270832690,["GJX@GJXAIOU",[[1,8743,"\n"]],[8742,8742],[8743,8743]]],[1561270832825,["GJX@GJXAIOU",[[1,8744,"\n"]],[8743,8743],[8744,8744]]],[1561270833049,["GJX@GJXAIOU",[[1,8745,"\n"]],[8744,8744],[8745,8745]]],[1561270833637,["GJX@GJXAIOU",[[1,8746,"\n"]],[8745,8745],[8746,8746]]],[1561270836317,["GJX@GJXAIOU",[[1,8746,"### （）"]],[8746,8746],[8752,8752]]],[1561270839135,["GJX@GJXAIOU",[[1,8751,"三"]],[8751,8751],[8752,8752]]],[1561270852317,["GJX@GJXAIOU",[[1,8753,"利用cookie实现session跟踪"]],[8753,8753],[8772,8772]]],[1561270852910,["GJX@GJXAIOU",[[1,8773,"\n"]],[8772,8772],[8773,8773]]],[1561270853054,["GJX@GJXAIOU",[[1,8774,"\n"]],[8773,8773],[8774,8774]]],[1561270858528,["GJX@GJXAIOU",[[1,8774,"•如果WEB服务器处理某个访问请求时创建了新的HttpSession对象，它将把会话标识号作为一个Cookie项加入到响应消息中，通常情况下，浏览器在随后发出的访问请求中又将会话标识号以Cookie的形式回传给WEB服务器。\n\n•WEB服务器端程序依据回传的会话标识号就知道以前已经为该客户端创建了HttpSession对象，不必再为该客户端创建新的HttpSession对象，而是直接使用与该会话标识号匹配的HttpSession对象，通过这种方式就实现了对同一个客户端的会话状态的跟踪。"]],[8774,8774],[9019,9019]]],[1561270860473,["GJX@GJXAIOU",[[1,9020,"\n"]],[9019,9019],[9020,9020]]],[1561270860796,["GJX@GJXAIOU",[[1,9021,"\n"]],[9020,9020],[9021,9021]]],[1561270870458,["GJX@GJXAIOU",[[1,9022,"\n"]],[9021,9021],[9022,9022]]],[1561270871188,["GJX@GJXAIOU",[[-1,9022,"\n"],[1,9023,"3"]],[9022,9022],[9023,9023]]],[1561270872273,["GJX@GJXAIOU",[[-1,9022,"3"],[1,9023,"\n"]],[9023,9023],[9022,9022]]],[1561270873359,["GJX@GJXAIOU",[[-1,9022,"\n"],[1,9023,"3"]],[9022,9022],[9023,9023]]],[1561270874456,["GJX@GJXAIOU",[[-1,9022,"3"],[1,9023,"\n"]],[9023,9023],[9022,9022]]],[1561270877291,["GJX@GJXAIOU",[[1,9022,"### （）"]],[9022,9022],[9028,9028]]],[1561270879990,["GJX@GJXAIOU",[[1,9027,"四"]],[9027,9027],[9028,9028]]],[1561270881140,["GJX@GJXAIOU",[[1,9029,"利用URL重写实现Session跟踪"]],[9029,9029],[9047,9047]]],[1561270882466,["GJX@GJXAIOU",[[1,9048,"\n"]],[9047,9047],[9048,9048]]],[1561270888093,["GJX@GJXAIOU",[[1,9049,"\n"]],[9048,9048],[9049,9049]]],[1561270888533,["GJX@GJXAIOU",[[1,9049,"•Servlet规范中引入了一种补充的会话管理机制，它允许不支持Cookie的浏览器也可以与WEB服务器保持连续的会话。这种补充机制要求在响应消息的实体内容中必须包含下一次请求的超链接，并将会话标识号作为超链接的URL地址的一个特殊参数。\n\n•将会话标识号以参数形式附加在超链接的URL地址后面的技术称为URL重写。如果在浏览器不支持Cookie或者关闭了Cookie功能的情况下，WEB服务器还要能够与浏览器实现有状态的会话，就必须对所有可能被客户端访问的请求路径（包括超链接、form表单的action属性设置和重定向的URL）进行URL重写。\n\n•"]],[9049,9049],[9326,9326]]],[1561270894257,["GJX@GJXAIOU",[[1,9063,"**"],[1,9074,"**"]],[9063,9074],[9063,9078]]],[1561270904076,["GJX@GJXAIOU",[[1,9080,"**"],[1,9171,"**"]],[9080,9171],[9080,9175]]],[1561270910289,["GJX@GJXAIOU",[[1,9190,"**"],[1,9214,"**"]],[9190,9214],[9190,9218]]],[1561270917600,["GJX@GJXAIOU",[[-1,9337,"•"]],[9338,9338],[9337,9337]]],[1561270920403,["GJX@GJXAIOU",[[1,9338,"\n"]],[9337,9337],[9338,9338]]],[1561270929118,["GJX@GJXAIOU",[[1,9338,"•HttpServletResponse接口中定义了两个用于完成URL重写方法：\n\nØencodeURL方法\n\nØencodeRedirectURL方法"]],[9338,9338],[9414,9414]]],[1561270931569,["GJX@GJXAIOU",[[-1,9380,"Ø"]],[9381,9381],[9380,9380]]],[1561270933945,["GJX@GJXAIOU",[[-1,9338,"•"]],[9339,9339],[9338,9338]]],[1561270935525,["GJX@GJXAIOU",[[1,9338,"- "]],[9338,9338],[9340,9340]]],[1561270938688,["GJX@GJXAIOU",[[1,9381,"- "]],[9381,9381],[9383,9383]]],[1561270940674,["GJX@GJXAIOU",[[1,9381,"  "]],[9383,9383],[9385,9385]]],[1561270944405,["GJX@GJXAIOU",[[-1,9398,"Ø"]],[9399,9399],[9398,9398]]],[1561270945615,["GJX@GJXAIOU",[[1,9398,"- "]],[9398,9398],[9400,9400]]],[1561270945844,["GJX@GJXAIOU",[[1,9398,"  "]],[9400,9400],[9402,9402]]],[1561270949561,["GJX@GJXAIOU",[[-1,9049,"•"]],[9050,9050],[9049,9049]]],[1561270949966,["GJX@GJXAIOU",[[1,9049,"- "]],[9049,9049],[9051,9051]]],[1561270953387,["GJX@GJXAIOU",[[-1,9179,"•"]],[9180,9180],[9179,9179]]],[1561270953861,["GJX@GJXAIOU",[[1,9179,"- "]],[9179,9179],[9181,9181]]],[1561270953977,["GJX@GJXAIOU",[[1,9179,"  "]],[9181,9181],[9183,9183]]],[1561270955927,["GJX@GJXAIOU",[[-1,9180," "]],[9180,9180],[9179,9179]]],[1561270956328,["GJX@GJXAIOU",[[-1,9178,"\n"]],[9179,9179],[9178,9178]]],[1561270957944,["GJX@GJXAIOU",[[1,9178,"\n "]],[9178,9178],[9180,9180]]],[1561270962127,["GJX@GJXAIOU",[[-1,9180," "]],[9181,9181],[9180,9180]]],[1561270968360,["GJX@GJXAIOU",[[-1,9383,"\n"]],[9383,9383],[9382,9382]]],[1561270969307,["GJX@GJXAIOU",[[-1,9399,"\n"]],[9399,9399],[9398,9398]]],[1561270971284,["GJX@GJXAIOU",[[1,9422,"、"]],[9422,9422],[9423,9423]]],[1561270971955,["GJX@GJXAIOU",[[-1,9422,"、"]],[9423,9423],[9422,9422]]],[1561270972673,["GJX@GJXAIOU",[[1,9423,"  - \n"]],[9422,9422],[9427,9427]]],[1561270972865,["GJX@GJXAIOU",[[-1,9423,"  - "]],[9427,9427],[9424,9424]]],[1561270981683,["GJX@GJXAIOU",[[1,9424,"\n"]],[9424,9424],[9425,9425]]],[1561270981797,["GJX@GJXAIOU",[[1,9425,"\n"]],[9425,9425],[9426,9426]]],[1561270983683,["GJX@GJXAIOU",[[1,9426,"#### "]],[9426,9426],[9430,9430]]],[1561270985176,["GJX@GJXAIOU",[[-1,9428,"##"]],[9430,9430],[9428,9428]]],[1561270986342,["GJX@GJXAIOU",[[1,9429," "]],[9428,9428],[9429,9429]]],[1561270996287,["GJX@GJXAIOU",[[1,9429,"四、cookie和session的不同"]],[9429,9429],[9448,9448]]],[1561270996625,["GJX@GJXAIOU",[[1,9448,"\n"]],[9448,9448],[9449,9449]]],[1561270997283,["GJX@GJXAIOU",[[-1,9449," "],[1,9450,"\n"]],[9449,9449],[9450,9450]]],[1561271002323,["GJX@GJXAIOU",[[1,9450,"\n"]],[9450,9450],[9451,9451]]],[1561271002792,["GJX@GJXAIOU",[[1,9451,"•session和cookies同样都是针对单独用户的变量（或者说是对象好像更合适点），不同的用户在访问网站的时候 都会拥有各自的session或者cookies，不同用户之间互不干扰。\n\n•他们的不同点是：\n\n•1，存储位置不同\n\nØsession在服务器端产生，比较安全，但是如果session较多则会影响性能\n\nØcookies在客户端产生，安全性稍弱\n\n•2，生命周期不同\n\nØsession生命周期 在指定的时间（如20分钟）到了之后会结束，不到指定的时间，也会随着浏览器进程的结束而结束。\n\nØcookies默认情况下也随着浏览器进程结束而结束，但如果手动指定时间，则不受浏览器进程结束的影响。 \n\n•"]],[9451,9451],[9758,9758]]],[1561271007386,["GJX@GJXAIOU",[[1,9560,"**"],[1,9566,"**"]],[9560,9566],[9560,9570]]],[1561271012522,["GJX@GJXAIOU",[[1,9573,"**"],[1,9587,"**"]],[9573,9587],[9573,9591]]],[1561271017537,["GJX@GJXAIOU",[[1,9619,"**"],[1,9632,"**"]],[9619,9632],[9619,9636]]],[1561271019466,["GJX@GJXAIOU",[[-1,9618,"Ø"]],[9619,9619],[9618,9618]]],[1561271021361,["GJX@GJXAIOU",[[-1,9572,"Ø"]],[9573,9573],[9572,9572]]],[1561271021709,["GJX@GJXAIOU",[[1,9572,"-"],[-1,9764," "],[1,9765," "]],[9572,9572],[9573,9573]]],[1561271021869,["GJX@GJXAIOU",[[1,9573," "]],[9573,9573],[9574,9574]]],[1561271024101,["GJX@GJXAIOU",[[1,9619,"- "]],[9619,9619],[9621,9621]]],[1561271037553,["GJX@GJXAIOU",[[1,9745,"**"],[1,9767,"**"]],[9745,9767],[9745,9771]]],[1561271042145,["GJX@GJXAIOU",[[-1,9657,"Ø"]],[9658,9658],[9657,9657]]],[1561271042549,["GJX@GJXAIOU",[[1,9657,"- "]],[9657,9657],[9659,9659]]],[1561271046049,["GJX@GJXAIOU",[[-1,9718,"Ø"]],[9719,9719],[9718,9718]]],[1561271046493,["GJX@GJXAIOU",[[1,9718,"- "]],[9718,9718],[9720,9720]]]],null,"GJX@GJXAIOU"]]}