{"compress":true,"commitItems":[["073e80cf-499b-47fd-8c13-f51e4353d4ac",1544850133480,"",[[1544850089014,["gjx16@GJXAIOU",[[1,0,"# 第一章：概述\n\n\n\n"]],[0,0],[11,11]]],[1544850509233,["gjx16@GJXAIOU",[[1,11,"# 第1章 概述\n\n即时通讯网(52im.net)独家整理，仅为方便个人学习和研究之用，版权归出版方所有，请支持正版。\n\n#### 1.1 引言\n\n很多不同的厂家生产各种型号的计算机，它们运行完全不同的操作系统，但TCP/IP协议族允许它们互相进行通信。这一点很让人感到吃惊，因为它的作用已远远超出了起初的设想。TCP/IP起源于60年代末美国政府资助的一个分组交换网络研究项目，到90年代已发展成为计算机之间最常应用的组网形式。它是一个真正的开放系统，因为协议族的定义及其多种实现可以不用花钱或花很少的钱就可以公开地得到。它成为被称作“全球互联网”或“因特网(Internet)”的基础，该广域网（WAN）已包含超过100万台遍布世界各地的计算机。\n\n本章主要对TCP/IP协议族进行概述，其目的是为本书其余章节提供充分的背景知识。如果读者要从历史的角度了解有关TCP/IP的早期发展情况，请参考文献[Lynch 1993]。\n\n#### 1.2 分层\n\n网络协议通常分不同层次进行开发，每一层分别负责不同的通信功能。一个协议族，比如TCP/IP，是一组不同层次上的多个协议的组合。TCP/IP通常被认为是一个四层协议系统，如图1-1所示。\n\n[![第1章 概述_TCP/IP详解卷1 协议_即时通讯网(52im.net)](http://docs.52im.net/extend/docs/book/tcpip/vol1/1/images2/52im_1.png)](http://www.52im.net/ \"即时通讯网 - 即时通讯开发者社区！\")\n\n图1-1 TCP/IP协议族的四个层次\n\n每一层负责不同的功能：\n\n1.  链路层，有时也称作数据链路层或网络接口层，通常包括操作系统中的设备驱动程序和计算机中对应的网络接口卡。它们一起处理与电缆（或其他任何传输媒介）的物理接口细节。\n2.  网络层，有时也称作互联网层，处理分组在网络中的活动，例如分组的选路。在TCP/IP协议族中，网络层协议包括IP协议（网际协议），ICMP协议（Internet互联网控制报文协议），以及IGMP协议（Internet组管理协议）。\n3.  运输层主要为两台主机上的应用程序提供端到端的通信。在TCP/IP协议族中，有两个互不相同的传输协议：TCP（传输控制协议）和UDP（用户数据报协议）。\n\n    TCP为两台主机提供高可靠性的数据通信。它所做的工作包括把应用程序交给它的数据分成合适的小块交给下面的网络层，确认接收到的分组，设置发送最后确认分组的超时时钟等。由于运输层提供了高可靠性的端到端的通信，因此应用层可以忽略所有这些细节。\n\n    而另一方面，UDP则为应用层提供一种非常简单的服务。它只是把称作数据报的分组从一台主机发送到另一台主机，但并不保证该数据报能到达另一端。任何必需的可靠性必须由应用层来提供。\n\n    这两种运输层协议分别在不同的应用程序中有不同的用途，这一点将在后面看到。\n4.  应用层负责处理特定的应用程序细节。几乎各种不同的TCP/IP实现都会提供下面这些通用的应用程序：\n\n    • Telnet远程登录。\n\n    • FTP文件传输协议。\n\n    • SMTP简单邮件传送协议。\n\n    • SNMP简单网络管理协议。 \n\n2TCP/IP详解，卷1：协议[](http://www.52im.net/ \"即时通讯网 - 即时通讯开发者社区！\")\n\n另外还有许多其他应用，在后面章节中将介绍其中的一部分。假设在一个局域网（LAN）如以太网中有两台主机，二者都运行FTP协议，图1-2列出了该过程所涉及到的所有协议。\n\n[![第1章 概述_TCP/IP详解卷1 协议_即时通讯网(52im.net)](http://docs.52im.net/extend/docs/book/tcpip/vol1/1/images2/52im_2.png)](http://www.52im.net/ \"即时通讯网 - 即时通讯开发者社区！\")\n\n图1-2 局域网上运行FTP的两台主机\n\n这里，我们列举了一个FTP客户程序和另一个FTP服务器程序。大多数的网络应用程序都被设计成客户—服务器模式。服务器为客户提供某种服务，在本例中就是访问服务器所在主机上的文件。在远程登录应用程序Te lnet中，为客户提供的服务是登录到服务器主机上。\n\n在同一层上，双方都有对应的一个或多个协议进行通信。例如，某个协议允许TCP层进行通信，而另一个协议则允许两个IP层进行通信。\n\n在图1-2的右边，我们注意到应用程序通常是一个用户进程，而下三层则一般在（操作系统）内核中执行。尽管这不是必需的，但通常都是这样处理的，例如UNIX操作系统。\n\n在图1-2中，顶层与下三层之间还有另一个关键的不同之处。应用层关心的是应用程序的细节，而不是数据在网络中的传输活动。下三层对应用程序一无所知，但它们要处理所有的通信细节。\n\n在图1-2中列举了四种不同层次上的协议。FTP是一种应用层协议，TCP是一种运输层协议，IP是一种网络层协议，而以太网协议则应用于链路层上。TCP/IP协议族是一组不同的协议组合在一起构成的协议族。尽管通常称该协议族为TCP/IP，但TCP和IP只是其中的两种协议而已（该协议族的另一个名字是Internet协议族(Internet Protocol Suite)）。\n\n网络接口层和应用层的目的是很显然的——前者处理有关通信媒介的细节（以太网、令牌环网等），而后者处理某个特定的用户应用程序（FTP、Telnet等）。但是，从表面上看，网络层和运输层之间的区别不那么明显。为什么要把它们划分成两个不同的层次呢？为了理解这一点，我们必须把视野从单个网络扩展到一组网络。\n\n第1章 概 述3[](http://www.52im.net/ \"即时通讯网 - 即时通讯开发者社区！\")\n\n在80年代，网络不断增长的原因之一是大家都意识到只有一台孤立的计算机构成的“孤岛”没有太大意义，于是就把这些孤立的系统组在一起形成网络。随着这样的发展，到了90年代，我们又逐渐认识到这种由单个网络构成的新的更大的“岛屿”同样没有太大的意义。于是，人们又把多个网络连在一起形成一个网络的网络，或称作互连网(internet)。一个互连网就是一组通过相同协议族互连在一起的网络。\n\n构造互连网最简单的方法是把两个或多个网络通过路由器进行连接。它是一种特殊的用于网络互连的硬件盒。路由器的好处是为不同类型的物理网络提供连接：以太网、令牌环网、点对点的链接和FDDI（光纤分布式数据接口）等等。\n\n这些盒子也称作IP路由器（IP Router），但我们这里使用路由器(Router)这个术语。从历史上说，这些盒子称作网关（gateway），在很多TCP/IP文献中都使用这个术语。现在网关这个术语只用来表示应用层网关：一个连接两种不同协议族的进程（例如，TCP/IP和IBM的SNA），它为某个特定的应用程序服务（常常是电子邮件或文件传输）。\n\n图1-3是一个包含两个网络的互连网：一个以太网和一个令牌环网，通过一个路由器互相连接。尽管这里是两台主机通过路由器进行通信，实际上以太网中的任何主机都可以与令牌环网中的任何主机进行通信。\n\n在图1-3中，我们可以划分出端系统（End system）（两边的两台主机）和中间系统（Intermediate system）（中间的路由器）。应用层和运输层使用端到端（End-to-end）协议。在图中，只有端系统需要这两层协议。但是，网络层提供的却是逐跳（Hop-by-hop）协议，两个端系统和每个中间系统都要使用它。\n\n[![第1章 概述_TCP/IP详解卷1 协议_即时通讯网(52im.net)](http://docs.52im.net/extend/docs/book/tcpip/vol1/1/images2/52im_3.png)](http://www.52im.net/ \"即时通讯网 - 即时通讯开发者社区！\")\n\n图1-3 通过路由器连接的两个网络\n\n在TCP/IP协议族中，网络层IP提供的是一种不可靠的服务。也就是说，它只是尽可能快地把分组从源结点送到目的结点，但是并不提供任何可靠性保证。而另一方面，TCP在不可靠的IP层上提供了一个可靠的运输层。为了提供这种可靠的服务，TCP采用了超时重传、发送和接收端到端的确认分组等机制。由此可见，运输层和网络层分别负责不同的功能。\n\n从定义上看，一个路由器具有两个或多个网络接口层（因为它连接了两个或多个网络）。任何具有多个接口的系统，英文都称作是多接口的(multihomed)。一个主机也可以有多个接口，但一般不称作路由器,除非它的功能只是单纯地把分组从一个接口传送到另一个接口。同样，路由器并不一定指那种在互联网中用来转发分组的特殊硬件盒。大多数的TCP/IP实现也允许一个多接口主机来担当路由器的功能，但是主机为此必须进行特殊的配置。在这种情况下，我们既可以称该系统为主机（当它运行某一应用程序时，如FTP或Telnet），也可以称之为路由器（当它把分组从一个网络转发到另一个网络时）。在不同的场合下使用不同的术语。\n\n4TCP/IP详解，卷1：协议[](http://www.52im.net/ \"即时通讯网 - 即时通讯开发者社区！\")\n\n互联网的目的之一是在应用程序中隐藏所有的物理细节。虽然这一点在图1-3由两个网络组成的互联网中并不很明显，但是应用层不能关心（也不关心）一台主机是在以太网上，而另一台主机是在令牌环网上，它们通过路由器进行互连。随着增加不同类型的物理网络，可能会有20个路由器，但应用层仍然是一样的。物理细节的隐藏使得互联网功能非常强大，也非常有用。\n\n连接网络的另一个途径是使用网桥。网桥是在链路层上对网络进行互连，而路由器则是在网络层上对网络进行互连。网桥使得多个局域网（LAN）组合在一起，这样对上层来说就好像是一个局域网。\n\nTCP/IP倾向于使用路由器而不是网桥来连接网络，因此我们将着重介绍路由器。文献[Perlman 1992]的第12章对路由器和网桥进行了比较。\n\n#### 1.3 TCP/IP的分层\n\n在TCP/IP协议族中，有很多种协议。图1-4给出了本书将要讨论的其他协议。\n\n[![第1章 概述_TCP/IP详解卷1 协议_即时通讯网(52im.net)](http://docs.52im.net/extend/docs/book/tcpip/vol1/1/images2/52im_4.png)](http://www.52im.net/ \"即时通讯网 - 即时通讯开发者社区！\")\n\n图1-4 TCP/IP协议族中不同层次的协议\n\n第1章 概 述5[](http://www.52im.net/ \"即时通讯网 - 即时通讯开发者社区！\")\n\nTCP和UDP是两种最为著名的运输层协议，二者都使用IP作为网络层协议。\n\n虽然TCP使用不可靠的IP服务，但它却提供一种可靠的运输层服务。本书第17～22章将详细讨论TCP的内部操作细节。然后，我们将介绍一些TCP的应用，如第26章中的Telnet和Rlogin、第27章中的FTP以及第28章中的SMTP等。这些应用通常都是用户进程。\n\nUDP为应用程序发送和接收数据报。一个数据报是指从发送方传输到接收方的一个信息单元（例如，发送方指定的一定字节数的信息）。但是与TCP不同的是，UDP是不可靠的，它不能保证数据报能安全无误地到达最终目的。本书第11章将讨论UDP，然后在第14章（DNS:域名系统），第15章（TFTP：简单文件传送协议），以及第16章（BOOTP：引导程序协议）介绍使用UDP的应用程序。SNMP也使用了UDP协议，但是由于它还要处理许多其他的协议，因此本书把它留到第25章再进行讨论。\n\nIP是网络层上的主要协议，同时被TCP和UDP使用。TCP和UDP的每组数据都通过端系统和每个中间路由器中的IP层在互联网中进行传输。在图1-4中，我们给出了一个直接访问IP的应用程序。这是很少见的，但也是可能的（一些较老的选路协议就是以这种方式来实现的。当然新的运输层协议也有可能使用这种方式）。第3章主要讨论IP协议，但是为了使内容更加有针对性，一些细节将留在后面的章节中进行讨论。第9章和第10章讨论IP如何进行选路。\n\nICMP是IP协议的附属协议。IP层用它来与其他主机或路由器交换错误报文和其他重要信息。第6章对ICMP的有关细节进行讨论。尽管ICMP主要被IP使用，但应用程序也有可能访问它。我们将分析两个流行的诊断工具，Ping和Traceroute（第7章和第8章），它们都使用了ICMP。\n\nIGMP是Internet组管理协议。它用来把一个UDP数据报多播到多个主机。我们在第12章中描述广播（把一个UDP数据报发送到某个指定网络上的所有主机）和多播的一般特性，然后在第13章中对IGMP协议本身进行描述。\n\nARP（地址解析协议）和RARP（逆地址解析协议）是某些网络接口（如以太网和令牌环网）使用的特殊协议，用来转换IP层和网络接口层使用的地址。我们分别在第4章和第5章对这两种协议进行分析和介绍。\n\n#### 1.4 互联网的地址\n\n互联网上的每个接口必须有一个唯一的Internet地址（也称作IP地址）。IP地址长32 bit。Internet地址并不采用平面形式的地址空间，如1、2、3等。IP地址具有一定的结构，五类不同的互联网地址格式如图1-5所示。\n\n[![第1章 概述_TCP/IP详解卷1 协议_即时通讯网(52im.net)](http://docs.52im.net/extend/docs/book/tcpip/vol1/1/images2/52im_5.png)](http://www.52im.net/ \"即时通讯网 - 即时通讯开发者社区！\")\n\n图1-5 五类互联网地址\n\n6TCP/IP详解，卷1：协议[](http://www.52im.net/ \"即时通讯网 - 即时通讯开发者社区！\")\n\n这些 32 位的地址通常写成四个十进制的数,其中每个整数对应一个字节。这种表示方法称作“点分十进制表示法(Dotted decimal notation)”。例如,作者的系统就是一个 B 类地址,它表示为: 140.252.13.33。\n\n区分各类地址的最简单方法是看它的第一个十进 制整数。图 1-6 列出了各类地址的起止范围，其中第一个十进制整数用加黑字体表示。\n\n需要再次指出的是，多接口主机具有多个IP地址，其中每个接口都对应一个IP地址。\n\n[![第1章 概述_TCP/IP详解卷1 协议_即时通讯网(52im.net)](http://docs.52im.net/extend/docs/book/tcpip/vol1/1/images2/52im_6.png)](http://www.52im.net/ \"即时通讯网 - 即时通讯开发者社区！\")\n\n图1-6 各类IP地址的范围\n\n由于互联网上的每个接口必须有一个唯一的IP地址，因此必须要有一个管理机构为接入互联网的网络分配IP地址。这个管理机构就是互联网络信息中心（Internet Network Information Centre），称作InterNIC。InterNIC只分配网络号。主机号的分配由系统管理员来负责。\n\nInternet注册服务(IP地址和DNS域名)过去由NIC来负责，其网络地址是nic.ddn.mil。1993年4月1日，InterNIC成立。现在，NIC只负责处理国防数据网的注册请求，所有其他的Internet用户注册请求均由InterNIC负责处理，其网址是：rs.internic.net。\n\n事实上InterNIC由三部分组成：注册服务（rs.internic.net），目录和数据库服务（ds.internic.net），以及信息服务（is.internic.net）。有关InterNIC的其他信息参见习题1.8。\n\n有三类IP地址：单播地址（目的为单个主机）、广播地址（目的端为给定网络上的所有主机）以及多播地址（目的端为同一组内的所有主机）。第12章和第13章将分别讨论广播和多播的更多细节。\n\n在3.4节中，我们在介绍IP选路以后将进一步介绍子网的概念。图3-9给出了几个特殊的IP地址：主机号和网络号为全0或全1。\n\n#### 1.5 域名系统\n\n尽管通过IP地址可以识别主机上的网络接口，进而访问主机，但是人们最喜欢使用的还是主机名。在TCP/IP领域中，域名系统（DNS）是一个分布的数据库，由它来提供IP地址和主机名之间的映射信息。我们在第14章将详细讨论DNS。\n\n现在，我们必须理解，任何应用程序都可以调用一个标准的库函数来查看给定名字的主机的IP地址。类似地，系统还提供一个逆函数—给定主机的IP地址，查看它所对应的主机名。\n\n大多数使用主机名作为参数的应用程序也可以把IP地址作为参数。例如，在第4章中当我们用Telnet进行远程登录时，既可以指定一个主机名，也可以指定一个IP地址。\n\n#### 1.6 封装\n\n当应用程序用TCP传送数据时，数据被送入协议栈中，然后逐个通过每一层直到被当作一串比特流送入网络。其中每一层对收到的数据都要增加一些首部信息（有时还要增加尾部信息），该过程如图1-7所示。TCP传给IP的数据单元称作TCP报文段或简称为TCP段（TCP segment）。IP传给网络接口层的数据单元称作IP数据报(IP datagram)。通过以太网传输的比特流称作帧(Frame)。\n\n第1章 概 述7[](http://www.52im.net/ \"即时通讯网 - 即时通讯开发者社区！\")\n\n图1-7中帧头和帧尾下面所标注的数字是典型以太网帧首部的字节长度。在后面的章节中我们将详细讨论这些帧头的具体含义。以太网数据帧的物理特性是其长度必须在46～1500字节之间。我们将在4.5节遇到最小长度的数据帧，在2.8节中遇到最大长度的数据帧。\n\n所有的Internet标准和大多数有关TCP/IP的书都使用octet这个术语来表示字节。使用这个过分雕琢的术语是有历史原因的，因为TCP/IP的很多工作都是在DEC-10系统上进行的，但是它并不使用8bit的字节。由于现在几乎所有的计算机系统都采用8bit的字节，因此我们在本书中使用字节（byte）这个术语。\n\n更准确地说，图1-7中IP和网络接口层之间传送的数据单元应该是分组（packet）。分组既可以是一个IP数据报，也可以是IP数据报的一个片（fragment）。我们将在11.5节讨论IP数据报分片的详细情况。\n\n[![第1章 概述_TCP/IP详解卷1 协议_即时通讯网(52im.net)](http://docs.52im.net/extend/docs/book/tcpip/vol1/1/images2/52im_7.png)](http://www.52im.net/ \"即时通讯网 - 即时通讯开发者社区！\")\n\n图1-7 数据进入协议栈时的封装过程\n\nUDP数据与TCP数据基本一致。唯一的不同是UDP传给IP的信息单元称作UDP数据报（UDP datagram），而且UDP的首部长为8字节。\n\n回想1.3节中的图1-4，由于TCP、UDP、ICMP和IGMP都要向IP传送数据，因此IP必须在生成的IP首部中加入某种标识，以表明数据属于哪一层。为此，IP在首部中存入一个长度为8bit的数值，称作协议域。1表示为ICMP协议，2表示为IGMP协议，6表示为TCP协议，17表示为UDP协议。\n\n类似地，许多应用程序都可以使用TCP或UDP来传送数据。运输层协议在生成报文首部时要存入一个应用程序的标识符。TCP和UDP都用一个16bit的端口号来表示不同的应用程序。TCP和UDP把源端口号和目的端口号分别存入报文首部中。\n\n网络接口分别要发送和接收IP、ARP和RARP数据，因此也必须在以太网的帧首部中加入某种形式的标识，以指明生成数据的网络层协议。为此，以太网的帧首部也有一个16 bit的帧类型域。\n\n8TCP/IP详解，卷1：协议[](http://www.52im.net/ \"即时通讯网 - 即时通讯开发者社区！\")\n\n#### 1.7 分用\n\n当目的主机收到一个以太网数据帧时，数据就开始从协议栈中由底向上升，同时去掉各层协议加上的报文首部。每层协议盒都要去检查报文首部中的协议标识，以确定接收数据的上层协议。这个过程称作分用（Demultiplexing），图1-8显示了该过程是如何发生的。\n\n[![第1章 概述_TCP/IP详解卷1 协议_即时通讯网(52im.net)](http://docs.52im.net/extend/docs/book/tcpip/vol1/1/images2/52im_8.png)](http://www.52im.net/ \"即时通讯网 - 即时通讯开发者社区！\")\n\n图1-8以太网数据帧的分用过程\n\n为协议ICMP和IGMP定位一直是一件很棘手的事情。在图1-4中，把它们与IP放在同一层上，那是因为事实上它们是IP的附属协议。但是在这里，我们又把它们放在IP层的上面，这是因为ICMP和IGMP报文都被封装在IP数据报中。\n\n对于ARP和RARP，我们也遇到类似的难题。在这里把它们放在以太网设备驱动程序的上方，这是因为它们和IP数据报一样，都有各自的以太网数据帧类型。但在图2-4中，我们又把ARP作为以太网设备驱动程序的一部分，放在IP层的下面，其原因在逻辑上是合理的。\n\n这些分层协议盒并不都是完美的。\n\n当进一步描述TCP的细节时，我们将看到协议确实是通过目的端口号、源IP地址和源端口号进行解包的。\n\n#### 1.8 客户-服务器模型\n\n大部分网络应用程序在编写时都假设一端是客户，另一端是服务器，其目的是为了让服务器为客户提供一些特定的服务。\n\n可以将这种服务分为两种类型：重复型或并发型。重复型服务器通过以下步骤进行交互：\n\n第1章 概 述9[](http://www.52im.net/ \"即时通讯网 - 即时通讯开发者社区！\")\n\n1.  I1.等待一个客户请求的到来。\n2.  I2.处理客户请求。\n3.  I3.发送响应给发送请求的客户。\n4.  I4.返回I1步。\n\n重复型服务器主要的问题发生在I2状态。在这个时候，它不能为其他客户机提供服务。相应地，并发型服务器采用以下步骤：\n\n1.  C1.等待一个客户请求的到来。\n2.  C2.启动一个新的服务器来处理这个客户的请求。在这期间可能生成一个新的进程、任务或线程，并依赖底层操作系统的支持。这个步骤如何进行取决于操作系统。生成的新服务器对客户的全部请求进行处理。处理结束后，终止这个新服务器。\n3.  C3.返回C1步。\n\n并发服务器的优点在于它是利用生成其他服务器的方法来处理客户的请求。也就是说，每个客户都有它自己对应的服务器。如果操作系统允许多任务，那么就可以同时为多个客户服务。\n\n对服务器，而不是对客户进行分类的原因是因为对于一个客户来说，它通常并不能够辨别自己是与一个重复型服务器或并发型服务器进行对话。\n\n一般来说，TCP服务器是并发的，而UDP服务器是重复的，但也存在一些例外。我们将在11.12节对UDP对其服务器产生的影响进行详细讨论，并在18.11节对TCP对其服务器的影响进行讨论。\n\n#### 1.9 端口号\n\n前面已经指出过，TCP和UDP采用16 bit的端口号来识别应用程序。那么这些端口号是如何选择的呢？\n\n服务器一般都是通过知名端口号来识别的。例如，对于每个TCP/IP实现来说，FTP服务器的TCP端口号都是21，每个Telnet服务器的TCP端口号都是23，每个TFTP(简单文件传送协议)服务器的UDP端口号都是69。任何TCP/IP实现所提供的服务都用知名的1～1023之间的端口号。这些知名端口号由Internet号分配机构（Internet Assigned Numbers Authority, IANA）来管理。\n\n到1992年为止，知名端口号介于1～255之间。256～1023之间的端口号通常都是由Unix系统占用，以提供一些特定的Unix服务—也就是说，提供一些只有Unix系统才有的、而其他操作系统可能不提供的服务。现在IANA管理1～1023之间所有的端口号。\n\nInternet扩展服务与Unix特定服务之间的一个差别就是Telnet和Rlogin。它们二者都允许通过计算机网络登录到其他主机上。Telnet是采用端口号为23的TCP/IP标准且几乎可以在所有操作系统上进行实现。相反，Rlogin最开始时只是为Unix系统设计的（尽管许多非Unix系统现在也提供该服务），因此在80年代初，它的有名端口号为513。\n\n客户端通常对它所使用的端口号并不关心，只需保证该端口号在本机上是唯一的就可以了。客户端口号又称作临时端口号（即存在时间很短暂）。这是因为它通常只是在用户运行该客户程序时才存在，而服务器则只要主机开着的，其服务就运行。\n\n大多数TCP/IP实现给临时端口分配1024～5000之间的端口号。大于5000的端口号是为其他服务器预留的（Internet上并不常用的服务)。我们可以在后面看见许多这样的给临时端口分配端口号的例子。\n\n10TCP/IP详解，卷1：协议[](http://www.52im.net/ \"即时通讯网 - 即时通讯开发者社区！\")\n\nSolaris 2.2是一个很有名的例外。通常TCP和UDP的缺省临时端口号从32768开始。\n\n在E.4节中，我们将详细描述系统管理员如何对配置选项进行修改以改变这些缺省项。\n\n大多数Unix系统的文件/etc/services都包含了人们熟知的端口号。为了找到Telnet服务器和域名系统的端口号，可以运行以下语句：\n\n[![第1章 概述_TCP/IP详解卷1 协议_即时通讯网(52im.net)](http://docs.52im.net/extend/docs/book/tcpip/vol1/1/images2/52im_9.png)](http://www.52im.net/ \"即时通讯网 - 即时通讯开发者社区！\")\n\nUnix系统有保留端口号的概念。只有具有超级用户特权的进程才允许给它自己分配一个保留端口号。\n\n这些端口号介于1～1023之间，一些应用程序（如有名的Rlogin，26.2节）将它作为客户与服务器之间身份认证的一部分。\n\n#### 1.10 标准化过程\n\n究竟是谁控制着TCP/IP协议族，又是谁在定义新的标准以及其他类似的事情？事实上，有四个小组在负责Internet技术。\n\n1.  Internet协会（ISOC，Internet Society）是一个推动、支持和促进Internet不断增长和发展的专业组织，它把Internet作为全球研究通信的基础设施。\n2.  Internet体系结构委员会（IAB，Internet Architecture Board）是一个技术监督和协调的机构。它由国际上来自不同专业的15个志愿者组成，其职能是负责Internet标准的最后编辑和技术审核。IAB隶属于ISOC。\n3.  Internet工程专门小组（IETF，Internet Engineering Task Force）是一个面向近期标准的组织，它分为9个领域（应用、寻径和寻址、安全等等）。IETF开发成为Internet标准的规范。为帮助IETF主席，又成立了Internet工程指导小组（IESG, Internet Engineering Steering Group）。\n4.  Internet研究专门小组（IRIF，Internet Research Task Force）主要对长远的项目进行研究。\n\nIRTF和IETF都隶属于IAB。文献[Crocker 1993]提供了关于Internet内部标准化进程更为详细的信息，同时还介绍了它的早期历史。\n\n#### 1.11 RFC\n\n所有关于Internet的正式标准都以RFC（Request for Comment）文档出版。另外，大量的RFC并不是正式的标准，出版的目的只是为了提供信息。RFC的篇幅从1页到200页不等。每一项都用一个数字来标识，如RFC 1122，数字越大说明RFC的内容越新。\n\n所有的RFC都可以通过电子邮件或用FTP从Internet上免费获取。如果发送下面这份电子邮件，就会收到一份获取RFC的方法清单：\n\n第1章 概 述11[](http://www.52im.net/ \"即时通讯网 - 即时通讯开发者社区！\")\n\nTo: rfc-info@ISI.EDU \nSubject: getting rfcs \nhelp: ways_to_get_rfcs\n\n最新的RFC索引总是搜索信息的起点。这个索引列出了RFC被替换或局部更新的时间。下面是一些重要的RFC文档：\n\n1.  赋值RFC（Assigned Numbers RFC）列出了所有Internet协议中使用的数字和常数。至本书出版时为止，最新RFC的编号是1340[Reynolds 和 Postel 1992]。所有著名的Internet端口号都列在这里。\n\n    当这个RFC被更新时(通常每年至少更新一次），索引清单会列出RFC 1340被替换的时间。\n2.  Internet正式协议标准，目前是RFC 1600[Postel 1994]。这个RFC描述了各种Internet协议的标准化现状。每种协议都处于下面几种标准化状态之一：标准、草案标准、提议标准、实验标准、信息标准和历史标准。另外，对每种协议都有一个要求的层次、必需的、建议的、可选择的、限制使用的或者不推荐的。\n\n    与赋值RFC一样，这个RFC也定期更新。请随时查看最新版本。\n3.  主机需求RFC，1122和1123[Braden 1989a, 1989b]。RFC 1122针对链路层、网络层和运输层；RFC 1123针对应用层。这两个RFC对早期重要的RFC文档作了大量的纠正和解释。如果要查看有关协议更详细的细节内容，它们通常是一个入口点。它们列出了协议中关于“必须”、“应该”、“可以”、“不应该”或者“不能”等特性及其实现细节。文献[Borman 1993b]提供了有关这两个RFC的实用内容。RFC 1127[Braden 1989c]对工作小组开发主机需求RFC过程中的讨论内容和结论进行了非正式的总结。\n4.  路由器需求RFC，目前正式版是RFC 1009[Braden and Postel 1987]，但一个新版已接近完成[Almquist 1993]。它与主机需求RFC类似，但是只单独描述了路由器的需求。\n\n#### 1.12 标准的简单服务\n\n有一些标准的简单服务几乎每种实现都要提供。在本书中我们将使用其中的一些服务程序，而客户程序通常选择Telnet。图1-9描述了这些服务。从该图可以看出，当使用TCP和UDP提供相同的服务时，一般选择相同的端口号。\n\n[![第1章 概述_TCP/IP详解卷1 协议_即时通讯网(52im.net)](http://docs.52im.net/extend/docs/book/tcpip/vol1/1/images2/52im_10.png)](http://www.52im.net/ \"即时通讯网 - 即时通讯开发者社区！\")\n\n图1-9大多数实现都提供的标准的简单服务\n\n12TCP/IP详解，卷1：协议[](http://www.52im.net/ \"即时通讯网 - 即时通讯开发者社区！\")\n\n如果仔细检查这些标准的简单服务以及其他标准的TCP/IP服务（如Telnet、FTP、SMTP等）的端口号时，我们发现它们都是奇数。这是有历史原因的，因为这些端口号都是从NCP端口号派生出来的（NCP，即网络控制协议，是ARPANET的运输层协议，是TCP的前身）。NCP是单工的，不是全双工的，因此每个应用程序需要两个连接，需预留一对奇数和偶数端口号。当TCP和UDP成为标准的运输层协议时，每个应用程序只需要一个端口号，因此就使用了NCP中的奇数。\n\n#### 1.13 互联网\n\n在图1-3中，我们列举了一个由两个网络组成的互联网——一个以太网和一个令牌环网。在1.4节和1.9节中，我们讨论了世界范围内的互联网—Internet，以及集中分配IP地址的需要（InterNIC），还讨论了知名端口号（IANA）。internet这个词第一个字母是否大写决定了它具有不同的含义。\n\ninternet意思是用一个共同的协议族把多个网络连接在一起。而Internet指的是世界范围内通过TCP/IP互相通信的所有主机集合（超过100万台）。Internet是一个internet，但internet不等于Internet。\n\n#### 1.14 实现\n\n既成事实标准的TCP/IP软件实现来自于位于伯克利的加利福尼亚大学的计算机系统研究小组。从历史上看，软件是随同4.x BSD系统（Berkeley Software Distribution）的网络版一起发布的。它的源代码是许多其他实现的基础。\n\n图1-10列举了各种BSD版本发布的时间，并标注了重要的TCP/IP特性。列在左边的BSD网络版，其所有的网络源代码可以公开得到：包括协议本身以及许多应用程序和工具（如Telnet和FTP）。\n\n[![第1章 概述_TCP/IP详解卷1 协议_即时通讯网(52im.net)](http://docs.52im.net/extend/docs/book/tcpip/vol1/1/images2/52im_11.png)](http://www.52im.net/ \"即时通讯网 - 即时通讯开发者社区！\")\n\n图1-10 不同的BSD版及其重要的TCP/IP特性\n\n在本书中，我们将使用“伯克利派生系统”来指SunOS 4.x、SVR4以及AIX 3.2等那些基于伯克利源代码开发的系统。这些系统有很多共同之处，经常包含相同的错误。\n\n起初关于Internet的很多研究现在仍然在伯克利系统中应用——新的拥塞控制算法（21.7节）、多播（12.4节）、“长肥管道”修改（24.3节）以及其他类似的研究。\n\n#### 1.15 应用编程接口\n\n使用TCP/IP协议的应用程序通常采用两种应用编程接口（API）：socket和TLI（运输层接口：Transport Layer Interface）。前者有时称作“Berkeley socket”，表明它是从伯克利版发展而来的。后者起初是由AT&T开发的，有时称作XTI（X/Open运输层接口），以承认X/Open这个自己定义标准的国际计算机生产商所做的工作。XTI实际上是TLI的一个超集。\n\n第1章 概 述13[](http://www.52im.net/ \"即时通讯网 - 即时通讯开发者社区！\")\n\n本书不是一本编程方面的书，但是偶尔会引用一些内容来说明TCP/IP的特性，不管大多数的API（socket）是否提供它们。所有关于socket和TLI的编程细节请参阅文献[Stevens 1990]。\n\n#### 1.16 测试网络\n\n图1-11是本书中所有的例子运行的测试网络。为阅读时参考方便，该图还复制在本书扉页前的插页中。\n\n[![第1章 概述_TCP/IP详解卷1 协议_即时通讯网(52im.net)](http://docs.52im.net/extend/docs/book/tcpip/vol1/1/images2/52im_12.png)](http://www.52im.net/ \"即时通讯网 - 即时通讯开发者社区！\")\n\n图1-11 本书中所有例子运行的测试网络，所有的IP地址均从140.252开始编址\n\n在这个图中（作者的子网），大多数的例子都运行在下面四个系统中。图中所有的IP地址属于B类地址，网络号为140.252。所有的主机名属于.tuc.noao.edu这个域（noao代表National Optical Astronomy Observatories，tuc代表Tu cson）。例如，右下方的系统有一个完整的名字:svr4.tuc.noao.edu，其IP地址是：140.252.13.34。每个方框上方的名称是该主机运行的操作系统。这一组系统和网络上的主机及路由器运行于不同的TCP/IP实现。\n\n需要指出的是，noao.edu这个域中的网络和主机要比图1-11中的多得多。这里列出来的只是本书中将要用到的系统。\n\n在3.4节中，我们将描述这个网络所用到的子网形式。在4.6节中将介绍sun与netb之间的拨号SLIP的有关细节。2.4节将详细讨论SLIP。\n\n#### 1.17 小结\n\n本章快速地浏览了TCP/IP协议族，介绍了在后面的章节中将要详细讨论的许多术语和协议。\n\n14TCP/IP详解，卷1：协议[](http://www.52im.net/ \"即时通讯网 - 即时通讯开发者社区！\")\n\nTCP/IP协议族分为四层：链路层、网络层、运输层和应用层，每一层各有不同的责任。在TCP/IP中，网络层和运输层之间的区别是最为关键的：网络层（IP）提供点到点的服务，而运输层（TCP和UDP）提供端到端的服务。\n\n一个互联网是网络的网络。构造互联网的共同基石是路由器，它们在IP层把网络连在一起。第一个字母大写的Internet是指分布在世界各地的大型互联网，其中包括1万多个网络和超过100万台主机。\n\n在一个互联网上，每个接口都用IP地址来标识，尽管用户习惯使用主机名而不是IP地址。域名系统为主机名和IP地址之间提供动态的映射。端口号用来标识互相通信的应用程序。服务器使用知名端口号，而客户使用临时设定的端口号。\n\n#### 习题\n\n1.  请计算最多有多少个A类、B类和C类网络号。\n2.  用匿名FTP（见27.3节）从主机nic.merit.edu上获取文件nsfnet/statistics/history.netcount。该文件包含在NSFNET网络上登记的国内和国外的网络数。画一坐标系，横坐标代表年，纵坐标代表网络总数的对数值。纵坐标的最大值是习题1.1的结果。如果数据显示一个明显的趋势，请估计按照当前的编址体制推算，何时会用完所有的网络地址（3.10节讨论解决该难题的建议）。\n3.  获取一份主机需求RFC拷贝[Braden 1989a]，阅读有关应用于TCP/IP协议族每一层的稳健性原则。这个原则的参考对象是什么？\n4.  获取一份最新的赋值RFC拷贝。“quote of the day”协议的有名端口号是什么？哪个RFC对该协议进行了定义？\n5.  如果你有一个接入TCP/IP互联网的主机帐号，它的主IP地址是多少？这台主机是否接入了Internet？它是多接口主机吗？\n6.  获取一份RFC 1000的拷贝，了解RFC这个术语从何而来。\n7.  与Internet协会联系，isoc@isoc.org或者+1703 648 9888，了解有关加入的情况。\n8.  用匿名FTP从主机is.internic.net处获取文件about-internic/information-about-the-internic。"]],[11,11],[16397,16397]]],[1544850539459,["gjx16@GJXAIOU",[[-1,21,"即时通讯网(52im.net)独家整理，仅为方便个人学习和研究之用，版权归出版方所有，请支持正版。"]],[21,70],[21,21]]],[1544850754646,["gjx16@GJXAIOU",[[1,422,"**"],[1,454,"**"]],[422,454],[422,458]]],[1544850761685,["gjx16@GJXAIOU",[[-1,601,"(http://www.52im.net/ \"即时通讯网 - 即时通讯开发者社区！\")\n"]],[601,645],[601,601]]],[1544850779204,["gjx16@GJXAIOU",[[1,640,"**"],[1,691,"**"]],[640,691],[640,695]]],[1544850789973,["gjx16@GJXAIOU",[[-1,927," "]],[928,928],[927,927]]],[1544850792002,["gjx16@GJXAIOU",[[-1,1049," "]],[1047,1047],[1046,1046]]],[1544850793809,["gjx16@GJXAIOU",[[-1,1136,"\n"]],[1137,1137],[1136,1136]]],[1544850800234,["gjx16@GJXAIOU",[[1,774,"**"],[1,842,"**"]],[774,842],[774,846]]],[1544850819274,["gjx16@GJXAIOU",[[-1,1238," "]],[1238,1238],[1237,1237]]],[1544850820275,["gjx16@GJXAIOU",[[-1,1252,"\n"]],[1253,1253],[1252,1252]]],[1544850822195,["gjx16@GJXAIOU",[[-1,1269,"\n"]],[1270,1270],[1269,1269]]],[1544850823130,["gjx16@GJXAIOU",[[-1,1289,"\n"]],[1290,1290],[1289,1289]]],[1544850851274,["gjx16@GJXAIOU",[[-1,1569,"(http://www.52im.net/ \"即时通讯网 - 即时通讯开发者社区！\")"]],[1569,1612],[1569,1569]]],[1544850876081,["gjx16@GJXAIOU",[[-1,1311,"2TCP/IP详解，卷1：协议[](http://www.52im.net/ \"即时通讯网 - 即时通讯开发者社区！\")"]],[1326,1371],[1311,1311]]],[1544850876539,["gjx16@GJXAIOU",[[-1,1312,"\n"]],[1311,1311],[1310,1310]]],[1544850880946,["gjx16@GJXAIOU",[[-1,1396,"["]],[1397,1397],[1396,1396]]],[1544850882211,["gjx16@GJXAIOU",[[-1,1506,"]"]],[1507,1507],[1506,1506]]],[1544850890957,["gjx16@GJXAIOU",[[-1,1418,"_即时通讯网(52im.net)"]],[1419,1434],[1418,1418]]],[1544850902696,["gjx16@GJXAIOU",[[-1,1492,"图1-2 局域网上运行FTP的两台主机"]],[1492,1511],[1492,1492]]],[1544850905724,["gjx16@GJXAIOU",[[-1,1398,"第1章 概述_TCP/IP详解卷1 协议"],[1,1418,"图1-2 局域网上运行FTP的两台主机"]],[1398,1418],[1417,1417]]],[1544850915618,["gjx16@GJXAIOU",[[1,1619,"**"],[1,1644,"**"]],[1619,1644],[1619,1648]]],[1544850943179,["gjx16@GJXAIOU",[[-1,2191,"第1章 概 述3[](http://www.52im.net/ \"即时通讯网 - 即时通讯开发者社区！\")"]],[2191,2244],[2191,2191]]],[1544850982603,["gjx16@GJXAIOU",[[1,2430,"**"],[1,2451,"**"]],[2430,2451],[2430,2455]]],[1544850995035,["gjx16@GJXAIOU",[[-1,3038,"(http://www.52im.net/ \"即时通讯网 - 即时通讯开发者社区！\")"]],[3038,3081],[3038,3038]]],[1544850997691,["gjx16@GJXAIOU",[[-1,3040,"图1-3 通过路由器连接的两个网络"]],[3040,3057],[3040,3040]]],[1544851003275,["gjx16@GJXAIOU",[[-1,2929,"第1章 概述_TCP/IP详解卷1 协议_即时通讯网(52im.net)"],[1,2965,"图1-3 通过路由器连接的两个网络"]],[2929,2965],[2946,2946]]],[1544851005499,["gjx16@GJXAIOU",[[-1,2926,"["]],[2927,2927],[2926,2926]]],[1544851006782,["gjx16@GJXAIOU",[[-1,3017,"]"]],[3018,3018],[3017,3017]]],[1544851007566,["gjx16@GJXAIOU",[[-1,3020,"\n"]],[3019,3019],[3018,3018]]],[1544851173078,["gjx16@GJXAIOU",[[-1,2928,"图1-3 通过路由器连接的两个网络"]],[2928,2945],[2928,2928]]],[1544851175099,["gjx16@GJXAIOU",[[-1,2999,")"]],[3000,3000],[2999,2999]]],[1544851183497,["gjx16@GJXAIOU",[[1,3000,"![52im_3]($resource/52im_3.png)"]],[2999,2999],[3032,3032]]],[1544851191173,["gjx16@GJXAIOU",[[-1,2926,"![](http://docs.52im.net/extend/docs/book/tcpip/vol1/1/images2/52im_3.png"]],[2926,2999],[2926,2926]]],[1544851194767,["gjx16@GJXAIOU",[[-1,2929,"52im_3"],[1,2935,"图1-3 通过路由器连接的两个网络"]],[2929,2935],[2946,2946]]],[1544851203587,["gjx16@GJXAIOU",[[1,2834,"**"],[1,2860,"**"]],[2834,2860],[2834,2864]]],[1544851209470,["gjx16@GJXAIOU",[[1,2885,"**"],[1,2910,"**"]],[2885,2910],[2885,2914]]],[1544851221395,["gjx16@GJXAIOU",[[-1,2911,"，"]],[2912,2912],[2911,2911]]],[1544851221853,["gjx16@GJXAIOU",[[1,2911,"，"],[-1,11580," "],[1,11581," "],[-1,11603," "],[1,11604," "]],[2911,2911],[2912,2912]]],[1544851223390,["gjx16@GJXAIOU",[[-1,2911,"，"]],[2912,2912],[2911,2911]]],[1544851223886,["gjx16@GJXAIOU",[[1,2911,"，"]],[2911,2911],[2912,2912]]],[1544851226459,["gjx16@GJXAIOU",[[-1,2911,"，"]],[2912,2912],[2911,2911]]],[1544851229973,["gjx16@GJXAIOU",[[1,2911,","]],[2911,2911],[2912,2912]]],[1544851233533,["gjx16@GJXAIOU",[[-1,2911,","]],[2912,2912],[2911,2911]]],[1544851236621,["gjx16@GJXAIOU",[[1,2913,"，"]],[2913,2913],[2914,2914]]],[1544851242555,["gjx16@GJXAIOU",[[1,2979,"\n"]],[2978,2978],[2979,2979]]],[1544851246396,["gjx16@GJXAIOU",[[1,2979,"令牌环"]],[2979,2979],[2982,2982]]],[1544851249497,["gjx16@GJXAIOU",[[-1,2979,"令牌环"]],[2982,2982],[2979,2979]]],[1544851343523,["gjx16@GJXAIOU",[[1,2979,"![令牌环]($resource/%E4%BB%A4%E7%89%8C%E7%8E%AF.png)"]],[2979,2979],[3029,3029]]],[1544851347586,["gjx16@GJXAIOU",[[1,3029,"\n"]],[3028,3028],[3029,3029]]],[1544851349323,["gjx16@GJXAIOU",[[1,3030,"\n"]],[3029,3029],[3030,3030]]],[1544851352160,["gjx16@GJXAIOU",[[1,3030,"令牌环"]],[3030,3030],[3033,3033]]],[1544851355665,["gjx16@GJXAIOU",[[1,3030,"**"],[1,3033,"**"]],[3030,3033],[3030,3037]]],[1544851368344,["gjx16@GJXAIOU",[[1,3037,"：字"]],[3037,3037],[3039,3039]]],[1544851369354,["gjx16@GJXAIOU",[[-1,3038,"字"]],[3039,3039],[3038,3038]]],[1544851385510,["gjx16@GJXAIOU",[[1,3038,"在该网络中，有一个专门的帧交过"]],[3038,3038],[3053,3053]]],[1544851386420,["gjx16@GJXAIOU",[[-1,3051,"交过"]],[3053,3053],[3051,3051]]],[1544851392461,["gjx16@GJXAIOU",[[1,3051,"叫做“令牌\""]],[3051,3051],[3057,3057]]],[1544851392510,["gjx16@GJXAIOU",[[-1,3056,"\""],[1,3057,"”"]],[3057,3057],[3057,3057]]],[1544851396625,["gjx16@GJXAIOU",[[1,3057,"，在"]],[3057,3057],[3059,3059]]],[1544851416333,["gjx16@GJXAIOU",[[1,3059,"环路上持续的传输来确定一个节点合适可以"]],[3059,3059],[3078,3078]]],[1544851419043,["gjx16@GJXAIOU",[[-1,3074,"合适可以"]],[3078,3078],[3074,3074]]],[1544851426570,["gjx16@GJXAIOU",[[1,3074,"何时可以发送包；"]],[3074,3074],[3082,3082]]],[1544851427443,["gjx16@GJXAIOU",[[-1,3081,"；"]],[3082,3082],[3081,3081]]],[1544851428832,["gjx16@GJXAIOU",[[1,3081,"。"]],[3081,3081],[3082,3082]]],[1544851429358,["gjx16@GJXAIOU",[[1,3083,"\n"]],[3082,3082],[3083,3083]]],[1544851440594,["gjx16@GJXAIOU",[[-1,3546,"4TCP/IP详解，卷1：协议[](http://www.52im.net/ \"即时通讯网 - 即时通讯开发者社区！\")"]],[3561,3606],[3546,3546]]],[1544851441187,["gjx16@GJXAIOU",[[-1,3547,"\n"]],[3546,3546],[3545,3545]]],[1544851447458,["gjx16@GJXAIOU",[[1,3096,"**"],[1,3113,"**"]],[3096,3113],[3096,3117]]],[1544851722844,["gjx16@GJXAIOU",[[-1,4055,"(http://www.52im.net/ \"即时通讯网 - 即时通讯开发者社区！\")"]],[4055,4098],[4055,4055]]],[1544851726410,["gjx16@GJXAIOU",[[-1,4057,"图1-4 TCP/IP协议族中不同层次的协议"]],[4057,4079],[4057,4057]]],[1544851732093,["gjx16@GJXAIOU",[[-1,3946,"第1章 概述_"],[1,3953,"图1-4 "],[-1,3959,"详解卷1 "],[-1,3966,"_即时通讯网(52im.net)"],[1,3982,"族中不同层次的协议"]],[3946,3982],[3968,3968]]],[1544851735706,["gjx16@GJXAIOU",[[-1,4045,"第1章 概 述5[](http://www.52im.net/ \"即时通讯网 - 即时通讯开发者社区！\")"]],[4045,4098],[4045,4045]]],[1544851736203,["gjx16@GJXAIOU",[[-1,4046,"\n"]],[4045,4045],[4044,4044]]],[1544851736650,["gjx16@GJXAIOU",[[-1,4045,"\n"]],[4044,4044],[4043,4043]]],[1544851747338,["gjx16@GJXAIOU",[[1,4216,"**"],[1,4277,"**"]],[4216,4277],[4216,4281]]],[1544851760172,["gjx16@GJXAIOU",[[1,4671,"**"],[1,4715,"**"]],[4671,4715],[4671,4719]]],[1544851772844,["gjx16@GJXAIOU",[[1,4817,"**"],[1,4856,"**"]],[4817,4856],[4817,4860]]],[1544851781565,["gjx16@GJXAIOU",[[-1,5273,"(http://www.52im.net/ \"即时通讯网 - 即时通讯开发者社区！\")"]],[5273,5316],[5273,5273]]],[1544851785753,["gjx16@GJXAIOU",[[-1,5275,"图1-5 五类互联网地址"]],[5275,5287],[5275,5275]]],[1544851790015,["gjx16@GJXAIOU",[[-1,5164,"第1章 概述_TCP/IP详解卷1 协议_即时通讯网(52im.net)"],[1,5200,"图1-5 五类互联网地址"]],[5164,5200],[5176,5176]]],[1544852114746,["gjx16@GJXAIOU",[[-1,5253,"6TCP/IP详解，卷1：协议[](http://www.52im.net/ \"即时通讯网 - 即时通讯开发者社区！\")\n"]],[5253,5314],[5253,5253]]],[1544852153646,["gjx16@GJXAIOU",[[1,5251,"[IP地址划分方法](ip地址与子网划分)"]],[5251,5251],[5272,5272]]],[1544852178753,["gjx16@GJXAIOU",[[1,6091,"**"],[1,6180,"**"]],[6091,6180],[6091,6184]]],[1544852184428,["gjx16@GJXAIOU",[[-1,6233,"主机号和网络号为全0或全1。"],[1,6247,"http://blog.51cto.com/6930123/2112403"]],[6233,6247],[6270,6270]]],[1544852187067,["gjx16@GJXAIOU",[[1,6233,"主机号和网络号为全0或全1。"],[-1,6233,"http://blog.51cto.com/6930123/2112403"]],[6270,6270],[6233,6247]]],[1544852188171,["gjx16@GJXAIOU",[[1,6233,"**"],[1,6247,"**"]],[6233,6247],[6233,6251]]],[1544852196833,["gjx16@GJXAIOU",[[1,6323,"**"],[1,6341,"**"]],[6323,6341],[6323,6345]]],[1544852205467,["gjx16@GJXAIOU",[[-1,6757,"第1章 概 述7[](http://www.52im.net/ \"即时通讯网 - 即时通讯开发者社区！\")\n"]],[6756,6810],[6756,6756]]],[1544852205924,["gjx16@GJXAIOU",[[-1,6757,"\n"]],[6756,6756],[6755,6755]]],[1544852219385,["gjx16@GJXAIOU",[[1,6656,"**"],[1,6755,"**"]],[6656,6755],[6656,6759]]],[1544852232705,["gjx16@GJXAIOU",[[1,6818,"**"],[1,6848,"**"]],[6818,6848],[6818,6852]]],[1544852238444,["gjx16@GJXAIOU",[[-1,6849,"。"]],[6850,6850],[6849,6849]]],[1544852240846,["gjx16@GJXAIOU",[[1,6851,"。"]],[6851,6851],[6852,6852]]],[1544852256924,["gjx16@GJXAIOU",[[1,6851,"（）"]],[6851,6851],[6853,6853]]],[1544852262708,["gjx16@GJXAIOU",[[1,6852,"数据包的大小"]],[6852,6852],[6858,6858]]]],null,"gjx16@GJXAIOU"],["0896009e-4fb7-43f2-bedd-91c2c4503eb7",1550458407863,"# 第一章：概述\n\n\n# 第1章 概述\n\n\n\n#### 1.1 引言\n\n很多不同的厂家生产各种型号的计算机，它们运行完全不同的操作系统，但TCP/IP协议族允许它们互相进行通信。这一点很让人感到吃惊，因为它的作用已远远超出了起初的设想。TCP/IP起源于60年代末美国政府资助的一个分组交换网络研究项目，到90年代已发展成为计算机之间最常应用的组网形式。它是一个真正的开放系统，因为协议族的定义及其多种实现可以不用花钱或花很少的钱就可以公开地得到。它成为被称作“全球互联网”或“因特网(Internet)”的基础，该广域网（WAN）已包含超过100万台遍布世界各地的计算机。\n\n本章主要对TCP/IP协议族进行概述，其目的是为本书其余章节提供充分的背景知识。如果读者要从历史的角度了解有关TCP/IP的早期发展情况，请参考文献[Lynch 1993]。\n\n#### 1.2 分层\n\n网络协议通常分不同层次进行开发，每一层分别负责不同的通信功能。**一个协议族，比如TCP/IP，是一组不同层次上的多个协议的组合。**TCP/IP通常被认为是一个四层协议系统，如图1-1所示。\n\n[![第1章 概述_TCP/IP详解卷1 协议_即时通讯网(52im.net)](http://docs.52im.net/extend/docs/book/tcpip/vol1/1/images2/52im_1.png)]\n图1-1 TCP/IP协议族的四个层次\n\n每一层负责不同的功能：\n\n1.  **链路层，有时也称作数据链路层或网络接口层，通常包括操作系统中的设备驱动程序和计算机中对应的网络接口卡。**它们一起处理与电缆（或其他任何传输媒介）的物理接口细节。\n2.  网络层，有时也称作互联网层，处理分组在网络中的活动，例如分组的选路。在TCP/IP协议族中，**网络层协议包括IP协议（网际协议），ICMP协议（Internet互联网控制报文协议），以及IGMP协议（Internet组管理协议）。**\n3.  运输层主要为两台主机上的应用程序提供端到端的通信。在TCP/IP协议族中，有两个互不相同的传输协议：TCP（传输控制协议）和UDP（用户数据报协议）。\n\n   TCP为两台主机提供高可靠性的数据通信。它所做的工作包括把应用程序交给它的数据分成合适的小块交给下面的网络层，确认接收到的分组，设置发送最后确认分组的超时时钟等。由于运输层提供了高可靠性的端到端的通信，因此应用层可以忽略所有这些细节。\n\n   而另一方面，UDP则为应用层提供一种非常简单的服务。它只是把称作数据报的分组从一台主机发送到另一台主机，但并不保证该数据报能到达另一端。任何必需的可靠性必须由应用层来提供。\n    这两种运输层协议分别在不同的应用程序中有不同的用途，这一点将在后面看到。\n4.  应用层负责处理特定的应用程序细节。几乎各种不同的TCP/IP实现都会提供下面这些通用的应用程序：\n\n   • Telnet远程登录。\n    • FTP文件传输协议。\n    • SMTP简单邮件传送协议。\n    • SNMP简单网络管理协议。 \n\n\n另外还有许多其他应用，在后面章节中将介绍其中的一部分。假设在一个局域网（LAN）如以太网中有两台主机，二者都运行FTP协议，图1-2列出了该过程所涉及到的所有协议。\n\n![图1-2 局域网上运行FTP的两台主机](http://docs.52im.net/extend/docs/book/tcpip/vol1/1/images2/52im_2.png)\n\n\n\n这里，我们列举了一个FTP客户程序和另一个FTP服务器程序。大多数的网络应用程序都被设计成客户—服务器模式。服务器为客户提供某种服务，在本例中就是访问服务器所在主机上的文件。在远程登录应用程序Te lnet中，为客户提供的服务是登录到服务器主机上。\n\n**在同一层上，双方都有对应的一个或多个协议进行通信。**例如，某个协议允许TCP层进行通信，而另一个协议则允许两个IP层进行通信。\n\n在图1-2的右边，我们注意到应用程序通常是一个用户进程，而下三层则一般在（操作系统）内核中执行。尽管这不是必需的，但通常都是这样处理的，例如UNIX操作系统。\n\n在图1-2中，顶层与下三层之间还有另一个关键的不同之处。应用层关心的是应用程序的细节，而不是数据在网络中的传输活动。下三层对应用程序一无所知，但它们要处理所有的通信细节。\n\n在图1-2中列举了四种不同层次上的协议。FTP是一种应用层协议，TCP是一种运输层协议，IP是一种网络层协议，而以太网协议则应用于链路层上。TCP/IP协议族是一组不同的协议组合在一起构成的协议族。尽管通常称该协议族为TCP/IP，但TCP和IP只是其中的两种协议而已（该协议族的另一个名字是Internet协议族(Internet Protocol Suite)）。\n\n网络接口层和应用层的目的是很显然的——前者处理有关通信媒介的细节（以太网、令牌环网等），而后者处理某个特定的用户应用程序（FTP、Telnet等）。但是，从表面上看，网络层和运输层之间的区别不那么明显。为什么要把它们划分成两个不同的层次呢？为了理解这一点，我们必须把视野从单个网络扩展到一组网络。\n\n\n\n在80年代，网络不断增长的原因之一是大家都意识到只有一台孤立的计算机构成的“孤岛”没有太大意义，于是就把这些孤立的系统组在一起形成网络。随着这样的发展，到了90年代，我们又逐渐认识到这种由单个网络构成的新的更大的“岛屿”同样没有太大的意义。于是，人们又把多个网络连在一起形成一个网络的网络，或称作互连网(internet)。一个互连网就是一组通过相同协议族互连在一起的网络。\n\n构造互连网最简单的方法是把两个或多个网络通过路由器进行连接。它是一种特殊的用于网络互连的硬件盒。**路由器的好处是为不同类型的物理网络提供连接**：以太网、令牌环网、点对点的链接和FDDI（光纤分布式数据接口）等等。\n\n这些盒子也称作IP路由器（IP Router），但我们这里使用路由器(Router)这个术语。从历史上说，这些盒子称作网关（gateway），在很多TCP/IP文献中都使用这个术语。现在网关这个术语只用来表示应用层网关：一个连接两种不同协议族的进程（例如，TCP/IP和IBM的SNA），它为某个特定的应用程序服务（常常是电子邮件或文件传输）。\n\n图1-3是一个包含两个网络的互连网：一个以太网和一个令牌环网，通过一个路由器互相连接。尽管这里是两台主机通过路由器进行通信，实际上以太网中的任何主机都可以与令牌环网中的任何主机进行通信。\n\n在图1-3中，我们可以划分出端系统（End system）（两边的两台主机）和中间系统（Intermediate system）（中间的路由器）。**应用层和运输层使用端到端（End-to-end）协议**。在图中，只有端系统需要这两层协议。但是，**网络层提供的却是逐跳（Hop-by-hop）协议**，两个端系统和每个中间系统都要使用它。\n\n\n![图1-3 通过路由器连接的两个网络]($resource/52im_3.png)\n\n![令牌环]($resource/%E4%BB%A4%E7%89%8C%E7%8E%AF.png)\n\n**令牌环**：在该网络中，有一个专门的帧叫做“令牌”，在环路上持续的传输来确定一个节点何时可以发送包。\n\n在TCP/IP协议族中，**网络层IP提供的是一种不可靠的服务**。也就是说，它只是尽可能快地把分组从源结点送到目的结点，但是并不提供任何可靠性保证。而另一方面，TCP在不可靠的IP层上提供了一个可靠的运输层。为了提供这种可靠的服务，TCP采用了超时重传、发送和接收端到端的确认分组等机制。由此可见，运输层和网络层分别负责不同的功能。\n\n从定义上看，一个路由器具有两个或多个网络接口层（因为它连接了两个或多个网络）。任何具有多个接口的系统，英文都称作是多接口的(multihomed)。一个主机也可以有多个接口，但一般不称作路由器,除非它的功能只是单纯地把分组从一个接口传送到另一个接口。同样，路由器并不一定指那种在互联网中用来转发分组的特殊硬件盒。大多数的TCP/IP实现也允许一个多接口主机来担当路由器的功能，但是主机为此必须进行特殊的配置。在这种情况下，我们既可以称该系统为主机（当它运行某一应用程序时，如FTP或Telnet），也可以称之为路由器（当它把分组从一个网络转发到另一个网络时）。在不同的场合下使用不同的术语。\n\n\n互联网的目的之一是在应用程序中隐藏所有的物理细节。虽然这一点在图1-3由两个网络组成的互联网中并不很明显，但是应用层不能关心（也不关心）一台主机是在以太网上，而另一台主机是在令牌环网上，它们通过路由器进行互连。随着增加不同类型的物理网络，可能会有20个路由器，但应用层仍然是一样的。物理细节的隐藏使得互联网功能非常强大，也非常有用。\n\n连接网络的另一个途径是使用网桥。网桥是在链路层上对网络进行互连，而路由器则是在网络层上对网络进行互连。网桥使得多个局域网（LAN）组合在一起，这样对上层来说就好像是一个局域网。\n\nTCP/IP倾向于使用路由器而不是网桥来连接网络，因此我们将着重介绍路由器。文献[Perlman 1992]的第12章对路由器和网桥进行了比较。\n\n#### 1.3 TCP/IP的分层\n\n在TCP/IP协议族中，有很多种协议。图1-4给出了本书将要讨论的其他协议。\n\n[![图1-4 TCP/IP协议族中不同层次的协议](http://docs.52im.net/extend/docs/book/tcpip/vol1/1/images2/52im_4.png)]\n\n\n\nTCP和UDP是两种最为著名的运输层协议，二者都使用IP作为网络层协议。\n\n虽然TCP使用不可靠的IP服务，但它却提供一种可靠的运输层服务。本书第17～22章将详细讨论TCP的内部操作细节。然后，我们将介绍一些TCP的应用，如第26章中的Telnet和Rlogin、第27章中的FTP以及第28章中的SMTP等。这些应用通常都是用户进程。\n\n**UDP为应用程序发送和接收数据报。一个数据报是指从发送方传输到接收方的一个信息单元（例如，发送方指定的一定字节数的信息）。**但是与TCP不同的是，UDP是不可靠的，它不能保证数据报能安全无误地到达最终目的。本书第11章将讨论UDP，然后在第14章（DNS:域名系统），第15章（TFTP：简单文件传送协议），以及第16章（BOOTP：引导程序协议）介绍使用UDP的应用程序。SNMP也使用了UDP协议，但是由于它还要处理许多其他的协议，因此本书把它留到第25章再进行讨论。\n\nIP是网络层上的主要协议，同时被TCP和UDP使用。TCP和UDP的每组数据都通过端系统和每个中间路由器中的IP层在互联网中进行传输。在图1-4中，我们给出了一个直接访问IP的应用程序。这是很少见的，但也是可能的（一些较老的选路协议就是以这种方式来实现的。当然新的运输层协议也有可能使用这种方式）。第3章主要讨论IP协议，但是为了使内容更加有针对性，一些细节将留在后面的章节中进行讨论。第9章和第10章讨论IP如何进行选路。\n\n**ICMP是IP协议的附属协议。IP层用它来与其他主机或路由器交换错误报文和其他重要信息。**第6章对ICMP的有关细节进行讨论。尽管ICMP主要被IP使用，但应用程序也有可能访问它。我们将分析两个流行的诊断工具，Ping和Traceroute（第7章和第8章），它们都使用了ICMP。\n\n**IGMP是Internet组管理协议。它用来把一个UDP数据报多播到多个主机。**我们在第12章中描述广播（把一个UDP数据报发送到某个指定网络上的所有主机）和多播的一般特性，然后在第13章中对IGMP协议本身进行描述。\n\nARP（地址解析协议）和RARP（逆地址解析协议）是某些网络接口（如以太网和令牌环网）使用的特殊协议，用来转换IP层和网络接口层使用的地址。我们分别在第4章和第5章对这两种协议进行分析和介绍。\n\n#### 1.4 互联网的地址\n\n互联网上的每个接口必须有一个唯一的Internet地址（也称作IP地址）。IP地址长32 bit。Internet地址并不采用平面形式的地址空间，如1、2、3等。IP地址具有一定的结构，五类不同的互联网地址格式如图1-5所示。\n\n[![图1-5 五类互联网地址](http://docs.52im.net/extend/docs/book/tcpip/vol1/1/images2/52im_5.png)]\n\n[IP地址划分方法](ip地址与子网划分)\n\n\n这些 32 位的地址通常写成四个十进制的数,其中每个整数对应一个字节。这种表示方法称作“点分十进制表示法(Dotted decimal notation)”。例如,作者的系统就是一个 B 类地址,它表示为: 140.252.13.33。\n\n区分各类地址的最简单方法是看它的第一个十进 制整数。图 1-6 列出了各类地址的起止范围，其中第一个十进制整数用加黑字体表示。\n\n需要再次指出的是，多接口主机具有多个IP地址，其中每个接口都对应一个IP地址。\n\n[![第1章 概述_TCP/IP详解卷1 协议_即时通讯网(52im.net)](http://docs.52im.net/extend/docs/book/tcpip/vol1/1/images2/52im_6.png)](http://www.52im.net/ \"即时通讯网 - 即时通讯开发者社区！\")\n\n图1-6 各类IP地址的范围\n\n由于互联网上的每个接口必须有一个唯一的IP地址，因此必须要有一个管理机构为接入互联网的网络分配IP地址。这个管理机构就是互联网络信息中心（Internet Network Information Centre），称作InterNIC。InterNIC只分配网络号。主机号的分配由系统管理员来负责。\n\nInternet注册服务(IP地址和DNS域名)过去由NIC来负责，其网络地址是nic.ddn.mil。1993年4月1日，InterNIC成立。现在，NIC只负责处理国防数据网的注册请求，所有其他的Internet用户注册请求均由InterNIC负责处理，其网址是：rs.internic.net。\n\n事实上InterNIC由三部分组成：注册服务（rs.internic.net），目录和数据库服务（ds.internic.net），以及信息服务（is.internic.net）。有关InterNIC的其他信息参见习题1.8。\n\n**有三类IP地址：单播地址（目的为单个主机）、广播地址（目的端为给定网络上的所有主机）以及多播地址（目的端为同一组内的所有主机）。第12章和第13章将分别讨论广播和多播的更多细节。**\n\n在3.4节中，我们在介绍IP选路以后将进一步介绍子网的概念。图3-9给出了几个特殊的IP地址：**主机号和网络号为全0或全1。**\n\n#### 1.5 域名系统\n\n尽管通过IP地址可以识别主机上的网络接口，进而访问主机，但是人们最喜欢使用的还是主机名。在TCP/IP领域中，**域名系统（DNS）是一个分布的数据库**，由它来提供IP地址和主机名之间的映射信息。我们在第14章将详细讨论DNS。\n\n现在，我们必须理解，任何应用程序都可以调用一个标准的库函数来查看给定名字的主机的IP地址。类似地，系统还提供一个逆函数—给定主机的IP地址，查看它所对应的主机名。\n\n大多数使用主机名作为参数的应用程序也可以把IP地址作为参数。例如，在第4章中当我们用Telnet进行远程登录时，既可以指定一个主机名，也可以指定一个IP地址。\n\n#### 1.6 封装\n\n当应用程序用TCP传送数据时，数据被送入协议栈中，然后逐个通过每一层直到被当作一串比特流送入网络。其中每一层对收到的数据都要增加一些首部信息（有时还要增加尾部信息），该过程如图1-7所示。**TCP传给IP的数据单元称作TCP报文段或简称为TCP段（TCP segment）。IP传给网络接口层的数据单元称作IP数据报(IP datagram)。通过以太网传输的比特流称作帧(Frame)。**\n\n图1-7中帧头和帧尾下面所标注的数字是典型以太网帧首部的字节长度。在后面的章节中我们将详细讨论这些帧头的具体含义。**以太网数据帧的物理特性是其长度必须在46～1500字节之间**（数据包的大小）。我们将在4.5节遇到最小长度的数据帧，在2.8节中遇到最大长度的数据帧。\n\n所有的Internet标准和大多数有关TCP/IP的书都使用octet这个术语来表示字节。使用这个过分雕琢的术语是有历史原因的，因为TCP/IP的很多工作都是在DEC-10系统上进行的，但是它并不使用8bit的字节。由于现在几乎所有的计算机系统都采用8bit的字节，因此我们在本书中使用字节（byte）这个术语。\n\n更准确地说，图1-7中IP和网络接口层之间传送的数据单元应该是分组（packet）。分组既可以是一个IP数据报，也可以是IP数据报的一个片（fragment）。我们将在11.5节讨论IP数据报分片的详细情况。\n\n[![第1章 概述_TCP/IP详解卷1 协议_即时通讯网(52im.net)](http://docs.52im.net/extend/docs/book/tcpip/vol1/1/images2/52im_7.png)](http://www.52im.net/ \"即时通讯网 - 即时通讯开发者社区！\")\n\n图1-7 数据进入协议栈时的封装过程\n\nUDP数据与TCP数据基本一致。唯一的不同是UDP传给IP的信息单元称作UDP数据报（UDP datagram），而且UDP的首部长为8字节。\n\n回想1.3节中的图1-4，由于TCP、UDP、ICMP和IGMP都要向IP传送数据，因此IP必须在生成的IP首部中加入某种标识，以表明数据属于哪一层。为此，IP在首部中存入一个长度为8bit的数值，称作协议域。1表示为ICMP协议，2表示为IGMP协议，6表示为TCP协议，17表示为UDP协议。\n\n类似地，许多应用程序都可以使用TCP或UDP来传送数据。运输层协议在生成报文首部时要存入一个应用程序的标识符。TCP和UDP都用一个16bit的端口号来表示不同的应用程序。TCP和UDP把源端口号和目的端口号分别存入报文首部中。\n\n网络接口分别要发送和接收IP、ARP和RARP数据，因此也必须在以太网的帧首部中加入某种形式的标识，以指明生成数据的网络层协议。为此，以太网的帧首部也有一个16 bit的帧类型域。\n\n8TCP/IP详解，卷1：协议[](http://www.52im.net/ \"即时通讯网 - 即时通讯开发者社区！\")\n\n#### 1.7 分用\n\n当目的主机收到一个以太网数据帧时，数据就开始从协议栈中由底向上升，同时去掉各层协议加上的报文首部。每层协议盒都要去检查报文首部中的协议标识，以确定接收数据的上层协议。这个过程称作分用（Demultiplexing），图1-8显示了该过程是如何发生的。\n\n[![第1章 概述_TCP/IP详解卷1 协议_即时通讯网(52im.net)](http://docs.52im.net/extend/docs/book/tcpip/vol1/1/images2/52im_8.png)](http://www.52im.net/ \"即时通讯网 - 即时通讯开发者社区！\")\n\n图1-8以太网数据帧的分用过程\n\n为协议ICMP和IGMP定位一直是一件很棘手的事情。在图1-4中，把它们与IP放在同一层上，那是因为事实上它们是IP的附属协议。但是在这里，我们又把它们放在IP层的上面，这是因为ICMP和IGMP报文都被封装在IP数据报中。\n\n对于ARP和RARP，我们也遇到类似的难题。在这里把它们放在以太网设备驱动程序的上方，这是因为它们和IP数据报一样，都有各自的以太网数据帧类型。但在图2-4中，我们又把ARP作为以太网设备驱动程序的一部分，放在IP层的下面，其原因在逻辑上是合理的。\n\n这些分层协议盒并不都是完美的。\n\n当进一步描述TCP的细节时，我们将看到协议确实是通过目的端口号、源IP地址和源端口号进行解包的。\n\n#### 1.8 客户-服务器模型\n\n大部分网络应用程序在编写时都假设一端是客户，另一端是服务器，其目的是为了让服务器为客户提供一些特定的服务。\n\n可以将这种服务分为两种类型：重复型或并发型。重复型服务器通过以下步骤进行交互：\n\n第1章 概 述9[](http://www.52im.net/ \"即时通讯网 - 即时通讯开发者社区！\")\n\n1.  I1.等待一个客户请求的到来。\n2.  I2.处理客户请求。\n3.  I3.发送响应给发送请求的客户。\n4.  I4.返回I1步。\n\n重复型服务器主要的问题发生在I2状态。在这个时候，它不能为其他客户机提供服务。相应地，并发型服务器采用以下步骤：\n\n1.  C1.等待一个客户请求的到来。\n2.  C2.启动一个新的服务器来处理这个客户的请求。在这期间可能生成一个新的进程、任务或线程，并依赖底层操作系统的支持。这个步骤如何进行取决于操作系统。生成的新服务器对客户的全部请求进行处理。处理结束后，终止这个新服务器。\n3.  C3.返回C1步。\n\n并发服务器的优点在于它是利用生成其他服务器的方法来处理客户的请求。也就是说，每个客户都有它自己对应的服务器。如果操作系统允许多任务，那么就可以同时为多个客户服务。\n\n对服务器，而不是对客户进行分类的原因是因为对于一个客户来说，它通常并不能够辨别自己是与一个重复型服务器或并发型服务器进行对话。\n\n一般来说，TCP服务器是并发的，而UDP服务器是重复的，但也存在一些例外。我们将在11.12节对UDP对其服务器产生的影响进行详细讨论，并在18.11节对TCP对其服务器的影响进行讨论。\n\n#### 1.9 端口号\n\n前面已经指出过，TCP和UDP采用16 bit的端口号来识别应用程序。那么这些端口号是如何选择的呢？\n\n服务器一般都是通过知名端口号来识别的。例如，对于每个TCP/IP实现来说，FTP服务器的TCP端口号都是21，每个Telnet服务器的TCP端口号都是23，每个TFTP(简单文件传送协议)服务器的UDP端口号都是69。任何TCP/IP实现所提供的服务都用知名的1～1023之间的端口号。这些知名端口号由Internet号分配机构（Internet Assigned Numbers Authority, IANA）来管理。\n\n到1992年为止，知名端口号介于1～255之间。256～1023之间的端口号通常都是由Unix系统占用，以提供一些特定的Unix服务—也就是说，提供一些只有Unix系统才有的、而其他操作系统可能不提供的服务。现在IANA管理1～1023之间所有的端口号。\n\nInternet扩展服务与Unix特定服务之间的一个差别就是Telnet和Rlogin。它们二者都允许通过计算机网络登录到其他主机上。Telnet是采用端口号为23的TCP/IP标准且几乎可以在所有操作系统上进行实现。相反，Rlogin最开始时只是为Unix系统设计的（尽管许多非Unix系统现在也提供该服务），因此在80年代初，它的有名端口号为513。\n\n客户端通常对它所使用的端口号并不关心，只需保证该端口号在本机上是唯一的就可以了。客户端口号又称作临时端口号（即存在时间很短暂）。这是因为它通常只是在用户运行该客户程序时才存在，而服务器则只要主机开着的，其服务就运行。\n\n大多数TCP/IP实现给临时端口分配1024～5000之间的端口号。大于5000的端口号是为其他服务器预留的（Internet上并不常用的服务)。我们可以在后面看见许多这样的给临时端口分配端口号的例子。\n\n10TCP/IP详解，卷1：协议[](http://www.52im.net/ \"即时通讯网 - 即时通讯开发者社区！\")\n\nSolaris 2.2是一个很有名的例外。通常TCP和UDP的缺省临时端口号从32768开始。\n\n在E.4节中，我们将详细描述系统管理员如何对配置选项进行修改以改变这些缺省项。\n\n大多数Unix系统的文件/etc/services都包含了人们熟知的端口号。为了找到Telnet服务器和域名系统的端口号，可以运行以下语句：\n\n[![第1章 概述_TCP/IP详解卷1 协议_即时通讯网(52im.net)](http://docs.52im.net/extend/docs/book/tcpip/vol1/1/images2/52im_9.png)](http://www.52im.net/ \"即时通讯网 - 即时通讯开发者社区！\")\n\nUnix系统有保留端口号的概念。只有具有超级用户特权的进程才允许给它自己分配一个保留端口号。\n\n这些端口号介于1～1023之间，一些应用程序（如有名的Rlogin，26.2节）将它作为客户与服务器之间身份认证的一部分。\n\n#### 1.10 标准化过程\n\n究竟是谁控制着TCP/IP协议族，又是谁在定义新的标准以及其他类似的事情？事实上，有四个小组在负责Internet技术。\n\n1.  Internet协会（ISOC，Internet Society）是一个推动、支持和促进Internet不断增长和发展的专业组织，它把Internet作为全球研究通信的基础设施。\n2.  Internet体系结构委员会（IAB，Internet Architecture Board）是一个技术监督和协调的机构。它由国际上来自不同专业的15个志愿者组成，其职能是负责Internet标准的最后编辑和技术审核。IAB隶属于ISOC。\n3.  Internet工程专门小组（IETF，Internet Engineering Task Force）是一个面向近期标准的组织，它分为9个领域（应用、寻径和寻址、安全等等）。IETF开发成为Internet标准的规范。为帮助IETF主席，又成立了Internet工程指导小组（IESG, Internet Engineering Steering Group）。\n4.  Internet研究专门小组（IRIF，Internet Research Task Force）主要对长远的项目进行研究。\n\nIRTF和IETF都隶属于IAB。文献[Crocker 1993]提供了关于Internet内部标准化进程更为详细的信息，同时还介绍了它的早期历史。\n\n#### 1.11 RFC\n\n所有关于Internet的正式标准都以RFC（Request for Comment）文档出版。另外，大量的RFC并不是正式的标准，出版的目的只是为了提供信息。RFC的篇幅从1页到200页不等。每一项都用一个数字来标识，如RFC 1122，数字越大说明RFC的内容越新。\n\n所有的RFC都可以通过电子邮件或用FTP从Internet上免费获取。如果发送下面这份电子邮件，就会收到一份获取RFC的方法清单：\n\n第1章 概 述11[](http://www.52im.net/ \"即时通讯网 - 即时通讯开发者社区！\")\n\nTo: rfc-info@ISI.EDU \nSubject: getting rfcs \nhelp: ways_to_get_rfcs\n\n最新的RFC索引总是搜索信息的起点。这个索引列出了RFC被替换或局部更新的时间。下面是一些重要的RFC文档：\n\n1.  赋值RFC（Assigned Numbers RFC）列出了所有Internet协议中使用的数字和常数。至本书出版时为止，最新RFC的编号是1340[Reynolds 和 Postel 1992]。所有著名的Internet端口号都列在这里。\n\n    当这个RFC被更新时(通常每年至少更新一次），索引清单会列出RFC 1340被替换的时间。\n2.  Internet正式协议标准，目前是RFC 1600[Postel 1994]。这个RFC描述了各种Internet协议的标准化现状。每种协议都处于下面几种标准化状态之一：标准、草案标准、提议标准、实验标准、信息标准和历史标准。另外，对每种协议都有一个要求的层次、必需的、建议的、可选择的、限制使用的或者不推荐的。\n\n    与赋值RFC一样，这个RFC也定期更新。请随时查看最新版本。\n3.  主机需求RFC，1122和1123[Braden 1989a, 1989b]。RFC 1122针对链路层、网络层和运输层；RFC 1123针对应用层。这两个RFC对早期重要的RFC文档作了大量的纠正和解释。如果要查看有关协议更详细的细节内容，它们通常是一个入口点。它们列出了协议中关于“必须”、“应该”、“可以”、“不应该”或者“不能”等特性及其实现细节。文献[Borman 1993b]提供了有关这两个RFC的实用内容。RFC 1127[Braden 1989c]对工作小组开发主机需求RFC过程中的讨论内容和结论进行了非正式的总结。\n4.  路由器需求RFC，目前正式版是RFC 1009[Braden and Postel 1987]，但一个新版已接近完成[Almquist 1993]。它与主机需求RFC类似，但是只单独描述了路由器的需求。\n\n#### 1.12 标准的简单服务\n\n有一些标准的简单服务几乎每种实现都要提供。在本书中我们将使用其中的一些服务程序，而客户程序通常选择Telnet。图1-9描述了这些服务。从该图可以看出，当使用TCP和UDP提供相同的服务时，一般选择相同的端口号。\n\n[![第1章 概述_TCP/IP详解卷1 协议_即时通讯网(52im.net)](http://docs.52im.net/extend/docs/book/tcpip/vol1/1/images2/52im_10.png)](http://www.52im.net/ \"即时通讯网 - 即时通讯开发者社区！\")\n\n图1-9大多数实现都提供的标准的简单服务\n\n12TCP/IP详解，卷1：协议[](http://www.52im.net/ \"即时通讯网 - 即时通讯开发者社区！\")\n\n如果仔细检查这些标准的简单服务以及其他标准的TCP/IP服务（如Telnet、FTP、SMTP等）的端口号时，我们发现它们都是奇数。这是有历史原因的，因为这些端口号都是从NCP端口号派生出来的（NCP，即网络控制协议，是ARPANET的运输层协议，是TCP的前身）。NCP是单工的，不是全双工的，因此每个应用程序需要两个连接，需预留一对奇数和偶数端口号。当TCP和UDP成为标准的运输层协议时，每个应用程序只需要一个端口号，因此就使用了NCP中的奇数。\n\n#### 1.13 互联网\n\n在图1-3中，我们列举了一个由两个网络组成的互联网——一个以太网和一个令牌环网。在1.4节和1.9节中，我们讨论了世界范围内的互联网—Internet，以及集中分配IP地址的需要（InterNIC），还讨论了知名端口号（IANA）。internet这个词第一个字母是否大写决定了它具有不同的含义。\n\ninternet意思是用一个共同的协议族把多个网络连接在一起。而Internet指的是世界范围内通过TCP/IP互相通信的所有主机集合（超过100万台）。Internet是一个internet，但internet不等于Internet。\n\n#### 1.14 实现\n\n既成事实标准的TCP/IP软件实现来自于位于伯克利的加利福尼亚大学的计算机系统研究小组。从历史上看，软件是随同4.x BSD系统（Berkeley Software Distribution）的网络版一起发布的。它的源代码是许多其他实现的基础。\n\n图1-10列举了各种BSD版本发布的时间，并标注了重要的TCP/IP特性。列在左边的BSD网络版，其所有的网络源代码可以公开得到：包括协议本身以及许多应用程序和工具（如Telnet和FTP）。\n\n[![第1章 概述_TCP/IP详解卷1 协议_即时通讯网(52im.net)](http://docs.52im.net/extend/docs/book/tcpip/vol1/1/images2/52im_11.png)](http://www.52im.net/ \"即时通讯网 - 即时通讯开发者社区！\")\n\n图1-10 不同的BSD版及其重要的TCP/IP特性\n\n在本书中，我们将使用“伯克利派生系统”来指SunOS 4.x、SVR4以及AIX 3.2等那些基于伯克利源代码开发的系统。这些系统有很多共同之处，经常包含相同的错误。\n\n起初关于Internet的很多研究现在仍然在伯克利系统中应用——新的拥塞控制算法（21.7节）、多播（12.4节）、“长肥管道”修改（24.3节）以及其他类似的研究。\n\n#### 1.15 应用编程接口\n\n使用TCP/IP协议的应用程序通常采用两种应用编程接口（API）：socket和TLI（运输层接口：Transport Layer Interface）。前者有时称作“Berkeley socket”，表明它是从伯克利版发展而来的。后者起初是由AT&T开发的，有时称作XTI（X/Open运输层接口），以承认X/Open这个自己定义标准的国际计算机生产商所做的工作。XTI实际上是TLI的一个超集。\n\n第1章 概 述13[](http://www.52im.net/ \"即时通讯网 - 即时通讯开发者社区！\")\n\n本书不是一本编程方面的书，但是偶尔会引用一些内容来说明TCP/IP的特性，不管大多数的API（socket）是否提供它们。所有关于socket和TLI的编程细节请参阅文献[Stevens 1990]。\n\n#### 1.16 测试网络\n\n图1-11是本书中所有的例子运行的测试网络。为阅读时参考方便，该图还复制在本书扉页前的插页中。\n\n[![第1章 概述_TCP/IP详解卷1 协议_即时通讯网(52im.net)](http://docs.52im.net/extend/docs/book/tcpip/vol1/1/images2/52im_12.png)](http://www.52im.net/ \"即时通讯网 - 即时通讯开发者社区！\")\n\n图1-11 本书中所有例子运行的测试网络，所有的IP地址均从140.252开始编址\n\n在这个图中（作者的子网），大多数的例子都运行在下面四个系统中。图中所有的IP地址属于B类地址，网络号为140.252。所有的主机名属于.tuc.noao.edu这个域（noao代表National Optical Astronomy Observatories，tuc代表Tu cson）。例如，右下方的系统有一个完整的名字:svr4.tuc.noao.edu，其IP地址是：140.252.13.34。每个方框上方的名称是该主机运行的操作系统。这一组系统和网络上的主机及路由器运行于不同的TCP/IP实现。\n\n需要指出的是，noao.edu这个域中的网络和主机要比图1-11中的多得多。这里列出来的只是本书中将要用到的系统。\n\n在3.4节中，我们将描述这个网络所用到的子网形式。在4.6节中将介绍sun与netb之间的拨号SLIP的有关细节。2.4节将详细讨论SLIP。\n\n#### 1.17 小结\n\n本章快速地浏览了TCP/IP协议族，介绍了在后面的章节中将要详细讨论的许多术语和协议。\n\n14TCP/IP详解，卷1：协议[](http://www.52im.net/ \"即时通讯网 - 即时通讯开发者社区！\")\n\nTCP/IP协议族分为四层：链路层、网络层、运输层和应用层，每一层各有不同的责任。在TCP/IP中，网络层和运输层之间的区别是最为关键的：网络层（IP）提供点到点的服务，而运输层（TCP和UDP）提供端到端的服务。\n\n一个互联网是网络的网络。构造互联网的共同基石是路由器，它们在IP层把网络连在一起。第一个字母大写的Internet是指分布在世界各地的大型互联网，其中包括1万多个网络和超过100万台主机。\n\n在一个互联网上，每个接口都用IP地址来标识，尽管用户习惯使用主机名而不是IP地址。域名系统为主机名和IP地址之间提供动态的映射。端口号用来标识互相通信的应用程序。服务器使用知名端口号，而客户使用临时设定的端口号。\n\n#### 习题\n\n1.  请计算最多有多少个A类、B类和C类网络号。\n2.  用匿名FTP（见27.3节）从主机nic.merit.edu上获取文件nsfnet/statistics/history.netcount。该文件包含在NSFNET网络上登记的国内和国外的网络数。画一坐标系，横坐标代表年，纵坐标代表网络总数的对数值。纵坐标的最大值是习题1.1的结果。如果数据显示一个明显的趋势，请估计按照当前的编址体制推算，何时会用完所有的网络地址（3.10节讨论解决该难题的建议）。\n3.  获取一份主机需求RFC拷贝[Braden 1989a]，阅读有关应用于TCP/IP协议族每一层的稳健性原则。这个原则的参考对象是什么？\n4.  获取一份最新的赋值RFC拷贝。“quote of the day”协议的有名端口号是什么？哪个RFC对该协议进行了定义？\n5.  如果你有一个接入TCP/IP互联网的主机帐号，它的主IP地址是多少？这台主机是否接入了Internet？它是多接口主机吗？\n6.  获取一份RFC 1000的拷贝，了解RFC这个术语从何而来。\n7.  与Internet协会联系，isoc@isoc.org或者+1703 648 9888，了解有关加入的情况。\n8.  用匿名FTP从主机is.internic.net处获取文件about-internic/information-about-the-internic。\n",[[1550458373315,["gjx16@GJXAIOU",[[-1,36,"很多不同的厂家生产各种型号的计算机，它们运行完全不同的操作系统，但TCP/IP协议族允许它们互相进行通信。这一点很让人感到吃惊，因为它的作用已远远超出了起初的设想。TCP/IP起源于60年代末美国政府资助的一个分组交换网络研究项目，到90年代已发展成为计算机之间最常应用的组网形式。它是一个真正的开放系统，因为协议族的定义及其多种实现可以不用花钱或花很少的钱就可以公开地得到。它成为被称作“全球互联网”或“因特网(Internet)”的基础，该广域网（WAN）已包含超过100万台遍布世界各地的计算机。\n\n本章主要对TCP/IP协议族进行概述，其目的是为本书其余章节提供充分的背景知识。如果读者要从历史的角度了解有关TCP/IP的早期发展情况，请参考文献[Lynch 1993]。\n"]],[36,377],[36,36]]],[1550458446280,["gjx16@GJXAIOU",[[-1,148,"["]],[149,149],[148,148]]],[1550458448792,["gjx16@GJXAIOU",[[-1,258,"]"]],[259,259],[258,258]]],[1550458543128,["gjx16@GJXAIOU",[[-1,1150,"这里，我们列举了一个FTP客户程序和另一个FTP服务器程序。大多数的网络应用程序都被设计成客户—服务器模式。服务器为客户提供某种服务，在本例中就是访问服务器所在主机上的文件。在远程登录应用程序Te lnet中，为客户提供的服务是登录到服务器主机上。\n"]],[1149,1274],[1149,1149]]],[1550458585536,["gjx16@GJXAIOU",[[-1,1725,"在80年代，网络不断增长的原因之一是大家都意识到只有一台孤立的计算机构成的“孤岛”没有太大意义，于是就把这些孤立的系统组在一起形成网络。随着这样的发展，到了90年代，我们又逐渐认识到这种由单个网络构成的新的更大的“岛屿”同样没有太大的意义。于是，人们又把多个网络连在一起形成一个网络的网络，或称作互连网(internet)。一个互连网就是一组通过相同协议族互连在一起的网络。\n\n"]],[1724,1913],[1724,1724]]],[1550458610658,["gjx16@GJXAIOU",[[-1,1724,"\n构造互连网最简单的方法是把两个或多个网络通过路由器进行连接。它是一种特殊的用于网络互连的硬件盒。"]],[1724,1773],[1724,1724]]],[1550458628296,["gjx16@GJXAIOU",[[-1,1786,"这些盒子也称作IP路由器（IP Router），但我们这里使用路由器(Router)这个术语。从历史上说，这些盒子称作网关（gateway），在很多TCP/IP文献中都使用这个术语。现在网关这个术语只用来表示应用层网关：一个连接两种不同协议族的进程（例如，TCP/IP和IBM的SNA），它为某个特定的应用程序服务（常常是电子邮件或文件传输）。\n"]],[1785,1958],[1785,1785]]],[1550458798695,["gjx16@GJXAIOU",[[1,2286,"**"],[1,2310,"**"]],[2286,2310],[2286,2314]]],[1550458832359,["gjx16@GJXAIOU",[[-1,2378,"从定义上看，一个路由器具有两个或多个网络接口层（因为它连接了两个或多个网络）。任何具有多个接口的系统，英文都称作是多接口的(multihomed)。一个主机也可以有多个接口，但一般不称作路由器,除非它的功能只是单纯地把分组从一个接口传送到另一个接口。同样，路由器并不一定指那种在互联网中用来转发分组的特殊硬件盒。大多数的TCP/IP实现也允许一个多接口主机来担当路由器的功能，但是主机为此必须进行特殊的配置。在这种情况下，我们既可以称该系统为主机（当它运行某一应用程序时，如FTP或Telnet），也可以称之为路由器（当它把分组从一个网络转发到另一个网络时）。在不同的场合下使用不同的术语。\n"]],[2378,2674],[2378,2378]]],[1550458845919,["gjx16@GJXAIOU",[[-1,2380,"互联网的目的之一是在应用程序中隐藏所有的物理细节。虽然这一点在图1-3由两个网络组成的互联网中并不很明显，但是应用层不能关心（也不关心）一台主机是在以太网上，而另一台主机是在令牌环网上，它们通过路由器进行互连。随着增加不同类型的物理网络，可能会有20个路由器，但应用层仍然是一样的。物理细节的隐藏使得互联网功能非常强大，也非常有用。\n"]],[2379,2546],[2379,2379]]],[1550458846048,["gjx16@GJXAIOU",[[-1,2380,"\n"]],[2379,2379],[2378,2378]]],[1550458846897,["gjx16@GJXAIOU",[[-1,2379,"\n"]],[2378,2378],[2377,2377]]],[1550458862265,["gjx16@GJXAIOU",[[1,2395,"**"],[1,2449,"**"]],[2395,2449],[2395,2453]]],[1550458874480,["gjx16@GJXAIOU",[[-1,2473,"TCP/IP倾向于使用路由器而不是网桥来连接网络，因此我们将着重介绍路由器。文献[Perlman 1992]的第12章对路由器和网桥进行了比较。\n"]],[2473,2546],[2473,2473]]],[1550458882057,["gjx16@GJXAIOU",[[-1,36,"\n"]],[36,36],[35,35]]],[1550458883010,["gjx16@GJXAIOU",[[-1,22,"\n"]],[21,21],[20,20]]],[1550458884513,["gjx16@GJXAIOU",[[-1,10,"\n"]],[10,10],[9,9]]],[1550458885295,["gjx16@GJXAIOU",[[-1,20,"\n"]],[19,19],[18,18]]],[1550459117056,["gjx16@GJXAIOU",[[-1,2670,"虽然TCP使用不可靠的IP服务，但它却提供一种可靠的运输层服务。本书第17～22章将详细讨论TCP的内部操作细节。然后，我们将介绍一些TCP的应用，如第26章中的Telnet和Rlogin、第27章中的FTP以及第28章中的SMTP等。这些应用通常都是用户进程。"]],[2670,2801],[2670,2670]]],[1550459149096,["gjx16@GJXAIOU",[[-1,2778,"本书第11章将讨论UDP，然后在第14章（DNS:域名系统），第15章（TFTP：简单文件传送协议），以及第16章（BOOTP：引导程序协议）介绍使用UDP的应用程序。SNMP也使用了UDP协议，但是由于它还要处理许多其他的协议，因此本书把它留到第25章再进行讨论。"]],[2778,2911],[2778,2778]]],[1550459199586,["gjx16@GJXAIOU",[[-1,2929,"第3章主要讨论IP协议，但是为了使内容更加有针对性，一些细节将留在后面的章节中进行讨论。第9章和第10章讨论IP如何进行选路。"]],[2929,2992],[2929,2929]]],[1550459227160,["gjx16@GJXAIOU",[[-1,2979,"第6章对ICMP的有关细节进行讨论。尽管ICMP主要被IP使用，但应用程序也有可能访问它。我们将分析两个流行的诊断工具，Ping和Traceroute（第7章和第8章），它们都使用了ICMP。\n"]],[2979,3076],[2979,2979]]],[1550459903762,["gjx16@GJXAIOU",[[-1,3023,"我们在第12章中描述广播（把一个UDP数据报发送到某个指定网络上的所有主机）和多播的一般特性，然后在第13章中对IGMP协议本身进行描述。"]],[3023,3092],[3023,3023]]],[1550459921201,["gjx16@GJXAIOU",[[-1,3095,"我们分别在第4章和第5章对这两种协议进行分析和介绍。\n"]],[3095,3122],[3095,3095]]],[1550459922979,["gjx16@GJXAIOU",[[1,3096,"\n"]],[3095,3095],[3096,3096]]],[1550459923122,["gjx16@GJXAIOU",[[1,3097,"\n"]],[3096,3096],[3097,3097]]],[1550459955113,["gjx16@GJXAIOU",[[-1,3114,"\n互联网上的每个接口必须有一个唯一的Internet地址（也称作IP地址）。IP地址长32 bit。Internet地址并不采用平面形式的地址空间，如1、2、3等。IP地址具有一定的结构，"]],[3114,3208],[3114,3114]]],[1550459956922,["gjx16@GJXAIOU",[[1,3114,"\n互联网上的每个接口必须有一个唯一的Internet地址（也称作IP地址）。IP地址长32 bit。Internet地址并不采用平面形式的地址空间，如1、2、3等。IP地址具有一定的结构，"]],[3114,3114],[3114,3208]]],[1550459962994,["gjx16@GJXAIOU",[[-1,3115,"互联网上的每个接口必须有一个唯一的Internet地址（也称作IP地址）。"]],[3115,3152],[3115,3115]]],[1550459968080,["gjx16@GJXAIOU",[[-1,3128,"nternet地址并不采用平面形式的地址空间，如1、2、3等。I"]],[3126,3158],[3126,3126]]],[1550459969073,["gjx16@GJXAIOU",[[-1,3126,"。"]],[3127,3127],[3126,3126]]],[1550459969532,["gjx16@GJXAIOU",[[1,3126,"，"]],[3126,3126],[3127,3127]]],[1550459979570,["gjx16@GJXAIOU",[[-1,3127,"IP地址具有一定的结构，"]],[3127,3139],[3127,3127]]],[1550466010402,["gjx16@GJXAIOU",[[-1,3342,"例如,作者的系统就是一个 B 类地址,它表示为: 140.252.13.33。"]],[3342,3381],[3342,3342]]],[1550466027276,["gjx16@GJXAIOU",[[-1,3263,"这些 32 位的地址通常写成四个十进制的数,其中每个整数对应一个字节。这种表示方法称作“点分十进制表示法(Dotted decimal notation)”。\n\n区分各类地址的最简单方法是看它的第一个十进 制整数。图 1-6 列出了各类地址的起止范围，其中第一个十进制整数用加黑字体表示。"]],[3263,3407],[3263,3263]]],[1550466034562,["gjx16@GJXAIOU",[[-1,3264,"\n"]],[3265,3265],[3264,3264]]],[1550466034948,["gjx16@GJXAIOU",[[-1,3263,"\n"]],[3264,3264],[3263,3263]]],[1550466035346,["gjx16@GJXAIOU",[[-1,3262,"\n"]],[3263,3263],[3262,3262]]],[1550466046754,["gjx16@GJXAIOU",[[-1,3149,"["]],[3150,3150],[3149,3149]]],[1550466052691,["gjx16@GJXAIOU",[[-1,3235,"]"]],[3236,3236],[3235,3235]]],[1550466067937,["gjx16@GJXAIOU",[[1,3393,"1/"]],[3389,3391],[3391,3391]]],[1550466069884,["gjx16@GJXAIOU",[[-1,3393,"1/"]],[3391,3391],[3389,3391]]],[1550466128938,["gjx16@GJXAIOU",[[-1,3412,"](http://www.52im.net/ \"即时通讯网 - 即时通讯开发者社区！\")"]],[3413,3456],[3412,3412]]],[1550466130922,["gjx16@GJXAIOU",[[-1,3413,"\n"]],[3413,3413],[3412,3412]]],[1550466304074,["gjx16@GJXAIOU",[[-1,3429,"由于互联网上的每个接口必须有一个唯一的IP地址，因此必须要有一个管理机构为接入互联网的网络分配IP地址。这个管理机构就是互联网络信息中心（Internet Network Information Centre），称作InterNIC。InterNIC只分配网络号。主机号的分配由系统管理员来负责。\n"]],[3428,3577],[3428,3428]]],[1550466311266,["gjx16@GJXAIOU",[[-1,3430,"Internet注册服务(IP地址和DNS域名)过去由NIC来负责，其网络地址是nic.ddn.mil。1993年4月1日，InterNIC成立。现在，NIC只负责处理国防数据网的注册请求，所有其他的Internet用户注册请求均由InterNIC负责处理，其网址是：rs.internic.net。\n\n事实上InterNIC由三部分组成：注册服务（rs.internic.net），目录和数据库服务（ds.internic.net），以及信息服务（is.internic.net）。有关InterNIC的其他信息参见习题1.8。\n"]],[3429,3695],[3429,3429]]],[1550466311387,["gjx16@GJXAIOU",[[-1,3430,"\n"]],[3429,3429],[3428,3428]]],[1550466311555,["gjx16@GJXAIOU",[[-1,3429,"\n"]],[3428,3428],[3427,3427]]],[1550466321889,["gjx16@GJXAIOU",[[-1,3494,"。第12章和第13章将分别讨论广播和多播的更多细节。"]],[3494,3520],[3494,3494]]],[1550466338354,["gjx16@GJXAIOU",[[-1,3497,"\n在3.4节中，我们在介绍IP选路以后将进一步介绍子网的概念。"]],[3497,3528],[3497,3497]]],[1550466409082,["gjx16@GJXAIOU",[[-1,3549,"尽管通过IP地址可以识别主机上的网络接口，进而访问主机，但是人们最喜欢使用的还是主机名。在TCP/IP领域中，"]],[3549,3604],[3549,3549]]],[1550466413410,["gjx16@GJXAIOU",[[-1,3593,"我们在第14章将详细讨论DNS。"]],[3593,3609],[3593,3593]]],[1550466427010,["gjx16@GJXAIOU",[[-1,3595,"现在，我们必须理解，任何应用程序都可以调用一个标准的库函数来查看给定名字的主机的IP地址。类似地，系统还提供一个逆函数—给定主机的IP地址，查看它所对应的主机名。\n\n大多数使用主机名作为参数的应用程序也可以把IP地址作为参数。例如，在第4章中当我们用Telnet进行远程登录时，既可以指定一个主机名，也可以指定一个IP地址。\n"]],[3594,3757],[3594,3594]]],[1550466427402,["gjx16@GJXAIOU",[[-1,3595,"\n"]],[3594,3594],[3593,3593]]],[1550466605324,["gjx16@GJXAIOU",[[-1,3608,"当应用程序用TCP传送数据时，数据被送入协议栈中，然后逐个通过每一层直到被当作一串比特流送入网络。其中每一层对收到的数据都要增加一些首部信息（有时还要增加尾部信息），该过程如图1-7所示。**TCP传给IP的数据单元称作TCP报文段或简称为TCP段（TCP segment）。IP传给网络接口层的数据单元称作IP数据报(IP datagram)。通过以太网传输的比特流称作帧(Frame)。**"]],[3608,3805],[3608,3608]]],[1550466628681,["gjx16@GJXAIOU",[[-1,3610,"图1-7中帧头和帧尾下面所标注的数字是典型以太网帧首部的字节长度。在后面的章节中我们将详细讨论这些帧头的具体含义。"]],[3667,3667],[3610,3610]]],[1550466631618,["gjx16@GJXAIOU",[[-1,3652,"我们将在4.5节遇到最小长度的数据帧，在2.8节中遇到最大长度的数据帧。\n"]],[3652,3689],[3652,3652]]],[1550466633842,["gjx16@GJXAIOU",[[-1,3609,"\n"]],[3609,3609],[3608,3608]]],[1550466634266,["gjx16@GJXAIOU",[[-1,3608,"\n"]],[3608,3608],[3607,3607]]],[1550466661604,["gjx16@GJXAIOU",[[-1,3651,"所有的Internet标准和大多数有关TCP/IP的书都使用octet这个术语来表示字节。使用这个过分雕琢的术语是有历史原因的，因为TCP/IP的很多工作都是在DEC-10系统上进行的，但是它并不使用8bit的字节。由于现在几乎所有的计算机系统都采用8bit的字节，因此我们在本书中使用字节（byte）这个术语。"]],[3651,3807],[3651,3651]]],[1550466682540,["gjx16@GJXAIOU",[[1,3664,"**"],[1,3694,"**"]],[3664,3694],[3664,3698]]],[1550466691298,["gjx16@GJXAIOU",[[1,3699,"**"],[1,3736,"**"]],[3699,3736],[3699,3740]]],[1550466693810,["gjx16@GJXAIOU",[[-1,3741,"我们将在11.5节讨论IP数据报分片的详细情况。"]],[3741,3765],[3741,3741]]],[1550466698458,["gjx16@GJXAIOU",[[-1,3653,"更准确地说，"]],[3659,3659],[3653,3653]]],[1550466698900,["gjx16@GJXAIOU",[[-1,3652,"\n"]],[3653,3653],[3652,3652]]],[1550466709378,["gjx16@GJXAIOU",[[-1,3848,"(http://www.52im.net/ \"即时通讯网 - 即时通讯开发者社区！\")"]],[3848,3891],[3848,3848]]],[1550466722325,["gjx16@GJXAIOU",[[1,3886,"**"],[1,3941,"**"]],[3886,3941],[3886,3945]]],[1550466745916,["gjx16@GJXAIOU",[[1,4024,"**"],[1,4095,"**"]],[4024,4095],[4024,4099]]],[1550466832884,["gjx16@GJXAIOU",[[1,4187,"**"],[1,4215,"**"]],[4187,4215],[4187,4219]]],[1550466857594,["gjx16@GJXAIOU",[[1,4288,"**"],[1,4311,"**"]],[4288,4311],[4288,4315]]],[1550466865044,["gjx16@GJXAIOU",[[-1,4317,"8TCP/IP详解，卷1：协议[](http://www.52im.net/ \"即时通讯网 - 即时通讯开发者社区！\")"]],[4317,4377],[4317,4317]]],[1550467186797,["gjx16@GJXAIOU",[[-1,4571,"(http://www.52im.net/ \"即时通讯网 - 即时通讯开发者社区！\")"]],[4571,4614],[4571,4571]]],[1550467198292,["gjx16@GJXAIOU",[[-1,4572,"\n"]],[4572,4572],[4571,4571]]],[1550467200450,["gjx16@GJXAIOU",[[-1,4570,"]"]],[4571,4571],[4570,4570]]],[1550467230277,["gjx16@GJXAIOU",[[1,4673,"**"],[1,4700,"**"]],[4673,4700],[4673,4704]]],[1550467252907,["gjx16@GJXAIOU",[[-1,4849,"当进一步描述TCP的细节时，我们将看到协议确实是通过目的端口号、源IP地址和源端口号进行解包的。\n"]],[4849,4898],[4849,4849]]],[1550467254234,["gjx16@GJXAIOU",[[-1,4849,"\n"]],[4849,4849],[4848,4848]]],[1550467254427,["gjx16@GJXAIOU",[[-1,4848,"\n"]],[4848,4848],[4847,4847]]],[1550467256166,["gjx16@GJXAIOU",[[-1,4832,"这些分层协议盒并不都是完美的。"]],[4847,4847],[4832,4832]]],[1550467256228,["gjx16@GJXAIOU",[[-1,4832,"\n"]],[4832,4832],[4831,4831]]],[1550467256288,["gjx16@GJXAIOU",[[-1,4831,"\n"]],[4831,4831],[4830,4830]]],[1550467257134,["gjx16@GJXAIOU",[[-1,4821,"在逻辑上是合理的。"]],[4830,4830],[4821,4821]]],[1550467259477,["gjx16@GJXAIOU",[[1,4821,"在逻辑上是合理的。"]],[4821,4821],[4830,4830]]],[1550467261469,["gjx16@GJXAIOU",[[1,4831,"\n"]],[4830,4830],[4831,4831]]],[1550467292724,["gjx16@GJXAIOU",[[-1,4947,"第1章 概 述9[](http://www.52im.net/ \"即时通讯网 - 即时通讯开发者社区！\")"]],[4947,5000],[4947,4947]]],[1550467304371,["gjx16@GJXAIOU",[[1,4911,"**"],[1,4945,"**"]],[4911,4945],[4911,4949]]],[1550467307230,["gjx16@GJXAIOU",[[-1,4952,"\n"]],[4952,4952],[4951,4951]]],[1550467307675,["gjx16@GJXAIOU",[[-1,4951,"\n"]],[4951,4951],[4950,4950]]],[1550467365723,["gjx16@GJXAIOU",[[-1,5281,"。如果操作系统允许多任务，那么就可以同时为多个客户服务。"]],[5281,5309],[5281,5281]]],[1550467366167,["gjx16@GJXAIOU",[[1,5281,"."]],[5281,5281],[5282,5282]]],[1550467369738,["gjx16@GJXAIOU",[[-1,5281,"."]],[5282,5282],[5281,5281]]],[1550467370277,["gjx16@GJXAIOU",[[1,5281,"。"]],[5281,5281],[5282,5282]]],[1550467388627,["gjx16@GJXAIOU",[[-1,5284,"对服务器，而不是对客户进行分类的原因是因为对于一个客户来说，它通常并不能够辨别自己是与一个重复型服务器或并发型服务器进行对话。"]],[5284,5347],[5284,5284]]],[1550467399635,["gjx16@GJXAIOU",[[-1,5323,"我们将在11.12节对UDP对其服务器产生的影响进行详细讨论，并在18.11节对TCP对其服务器的影响进行讨论。"]],[5323,5379],[5323,5323]]],[1550467402405,["gjx16@GJXAIOU",[[-1,5285,"\n"]],[5285,5285],[5284,5284]]],[1550467402970,["gjx16@GJXAIOU",[[-1,5284,"\n"]],[5284,5284],[5283,5283]]],[1550467486186,["gjx16@GJXAIOU",[[-1,5602,"到1992年为止，知名端口号介于1～255之间。256～1023之间的端口号通常都是由Unix系统占用，以提供一些特定的Unix服务—也就是说，提供一些只有Unix系统才有的、而其他操作系统可能不提供的服务。现在IANA管理1～1023之间所有的端口号。\n"]],[5602,5730],[5602,5602]]],[1550467486706,["gjx16@GJXAIOU",[[-1,5602,"\n"]],[5602,5602],[5601,5601]]],[1550467499090,["gjx16@GJXAIOU",[[-1,5602,"Internet扩展服务与Unix特定服务之间的一个差别就是Telnet和Rlogin。它们二者都允许通过计算机网络登录到其他主机上。Telnet是采用端口号为23的TCP/IP标准且几乎可以在所有操作系统上进行实现。相反，Rlogin最开始时只是为Unix系统设计的（尽管许多非Unix系统现在也提供该服务），因此在80年代初，它的有名端口号为513。\n"]],[5602,5780],[5602,5602]]],[1550467518923,["gjx16@GJXAIOU",[[-1,5603,"客户端通常对它所使用的端口号并不关心，只需保证该端口号在本机上是唯一的就可以了。客户端口号又称作临时端口号（即存在时间很短暂）。这是因为它通常只是在用户运行该客户程序时才存在，而服务器则只要主机开着的，其服务就运行。\n"]],[5603,5712],[5603,5603]]],[1550467521788,["gjx16@GJXAIOU",[[-1,5603,"\n"]],[5603,5603],[5602,5602]]],[1550467530842,["gjx16@GJXAIOU",[[-1,5676,"我们可以在后面看见许多这样的给临时端口分配端口号的例子。"]],[5676,5704],[5676,5676]]],[1550467536746,["gjx16@GJXAIOU",[[-1,5678,"10TCP/IP详解，卷1：协议[](http://www.52im.net/ \"即时通讯网 - 即时通讯开发者社区！\")"]],[5678,5739],[5678,5678]]],[1550467571388,["gjx16@GJXAIOU",[[-1,5678,"\n\nSolaris 2.2是一个很有名的例外。通常TCP和UDP的缺省临时端口号从32768开始。\n\n在E.4节中，我们将详细描述系统管理员如何对配置选项进行修改以改变这些缺省"]],[5678,5766],[5678,5678]]],[1550467571821,["gjx16@GJXAIOU",[[-1,5677,"\n"]],[5678,5678],[5677,5677]]],[1550467574829,["gjx16@GJXAIOU",[[-1,5677,"项。"]],[5679,5679],[5677,5677]]],[1550467575114,["gjx16@GJXAIOU",[[-1,5678,"\n"]],[5677,5677],[5676,5676]]],[1550467587461,["gjx16@GJXAIOU",[[-1,5955,"这些端口号介于1～1023之间，一些应用程序（如有名的Rlogin，26.2节）将它作为客户与服务器之间身份认证的一部分。\n"]],[5954,6016],[5954,5954]]],[1550467588013,["gjx16@GJXAIOU",[[-1,5955,"\n"]],[5954,5954],[5953,5953]]],[1550467623731,["gjx16@GJXAIOU",[[-1,5972,"究竟是谁控制着TCP/IP协议族，又是谁在定义新的标准以及其他类似的事情？事实上，有四个小组在负责Internet技术。\n\n1.  Internet协会（ISOC，Internet Society）是一个推动、支持和促进Internet不断增长和发展的专业组织，它把Internet作为全球研究通信的基础设施。\n2.  Internet体系结构委员会（IAB，Internet Architecture Board）是一个技术监督和协调的机构。它由国际上来自不同专业的15个志愿者组成，其职能是负责Internet标准的最后编辑和技术审核。IAB隶属于ISOC。\n3.  Internet工程专门小组（IETF，Internet Engineering Task Force）是一个面向近期标准的组织，它分为9个领域（应用、寻径和寻址、安全等等）。IETF开发成为Internet标准的规范。为帮助IETF主席，又成立了Internet工程指导小组（IESG, Internet Engineering Steering Group）。\n4.  Internet研究专门小组（IRIF，Internet Research Task Force）主要对长远的项目进行研究。\n\nIRTF和IETF都隶属于IAB。文献[Crocker 1993]提供了关于Internet内部标准化进程更为详细的信息，同时还介绍了它的早期历史。"]],[5972,6583],[5972,5972]]],[1550467624699,["gjx16@GJXAIOU",[[-1,5973,"\n"]],[5972,5972],[5971,5971]]],[1550467625266,["gjx16@GJXAIOU",[[-1,5972,"\n"]],[5971,5971],[5970,5970]]],[1550467669283,["gjx16@GJXAIOU",[[-1,6067,"RFC的篇幅从1页到200页不等。每一项都用一个数字来标识，如RFC 1122，数字越大说明RFC的内容越新。\n\n所有的RFC都可以通过电子邮件或用FTP从Internet上免费获取。如果发送下面这份电子邮件，就会收到一份获取RFC的方法清单：\n\n第1章 概 述11[](http://www.52im.net/ \"即时通讯网 - 即时通讯开发者社区！\")\n\nTo: rfc-info@ISI.EDU \nSubject: getting rfcs \nhelp: ways_to_get_rfcs\n\n最新的RFC索引总是搜索信息的起点。这个索引列出了RFC被替换或局部更新的时间。下面是一些重要的RFC文档："]],[6067,6370],[6067,6067]]],[1550467699836,["gjx16@GJXAIOU",[[-1,6196,"    当这个RFC被更新时(通常每年至少更新一次），索引清单会列出RFC 1340被替换的时间。"]],[6199,6245],[6196,6196]]],[1550467700276,["gjx16@GJXAIOU",[[-1,6196,"\n"]],[6196,6196],[6195,6195]]],[1550467701444,["gjx16@GJXAIOU",[[-1,6195,"\n"]],[6195,6195],[6194,6194]]],[1550467714771,["gjx16@GJXAIOU",[[-1,6069,"1.  赋值RFC（Assigned Numbers RFC）列出了所有Internet协议中使用的数字和常数。至本书出版时为止，最新RFC的编号是1340[Reynolds 和 Postel 1992]。所有著名的Internet端口号都列在这里。\n2.  Internet正式协议标准，目前是RFC 1600[Postel 1994]。这个RFC描述了各种Internet协议的标准化现状。每种协议都处于下面几种标准化状态之一：标准、草案标准、提议标准、实验标准、信息标准和历史标准。另外，对每种协议都有一个要求的层次、必需的、建议的、可选择的、限制使用的或者不推荐的。\n\n    与赋值RFC一样，这个RFC也定期更新。请随时查看最新版本。\n3.  主机需求RFC，1122和1123[Braden 1989a, 1989b]。RFC 1122针对链路层、网络层和运输层；RFC 1123针对应用层。这两个RFC对早期重要的RFC文档作了大量的纠正和解释。如果要查看有关协议更详细的细节内容，它们通常是一个入口点。它们列出了协议中关于“必须”、“应该”、“可以”、“不应该”或者“不能”等特性及其实现细节。文献[Borman 1993b]提供了有关这两个RFC的实用内容。RFC 1127[Braden 1989c]对工作小组开发主机需求RFC过程中的讨论内容和结论进行了非正式的总结。\n4.  路由器需求RFC，目前正式版是RFC 1009[Braden and Postel 1987]，但一个新版已接近完成[Almquist 1993]。它与主机需求RFC类似，但是只单独描述了路由器的需求。\n"]],[6068,6771],[6068,6068]]],[1550469512184,["gjx16@GJXAIOU",[[1,6070,"\n"]],[6068,6068],[6069,6069]]],[1550469512764,["gjx16@GJXAIOU",[[1,6071,"\n"]],[6069,6069],[6070,6070]]],[1550470670166,["gjx16@GJXAIOU",[[-1,6071,"\n"]],[6070,6070],[6069,6069]]],[1550470670333,["gjx16@GJXAIOU",[[-1,6070,"\n"]],[6069,6069],[6068,6068]]],[1550470685262,["gjx16@GJXAIOU",[[-1,6089,"有一些标准的简单服务几乎每种实现都要提供。在本书中我们将使用其中的一些服务程序，而客户程序通常选择Telnet。图1-9描述了这些服务。从该图可以看出，"]],[6089,6165],[6089,6089]]],[1550470697628,["gjx16@GJXAIOU",[[-1,6234,"(http://www.52im.net/ \"即时通讯网 - 即时通讯开发者社区！\")"]],[6234,6277],[6234,6234]]],[1550470761356,["gjx16@GJXAIOU",[[-1,6258,"12TCP/IP详解，卷1：协议[](http://www.52im.net/ \"即时通讯网 - 即时通讯开发者社区！\")"]],[6258,6319],[6258,6258]]],[1550470782587,["gjx16@GJXAIOU",[[-1,6653,"internet意思是用一个共同的协议族把多个网络连接在一起。而Internet指的是世界范围内通过TCP/IP互相通信的所有主机集合（超过100万台）。Internet是一个internet，但internet不等于Internet。\n"]],[6652,6771],[6652,6652]]],[1550470828406,["gjx16@GJXAIOU",[[-1,6503,"在图1-3中，我们列举了一个由两个网络组成的互联网——一个以太网和一个令牌环网。在1.4节和1.9节中，我们讨论了世界范围内的互联网—Internet，以及集中分配IP地址的需要（InterNIC），还讨论了知名端口号（IANA）。internet这个词第一个字母是否大写决定了它具有不同的含义。\n"]],[6502,6651],[6502,6502]]],[1550470828807,["gjx16@GJXAIOU",[[-1,6504,"\n"]],[6502,6502],[6501,6501]]],[1550470830526,["gjx16@GJXAIOU",[[-1,6503,"\n"]],[6503,6503],[6502,6502]]],[1550470859941,["gjx16@GJXAIOU",[[-1,6517,"既成事实标准的TCP/IP软件实现来自于位于伯克利的加利福尼亚大学的计算机系统研究小组。从历史上看，软件是随同4.x BSD系统（Berkeley Software Distribution）的网络版一起发布的。它的源代码是许多其他实现的基础。\n\n图1-10列举了各种BSD版本发布的时间，并标注了重要的TCP/IP特性。列在左边的BSD网络版，其所有的网络源代码可以公开得到：包括协议本身以及许多应用程序和工具（如Telnet和FTP）。\n\n[![第1章 概述_TCP/IP详解卷1 协议_即时通讯网(52im.net)](http://docs.52im.net/extend/docs/book/tcpip/vol1/1/images2/52im_11.png)](http://www.52im.net/ \"即时通讯网 - 即时通讯开发者社区！\")\n\n图1-10 不同的BSD版及其重要的TCP/IP特性\n\n在本书中，我们将使用“伯克利派生系统”来指SunOS 4.x、SVR4以及AIX 3.2等那些基于伯克利源代码开发的系统。这些系统有很多共同之处，经常包含相同的错误。\n\n起初关于Internet的很多研究现在仍然在伯克利系统中应用——新的拥塞控制算法（21.7节）、多播（12.4节）、“长肥管道”修改（24.3节）以及其他类似的研究。\n"]],[6516,7093],[6516,6516]]],[1550470860774,["gjx16@GJXAIOU",[[-1,6517,"\n"]],[6516,6516],[6515,6515]]],[1550470873189,["gjx16@GJXAIOU",[[1,6535,"**"],[1,6578,"**"]],[6535,6578],[6535,6582]]],[1550470956955,["gjx16@GJXAIOU",[[-1,6616,"前者有时称作“Berkeley socket”，表明它是从伯克利版发展而来的。后者起初是由AT&T开发的，有时称作XTI（X/Open运输层接口），以承认X/Open这个自己定义标准的国际计算机生产商所做的工作。XTI实际上是TLI的一个超集。\n"]],[6616,6739],[6616,6616]]],[1550470964972,["gjx16@GJXAIOU",[[-1,6617,"第1章 概 述13[](http://www.52im.net/ \"即时通讯网 - 即时通讯开发者社区！\")\n\n本书不是一本编程方面的书，但是偶尔会引用一些内容来说明TCP/IP的特性，不管大多数的API（socket）是否提供它们。所有关于socket和TLI的编程细节请参阅文献[Stevens 1990]。"]],[6617,6773],[6617,6617]]],[1550471108590,["gjx16@GJXAIOU",[[-1,6797,"(http://www.52im.net/ \"即时通讯网 - 即时通讯开发者社区！\")\n\n图1-11 本书中所有例子运行的测试网络，所有的IP地址均从140.252开始编址\n\n在这个图中（作者的子网），大多数的例子都运行在下面四个系统中。图中所有的IP地址属于B类地址，网络号为140.252。所有的主机名属于.tuc.noao.edu这个域（noao代表National Optical Astronomy Observatories，tuc代表Tu cson）。例如，右下方的系统有一个完整的名字:svr4.tuc.noao.edu，其IP地址是：140.252.13.34。每个方框上方的名称是该主机运行的操作系统。这一组系统和网络上的主机及路由器运行于不同的TCP/IP实现。\n\n需要指出的是，noao.edu这个域中的网络和主机要比图1-11中的多得多。这里列出来的只是本书中将要用到的系统。\n\n在3.4节中，我们将描述这个网络所用到的子网形式。在4.6节中将介绍sun与netb之间的拨号SLIP的有关细节。2.4节将详细讨论SLIP。"]],[6797,7271],[6797,6797]]],[1550471152124,["gjx16@GJXAIOU",[[-1,6813,"本章快速地浏览了TCP/IP协议族，介绍了在后面的章节中将要详细讨论的许多术语和协议。\n\n14TCP/IP详解，卷1：协议[](http://www.52im.net/ \"即时通讯网 - 即时通讯开发者社区！\")"]],[6813,6919],[6813,6813]]],[1550471153005,["gjx16@GJXAIOU",[[-1,6814,"\n"]],[6813,6813],[6812,6812]]],[1550471153956,["gjx16@GJXAIOU",[[-1,6813,"\n"]],[6812,6812],[6811,6811]]],[1550471160556,["gjx16@GJXAIOU",[[1,6854,"\n"]],[6854,6854],[6855,6855]]],[1550471185957,["gjx16@GJXAIOU",[[1,6883,"\n"]],[6883,6883],[6884,6884]]],[1550471242980,["gjx16@GJXAIOU",[[-1,6924,"一个互联网是网络的网络。构造互联网的共同基石是路由器，它们在IP层把网络连在一起。第一个字母大写的Internet是指分布在世界各地的大型互联网，其中包括1万多个网络和超过100万台主机。\n"]],[6923,7018],[6923,6923]]],[1550471257526,["gjx16@GJXAIOU",[[-1,6924,"\n"]],[6925,6925],[6924,6924]]],[1550471265080,["gjx16@GJXAIOU",[[1,6813,"- "]],[6813,6813],[6815,6815]]],[1550471269064,["gjx16@GJXAIOU",[[1,6857,"- "]],[6857,6857],[6859,6859]]],[1550471271569,["gjx16@GJXAIOU",[[1,6888,"- "]],[6888,6888],[6890,6890]]],[1550471273984,["gjx16@GJXAIOU",[[1,6930,"- "]],[6930,6930],[6932,6932]]],[1550471282189,["gjx16@GJXAIOU",[[-1,7040,"#### 习题\n\n1.  请计算最多有多少个A类、B类和C类网络号。\n2.  用匿名FTP（见27.3节）从主机nic.merit.edu上获取文件nsfnet/statistics/history.netcount。该文件包含在NSFNET网络上登记的国内和国外的网络数。画一坐标系，横坐标代表年，纵坐标代表网络总数的对数值。纵坐标的最大值是习题1.1的结果。如果数据显示一个明显的趋势，请估计按照当前的编址体制推算，何时会用完所有的网络地址（3.10节讨论解决该难题的建议）。\n3.  获取一份主机需求RFC拷贝[Braden 1989a]，阅读有关应用于TCP/IP协议族每一层的稳健性原则。这个原则的参考对象是什么？\n4.  获取一份最新的赋值RFC拷贝。“quote of the day”协议的有名端口号是什么？哪个RFC对该协议进行了定义？\n5.  如果你有一个接入TCP/IP互联网的主机帐号，它的主IP地址是多少？这台主机是否接入了Internet？它是多接口主机吗？\n6.  获取一份RFC 1000的拷贝，了解RFC这个术语从何而来。\n7.  与Internet协会联系，isoc@isoc.org或者+1703 648 9888，了解有关加入的情况。\n8.  用匿名FTP从主机is.internic.net处获取文件about-internic/information-about-the-internic。"]],[7040,7657],[7040,7040]]]],null,"gjx16@GJXAIOU"]]}